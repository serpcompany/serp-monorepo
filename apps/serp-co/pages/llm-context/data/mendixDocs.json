[
  {
    "owner": "mendix",
    "repo": "docs",
    "content": "TITLE: Creating Mendix Objects from GitHub API Response\nDESCRIPTION: This snippet retrieves data from the GitHub API, transforms the response to JSON, and then maps over the `items` array to create `GitHubUser` Mendix objects.  It utilizes `Promise.all` to ensure all promises are resolved before returning the list of Mendix objects.  The `createGitHubUser` function encapsulates the logic for creating a new Mendix object and setting its attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction SearchGitHubUser(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    var url = \"https://api.github.com/search/users?q=\" + query;\n    return fetch(url)\n        .then(function(response) { return response.json() })\n        .then(function(jsonData) {\n            logger.debug(\"count\", jsonData.total_count);\n            var gitHubUsers = jsonData.items.map(createGitHubUser);\n            return Promise.all(gitHubUsers);\n        });\n\n    function createGitHubUser(user) {\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: \"HowTo.GitHubUser\",\n                callback: function(mxObject) {\n                    mxObject.set(\"login\", user.login);\n                    mxObject.set(\"avatar_url\", user.avatar_url);\n                    resolve(mxObject);\n                },\n                error: function(e) {\n                    reject(\"Could create object:\" + error.message);\n                }\n            });\n        });\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Basic TextToSpeech Parameter Check\nDESCRIPTION: Initial implementation of the TextToSpeech function that checks if text parameter is provided and returns a promise.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return Promise.resolve(false);\n    }\n    return Promise.reject(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix Objects from GitHub API Results\nDESCRIPTION: Enhanced JavaScript action that not only fetches GitHub user data but also creates Mendix objects from the results. It maps specific user properties (login and avatar_url) to corresponding attributes in the Mendix object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); \n    const jsonData = await response.json();\n    logger.debug(\"count\", jsonData.total_count);\n    const gitHubUsers = jsonData.items.map(createGitHubUser);\n    return Promise.all(gitHubUsers);\n\n    function createGitHubUser(user) {\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: \"HowTo.GitHubUser\",\n                callback: function(mxObject) {\n                    mxObject.set(\"login\", user.login);\n                    mxObject.set(\"avatar_url\", user.avatar_url);\n                    resolve(mxObject);\n                },\n                error: function(e) {\n                    reject(\"Could create object:\" + error.message);\n                }\n            });\n        });\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix Objects from GitHub User Data with JavaScript\nDESCRIPTION: This JavaScript function, `createGitHubUser`, creates a Mendix object for each GitHub user. It leverages the Mendix Client API (`mx.data.create`) wrapped in a promise to handle asynchronous object creation. It dynamically sets the attributes of the Mendix object based on the data from the GitHub user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n        function createGitHubUser(user) {\n            // Wrap the Mendix Client API in a promise\n            return new Promise(function (resolve, reject) {\n                mx.data.create({\n                    entity: userEntity,\n                    callback: function(mxObject) {\n                        // Dynamically set attributes\n                        mxObject.getAttributes()\n                            .forEach(function(attributeName) {\n                                var attributeValue = user[attributeName];\n                                if (attributeValue) {\n                                    mxObject.set(attributeName, attributeValue);\n                                }\n                            });\n                        resolve(mxObject);\n                    },\n                    error: function(error) {\n                        reject(\"Could create object:\" + error.message);\n                    }\n                });\n            });\n        }\n```\n\n----------------------------------------\n\nTITLE: Response JSON From Mendix Package Build API\nDESCRIPTION: Example JSON response from the Mendix Deploy API after initiating a package build. The response contains a PackageId that can be used to track the status of the build process through subsequent API calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"PackageId\" :  \"b3d14e53-2654-4534-b374-9179a69ef3cf\"\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing and Formatting: Date Conversion\nDESCRIPTION: Comprehensive set of functions to convert between date values and string representations, including UTC variants and epoch time conversions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: Mendix Expression\nCODE:\n```\nparseDateTime(stringValue)\n```\n\n----------------------------------------\n\nTITLE: Setting Extra JVM Parameters for Remote Debugging in Mendix\nDESCRIPTION: This code snippet demonstrates how to add extra JVM parameters to the Mendix server configuration, specifically enabling remote debugging on port 5005. This allows a Java IDE to connect and debug Java actions executed by the Mendix Runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-java-actions/debug-java-actions-remotely.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\"\n```\n\n----------------------------------------\n\nTITLE: Microflow List Commit Optimization\nDESCRIPTION: This snippet describes how to optimize commits within loops in Mendix microflows.  By collecting items to be committed in a list and performing a list commit after the loop, the number of individual commit operations is reduced, minimizing database load and improving performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/community-best-practices-for-app-performance.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"Do commits after the loop in a list commit. \n    If needed, create a list named `<Entity>_CommitList` before the loop and collect the items to be committed there.\"\n```\n\n----------------------------------------\n\nTITLE: Creating Text Box Preview Component for Studio Pro\nDESCRIPTION: Preview component implementation for Studio Pro's design mode, providing a mock representation of the widget with sample data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ReactElement, createElement } from \"react\";\nimport { TextBoxPreviewProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\nexport function preview({ textAttribute }: TextBoxPreviewProps): ReactElement {\n    return <TextInput value={textAttribute} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Reading NFC Tag Information\nDESCRIPTION: This JavaScript action reads information from an NFC tag. It returns a promise that resolves with the decoded text from the NFC tag's payload when a tag is scanned. The action sets up an event listener for NFC tags and un-registers the event listener after receiving a tag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nreturn new Promise(resolve => {\n    NfcManager.registerTagEvent(tag => {\n        NfcManager.unregisterTagEvent();\n        const text = Ndef.text.decodePayload(tag.ndefMessage[0].payload);\n        resolve(text);\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Importing React and React Native Components in TypeScript\nDESCRIPTION: This snippet imports necessary components from React and React Native for building the collapsible widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Children, Component, ReactNode, createElement, ComponentClass } from \"react\";\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View, Platform, TouchableOpacity, TouchableNativeFeedback } from \"react-native\";\n```\n\n----------------------------------------\n\nTITLE: Executing Microflows Using Java in Mendix\nDESCRIPTION: This Java snippet demonstrates how to execute a microflow, passing parameters and obtaining a return value, then storing the result in an object and committing it. The `formatString` method takes an input string and context as parameters, executes the microflow `MyFirstModule.FormatString`, and returns the formatted string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/java-api-tutorial.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nprivate static String formatString(String inputString, IContext context) throws CoreException\n{\n\tMap<String,Object> parameters = new HashMap<String, Object>();\n\tparameters.put(\"inputString\", inputString);\n\tString formattedString = (String) Core.execute(context, \"MyFirstModule.FormatString\", parameters);\n\treturn formattedString;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nString formattedString = formatString(\"this is an unformatted string\", context);\ntestObject.setTestString(context, formattedString);\nCore.commit(context, testObject.getMendixObject());\n```\n\n----------------------------------------\n\nTITLE: Using NOT Logical Filter Helper in TypeScript\nDESCRIPTION: Shows how to invert a condition using the NOT logical operator. The condition specified will be negated in the filter results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_38\n\nLANGUAGE: typescript\nCODE:\n```\nconst filterCondition = not(\n    startsWith(attribute(this.props.myAttributeA.id), literal(\"X\")),\n);\n```\n\n----------------------------------------\n\nTITLE: Creating React Text Input Display Component\nDESCRIPTION: React functional component that renders a text input element. This component handles the display logic and receives value prop from the container component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { createElement, ReactElement } from \"react\";\n\nexport interface TextInputProps {\n    value: string;\n}\n\nexport function TextInput({ value }: TextInputProps): ReactElement {\n    return <input type=\"text\" value={value} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders by Customer City Using XPath in Mendix\nDESCRIPTION: XPath constraint that filters Orders to show only those associated with Customers from Rotterdam. Uses the Order_Customer association to traverse to the Customer entity and access its City attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_4\n\nLANGUAGE: xpath\nCODE:\n```\n[Sales.Order_Customer/Sales.Customer/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Initializing a Microflow and Adding Activities in C#\nDESCRIPTION: This example demonstrates how to initialize a microflow with a boolean parameter and add activities to it. It performs a transaction, creates a new microflow, initializes it, and then adds activities either after the start event or before existing activities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\npublic void Initialize(IModel currentApp, params IActionActivity[] actionActivities)\n{\n    var module = currentApp.Root.GetModules().Single(m => m.Name == \"MyFirstModule\");\n\n    using var transaction = currentApp.StartTransaction(\"Create and initialize microflow\");\n          \n    var microflow = currentApp.Create<IMicroflow>();\n    microflow.Name = \"Microflow\";\n    module!.AddDocument(microflow);\n\n    _microflowService.Initialize(microflow, (\"boolParameter\", DataType.Boolean));\n\n    for (int i = 0; i < activities.Length; i++)\n    {\n        var activity = activities[i];\n        if (i == 0)\n            _microflowService.TryInsertAfterStart(microflow, activity);\n        else\n            _microflowService.TryInsertBeforeActivity(activity, activities[i-1]);\n    }\n\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Iterating and Updating Multiple Objects in a Microflow Loop\nDESCRIPTION: Shows how to loop through a list of orders and update their status from 'Processing' to 'Complete' using a Loop and Change Object activity\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_1\n\nLANGUAGE: Microflow Configuration\nCODE:\n```\nIterate over OrderList\nChange OrderStatus to Complete\nCommit Changes\n```\n\n----------------------------------------\n\nTITLE: Enhanced NFC Tag Reading Implementation in JavaScript\nDESCRIPTION: Comprehensive JavaScript code for reading NFC tags with platform-specific handling for both Android and iOS. Includes error handling, session management, and proper cleanup of NFC resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the app.\nimport { Big } from \"big.js\";\nimport { BackHandler, NativeModules, Platform } from \"react-native\";\nimport NfcManager, { Ndef } from \"react-native-nfc-manager\";\n\n// BEGIN EXTRA CODE\n// END EXTRA CODE\n\n/**\n * @returns {Promise.<string>}\n */\nexport async function ReadNFCTag() {\n    // BEGIN USER CODE\n    if (!NativeModules.NfcManager) {\n        throw new Error(\"The NfcManager module is not available in your app.\");\n    }\n    if (Platform.OS === \"android\") {\n        const enabled = await NfcManager.isEnabled();\n        if (!enabled) {\n            throw new Error(\"NFC is not enabled\");\n        }\n    }\n\n    return new Promise(async(resolve, reject) => {\n        let success = false;\n        await NfcManager.start({\n            onSessionClosedIOS: () => {\n                if (!success) {\n                    reject(new Error(\"NFC session closed\"));\n                }\n            }\n        });\n        if (Platform.OS === \"android\") {\n            BackHandler.addEventListener(\"hardwareBackPress\", async () => {\n                await NfcManager.unregisterTagEvent();\n                await NfcManager.stop();\n                return reject(new Error(\"NFC was canceled by the user\"));\n            });\n            NfcManager.onStateChanged(\n                async event => {\n                    if (event.state === \"off\" || event.state === \"turning_off\") {\n                        await NfcManager.unregisterTagEvent();\n                        await NfcManager.stop();\n                        return reject(new Error(\"NFC was disabled by the user\"));\n                    }\n                }\n            )\n        }\n        NfcManager.registerTagEvent(async tag => {\n            success = true;\n            await NfcManager.unregisterTagEvent();\n            await NfcManager.stop();\n            const text = Ndef.text.decodePayload(tag.ndefMessage[0].payload);\n            resolve(text);\n        }, \"Read NFC\");\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix Objects from GitHub User Data\nDESCRIPTION: This JavaScript code creates a new Mendix object based on a specified entity type, then dynamically maps attributes from a GitHub user object to the corresponding attributes in the Mendix object. It uses Promise-based pattern for asynchronous handling and the mx.data.create API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nreturn new Promise(function (resolve, reject) {\n    mx.data.create({\n        entity: userEntity,\n        callback: function(mxObject) {\n            // Dynamically set attributes\n            mxObject.getAttributes()\n                .forEach(function(attributeName) {\n                    const attributeValue = user[attributeName];\n                    if (attributeValue) {\n                        mxObject.set(attributeName, attributeValue);\n                    }\n                });\n            resolve(mxObject);\n        },\n        error: function(error) {\n            reject(\"Could create object:\" + error.message);\n        }\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Executing Microflows in Mendix Java Actions\nDESCRIPTION: This example demonstrates how to execute a microflow in Mendix using Java, specifically calling the 'FormatString' microflow in 'MyFirstModule'. It highlights importing and using a proxy for better readability. Ensure the appropriate Mendix model and Java action set up are in place to execute this. It showcases the import and invocation of the microflow and committing of the resulting string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/java-api-tutorial.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmyfirstmodule.proxies.microflows.Microflows.formatString(getContext(), \"this is an unformatted string\");\n```\n\nLANGUAGE: java\nCODE:\n```\nimport static myfirstmodule.proxies.microflows.Microflows.formatString;\n…\npublic class …\n…\nString formattedString = formatString(getContext(), \"this is an unformatted string\");\n…\n```\n\nLANGUAGE: java\nCODE:\n```\nimport static myfirstmodule.proxies.microflows.Microflows.formatString;\n…\npublic class …\n…\n// BEGIN USER CODE\nString formattedString = formatString(getContext(), \"this is an unformatted string\");\ntestObject.setTestString(context, formattedString);\nCore.commit(context, testObject.getMendixObject());\n// END USER CODE\n…\n```\n\n----------------------------------------\n\nTITLE: Conditional Expression Using 'if-then-else' in Mendix\nDESCRIPTION: This expression determines shipping costs based on package weight. If the weight is less than 1.00, shipping costs are set to 0.00, otherwise they are set to 5.00. It demonstrates the use of conditional logic in Mendix expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nif $package/weight < 1.00 then 0.00 else 5.00`\n```\n\n----------------------------------------\n\nTITLE: Promise-based Confirmation Dialog\nDESCRIPTION: Implementation of a confirmation dialog using Mendix UI API wrapped in a Promise that resolves to a boolean value based on user action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nfunction AskConfirmation(question) {\n    // BEGIN USER CODE\n    return new Promise(function (resolve) {\n        mx.ui.confirmation({\n            content: question,\n            handler: function() {\n                resolve(true);\n            },\n            onCancel: function() {\n                resolve(false);\n            }\n        });\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing REST Request to GitHub API\nDESCRIPTION: This snippet implements a REST request to the GitHub API to search for users based on the provided `query` parameter. It uses the `fetch` API to make the HTTP request, transforms the response to JSON, logs the total count of results to the console, and currently returns an empty array. Browser compatibility is handled by the Mendix Runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction SearchGitHubUser(query) { \n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    var url = \"https://api.github.com/search/users?q=\" + query;\n    return fetch(url) // Fetch returns a promise, gets the url and wait for result\n        .then(function(response) { return response.json() }) // Transform to JSON\n        .then(function(jsonData) { // Process JSON data\n            // log to the console a successful result\n            logger.debug(\"count results\", jsonData.total_count);\n            return []; // return an empty list for now...\n        });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JavaScript Objects using Mendix Client API\nDESCRIPTION: This example demonstrates how to create objects in Mendix using the Client API. It highlights usage of callbacks for successful creation and error handling, emphasizing the structured object management provided by Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmx.data.create({\n    entity: \"MyFirstModule.Cat\",\n    callback: function(object) {\n        console.log(\"Object created on server\");\n    },\n    error: function(error) {\n        console.error(\"Could not commit object:\", error);\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Authenticating to Azure Postgres with Managed Identity\nDESCRIPTION: Shell command to connect to Azure Postgres database using managed identity and access token authentication\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_22\n\nLANGUAGE: shell\nCODE:\n```\npsql \"host=<hostname> port=5432 dbname=postgres user=<user-email> password=$(az account get-access-token --resource-type oss-rdbms --output tsv --query accessToken) sslmode=require\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Sorting\nDESCRIPTION: Examples of implementing single and multiple attribute sorting in a datasource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nif (this.props.attributeAge.sortable) {\n    // sort by age ascending\n    const sortInstrs = [\n        [this.props.attributeAge.id, \"asc\"]\n    ]; \n    this.props.myDataSource.setSortOrder(sortInstrs);\n} else {\n    console.warn(\"Can't apply sorting. Attribute Age is not sortable\");\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nif (this.props.attributeAge.sortable && this.props.attributeName.sortable) {\n    // sort by age descending, and then by name ascending (within age groups)\n    const sortInstrs = [\n        [this.props.attributeAge.id, \"desc\"],\n        [this.props.attributeName.id, \"asc\"],\n    ]; \n    this.props.myDataSource.setSortOrder(sortInstrs);\n} else {\n    console.warn(\"Can't apply sorting. Attribute Age and/or Name is not sortable\");\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nthis.props.myDataSource.setSortOrder(undefined);\n```\n\n----------------------------------------\n\nTITLE: Defining Client Certificates and Passwords for Local Configuration in Mendix\nDESCRIPTION: This snippet illustrates how to specify client certificates and their corresponding passwords in Mendix application settings. It is essential for setting up client-side authentication when the application is run locally. The example demonstrates the JSON format expected for configuration values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/certificates/use-a-client-certificate.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n{\"Module.WebService1\": \"D:\\\\App\\\\Mx1.pfx\", \"www.server-to-contact.com\": \"D:\\\\App\\\\Mx2.pfx\"}\n```\n\n----------------------------------------\n\nTITLE: Implementing Text-To-Speech Action in Mendix using JavaScript\nDESCRIPTION: This JavaScript code demonstrates how to create a Text-To-Speech action using the Web SpeechSynthesis API in Mendix. It checks for required parameters and browser support. The code handles asynchronous behavior by using promises to manage the return values based on speech synthesis completion or errors. It is crucial to verify that the 'speechSynthesis' API is available in the user's browser as it's experimental and not universally supported.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return false;\n    }\n    if (\"speechSynthesis\" in window === false) {\n        throw new Error(\"Browser does not support text to speech\");\n    }\n    return new Promise(function(resolve, reject) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.onend = function() {\n            resolve(true);\n        };\n        utterance.onerror = function(event) {\n            reject(\"An error occurred during playback: \" + event.error);\n        };\n        window.speechSynthesis.speak(utterance);\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: OQL Query for Aggregated Order Amounts in Mendix Dataset\nDESCRIPTION: This OQL query calculates the aggregated total order amount for all orders of a customer within a specific customer group. It joins Customer and Order entities, filters by a parameter, groups results by customer name, and selects the name and sum of total amounts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/data-sets.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nFROM CRM.Customers As CustomerObj\nINNER JOIN CustomerObj/CRM.Orders_Customer/CRM.Orders As OrderObj\nWHERE CustomerObj/CRM.Customer_Group = $ParGroup\nGROUP BY CustomerObj/Name\nSELECT CustomerObj/Name As Name, SUM(OrderObj/TotalAmount) As TotalAmount\n```\n\n----------------------------------------\n\nTITLE: Dynamic Attribute Mapping in JavaScript Action\nDESCRIPTION: Enhanced implementation that dynamically discovers and sets entity attributes from the GitHub API response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); \n    const jsonData = await response.json();\n    logger.debug(\"count\", jsonData.total_count);\n    const gitHubUsers = jsonData.items.map(createGitHubUser);\n    return Promise.all(gitHubUsers);\n\n    function createGitHubUser(user) {\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: \"HowTo.GitHubUser\",\n                callback: function(mxObject) {\n                    // Dynamically set attributes\n                    mxObject.getAttributes()\n                        .forEach(function(attributeName) {\n                            var attributeValue = user[attributeName];\n                            if (attributeValue) {\n                                mxObject.set(attributeName, attributeValue);\n                            }\n                        });\n                    resolve(mxObject);\n                },\n                error: function(error) {\n                    reject(\"Could not create object:\" + error.message);\n                }\n            });\n        });\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: SQL Query Execution with JDBC Connection\nDESCRIPTION: Java code demonstrating SQL query execution using JDBC connection from Mendix's internal connection pool. Includes connection handling and result processing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic java.util.List<IMendixObject> executeAction() throws Exception\n{\n    // BEGIN USER CODE\n    logger.info(\"executeAction: \" + this.Sql);\n    List<IMendixObject> resultList = null;\n    resultList = Core.dataStorage().executeWithConnection(connection -> {...});\n    return resultList;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Platform-Shipped JS Libraries with Mendix\nDESCRIPTION: This snippet depicts how to synchronously load platform-shipped libraries using Mendix. The `require` function is shown to load libraries like mendix/lang, helpful for extending JavaScript actions using available Mendix dependencies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar lang = require(\"mendix/lang\");\n```\n\n----------------------------------------\n\nTITLE: Using If Expression in Mendix Change Variable Activity\nDESCRIPTION: This example demonstrates a simple if expression that evaluates a condition (7 > 6) and returns 'correct' if true, otherwise returns 'incorrect'. It can be used in a Change variable activity to conditionally set a string value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/if-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nif 7 > 6 then 'correct' else 'incorrect'\n```\n\n----------------------------------------\n\nTITLE: General Properties Section for Drop-Down\nDESCRIPTION: This snippet references the general properties for the drop-down widget, providing guidelines on captions and the impact on user experience. Clear instructions help in improving accessibility and functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/general-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS IAM Policy for Postgres Database Authentication\nDESCRIPTION: JSON policy that defines permissions for a Postgres Admin IAM role to connect to an RDS database. This policy grants the specific IAM role connection permissions to the database using the rds-db:connect action with a resource ARN that identifies the specific database instance and user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"AllowCreateTenants\",\n            \"Action\": [\n                \"rds-db:connect\"\n            ],\n            \"Resource\": [\n                \"arn:aws:rds-db:<aws_region>:<account_id>:dbuser:<database_id>/<database_user>\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Mendix Operator Deployment Workflow\nDESCRIPTION: Step-by-step process for deploying a Mendix application in a private cloud namespace using the Mendix Operator. Involves creating Custom Resources (CR) for build, database, storage, and networking configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n# Deployment Steps:\n# 1. Build CR - Creates Docker image\n# 2. StorageInstance CR for Database\n# 3. StorageInstance CR for File Storage\n# 4. Ingress CR for Application Routing\n```\n\n----------------------------------------\n\nTITLE: Configuring XML Export Microflow in Mendix\nDESCRIPTION: This Mendix microflow retrieves customer data from the database, creates an XML document, applies an XML mapping, and enables file download. The process includes retrieving customer records, creating an XMLDocument object, setting document properties, and implementing export functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/export-xml-documents.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nMicroflow: Customers_Export\n1. Start\n2. Retrieve (From database, Customer entity)\n3. Create object (XMLDocument)\n   - Set XMLDocument_Customer reference to $CustomerList\n   - Set Name attribute to 'customers.xml'\n4. Export with mapping (ExportCustomersMapping)\n   - Parameter: NewXMLDocument\n   - Output: NewXMLDocument\n5. Download file (NewXMLDocument)\n6. End\n```\n\n----------------------------------------\n\nTITLE: Creating Input Object in Mendix Microflow\nDESCRIPTION: This snippet outlines the steps to create a new Input object using the CreateInput microflow in Mendix. It involves adding a Create object activity, selecting the Input entity, and setting the return value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/use-call-rest-action-in-microflow.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\n1. Double-click CreateInput in App Explorer\n2. Drag Create object activity to microflow\n3. Double-click the activity\n4. Select Input entity\n5. Double-click End event\n6. Set Return value to $NewInput\n```\n\n----------------------------------------\n\nTITLE: Querying Customer by Order ID (Through Association) Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve the same customer as the previous query, but using the full association path. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_8\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order/Sales.Order/ID = 124123512341]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Sales.Customer_Order/Sales.Order/ID = 124123512341]\n```\n\n----------------------------------------\n\nTITLE: Passing setValue to onChange in TextBox.tsx\nDESCRIPTION: This code snippet demonstrates how to pass the setValue method of props.textAttribute to the onChange prop of TextInput. This ensures that updates to the input field are propagated to the Mendix client.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n        const value = props.textAttribute.value || \"\";\n        return <TextInput \n            value={value} \n            onChange={props.textAttribute.setValue} \n            tabIndex={props.tabIndex} \n        />;\n    }\n```\n\n----------------------------------------\n\nTITLE: Preview Mode Setup for TextBox Widget in React\nDESCRIPTION: This snippet configures a preview functionality for the TextBox widget in React. It displays a preview of the TextBox using the current TextInput component without event handlers for updates, with a dependency on text attribute props.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Component, createElement, ReactNode } from \"react\";\nimport { TextBoxPreviewProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\ndeclare function require(name: string): string;\n\nexport class preview extends Component<TextBoxPreviewProps> {\n    render(): ReactNode {\n        const value = `[${this.props.textAttribute}]`;\n        return <TextInput value={value} />;\n    }\n}\n\nexport function getPreviewCss(): string {\n    return require(\"./ui/TextBox.css\");\n}\n```\n\n----------------------------------------\n\nTITLE: Describing XPath Query Operators - XPath\nDESCRIPTION: This snippet lists various XPath operators that can be applied in query constraints for Mendix applications, detailing their uses and expected return values. Key parameters include operators like '=', '!=', '<', '>', and logical operators 'and', 'or'. Expected inputs are price comparisons, and outputs are boolean values indicating the result of the comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n| `=` | Equal to | `price = 9.80` | true if price is 9.80, false if price is 9.90 |\n| `!=` | Not equal to | `price != 9.80` | true if price is 9.90, false if price is 9.80 |\n| `<` | Less than | `price < 9.80` | true if price is 9.70, false if price is 9.80 |\n| `<=` | Less than or equal to | `price <= 9.80` | true if price is 9.80, false if price is 9.90 |\n| `>` | Greater than | `price > 9.80` | true if price is 9.90, false if price is 9.80 |\n| `>=` | Greater than or equal to | `price >= 9.80` | true if price is 9.80, false if price is 9.70 |\n| `or` | Or | `price = 9.80 or price = 9.70` | true if price is 9.80, false if price is 9.60 |\n| `and` | And | `price = 9.80 and amount = 1` | true if price is 9.80 and amount is 1, false if price is 9.70 and amount is 1, false if price is 9.80 and amount is 2, false if price is 9.70 and amount is 2 |\n```\n\n----------------------------------------\n\nTITLE: Selection Type Handling Example in TypeScript\nDESCRIPTION: Demonstrates how to handle different selection types in a widget by checking the type property to determine if a single or multi-selection is configured, and setting the selection appropriately.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nif (selection?.selection === undefined) {\n    return \"None\";\n}\n\nif (selection.type === \"Single\") {\n    selection.setSelection(objectItem);\n} else {\n    selection.setSelection([objectItem]);\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Styles Attribute to Container Component (TSX)\nDESCRIPTION: This TypeScript snippet adds a private `styles` attribute to the container component (`GroupBox.tsx`). It uses the `mergeNativeStyles` function to merge the `defaultStyle` with the `style` prop provided to the widget. This allows the widget to be styled with both default and custom styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_36\n\nLANGUAGE: typescript\nCODE:\n```\nprivate readonly styles = mergeNativeStyles(defaultStyle, this.props.style);\n\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix Objects via JavaScript\nDESCRIPTION: This code snippet shows how to create a new Mendix object of a specific entity type using JavaScript. It uses the `mx.data.create` function to create the object on the server and defines callback functions to handle success and error scenarios.  It requires the fully qualified entity name as input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmx.data.create({\n    entity: \"MyFirstModule.Cat\",\n    callback: function(object) {\n        console.log(\"Object created on server\");\n    },\n    error: function(error) {\n        console.error(\"Could not commit object:\", error);\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Calculating Square Root in Mendix Using Java\nDESCRIPTION: The 'sqrt' function calculates the square root of a number. It accepts numeric input parameters but will return an error if a negative input is provided. This function is commonly used in mathematical applications requiring square root calculations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nsqrt(9)\n```\n\nLANGUAGE: java\nCODE:\n```\n3\n```\n\n----------------------------------------\n\nTITLE: Replacing All Occurrences with replaceAll Function in Java\nDESCRIPTION: The replaceAll function replaces all occurrences of a regular expression with another string. It takes three string parameters: the string to search in, the regular expression to match, and the replacement string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nreplaceAll('this is a string with 75 some numbers 234 thrown in', '([0-9])', 'NUMBER')\n```\n\nLANGUAGE: java\nCODE:\n```\n'this is a string with NUMBERNUMBER some numbers NUMBERNUMBERNUMBER thrown in'\n```\n\n----------------------------------------\n\nTITLE: Project Directory Setup Commands\nDESCRIPTION: Commands to create and initialize a new project directory with npm.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir my-app-generator\n$ cd my-app-generator\n$ npm init --yes\n```\n\n----------------------------------------\n\nTITLE: Implementing Render Method for GroupBox Widget in React Native\nDESCRIPTION: This code defines the UI structure of a GroupBox widget using React Native components. It creates a container with a header section and content area using View and Text components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>Header caption</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            <View style={this.styles.content}>\n                <Text>Content</Text>\n            </View>\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Order Entity with Enumeration\nDESCRIPTION: Example of creating an Order entity with an enumeration type attribute for OrderStatus (Open, Processing, Complete).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/create-a-basic-data-layer.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\nEntity: Order\nAttributes:\n- TotalAmount (Decimal)\n- OrderDate (DateTime)\n- OrderStatus (Enumeration)\n\nEnumeration: OrderStatus\nValues:\n- Open\n- Processing\n- Complete\n```\n\n----------------------------------------\n\nTITLE: Consume REST API with Mendix\nDESCRIPTION: This section details how to retrieve data from a legacy system using REST in a Mendix application. It involves constructing a data model, creating a search entity and page, and using a microflow with the REST `GET` Java Action to call the API. The retrieved data is then processed and displayed in the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/integrating-a-legacy-system-into-a-mendix-app.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Enhancing NFC Scanning in React Native JavaScript\nDESCRIPTION: This JavaScript code snippet enhances the NFC scanning capabilities in a Mendix application using React Native. It ensures that NFC scanning can be switched off on Android and handles session closures on iOS. The code also includes error handling for when NFC is disabled or the back button is pressed on Android. Dependencies include 'react-native-nfc-manager' for managing NFC-related operations and 'react-native' modules such as BackHandler and NativeModules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the app.\nimport { Big } from \"big.js\";\nimport { BackHandler, NativeModules, Platform } from \"react-native\";\nimport NfcManager, { Ndef } from \"react-native-nfc-manager\";\n\n// BEGIN EXTRA CODE\n// END EXTRA CODE\n\n/**\n * @returns {Promise.<string>}\n */\nexport async function ReadNFCTag() {\n    // BEGIN USER CODE\n    if (!NativeModules.NfcManager) {\n        throw new Error(\"The NfcManager module is not available in your app.\");\n    }\n    if (Platform.OS === \"android\") {\n        const enabled = await NfcManager.isEnabled();\n        if (!enabled) {\n            throw new Error(\"NFC is not enabled\");\n        }\n    }\n\n    return new Promise(async(resolve, reject) => {\n        let success = false;\n        await NfcManager.start({\n            onSessionClosedIOS: () => {\n                if (!success) {\n                    reject(new Error(\"NFC session closed\"));\n                }\n            }\n        });\n        if (Platform.OS === \"android\") {\n            BackHandler.addEventListener(\"hardwareBackPress\", async () => {\n                await NfcManager.unregisterTagEvent();\n                await NfcManager.stop();\n                return reject(new Error(\"NFC was canceled by the user\"));\n            });\n            NfcManager.onStateChanged(\n                async event => {\n                    if (event.state === \"off\" || event.state === \"turning_off\") {\n                        await NfcManager.unregisterTagEvent();\n                        await NfcManager.stop();\n                        return reject(new Error(\"NFC was disabled by the user\"));\n                    }\n                }\n            )\n        }\n        NfcManager.registerTagEvent(async tag => {\n            success = true;\n            await NfcManager.unregisterTagEvent();\n            await NfcManager.stop();\n            const text = Ndef.text.decodePayload(tag.ndefMessage[0].payload);\n            resolve(text);\n        }, \"Read NFC\");\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Import String Mapping in Java\nDESCRIPTION: Java action implementation for importing JSON strings using Mendix Core integration API. The action takes JSON input string, import mapping name, and result entity type as parameters to import and return the first imported object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-connector-kit.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nInputStream inputStream = new ByteArrayInputStream(InputString.getBytes(StandardCharsets.UTF_8));\nImportMappingConfig config = ImportMappingConfig.create();\nIImportObject mappingResult = Core.integration().importStream(inputStream, config);\nreturn mappingResult.getMendixObject();\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Text-to-Speech Implementation with Promise and Event Handlers in Mendix\nDESCRIPTION: Complete JavaScript action implementation using Promises with onend and onerror event handlers to properly handle asynchronous speech synthesis completion and error handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return false;\n    }\n    if (\"speechSynthesis\" in window === false) {\n        throw new Error(\"Browser does not support text to speech\");\n    }\n    // const utterance = new SpeechSynthesisUtterance(text);\n    // window.speechSynthesis.speak(utterance);\n    // return true;\n    return new Promise(function(resolve, reject) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.onend = function() {\n            resolve(true);\n        };\n        utterance.onerror = function(event) {\n            reject(\"An error occurred during playback: \" + event.error);\n        };\n        window.speechSynthesis.speak(utterance);\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring REST Service Operation Microflow\nDESCRIPTION: Creates a microflow to retrieve an order by ID and prepare a JSON response for the REST service\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-rest-service.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nMicroflow PRS_GetGetOrderByID with OrderID retrieval and JSON export\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers by City with JOIN in OQL\nDESCRIPTION: An OQL query example that retrieves customer first names where their address city equals 'Rotterdam'. It demonstrates using the WHERE clause with a joined table relationship to filter based on related data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-where-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nINNER JOIN Sales.Customer/Sales.Customer_Address/Sales.Address\nWHERE Sales.Address/City = 'Rotterdam'\n```\n\n----------------------------------------\n\nTITLE: Verifying TypeScript Installation\nDESCRIPTION: Command to check the installed version of TypeScript compiler.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ tsc --version\nVersion 4.6.2 (or higher)\n```\n\n----------------------------------------\n\nTITLE: Accessing List Attribute Value in TypeScript\nDESCRIPTION: Demonstrates accessing a read-only editable attribute value of the first item from myDataSource in a widget's props. Assumes myDataSource and myAttributeOnDatasource are configured properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst attributeValue = this.props.myAttributeOnDatasource(this.props.myDataSource.items[0]);\n```\n\n----------------------------------------\n\nTITLE: Implementing REST Request to GitHub API\nDESCRIPTION: Implementation of a REST request to the GitHub user search API using the Fetch API. The code fetches user data from GitHub based on the provided query parameter and logs the result count.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); // Fetch returns a promise, gets the url and wait for result\n    const jsonData = await response.json(); // Transform to JSON\n    logger.debug(\"count results\", jsonData.total_count); // log to the console a successful result\n    return []; // return an empty list for now...\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes SecretProviderClass YAML\nDESCRIPTION: This YAML defines a Kubernetes SecretProviderClass, used to fetch secrets from AWS Secrets Manager using the CSI driver. It specifies the provider as `aws` and defines the `objects` to retrieve, mapping secret keys to aliases for use within the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: <{MendixApp CR name}>\n  annotations:\n    privatecloud.mendix.com/environment-class: \"true\"\nspec:\n  provider: aws\n  parameters:\n    objects: |\n      - objectName: \"<{The secret name that you copied in step 5 above}>\"\n        objectType: \"secretsmanager\"\n        jmesPath:\n        - path: '\"database-type\"'\n          objectAlias: \"database-type\"\n        - path: '\"database-jdbc-url\"'\n          objectAlias: \"database-jdbc-url\"\n        - path: '\"database-username\"'\n          objectAlias: \"database-username\"\n        - path: '\"database-password\"'\n          objectAlias: \"database-password\"\n        - path: '\"database-host\"'\n          objectAlias: \"database-host\"\n        - path: '\"database-name\"'\n          objectAlias: \"database-name\"\n        - path: '\"storage-service-name\"'\n          objectAlias: \"storage-service-name\"\n        - path: '\"storage-endpoint\"'\n          objectAlias: \"storage-endpoint\"\n        - path: '\"storage-access-key-id\"'\n          objectAlias: \"storage-access-key-id\"\n        - path: '\"storage-secret-access-key\"'\n          objectAlias: \"storage-secret-access-key\"\n        - path: '\"storage-bucket-name\"'\n          objectAlias: \"storage-bucket-name\"\n        - path: '\"storage-perform-delete\"'\n          objectAlias: \"storage-perform-delete\"\n        - path: '\"storage-use-ca-certificates\"'\n          objectAlias: \"storage-use-ca-certificates\"\n        - path: '\"mx-admin-password\"'\n          objectAlias: \"mx-admin-password\"\n        - path: '\"mx-debugger-password\"'\n          objectAlias: \"mx-debugger-password\"\n        # Example: use MyFirstModule.MyConstant constant value from AWS Secrets Manager\n        #- path: '\"mx-const-MyFirstModule.MyConstant\"'\n        #  objectAlias: \"mx-const-MyFirstModule.MyConstant\"\n        # Example: use com.mendix.storage.s3.EncryptionKeys custom setting from AWS Secrets Manager\n        #- path: '\"com.mendix.storage.s3.EncryptionKeys\"'\n        #  objectAlias: \"mx-runtime-com.mendix.storage.s3.EncryptionKeys\"\n```\n\n----------------------------------------\n\nTITLE: Using Literal Helper for Filtering in TypeScript\nDESCRIPTION: Shows examples of using the literal helper with different data types for creating filter conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\nconst falsy = literal(false); // for Boolean\nconst bob = literal(\"Bob\"); // for String, HashString, Enumeration\nconst meaningOfLife = literal(new BigJS(42)); // for AutoNumber, Integer, Long, Decimal\nconst now = literal(new Date()); // for DateTime\nconst undef = literal(undefined);\n```\n\n----------------------------------------\n\nTITLE: Defining DynamicValue Interface in TypeScript for Mendix Pluggable Widgets\nDESCRIPTION: TypeScript definition of the DynamicValue interface used to represent values that can change over time. The interface uses a discriminated union with ValueStatus enum to represent three possible states: Available, Unavailable, and Loading, each with specific value handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport type DynamicValue<X> =\n    | { readonly status: ValueStatus.Available; readonly value: X }\n    | { readonly status: ValueStatus.Unavailable; readonly value: undefined }\n    | { readonly status: ValueStatus.Loading; readonly value: X | undefined };\n    \nexport const enum ValueStatus {\n    Loading = \"loading\",\n    Unavailable = \"unavailable\",\n    Available = \"available\"\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking Mendix API in Jenkins\nDESCRIPTION: This code snippet demonstrates how to call a Mendix REST API using a Groovy script in Jenkins to get the latest revision number. It uses the HTTP Request Plugin and Credentials Binding Plugin. The username and API key are included in the custom headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/implement-cicd-pipeline.md#2025-04-21_snippet_0\n\nLANGUAGE: Groovy\nCODE:\n```\n/*\n * Assume necessary plugins are installed and configured in Jenkins\n */\n\ndef response = httpRequest(\n    acceptType: 'APPLICATION_JSON',\n    httpMode: 'GET',\n    url: 'https://api.mendix.com/v1/app/{appId}/branch/{branchName}/latestCommit',\n    customHeaders: [\n        [name: 'Mendix-Username', value: '${username}'],\n        [name: 'Mendix-ApiKey', value: '${apiKey}']\n    ]\n)\n\necho \"Latest revision ID is: ${response}\"\n\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ServiceAccount\nDESCRIPTION: These shell commands create and annotate a Kubernetes ServiceAccount. The service account is created within a specified namespace and annotated to be used with Mendix Private Cloud and associated with an AWS IAM role via annotation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n <{Kubernetes namespace}> create serviceaccount <{environment name}>\nkubectl -n <{Kubernetes namespace}> annotate serviceaccount <{environment name}> privatecloud.mendix.com/environment-account=true\nkubectl -n <{Kubernetes namespace}> annotate serviceaccount <{environment name}> eks.amazonaws.com/role-arn=<{aws role ARN}>\n```\n\n----------------------------------------\n\nTITLE: Configuring AndroidManifest.xml for Deep Linking (XML - Android)\nDESCRIPTION: This snippet shows how to configure the AndroidManifest.xml file to enable deep linking by adding an intent filter with the specified schema and host.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-deep-link.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<intent-filter android:label=\"@string/app_name\">\n    <action android:name=\"android.intent.action.VIEW\" />\n    <category android:name=\"android.intent.category.DEFAULT\" />\n    <category android:name=\"android.intent.category.BROWSABLE\" />\n    <data android:scheme=\"app\" android:host=\"myapp\" />\n</intent-filter>\n```\n\n----------------------------------------\n\nTITLE: Implementing PostgreSQL-Specific Query for Date Generation\nDESCRIPTION: PostgreSQL-specific SQL query that generates a list of dates for all first Mondays of the month between a specified date range. This uses common table expressions (CTEs) to find the dates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-datastorage-api.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nWITH RECURSIVE months AS (\n    SELECT date_trunc('month', ?::date) firstdayofmonth\n    UNION ALL\n    SELECT firstdayofmonth + interval '1 month'\n    FROM months\n    WHERE firstdayofmonth < date_trunc('month', ?::date)\n),\nmondays AS (\n    SELECT firstdayofmonth, (firstdayofmonth + ((8 - extract(isodow from firstdayofmonth))::int % 7 || ' day')::interval)::date as monday\n    FROM months\n)\nSELECT monday\nFROM mondays\nWHERE monday >= ?::date and  monday <= ?::date\nORDER BY monday\n```\n\n----------------------------------------\n\nTITLE: Creating Association Between Customer and Order\nDESCRIPTION: Configuration of a one-to-many association between Customer and Order entities with delete behavior settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/create-a-basic-data-layer.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\nAssociation: Order_Customer\nMultiplicity: [1 - *]\nDelete Behavior:\n- On Delete of Customer: Delete associated Orders\n- On Delete of Order: Keep Customer\n```\n\n----------------------------------------\n\nTITLE: Filtering a List of Orders on Minimum Total Price Using XPath - Mendix\nDESCRIPTION: This snippet covers the method to filter the order data grid based on a minimum total price using an XPath constraint. It explains the steps necessary to input the constraint into the data grid's settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/filtering-data-on-an-overview-page.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Select the **Order** data grid and in the **Properties** pane on the right, click the **XPath Constraint** field and enter the following expression: `[TotalPrice >= 50]`.\n```\n\n----------------------------------------\n\nTITLE: Configuring REST Service Location with String Template\nDESCRIPTION: Demonstrates how to construct a REST service endpoint location using a string template with dynamic parameters\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\n{1}/users/{2}\n```\n\n----------------------------------------\n\nTITLE: Validating Mendix Input Object in JavaScript Actions\nDESCRIPTION: This code snippet demonstrates how to validate a Mendix input object (MxObject) within a JavaScript action. It checks if the object is null, inherits from System.FileDocument, and has content. This ensures that the object is a valid file document with content before proceeding further. It also checks for allowed file extensions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {MxObject} audioFile\n */\nfunction PlayAudio(audioFile) {\n    // BEGIN USER CODE\n    if (!audioFile) {\n        return Promise.reject(\"The 'Audio file' parameter can not be empty\");\n    }\n    if (!audioFile.isA(\"System.FileDocument\") && !audioFile.inheritsFrom(\"System.FileDocument\")) {\n        return Promise.reject(\"The 'Audio file' parameter should inherit from System.FileDocument\");\n    }\n    if (!audioFile.get(\"HasContents\")) {\n        return Promise.reject(\"The 'Audio file' parameter does not have any content\");\n    }\n    var allowedExtensions = [\"mp3\", \"wav\", \"ogg\"]\n    var fileName = audioFile.get(\"Name\");\n    var dotIndex = fileName.lastIndexOf(\".\");\n    var extension = fileName.substring(dotIndex + 1).toLowerCase();\n    if (dotIndex === -1 || allowedExtensions.indexOf(extension) === -1) {\n        return Promise.reject(\"The 'Audio file' parameter only supports files with extension .mp3, .wav or .ogg\");\n    }\n    /* implementation */\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Customers without Orders Over 30000 in Java\nDESCRIPTION: This Java query retrieves `Sales.Customer` objects who have not placed any orders with a `TotalPrice` greater than 30,000, including customers with no orders. It employs the `not()` function to verify the absence of orders exceeding the specified price.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[not(Sales.Customer_Order/Sales.Order/TotalPrice > 30000)]\n```\n\n----------------------------------------\n\nTITLE: Passing Content to Display Component\nDESCRIPTION: This TypeScript snippet modifies the render method in `GroupBox.tsx` to pass the `content` prop to the `WrappedGroupBox` component. It destructures the props and passes the `content` as children to the `WrappedGroupBox`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_18\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n        const { content, headerCaption, style } = this.props;\n\n        return (\n            <WrappedGroupBox headerCaption={headerCaption} style={style}>\n                {content}\n            </WrappedGroupBox>\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination in a React Component\nDESCRIPTION: Complete example of implementing pagination in a React component using ListValue properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport default class PagedWidget extends Component<PagedWidgetProps> {\n    constructor(props: PagedWidgetProps) {\n        super(props);\n\n        props.myDataSource.setLimit(props.pageSize);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Manipulating a Mendix App Using TypeScript\nDESCRIPTION: This TypeScript script demonstrates how to create a new Mendix app, add an entity to its domain model, and commit the changes to the repository. Ensure all prerequisites, including setting up the Mendix SDK and personal access token, are configured. The script requires the 'mendixmodelsdk' and 'mendixplatformsdk' packages. It takes no inputs but outputs logs about the created app and changes made.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-your-first-script.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { domainmodels } from \"mendixmodelsdk\";\nimport { MendixPlatformClient } from \"mendixplatformsdk\";\n\nasync function main() {\n    const client = new MendixPlatformClient();\n\n    const app = await client.createNewApp(`NewApp-${Date.now()}`, {\n        repositoryType: \"git\",\n    });\n\n    const workingCopy = await app.createTemporaryWorkingCopy(\"main\");\n    const model = await workingCopy.openModel();\n\n    const domainModelInterface = model.allDomainModels().filter(dm => dm.containerAsModule.name === \"MyFirstModule\")[0];\n    const domainModel = await domainModelInterface.load();\n\n    const entity = domainmodels.Entity.createIn(domainModel);\n    entity.name = `NewEntity_${Date.now()}`;\n\n    await model.flushChanges();\n\n    await workingCopy.commitToRepository(\"main\");\n}\n\nmain().catch(console.error);\n```\n\n----------------------------------------\n\nTITLE: Evaluating Conditional Expression in Mendix Java\nDESCRIPTION: This snippet demonstrates the use of an if expression to set a string value based on a condition. It compares two numbers and returns 'correct' if the condition is true, otherwise 'incorrect'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/if-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nif 7 > 6 then 'correct' else 'incorrect'\n```\n\n----------------------------------------\n\nTITLE: Implementing Base64 Encoding Pre-Processor in Java\nDESCRIPTION: This Java code implements a pre-processor that converts Iris flower measurements from a Mendix entity to a float array, then encodes it as a Base64 string for input to a machine learning model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n    @java.lang.Override\n    public IMendixObject executeAction() throws Exception\n    {\n      this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.Iris.initialize(getContext(), __Parameter);\n    \n      // BEGIN USER CODE\n      // 1. convert entity object to float array\n      float[] inputFeature = new float[4];\n      inputFeature[0] = Parameter.getsepalLength().floatValue();\n      inputFeature[1] = Parameter.getsepalWidth().floatValue();\n      inputFeature[2] = Parameter.getpetalLength().floatValue();\n      inputFeature[3] = Parameter.getpetalWidth().floatValue();\n      // 2. convert input feature array to base 64\n      InputStream is = MLKit.toInputStream(inputFeature);\n      String base64 = MLKit.toBase64(is);\n      // 3. create output entity object\n      IMendixObject outputObject = Core.instantiate(getContext(), \"Iris_RandomForest.ML_Input_Entity_Iris_RF_ML_Model\");\n      outputObject.setValue(getContext(), \"Float_input\", base64);\n      return outputObject;\n      // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Creating Snowflake Security Integration with Azure OAuth\nDESCRIPTION: SQL commands to create and configure a Snowflake security integration for external OAuth authentication with Azure. Includes setting up the integration type, OAuth parameters, and user role configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/snowflake-sso.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\ncreate security integration external_oauth_azure\n    type = external_oauth\n    enabled = true\n    external_oauth_type = azure\n    external_oauth_issuer = 'https://sts.windows.net/TenantID/'\n    external_oauth_jws_keys_url = 'https://login.microsoftonline.com/TenantID/discovery/v2.0/keys'\n    external_oauth_audience_list = ('Application ID URI')\n    external_oauth_token_user_mapping_claim = 'upn'\n    external_oauth_snowflake_user_mapping_attribute = 'login_name';\ndesc security integration external_oauth_azure;\nALTER USER TestUser1 SET DEFAULT_ROLE = ROLETESTA;\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year, Month, Day, and Hour Parameters\nDESCRIPTION: Creates a datetime object using year, month, day, and hour parameters. Returns date set to specified hour of given date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: XPath Query: Weekday from DateAttribute (Studio Pro)\nDESCRIPTION: This XPath query retrieves objects where the weekday of the `DateAttribute` is 6 (Friday) in the local time zone. It is used in Mendix Studio Pro to filter data based on the day of the week.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\"[weekday-from-dateTime(DateAttribute) = 6]\"\n```\n\n----------------------------------------\n\nTITLE: Importing OData Contracts from a File\nDESCRIPTION: Instructions for importing a metadata contract file directly into Studio Pro without using the Catalog are provided. This is useful when deploying locally or opting against Catalog registration. The process involves exporting the contract and adding it as a Consumed OData Service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/without-mendix-cloud.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Export the contract from the publishing app and download it to your computer.\n\n   Go to **Settings** tab of the **Published OData Service** document, and click **Export** next to the **Metadata** field. Save the `$metadata.xml` file.\n\n2. Import the contract into the consuming app.\n\n   Right-click the **App Explorer** where you would like to add the service, then click **Add other** > **Consumed OData Service**. Select the `$metadata.xml` file you exported.\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Parameter Validation in JavaScript Action\nDESCRIPTION: Initial implementation that checks if the query parameter is provided and returns an empty list if not.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    throw new Error(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Born in Last Week Using Range Parameter in Mendix OQL\nDESCRIPTION: Demonstrates a SQL query using a range parameter to select customers born in the last week. This example shows the context in which range parameters are typically used.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangeend.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT FirstName AS First, LastName AS Last, Name AS Name, Birthday AS BDay, CustomerType AS Type FROM Sales.Customer\nWHERE Birthday IN ($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Policy for Secrets Access in AWS\nDESCRIPTION: This JSON defines an IAM policy that grants permissions to access specific secrets within AWS Secrets Manager. The policy allows the actions `secretsmanager:GetSecretValue` and `secretsmanager:DescribeSecret` on the specified secret ARN.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:GetSecretValue\",\n                \"secretsmanager:DescribeSecret\"\n            ],\n            \"Resource\": [\n                \"<{The secret ARN that you copied in step 5 above}>\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Conditional Breakpoint Expression in Mendix\nDESCRIPTION: This code snippet demonstrates how to set a breakpoint condition in Mendix Studio Pro using a microflow expression. The breakpoint will only be triggered if the current user's name matches the specified username. This is useful for debugging in production environments without affecting other users.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/debug-microflows-and-nanoflows/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"$currentUser/name = 'YourUserName'\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Validation Logic in TextBox Component\nDESCRIPTION: TypeScript methods to implement custom validation for the TextBox widget. It sets up a validator function that checks if the field is required and returns an error message when empty.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\ncomponentDidMount(): void {\n    this.props.textAttribute.setValidator(this.validator.bind(this));\n}\n\nprivate validator(value: string | undefined): string | undefined {\n    const { requiredMessage } = this.props;\n    if (requiredMessage && requiredMessage.value && !value) {\n        return requiredMessage.value;\n    }\n    return;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Hours in Java\nDESCRIPTION: The `addHours` function adds a specified number of hours to a date. It takes the initial date and the hour count as input parameters and returns the new date and time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\naddHours(dateTime(2007, 1, 1, 1, 1, 1), 25)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 02 02:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Mendix SSO in Java\nDESCRIPTION: Use the CreateAccessTokenAuthorizationHeaderList method to authenticate with a Mendix SSO-enabled OData service. This allows consumers to access OData services that use Mendix SSO for authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/consumed-odata-services/consumed-odata-service.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nCreateAccessTokenAuthorizationHeaderList\n```\n\n----------------------------------------\n\nTITLE: Importing React Native and NFC Manager Modules for NFC Support\nDESCRIPTION: This code imports necessary modules for checking NFC support, including Big.js for handling large numbers, React Native's NativeModules, and the NFC Manager library.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Big } from \"big.js\";\nimport { NativeModules } from \"react-native\";\nimport NfcManager from \"react-native-nfc-manager\";\n```\n\n----------------------------------------\n\nTITLE: Copying FileDocuments in Mendix Java Actions\nDESCRIPTION: This snippet details how to copy 'Attachments' from one 'GenericObject' to another in Mendix. It involves retrieving `Attachments` using a helper method with an Xpath query and copying content via InputStreams. Ensure Mendix entities and Java configurations are properly set. It includes declaring proxies and handling attachments using Mendix Core APIs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/java-api-tutorial.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic static List<IMendixObject> getAttachments(GenericObject object, IContext context) throws CoreException\n{\n\tString attachmentEntityName = Attachment.entityName;\n\tString relationName = Attachment.MemberNames.Attachment_GenericObject.toString();\n\tString currentObjectID = object.getGUID();\n\tString query = String.format(\"//%s[%s=$currentid]\", attachmentEntityName, relationName);\n\treturn Core.createXPathQuery(query)\n\t\t.setVariable(\"currentid\", currentObjectID)\n\t\t.execute(context);\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nAttachment newAttachment;\nInputStream inputStream;\nfor (IMendixObject iMendixObject: getAttachments(sourceObject, context))\n{\n\tinputStream = Core.getFileDocumentContent(iMendixObject);\n\tnewAttachment = Attachment.create(context);\n\tnewAttachment.setAttachment_GenericObject(destinationObject);\n\tCore.storeFileDocumentContent(context, newAttachment.getMendixObject(), (String) iMendixObject.getValue(system.proxies.Document.MemberNames.Name.toString()),  inputStream);\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Accessibility for Input Widgets in TypeScript\nDESCRIPTION: This snippet modifies the render function to include accessibility features such as setting IDs, required status, and error handling for screen readers. Key dependencies include React and the Mendix widget framework. Required parameters are 'id', 'required', and 'hasError'. This enables better screen reader compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const value = this.props.textAttribute.value || \"\";\n    const validationFeedback = this.props.textAttribute.validation;\n    const required = !!(this.props.requiredMessage && this.props.requiredMessage.value);\n    return <Fragment>\n        <TextInput\n            id={this.props.id}\n            value={value}\n            style={this.props.style}\n            className={this.props.class}\n            tabIndex={this.props.tabIndex}\n            disabled={this.isReadOnly()}\n            onLeave={this.onLeaveHandle}\n            required={required}\n            hasError={!!validationFeedback}\n        />\n        <Alert id={this.props.id + \"-error\"}>{validationFeedback}</Alert>\n    </Fragment>;\n}\n```\n\n----------------------------------------\n\nTITLE: NFC Support Check JavaScript Action\nDESCRIPTION: JavaScript action to check if NFC is supported on the current device\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nif (!NativeModules.NfcManager) {\n    throw new Error(\"The NfcManager module is not available in your app.\");\n}\nreturn NfcManager.isSupported();\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiplicity for Associations in Mendix\nDESCRIPTION: This snippet covers how to change the multiplicity of associations in Mendix, allowing users to define one-to-one or many-to-many relationships. It includes instructions for accessing and modifying the properties of an association. Dependencies involve having existing associations created.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/create-a-basic-data-layer.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\nBy default, the domain model editor creates an association with a one-to-many multiplicity. In the above case, a customer can have multiple orders, and an order can only have one customer. If the desired multiplicity is not available in the properties list you have probably drawn the association the wrong way, so you should remove the association and draw it again the other way around.\nTo change the multiplicity, double-click the **Order_Customer** association in order to open its **Properties** dialog box:\n* To change the association to a one-to-one multiplicity, select the **[1 – 1]** option in the **Multiplicity** section; this means that a customer can only have one order and vice versa:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582206.png\" class=\"no-border\" >}}\n\n* To change the association to a many-to-many multiplicity, select the **[* – *]** option in the **Multiplicity** section; this means that a customer can have multiple orders, and an order can have multiple customers:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582205.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton on Air-Gapped Kubernetes\nDESCRIPTION: Commands to install Tekton, Tekton triggers, and interceptors on an air-gapped Kubernetes cluster using the previously prepared manifests and images.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/private-cloud-tekton-airgap.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd ../tekton\ncat tekton.yaml | aip inject-manifest | kubectl apply -f -\ncat tekton-triggers.yaml | aip inject-manifest | kubectl apply -f -\ncat interceptors.yaml | aip inject-manifest | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Login Action in Java for Mendix Runtime\nDESCRIPTION: Creates a custom login action by extending UserAction<ISession> class. This class handles custom login logic using parameters passed during login attempts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/login-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class CustomLoginAction extends UserAction<ISession> {\n  private final Map<String, ?> params;\n\n  public CustomLoginAction(IContext context, java.util.Map<String, ? extends Object> params) {\n    super(context);\n    this.params = params;\n  }\n\n  @Override\n  public ISession executeAction() throws Exception {\n    // perform custom login steps using info received in param\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Ordering GraphQL Results in Mendix\nDESCRIPTION: This query retrieves employee names, ordered by date of birth descending and then by name ascending. It shows how to use the orderBy parameter for sorting results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_1\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  employees(orderBy: [{ dateOfBirth: DESC }, { name: ASC }]) {\n    name\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: String Equality Comparison in Java\nDESCRIPTION: Demonstrates a string equality comparison in Java that returns a Boolean false when comparing two different strings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n\"mystring\" = \"myotherstring\"\n```\n\n----------------------------------------\n\nTITLE: Setting ApplicationRootUrl in Mendix App Custom Configuration (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to set the ApplicationRootUrl variable in the customConfiguration section of a Mendix app deployment. This is necessary for cases where the app needs to know its own URL, such as for SSO or sending emails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  runtime:\n    # Add the ApplicationRootUrl value here\n    customConfiguration: |-\n      {\n        \"ApplicationRootUrl\": \"https://myapp1-dev.mendix.example.com\"\n      }\n```\n\n----------------------------------------\n\nTITLE: Validating Input List of Objects and Attributes in JavaScript\nDESCRIPTION: This code snippet shows how to validate an input list of Mendix objects and an attribute name in a JavaScript action. It checks for null or empty attribute names, null or empty object lists, existence of the attribute in the object, and whether the attribute is numeric, rejecting the promise if any of these checks fail.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {MxObject[]} objectList\n * @param {string} attributeName\n * @returns {Big}\n */\nfunction SumListAttributeValues(objectList, attributeName) {\n    // BEGIN USER CODE\n    if (!attributeName || attributeName.trim() === \"\") {\n        return Promise.reject(\"The 'Attribute name' parameter can not be empty\");\n    }\n    if (!objectList || objectList.length === 0) {\n        // Resolve early, sum of empty is 0\n        return Promise.resolve(new Big(0));\n    }\n    if (!objectList[0].has(attributeName)) {\n        return Promise.reject(\"List of type \" + objectList[0].getEntity() + \" does not have an attribute named \" + attributeName);\n    }\n    if (!objectList[0].isNumeric(attributeName)) {\n        return Promise.reject(\"List of type \" + objectList[0].getEntity() + \" an attribute named \" + attributeName + \" is not numeric\");\n    }\n    /* implementation */\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Handling HTTP Response in Microflows - Mendix\nDESCRIPTION: This snippet outlines the options available for handling HTTP responses in Mendix microflows, including how to store responses in various types, such as HttpResponse, string variables, or file documents. It also provides guidelines on configuring the $latestHttpResponse variable and its expected behavior during REST service calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n* **Apply import mapping** – if the response is JSON or XML, it can be transformed directly into objects using an [import mapping](/refguide9/import-mappings/); the fields that you can choose here are described in the [Import Mapping action](/refguide9/import-mapping-action/)\n* **Store in an HTTP response** – any successful HTTP response can be stored directly in an [HttpResponse](/refguide9/http-request-and-response-entities/#http-response) object, and the [$latestHttpResponse](#latesthttpresponse) variable is also updated\n* **Store in a file document** – if the response contains binary content (for example, a PDF), it can be stored in an object of an entity type which inherits from `System.FileDocument` (see [Images and Files with REST](/refguide9/send-receive-files-rest/) for detailed information working with files with REST)\n* **Store in a string** – if the response is a string (for example, CSV), it can be stored directly in a string variable\n* **Do not store in a variable** - use this option when the call does not return anything useful\n```\n\n----------------------------------------\n\nTITLE: Configuring JVM for Remote Debugging\nDESCRIPTION: This code snippet shows the necessary JVM parameters required to enable remote debugging of Java actions in a Mendix application. These parameters need to be added in the server configuration settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/debug-java-actions/debug-java-actions-remotely.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\n```\n\n----------------------------------------\n\nTITLE: Microflow for Publishing Products\nDESCRIPTION: A microflow that retrieves all products from the database, creates a list of published products, and maps attributes between entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-data-to-other-mendix-apps-using-an-app-service.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nMicroflow PublishProducts\n- Retrieve Products from database\n- Create empty PublishedProduct list\n- Loop through Products\n  - Create new PublishedProduct\n  - Map Name from Product\n  - Map Stock from Product\n  - Add to PublishedProduct list\n- Return PublishedProductList\n```\n\n----------------------------------------\n\nTITLE: Queueing Microflow Execution via Core API - Java\nDESCRIPTION: This snippet demonstrates how to schedule a microflow for background execution using the `Core.microflowCall` method in Java. It shows how to set parameters and specify the task queue to which the microflow should be added. A context and queue name are used to create the task, executing the task will be done with a new, but equivalent context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n```java\nCore.microflowCall(\"AModule.SomeMicroflow\")\n  .withParam(\"Param1\", \"Value1\")\n  .withParam(\"Param2\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\");\n```\n```\n\n----------------------------------------\n\nTITLE: Considerations When Exposing a Web Service\nDESCRIPTION: This snippet highlights important considerations and limitations to keep in mind when exposing a web service in Mendix to avoid issues related to attribute naming and WSDL representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/expose-a-web-service.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nWhen exposing a web service, consider the following things:\n* In Studio Pro some words are reserved for Mendix use (for example, type, Enumeration)\n* Because you may not want to publish a \"_type\" attribute with an underscore (\"`_`\") in front of it, you can change the WSDL name by changing the last column in the selected attribute window\n* If an attribute is renamed after it is published, the name in the WSDL does not automatically change (because that would break the customer's implementation)\n```\n\n----------------------------------------\n\nTITLE: Finding Entity Attribute using Model Root\nDESCRIPTION: Retrieves the first attribute name of the Customer entity from the first module's domain model using the model root property\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/manipulating-existing-models/finding-things-in-the-model.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst model = await workingCopy.openModel();\n\nconst domainModel = model.root.modules[0].domainModel;\nconst customerEntity = domainModel.entities.filter(entity => entity.name === \"Customer\")[0]\n\nconst attributeName = customerEntity.attributes[0].name;\n```\n\n----------------------------------------\n\nTITLE: Defining an Action Property in XML\nDESCRIPTION: This XML snippet shows how to define an action property that can trigger various actions in Mendix, such as calling nanoflows or opening pages. It also allows for defining default values and types for the actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"buttonAction\" type=\"action\">\n\t<caption>On click</caption>\n\t<description>Action to be performed when button is clicked</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Importing External Library in Mendix JavaScript Action\nDESCRIPTION: Example of importing external libraries like pdf-lib in a Mendix JavaScript action. Shows the standard Mendix-generated code structure with import statements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the app.\nimport { Big } from \"big.js\";\nimport { PDFDocument } from \"pdf-lib\"\n\n// BEGIN EXTRA CODE\n```\n\n----------------------------------------\n\nTITLE: Pre-processing Image for ResNet50 Model in Java\nDESCRIPTION: Resizes an input image to 224x224, normalizes pixel values, and converts the result to base64 for input to the ResNet50 model. Uses OpenCV for image processing and custom MLKit utilities for conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nstatic {\n  nu.pattern.OpenCV.loadShared(); //OpenCV initialization\n}\n\n@java.lang.Override\npublic IMendixObject executeAction() throws Exception\n{\n  this.RawImage = this.__RawImage == null ? null : resnet50.proxies.ResNet.initialize(getContext(), __RawImage);\n\n  // BEGIN USER CODE\n  ByteArrayOutputStream bos = new ByteArrayOutputStream();\n  this.RawImage.getContents(getContext(), bos);\n  byte[] binaryImage = bos.toByteArray();\n  Mat img = Imgcodecs.imdecode(new MatOfByte(binaryImage), Imgcodecs.IMREAD_COLOR);\n\n  // 1. resize image\n  Mat rim = new Mat();\n  Size sz = new Size(224, 224); // this is ResNet50 Specific, change as per your current needs.\n  Imgproc.resize(img, rim, sz);\n\n  // 2. normalize image. Again, specific for this ResNet50 model.\n  float[] mean = new float[] {0.485f, 0.456f, 0.406f};\n  float[] std = new float[] {0.229f, 0.224f, 0.225f};\n  float[][][][] inputArray = new float[1][3][224][224];\n  for(int i = 0; i < 224; i++) {\n    for(int j = 0; j < 224; j++) {\n      for(int k = 0; k <= 2; k++) {\n        double[] rawValue = rim.get(i, j);\n        float normalizedValue = (((float) (rawValue[Math.abs(k - 2)] / 255) - mean[k]) / std[k]);\n        inputArray[0][k][i][j] = normalizedValue;\n      }\n    }\n  }    \n  // 3. convert array to base64\n  InputStream is = MLKit.toInputStream(inputArray);\n  String base64 = MLKit.toBase64(is);\n  // 4.create output entity object\n  IMendixObject outputObject = Core.instantiate(getContext(), \"ResNet50.ML_Input_Entity_ResNet50ModelMapping\");\n  outputObject.setValue(getContext(), \"Data\", base64);\n  return outputObject;\n  // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Pluggable Widget Using Mendix Generator\nDESCRIPTION: Use Mendix widget generator to scaffold a new pluggable web widget with TypeScript and React\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nnpx @mendix/generator-widget TextBox\n```\n\n----------------------------------------\n\nTITLE: Generating a Software Bill of Materials using MxBuild on Windows\nDESCRIPTION: This snippet shows how to generate a Software Bill of Materials (SBOM) using MxBuild on Windows. The example assumes the presence of a Mendix app and requires specifying the paths for the Java JDK directory and Java executable. The command employs the `--target=sbom` option to produce the SBOM in the deployment directory of the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mxbuild.md#2025-04-21_snippet_1\n\nLANGUAGE: bat\nCODE:\n```\nmxbuild --target=sbom --java-home=\"C:\\Program Files\\Java\\jdk1.8.0_144\" --java-exe-path=\"C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe\" \"C:\\Users\\username\\Documents\\Mendix\\MyApp\\MyApp.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Querying Orders by Total Price Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all orders for which the total price is less than 50.00 euros using an XPath query. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [TotalPrice < 50.00]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Order[TotalPrice < 50.00]\n```\n\n----------------------------------------\n\nTITLE: Adding CSS Classes to Mendix Widgets\nDESCRIPTION: Example showing how to apply CSS classes to widgets in Mendix applications. Classes can be added in two locations: the Properties panel of Studio Pro or the Properties pop-up window for the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- Example of adding multiple classes to a widget -->\n<div class=\"text-primary background-default text-bold\">Styled content</div>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Samba Share with NTLMFileHandler - Java\nDESCRIPTION: This snippet demonstrates how to connect to a Samba share using NTLMFileHandler within Mendix Cloud environment. It utilizes user credentials and SMB configuration parameters to execute an action that retrieves a file from the Samba share.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/access-a-samba-share-from-the-mxcloud.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic ReadFileFromSMBDrive(SMBConfiguration SMBConfig, FileDocument DocumentParameter1)\n{\n    super();\n    this.SMBConfig = SMBConfig;\n    this.DocumentParameter1 = DocumentParameter1;\n}\n\n@Override\npublic Boolean executeAction() throws Exception\n{\n    // BEGIN USER CODE\n\n    NTLMFileHandler fileHandler = new NTLMFileHandler(getContext(), this.SMBConfig.getDomainName(), this.SMBConfig.getUsername(), this.SMBConfig.getPassword());\n    fileHandler.getSingleFile(this.SMBConfig.getImportFolder(), this.DocumentParameter1.getName(getContext()), this.DocumentParameter1.getMendixObject(), this.DocumentParameter1.getDeleteAfterDownload());;\n\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Order Price Using OQL\nDESCRIPTION: This OQL query calculates the average total price of all paid orders from the Sales.Order entity. Note the use of quotes around 'Order' as it's a reserved word.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: OQL\nCODE:\n```\nSELECT AVG(TotalPrice) FROM Sales.\"Order\" WHERE IsPaid = 1\n```\n\n----------------------------------------\n\nTITLE: Trimming Whitespace in Mendix - Java\nDESCRIPTION: The `trim` function removes leading and trailing whitespace from a given string. It requires a single input parameter, the string to process. The resultant output is a string devoid of external spaces, preserving internal spaces unaffected.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\ntrim('   this is my string   ')\n```\n\n----------------------------------------\n\nTITLE: Using urlDecode() Function in Mendix Expressions\nDESCRIPTION: The urlDecode() function converts a URL-encoded string back to its original form. It is the opposite of urlEncode() and decodes special URL-encoded characters to their original representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_15\n\nLANGUAGE: java\nCODE:\n```\nurlDecode('Hello%2C+world%21')\n```\n\n----------------------------------------\n\nTITLE: XPath Query: Weekday from DateAttribute with Timezone (Studio Pro)\nDESCRIPTION: This XPath query retrieves objects where the weekday of the `DateAttribute` is 6 (Friday) in the 'America/New_York' time zone. The query demonstrates how to use timezone parameter within the `weekday-from-dateTime` function in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n\"[weekday-from-dateTime(DateAttribute, 'America/New_York') = 6]\"\n```\n\n----------------------------------------\n\nTITLE: Styling Progress Circle Widget in JavaScript\nDESCRIPTION: Defines the style properties for the Progress Circle widget, allowing customization of the container, circle appearance (size, border), fill (background color, width, line cap), text, and validation message. The properties correspond to ViewStyle and TextStyle properties in React Native. The default class name to style all progress circles is `com_mendix_widget_native_progresscircle_ProgressCircle`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_progresscircle_ProgressCircle = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  circle: {\n    size: null, // This is the radius of the progress circle.\n    borderWidth: null, // This is the border width of the progress circle.\n    borderColor: null, // This is the color of the progress circle border.\n  },\n  fill: {\n    backgroundColor: null, // This is the color of the circle’s filled portion.\n    width: null, // This is the width of the progress circle.\n    lineCapRounded: null, // This determines if the rotating line’s front tip is rounded off or not.\n  },\n  text: {\n    // This has all TextStyle properties.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Applying Default Styling in a React Native Widget\nDESCRIPTION: Defines a defaultStyle constant to set CSS-like style properties for React Native components. This snippet ensures consistent styling by specifying styling for container, header, and content components, and demonstrates static versus dynamic style allocation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: 4,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    label: {\n        color: \"#F6BB42\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Lazy Loading in Mendix Widget using TypeScript\nDESCRIPTION: This code demonstrates how to implement lazy loading in a Mendix widget. It initially sets the limit to 0 and loads data only when a button is pressed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport default const LazyWidget = (props: LazyWidgetProps) => {\n    useMemo(() => props.myDataSource.setLimit(0), []);\n    return props.myDataSource.items?.length ? (\n        props.myDataSource.items.map((i) => <div key={i.id}>Item</div>)\n    ) : (\n        <button onClick={() => props.myDataSource.setLimit(undefined)}>Load data</button>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Knowledge Base Operations Overview\nDESCRIPTION: Core operations for managing chunks in Mendix knowledge base, including embedding, inserting, retrieving and deleting data chunks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/mendix-cloud-genai/Mx GenAI Connector.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. `Embed & Insert` - embeds chunks and inserts into knowledge base\n2. `Embed & repopulate KB` - deletes existing chunks before inserting new ones\n3. `Embed & Replace` - replaces existing chunks that match associated Mendix object\n4. `Delete for Object` - deletes chunks associated with passed Mendix object\n5. `Delete for List` - deletes chunks for a list of Mendix objects\n```\n\n----------------------------------------\n\nTITLE: FULL OUTER JOIN Syntax in OQL\nDESCRIPTION: This snippet covers the syntax for a 'FULL OUTER JOIN' operation in OQL, allowing retrieval of rows from both sides of the join where the association exists, and including unmatched rows from both entities with nulls in place of missing data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nFULL [ OUTER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: LEFT OUTER JOIN on Association in OQL\nDESCRIPTION: This query demonstrates a LEFT OUTER JOIN using an association between entities, which is more efficient when a relationship exists in the data model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_21\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nLEFT OUTER JOIN Cust/Sales.Request_Customer/Sales.Request Req\n```\n\n----------------------------------------\n\nTITLE: DynamicValue Type Definition - TypeScript\nDESCRIPTION: Defines the type structure for values that can change over time, supporting loading states and value availability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport type DynamicValue<X> =\n    | { readonly status: ValueStatus.Available; readonly value: X }\n    | { readonly status: ValueStatus.Unavailable; readonly value: undefined }\n    | { readonly status: ValueStatus.Loading; readonly value: X | undefined };\n\nexport const enum ValueStatus {\n    Loading = \"loading\",\n    Unavailable = \"unavailable\",\n    Available = \"available\"\n}\n```\n\n----------------------------------------\n\nTITLE: User Provisioning Configuration Fields\nDESCRIPTION: Configuration options for defining user provisioning settings in Mendix OIDC SSO module, including custom user entity, principal attribute, and user role configuration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Custom user Entity\": \"Administration.Account\",\n    \"User Principal Attribute\": \"Name\",\n    \"Allow User Creation\": true,\n    \"Default User Role\": \"User\",\n    \"User Type\": \"Internal\"\n}\n```\n\n----------------------------------------\n\nTITLE: EditableValue Interface Definition in TypeScript for Mendix Pluggable Widgets\nDESCRIPTION: Defines the EditableValue interface used to represent values that can be changed by a pluggable widget client component. This interface exposes status, validation, formatting capabilities, and methods to read and modify values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface EditableValue<T extends AttributeValue> {\n    readonly status: ValueStatus;\n    readonly readOnly: boolean;\n    \n    readonly value: T | undefined;\n    setValue(value: T | undefined): void;\n    readonly validation: string | undefined;\n    setValidator(validator?: (value: T | undefined) => string | undefined): void;\n    \n    readonly displayValue: string;\n    setTextValue(value: string): void;\n    \n    readonly formatter: ValueFormatter<T>;\n    setFormatter(formatter: ValueFormatter<T> | undefined): void;\n    \n    readonly universe?: T[];\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Test Method for Adding New Expense in Java\nDESCRIPTION: This test method simulates the process of creating a new expense by interacting with various UI elements such as buttons, input fields, and dropdowns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=4)\npublic void createExpense() {\n\tdriver.findElement(By.cssSelector(\".mx-name-newButton3\")).click();\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-textBox6 input\")).clear();\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-textBox6 input\")).sendKeys(\"15.00\");\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-referenceSelector1 option:nth-child(2)\")).click();\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-saveButton1\")).click();\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Name Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all customers whose name is \"Jansen\" using an XPath query. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[Name = 'Jansen']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n\t//Sales.Customer[Name = 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Creating Type Parameter-Based Join Objects Action\nDESCRIPTION: Java implementation that joins two objects of the same entity type into a list using type parameters for type safety. The code demonstrates handling IContext and returning a List of IMendixObjects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-connector-kit.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nprivate List<IMendixObject> joinObjects(IContext context, String entityName, IMendixObject object1, IMendixObject object2) throws CoreException {\n    List<IMendixObject> result = new ArrayList<IMendixObject>();\n    result.add(object1);\n    result.add(object2);\n    return result;\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Comparison Operators\nDESCRIPTION: Basic comparison operators used in XPath queries for equality, inequality, and value comparisons. Examples show price comparison scenarios.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\nprice = 9.80\nprice != 9.80\nprice < 9.80\nprice <= 9.80\nprice > 9.80\nprice >= 9.80\n```\n\n----------------------------------------\n\nTITLE: Changing Mendix Object Properties in JavaScript Actions\nDESCRIPTION: Demonstrates how to get, set, and retrieve original values of Mendix object attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmxobj.get(\"Name\");               // \"Fred\"\nmxobj.set(\"Name\", \"Henry\");\nmxobj.get(\"Name\");               // \"Henry\"\nmxobj.getOriginalValue(\"Name\")   // \"Fred\"\n```\n\n----------------------------------------\n\nTITLE: Adding Weeks in Java UTC\nDESCRIPTION: The `addWeeks` function adds a number of weeks to a date. Similar to `addDays`, it takes the initial date and weeks to add as input parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\naddWeeks(dateTime(2007, 1, 1, 1, 1, 1), 2)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 15 01:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Defining REST Service Location with String Template\nDESCRIPTION: Shows how to define the location of a REST endpoint using a string template with parameters. Parameters are denoted by numbers in braces and can be populated using microflow expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nThe template for the location can contain parameters that are written as a number between braces (for example, `{1}`). The first parameter has the number `1`, the second `2`, etc. You can escape the opening brace (`{`), by using a double opening brace (`{{`).\n```\n\n----------------------------------------\n\nTITLE: Configuring MX Merge as a Git Merge Driver\nDESCRIPTION: This section details the configuration needed to use `mx merge` as a merge driver in Git. The correct setup allows automatic resolution of merge conflicts for Mendix applications, facilitating smoother version control when working with *.mpr* files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_4\n\nLANGUAGE: ini\nCODE:\n```\n[merge \"custom\"]\n    name = custom merge driver for MPR files\n    driver = [MX.EXE_PATH] merge %O %A %B\n```\n\n----------------------------------------\n\nTITLE: Using urlEncode() Function in Mendix Expressions\nDESCRIPTION: The urlEncode() function converts a string to be URL-safe. This is useful when including the string as part of a URL. It encodes special characters according to URL encoding rules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_14\n\nLANGUAGE: java\nCODE:\n```\nurlEncode('Hello, world!')\n```\n\n----------------------------------------\n\nTITLE: Scaffolding a Widget with Pluggable Widget Generator in Shell\nDESCRIPTION: Command line instructions to create a new directory for pluggable widgets and scaffold a TextBox widget using the Mendix Pluggable Widget Generator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nmkdir myPluggableWidgets\ncd myPluggableWidgets\nnpx @mendix/generator-widget TextBox\n```\n\n----------------------------------------\n\nTITLE: Finding and Generalizing Entities in Mendix Model SDK - TypeScript\nDESCRIPTION: This snippet demonstrates how to find an existing entity in the Mendix domain model using the function `findEntityByQualifiedName`, and then set up the generalization relationship for a new Customer entity by leveraging the `domainmodels.Generalization` class and its properties. The snippet assumes that the domain model and customer entity creation steps are conducted in a Mendix environment with appropriate Model SDK setup. Required dependencies include the Mendix Model SDK and a domain model environment. This code outputs the configured Customer entity generalizing the Administration.Account with spatial location coordinates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-the-domain-model.md#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst systemUser = model.findEntityByQualifiedName(`Administration.Account`);\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nif(systemUser){\n    const generalization = domainmodels.Generalization.createIn(customer);\n    generalization.generalization = systemUser;\n}\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst customer = domainmodels.Entity.createIn(domainModel);\ncustomer.name = `Customer`;\ncustomer.location = { x: 100, y: 100 };\n\nconst generalization = domainmodels.Generalization.createIn(customer);\nconst systemUser = model.findEntityByQualifiedName(`Administration.Account`);\nif (systemUser) {\n    generalization.generalization = systemUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating API Requests with Personal Access Token (HTTP)\nDESCRIPTION: Shows how to structure an HTTP request to the Content API with the required Authorization header using a Personal Access Token (PAT). The token must be prefixed with 'MxToken' in the header.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/content-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /content HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Obtaining a WSDL for a Web Service\nDESCRIPTION: This snippet explains the steps required to obtain a WSDL for the web service created in Mendix, which allows external systems to interact with it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/expose-a-web-service.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nRun the application locally or in a Free App environment.\nView the application in your browser:\n* If you run the application locally, the application URL should look like this: `http://localhost:8080/index.html`\n* If you run the application in a Free App environment, the application URL should look like this: `https://myfirstapp.mendixcloud.com/index.html`\nIn both of the above cases, you can replace `/index.html` with `/ws-doc/` to open the web service documentation page:\nYou should see the name of your web service in the list.\nClick the \"WSDL schema\" URL to open the WSDL. This WSDL can be given to others so that they can interact with your web service.\n```\n\n----------------------------------------\n\nTITLE: Group by Clause Example - Counting Customers\nDESCRIPTION: This SQL query demonstrates the usage of the GROUP BY clause by counting the number of customers per city. It joins the Sales.Customer and Sales.Address tables to group the results based on the city values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(Sales.Customer/*)\nFROM Sales.Customer\nINNER JOIN Sales.Customer/Sales.Customer_Address/Sales.Address\nGROUP BY Sales.Address/City\n```\n\n----------------------------------------\n\nTITLE: Formatting Time from DateTime\nDESCRIPTION: Extract and format the time component of a DateTime object using locale-specific standard formatting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nformatTime(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Implementing OnLeave Logic in TextBox Container Component\nDESCRIPTION: Refactors the TextBox container component to handle value changes, implement validation, and trigger onChange actions when appropriate\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nclass TextBox extends Component<TextBoxContainerProps> {\n    private readonly onLeaveHandle = this.onLeave.bind(this);\n    componentDidMount(): void {\n        this.props.textAttribute.setValidator(this.validator.bind(this));\n    }\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        const validationFeedback = this.props.textAttribute.validation;\n        return <Fragment>\n            <TextInput\n                value={value}\n                style={this.props.style}\n                className={this.props.class}\n                tabIndex={this.props.tabIndex}\n                disabled={this.isReadOnly()}\n                onLeave={this.onLeaveHandle}\n            />\n            <Alert>{validationFeedback}</Alert>\n        </Fragment>;\n    }\n    private isReadOnly(): boolean {\n        this.props.textAttribute.readOnly;\n    }\n    private onLeave(value: string, isChanged: boolean): void {\n        if (!isChanged) {\n            return;\n        }\n        this.props.textAttribute.setValue(value);\n    }\n    private validator(value: string | undefined): string | undefined {\n        const { requiredMessage } = this.props;\n        if (requiredMessage && requiredMessage.value && !value) {\n            return requiredMessage.value;\n        }\n        return;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MxBuild for Package Creation on Windows\nDESCRIPTION: This snippet demonstrates how to create a deployment package in the current directory using MxBuild in Windows. The example assumes the presence of a Mendix app and requires specifying the paths for the Java JDK directory and Java executable. The command focuses on package creation, utilizing the `--target=package` option.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mxbuild.md#2025-04-21_snippet_0\n\nLANGUAGE: bat\nCODE:\n```\nmxbuild --target=package --java-home=\"C:\\Program Files\\Java\\jdk1.8.0_144\" --java-exe-path=\"C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe\" \"C:\\Users\\username\\Documents\\Mendix\\MyApp\\MyApp.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Creating GroupBoxState Interface for State Management\nDESCRIPTION: This interface defines the state structure for the GroupBox component, specifically tracking whether the box is collapsed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_27\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxState {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    collapsed: boolean;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Executing Prepared SQL Statement in Mendix\nDESCRIPTION: Java code for preparing and executing a SQL statement with parameters, then processing the results by creating Mendix objects for the returned dates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-datastorage-api.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nreturn (List<IMendixObject>) Core.dataStorage().executeWithConnection(connection -> {\n    // Create and execute prepared statement\n    PreparedStatement statement = connection.prepareStatement(sql);\n    statement.setDate(1, new java.sql.Date(startDate.getTime()));\n    statement.setDate(2, new java.sql.Date(endDate.getTime()));\n    statement.setDate(3, new java.sql.Date(startDate.getTime()));\n    statement.setDate(4, new java.sql.Date(endDate.getTime()));\n    ResultSet resultSet = statement.executeQuery();\n\n    // Process the results\n    List<IMendixObject> results = new ArrayList<>();\n    while (resultSet.next()) {\n        FirstMondayDate mxObj = new FirstMondayDate(getContext());\n        mxObj.setMondayDate(new Date(resultSet.getDate(\"monday\").getTime()));\n        results.add(mxObj.getMendixObject());\n    }\n    return results;\n});\n```\n\n----------------------------------------\n\nTITLE: Using the max Function in Mendix\nDESCRIPTION: Returns the largest value from a set of numbers. When provided with multiple numeric arguments, the function identifies and returns the highest value among them.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmax(5, 1, 5, 6.7)\n```\n\n----------------------------------------\n\nTITLE: Counting Orders using count() - Java\nDESCRIPTION: The 'count()' function counts the number of objects returned by the XPath query, returning an integer as the output. The input must be a complete XPath expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-aggregate-functions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ncount(//Sales.Order)\n```\n\nLANGUAGE: java\nCODE:\n```\ncount(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen'])\n```\n\n----------------------------------------\n\nTITLE: Replacing Substrings in Text with REPLACE - SQL\nDESCRIPTION: This snippet uses the REPLACE function to search for a specified substring within an expression and replace it with another string, allowing for string manipulation in SQL queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_30\n\nLANGUAGE: sql\nCODE:\n```\nREPLACE ( expression, pattern, replacement )\n```\n\n----------------------------------------\n\nTITLE: Using COALESCE Function in SQL\nDESCRIPTION: This snippet demonstrates the COALESCE function to return the first non-null value from a list of expressions. The example queries a Customer table to display customer names, preferring LastName over FirstName. It illustrates how COALESCE can handle NULL values effectively in SQL queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_20\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COALESCE(LastName, FirstName) AS Name FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Configuring Offline Data Synchronization Strategy\nDESCRIPTION: Best practices for managing data synchronization in offline Mendix mobile applications, focusing on performance, security, and error handling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\n// Example of handling synchronization with error management\nfunction syncDataWithErrorHandling() {\n    try {\n        mx.data.synchronize({\n            onSuccess: function() {\n                // Handle successful sync\n            },\n            onError: function(error) {\n                // Gracefully handle synchronization errors\n            }\n        });\n    } catch (exception) {\n        // Additional error handling\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Dutch Post Code Regular Expression Example\nDESCRIPTION: This example demonstrates a regular expression used to validate Dutch post codes. It checks for a specific format consisting of digits and letters, along with an optional space. This example illustrates how to implement the expression for checking the Dutch post code could be: `[1-9][0-9][0-9][0-9] ?[A-Za-z][A-Za-z]`\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\n\"[1-9][0-9][0-9][0-9] ?[A-Za-z][A-Za-z]\"\n```\n\n----------------------------------------\n\nTITLE: Nested Path Boolean Comparison\nDESCRIPTION: Query to find customers with unpaid orders using nested path and boolean comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/HasPayed = false()]\n```\n\n----------------------------------------\n\nTITLE: SOAP Header Authentication XML Example\nDESCRIPTION: This XML snippet shows the structure for authentication within the SOAP header when calling a published web service. It includes the username and password of a web service user that must exist in the Mendix Runtime. These details must match an existing web service user in the Runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/published-web-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Header>\n  <tns:authentication>\n    <username>john</username>\n    <password>john'ssecretpassword</password>\n  </tns:authentication>\n</soap:Header>\n```\n\n----------------------------------------\n\nTITLE: Microflow Logic Definition in Mendix\nDESCRIPTION: Explains the concept of microflows in Mendix for defining custom application logic, which are visual representations of server-side logic similar to functions in traditional programming.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/responsive-web-app.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nMicroflow Characteristics:\n- Visual BPMN Representation\n- Single Start Point\n- Multiple Possible End Points\n- Server-Side Execution\n- Requires Internet Connection\n```\n\n----------------------------------------\n\nTITLE: Registering Before-Commit Listener in Mendix using Java\nDESCRIPTION: This Java code snippet registers a before-commit listener to log old and new attribute values for all changes to attributes before they are committed to the database. It uses the Core.getListenersRegistry().registerBeforeCommitListener() method to register the listener.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-datastorage-api.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npublic java.lang.Boolean executeAction() throws Exception {\n    // BEGIN USER CODE\n    Core.getListenersRegistry().registerBeforeCommitListener(objects -> {\n        ILogNode logger = Core.getLogger(\"BeforeCommitListener\");\n        for (IMendixObject obj : objects) {\n            logger.info(\"ObjectType: \" + obj.getType());\n\n            List<? extends IMendixObjectMember<?>> changedMembers = obj.getChangedMembers(getContext());\n\n            logger.info(String.format(\"Has changed members: %b? Number of changed members: %d\", obj.isChanged(), changedMembers.size()));\n            for (IMendixObjectMember member : changedMembers) {\n                logger.info(\n                        String.format(\"Changed member %s : %s -> %s\", member.getName(),\n                                member.getOriginalValue(getContext()) != null ? member.getOriginalValue(getContext()).toString() : \"\",\n                                member.getValue(getContext()) != null ? member.getValue(getContext()).toString() : \"\"\n                        )\n                );\n            }\n        }\n    });\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Notification Action Name in Nanoflow\nDESCRIPTION: Configure the action name for a local notification to trigger a specific page when tapped. Uses an expression to set the action name to 'show_page'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-action.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\n'show_page'\n```\n\n----------------------------------------\n\nTITLE: Creating a CurrentUserVE View Entity with SQL\nDESCRIPTION: SQL query for creating a view entity that retrieves the current user's information including their UserID, FullName, and TenantID by joining the AppUser, Account, and Tenant entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/multitenant-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  u.UserID as UserID,\n  u.FullName as FullName,\n  t.TenantID as TenantID\nFROM MultiTenantApp.AppUser u\nJOIN u/MultiTenantApp.AppUser_Account/Administration.Account a\nJOIN u/MultiTenantApp.AppUser_Tenant/MultiTenantApp.Tenant t\nWHERE a.ID = '[%CurrentUser%]'\n```\n\n----------------------------------------\n\nTITLE: Implement Read-Only Functionality in TextBox Widget (TSX)\nDESCRIPTION: This snippet replaces the render function in TextBox.tsx to check the `readOnly` property of the `textAttribute` and pass it to the `TextInput` component's `disabled` prop. This allows the widget to be disabled based on entity access, data view settings, or the Editability system property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const value = this.props.textAttribute.value || \"\";\n    return <TextInput\n        value={value}\n        tabIndex={this.props.tabIndex}\n        onUpdate={this.onUpdateHandle}\n        disabled={this.props.textAttribute.readOnly}\n    />;\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Results with WHERE Clause in OQL\nDESCRIPTION: This query shows how to use a WHERE clause to filter results when selecting from multiple entities. It joins Customer and Request entities based on matching LastName and CustomerName.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Sales.Customer Cust, Sales.Request Req\nWHERE Cust.LastName = Req.CustomerName\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI 3.0 Schema Structure in JSON\nDESCRIPTION: This JSON structure outlines the main components of the OpenAPI 3.0 schema for a Mendix published REST service. It includes properties for API version, service information, server details, paths, components, security, and tags.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/open-api.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"openapi\": \"3.0\",\n  \"info\": {\n    \"title\": \"<service_name>\",\n    \"description\": \"<service_public_documentation>\",\n    \"version\": \"1.0.0\"\n  },\n  \"servers\": [{ \"url\": \"<baseURL>\" }],\n  \"paths\": {},\n  \"components\": {\n    \"schemas\": {},\n    \"responses\": {},\n    \"securitySchemes\": {}\n  },\n  \"security\": [],\n  \"tags\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Global Node.js Packages\nDESCRIPTION: Outlines the commands to install necessary global Node.js packages, which are required for the development of the Mendix pluggable widget using Yeoman.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install -g yo\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install -g @mendix/generator-widget@\"<9\"\n```\n\n----------------------------------------\n\nTITLE: Designing Microflow to Update Total Order Amount\nDESCRIPTION: This code outlines how to design a microflow in Mendix that calculates the total order amount for a customer after a new order is committed. It retrieves associated orders, computes the total, and updates the customer's TotalOrderAmount attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/data-models/denormalize-data-to-improve-performance.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n6. Open the new microflow, which should look like this:\n7. Open the **Toolbox**, which should be docked in the lower-right corner of Studio Pro. If you can't find the **Toolbox** there, you can open it from the **View** menu:\n8. Drag a **Retrieve** activity from the toolbox to the line between the start and end event on the microflow, which will insert a new retrieve activity:\n9. Double-click the new activity to open its properties on the **Retrieve** dialog box and do the following:\n    * Select **By association** as **Source**\n    * Click **Select...** to open the **Association** selector\n10. On the **Select association** pop-up window, select **Order_Customer** from the **Variables** node in the tree view, and then click **Select**:\n11. Click **OK** to save the activity. Your microflow should now look like this:\n12. Insert another retrieve activity, double-click it to open its properties on the **Retrieve** dialog box, and do the following:\n    * Select **From Database** as **Source**\n    * Click **Select...** to open the entity selector\n13. On the **Select entity** pop-up window, select **Order** via from the **Variables** node in the tree view, and then click **Select**:\n14. Click **OK** to save the activity. Your microflow should now look like this:\n15. Insert an aggregate list activity, double-click it to open its properties on the **Aggregate List** dialog box, and do the following:\n    * Select **OrderList** as the **Input > List**\n    * Select **Sum** as the **Function**\n    * Select **Totalprice** as the **Attribute**\n    * Enter *SumTotalprice* as the **Output > Variable** name\n16. Click **OK** to save the activity. Your microflow should now look like this:\n17. Insert a change activity, double-click it to open its properties on the **Change Object** dialog box, and do the following:\n    * Select **Customer** as the **Input > Object**\n    * Select **Yes** as the **Commit** action\n    * Click **New** to create a new change item\n18. In the **Edit Change Item** dialog box, do the following:\n    * Select **TotalOrderAmount** as the **Member**\n    * Enter *$SumTotalprice* as the **Value**\n19. Click **OK** again to save the activity.\n```\n\n----------------------------------------\n\nTITLE: Selecting Specific Attributes with Aliases in OQL\nDESCRIPTION: This query demonstrates how to select specific attributes using entity aliases and the wildcard selector for one entity. It avoids ambiguity in case of duplicate attribute names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/FirstName, Req/*\nFROM Sales.Customer Cust, Sales.Request Req\nWHERE Cust.LastName = Req.CustomerName\n```\n\n----------------------------------------\n\nTITLE: Adding Parameters to a REST Request in Mendix\nDESCRIPTION: How to add and configure parameters for REST requests in the Consumed REST Service document.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/consumed-rest-service.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open the **Parameters** tab and click **Add parameter**.\n2. Name your parameter and add a test value.\n3. To test the parameters, click **Send**.\n```\n\n----------------------------------------\n\nTITLE: Basic OQL WHERE Clause Syntax\nDESCRIPTION: Demonstrates the basic syntax of an OQL WHERE clause used to filter data in queries. The clause specifies constraints that must evaluate to true for records to be included in the results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-where-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nWHERE <constraint>\n```\n\n----------------------------------------\n\nTITLE: Calling a Nanoflow with Parameters from JavaScript\nDESCRIPTION: Demonstrates how to call a nanoflow that has been passed as a parameter to a JavaScript action. The example shows passing a 'Name' parameter to the nanoflow and awaiting a User object as the return value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst user = await nanoflowParameter({ Name: \"John Doe\" });\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Merge Driver for mxunit Files\nDESCRIPTION: This INI snippet configures a custom merge driver named \"custommprcontent\" for Mendix unit test files (*.mxunit). It uses the `true` driver which means the files are preserved from the default git merge driver, since the mx tool resolves conflicts during the mpr merge.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_8\n\nLANGUAGE: INI\nCODE:\n```\n[merge \"custommprcontent\"]\n    name = custom merge driver for mxunit files\n    driver = true\n```\n\n----------------------------------------\n\nTITLE: Configuring Enumeration in Mendix Domain Model\nDESCRIPTION: Shows how to create an enumeration for OrderStatus with predefined values like Open, Processing, and Complete. Explains how to set default values and add enumeration attributes to entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/create-a-basic-data-layer.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<enumeration name=\"OrderStatus\">\n    <value caption=\"Open\" />\n    <value caption=\"Processing\" />\n    <value caption=\"Complete\" />\n</enumeration>\n```\n\n----------------------------------------\n\nTITLE: Adding a Menu Item Extension in C#\nDESCRIPTION: This code creates a menu extension that adds a new menu item to Mendix Studio Pro. When clicked, the menu item calls the controller's ShowDialog method to open the modal web view. It passes the current application model and web server base URL to enable model manipulation and web content access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-modal-web-view.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace MyCompany.MyProject.MendixExtension;\n\n[Export(typeof(MenuExtension))]\n[method: ImportingConstructor]\nclass MyMenuExtension(MyModalWebViewController myModalWebViewController) : MenuExtension\n{\n    public override IEnumerable<MenuViewModel> GetMenus()\n    {\n        yield return new MenuViewModel(\"Create Entity From Dialog\", () => myModalWebViewController.ShowDialog(CurrentApp!, WebServerBaseUrl));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Structure Example\nDESCRIPTION: This JSON snippet represents the structure of the data returned by the Wikipedia REST API when requesting a page summary. It is used to create a JSON structure within Mendix Studio Pro, which helps define the expected data format for the REST service response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/consume-a-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\nPaste the JSON snippet in the **General** tab and click **Refresh**. This analyzes the structure of the JSON snippet that we can use later.\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Price for Specific Customer (XPath)\nDESCRIPTION: This XPath query calculates the average `TotalPrice` for orders placed by a customer named 'Jansen'. It filters `Sales.Order` objects based on a related `Sales.Customer` object with the name 'Jansen' via the `Sales.Customer_Order` association.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-avg.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"avg(//Sales.Order[Sales.Customer_Order/Sales.Customer = 'Jansen']/TotalPrice)\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customer Data with OQL Query Using Indexed Attributes\nDESCRIPTION: An OQL query example that demonstrates how to retrieve customer data using indexed attributes (zipcode and housenumber) in the same order as defined in the index for optimal performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/indexes.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nFROM Module.Customer AS c\nWHERE c.zipcode = $ParameterZipCode AND c.housenumber = $ParameterHouseNumber\nSELECT c.name AS CustomerName\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Delay Function with Promise\nDESCRIPTION: Implementation of an asynchronous wait function using Promise and setTimeout to create a delay in execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nfunction Wait(delay) {\n    // BEGIN USER CODE\n    return new Promise(function(resolve) {\n        window.setTimeout(function(){\n            resolve();\n        }, delay);\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing DateTime with Java Pattern\nDESCRIPTION: Parse a date string into a DateTime object using a specified format pattern. Supports different parsing strategies for microflows and nanoflows, with optional default value handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseDateTime('2022-04-30T22:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDateTime('noDateTime', 'dd-MM-yyyy', dateTime(2007))\n```\n\n----------------------------------------\n\nTITLE: Configuring IAM Admin User Policy in JSON\nDESCRIPTION: Defines the required IAM policy for an admin user managing access to Mendix environments. Replace `<account_id>` and `<policy_arn>` with the AWS account number and environment template policy ARN, respectively. This policy allows attaching/detaching user policies and managing IAM users with Mendix-specific prefixes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"LimitedAttachmentPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:AttachUserPolicy\",\n                \"iam:DetachUserPolicy\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"ArnEquals\": {\n                    \"iam:PolicyArn\": [\n                        \"<policy_arn>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"iamPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:DeleteAccessKey\",\n                \"iam:DeleteUser\",\n                \"iam:CreateUser\",\n                \"iam:CreateAccessKey\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:user/mendix-*\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with hours-from-dateTime in Local Timezone\nDESCRIPTION: An XPath query example that retrieves all logs where the hours part of DateAttribute equals 8 in the local time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[hours-from-dateTime(DateAttribute) = 8]\n```\n\n----------------------------------------\n\nTITLE: Converting Epoch to DateTime in Java\nDESCRIPTION: This snippet demonstrates how to use the epochToDateTime function to convert a Unix epoch timestamp (milliseconds since January 1, 1970, 00:00:00 GMT) to a DateTime object. The function takes an Integer or Long as input and returns a Date and time object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nepochToDateTime(141990610000)\n```\n\nLANGUAGE: java\nCODE:\n```\ndateTime(1974, 7, 2, 9, 50, 10)\n```\n\n----------------------------------------\n\nTITLE: LIKE Operator with Underscore Wildcard in SQL\nDESCRIPTION: Shows how to use the underscore wildcard to match strings with a specific length ending in 'ment'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nSelect PropertyType FROM RealEstate.Properties WHERE PropertyType LIKE '____ment'\n```\n\n----------------------------------------\n\nTITLE: Converting scikit-learn Model to ONNX Format\nDESCRIPTION: This code converts a trained scikit-learn pipeline to ONNX format and serializes it to a file for later use in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-sagemaker-machine-learning.md#2025-04-21_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nonxx_pipeline = to_onnx(pipe, initial_types=[('message', StringTensorType([None, 1]))])\nwith open(\"spam_nb.onnx\", \"wb\") as f:\n    f.write(onxx_pipeline.SerializeToString())\n```\n\n----------------------------------------\n\nTITLE: Test Method for Logging into Application\nDESCRIPTION: Logs into a web application using given credentials. Uses Selenium WebDriver to enter login details and click the sign-in button. Priority set to ensure order of test execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=2)\npublic void login() {\n    driver.findElement(By.cssSelector(\"#usernameInput\")).sendKeys(\"MxAdmin\");\n    driver.findElement(By.cssSelector(\"#passwordInput\")).sendKeys(\"1\");\n    driver.findElement(By.cssSelector(\"#loginButton\")).click();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Maximum Total Price using max() - Java\nDESCRIPTION: The 'max()' function retrieves the maximum value from the specified numeric attribute in the XPath expression. Outputs a single value representing the maximum.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-aggregate-functions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nmax(//Sales.Order/TotalPrice)\n```\n\nLANGUAGE: java\nCODE:\n```\nmax(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Self UNION Query\nDESCRIPTION: Demonstrates UNION operation on the same table.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_47\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FName, LastName LName\nFROM Sales.Customer\nUNION\nSELECT FirstName FName, LastName LName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Implementing Nanoflow Data Source Example in Mendix\nDESCRIPTION: A nanoflow implementation that filters products based on order type. The nanoflow takes an Order parameter, evaluates the OrderType attribute, and returns a filtered list of products where Motorized matches the order type criteria (Cars=true, Bicycles=false).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/data-sources/nanoflow-source.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nParameter: Order (Input)\nSplit on OrderType\nCase 'Cars': Retrieve Products where Motorized = true\nCase 'Bicycles': Retrieve Products where Motorized = false\nCase empty: Return empty list\nReturn: List of Products\n```\n\n----------------------------------------\n\nTITLE: Defining Carousel Widget Styling in JavaScript\nDESCRIPTION: This code defines the style structure for the Carousel widget in Mendix native mobile applications. It allows styling for different layouts (card and full width), slides, pagination dots, and indicators with various visual properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_carousel_Carousel = {\n  container: {\n    // This has all ViewStyle properties. Styles the view surrounding the carousel widget. For best results, make sure to give a fixed `height`\n  },\n  cardLayout: {\n    // Styles the carousel when the layout is set to card.     \n    slideItem: {\n      // This has all ViewStyle properties. Styles the view surrounding each slide, including inactive slides.\n    },\n    inactiveSlideItem: {\n      opacity: null, // Allows inactive slides to become more smaller and faded.   \n      scale: null, // Allows inactive slides to become more smaller and faded.   \n    },\n    indicator: {\n      color: null, // Styles the loading indicator which will be shown while the carousel is loading.\n    },\n    pagination: {\n      container: {\n        // This has all ViewStyle properties. Styles the main view around pagination, regardless of text or dot.\n      },\n      dotStyle: {\n        // This has all ViewStyle properties. Styles all the pagination dots.   \n  color: null, \n      },\n      inactiveDotStyle: {\n        // This has all ViewStyle properties. Additional styles for inactive dots. Will be merged with `dotStyle`.\n  opacity: null,\n  scale: null,\n  color: null,\n      },\n      dotContainerStyle: {\n        // This has all ViewStyle properties. Styles the view around individual pagination dots.  \n      },\n      text: {\n        // This has all TextStyle properties. Will be applied when there are more than five elements in carousel, in which case pagination buttons become text like **1/5**.\n      },\n    },\n  },\n\n  fullWidthLayout: {\n    // Styles the carousel when the layout is set to full width.\n    // Same properties as cardLayout.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Unpaid Orders Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all customers who have at least one unpaid order using an XPath query. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order/Sales.Order/HasPaid = false()]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Sales.Customer_Order/Sales.Order/HasPaid = false()]\n```\n\n----------------------------------------\n\nTITLE: Querying with LIMIT and OFFSET in SQL\nDESCRIPTION: This query retrieves the 11th to 20th customer, sorted by their last name, using both the LIMIT and OFFSET clauses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nORDER BY LastName\nLIMIT 10 OFFSET 10\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Menu Extension in C#\nDESCRIPTION: A simple C# class that implements a menu extension for Mendix Studio Pro. It adds a menu item that displays a \"Hello World\" message box when clicked, using dependency injection to access the message box service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-menu-extension.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.ComponentModel.Composition;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Menu;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Services;\n\nnamespace MyCompany.MyProject.MendixExtension;\n\n[method: ImportingConstructor]\n[Export(typeof(MenuExtension))]\npublic class MyMenuExtension(IMessageBoxService messageBoxService) : MenuExtension\n{\n    public override IEnumerable<MenuViewModel> GetMenus()\n    {\n        yield return new MenuViewModel(\"Say hello\", () => messageBoxService.ShowInformation(\"Hello World!\"));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Deep Link Nanoflow Action in Mendix\nDESCRIPTION: This nanoflow action registers a callback that gets executed each time the app is opened via a deep link. It takes a URL string as input and is part of the Native Mobile Resources module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n// Register Deep Link Nanoflow Action\n// This action handles deep linking in the app and registers the callback.\n// Input: URL (string)\n\nRegisterDeepLink(\n    url: string\n) {\n    // Code to handle the registered URL\n}\n```\n\n----------------------------------------\n\nTITLE: Setting CSRF Token for Active Session Authentication in JavaScript\nDESCRIPTION: Shows how to set the required X-Csrf-Token header in JavaScript when using active session authentication to prevent cross-site request forgery.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://mysite/rest/myservice/myresource\", false);\nxmlHttp.setRequestHeader(\"X-Csrf-Token\", mx.session.getConfig(\"csrftoken\"));\nxmlHttp.send(null);\n```\n\n----------------------------------------\n\nTITLE: Checking if Object is New in Mendix Java\nDESCRIPTION: This example demonstrates a Mendix expression used to determine if an object is newly created but not yet committed. The function requires an object parameter and is designed for instances where database-stored states are absent. Retrieval from the database ensures 'isNew' always returns 'false'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nisNew($object1)\n```\n\n----------------------------------------\n\nTITLE: Selecting a Specific Grid Row in Selenium\nDESCRIPTION: A JavaScript Selenium selector that targets the fourth row in a grid named 'ArtistGrid' using a combination of the grid name and index classes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/selenium-support.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$('.mx-name-ArtistGrid .mx-name-index-3')\n```\n\n----------------------------------------\n\nTITLE: Filtering Customer Data with OQL Range in Java\nDESCRIPTION: This example demonstrates using a predefined range `$rangeLastWeek` to filter customers' birthdays within the past week in a dataset. The `RANGEBEGIN` function ensures customers are selected starting from the beginning of last week.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangebegin.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nselect FirstName as First, LastName as Last, Name as Name, Birthday as BDay, CustomerType as Type from Sales.Customer\nwhere Birthday IN ($rangeLastWeek)\n```\n\nLANGUAGE: java\nCODE:\n```\nselect FirstName as First, LastName as Last, Name as Name, Birthday as BDay, CustomerType as Type from Sales.Customer\nwhere Birthday > RANGEBEGIN($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Complete GroupBox Widget XML Definition\nDESCRIPTION: This XML file provides the complete definition of the GroupBox widget, including the `id`, `name`, `description`, and `properties`. The properties section defines the `content` and `headerCaption` properties, allowing developers to configure the widget's content and header text within Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\"\n    supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <property key=\"content\" type=\"widgets\" required=\"false\">\n                <caption>Content</caption>\n                <description>Widgets to place inside.</description>\n                </property>\n            <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                <caption>Header caption</caption>\n                <description />\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Convert DateTime to String in Mendix\nDESCRIPTION: This snippet shows how to convert a Date and time value to a string using the `toString` function in Mendix. The input is a Date and time value, created using the `dateTime` function, and the output is a string representation of the date and time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"toString(dateTime(2007))\"\n```\n\n----------------------------------------\n\nTITLE: Post-processing Iris Classification Results using Java Action in Mendix\nDESCRIPTION: Java action that post-processes the output of an Iris classification model, mapping numeric output to class names (Setosa, Versicolour, Virginica).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/using-ml-kit/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@java.lang.Override\npublic java.lang.String executeAction() throws Exception\n{\nthis.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.ML_Output_Entity_Iris_RF_ML_Model.initialize(getContext(), __Parameter);\n\n  // BEGIN USER CODE\n  if (Parameter.getOutput_label() == 0) {\n    return \"Setosa\";\n  } else if (Parameter.getOutput_label() == 1) {\n    return \"Versicolour\";\n  } else\n    return \"Virginica\";\n  // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Product Data Across Multiple Entities with OQL in Mendix\nDESCRIPTION: SQL query that combines relevant attributes from Product, Supplier, and Category entities using JOIN operations to create a comprehensive product overview in a view entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  p.ProductId as ProductId,\n  p.ProductName as ProductName,\n  p.QuantityPerUnit as QuantityPerUnit,\n  p.Discontinued as Discontinued,\n  s.CompanyName as Supplier, \n  c.CategoryName as Category\nFROM Shop.Product as p\n  JOIN p/Shop.Product_Supplier/Shop.Supplier as s\n  JOIN p/Shop.Product_Category/Shop.Category as c\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Web Theme Variables in SCSS\nDESCRIPTION: Example of custom SCSS variables in theme/web/custom-variables.scss that will be made into a reusable theme module. These variables define color schemes for the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_7\n\nLANGUAGE: scss\nCODE:\n```\n$gray-primary: #e7e7e9;\n\n$brand-default: $gray-primary;\n$brand-primary: #264ae5;\n$brand-success: #3cb33d;\n$brand-warning: #eca51c;\n$brand-danger: #e33f4e;\n```\n\n----------------------------------------\n\nTITLE: Creating Associations in Mendix\nDESCRIPTION: This snippet explains how to create associations between entities in Mendix, crucial for defining relationships in the domain model. It describes the process of selecting the correct direction for associations based on the multiplicity of the instances. The snippet assumes entities have already been created.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/create-a-basic-data-layer.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nTo create an association, draw a line from the border of one entity to the border of the other entity to create an association. Always start at the entity that will have more instances in the system than the other one. In this case, draw an association from **Order** to **Customer**, because you will want to store more orders than customers in your application.\n\n{{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582175.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Build Process Error Message\nDESCRIPTION: Error message shown during development process when the TextInput component is not yet implemented.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nERROR in ./src/TextBox.tsx\n    Module not found: Error: Can't resolve './components/HelloWorldSample' in 'C:\\Users\\john.doe\\textboxtest-main\\CustomWidgets\\TextBox\\src'\n    @ ./src/TextBox.tsx 14:0-28:2\n```\n\n----------------------------------------\n\nTITLE: Sample Script - AdminPassword Parameter - PowerShell\nDESCRIPTION: Shows how to set the administrator password for a Mendix app using the AdminPassword parameter in the Start-MxApp cmdlet.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_5\n\nLANGUAGE: PowerShell\nCODE:\n```\nStart-MxApp $appName -AdminPassword \"Abcd@1234\"\n```\n\n----------------------------------------\n\nTITLE: Handling UNION of Different Types in OQL v2\nDESCRIPTION: In OQL v2, `UNION` queries require consistent result data types across all subqueries, following a precedence order. The snippet shows a query returning a `DECIMAL` type due to its higher precedence.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nSELECT IntegerAttribute FROM Module.Entity\nUNION\nSELECT DecimalAttribute FROM Module.Entity\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associated Objects with GraphQL in Mendix\nDESCRIPTION: This query retrieves the name of the employee and the car they drive. It shows how to query associated objects in a single request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_5\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  employees {\n    name\n    car\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Role-Based Constraint in Java\nDESCRIPTION: An XPath query retrieving all users with the Administrator role, demonstrating how to use system variables in constraints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n//Sales.User[id = '[%UserRole_Administrator%]']]\n```\n\n----------------------------------------\n\nTITLE: Using LOWER to Standardize Case - SQL\nDESCRIPTION: This snippet shows how to use the LOWER function to convert LastName values to lowercase to enable case-insensitive comparison when querying the Sales.Customer table.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_27\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM Sales.Customer WHERE LOWER(LastName) = 'doe'\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with hours-from-dateTime in Specific Timezone\nDESCRIPTION: An XPath query example that retrieves all logs where the hours part of DateAttribute equals 8 specifically in the New York time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[hours-from-dateTime(DateAttribute, 'America/New_York') = 8]\n```\n\n----------------------------------------\n\nTITLE: Filtering Records with Equal Comparison in OData\nDESCRIPTION: Example of filtering records where a specific field equals a particular value. This query retrieves Engineers whose Name equals 'Kim'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers?$filter=Name+eq+'Kim'\n```\n\n----------------------------------------\n\nTITLE: Implementing a JavaScript Action with Extra and User Code Sections in Mendix\nDESCRIPTION: This code snippet demonstrates the structure of a JavaScript action in Mendix with three distinct sections: imports, extra code, and user code. It shows how to implement a simple 'Hello' function that displays an alert message, using the recommended pattern for maintaining code across regenerations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the app.\nimport { Big } from \"big.js\";\n\n// BEGIN EXTRA CODE\n function sayHello(message) {\n     window.alert(\"Hello: \" + message);\n }\n// END EXTRA CODE\n\n/**\n * Show an alert message to an user.\n * @param {string} message - Message shown to the user.\n * @returns {Promise.<void>}\n */\nexport async function Hello(message) {\n\t// BEGIN USER CODE\n\tsayHello(message);\n\treturn Promise.resolve();\n\t// END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Floating Action Button for Picture Taking\nDESCRIPTION: Implement a mobile-friendly floating action button that triggers a nanoflow for taking pictures in a native mobile app\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/native-mobile-app.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\n1. Drag Floating Action Button onto page\n2. Select Camera icon\n3. Position button at bottom-right\n4. Set On click action to 'Call a nanoflow'\n5. Create new nanoflow 'ACT_TakeNewPicture'\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Tabs in TypeScript\nDESCRIPTION: Complete implementation of a Main class that handles three different tabs. It includes menu creation, event listeners for each tab, and uses the createTabSpec helper method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/tab-api.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IComponent, studioPro, TabInfo, UISpec } from \"@mendix/extensions-api\";\n\nclass Main implements IComponent {\n  async loaded() {\n    // Add a menu item to the Extensions menu\n    await studioPro.ui.extensionsMenu.add({\n      menuId: \"myextension.MainMenu\",\n      caption: \"Show Tabs\",\n      subMenus: [\n        { menuId: \"myextension.ShowTab1\", caption: \"Show tab 1\" },\n        { menuId: \"myextension.ShowTab2\", caption: \"Show tab 2\" },\n        { menuId: \"myextension.ShowTab3\", caption: \"Show tab 3\" },\n      ],\n    });\n\n    // Open a tab when the menu item is clicked\n    studioPro.ui.extensionsMenu.addEventListener(\n      \"menuItemActivated\",\n      async (args) => {\n        if (args.menuId === \"myextension.ShowTab1\") {\n          const tab1Spec = this.createTabSpec(\"tab1\", \"Tab 1 Title\");\n          studioPro.ui.tabs.open(tab1Spec.info, tab1Spec.ui);\n        }\n        if (args.menuId === \"myextension.ShowTab2\") {\n          const tab2Spec = this.createTabSpec(\"tab2\", \"Tab 2 Title\");\n          studioPro.ui.tabs.open(tab2Spec.info, tab2Spec.ui);\n        }\n        if (args.menuId === \"myextension.ShowTab3\") {\n          const tab3Spec = this.createTabSpec(\"tab3\", \"Tab 3 Title\");\n          studioPro.ui.tabs.open(tab3Spec.info, tab3Spec.ui);\n        }\n      }\n    );\n  }\n\n  createTabSpec(tab: string, title: string): { info: TabInfo; ui: UISpec } {\n    const info: TabInfo = { title };\n    const ui: UISpec = {\n      componentName: \"extension/myextension\",\n      uiEntrypoint: tab,\n    };\n\n    return { info, ui };\n  }\n}\n\nexport const component: IComponent = new Main();\n```\n\n----------------------------------------\n\nTITLE: Creating a New App in Studio Pro - Mendix Command-Line Tool - Plaintext\nDESCRIPTION: The `mx create-project` command creates a new app in Mendix Studio Pro with specified options like app name, language code, and output directory. It can also accept a template MPK file for app initialization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmx create-project [OPTIONS] [TEMPLATE-MPK-FILE]\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Structure for Person Object in JavaScript\nDESCRIPTION: This snippet demonstrates a JSON representation of a person object with nested address information. It shows how JSON can be used to structure complex data in a lightweight format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-rest-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n\t\"name\": \"John Smith\",\n\t\"age\": 23,\n\t\"address\": \n\t{\n\t\t\"street\": \"Dopeylane 14\",\n\t\t\"city\": \"Worchestire\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Download File Activity Properties in Mendix 9\nDESCRIPTION: This snippet shows the properties configuration for the Download File activity in Mendix 9 microflows. It specifies the file document to be downloaded and whether to show the file in the browser or download it directly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/download-file.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### File document\n\nFile document specifies the file to be downloaded. The file data is stored in an object of entity System.FileDocument or a specialization of this entity.\n\n### Show File in Browser\n\n**Show file in browser** defines whether the file is downloaded to a location specified by the end-user or shown directly in the browser.\n\n| Option | Description |\n| --- | --- |\n| True | File is downloaded to the location for temporary internet files and shown on a new page in the browser. |\n| False | File is downloaded to the location specified by the end-user. |\n```\n\n----------------------------------------\n\nTITLE: Scaffolding a Pluggable Widget Project with Yeoman\nDESCRIPTION: This snippet demonstrates how to use the Yeoman generator to scaffold a new pluggable widget project for Mendix, including the input prompts required during the setup process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nyo @mendix/widget GroupBox\n```\n\n----------------------------------------\n\nTITLE: Checking for Empty Object in Mendix Java\nDESCRIPTION: This snippet demonstrates how to use Mendix expressions to determine if an object is empty. It requires an object to be passed as a parameter. This check returns 'False' if the object exists and 'True' if the object does not exist. It applies to various data types including domain entities and simple variables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n$object1 = empty\n```\n\n----------------------------------------\n\nTITLE: Defining TestNG Suite in XML\nDESCRIPTION: This XML configuration defines a TestNG suite named 'MyFirstTestSuite' with a single test that includes one TestNG file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_8\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suite name=\"MyFirstTestSuite\">\n\t<test name=\"Test1\">\n\t\t<classes>\n\t\t\t<class\n\t\t\t\tname=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n</suite>\n```\n\n----------------------------------------\n\nTITLE: Initializing CalculationsMicroflowCreator Class in C#\nDESCRIPTION: Defines the CalculationsMicroflowCreator class with necessary imports and attributes for dependency injection. This class will be used to create microflows programmatically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing Mendix.StudioPro.ExtensionsAPI.Model;\nusing Mendix.StudioPro.ExtensionsAPI.Model.DataTypes;\nusing Mendix.StudioPro.ExtensionsAPI.Model.Microflows;\nusing Mendix.StudioPro.ExtensionsAPI.Model.Projects;\nusing Mendix.StudioPro.ExtensionsAPI.Services;\nusing System.ComponentModel.Composition;\n\nnamespace MicroflowTutorial;\n\n[Export(typeof(CalculationsMicroflowCreator))]\n[method: ImportingConstructor]\nclass CalculationsMicroflowCreator(IMicroflowService microflowService, IMicroflowExpressionService microflowExpressionService)\n{\n    \n}\n```\n\n----------------------------------------\n\nTITLE: Committing a Temporary Working Copy with Platform SDK in TypeScript\nDESCRIPTION: Demonstrates how to commit changes made in a working copy back to the Team Server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nawait model.flushChanges();\nawait workingCopy.commitToRepository();\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Proxy Settings via Command Line\nDESCRIPTION: Commands for configuring and verifying HTTP proxy settings in Git's local configuration. These commands allow setting up proxy access for Git operations when working behind a corporate firewall.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/svn-git-differences.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit config --local http.proxy [protocol://][user[:password]@]proxyhost[:port]\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit config --local http.proxy\n```\n\n----------------------------------------\n\nTITLE: Querying with Implicit Type Conversion (Number to String)\nDESCRIPTION: This snippet demonstrates implicit type conversion from Number to String in XPath. It retrieves all Sales.Customer objects where 42 is equal to the Name. The number 42 will be converted to the string '42' before the comparison. Example provided in both Studio Pro and JavaQuery.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_10\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [42 = Name]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[42 = Name]\n```\n\n----------------------------------------\n\nTITLE: Interpreting Runtime Statistics Response from Mendix Runtime\nDESCRIPTION: The response includes comprehensive runtime statistics from Mendix, documenting request numbers per handler, session details, database interactions, and memory consumption. This data assists in monitoring system performance, potentially requiring knowledge of Java memory models for accurate interpretation. The structured output consists of various sections, such as requests, cache, sessions, connectionbus, and memory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":\n  {\n    \"requests\":\n    [\n      {\"name\":\"\",\"value\":97,\"last_request_timestamp\":1394785085325},\n      {\"name\":\"file\",\"value\":0,\"last_request_timestamp\":1394785072325},\n      {\"name\":\"ws-doc/\",\"value\":0,\"last_request_timestamp\":1394785072325},\n      {\"name\":\"xas/\",\"value\":8,\"last_request_timestamp\":1394785082325},\n      {\"name\":\"ws/\",\"value\":0,\"last_request_timestamp\":1394785072325}\n    ],\n    \"cache\": { \"total_count\":2 },\n    \"sessions\":\n    {\n      \"user_sessions\":{\n        \"562949953421313\":[\n          \"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\"\n        ]\n      },\n      \"named_users\":3,\n      \"named_user_sessions\":1,\n      \"anonymous_sessions\":0\n    },\n    \"connectionbus\":\n    {\n      \"update\":7,\n      \"transaction\":0,\n      \"select\":28,\n      \"delete\":5,\n      \"insert\":5\n    },\n    \"memory\":\n    {\n      \"code\":0,\n      \"init_nonheap\":2555904,\n      \"init_heap\":268435456,\n      \"eden\":0,\n      \"memorypools\":[\n        {\n          \"is_heap\":false,\n          \"usage\":11788032,\n          \"name\":\"Code Cache\",\n          \"index\":0\n        },\n        {\n          \"is_heap\":false,\n          \"usage\":49590256,\n          \"name\":\"Metaspace\",\n          \"index\":1\n        },\n        {\n          \"is_heap\":false,\n          \"usage\":6458552,\n          \"name\":\"Compressed Class Space\",\n          \"index\":2\n        },\n        {\n          \"is_heap\":true,\n          \"usage\":106799624,\n          \"name\":\"PS Eden Space\",\n          \"index\":3\n        },\n        {\n          \"is_heap\":true,\n          \"usage\":0,\n          \"name\":\"PS Survivor Space\",\n          \"index\":4\n        },\n        {\n          \"is_heap\":true,\n          \"usage\":18500976,\n          \"name\":\"PS Old Gen\",\n          \"index\":5\n        }\n      ],\n      \"committed_heap\":301465600,\n      \"max_heap\":3817865216,\n      \"used_nonheap\":67844048,\n      \"max_nonheap\":-1,\n      \"committed_nonheap\":72777728,\n      \"used_heap\":125300600\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Mendix Java Action Template\nDESCRIPTION: This code snippet provides the basic structure for a Mendix Java action. The `executeAction` method is called when the action is executed, and custom code can be added between the `// BEGIN USER CODE` and `// END USER CODE` comments. The `// BEGIN EXTRA CODE` and `// END EXTRA CODE` blocks are for defining extra methods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/java-programming/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the app.\n// Special characters, for example, é, ö, à, etc. are supported in comments.\n\npackage myfirstmodule.actions;\n\nimport com.mendix.systemwideinterfaces.core.IContext;\nimport com.mendix.webui.CustomJavaAction;\n\npublic class JavaAction_1 extends CustomJavaAction<java.lang.Void>\n{\n\tpublic JavaAction_1(IContext context)\n\t{\n\t\tsuper(context);\n\t}\n\t@java.lang.Override\n\tpublic java.lang.Void executeAction() throws Exception\n\t{\n\t\t// BEGIN USER CODE\n\t\treturn true;\n\t\t// END USER CODE\n\t}\n\t/**\n\t * Returns a string representation of this action\n\t */\n\t@java.lang.Override\n\tpublic java.lang.String toString()\n\t{\n\t\treturn \"JavaAction_1\";\n\t}\n\n\t// BEGIN EXTRA CODE\n\t// END EXTRA CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Exposing and Documenting JavaScript Actions in Mendix\nDESCRIPTION: This snippet demonstrates how to structure a JavaScript file in Mendix Studio Pro that will be exposed as a nanoflow action. It details the use of import lists, extra code blocks, and user code blocks while warning that code outside these blocks will be lost upon regeneration. It utilizes modern JavaScript features like `async`, `await`, and `Promise`. The snippet exemplifies user-defined functions with comments embedded directly in the code to ensure proper documentation and structured code management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\\n//\\n// WARNING: Only the following code will be retained when actions are regenerated:\\n// - the import list\\n// - the code between BEGIN USER CODE and END USER CODE\\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\\n// Other code you write will be lost the next time you deploy the app.\\nimport { Big } from \\\"big.js\\\";\\n\\n// BEGIN EXTRA CODE\\n function sayHello(message) {\\n     window.alert(\\\"Hello: \\\" + message);\\n}\\n// END EXTRA CODE\\n\\n/**\\n * Show an alert message to an user.\\n * @param {string} message - Message shown to the user.\\n * @returns {Promise.<void>}\\n */\\nexport async function Hello(message) {\\n\\t// BEGIN USER CODE\\n\\tsayHello(message);\\n\\treturn Promise.resolve();\\n\\t// END USER CODE\\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request for Listing Environment Snapshots in Mendix Cloud\nDESCRIPTION: This code demonstrates how to make a GET request to list snapshots of an environment in Mendix Cloud. It includes the required authentication headers and query parameters for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots?offset=0&limit=2\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Adding Milliseconds to a Date in Java\nDESCRIPTION: Example of using the addMilliseconds function to add 1400 milliseconds to a date. This function adds a specified number of milliseconds to a date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\naddMilliseconds(dateTime(2007, 1, 1, 1, 1, 1), 1400)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:02:400 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Training a Machine Learning Model with scikit-learn\nDESCRIPTION: This code fits the pipeline with training data to create a model that can predict whether messages are spam or not.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-sagemaker-machine-learning.md#2025-04-21_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\npipe.fit(X_train, y_train)\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Box Widget Properties in XML\nDESCRIPTION: This XML configuration defines the properties for the Group Box widget, including the content and header caption. It specifies the widget's name, description, and property types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_13\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\"\n    supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <property key=\"content\" type=\"widgets\" required=\"false\">\n                <caption>Content</caption>\n                <description>Widgets to place inside.</description>\n                </property>\n            <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                <caption>Header caption</caption>\n                <description />\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Calculating Date Differences with DATEDIFF Function in SQL\nDESCRIPTION: This snippet illustrates the syntax of the DATEDIFF function, which computes the difference between two DATETIME values based on a specified unit (e.g., DAY, MONTH). This function is essential for time-based calculations in SQL queries, allowing users to analyze date ranges effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_21\n\nLANGUAGE: sql\nCODE:\n```\nDATEDIFF ( unit , startdate_expression, enddate_expression [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Configure Edit Permissions with System Property (XML)\nDESCRIPTION: This snippet adds the `Editability` system property to the TextBox.xml file, allowing configuration of edit permissions for the widget in Mendix Studio Pro. This property is placed within the `Data source` property group to control how it's rendered in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Editability\">\n    <systemProperty key=\"Editability\"/>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers by Name Substring XPath Query\nDESCRIPTION: XPath query that returns Customer objects where the Name attribute contains the substring 'an' in a case-insensitive manner. This allows matching names like 'Andy' or 'Jan'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-contains.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer[contains(Name, 'an')]\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Query Logging in Mendix Runtime\nDESCRIPTION: Configuration for logging database queries that exceed a specified duration, helping developers identify and optimize slow queries. This setting allows tracking of queries that might impact application performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: configuration\nCODE:\n```\nLogMinDurationQuery = 10000\n```\n\n----------------------------------------\n\nTITLE: Creating a Modal Controller Class in C#\nDESCRIPTION: This controller class handles the display of modal dialogs in the application. It manages the creation and configuration of the modal view model, including setting its dimensions, and uses the dialog service to display the modal dialog. This approach keeps menu items free of dialog-related logic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-modal-web-view.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace MyCompany.MyProject.MendixExtension;\n\n[method: ImportingConstructor]\n[Export(typeof(MyModalWebViewController))]\nclass MyModalWebViewController(IDialogService dialogService, IMessageBoxService messageBoxService)\n{\n    public void ShowDialog(IModel currentApp, Uri webServerBaseUrl)\n    {\n        var modalViewModel = new MyModalWebViewViewModel(\"Modal WebView\", currentApp, dialogService, messageBoxService, webServerBaseUrl)\n        {\n            Height = 160, Width = 400,\n        };\n\n        dialogService.ShowDialog(modalViewModel);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building a Simple Chat Microflow with Amazon Bedrock\nDESCRIPTION: A microflow implementation example showing how to retrieve a Bedrock deployed model, send a message using the ChatCompletions operation, and display the response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-bedrock.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n1. Make sure that you [synced models](#sync-models) before running the microflow in the app.\n2. Create a new microflow and name it, for example, *AmazonBedrockChatCompletions*.\n3. Add a **Microflow call** from the **Toolbox** and choose microflow *AmazonBedrockConnector.BedrockDeployedModel_Get*\n4. Double-click it to configure its parameters.\n    1. For the **ModelID** parameter, enter the model id of the LLM you want to send a message to. The model id of Claude 3.5 Sonnet is *anthropic.claude-3-5-sonnet-20240620-v1:0*.\n    2. Click **OK**.\n5. In the **Toolbox**, search for the **Chat Completions (without history)** activity in the *GenAI (Generate)* and drag it onto your microflow.\n6. Double click on the activity to see its parameters.\n    1. The **OptionalRequest** and **OptionalFileCollection** parameters are not needed for this example, so you can set them to **empty**.\n    2. For the **UserPrompt** parameter, enter a string of your choice, for example *Hi, Claude!*. \n    3. For the **DeployedModel** parameter, pass the retrieved **BedrockDeployedModel** object\n    4. CLick **OK**.\n7. Add a **Show Message** activity to the end of the microflow and configure it to show *$Response/ResponseText*\n8. Add a button that calls this microflow, run your project, and verify the results.\n```\n\n----------------------------------------\n\nTITLE: Configuring Delete Behavior for Associations in Mendix\nDESCRIPTION: This snippet provides guidance on how to configure delete behavior for associations in Mendix, which determines how deletions of entities affect related entities. Users can choose between cascading deletes or preventing deletes based on associations. It requires existing associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/create-a-basic-data-layer.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\nTo configure the delete behavior, double-click the **Order_Customer** association to open its **Properties** dialog box:\n* To configure a cascading delete, select the **Delete 'Order' object(s) as well** option in the **On delete of 'Customer' object** section; this means that all the orders of a customer will also be removed if the customer is deleted:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582209.png\" class=\"no-border\" >}}\n\n* To configure the delete prevention, select the **Delete 'Customer' object only if it is not associated with 'Order' object(s)** in the **On delete of 'Customer' object** section; this means that a customer can only be deleted if no orders refer to this customer, and the **Error message** will be shown to a user that tries to delete a customer that has orders:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582208.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Entities and Attributes in Mendix\nDESCRIPTION: This snippet provides a step-by-step guide on how to create entities and their attributes using Mendix Studio Pro. It details the process of creating a persistable entity and adding attributes with specific types. Dependencies include having Mendix Studio Pro installed and an app created or available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/create-a-basic-data-layer.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open your app's **Domain Model**:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582192.png\" class=\"no-border\" >}}\n\n2. Click **Entity** in the menu bar:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582191.png\" class=\"no-border\" >}} \n\n3. Click inside the domain model editor to create the entity:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582190.png\" class=\"no-border\" >}} \n\n    By default, Studio Pro creates a persistable entity, which means the app's database will be able to store objects of this type of entity.\n4. Start typing directly to change the name of the entity into **Customer**:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582189.png\" class=\"no-border\" >}}\n\n5. Right-click the **Customer** entity and select **Add** > **Attribute**:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582188.png\" class=\"no-border\" >}}\n\n6. Enter *Name* for the **Name** of the new attribute, and select **String** as the data **Type**:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582186.png\" class=\"no-border\" >}}\n\n7. Repeat the steps above to create a complete entity that looks like this:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582185.png\" class=\"no-border\" >}}\n\n8. Repeat the steps above again to create a second entity that looks like this:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582184.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: AWS ECR IRSA Policy for OCI Image Builds in JSON\nDESCRIPTION: This JSON policy snippet provides the necessary permissions to allow image builds in AWS ECR using IRSA authentication. The policy includes actions for managing repository activities, layer uploads, image listing, and authentication token retrieval. It is key for integrating AWS ECR with Kubernetes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowImageBuilds\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:PutImage\",\n                \"ecr:ListImages\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:DescribeRepositories\",\n                \"ecr:CreateRepository\"\n            ],\n            \"Resource\": \"arn:aws:ecr:*:<account_id>:repository/*\"\n        },\n        {\n            \"Sid\": \"AllowAuthentication\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ecr:GetAuthorizationToken\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Retry on Failure via Core API - Java\nDESCRIPTION: This snippet shows how to configure automatic retries for microflows and Java actions in case of failure. It demonstrates both fixed delay and exponential delay retry strategies using `withRetry` and `withExponentialRetry` methods, setting the maximum number of attempts and the initial delay.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n```java\nCore.microflowCall(\"AModule.SomeMicroflow\")\n  .withRetry(10, Duration.ofSeconds(3))\n  .executeInBackground(context, \"AModule.SomeQueueName\");\nCore.userActionCall(\"AModule.SomeJavaAction\")\n  .withExponentialRetry(8, Duration.ofSeconds(3), Duration.ofMinutes(1))\n  .executeInBackground(context, \"AModule.SomeQueueName\");\n```\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint for Data Grid Filtering\nDESCRIPTION: This snippet suggests adding an XPath constraint to the drop-down search field of a datagrid, restricting possible options so that only objects that have an association to the entity in the grid are fetched. This improves the performance of filtering associated entities, especially in databases where filtering by non-existing criteria can be slow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/community-best-practices-for-app-performance.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"[Order_Customer/Order]\"\n```\n\n----------------------------------------\n\nTITLE: Using Aggregate Function to Calculate Total Price - Mendix\nDESCRIPTION: This snippet explains how to replace a loop with an aggregate function to calculate the total order price in a Mendix microflow. By utilizing the 'aggregate list' function with the 'Sum' operation, the total can be computed directly, eliminating the need for iteration. The necessary prerequisite is familiarity with Mendix aggregate functions and their configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/working-with-lists-in-a-microflow.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Add an **Aggregate list** activity after the **OrderList**.\n3. Double-click the aggregate list activity...{...}\n   - For **Function** select **Sum**\n   - For **Attribute** select **TotalPrice**.\n```\n\n----------------------------------------\n\nTITLE: Querying User Roles in Studio Pro\nDESCRIPTION: This XPath query retrieves users with the 'Administrator' role.  It utilizes the `[%UserRole_Administrator%]` system variable to filter based on user role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_8\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [System.UserRoles = '[%UserRole_Administrator%]']\n```\n\n----------------------------------------\n\nTITLE: Configuring Entity Access Rules in Mendix\nDESCRIPTION: Detailed steps for creating access rules for different module roles, specifying read, write, create, and delete permissions for entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/create-a-secure-app.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nAccess Rule Configuration:\n- Allow creating new objects: true\n- Allow deleting existing objects: true\n- Member read and write rights: Read, Write\n```\n\n----------------------------------------\n\nTITLE: Batch Retrieve (Mendix)\nDESCRIPTION: This snippet demonstrates how to retrieve data in batches within a Mendix microflow to improve performance.  It shows a basic structure for fetching data in chunks, which can be beneficial when dealing with large datasets.  It avoids loading all data at once, which reduces memory consumption and improves responsiveness.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-performance/detect-and-resolve-performance-issues.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n\"// Example of retrieving in batches (conceptual)\n// Implement logic to retrieve objects in batches and process them\"\n```\n\n----------------------------------------\n\nTITLE: Calculating Beginning of Month in Java\nDESCRIPTION: Illustrates how to use the `beginOfMonth` function to get the first day of the month from an initial Date and time input, returning the date at midnight. The function takes a Date and time value and outputs the date with the time set to 00:00.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nbeginOfMonth(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Date Manipulation: Adding Time Units\nDESCRIPTION: Functions to add specific time units to a date, with support for standard and UTC calendars for milliseconds, seconds, minutes, hours, days, weeks, months, quarters, and years\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix Expression\nCODE:\n```\naddDays(date, numberOfDays)\n```\n\n----------------------------------------\n\nTITLE: Updating GroupBoxProps Interface in TypeScript\nDESCRIPTION: This TypeScript snippet updates the GroupBoxProps interface to include properties for collapsibility and initial collapsed state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_45\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface GroupBoxProps {\n    startCollapsed?: boolean;\n    collapsible: boolean;\n    collapseIcon?: ReactNode;\n    expandIcon?: ReactNode;\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n```\n\n----------------------------------------\n\nTITLE: Subtracting Milliseconds using Java\nDESCRIPTION: This function subtracts a specified number of milliseconds from a given date and time value. It requires an initial date in the 'Date and time' format and an integer value representing milliseconds to be subtracted. The output is a date and time value adjusted by the subtracted milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nsubtractMilliseconds(dateTime(2007, 1, 1, 1, 1, 1), 1000)\n```\n\n----------------------------------------\n\nTITLE: Combining Subquery in FROM with Other Tables in SQL\nDESCRIPTION: Demonstrates how to combine a subquery in the FROM clause with other tables. This example joins the Request table with a subquery containing all customers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_54\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM\n\tSales.Request AS Req,\n\t(\n\t\tSELECT *\n\t\tFROM Sales.Customer\n\t) AS Cust\nWHERE\n\tReq.CustomerName = Cust.LastName\n```\n\n----------------------------------------\n\nTITLE: XML Representation of Many-to-Many Association in Mendix\nDESCRIPTION: This XML code illustrates how a many-to-many association between Accountant and Group entities with dual ownership is represented in Mendix. Both entities store references to multiple instances of the other entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/associations/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<Accountant id=\"501\">\n\t<idnumber>1</idnumber>\n\t<name>Earl Grey</name>\n\t<telephonenumber>1-800-EARL-GREY</telephonenumber>\n\t<Accountant_Group>id_301 id_302</Accountant_Group>\n</Accountant>\n\n<Accountant id=\"502\">\n\t<idnumber>2</idnumber>\n\t<name>Scrooge McDuck</name>\n\t<telephonenumber>1-800-SCROOGE-MCDUCK</telephonenumber>\n\t<Accountant_Group>id_301 id_302</Accountant_Group>\n</Accountant>\n\n<Group id=\"301\">\n\t<name>Multinational corporations</name>\n\t<Accountant_Group>id_501 id_502</Accountant_Group>\n</Group>\n\n<Group id=\"302\">\n\t<name>Hardware suppliers</name>\n\t<Accountant_Group>id_501 id_502</Accountant_Group>\n</Group>\n```\n\n----------------------------------------\n\nTITLE: Constructing OData URL for Specific Object in JavaScript\nDESCRIPTION: This JavaScript code snippet shows how to construct an OData URL for referencing a specific object. It combines the service root, collection name, and object instance identifier to create a complete URL for accessing a particular object within the OData service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"@SERVICEROOT + '/' + toString(COLLECTIONNAME) + '/' + OBJECTINSTANCE\"\n```\n\n----------------------------------------\n\nTITLE: Implementing TextInput Component with State Management\nDESCRIPTION: TextInput component implementation with local state management for handling input changes and blur events. Uses React hooks for state management and effect handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createElement, CSSProperties, ReactElement, useEffect, useState } from \"react\";\n\nexport interface TextInputProps {\n    value: string;\n    className?: string;\n    style?: CSSProperties;\n    tabIndex?: number;\n    onLeave?: (value: string, changed: boolean) => void;\n    disabled?: boolean;\n}\n\ninterface TextInputState {\n    editedValue?: string;\n}\n\nexport function TextInput({ value, onLeave, tabIndex, style, className, disabled }: TextInputProps): ReactElement {\n    const [state, setState] = useState<TextInputState>({ editedValue: undefined });\n    useEffect(() => setState({ editedValue: undefined }), [value]);\n    \n    function getCurrentValue(): string {\n        return state.editedValue !== undefined ? state.editedValue : value;\n    }\n    \n    function onBlur(): void {\n        onLeave?.(getCurrentValue(), getCurrentValue() !== value);\n        setState({ editedValue: undefined });\n    }\n    \n    return (\n        <input\n            type=\"text\"\n            value={getCurrentValue()}\n            onChange={event => setState({ editedValue: event.target.value })}\n            onBlur={onBlur}\n            className={\"form-control \" + className}\n            disabled={disabled}\n            style={style}\n            tabIndex={tabIndex}\n        />\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Technical Contact with PATCH Request\nDESCRIPTION: HTTP PATCH request to update the Technical Contact for a specific app using its UUID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-4.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPATCH /apps/80a28d6e-c5fc-43d9-87c2-d7d56b07542e\n```\n\n----------------------------------------\n\nTITLE: Enumeration Utility: Metadata Retrieval\nDESCRIPTION: Functions to retrieve metadata about enumeration values, such as getting the caption in the current language or retrieving the technical key\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: Mendix Expression\nCODE:\n```\ngetCaption(enumerationValue)\n```\n\n----------------------------------------\n\nTITLE: Rendering Clickable Header for Collapsible Widget\nDESCRIPTION: This method was developed to render a clickable header for the widget, which changes behavior based on the platform (iOS or Android). It wraps header content in a touchable component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_25\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = () => {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    const view = (\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        <View style={this.styles.header}>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n            <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n            <Text style={this.styles.headerContent}>-</Text>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        </View>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    );\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    return <Touchable>{view}</Touchable>;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n};\n```\n\n----------------------------------------\n\nTITLE: Alternative Querying by Order ID\nDESCRIPTION: This snippet provides an alternative method to retrieve the same customer by referencing the order's ID directly. It emphasizes an alternative XPath query structure but warns of its inefficiency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/ID = 'ID_124123512341']\n```\n\n----------------------------------------\n\nTITLE: Counting Product Names\nDESCRIPTION: Uses COUNT on a single attribute to count the number of non-null names in the Sales.Product entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(Name) AS NameEntryCount FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Using DISTINCT with Multiple Columns\nDESCRIPTION: Demonstrates DISTINCT applied to multiple columns, returning unique combinations of FirstName and LastName.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT DISTINCT FirstName FName, LastName LName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Selecting First Names with a Filter in OQL\nDESCRIPTION: This OQL query retrieves the first names of customers whose name is 'Jansen'. It illustrates the use of a WHERE clause to filter results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer WHERE Name = 'Jansen'\n```\n\n----------------------------------------\n\nTITLE: Defining Content Property in XML\nDESCRIPTION: This XML snippet defines a `content` property for the widget. This property is of type `widgets`, not required, and is used to allow the Mendix developer to fill the content within the group box.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                    </property>\n```\n\n----------------------------------------\n\nTITLE: Setting X-Csrf-Token Header for Active Session Authentication in JavaScript\nDESCRIPTION: This code snippet demonstrates how to set the X-Csrf-Token header in an XMLHttpRequest to prevent cross-site request forgery when using active session authentication for OData/GraphQL services.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://mysite/odata/myservice/myentity\", false);\nxmlHttp.setRequestHeader(\"X-Csrf-Token\", mx.session.getConfig(\"csrftoken\"));\nxmlHttp.send(null);\n```\n\n----------------------------------------\n\nTITLE: Rendering a Clickable Header in React Native\nDESCRIPTION: This method renders a clickable header for the group box, using platform-specific touchable components for iOS and Android.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = () => {\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n            <Text style={this.styles.headerContent}>-</Text>\n        </View>\n    );\n\n    const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n\n    return <Touchable>{view}</Touchable>;\n};\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders by Price with XPath in Mendix\nDESCRIPTION: This snippet shows how to filter a data grid to display orders with a minimum total price of 50.00 using XPath. This is achieved by setting the data source type to XPath and providing the XPath expression that filters orders based on the TotalPrice attribute. The XPath constraint ensures that only orders with a TotalPrice greater than or equal to 50 are displayed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_1\n\nLANGUAGE: XPath\nCODE:\n```\n\"[TotalPrice >= 50]\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associated Objects with OData $expand\nDESCRIPTION: Illustrates how to retrieve associated objects using the $expand query parameter. This query fetches employees along with their related cars and city addresses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\n/odata/myservice/Exployees?$expand=Cars,Address/City\n```\n\n----------------------------------------\n\nTITLE: Filtering Aggregated Results with HAVING Clause - OQL\nDESCRIPTION: This example highlights the usage of the HAVING clause to filter aggregated data resulting from a GROUP BY clause. The query identifies brands with more than one location and displays their aggregated stock values. This allows for targeted insights within grouped results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_34\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, SUM(Stock) AS SumStock, COUNT(*) AS LocationCount\nFROM Sales.Location\nGROUP BY Brand\nHAVING COUNT(*) > 1\n```\n\n----------------------------------------\n\nTITLE: Executing Generic OQL Query with Mendix Java API\nDESCRIPTION: Develop a reusable microflow action that can execute OQL queries and transform results into Mendix objects. Uses Core.retrieveOQLDataTable() for data retrieval and dynamic object creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-datastorage-api.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nCore.retrieveOQLDataTable()\nCore.instantiate()\nCore.createOQLTextGetRequestFromDataSet()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Properties from Selected 3D Objects using JavaScript in Mendix\nDESCRIPTION: This JavaScript action retrieves properties of a selected part in the 3D Viewer by getting the object instances and extracting key-value property pairs. It takes a selected object identifier and a property object entity name as parameters, and returns an array of property objects created in the Mendix database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/3d-viewer-api.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {string} selectedObject\n * @param {string} propertyObject\n * @returns {Promise.<MxObject[]>}\n */\nexport async function GetProperties(selectedObject, propertyObject) {\n  // BEGIN USER CODE\n  console.info(selectedObject);\n    // Get the underlying 3D objects given its selection ids.\n  let instances = mx.viewer3D.getObjects(selectedObject);\n  let promises = [];\n  let objects = [];\n  if (instances && instances.length > 0) {\n    let properties = await instances[0].getProperties();\n    for(let key in properties) {\n      if(properties.hasOwnProperty(key)) {\n        promises.push(createPropertyObject(objects, key, properties[key]));\n      }\n    }\n  }\n\n  return Promise.all(promises).then(()=>objects);\n\n  function createPropertyObject(objects, key, value) {\n  return new Promise(function (resolve, reject) {\n      mx.data.create({\n    entity: propertyObject,\n    callback: function(prop) {\n        prop.set(\"Key\", key);\n        prop.set(\"Value\", value);\n          objects.push(prop);\n        resolve(prop);\n    },\n      error: function(error) {\n          reject(error.message);\n      }\n        });\n    });\n      }\n\n    // END USER CODE\n  }\n```\n\n----------------------------------------\n\nTITLE: Importing External Library in Mendix JavaScript Action\nDESCRIPTION: Example showing how to import an external library (pdf-lib) in a Mendix JavaScript action. The code demonstrates the standard Mendix JavaScript action structure with import statements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the app.\nimport { Big } from \"big.js\";\nimport { PDFDocument } from \"pdf-lib\"\n\n// BEGIN EXTRA CODE\n```\n\n----------------------------------------\n\nTITLE: Adding Seconds to Date in Java\nDESCRIPTION: Shows how to add 2 seconds to a date using addSeconds function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\naddSeconds(dateTime(2007, 1, 1, 1, 1, 1), 2)\n```\n\n----------------------------------------\n\nTITLE: Implementing Todo Storage Handler in C#\nDESCRIPTION: Creates a storage handler class to manage todo items persistence using JSON serialization. Handles loading and saving of todo data to disk with error logging support.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Text;\nusing System.Text.Json;\nusing Mendix.StudioPro.ExtensionsAPI.Model;\nusing Mendix.StudioPro.ExtensionsAPI.Services;\n\nnamespace Mendix.ToDoExtension;\n\npublic class ToDoStorage\n{\n    private readonly ILogService _logService;\n    private readonly string _toDoFilePath;\n\n    public ToDoStorage(IModel currentApp, ILogService logService)\n    {\n        _logService = logService;\n        _toDoFilePath = Path.Join(currentApp.Root.DirectoryPath, \"to-do-list.json\");\n    }\n\n    public ToDoListModel LoadToDoList()\n    {\n        ToDoListModel? toDoList = null;\n\n        try\n        {\n            toDoList = JsonSerializer.Deserialize<ToDoListModel>(File.ReadAllText(_toDoFilePath, Encoding.UTF8));\n        }\n        catch (Exception exception)\n        {\n            _logService.Error($\"Error while loading To Dos from {_toDoFilePath}\", exception);\n        }\n\n        return toDoList ?? new ToDoListModel(new[]\n        {\n            new ToDoModel(\"Buy milk\", false),\n            new ToDoModel(\"Fix house\", false),\n            new ToDoModel(\"Shave yak\", true)\n        }.ToList());\n    }\n\n    public void SaveToDoList(ToDoListModel toDoList)\n    {\n        var jsonText = JsonSerializer.Serialize(toDoList, new JsonSerializerOptions() { WriteIndented = true });\n        File.WriteAllText(_toDoFilePath, jsonText, Encoding.UTF8);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Files from SMB Drive in Java with NTLMFileHandler\nDESCRIPTION: Java code example showing how to connect to a Samba share using a regular username, password, and IP address with the NTLMFileHandler. It retrieves a file document from the Samba share based on configuration details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/access-a-samba-share-from-the-mxcloud.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic ReadFileFromSMBDrive(SMBConfiguration SMBConfig, FileDocument DocumentParameter1)\n{\n    super();\n    this.SMBConfig = SMBConfig;\n    this.DocumentParameter1 = DocumentParameter1;\n}\n\n@Override\npublic Boolean executeAction() throws Exception\n{\n    // BEGIN USER CODE\n\n    NTLMFileHandler fileHandler = new NTLMFileHandler(getContext(), this.SMBConfig.getDomainName(), this.SMBConfig.getUsername(), this.SMBConfig.getPassword());\n    fileHandler.getSingleFile(this.SMBConfig.getImportFolder(), this.DocumentParameter1.getName(getContext()), this.DocumentParameter1.getMendixObject(), this.DocumentParameter1.getDeleteAfterDownload());;\n\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Assignable Expression Properties in Mendix Pluggable Widgets\nDESCRIPTION: Example of configuring an attribute property and an expression property with a return type assignable to that attribute. This enables type-safe expressions that match the attribute type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myAttribute\" type=\"attribute\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n    <attributeTypes>\n        <attributeType name=\"String\" />\n        <attributeType name=\"Boolean\" />\n    </attributeTypes>\n</property>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myExpression\" type=\"expression\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n    <returnType assignableTo=\"myAttribute\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Representing JSON Data Structure in JavaScript\nDESCRIPTION: This snippet demonstrates a simple JSON structure representing a person object with nested address information. It shows how JSON can be used to represent hierarchical data in a lightweight format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"John Smith\",\n    \"age\": 23,\n    \"address\": \n    {\n        \"street\": \"Dopeylane 14\",\n        \"city\": \"Worchestire\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Scheduling Task Execution with Java API\nDESCRIPTION: Utilizes the Java API to schedule the execution of tasks, such as microflows and Java actions, at a specific future date and time. Tasks are set to execute in the background based on the provided calendar date. Ideal for deferring task processing to a later time point. Ensure proper usage of the Calendar and Date objects to schedule the correct date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/task-queue.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nCalendar calendar = Calendar.getInstance();\ncalendar.add(Calendar.DATE, 1); // add 1 day to the current date\nDate date = calendar.getTime();\nCore.microflowCall(\"AModule.SomeMicroflow\")\n  .withParam(\"Param1\", \"Value1\")\n  .withParam(\"Param2\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\", date);\nCore.userActionCall(\"AModule.SomeJavaAction\")\n  .withParams(context, \"Value1\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\", date);\n```\n\n----------------------------------------\n\nTITLE: Reading a File from SMB Drive using NTLM in Java\nDESCRIPTION: This Java code snippet demonstrates how to read a file from an SMB drive using NTLM authentication. It utilizes the `NTLMFileHandler` to connect to the Samba share, retrieve the specified file, and optionally delete it after download. It assumes the existence of `SMBConfiguration` and `FileDocument` objects containing the necessary connection details and file information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/access-a-samba-share-from-the-mxcloud.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic ReadFileFromSMBDrive(SMBConfiguration SMBConfig, FileDocument DocumentParameter1)\n{\n    super();\n    this.SMBConfig = SMBConfig;\n    this.DocumentParameter1 = DocumentParameter1;\n}\n\n@Override\npublic Boolean executeAction() throws Exception\n{\n    // BEGIN USER CODE\n\n    NTLMFileHandler fileHandler = new NTLMFileHandler(getContext(), this.SMBConfig.getDomainName(), this.SMBConfig.getUsername(), this.SMBConfig.getPassword());\n    fileHandler.getSingleFile(this.SMBConfig.getImportFolder(), this.DocumentParameter1.getName(getContext()), this.DocumentParameter1.getMendixObject(), this.DocumentParameter1.getDeleteAfterDownload());;\n\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Validating Mendix Object Input in JavaScript Actions\nDESCRIPTION: Demonstrates how to validate a Mendix object input parameter by checking if it exists, inherits from the correct entity, has content, and contains a file with an allowed extension.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {MxObject} audioFile\n */\nasync function PlayAudio(audioFile) {\n    // BEGIN USER CODE\n    if (!audioFile) {\n        throw new Error(\"The 'Audio file' parameter can not be empty\");\n    }\n    if (!audioFile.isA(\"System.FileDocument\") && !audioFile.inheritsFrom(\"System.FileDocument\")) {\n        throw new Error(\"The 'Audio file' parameter should inherit from System.FileDocument\");\n    }\n    if (!audioFile.get(\"HasContents\")) {\n        throw new Error(\"The 'Audio file' parameter does not have any content\");\n    }\n    const allowedExtensions = [\"mp3\", \"wav\", \"ogg\"]\n    const fileName = audioFile.get(\"Name\");\n    const dotIndex = fileName.lastIndexOf(\".\");\n    const extension = fileName.substring(dotIndex + 1).toLowerCase();\n    if (dotIndex === -1 || allowedExtensions.indexOf(extension) === -1) {\n        throw new Error(\"The 'Audio file' parameter only supports files with extension .mp3, .wav or .ogg\");\n    }\n    /* implementation */\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Parameterized Entity Type in JavaScript Action\nDESCRIPTION: Final implementation with documentation, type parameterization, and dynamic entity handling that makes the action reusable across different entity types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n/*\nSearching users on GitHub.com, it could find users via various criteria. This action returns up to 100 results.\n@param {string} query - The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub.\n@param {string} userEntity - The entity to match the Return type Entity.\n@returns {Promise.<MxObject[]>}\n*/\nexport async function SearchGitHubUsers(query, userEntity) {\n    // BEGIN USER CODE\n    // Documentation: https://developer.github.com/v3/search/#search-users\n    // Will return JSON structure\n    // {\n    //   \"total_count\": 82531,\n    //   \"incomplete_results\": false,\n    //   \"items\": [\n    //      {\n    //        \"login\": \"mojombo\",\n    //        \"avatar_url: \"http://...\"\n    //      }\n    //    ]\n    //  }\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); \n    const jsonData = await response.json();\n    logger.debug(\"count\", jsonData.total_count);\n    const gitHubUsers = jsonData.items.map(createGitHubUser);\n    return Promise.all(gitHubUsers);\n\n    function createGitHubUser(user) {\n        // Wrap the Mendix Client API in a promise\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: userEntity,\n                callback: function(mxObject) {\n```\n\n----------------------------------------\n\nTITLE: Creating Entity Context Menu Extension in C#\nDESCRIPTION: This snippet implements a context menu extension for entities in Mendix Studio Pro. It creates a hierarchy of context menu items that can modify entity properties, such as relocating entities on the canvas, randomly renaming them, and displaying entity information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-context-menu.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace MyCompany.MyProject.MendixExtension;\n\n[method: ImportingConstructor]\n[Export(typeof(Mendix.StudioPro.ExtensionsAPI.UI.Menu_V2.ContextMenuExtension<>))]\nclass MyEntityContextMenuExtension(IMessageBoxService messageBoxService) : Mendix.StudioPro.ExtensionsAPI.UI.Menu_V2.ContextMenuExtension<IEntity>\n{\n    MenuViewModel? disabledMenu;\n\n    public override IEnumerable<MenuViewModel> GetContextMenus(IEntity entity)\n    {\n        var nudgeDownLeft = new MenuViewModel(\"Left\", () => NudgeIt(entity, right: false, down: true));\n        var nudgeDownLeftRight = new MenuViewModel(\"Right\", () => NudgeIt(entity, right: true, down: true) );\n        var nudgeDown = new MenuViewModel(\"Down\", [nudgeDownLeft, nudgeDownLeftRight]);\n\n        var nudgeUpLeft = new MenuViewModel(\"Left\", () => NudgeIt(entity, right: false, down: false));\n        var nudgeUpRight = new MenuViewModel(\"Right\", () => NudgeIt(entity, right: true, down: false));\n        var nudgeUp = new MenuViewModel(\"Up\", [nudgeUpLeft, nudgeUpRight])\n        {\n            Separator = MenuSeparator.Before\n        };\n\n        yield return new MenuViewModel(\"Nudge it!\", [nudgeDown, nudgeUp]);\n\n        // new group\n        var randomRenameString = new MenuViewModel(\"Random string\", () => RenameEntity(entity, number: false));\n        var randomRenameNumber = new MenuViewModel(\"Random number\", () => RenameEntity(entity, number: true));\n\n        yield return new MenuViewModel(\"Randomly rename\", [randomRenameString, randomRenameNumber]);\n\n        // show location\n        yield return new MenuViewModel(\"Show location\", () => ShowLocation(entity, messageBoxService));\n\n        var showName = new MenuViewModel(\"Show current name\", () => messageBoxService.ShowInformation(entity.Name));\n        // \"Randomly rename\" was added previously, thus it will trigger an exception when collected if uncommented\n        //yield return new MenuViewModel(\"Randomly rename\", [showName]);\n\n        // Enabling a disabled menu\n        disabledMenu ??= new MenuViewModel(\"Disabled menu\", () =>\n        {\n            messageBoxService.ShowInformation(\"I'm enabled now. But not for long!\");\n            disabledMenu!.IsEnabled = false;\n        }){ IsEnabled = false };\n        var enablingMenu = new MenuViewModel(\"Enable disabled menu\", () => disabledMenu.IsEnabled = true );\n\n        yield return new MenuViewModel(\"Enabling menus\", [disabledMenu, enablingMenu]);\n\n    }\n\n    void NudgeIt(IEntity entity, bool right, bool down)\n    {\n        var incrementRight = right ? 20 : -20;\n        var incrementDown = down ? 20 : -20;\n        using var transaction = CurrentApp!.StartTransaction(\"nudge with context menu\");\n        entity.Location = new Location(entity.Location.X + incrementRight, entity.Location.Y + incrementDown);\n\n        transaction.Commit();\n    }\n\n    void RenameEntity(IEntity entity, bool number)\n    {\n        using var transaction = CurrentApp!.StartTransaction(\"rename with context menu\");\n\n        entity.Name = number ? $\"E_{new Random().Next()}\" : $\"E_{Guid.NewGuid().ToString().Replace(\"-\", \"\")}\";\n\n        transaction.Commit();\n    }\n    static void ShowLocation(IEntity entity, IMessageBoxService messageBoxService) => messageBoxService.ShowInformation($\"X: {entity.Location.X}, Y: {entity.Location.Y}\");\n}\n```\n\n----------------------------------------\n\nTITLE: Basic XPath Comparison Query\nDESCRIPTION: Query to retrieve customers with the name 'Jansen' using a simple equality comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Path Parameter Syntax in Mendix REST Operations\nDESCRIPTION: Shows the syntax for including path parameters in a REST operation path. Path parameters are specified between curly braces {} and can be used to capture parts of the URL as microflow parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-path-parameters.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n{parameter_name}\n```\n\n----------------------------------------\n\nTITLE: Creating a Promise for User Confirmation\nDESCRIPTION: This snippet shows how to wrap a confirmation dialog in a Promise, allowing for a structured way to handle user responses in a Mendix application. It captures the logic for handling user confirmation actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nfunction AskConfirmation(question) {\n    // BEGIN USER CODE\n    return new Promise(function (resolve) {\n        mx.ui.confirmation({\n            content: question,\n            handler: function() {\n                resolve(true);\n            },\n            onCancel: function() {\n                resolve(false);\n            }\n        });\n    });\n    // END USER CODE\n}\n\n```\n\n----------------------------------------\n\nTITLE: Configuring a SQL Query for Multi-Series Chart Data in Mendix\nDESCRIPTION: This SQL snippet calculates average, minimum, and maximum temperatures for US locations over time, providing data formatted for generating a multi-series chart. It groups results by date and returns daily records, ensuring that the data visualization in the Mendix app displays the necessary metrics for each day.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nselect date_valid_std\n,      avg(avg_temperature_air_2m_f) as avg_temp_f\n,      round(avg((avg_temperature_air_2m_f - 21) * (5/9)),1) as avg_temp_c\n,      min(avg_temperature_air_2m_f) as min_temp_f\n,      round(min((avg_temperature_air_2m_f - 21) * (5/9)),1) as min_temp_c\n,      max(avg_temperature_air_2m_f) as max_temp_f\n,      round(max((avg_temperature_air_2m_f - 21) * (5/9)),1) as max_temp_c\nfrom   STANDARD_TILE.HISTORY_DAY\ngroup by date_valid_std\norder by DATE_VALID_STD asc\n```\n\n----------------------------------------\n\nTITLE: Creating Object with Event Handlers\nDESCRIPTION: Demonstrates creating a Mendix object with full event handler execution and database commit. Shows configuring object creation with different commit options and handling client-side refreshing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/create-object.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Create Object Properties\nCODE:\n```\n{\n  Entity: \"Selected Entity\",\n  Commit: \"Yes with event handlers\",\n  Refresh in Client: \"Yes\",\n  Change Members: \"Custom attribute values\",\n  Object Name: \"NewObjectVariable\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Settings for Local Development\nDESCRIPTION: Direct JVM parameters for configuring proxy settings when running locally from Studio Pro or Eclipse.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/using-a-proxy-to-call-a-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-Dhttp.proxyHost=myproxyserver.com  -Dhttp.proxyPort=3128 -Dhttp.proxyUser=myusername -Dhttp.proxyPassword=mypassword\n```\n\n----------------------------------------\n\nTITLE: Defining ListValue Interface in TypeScript\nDESCRIPTION: This snippet defines the ListValue interface which represents a list of objects for a datasource property. It includes methods for pagination, sorting, and filtering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ObjectItem {\n    id: GUID;\n}\n\nexport interface ListValue {\n    status: ValueStatus;\n\n    offset: number;\n    limit: number;\n    setOffset(offset: number): void;\n    setLimit(limit: Option<number>): void;\n    requestTotalCount(needTotalCount: boolean): void;\n    hasMoreItems?: boolean;\n    totalCount?: number;\n    items?: ObjectItem[];\n\n    sortOrder: SortInstruction[];\n    filter: Option<FilterCondition>;\n    setSortOrder(sortOrder: Option<SortInstruction[]>): void;\n    setFilter(filter: Option<FilterCondition>): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Badge Number in JavaScript for Mobile App\nDESCRIPTION: This snippet demonstrates how to set the badge number for local notifications in a mobile application. It involves creating a variable and using a JavaScript action to assign the badge number when a user receives a notification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n1. Open **ACT_CreateAndSendNotification**.\n2. Drag a **Create variable** activity to the right of the three string variables you made:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/new-variable-badge.png\" alt=\"new create variable\"   width=\"500\"  class=\"no-border\" >}}\n\n3. Double-click the variable activity and select **Data type** > **Integer/Long**.\n4. Type *1* into the expression value field. \n5. Type *badge_number* into the **variable name** field:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/badge-1.png\" alt=\"badge number\"   width=\"400\"  class=\"no-border\" >}}\n\n6. Click **OK**.\n7. Drag a **Set badge number** JavaScript action to the right of your merge activity:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/set-badge-act.png\" alt=\"drag set badge number\" class=\"no-border\" >}}\n\n8. Double-click the badge number activity.\n9. Set the value of **Badge number** to **$badge_number**\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/badge-input.png\" alt=\"value badge number\" class=\"no-border\" >}}\n\n10. Click **OK**.\n```\n\n----------------------------------------\n\nTITLE: Defining Owner XPath Constraint\nDESCRIPTION: This code snippet shows how to define an XPath constraint that applies only if the object owner matches the current user. It is used to restrict access based on ownership.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n[System.owner='[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Setting CSRF Token for REST Requests in JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to set the `X-Csrf-Token` header when making a GET request to a REST service. This is essential for preventing cross-site request forgery. The token is retrieved from the Mendix session configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://mysite/rest/myservice/myresource\", false);\nxmlHttp.setRequestHeader(\"X-Csrf-Token\", mx.session.getConfig(\"csrftoken\"));\nxmlHttp.send(null);\n```\n\n----------------------------------------\n\nTITLE: Getting PostgreSQL Pod Name with kubectl in Bash (Windows)\nDESCRIPTION: This kubectl command, designed for Windows environments, retrieves the name of the PostgreSQL pod. It filters pods based on the label `app=postgres` and outputs only the name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n\"kubectl get pods -lapp=postgres -o name\"\n```\n\n----------------------------------------\n\nTITLE: Defining List Widget Properties Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for widget properties including data source, selectable objects, associations and attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    mySelectableObjects: ListValue;\n    myAssociationOnDatasource: ListReferenceValue;\n    myAttributeOnSelectableObjects: ListAttributeValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cert-manager for Automated TLS Management in Mendix Operator\nDESCRIPTION: This YAML snippet demonstrates how to set up the OperatorConfiguration to use cert-manager for automated TLS certificate management. It specifies annotations for choosing a cluster issuer and generates a unique TLS secret name based on the MendixApp CR name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-advanced-ingress-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  # Endpoint (Network) configuration\n  endpoint:\n    # ...\n    # omitted lines for brevity\n    # ...\n    ingress:\n      # Optional, can be omitted: annotations which should be applied to all Ingress Resources\n      annotations:\n        # Use the \"staging-issuer\" cert-manager ClusterIssuer to generate TLS certificates with Let's Encrypt\n        cert-manager.io/cluster-issuer: staging-issuer\n      # ...\n      # omitted lines for brevity\n      # ...\n      # When generating certificates with cert-manager, generate a unique name based on the MendixApp CR name\n      tlsSecretName: '{{.Name}}-tls'\n# ...\n# omitted lines for brevity\n# ...\n```\n\n----------------------------------------\n\nTITLE: NativeTemplateConfig Interface (TypeScript)\nDESCRIPTION: This code defines the TypeScript interface `NativeTemplateConfig` which represents the structure of the configuration file for the Native Mobile Toolkit. It includes properties for app name, identifier, version, bundle name, build number, device target, capabilities, orientation, permissions, and runtime URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ninterface NativeTemplateConfig {\n    configVersion: 2;\n    appName: string;\n    appIdentifier: string;\n    appVersion: string;\n    bundleName: BundleName;\n    buildNumber: number;\n    deviceTarget: DeviceTarget;\n    capabilities: Capabilities;\n    orientation: Orientation;\n    permissions: Permission[];\n    runtimeUrl: string;\n}\n\ninterface Capabilities {\n    appCenterOTA: Capability;\n    crashlytics: Capability;\n    deepLink: DeepLinkCapability;\n    firebaseAndroid: Capability;\n    firebaseIos: Capability;\n    localNotifications: Capability;\n    maps: MapsCapability;\n    mapsIos: MapsIosCapability;\n    pushNotifications: Capability;\n}\n\ninterface Capability {\n    enabled: boolean;\n}\n\ninterface IOSPermission extends Permission {\n    purpose: string;\n}\n\ninterface Permission {\n    name: string;\n    title: string;\n    platform: OS;\n    required: boolean;\n}\n\ninterface DeviceTarget {\n    phone: boolean;\n    tablet: boolean;\n}\n\nexport interface Orientation {\n    portrait: boolean;\n    landscape: boolean;\n}\n\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Orders Having an Empty Status Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all customers with an order that has a status that is empty using an XPath query. As with the example above, it does not retrieve customers with no orders. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order/Sales.Order/Status = empty]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Sales.Customer_Order/Sales.Order/Status = empty]\n```\n\n----------------------------------------\n\nTITLE: Using Authorization Header with PAT for Mendix Epics API\nDESCRIPTION: Example of how to make an authenticated HTTP request to the Mendix Epics API using a Personal Access Token (PAT) in the Authorization header with the MxToken prefix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/epics-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /projects/d92064a5-b1fd-4be4-97db-53fc90201d1c/epics HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Styling Text Box Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the Text Box widget in Mendix native mobile applications. It includes styles for the container, input, label, and validation message. It also provides specific styles for focused, error, and disabled states of the text box.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nexport const TextBox = {\n  container: {\n    // All ViewStyle properties   \n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the text box is non-editable.   \n  },\n  input: {\n    // All TextStyle properties\n    autoCapitalize: 'sentences', // This is a Boolean value indicating whether the tab bar bounces when scrolling. This automatically capitalizes certain characters when the user types: \n    // 'characters': capitalizes all characters \n    // 'words': capitalizes the first letter of each word \n    // 'sentences': capitalizes the first letter of each sentence (default) \n    // 'none': capitalizes nothing\n    placeholderTextColor: null, // This is the text color of the placeholder string.\n    selectionColor: null, // This is the highlight and cursor color of the text input.\n    underlineColorAndroid: null, // This is the color of the `input` underline.\n  },  \n  inputFocused: {\n    // Same properties as `input`. Overrides `input` styles if the text box is focused (with Studio Pro v8.15).\n  },\n  inputError: {\n    // Same properties as `input`. Overrides `input` styles if there are validation errors.  \n  },\n  inputDisabled: {\n    // Same properties as `input`. Overrides `input` styles if the text box is non-editable.\n  },\n  label: {\n    // All TextStyle properties\n    numberOfLines: 1 // This is the maximum number of lines to wrap the label text. If the text is any longer, it will be cut off with an ellipsis.  \n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the text box is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },  \n};\n```\n\n----------------------------------------\n\nTITLE: ActionValue Interface Definition in TypeScript\nDESCRIPTION: Defines the TypeScript interface for ActionValue used to represent actions in pluggable widgets. The interface includes properties for execution state tracking and a method to trigger the action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ActionValue {\n    readonly canExecute: boolean;\n    readonly isExecuting: boolean;\n    execute(): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Enumeration Attribute in OData PATCH Request (JSON)\nDESCRIPTION: Example of updating an enumeration attribute using a PATCH request in OData. The request body specifies the exposed value of the enumeration without the type prefix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Country\": \"Brazil\"\n}\n```\n\n----------------------------------------\n\nTITLE: Combining XPath Constraints with OR in Mendix\nDESCRIPTION: This snippet demonstrates how to combine two XPath constraints using the logical OR operator. The combined constraint filters the data grid to display orders that are either 'Open' or have a total price greater than or equal to 50. The XPath expression uses the `or` operator to achieve this.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_2\n\nLANGUAGE: XPath\nCODE:\n```\n\"[OrderStatus = 'Open'] or [TotalPrice >= 50]\"\n```\n\n----------------------------------------\n\nTITLE: REST Service Version Number Format\nDESCRIPTION: Demonstrates the version numbering format using MAJOR.MINOR.PATCH convention for REST services. MAJOR for incompatible changes, MINOR for backwards-compatible features, and PATCH for backwards-compatible fixes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/version-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMAJOR.MINOR.PATCH\n```\n\n----------------------------------------\n\nTITLE: Using the floor Function in Mendix\nDESCRIPTION: Rounds a number down to the nearest integer. Returns the largest integer that is less than or equal to the input value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nfloor(3.9)\n```\n\nLANGUAGE: java\nCODE:\n```\nfloor(-1.2)\n```\n\n----------------------------------------\n\nTITLE: Using Subquery with IN Operator in WHERE Clause in SQL\nDESCRIPTION: Demonstrates how to use a subquery with the IN operator in the WHERE clause. The subquery must return exactly one column but can return multiple rows. This example finds customers who have made requests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_58\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.Customer Cust\nWHERE\n\tCust/LastName IN (\n\t\tSELECT CustomerName\n\t\tFROM Sales.Request Req\n\t)\n```\n\n----------------------------------------\n\nTITLE: Request Handlers Configuration in Mendix\nDESCRIPTION: Overview of various request handlers used in Mendix applications for handling different types of web service and application requests\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/metrics.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Request Type   | Explanation                                               |\n|----------------|-----------------------------------------------------------|\n| **api-doc/**   | A general API doc overview for other doc request handlers |\n| **debugger/**  | Mendix Runtime debugger request handler                   |\n| **default**    | Default request handler                                   |\n| **file**       | Request handler used for serving files                    |\n| **odata-doc/** | Documentation request handler for OData                   |\n| **openid/**    | OPENID authentication request handler                     |\n| **p/**         | Request handler for custom page URLs                      |\n| **rest-doc/**  | HTTP REST web service request handler documentation       |\n| **ws-doc/**    | SOAP webservice request handler documentation             |\n| **ws/**        | SOAP webservice call request handler                      |\n| **xas/**       | Request handler used by the Mendix Runtime itself         |\n```\n\n----------------------------------------\n\nTITLE: Refactoring Component and Interface in TypeScript\nDESCRIPTION: Includes steps to refactor a component's class name, file name, and properties for clarity and consistency. By updating import paths and styles, this snippet maintains application functionality while improving code maintainability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nexport class GroupBox extends Component<GroupBoxProps>;\n\nimport { GroupBox as WrappedGroupBox } from \"./components/GroupBox\";\n\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: Platform.OS === \"ios\" ? 4 : 0,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    }\n};\n\nexport interface CustomStyle extends Style {\n    container: ViewStyle;\n    header: ViewStyle;\n    headerContent: TextStyle;\n    content: ViewStyle;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Sort Order Parameter in Mendix Microflow\nDESCRIPTION: Sets the sort order parameter for the REST service call in a Mendix microflow. This determines whether the sorting is ascending or descending.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_4\n\nLANGUAGE: Expression\nCODE:\n```\nif $Paging/SortAscending then 'asc' else 'desc'\n```\n\n----------------------------------------\n\nTITLE: Complex Query with Multiple OData Options in HTTP\nDESCRIPTION: Shows a complex GET request using multiple OData query options including $select, $expand, $filter, $orderby, and $top.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_12\n\nLANGUAGE: HTTP\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers\n            ?$select=CustomerId,Lastname\n            &$expand=Addresses($select=AddressId,City),Notes($select=NoteId,Note)\n            &$filter=contains(FirstName,'a')\n            &$orderby=CustomerId+desc\n            &$top=1\n```\n\n----------------------------------------\n\nTITLE: Creating REST Service Call in Mendix Microflow\nDESCRIPTION: This snippet shows how to set up a REST service call in a Mendix microflow to fetch airport data. It includes setting the URL template and handling the response with an import mapping.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nTemplate: https://my-json-server.typicode.com/mendix/howto-api-data/airports\n\nResponse handling: Apply import mapping\nMapping: [Select the import mapping created]\nVariable Name: Result\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Model-Specific Operations with InvokeModel\nDESCRIPTION: Step-by-step guide for invoking specific Amazon Bedrock models that require custom JSON structures. This approach is needed when the standard ChatCompletions operation doesn't support the desired model functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-bedrock.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Choose the model with which you want to interact by using the **Invoke Model** operation.\n2. In the [Model Parameters](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) section of the Amazon Bedrock user guide, find the request and response JSON structures of the specific model that you want to invoke.\n3. Create your domain model inspired by the JSON structures that you found. You can use a tool to visualize Json structures if needed, such as [JSON Crack](https://jsoncrack.com/editor).\n4. In Mendix Studio Pro, create a JSON structure by doing the following steps:\n    1. Right-click on the target folder.\n    2. Click **Add other** > **JSON structure**.\n    3. Create a structure for the request JSON.\n    4. Repeat the previous steps to create a structure for the response JSON.\n    5. Open the created JSON structure.\n    6. Paste the request or response JSON into the created structure.\n    7. Click **OK**.\n5. Generate export and import mappings for the request and response JSON structures.\n    The export mapping creates a JSON from the request-related objects (specific to the model that you want to invoke). The JSON must be added as the request body of the `InvokeModelRequest` object provided as input parameter to the **Invoke Model** operation. The import mapping maps the response returned by the **Invoke Model** operation to your model-specific response objects. To create import or export mappings, perform the following steps:\n    1. Right-click the target folder.\n    2. Click **Add other** > **Import/Export mapping**.\n    3. In the dialogue window, select the **Schema source**.\n    4. Click **JSON structure** and select the appropriate request/response JSON structure.\n    5. Select the relevant schema elements.\n    6. Click **OK**.\n    7. Map the relevant elements to the correct attributes by double-clicking the shown entities and choosing the correct entity attributes for the correct elements.\n6. Create a microflow that invokes a specific model using the **Invoke Model** operation, such as in the following figure (for Claude v. 2.1):\n```\n\n----------------------------------------\n\nTITLE: Implementing String Attribute Filtering in Mendix\nDESCRIPTION: Code that demonstrates how to apply filtering on a string attribute using the startsWith filter builder. It checks if the attribute is filterable before applying the filter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { attribute, literal, startsWith } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAttributeString.filterable) {\n    const filterCond = startsWith(attribute(this.props.myAttributeString.id), literal(\"B\"));\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Attribute is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using LEFT OUTER JOIN in OQL\nDESCRIPTION: This example demonstrates using a 'LEFT OUTER JOIN' with the 'FROM' clause to find all customers without orders by matching the customer entity against the order entity. It retrieves customer names and ensures that only customers with no associated orders are listed by filtering nulls in the order ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \n  Customer/Name as Name,\n  Customer/<anyotherattribute> as <anyotherattribute>\nFROM MyModule.Customer\n  LEFT OUTER JOIN Customer/MyModule.Customer_Order/MyModule.\"Order\" as \"Order\"\nWHERE \"Order\"/ID IS NULL\n```\n\n----------------------------------------\n\nTITLE: Defining MBean Interface for Mendix Statistics\nDESCRIPTION: This Java interface, `MxStatsMBean.java`, defines the contract for an MBean that exposes generic statistics about a Mendix application. The interface specifies methods (getters) for retrieving information such as the maximum number of concurrent users, action queue size, active action count, scheduled action count, number of concurrent sessions, current user count, completed action count, and named user count. Implementing this interface allows monitoring tools to access these Mendix statistics via JMX.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/monitoring-mendix-using-jmx.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"package jmx.actions;\\n\\npublic interface MxStatsMBean {\\n\\npublic int getMaximumNumberConcurrentUsers() throws Exception;\\n\\npublic int getActionQueueSize();\\n\\npublic int getActiveActionCount();\\n\\npublic int getScheduledActionCount();\\n\\npublic long getNumberConcurrentSessions();\\n\\npublic long getCurrentUserCount();\\n\\npublic long getCompletedActionCount();\\n\\npublic long getNamedUserCount();\\n\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Extending TextInput Component to Support Various Attributes in TypeScript\nDESCRIPTION: The TextInput component is modified to include an 'id' and aria attributes for better accessibility. This code ensures that inputs can be properly linked with labels and provide feedback for screen readers. It requires passing 'aria' and 'id' attributes from a higher-level component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface InputProps {\n    id?: string;\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    hasError?: boolean;\n    required?: boolean;\n    disabled?: boolean;\n    onLeave?: (value: string, changed: boolean) => void;\n}\n\nrender(): ReactNode {\n    const className = classNames(\"form-control\", this.props.className);\n    const labelledby = `${this.props.id}-label` \n        + (this.props.hasError ? ` ${this.props.id}-error` : \"\");\n    return <input\n        id={this.props.id}\n        type=\"text\"\n        className={className}\n        style={this.props.style}\n        value={this.getCurrentValue()}\n        tabIndex={this.props.tabIndex}\n        onChange={this.onChangeHandle}\n        disabled={this.props.disabled}\n        onBlur={this.onBlurHandle}\n        aria-labelledby={labelledby}\n        aria-invalid={this.props.hasError}\n        aria-required={this.props.required}\n    />;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Icon Property in a Preview Component\nDESCRIPTION: Example demonstrating how to use the Icon component to preview an icon property in a pluggable widget preview component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Icon } from \"mendix/components/web/Icon\";\n\ntype Props = {\n    icon: IconProperty;\n}\n\nexport const preview: React.FC<Props> = (props) => (\n    <div className=\"my-pw-container\">\n        <Icon icon={props.icon} />\n        <div className=\"my-pw-content\">…</div>\n    </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Generating Webhook Signature Using HMAC-SHA256 Bash\nDESCRIPTION: This Bash script calculates a webhook signature using HMAC-SHA256 authentication. It requires the webhook ID, timestamp, payload, and a validation secret as inputs. The output is a base64 encoded signature which can be compared against the signature sent in the webhook header to verify its authenticity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/webhooks.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nWEBHOOK_ID= #from the header\nWEBHOOK_TIMESTAMP= #from the header\nPAYLOAD= #payload of the message\nVALIDATION_SECRET= #set when creating the webhook in the Mendix Portal\n\n# To generate the signature:\nprintf '%s.%s.%s' \"$WEBHOOK_ID\" \"$WEBHOOK_TIMESTAMP\" \"$PAYLOAD\" | openssl dgst -sha256 -binary -hmac \"$VALIDATION_SECRET\" | openssl base64\n```\n\n----------------------------------------\n\nTITLE: Formatting Date Part of DateTime in Mendix\nDESCRIPTION: Extracts and formats only the date portion of a Date and time value. Returns a date string in a standard format based on Java version and user locale.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nformatDate(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Finding Substring Position in Java\nDESCRIPTION: Shows how to use the find function to locate the position of a substring within a string, with an optional start position parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nfind('thisismystring', 'my')\n```\n\nLANGUAGE: java\nCODE:\n```\nfind('thisismystring', 'yourstring')\n```\n\nLANGUAGE: java\nCODE:\n```\nfind('thisismystring', 'i', 5)\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers by Last Name in OQL\nDESCRIPTION: An OQL query example that retrieves customer first names where the last name equals 'Jansen'. Demonstrates a simple equality comparison in the WHERE clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-where-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nWHERE LastName = 'Jansen'\n```\n\n----------------------------------------\n\nTITLE: Converting to Lowercase in Mendix - Java\nDESCRIPTION: The `toLowerCase` function converts all the characters in a given string to lowercase. It requires a single input parameter: the string to convert. The output is the same string in lowercase. The function operates without altering the original string, producing a new, modified string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntoLowerCase('thisISmyString')\n```\n\n----------------------------------------\n\nTITLE: Querying Day of Year in Local Time Zone - Java\nDESCRIPTION: This snippet demonstrates how to use the `day-of-year-from-dateTime()` function to query logs for a specific day of the year based on a DateAttribute in the local time zone. It returns logs where the day of the year equals 40.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[day-of-year-from-dateTime(DateAttribute) = 40]\n```\n\n----------------------------------------\n\nTITLE: Reversing Asset Name in Java Action\nDESCRIPTION: This snippet replaces the placeholder exception in the 'executeAction' method, implementing the logic to reverse the name of the input asset. It retrieves the asset name and constructs the reversed string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/extending-your-application-with-custom-java.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n    String assetsAssetName = this.inputAssets.getAssetName(this.getContext());\n    return new StringBuilder(assetsAssetName).reverse().toString();\n```\n\n----------------------------------------\n\nTITLE: Generating HTTP Response in Microflow\nDESCRIPTION: Constructs an HTTP response with JSON content and appropriate headers\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-rest-service.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\nCreating HttpResponse with JSON content and Content-Type header\n```\n\n----------------------------------------\n\nTITLE: Implementing ToDo List Collection Model in C#\nDESCRIPTION: This code defines a collection model to store multiple ToDo items. It uses a record type with a constructor that accepts a list of ToDo models and provides access to the list through a property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Text.Json.Serialization;\n\nnamespace Mendix.ToDoExtension;\n\npublic record ToDoListModel\n{\n    [JsonConstructor]\n    public ToDoListModel(List<ToDoModel> toDos)\n    {\n        ToDos = toDos;\n    }\n\n    public List<ToDoModel> ToDos { get; }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ServiceAccount for Mendix App\nDESCRIPTION: This snippet demonstrates how to create and annotate a Kubernetes ServiceAccount for the Mendix environment, thereby allowing it to access required resources as specified in the app configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_29\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n <{Kubernetes namespace}> create serviceaccount <{environment name}>\nkubectl -n <{Kubernetes namespace}> annotate serviceaccount <{environment name}> privatecloud.mendix.com/environment-account=true\n```\n\n----------------------------------------\n\nTITLE: HttpRequest Entity Structure Definition\nDESCRIPTION: Defines the attributes of the HttpRequest system entity used for server requests. Includes HttpVersion, Uri, and Content attributes with their types and default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/http-request-and-response-entities.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nHttpRequest {\n  HttpVersion: String = \"HTTP/1.1\"  // Protocol version\n  Uri: String = \"\"               // Full URI including query parameters\n  Content: String = \"\"           // Request body\n  + HttpHeaders association      // For request headers\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Configuration POST Request in JSON\nDESCRIPTION: Example POST request for setting environment configuration in Mendix. The request body includes Constants, CustomSettings, and ScheduledEvents configurations to be applied to a Mendix environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_25\n\nLANGUAGE: json\nCODE:\n```\nPOST /api/1/apps/calc/environments/acceptance/settings\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"Constants\" : [{\n         \"Name\" :  \"MyFirstModule.BooleanConstant\" ,\n         \"DataType\" :  \"_Boolean\" ,\n         \"Value\" :  \"true\" ,\n         \"DeployedValue\" :  \"false\"\n     },{\n         \"Name\" :  \"MyFirstModule.DateTime\" ,\n         \"DataType\" :  \"DateTime\" ,\n         \"Value\" :  \"2013-12-20T16:02:32\" ,\n         \"DeployedValue\" :  \"2013-12-20T16:02:32\"\n     }],\n     \"CustomSettings\" : [],\n     \"ScheduledEvents\" : [{\n         \"Name\" :  \"MyFirstModule.Monitor_Scheduled_event\" ,\n         \"DeployedValue\" :  \"Disabled\" ,\n         \"Value\" :  \"Enabled\"\n     }]\n}\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes Using Alias in OQL\nDESCRIPTION: Example showing how to select all attributes from an entity that has been given an alias in the FROM clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Person.* FROM Sales.Customer AS Person\n```\n\n----------------------------------------\n\nTITLE: Setting Up Decision Point in Mendix Workflow\nDESCRIPTION: This snippet details the steps to add a decision point in the workflow to determine the onboarding process based on the new hire's work location. It includes setting up decision properties to split the workflow paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the workflow editor > **Toolbox** and drag the **Decision** activity after the **Manager: Specify Device and Location** user task.\n2. Open the decision properties and set the **Caption** to **WFH?**.\n3. In the **Condition** dialog box, type in the expression: `$WorkflowContext/WFH`.\n```\n\n----------------------------------------\n\nTITLE: Debugging JavaScript Actions in Chrome Developer Tools\nDESCRIPTION: This code snippet demonstrates how to add a debugger statement in a JavaScript action to trigger debugging in Chrome Developer Tools. It's used as a last resort when other debugging methods are insufficient.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\ndebugger;\n```\n\n----------------------------------------\n\nTITLE: Fetching Single Customer by ID\nDESCRIPTION: Example HTTP GET request to retrieve a specific customer resource by its identifier from an OData API endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers(1)\n```\n\n----------------------------------------\n\nTITLE: Sorting with Ascending Order in ORDER BY Clause - OQL\nDESCRIPTION: This example shows how to explicitly specify ascending order in an ORDER BY clause. The behavior is the same as the default sorting, yet it serves as a clear indication of the desired order of the results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_37\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nORDER BY LastName ASC\n```\n\n----------------------------------------\n\nTITLE: Dynamic Attribute Mapping for Flexible GitHub User Objects\nDESCRIPTION: Advanced implementation that dynamically maps GitHub API response attributes to Mendix object attributes. Instead of hardcoding attribute names, it discovers available attributes on the Mendix object and sets values accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); \n    const jsonData = await response.json();\n    logger.debug(\"count\", jsonData.total_count);\n    const gitHubUsers = jsonData.items.map(createGitHubUser);\n    return Promise.all(gitHubUsers);\n\n    function createGitHubUser(user) {\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: \"HowTo.GitHubUser\",\n                callback: function(mxObject) {\n                    // Dynamically set attributes\n                    mxObject.getAttributes()\n                        .forEach(function(attributeName) {\n                            var attributeValue = user[attributeName];\n                            if (attributeValue) {\n                                mxObject.set(attributeName, attributeValue);\n                            }\n                        });\n                    resolve(mxObject);\n                },\n                error: function(error) {\n                    reject(\"Could create object:\" + error.message);\n                }\n            });\n        });\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Validating and Acquiring Translatable Text\nDESCRIPTION: The GetI18NText microflow validates and retrieves the translated text for validation messages. This approach is designed to handle potential null pointer exceptions when incorrect modeling occurs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/refguide/modeling/menus/translatable-texts/translatable-validation-messages/model3.jpg\" class=\"no-border\" width=\"500\" >}}\n```\n\n----------------------------------------\n\nTITLE: Calculating Price with Discount in Mendix Expression\nDESCRIPTION: Expression that calculates selling price by applying a discount percentage to the base price. Uses arithmetic operators for calculation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n$CurrentPrice/Price - (($CurrentPrice/Price **div** 100) * $OrderLine/Discount)\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Notifications Nanoflow in Mendix\nDESCRIPTION: A nanoflow implementation that handles notification permissions and displays local notifications in a Mendix native mobile app. The flow creates notification content variables, checks for permissions, requests permissions if needed, and displays notifications with customizable title, subtitle, and body.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/native-local-notifications.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nACT_CreateAndSendNotification:\n1. Create string variables (Title, Subtitle, Body)\n2. Has notification permission -> NotificationPermission\n3. Decision (Permission?)\n4. Request notification permission -> PermissionGranted\n5. Show error message if no permission\n6. Display Notification with:\n   - Title, Subtitle, Body variables\n   - Play sound: true\n   - Action name: empty\n   - Action guid: empty\n   - Use return value: no\n```\n\n----------------------------------------\n\nTITLE: Creating a New Entity with Attribute in Mendix\nDESCRIPTION: This code snippet demonstrates how to create a new entity with an attribute within a Mendix domain model using the Mendix Model SDK. It utilizes the `createIn` method to instantiate the entity and attribute, sets the entity's name and location, and assigns a name to the new attribute. The code assumes that the `mendixmodelsdk` module is imported and that a domain model instance is available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/manipulating-existing-models/changing-things-in-the-model.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { domainmodels } from \"mendixmodelsdk\";\n\nfunction createEntity(domainModel: domainmodels.DomainModel, entityName: string, attributeName: string) {\n    const newEntity = domainmodels.Entity.createIn(domainModel);\n    newEntity.name = entityName;\n\n    // location in the Mendix Studio Pro working area:\n    newEntity.location = { x: 100, y: 100 };\n\n    // new attribute (which is by default a string attribute):\n    const newAttribute = domainmodels.Attribute.createIn(newEntity);\n    newAttribute.name = attributeName;\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Metrics Collection in MendixApp CR\nDESCRIPTION: This YAML snippet shows how to disable metrics collection by removing the `runtimeMetricsConfiguration` block from the MendixApp Custom Resource (CR). This approach is applicable for standalone mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  # Existing configuration\n  # ...\n  # Delete this runtimeMetricsConfiguration block\n  runtimeMetricsConfiguration:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Retrieving Mendix Runtime Statistics\nDESCRIPTION: JSON request to fetch comprehensive runtime statistics including request handlers, cache information, session data, database connection metrics and memory usage details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"runtime_statistics\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":\n  {\n    \"requests\":\n    [\n      {\"name\":\"\",\"value\":97,\"last_request_timestamp\":1394785085325},\n      {\"name\":\"file\",\"value\":0,\"last_request_timestamp\":1394785072325}\n    ],\n    \"cache\": { \"total_count\":2 },\n    \"sessions\":\n    {\n      \"user_sessions\":{\n        \"562949953421313\":[\n          \"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\"\n        ]\n      },\n      \"named_users\":3,\n      \"named_user_sessions\":1,\n      \"anonymous_sessions\":0\n    }\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Final GitHub User Search with Type Parameters and Documentation\nDESCRIPTION: The complete JavaScript action with type parameters for entity flexibility, comprehensive documentation, and dynamic attribute mapping. It includes JSDoc annotations for parameters and return types, and detailed comments about the GitHub API structure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/*\nSearching users on GitHub.com, it could find users via various criteria. This action returns up to 100 results.\n@param {string} query - The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub.\n@param {string} userEntity - The entity to match the Return type Entity.\n@returns {Promise.<MxObject[]>}\n*/\nexport async function SearchGitHubUsers(query, userEntity) {\n    // BEGIN USER CODE\n    // Documentation: https://developer.github.com/v3/search/#search-users\n    // Will return JSON structure\n    // {\n    //   \"total_count\": 82531,\n    //   \"incomplete_results\": false,\n    //   \"items\": [\n    //      {\n    //        \"login\": \"mojombo\",\n    //        \"avatar_url: \"http://...\"\n    //      }\n    //    ]\n    //  }\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); \n    const jsonData = await response.json();\n    logger.debug(\"count\", jsonData.total_count);\n    const gitHubUsers = jsonData.items.map(createGitHubUser);\n    return Promise.all(gitHubUsers);\n\n    function createGitHubUser(user) {\n        // Wrap the Mendix Client API in a promise\n\n```\n\n----------------------------------------\n\nTITLE: Executing REST Service Call in Mendix Microflow\nDESCRIPTION: This snippet illustrates the process of setting up a microflow to call a REST service using the 'Call REST service' action in Mendix. It details the configuration needed in the microflow, including setting the URL in the General tab and handling the response by storing it as a file document. The configuration of storing the response in a variable and updating the client is also explained.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/rest-binary.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n\\n1. Complete the two steps in the [Retrieve Files with REST](#retrieve-files) section.\\n2. Create a **GetImage** (or **GetFile**) microflow.\\n    * Right-click in the **CMSClient** module and select **Add microflow**.\\n\\n3. Drag a **Call REST service** action into the microflow and set the following properties:\\n    * In the **General** tab: \\n         * **Location** – the URL to your REST service and the specific file (for example, `http://localhost:8080/rest/cmsapi/v1/myfile/1`)\\n    * In the **Response** tab:\\n         * **Response handling** – select **Store in a file document**\\n         * **Store in variable** – select **Yes**\\n         * **Type** – select the **RetrievedFile** entity\\n         * **Variable Name** – enter `GetResponseFile`\\n  \\n4. For images: \\n   Drag a **Change object** action into the microflow after the **Call REST service** action so the image viewer will display the retrieved image\\n    * Double-click the newly-created action to open the properties\\n    * In the **Object** field, select the **GetResponseFile** variable for the **RetrievedFile** entity\\n    * In the **Refresh in client** field, select **Yes`\\n\n```\n\n----------------------------------------\n\nTITLE: Sample Microflow Structure for Web Service Operation\nDESCRIPTION: Illustrates a microflow that retrieves and returns customer data. This microflow will be published as a web service operation for external consumption.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/published-web-services/expose-a-web-service.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/expose-a-web-service/model.jpg\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Delete Object(s) Activity in Mendix\nDESCRIPTION: Configure the delete object(s) activity to remove one or more objects from a Mendix application. Supports deleting objects in microflows and nanoflows with configurable refresh and event handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/deleting-objects.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nDeleteObject(Object/List)\n```\n\n----------------------------------------\n\nTITLE: Creating New Entity in Domain Model in TypeScript\nDESCRIPTION: This snippet creates a new entity within the domain model. It utilizes the addEntity method to define the new entity's properties. Additionally, it shows how to assign documentation to the new entity and save changes back to the model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/model-api.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst newEntity: DomainModels.Entity = await domainModel.addEntity({ name: \"NewEntity\", attributes: [{ name: \"MyAttribute\", type: \"AutoNumber\" }]});\n\nnewEntity.documentation = \"New documentation\";\n\nawait domainModels.save(domainModel);\n```\n\n----------------------------------------\n\nTITLE: Retrieving App Repository Information with Platform SDK in TypeScript\nDESCRIPTION: Demonstrates how to get information about an app's repository, including type, URL, and commit messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst repository = app.getRepository();\n    \nconst repositoryInfo = await repository.getInfo();\nconsole.log(\"Repository Info: \", repositoryInfo);\n\nconst commitMessages = (await repository.getBranchCommits(\"main\")).items.map(commit => commit.message);\nconsole.log(\"Commit messages: \", commitMessages);\n```\n\n----------------------------------------\n\nTITLE: Understanding Operator Behavior\nDESCRIPTION: This section explains how the behavior of XPath operators may vary with different database types used in Mendix applications, emphasizing the SQL query generation by the Mendix runtime. It mentions specifics such as HSQLDB ignoring trailing spaces and PostgreSQL's consideration of them, emphasizing the need for careful testing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Calculating Sum of Total Prices for Filtered Orders Using XPath in Java\nDESCRIPTION: This XPath query calculates the sum of the TotalPrice attribute for Sales.Order entities filtered by a specific customer name. It shows how to use the sum() function with a more complex query involving relationships and conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-sum.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nsum(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Comparison in Java\nDESCRIPTION: Demonstrates a less than or equal to comparison in Java that returns a Boolean false when checking if 6 is less than or equal to 3.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n6<=3\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with No Orders Using XPath\nDESCRIPTION: This query retrieves all the customers who have not placed any orders using an exist-expression in an XPath query. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_12\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [not(Sales.Customer_Order/Sales.Order)]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: Defining Name System Property in Mendix Pluggable Widget XML\nDESCRIPTION: This XML snippet defines the Name system property for a Mendix pluggable widget. It controls the position of the widget name input and is used for locating the widget during automated tests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_21\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Name\"/>\n```\n\n----------------------------------------\n\nTITLE: Create Kubernetes Service Account, Role, and RoleBinding\nDESCRIPTION: This script creates a Kubernetes ServiceAccount, Role, and RoleBinding for CI/CD purposes. It defines the necessary permissions for the service account to create and manage pods and access logs within a specified namespace.  It uses a YAML manifest provided via a here-document (<< EOF) and the `kubectl apply` command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# create ServiceAccount, Role, and RoleBinding\nexport NAMESPACE=default\nkubectl create namespace $NAMESPACE || true\nkubectl apply -f << EOF -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mxplatform-cicd\n  namespace: $NAMESPACE\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mxplatform-cicd\n  namespace: $NAMESPACE\n  annotations:\n    kubernetes.io/service-account.name: mxplatform-cicd\ntype: kubernetes.io/service-account-token\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: mxplatform-cicd\n  namespace: $NAMESPACE\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  - pods/log\n  verbs:\n  - create\n  - get\n  - delete\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: mxplatform-cicd\n  namespace: $NAMESPACE\nsubjects:\n- kind: ServiceAccount\n  name: mxplatform-cicd\n  namespace: $NAMESPACE\nroleRef:\n  kind: Role\n  name: mxplatform-cicd\n  apiGroup: rbac.authorization.k8s.io\nEOF\n```\n\n----------------------------------------\n\nTITLE: Setting Default Input Values in JavaScript Actions\nDESCRIPTION: This code snippet illustrates how to define default input values for parameters in a JavaScript action. It uses conditional checks to assign default values if the parameters are null or undefined, ensuring that the action functions correctly even when some inputs are not provided.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {Big} targetSize\n * @param {\"Module.PictureSource.camera\"|\"Module.PictureSource.gallery\"} pictureSource\n * @param {boolean} correctOrientation\n * @param {string} waterMark\n */\nfunction CameraStart(targetSize, pictureSource, correctOrientation, waterMark) {\n    // BEGIN USER CODE\n    targetSize = targetSize && targetSize > 0 ? targetSize : 150;  // numeric\n    pictureSource = pictureSource ? pictureSource : \"camera\"; // enumeration\n    correctOrientation = correctOrientation ? true : false; // boolean\n    waterMark = waterMark !== undefined ? waterMark : \"DEMO\"; // string\n    /* implementation */\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: EntityConstraint Property Configuration\nDESCRIPTION: Shows how to configure an entity constraint property type for XPath constraints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"constraint\" type=\"entityConstraint\" entityProperty=\"color\">\n <caption>Color constraint</caption>\n <category>Data source</category>\n <description>The XPath constraint on the entity.</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Selecting All Objects with SQL in Mendix\nDESCRIPTION: This SQL query retrieves all employee objects from the \"myfirstmodule$employee\" table. It selects the ID, firstname, dateofbirth, jobtitle, department, and lastname. This query is typically used when a microflow retrieves all objects of an entity for display in a data grid.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \"myfirstmodule$employee\".\"id\",\n\"myfirstmodule$employee\".\"firstname\",\n\"myfirstmodule$employee\".\"dateofbirth\",\n\"myfirstmodule$employee\".\"jobtitle\",\n\"myfirstmodule$employee\".\"department\",\n\"myfirstmodule$employee\".\"lastname\"\nFROM \"myfirstmodule$employee\"\n```\n\n----------------------------------------\n\nTITLE: Using replaceAll() Function in Mendix Expressions\nDESCRIPTION: The replaceAll() function replaces all occurrences of a regular expression with another string. It returns the original string with all matches replaced by the replacement string, or the original string if no matches are found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nreplaceAll('this is a string with 75 some numbers 234 thrown in', '([0-9])', 'NUMBER')\n```\n\nLANGUAGE: java\nCODE:\n```\nreplaceAll('this is a string with no numbers thrown in', '([0-9])', 'NUMBER')\n```\n\n----------------------------------------\n\nTITLE: Querying Logs by Week Number in Studio Pro\nDESCRIPTION: This XPath query retrieves all logs where the `DateAttribute` falls within the second week of the year, using the local time zone.  The `week-from-dateTime()` function extracts the week number from the attribute, and the query filters for records where the week number equals 2.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[week-from-dateTime(DateAttribute) = 2]\n```\n\n----------------------------------------\n\nTITLE: Authenticating Deploy API v4 Requests with Personal Access Token\nDESCRIPTION: Example of how to authenticate API requests using a Personal Access Token (PAT) in the Authorization header.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-4.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /apps/80a28d6e-c5fc-43d9-87c2-d7d56b07542e/environments/6b61f27c-dac9-48c5-b359-f861374ceb36/permissions HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Generating Form-Data Requests in REST Calls\nDESCRIPTION: Demonstrates how to generate multipart/form-data requests for REST service calls, including support for file documents and images.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nThis option allows you to generate a multipart/form-data request for multiple parts. Each part is a pair with a key and a value (microflow expression). \n\nFileDocuments and images are also supported for this option when used as variables in microflow expressions.\n\nFor each part, you can specify the HTTP headers. For each part, by default, the **Content-Disposition**  (for file documents and images) and **Content-Type** (for all parts) headers are added. You can specify different values for these headers, or add other headers.\n```\n\n----------------------------------------\n\nTITLE: Using the length() Function in XPath Query for String Length Comparison\nDESCRIPTION: This example demonstrates how to use the XPath length() function to filter records based on string attribute length. The query returns all customers from the Sales.Customer entity where the FirstName attribute has 5 or more characters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-length.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[length(FirstName) >= 5]\n```\n\n----------------------------------------\n\nTITLE: Configuring Gulpfile for Mendix Theming\nDESCRIPTION: This snippet specifies the source and deployment style folders in a Gulpfile, which is crucial for correctly setting up themes in Mendix 8. Dependencies include a valid Gulp environment and Mendix project structure. The configuration focuses on defining paths for web style files, ensuring that styles are deployed correctly. The expected inputs are folder paths as strings, and outputs include a correctly configured Gulpfile for theme management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/sass-eight.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// What is the name of the style folder in this theme folder?\\nvar sourceStyleFolder = 'theme/styles/web';\\n\\n// What is the name of the style folder in the deployment folder?\\nvar deploymentStyleFolder = 'styles/web';\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers by Name Prefix in Studio Pro XPath\nDESCRIPTION: XPath query to select customers whose name begins with the string 'Jans', demonstrating case-insensitive substring matching at the start of a string attribute\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-starts-with.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n[starts-with(Name, 'Jans')]\n```\n\n----------------------------------------\n\nTITLE: Configuring Snowflake JDBC Result Format for JDK Compatibility\nDESCRIPTION: SQL command to set JDBC query result format to JSON for resolving Apache Arrow dependency issues in Snowflake when using JDK 17 or 21\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-connector-mx10.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nALTER USER <user_name> SET JDBC_QUERY_RESULT_FORMAT='JSON';\n```\n\n----------------------------------------\n\nTITLE: Implementing MxStatsMBean in Java\nDESCRIPTION: This Java snippet contains the implementation of the MxStatsMBean interface. The MxStats class provides concrete implementations using the Mendix Core class to fetch details and statistics required by the MBean methods. Dependencies include import statements for the Mendix Core class to access runtime statistics.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/monitoring-mendix-using-jmx.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage jmx.actions;\n\nimport com.mendix.core.Core;\n\n public class MxStats implements MxStatsMBean {\n\n public int getMaximumNumberConcurrentUsers() throws Exception {\n\n return Core.getMaximumNumberConcurrentUsers();\n\n }\n\n public int getActionQueueSize(){\n\n return Core.getActionQueueSize();\n\n }\n\n public int getActiveActionCount(){\n\n return Core.getActiveActionCount();\n\n }\n\n public int getScheduledActionCount(){\n\n return Core.getScheduledActionCount();\n\n }\n\n public long getNumberConcurrentSessions(){\n\n return Core.getNumberConcurrentSessions();\n\n }\n\n public long getCurrentUserCount(){\n\n return Core.getConcurrentUserCount(true);\n\n }\n\n public long getCompletedActionCount(){\n\n return Core.getCompletedActionCount();\n\n }\n\n public long getNamedUserCount(){\n\n return Core.getNamedUserCount();\n\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Content in GroupBox Component\nDESCRIPTION: This TypeScript code snippet renders the `children` prop, which represents the content placed inside the GroupBox widget in Mendix Studio Pro. The content is rendered within a `View` component styled with `this.styles.content`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nrender(): ReactNode {\n    const { children, headerCaption } = this.props;\n    \n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            <View style={this.styles.content}>\n                {children}\n            </View>\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Receiving Emails using RetrieveEmailMessages Java Action\nDESCRIPTION: Java action to fetch emails asynchronously over multiple threads. Takes EmailAccount and callback microflows as parameters to handle successful fetches, completions, and errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nRetrieveEmailMessages(\n  EmailAccount emailAccount,\n  onEmailFetchMicroflow,\n  onFetchCompleteMicroflow,\n  onFetchErrorMicroflow\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Offline Conflict Resolution\nDESCRIPTION: Technique for managing object conflicts during synchronization using revision tracking and custom resolution strategies\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/best-practices.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\n// Before-commit microflow for conflict detection\nfunction detectAndResolveConflicts(object) {\n    if (object.revisionId != expectedRevisionId) {\n        // Implement custom conflict resolution logic\n        resolveConflict(object);\n    }\n    return object;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Access Rules for User Module Role\nDESCRIPTION: This snippet explains the configuration of access rules for the User module role in a Mendix application. It details steps to set permissions for creating and deleting entities, including the customization for the Order entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/create-a-secure-app.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n1. On the **Module Security Type 'Security'** dialog box, click **New** to create a new access rule for the User module role:\n2. Select the **Customer** entity and click **OK**:\n3. Set up the rule configuration:\n    * **Rule applies to the following module roles**: **User**\n    * **Allow creating new objects**: false\n    * **Allow deleting existing objects**: false\n    * **Default rights for new members**: **Read**\n4. Adjust the rule for the **Order** and set up the rule configuration:\n    * **Rule applies to the following module roles**: **User**\n    * **Allow creating new objects**: true\n    * **Allow deleting existing objects**: false\n    * **Default rights for new members**: Read, Write\n    * **Access rights** for each member: **Read, Write**\n5. Deploy the application.\n6. Sign in with the different users and test the differences in your application.\n```\n\n----------------------------------------\n\nTITLE: Implementing IN Operator for Multiple Value Matching in OQL\nDESCRIPTION: Demonstrates the use of the IN operator to match multiple values in OQL, both with a subquery and a list of expression values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: SQL\nCODE:\n```\nCity IN (SELECT Name FROM City WHERE Country = 'Gelre')\nCity IN ('Losdun', 'Die Haghe', 'Haagambacht')\n```\n\n----------------------------------------\n\nTITLE: Formatting Time in Java (Mendix)\nDESCRIPTION: Demonstrates the use of formatTime function to convert the time part of a Date and time value to a string in a standard format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nformatTime(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Adding Seconds in Java\nDESCRIPTION: The `addSeconds` function adds a specified number of seconds to a date and returns the modified date. It takes an initial date and the number of seconds as parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\naddSeconds(dateTime(2007, 1, 1, 1, 1, 1), 2)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:03 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Using UPPER Function in OQL (SQL)\nDESCRIPTION: The UPPER function converts all lowercase characters in a given string to uppercase. It takes a single expression as an argument, which specifies the string to convert. This function is available for Mendix Studio Pro 9.21.0 and above.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-upper.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nUPPER ( expression )\n```\n\n----------------------------------------\n\nTITLE: Decimal Property Type Definition\nDESCRIPTION: Demonstrates the definition of a decimal property type with a default value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myDecimal\" type=\"decimal\" defaultValue=\"50.4\">\n\t<caption>My decimal</caption>\n\t<description>My decimal setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: String Concatenation with Trim Function in Mendix (Java)\nDESCRIPTION: This code snippet demonstrates string concatenation using trim functions to prevent leading or trailing whitespace. This ensures the concatenation of Fullname, Firstname from ContactPerson always results in clean output without unexpected whitespace or null values. The trim function is applied to both the Firstname attribute and the final concatenated string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/string-concatenation.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n\"trim(  $ContactPerson/Fullname + ' ' + trim(  $ContactPerson/Firstname ) )\"\n```\n\n----------------------------------------\n\nTITLE: Synchronous Return in JavaScript Action\nDESCRIPTION: Implementation of a synchronous JavaScript action that adds two Big.js values. Returns the result immediately without using promises.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {Big} valueA\n * @param {Big} valueB\n * @param {Big}\n */\nfunction AddValue(valueA, valueB) {\n    // BEGIN USER CODE\n    return valueA.plus(valueB)\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Default Sort Attribute in Mendix Microflow\nDESCRIPTION: Sets a default sort attribute in a Mendix microflow. This determines the initial sorting of the data grid before user interaction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_5\n\nLANGUAGE: Expression\nCODE:\n```\n'Name'\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Registered in Past Three Years in Java\nDESCRIPTION: This XPath query returns only customers who have registered in the past three years by subtracting three YearLength periods from the BeginOfCurrentDay.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[DateRegistered > '[%BeginOfCurrentDay%] - 3 * [%YearLength%]']\n```\n\n----------------------------------------\n\nTITLE: Importing Java Unit Testing Tools for Mendix\nDESCRIPTION: Lists the essential Java unit testing tools used in testing custom Java code in Mendix applications, including JUnit for running tests, Mockito for mocking classes, JaCoCo for code coverage analysis, and Gradle for dependency management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/create-connectors/connector-guide-best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n* [JUnit](https://junit.org/junit5/) — This allows you to run Java unit tests easily.\n* [Mockito](https://site.mockito.org/) — This allows you to mock Java classes. You can fake a class during a test so that it thinks that it deals with a real class, while it is actually just behaving like one.\n* [JaCoCo](https://www.jacoco.org/jacoco/trunk/index.html) (Java Code Coverage) — This helps you check how well your code is covered by tests.\n* Gradle — This pulls everything together to manage Java dependencies, and provides a way to work with JUnit and Mockito.\n```\n\n----------------------------------------\n\nTITLE: Calculating Beginning of Day in Java\nDESCRIPTION: This snippet demonstrates how to use the `beginOfDay` function to calculate the start of the day from a specific date and time input in Mendix Studio Pro. The function requires a date and time attribute or variable and returns a Date and time value at midnight. Dependencies include the initial date passed to the `beginOfDay` function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nbeginOfDay(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Using Alias in OQL Select Query\nDESCRIPTION: This example shows how to use an alias to replace the entity name in an OQL select query. It simplifies the query syntax by using 'Cust' as an alias for Sales.Customer.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName\nFROM Sales.Customer AS Cust\n```\n\n----------------------------------------\n\nTITLE: Editing Object Attributes in Mendix Runtime\nDESCRIPTION: JSON request to change and validate attributes of an object in the Mendix Runtime Server. It includes the action type, operation ID, object GUID, and the changed attribute value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"runtimeOperation\",\n    \"operationId\": \"EjuFdBJ7EUC93YSYtlb7Mg\",\n    \"params\": {\n        \"Objects\": {\n            \"guids\": [\n                \"11540474045137256\"\n            ]\n        }\n    },\n    \"changes\": {\n        \"11540474045137256\": {\n            \"Firstname\": {\n                \"value\": \"Ellie\"\n            }\n        }\n    },\n    \"objects\": [],\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Loaded Method for Dockable Pane Management in TypeScript\nDESCRIPTION: This snippet shows the complete loaded method including menu item creation, pane registration, and event handling for opening and closing the dockable pane and tab.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n    async loaded() {\n        // Add a menu item to the Extensions menu\n        await studioPro.ui.extensionsMenu.add({\n            menuId: \"myextension.MainMenu\",\n            caption: \"MyExtension Menu\",\n            subMenus: [\n                { menuId: \"myextension.ShowTabMenuItem\", caption: \"Show tab\" },\n                { menuId: \"myextension.ShowDockMenuItem\", caption: \"Show dock pane\" },\n                { menuId: \"myextension.HideDockMenuItem\", caption: \"Hide dock pane\" },\n            ],\n        });\n\n        const paneHandle = await studioPro.ui.panes.register(\n            {\n                title: \"My Extension Pane\",\n                initialPosition: \"right\",\n            },\n            {\n                componentName: \"extension/myextension\",\n                uiEntrypoint: \"dockablepane\",\n            });\n\n        // Open a tab when the menu item is clicked\n        studioPro.ui.extensionsMenu.addEventListener(\n            \"menuItemActivated\",\n            (args) => {\n                if (args.menuId === \"myextension.ShowTabMenuItem\") {\n                    studioPro.ui.tabs.open(\n                        {\n                            title: \"My Extension Tab\",\n                        },\n                        {\n                            componentName: \"extension/myextension\",\n                            uiEntrypoint: \"tab\",\n                        }\n                    );\n                }\n                else if (args.menuId === \"myextension.ShowDockMenuItem\") {\n                    studioPro.ui.panes.open(paneHandle);\n                }\n                else if (args.menuId === \"myextension.HideDockMenuItem\") {\n                    studioPro.ui.panes.close(paneHandle);\n                }\n            }\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Defining Sub-Constraints in XPath Query\nDESCRIPTION: This code shows how sub-constraints can refine data constraints, using Administrator role as a guild for user selection. It demonstrates more complex constraint structures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n//Sales.User[id = '[%UserRole_Administrator%]']\n```\n\n----------------------------------------\n\nTITLE: Example Event Handler Configuration for Customer Entity\nDESCRIPTION: Demonstrates a before-commit event handler for validating customer postcodes with specific microflow triggers\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/entities/event-handlers.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/domain-model/entities/event-handlers/customer-event-handlers.png\" alt=\"Example of adding a before commit event handler to the Customer entity\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Complete REST Service Microflow Implementation\nDESCRIPTION: The complete microflow that handles the GET operation for retrieving an Order by ID, showing all the steps from parameter conversion to returning the HTTP response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/CompleteMFNoErrorHandling.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Price (XPath)\nDESCRIPTION: This XPath query calculates the average of the `TotalPrice` attribute for all `Sales.Order` objects.  It aggregates the `TotalPrice` values across all instances of the `Sales.Order` entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-avg.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"avg(//Sales.Order/TotalPrice)\"\n```\n\n----------------------------------------\n\nTITLE: Filtering ProjectVE with Tenant Restriction in SQL\nDESCRIPTION: Enhanced SQL query that filters projects to only show those belonging to the current user's tenant by joining with the CurrentUserVE view entity and adding a WHERE clause to match tenant IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/multitenant-apps.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    p.ProjectID as ProjectID,\n    t.TenantID as TenantID,\n    p.Name as Name,\n    p.Description as Description,\n    p.StartDate as StartDate,\n    p.EndDate as EndDate,\n    p.Status as Status,\n    p.CreatedAt as CreatedAt,\n    p.UpdatedAt as UpdatedAt\nFROM MultiTenantApp.Project as p\nJOIN p/MultiTenantApp.Project_Tenant/MultiTenantApp.Tenant t\nJOIN MultiTenantApp.CurrentUserVE cu on (1=1)\nWHERE t.TenantID = cu.TenantID\n```\n\n----------------------------------------\n\nTITLE: Importing mergeNativeStyles Function (TSX)\nDESCRIPTION: This TypeScript snippet imports the `mergeNativeStyles` function from `@mendix/pluggable-widgets-tools` in the container component (`GroupBox.tsx`). This function is used to merge the default styles with the styles provided by the widget's `style` property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_35\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Style, mergeNativeStyles } from \"@mendix/pluggable-widgets-tools\";\n\n```\n\n----------------------------------------\n\nTITLE: Installing Yeoman Globally with npm\nDESCRIPTION: This command installs Yeoman globally on your system, which is a prerequisite for scaffolding pluggable widgets with the Mendix generator. It requires Node.js to be installed on your system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install -g yo\n```\n\n----------------------------------------\n\nTITLE: Saving Files with Mendix Studio Pro API\nDESCRIPTION: An async function that saves a file called 'HelloWorld.txt' with content using the studioPro.app.files.putFile API and displays a confirmation message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/local-app-files-api.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst saveFile = async () => {\n  await studioPro.app.files.putFile(\n    \"HelloWorld.txt\",\n    \"Hello world from a file!\"\n  );\n  studioPro.ui.messageBoxes.show(\"info\", \"Saving HelloWorld.txt\");\n};\n```\n\n----------------------------------------\n\nTITLE: Example Regular Expression for Dutch Post Code\nDESCRIPTION: This regular expression is designed to validate Dutch postal codes by ensuring it adheres to a specific pattern. It requires the first number to be 1-9, followed by three numbers 0-9, optionally a space, and finally two letters A-Z or a-z. No additional dependencies are required, but the use of a formal regular expression engine like Java's Pattern class is assumed. Inputs should be strings representing postal codes; a correctly formatted string will match the pattern.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/regular-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: Regex\nCODE:\n```\n[1-9][0-9][0-9][0-9] ?[A-Za-z][A-Za-z]\n```\n\n----------------------------------------\n\nTITLE: Calculating End of Day in Java\nDESCRIPTION: The `endOfDay` function calculates the end of the day based on a specified initial date. It returns a Date and time value indicating the end of that day.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nendOfDay(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Using Boundary Event Variables in Timer Expressions\nDESCRIPTION: An example of using the $ParentTask boundary event variable to access the DueDate property of a parent user task. This expression configures a timer to trigger two days before the task's due date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/boundary-events.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\naddDays($ParentTask/DueDate, -2)\n```\n\n----------------------------------------\n\nTITLE: Sample Script - LicenseKey Parameter - PowerShell\nDESCRIPTION: Demonstrates the use of the LicenseKey parameter with the Start-MxApp cmdlet to activate the application's license using a specific key.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_4\n\nLANGUAGE: PowerShell\nCODE:\n```\nStart-MxApp $appName -LicenseKey \"Abcd@1234\"\n```\n\n----------------------------------------\n\nTITLE: Defining Datasource Property in Mendix Pluggable Widget\nDESCRIPTION: This code snippet shows how to define a datasource property in a Mendix pluggable widget. This property allows widgets to work with object lists and is marked as optional with isList set to true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_21\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"data\" type=\"datasource\" isList=\"true\" required=\"false\">\n\t<caption>Data source</caption>\n\t<description />\n</property>\n```\n\n----------------------------------------\n\nTITLE: String Concatenation in Java\nDESCRIPTION: Examples of string concatenation using the + operator with strings and numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_13\n\nLANGUAGE: java\nCODE:\n```\n'foo' + 'bar'\n```\n\nLANGUAGE: java\nCODE:\n```\n4.73 + ' kilometers'\n```\n\n----------------------------------------\n\nTITLE: Page Number Parameter Expression\nDESCRIPTION: Mendix expression to convert the page number from the Paging object to a string for use in the REST service call.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix-expression\nCODE:\n```\ntoString($Paging/PageNumber)\n```\n\n----------------------------------------\n\nTITLE: Call REST Service in Microflow\nDESCRIPTION: This Mendix microflow snippet demonstrates how to call a REST service and map the response to Mendix objects.  It sets up the location (URL) of the REST service, including a template parameter for the page title. The response from the REST service is then handled using an import mapping to populate Mendix entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/consume-a-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nadd the following to **Template**: `https://en.wikipedia.org/api/rest_v1/page/summary/{1}`, with the parameter being the Title attribute from the **Input** parameter `$Input/Title`.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commits Example Request - HTTP\nDESCRIPTION: Example HTTP request for retrieving commits from the 'trunk' branch of a Mendix app repository. The request includes authorization via MxToken and pagination parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/repositories/c0af1725-edae-4345-aea7-2f94f7760e33/branches/trunk/commits?limit=20&cursor=Rmlyc3RQYWdlQ3Vyc29y HTTP/1.1\nHost: repository.api.mendix.com\nAccept: */*\nAuthorization: MxToken hZUPhAV4ELPrRm7U7JAKf5BnxJk6q7dcsvFdw6ZR4wRYdv7egHjwHEYBwXY4RkSZrAWde3XqVAQkxZNPysvHcpquA9sK9bsKmcTN\n```\n\n----------------------------------------\n\nTITLE: Checking Substring Containment in Mendix - Java\nDESCRIPTION: The `contains` function checks for the presence of a substring within a string, returning a boolean value. It takes two string parameters. It's crucial to note that this function is case-sensitive and depends on exact string matches.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ncontains('thisismystring', 'my')\n```\n\n----------------------------------------\n\nTITLE: Scheduling Local Notifications in Mendix Nanoflow\nDESCRIPTION: Demonstrates how to schedule a local notification to trigger at the end of the current minute using a JavaScript action. Includes setting notification parameters like title, body, and sound.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-schedule-cancel.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Schedule Notification Activity\nScheduleNotification(\n  Date: EndOfCurrentMinute,\n  Body: variableBody,\n  Title: variableTitle,\n  Subtitle: variableSubtitle,\n  PlaySound: true,\n  NotificationId: empty,\n  ActionName: 'TriggerOnReceive'\n)\n```\n\n----------------------------------------\n\nTITLE: Selecting Specific Attributes with Custom Names in OQL\nDESCRIPTION: Example showing how to select specific attributes from the Customer entity with some attributes given aliases for the result set.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name AS CustomerName, LastName AS CustomerLastName, Birthday, Category FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Handling List Value Statuses in a Component TSX\nDESCRIPTION: This code snippet demonstrates how to handle different statuses of a list of items using an enum `ValueStatus`. It checks the `status` property of list values and renders content accordingly. Necessary dependencies include an enum for statuses and access to list properties through `this.props`. It uses conditional logic to render content based on the status of the list value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_15\n\nLANGUAGE: TSX\nCODE:\n```\nexport const enum ValueStatus {\\n    Loading = \\\"loading\\\",\\n    Unavailable = \\\"unavailable\\\",\\n    Available = \\\"available\\\"\\n}\\n\\nif (this.props.listValue.status === ValueStatus.Available) {\\n    return (\\n        <div>\\n            ...\\n        </div>\\n    );\\n} else if (this.props.listValue.status === ValueStatus.Loading) {\\n    return <p>Loading... Please, wait...</p>;\\n} else if (this.props.listValue.status === ValueStatus.Unavailable) {\\n    return <p>There are no available items to show.</p>;\\n}\n```\n\n----------------------------------------\n\nTITLE: Modeling onReceive Event for Notifications\nDESCRIPTION: This snippet describes how to handle received notifications when the app is open using a nanoflow in Mendix. It includes logging a message when a notification is triggered and updating the home page's actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-schedule-cancel.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n1. Make a new nanoflow named *ON_ReceiveNotification*.\n2. Drag a **Log message** activity into your nanoflow.\n3. Double-click this activity.\n4. In **Template** write *I triggered on receive notification* then click **OK**.\n5. Double-click your home page's notifications widget.\n6. Click **Actions** > **New**.\n7. Create a **New Action** named *TriggerOnReceive*, set **On receive** to **Call a nanoflow**, and select **ON_ReceiveNotification**:\n```\n\n----------------------------------------\n\nTITLE: Organizing Properties in TextBox XML\nDESCRIPTION: This XML snippet organizes widget properties into various groups such as Data Source, Label, and Validation, enhancing readability and maintainability. Key components include propertyGroup and systemProperty elements to categorize settings effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n    <propertyGroup caption=\"General\">\n        <propertyGroup caption=\"Data source\">\n            <property key=\"textAttribute\" type=\"attribute\" onChange=\"onChangeAction\" >\n                <caption>Attribute (path)</caption>\n                <description/>\n                <attributeTypes>\n                    <attributeType name=\"String\"/>\n                </attributeTypes>\n            </property>\n        </propertyGroup>\n        <propertyGroup caption=\"Label\">\n            <systemProperty key=\"Label\" />\n        </propertyGroup>\n        <propertyGroup caption=\"Editability\">\n            <systemProperty key=\"Editability\"/>\n        </propertyGroup>\n        <propertyGroup caption=\"Visibility\">\n            <systemProperty key=\"Visibility\"/>\n        </propertyGroup>\n        <propertyGroup caption=\"Validation\">\n            <property key=\"requiredMessage\" type=\"textTemplate\" required=\"false\">\n                <caption>Required message</caption>\n                <description/>\n                <translations>\n                    <translation lang=\"en_US\">A input text is required</translation>\n                </translations>\n            </property>\n        </propertyGroup>\n    </propertyGroup>\n    <propertyGroup caption=\"Common\">\n        <systemProperty key=\"Name\"/>\n        <systemProperty key=\"TabIndex\"/>\n    </propertyGroup>\n    <propertyGroup caption=\"Events\">\n        <propertyGroup caption=\"Events\">\n            <property key=\"onChangeAction\" type=\"action\" required=\"false\">\n                <caption>On change</caption>\n                <description/>\n            </property>\n        </propertyGroup>\n    </propertyGroup>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: IAM Policy for Environment Template\nDESCRIPTION: This JSON defines an IAM policy for the environment template that grants permissions to list S3 buckets, perform actions on objects within a specified S3 prefix, and connect to a specific RDS database.  The policy uses placeholders for bucket name, AWS region, account ID, and database ID which must be replaced with actual values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowListingOfUserFolder\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>\"\n            ],\n            \"Condition\": {\n                \"StringLike\": {\n                    \"s3:prefix\": [\n                        \"${aws:PrincipalTag/privatecloud.mendix.com/s3-prefix}/*\",\n                        \"${aws:PrincipalTag/privatecloud.mendix.com/s3-prefix}\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"AllowAllS3ActionsInUserFolder\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>/${aws:PrincipalTag/privatecloud.mendix.com/s3-prefix}/*\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowConnectionToDatabase\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"rds-db:connect\",\n            \"Resource\": \"arn:aws:rds-db:<aws_region>:<account_id>:dbuser:<database_id>/${aws:PrincipalTag/privatecloud.mendix.com/database-user}\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Disabled Property in TextInput Component\nDESCRIPTION: This snippet shows how to modify the 'TextInputProps' interface to include a 'disabled' property that represents the disabled state of the input HTML element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { createElement, CSSProperties, ReactElement } from \"react\";\n\nexport interface TextInputProps {\n    value: string;\n    className?: string;\n    style?: CSSProperties;\n    tabIndex?: number;\n    onChange?: (value: string) => void;\n    disabled?: boolean;\n}\n\nexport function TextInput({ value, onChange, tabIndex, style, className, disabled }: TextInputProps): ReactElement {\n    return (\n        <input\n            type=\"text\"\n            value={value}\n            onChange={event => {\n            onChange?.(event.target.value);\n            }}\n            className={\"form-control \" + className}\n            style={style}\n            tabIndex={tabIndex}\n            disabled={disabled}\n        />\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Required Cordova Plugins for Hybrid Mobile Actions\nDESCRIPTION: Configuration snippet for adding necessary Cordova plugins to enable biometric authentication, clipboard functionality, and media support for the Hybrid Mobile Actions module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/hybrid-mobile-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<plugin name=\"cordova-plugin-android-fingerprint-auth\" source=\"npm\" spec=\"1.5.0\" /> <plugin name=\"cordova-plugin-touch-id\" source=\"npm\" spec=\"3.4.0\" /> <plugin name=\"cordova-clipboard\" source=\"npm\" spec=\"1.3.0\" /> <plugin name=\"cordova-plugin-media\" source=\"npm\" spec=\"5.0.2\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Show Message Activity in Mendix\nDESCRIPTION: This code snippet demonstrates the configuration of a Show Message activity in a Mendix microflow. It shows how to set the message type, template, and parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/show-message.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/show-message/show-message.png\" alt=\"Show Message\"   width=\"300\"  class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Querying with NULL Keyword in Java\nDESCRIPTION: This XPath query retrieves all customer objects from the 'Sales' module where the 'Name' attribute is NULL (empty).  This Java-compatible version is suitable for use in Mendix Java actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n\t//Sales.Customer[Name = NULL]\n```\n\n----------------------------------------\n\nTITLE: Kubernetes YAML for SecretProviderClass Attachment\nDESCRIPTION: This YAML snippet defines a SecretProviderClass in Kubernetes. It specifies how to attach secrets from Google Secret Manager to the Mendix environment. The parameters outline how secrets are named and retrieved in the application context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\nNAMESPACE=<{Kubernetes namespace}>\nENVIRONMENT_NAME=<{Mendix App CR name}>\nPROJECT_ID=<{Project ID}>\nPROJECT_NUMBER=<{Project number}>\ncat <<EOF |kubectl apply -n $NAMESPACE -f -\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: ${ENVIRONMENT_NAME}\n  namespace: ${NAMESPACE}\n  annotations:\n    privatecloud.mendix.com/environment-class: \"true\"\nspec:\n  provider: gcp\n  parameters:\n    secrets: |\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-database-type/versions/latest\n        fileName: database-type\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-database-jdbc-url/versions/latest\n        fileName: database-jdbc-url\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-database-host/versions/latest\n        fileName: database-host\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-database-name/versions/latest\n        fileName: database-name\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-database-username/versions/latest\n        fileName: database-username\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-database-password/versions/latest\n        fileName: database-password\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-storage-service-name/versions/latest\n        fileName: storage-service-name\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-storage-access-key-id/versions/latest\n        fileName: storage-access-key-id\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-storage-secret-access-key/versions/latest\n        fileName: storage-secret-access-key\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-storage-endpoint/versions/latest\n        fileName: storage-endpoint\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-storage-bucket-name/versions/latest\n        fileName: storage-bucket-name\n      - resourceName: projects/${PROJECT_ID}/secrets/${NAMESPACE}-${ENVIRONMENT_NAME}-storage-perform-delete/versions/latest\n        fileName: storage-perform-delete\n      # Example: to get the MyFirstModule.MyConstant constant value from the namespace1-myapp1-myfirstmodule-myconstant secret you would use the following:\n      #\n      #- resourceName: namespace1-myapp1-myfirstmodule-myconstant\n        fileName: \"mx-const-MyFirstModule.MyConstant\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: GET Request for User OpenID by Email\nDESCRIPTION: HTTP GET request to retrieve a user account's OpenID based on their email address. Requires authentication headers and URL-encoded email address.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /legacy-api/1/users/by-email/johndoe3%40example.com HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Importing Custom Web Variables in Main Theme File\nDESCRIPTION: The main theme file that imports the custom variables from the module. This approach allows the theme to be modular and reusable across different apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_8\n\nLANGUAGE: scss\nCODE:\n```\n@import \"../../themesource/mytheme/web/custom-variables.scss\";\n```\n\n----------------------------------------\n\nTITLE: Creating Line Chart with Any Chart Widget\nDESCRIPTION: This JSON snippet is a sample data configuration to create a line chart using the Any Chart widget in Mendix. It maps `x` and `y` values for a scatter plot type within the widget. Ensure that the Any Chart widget is correctly added to your page in the data view with this sample data in the Static field of the Data property tab.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-any-usage.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[ { \"x\": [ 1, 2 ], \"y\": [ 1, 2 ], \"type\": \"scatter\" } ]\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Stock\nDESCRIPTION: Uses AVG to calculate the average stock value across all products.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT AVG(Stock) AS StockAverage FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Filtering OData Query with Top Parameter\nDESCRIPTION: This snippet demonstrates how to limit the number of results returned by an OData query using the $top parameter. It retrieves only the first two values from the data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\n?$top=2\n```\n\n----------------------------------------\n\nTITLE: Querying Logs by Week Number with Timezone in Java\nDESCRIPTION: This Java query retrieves all logs where the `DateAttribute` falls within the second week of the year, using the New York time zone. The `week-from-dateTime()` function extracts the week number from the attribute, considering the specified time zone, and the query filters for records where the week number equals 2.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[week-from-dateTime(DateAttribute, 'America/New_York') = 2]\n```\n\n----------------------------------------\n\nTITLE: Initializing 3D Viewer for Teamcenter in Startup Flow\nDESCRIPTION: This code demonstrates how to set up the startup microflow to initialize the 3D Viewer and 3D Viewer for Teamcenter modules. The microflow should include the VisServerAction and VisServerAction_TC Java actions, with a return type of Boolean set to true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/3d-viewer-for-teamcenter.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nViewer3D/USE_ME/VisServerAction\nViewer3D_TC/USE_ME/VisServerAction_TC\n```\n\n----------------------------------------\n\nTITLE: Retrieving Advanced XPath Query in Mendix\nDESCRIPTION: Create a custom microflow action that allows executing XPath queries dynamically and returning a list of entities. Uses Core.retrieveXPathQuery API to perform the retrieval.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-datastorage-api.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nCore.retrieveXPathQuery(context, xpathExpression, int, int, Map, int)\n```\n\n----------------------------------------\n\nTITLE: Inserting Objects with Associations in OData POST Request (JSON)\nDESCRIPTION: Example of inserting a new object with associations using a POST request in OData. The request body specifies the associated objects using @id references.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Customers\": [\n    { \"@id\": \"Customers(484)\" },\n    { \"@id\": \"Customers(712)\" }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Global Entity Event Listener in Mendix Java Action\nDESCRIPTION: This snippet shows how to register a global entity event listener in Mendix using a Java action. It demonstrates logging old and new attribute values for all changes to attributes before committing to the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npublic java.lang.Boolean executeAction() throws Exception {\n    // BEGIN USER CODE\n    Core.getListenersRegistry().registerBeforeCommitListener(objects -> {\n        ILogNode logger = Core.getLogger(\"BeforeCommitListener\");\n        for (IMendixObject obj : objects) {\n            logger.info(\"ObjectType: \" + obj.getType());\n\n            List<? extends IMendixObjectMember<?>> changedMembers = obj.getChangedMembers(getContext());\n\n            logger.info(String.format(\"Has changed members: %b? Number of changed members: %d\", obj.isChanged(), changedMembers.size()));\n            for (IMendixObjectMember member : changedMembers) {\n                logger.info(\n                        String.format(\"Changed member %s : %s -> %s\", member.getName(),\n                                member.getOriginalValue(getContext()) != null ? member.getOriginalValue(getContext()).toString() : \"\",\n                                member.getValue(getContext()) != null ? member.getValue(getContext()).toString() : \"\"\n                        )\n                );\n            }\n        }\n    });\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Expression Decision in Mendix Microflow\nDESCRIPTION: Example of using a Boolean expression in a Decision element to determine if a customer gets a discount based on their membership status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/decisions/decision.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n$Customer/Membership\n```\n\n----------------------------------------\n\nTITLE: Querying Order Data with SQL in Mendix View Entity\nDESCRIPTION: SQL query that selects order data including order ID, quarter, year, dates, and calculated values like total order value. It joins order and order line tables, grouping results by order attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/create-pivot-table.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT\n  o.OrderId as OrderId\n  , CAST(DATEPART(QUARTER, o.OrderDate) as INTEGER) as OrderQuarter\n  , CAST(DATEPART(YEAR, o.OrderDate) as INTEGER) as OrderYear\n  , o.RequiredDate as RequiredDate\n  , o.ShippedDate as ShippedDate\n  , SUM(ol.UnitPrice * ol.Quantity * (1 - ol.Discount)) as TotalOrderValue\n  , SUM(ol.Quantity) as TotalProductCount\n  , COUNT(*) as UniqueProductCount\nFROM Shop.\"Order\" as o\n  JOIN o/Shop.OrderLine_Order/Shop.OrderLine as ol\nGROUP BY o.OrderId, o.OrderDate, o.RequiredDate, o.ShippedDate\n```\n\n----------------------------------------\n\nTITLE: Creating Microflow for Document Generation\nDESCRIPTION: Develops a microflow to handle document creation process, including retrieving order details, creating a new OrderDocument, and generating the document using a document template.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/creating-your-own-documents.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nMicroflow Steps:\n1. Input Parameter: Order\n2. Create New OrderDocument\n3. Retrieve Customer Language\n4. Generate Document Activity\n5. Optional: Download Document\n```\n\n----------------------------------------\n\nTITLE: Filtering Employees by Name in OData\nDESCRIPTION: Demonstrates how to filter Employee objects by name using the $filter query option. This example retrieves all employees named 'John'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_2\n\nLANGUAGE: odata\nCODE:\n```\n/Employees?$filter=Name eq 'John'\n```\n\n----------------------------------------\n\nTITLE: Using true() Function in XPath Query Example in Java\nDESCRIPTION: This XPath query demonstrates how to use the true() function to find all customers who have the IsGoldCustomer attribute set to true. The true() function is necessary to properly represent Boolean values in XPath expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-true.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[IsGoldCustomer = true()]\n```\n\n----------------------------------------\n\nTITLE: Test Method for Navigating to Expenses Tab\nDESCRIPTION: Waits for and clicks on Expenses tab when visible. Utilizes Selenium WebDriver with WebDriverWait for dynamic content handling. Priority ensures execution order.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=3)\npublic void openExpensesTab() {\n    WebDriverWait wait = new WebDriverWait(driver, 10);\n    wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\".mx-name-tabPage4\"))).click();\n}\n```\n\n----------------------------------------\n\nTITLE: Using parseDecimal in Mendix\nDESCRIPTION: The parseDecimal function converts string values to decimal values with optional format specification and default value handling. Examples show basic usage patterns and error handling strategies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('3.45')\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('noDecimal', 5.05)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('noDecimal', empty)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal($StringVariable)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal($StringVariable, empty)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal($StringVariable, 0)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('3,241.98', '#,###.##')\n```\n\n----------------------------------------\n\nTITLE: Setting X-Csrf-Token Header for Active Session Authentication in JavaScript\nDESCRIPTION: This code shows how to make an OData request using the current user's session for authentication. It sets the X-Csrf-Token header to prevent cross-site request forgery when accessing the REST service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://mysite/odata/myservice/myresource\", false);\nxmlHttp.setRequestHeader(\"X-Csrf-Token\", mx.session.getConfig(\"csrftoken\"));\nxmlHttp.send(null);\n```\n\n----------------------------------------\n\nTITLE: Extracting Year from DateAttribute in New York Timezone\nDESCRIPTION: XPath query to filter logs based on the year extracted from a DateAttribute using the New York timezone. Returns logs where the year is 2011.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-year-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: StudioPro\nCODE:\n```\n[year-from-dateTime(DateAttribute, 'America/New_York') = 2011]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Logging.Log[year-from-dateTime(DateAttribute, 'America/New_York') = 2011]\n```\n\n----------------------------------------\n\nTITLE: Applying Transparent Background to Button with JavaScript\nDESCRIPTION: This snippet shows how to modify the previously created `className` to give a button a transparent background.  It defines only the `container` style property to set the `backgroundColor` to \"transparent\", while removing other styling, resulting in a button with a transparent background.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-styling/how-to-use-native-styling.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n    export const className = {\n        container: {\n            backgroundColor: \"transparent\"\n        },\n        icon: {\n        },\n        caption: {\n        }\n    }\n```\n\n----------------------------------------\n\nTITLE: Using Enumerations in Conditional Statements in Java\nDESCRIPTION: Shows how to use enumeration values within a conditional statement. The example compares a numeric value and returns different enumeration values based on the condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nif 4>3 then\n  OrderProcessing.Status.completed\nelse\n  OrderProcessing.Status.started\n```\n\n----------------------------------------\n\nTITLE: Response Example for Runtime Statistics in Mendix\nDESCRIPTION: This JSON response shows detailed runtime statistics including request handlers data, cache information, session details, database connection metrics, and memory usage across different memory pools.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":\n  {\n    \"requests\":\n    [\n      {\"name\":\"\",\"value\":97,\"last_request_timestamp\":1394785085325},\n      {\"name\":\"file\",\"value\":0,\"last_request_timestamp\":1394785072325},\n      {\"name\":\"ws-doc/\",\"value\":0,\"last_request_timestamp\":1394785072325},\n      {\"name\":\"xas/\",\"value\":8,\"last_request_timestamp\":1394785082325},\n      {\"name\":\"ws/\",\"value\":0,\"last_request_timestamp\":1394785072325}\n    ],\n\t\"cache\": { \"total_count\":2 },\n    \"sessions\":\n    {\n\t  \"user_sessions\":{\n        \"562949953421313\":[\n          \"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0\"\n        ]\n      },\n      \"named_users\":3,\n      \"named_user_sessions\":1,\n      \"anonymous_sessions\":0\n    },\n    \"connectionbus\":\n    {\n      \"update\":7,\n      \"transaction\":0,\n      \"select\":28,\n      \"delete\":5,\n      \"insert\":5\n    },\n    \"memory\":\n    {\n      \"code\":0,\n      \"init_nonheap\":2555904,\n      \"init_heap\":268435456,\n      \"eden\":0,\n      \"memorypools\":[\n        {\n          \"is_heap\":false,\n          \"usage\":11788032,\n          \"name\":\"Code Cache\",\n          \"index\":0\n        },\n        {\n          \"is_heap\":false,\n          \"usage\":49590256,\n          \"name\":\"Metaspace\",\n          \"index\":1\n        },\n        {\n          \"is_heap\":false,\n          \"usage\":6458552,\n          \"name\":\"Compressed Class Space\",\n          \"index\":2\n        },\n        {\n          \"is_heap\":true,\n          \"usage\":106799624,\n          \"name\":\"PS Eden Space\",\n          \"index\":3\n        },\n        {\n          \"is_heap\":true,\n          \"usage\":0,\n          \"name\":\"PS Survivor Space\",\n          \"index\":4\n        },\n        {\n          \"is_heap\":true,\n          \"usage\":18500976,\n          \"name\":\"PS Old Gen\",\n          \"index\":5\n        }\n      ],\n      \"committed_heap\":301465600,\n      \"max_heap\":3817865216,\n      \"used_nonheap\":67844048,\n      \"max_nonheap\":-1,\n      \"committed_nonheap\":72777728,\n      \"used_heap\":125300600\n    },\n    \"result\":0\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using month-from-dateTime with Specific Time Zone\nDESCRIPTION: Example query that returns all logs where the month value of DateAttribute is 12 (December) in the America/New_York time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[month-from-dateTime(DateAttribute, 'America/New_York') = 12]\n```\n\n----------------------------------------\n\nTITLE: Creating Resource with Association in HTTP\nDESCRIPTION: Shows how to create a new address resource associated with an existing customer using a POST request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_6\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST http://localhost:8080/odata/CustomerApi/v1/Addresses\nPrefer: return=representation\n\n{ \n    \"Country: \"UK\",\n    \"HouseNumber\":\"11\",\n    \"PhoneNumber\":\"123123\",\n    \"Zipcode\":\"13423\",\n    \"Street\":\"Mainstreet\",\n    \"Customer\":{\"@id\":\"Customers(11)\"}\n    \"City\":\"Bristol\",\n    \"AddressType\":\"Home\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Dependencies for iOS App\nDESCRIPTION: Set up the initial environment for the app by installing necessary Node.js dependencies. Ensure to use the correct legacy flag for NPM versions 7 and above. These actions are prerequisites for further iOS specific configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Creating ONNX Pre-processor for ResNet Models in Python\nDESCRIPTION: Constructs an ONNX pre-processor artifact for ResNet models using native ONNX operators. Includes image resizing and normalization steps required by ResNet models from the ONNX Model Zoo.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom onnx import helper, version_converter\nfrom onnx import TensorProto\n\nimport numpy as np\n\nX = helper.make_tensor_value_info('X', TensorProto.FLOAT, [1, 3, None, None])\nsizes = helper.make_tensor_value_info('sizes', TensorProto.INT64, [4])\nn1 = onnx.helper.make_node(\n    'Resize',\n    inputs=['X', '', '', 'sizes'],\n    outputs=['T1'],\n    coordinate_transformation_mode='tf_crop_and_resize',\n    name='n1'\n)\n\nscale = helper.make_tensor_value_info('scale', TensorProto.FLOAT, [3])\nbias = helper.make_tensor_value_info('bias', TensorProto.FLOAT, [3])\nmean = helper.make_tensor_value_info('mean', TensorProto.FLOAT, [3])\nvar = helper.make_tensor_value_info('var', TensorProto.FLOAT, [3])\nn2 = onnx.helper.make_node(\n    'BatchNormalization',\n    inputs=['T1', 'scale', 'bias', 'mean', 'var'],\n    outputs=['Y'],\n    epsilon=0.0,\n    momentum=0.0,\n    name='n2'\n)\n\nY = helper.make_tensor_value_info('Y', TensorProto.FLOAT, [1, 3, 224, 224])\n\n# Create the graph (GraphProto)\ngraph_def = helper.make_graph(\n    [n1, n2],\n    'preprocessor',\n    [X, sizes, scale, bias, mean, var],\n    [Y]\n)\n\nmodel_def = helper.make_model(graph_def, producer_name='onnx-example')\n\nonnx.save(model_def, 'preprocessor.onnx')\n```\n\n----------------------------------------\n\nTITLE: Adding Sort Parameters to REST Template in Mendix\nDESCRIPTION: This snippet shows how to modify the REST service template to add sorting parameters for server-side sorting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_2\n\nLANGUAGE: expression\nCODE:\n```\n&_sort={2}&_order={3}\n```\n\n----------------------------------------\n\nTITLE: Configuring For Each Loop in Mendix Microflow\nDESCRIPTION: Example of configuring a For Each loop in a Mendix Microflow to iterate over a list of OrderLine objects and set the purchase date for each.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/loop.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nLoop\n  Iterate over: OrderLine_List\n  Loop object name: OrderLine\n  Change activity\n    Variable: OrderLine\n    Change member: PurchaseDate\n    Value: $currentDateTime\n```\n\n----------------------------------------\n\nTITLE: Defining List Widget Properties Interface in TypeScript\nDESCRIPTION: Interface definition for list widget properties that includes data source, selectable objects, string/boolean/number attributes, and reference/reference set associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    mySelectableObjects: ListValue;\n    myAttributeString: ListAttributeValue<string>;\n    myAttributeBoolean: ListAttributeValue<boolean>;\n    myAttributeNumber: ListAttributeValue<BigJS>;\n    myAssociationReference: ListReferenceValue;\n    myAssociationReferenceSet: ListReferenceSetValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Hours to a Date in Java\nDESCRIPTION: Example of using the addHours function to add 25 hours to a date. This function adds a specified number of hours to a date and time value, carrying over to the next day when necessary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\naddHours(dateTime(2007, 1, 1, 1, 1, 1), 25)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 02 02:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Defining Text Widget Styling in JavaScript\nDESCRIPTION: Defines the default styling for a Text widget using a JavaScript object that incorporates ViewStyle and TextStyle properties. This allows standardization across text components in the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Text = {\n  container: {\n    // All ViewStyle properties\n  },\n  text: {\n    // All TextStyle properties\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Fixing CE0529 Home Page Navigation Error\nDESCRIPTION: Example of fixing CE0529 error by creating a microflow that creates a Customer object and passes it to the home page. Shows the configuration of a microflow with Create object and Show Page activities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-navigation.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Analyzing Text Sentiment using Snowflake Cortex AI in SQL\nDESCRIPTION: This SQL query demonstrates how to use Snowflake's built-in AI functionality (Cortex) to perform sentiment analysis on a given text input. It uses the 'snowflake.cortex.sentiment' function and returns the sentiment score for the provided text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_6\n\nLANGUAGE: SQL\nCODE:\n```\nselect snowflake.cortex.sentiment({text}) as \"Sentiment\"\nfrom   dual  as sentiment_result\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix App for All Issues\nDESCRIPTION: This command checks the Mendix app at the specified path for errors, warnings, deprecations, and performance recommendations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_14\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check C:\\\\MxProjects\\\\App-main\\\\App-main.mpr -w -d -p\"\n```\n\n----------------------------------------\n\nTITLE: Using Contains String Filter Helper in TypeScript\nDESCRIPTION: Demonstrates the contains helper for filtering items based on substring matches. Works with String, Integer, Long, and Decimal attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_33\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrStr = attribute(this.props.myAttributeA.id); // string attribute\nconst subStr = literal(\"secret\");\n\n// filter keeps items where value has a substring \"secret\"\n// like \"my secret password\", \"secret file\", \"top secret\"\nconst filterCondition1 = contains(attrStr, subStr);\n\n// also works with numeric attributes\nconst attrNum = attribute(this.props.myAttributeB.id); // integer attribute\nconst subNum = literal(\"1337\");\n\n// filter keeps items where value has sequence of numbers \"1337\"\n// like \"133700\", \"1231337\", \"913379\"\nconst filterCondition2 = contains(attrNum, substrNum);\n```\n\n----------------------------------------\n\nTITLE: Updating Preview Component with TextInput - TypeScript\nDESCRIPTION: This TypeScript snippet updates the preview component 'Textbox.editorPreview.tsx' to include 'TextInput' and binds it to the 'textAttribute' for rendering in the preview.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { TextInput } from \"./components/TextInput\";\n\nexport class preview extends Component<TextBoxPreviewProps> {\n    render(): ReactNode {\n        return <TextInput value={this.props.textAttribute} />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cache Statistics in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for retrieving cache statistics from the Mendix Runtime. The response includes totals of objects per session and detailed user totals showing the number of objects per entity for particular sessions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"cache_statistics\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"totals\":{\n      \"Expenses.TempUser\":1,\n      \"System.Session\":1\n    },\n    \"user_totals\":[\n      {\n        \"user_name\":\"MxAdmin\",\n        \"total_count\":2,\n        \"amounts_per_type\":{\n          \"Expenses.TempUser\":1,\n          \"System.Session\":1\n         }\n      }\n    ]\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Velero Backup for Mendix Namespaces\nDESCRIPTION: Command to create a Velero backup of all namespaces, named 'mendix-velero-bkp'. Optionally, use the 'include-namespace' flag to back up specific namespaces.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-velero.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nvelero create backup mendix-velero-bkp\n```\n\n----------------------------------------\n\nTITLE: Displaying EmployeeToOnboard Example in Mendix\nDESCRIPTION: This XML code embeds an image showing an example of the EmployeeToOnboard interface in Mendix workflows. It includes attributes for the image source, alternative text, and CSS class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/demo_hr.png\" alt=\"EmployeeToOnboard Example\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Configuring Connection Pooling Settings in Mendix Runtime\nDESCRIPTION: This snippet introduces new custom Runtime settings related to connection pooling validation. These settings are `ConnectionPoolingTestOnBorrow`, `ConnectionPoolingTestOnCreate`, `ConnectionPoolingTestOnReturn` and `ConnectionPoolingTestWhileIdle`. They are `false` by default and can be set to `true` to validate connections at different stages of connection pool usage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.24.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingTestOnBorrow\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingTestOnCreate\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingTestOnReturn\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingTestWhileIdle\"\n```\n\n----------------------------------------\n\nTITLE: Implementing a Structured Menu Extension in C#\nDESCRIPTION: This code snippet demonstrates how to create a hierarchical menu structure in Studio Pro. It creates a 'Beverages' main menu with nested submenus for hot and cold drinks, including further submenus. The implementation includes the use of menu separators and message box displays for leaf menu items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/add-menu.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing Mendix.StudioPro.ExtensionsAPI.UI.Menu;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Services;\nusing System.ComponentModel.Composition;\n\nnamespace MyCompany.MyProject.MendixExtension;\n\n[Export(typeof(MenuExtension))]\npublic class MyMenuExtension : MenuExtension\n{\n    readonly IMessageBoxService messageBoxService;\n\n    [ImportingConstructor]\n    public MyMenuExtension(IMessageBoxService messageBoxService)\n    {\n        this.messageBoxService = messageBoxService;\n    }\n\n    public override IEnumerable<MenuViewModel> GetMenus()\n    {\n        var ristretto = new MenuViewModel(\"Ristretto\", () => messageBoxService.ShowInformation(\"Ristretto\"));\n        var regularExpresso = new MenuViewModel(\"Regular Espresso\", () => messageBoxService.ShowInformation(\"Regular Espresso\"));\n        var espresso = new MenuViewModel(\"Espresso\", [regularExpresso, ristretto]);\n        var blackCoffee = new MenuViewModel(\"Black Coffee\", () => messageBoxService.ShowInformation(\"Black Coffee\"));\n        var decaf = new MenuViewModel(\"Decaf\", () => messageBoxService.ShowInformation(\"Decaf\")) { Separator = MenuSeparator.After };\n        var coffee = new MenuViewModel(\"Coffee\", [blackCoffee, decaf, espresso]);\n\n        var tea = new MenuViewModel(\"Tea\", () => messageBoxService.ShowInformation(\"Tea\"));\n\n        var hot = new MenuViewModel(\"Hot\", [coffee, tea]);\n\n        var soda = new MenuViewModel(\"Soda\", () => messageBoxService.ShowInformation(\"Soda\"));\n        var cold = new MenuViewModel(\"Cold\", [soda]);\n\n        var beverages = new MenuViewModel(\"Beverages\", [hot, cold]);\n        yield return beverages;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Years in Java\nDESCRIPTION: This snippet illustrates how to use the trimToYears function to round off a date to years, removing months, days, hours, minutes, seconds, and milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ntrimToYears($myDate)\n```\n\n----------------------------------------\n\nTITLE: Configuring Collapsible GroupBox Properties\nDESCRIPTION: This snippet configures the properties of a WrappedGroupBox by dynamically setting its collapsible state based on input parameters. It constructs an object containing properties needed for the GroupBox component, including headers and icons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_51\n\nLANGUAGE: javascript\nCODE:\n```\nconst isCollapsible = collapsible !== \"no\";\n\nconst props: WrappedGroupBoxProps = {\n            collapsible: isCollapsible,\n            headerCaption,\n            collapseIcon: this.renderIcon(collapseIcon,             defaultCollapseIconGlyph),\n            expandIcon: this.renderIcon(expandIcon, defaultExpandIconGlyph),\n            style\n        };\n\nif (collapsible) {\n            props.startCollapsed = collapsible === \"yesStartCollapsed\";\n        }\n\nreturn <WrappedGroupBox {...props}>{content}</WrappedGroupBox>;\n```\n\n----------------------------------------\n\nTITLE: SelectionValue Interface Definition in TypeScript\nDESCRIPTION: Defines the SelectionValue interface for representing selections in Mendix pluggable widgets, with support for both single and multi-selection types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\ndeclare interface SelectionValue<T> {\n    readonly selection: T;\n    readonly setSelection: (value: T) => void;\n}\n```\n\n----------------------------------------\n\nTITLE: Java Version Configuration\nDESCRIPTION: Configuration options for selecting Java version in Mendix applications. Available options include Java 17 for Studio Pro versions 9.24.19+ and Java 21 for versions 9.24.23+.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/app/app-settings/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nStudio Pro 9.24.19+: Java 17\nStudio Pro 9.24.23+: Java 21\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Prices for Paid Orders in OQL\nDESCRIPTION: This OQL query calculates the average total price from the Sales.Order entity for paid orders. The use of quotes around 'Order' is necessary due to it being a reserved word.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT AVG(TotalPrice) FROM Sales.\"Order\" WHERE IsPaid = 1\n```\n\n----------------------------------------\n\nTITLE: Setting Pagination Parameters for ListValue in TypeScript\nDESCRIPTION: This snippet demonstrates how to set the offset and limit for pagination in a ListValue object. It controls the range of objects retrieved from the datasource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nthis.props.myDataSource.setOffset(20);\nthis.props.myDataSource.setLimit(10);\n```\n\n----------------------------------------\n\nTITLE: Action Call Activities in Mendix\nDESCRIPTION: Describes activities for calling Java actions, JavaScript actions, and microflows with support for passing arguments and storing results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Graphic | Name | Description |\n| --- | --- | --- |\n| Call Java action | Calls a Java action. Arguments can be passed to the action and the result can be stored in a variable. |\n```\n\n----------------------------------------\n\nTITLE: Create Kubernetes Secret for AWS Credentials\nDESCRIPTION: This command creates a Kubernetes secret named `mxplatform-awssecret` in a specified namespace. The secret stores the AWS Access Key ID and Secret Access Key as literals, allowing secure access to S3 buckets without exposing credentials directly in build pod configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nkubectl create secret generic mxplatform-awssecret -n your-namespace --from-literal=aws_access_key_id=your-aws-access-key-id --from-literal=aws_secret_access_key=your-aws-secret-access-key\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Days in Java\nDESCRIPTION: The trimToDays function is used to trim the date to days, rounding off all hours to zero. The user's time zone is applied, with an option for UTC.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ntrimToDays($myDate)\n```\n\n----------------------------------------\n\nTITLE: Defining EditableValue Interface in TypeScript for Mendix Pluggable Widgets\nDESCRIPTION: TypeScript definition of the EditableValue interface used for editable attributes or variables in Mendix Pluggable Widgets. The interface provides methods for reading, setting and validating values, formatting display values, and includes properties for status and read-only state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface EditableValue<T extends AttributeValue> {\n    readonly status: ValueStatus;\n    readonly readOnly: boolean;\n    \n    readonly value: T | undefined;\n    setValue(value: T | undefined): void;\n    readonly validation: string | undefined;\n    setValidator(validator?: (value: T | undefined) => string | undefined): void;\n    \n    readonly displayValue: string;\n    setTextValue(value: string): void;\n    \n    readonly formatter: ValueFormatter<T>;\n    setFormatter(formatter: ValueFormatter<T> | undefined): void;\n    \n    readonly universe?: T[];\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Rows with Multiple Conditions in WHERE Clause - OQL\nDESCRIPTION: This snippet illustrates how to use multiple conditions in a WHERE clause using logical operators AND and OR. The given example retrieves customer records based on their name and number, demonstrating the precedence of the AND operator over OR. The query returns customers named 'Doe' or those who have a negative number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_27\n\nLANGUAGE: sql\nCODE:\n```\nSELECT CustomerName, Number\nFROM Sales.Request\nWHERE\n\tCustomerName = 'Doe'\n\tOR\n\tCustomerName != 'Doe'\n\tAND\n\tNumber < 0\n```\n\n----------------------------------------\n\nTITLE: Workflow Commons Microflows\nDESCRIPTION: Lists the preconfigured microflows for task assignment and workflow management operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/workflow-commons.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\n* ACT_UserTask_AssignToMe\n* ACT_UserTask_AssignToUser\n* ACT_UserTask_AssignToUsers\n* ACT_UserTask_Unassign\n* ACT_Workflow_Abort\n* ACT_Workflow_Continue\n* ACT_Workflow_JumpTo\n* ACT_Workflow_Pause\n* ACT_Workflow_Restart\n* ACT_Workflow_Retry\n* ACT_Workflow_Unpause\n```\n\n----------------------------------------\n\nTITLE: Defining ListReferenceValue and ListReferenceSetValue Types\nDESCRIPTION: This snippet defines the `ListReferenceValue` and `ListReferenceSetValue` types, used to represent association properties linked to a `ListValue`. It provides the ability to access associated values. The interface also defines the method `get` to retrieve `DynamicValue`, and includes fields for identification and filtering capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_18\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport type ListReferenceValue = ListAssociationValue<ObjectItem> & { type: \\\"Reference\\\" };\\n\\nexport type ListReferenceSetValue = ListAssociationValue<ObjectItem[]> & { type: \\\"ReferenceSet\\\" };\\n\\nexport interface ListAssociationValue<T extends ObjectItem | ObjectItem[]> {\\n  get: (item: ObjectItem) => DynamicValue<T>;\\n\\n  id: ListAssociationId;\\n  filterable: boolean;\\n}\n```\n\n----------------------------------------\n\nTITLE: Snapshot Archive Creation Response in Mendix API\nDESCRIPTION: Example JSON response when requesting archive creation. The response includes an archive_id which can be used to check the progress of archive creation. The state indicates the current status of the job.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":null,\n   \"finished_at\":null,\n   \"updated_at\":null,\n   \"snapshot_id\":\"5f8ace23-19df-4134-bd67-c338142a6097\",\n   \"data_type\":\"database_only\",\n   \"created_at\":\"2020-02-18T17:01:56.000Z\",\n   \"state\":\"queued\",\n   \"archive_id\":\"a6f519aa-a68e-4054-9341-2cfec72ea184\",\n   \"url\":null\n}\n```\n\n----------------------------------------\n\nTITLE: Axes Configuration (JSON)\nDESCRIPTION: This snippet demonstrates how to configure the x and y axes of a chart, including grid color, title, color, grid visibility, range locking, and line visibility. It allows for customization of axis appearance and behavior. The example sets different colors for x and y axis. `fixedrange` set to true prevents zooming and panning.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"gridcolor\": \"#eaeaea\",\n    \"title\": \"X-axis\",\n    \"color\": \"#0000FF\",\n    \"showgrid\": false,\n    \"fixedrange\": true,\n    \"showline\": true,\n    \"side\": \"bottom\"\n  },\n  \"yaxis\": {\n    \"rangemode\": \"tozero\",\n    \"zeroline\": true,\n    \"zerolinecolor\": \"#eaeaea\",\n    \"gridcolor\": \"#eaeaea\",\n    \"color\": \"#0000FF\",\n    \"title\": \"Y-axis\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"fixedrange\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Widgets Directory and Initiating Widget Generation\nDESCRIPTION: Command sequence to create a custom widgets directory and launch the Mendix widget generator for creating a TextBox widget\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_2\n\nLANGUAGE: Powershell\nCODE:\n```\nmkdir CustomWidgets\ncd CustomWidgets\nyo @mendix/widget TextBox\n```\n\n----------------------------------------\n\nTITLE: Paging Results with OData $top and $skip\nDESCRIPTION: Illustrates how to implement paging in OData queries using $top to limit the number of returned objects and $skip to offset the results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_8\n\nLANGUAGE: OData\nCODE:\n```\n?$top=100&$skip=100\n```\n\n----------------------------------------\n\nTITLE: Using EndsWith Filter Helper in TypeScript\nDESCRIPTION: Demonstrates the endsWith helper for filtering items based on suffix matches. Works with String, Integer, Long, and Decimal attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_35\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrStr = attribute(this.props.myAttributeA.id); // string attribute\nconst subStr = literal(\"secret\");\n\n// filter keeps items where value ends with substring \"secret\"\n// like \"top secret\", but not \"my secret password\" or \"secret file\"\nconst filterCondition1 = startsWith(attrStr, subStr);\n\n// also works with numeric attributes\nconst attrNum = attribute(this.props.myAttributeB.id); // integer attribute\nconst subNum = literal(\"1337\");\n\n// filter keeps items where value ends with sequence of numbers \"1337\"\n// like \"1231337\", but not \"133700\" or \"913379\"\nconst filterCondition2 = startsWith(attrNum, substrNum);\n```\n\n----------------------------------------\n\nTITLE: Rendering Validation Feedback in TextBox Component - TypeScript\nDESCRIPTION: This code snippet modifies the render method of the TextBox component to display validation feedback using the Alert component. It checks for validation feedback and shows it conditionally based on user input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const value = this.props.textAttribute.value || \"\";\n    const validationFeedback = this.props.textAttribute.validation;\n    return <Fragment>\n        <TextInput\n            value={value}\n            style={this.props.style}\n            className={this.props.class}\n            tabIndex={this.props.tabIndex}\n            onUpdate={this.onUpdateHandle}\n            disabled={this.props.textAttribute.readOnly}\n        />\n        <Alert>{validationFeedback}</Alert>\n    </Fragment>;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AGIC-specific Annotations in OperatorConfiguration YAML\nDESCRIPTION: This YAML snippet shows how to add AGIC-specific annotations to the Ingress section of the OperatorConfiguration object. It includes settings for SSL certificate, HTTP to HTTPS redirection, and ingress class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-ingress.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  # Endpoint (Network) configuration\n  endpoint:\n    type: ingress\n    ingress:\n      annotations:\n        # Specify the name of a Listener TLS Certificate to use\n        appgw.ingress.kubernetes.io/appgw-ssl-certificate: agic-tls\n        # Add this to automatically redirect HTTP traffic to HTTPS\n        appgw.ingress.kubernetes.io/ssl-redirect: true\n        # Ingress class, this is automatically set by mxpc-cli\n        kubernetes.io/ingress.class: azure/application-gateway\n      # The following parameters are already configured by mxpc-cli\n      domain: mendix.example.com\n      enableTLS: true\n      path: \"/\"\n      pathType: ImplementationSpecific\n# ...\n# omitted lines for brevity\n# ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Association Ownership in Domain Model\nDESCRIPTION: Defining ownership modes for associations in a Mendix domain model to control reference set selector behavior\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/input-widgets/reference-set-selector.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Owner: Default (Customer refers to Group)\n- Owner: Both (Bidirectional reference between Customer and Group)\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Merge Driver for Mendix Project Files\nDESCRIPTION: Git configuration to set up a custom merge driver for .mpr files that uses Mendix Studio Pro's merge algorithm. This configuration needs to be added to the .gitconfig file to properly handle merges of Mendix project files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n[core]\n  attributesfile = ~/.gitattributes\n[merge \"custom\"]\n  name = custom merge driver for specific files\n  driver = [MX.EXE_PATH] merge %O %A %B\n```\n\n----------------------------------------\n\nTITLE: Configuring Main Theme Settings in Mendix Native Mobile App\nDESCRIPTION: Set up the main theme settings for a Mendix native mobile app by modifying the custom-variables.js file. This allows quick implementation of app or company branding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/ui-best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// File: theme/styles/native/app/custom-variables.js\n// Modify this file to configure main theme settings\n```\n\n----------------------------------------\n\nTITLE: Defining JavaScript Variables\nDESCRIPTION: This JavaScript code defines a `brand` object containing color definitions for a Mendix native mobile application. These color definitions include primary, success, warning, danger, and info colors, as well as lighter variations of each. These variables can be customized to change the look and feel of the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n\"export const brand = {\n    primary: \\\"#264AE5\\\",\n    success: \\\"#3CB33D\\\",\n    warning: \\\"#ECA51C\\\",\n    danger: \\\"#E33F4E\\\",\n    info: \\\"#0086D9\\\",\n    primaryLight: \\\"#F3F5FF\\\",\n    successLight: \\\"#F1FCF1\\\",\n    warningLight: \\\"#FFF9E6\\\",\n    dangerLight: \\\"#FFEEF0\\\",\n    infoLight: \\\"#ECF9FF\\\"\n};\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate Usages in Mendix Locally - Text\nDESCRIPTION: This configuration snippet is used to set the paths and passwords for client certificates in a local Mendix environment. It includes parameters for specifying which certificates are used by which services. Paths should include doubled backslashes. The inputs are certificate paths and passwords, and the output is the correct configuration of client certificate usages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/use-a-client-certificate.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{ \"Module.WebService1\": \"D:\\\\App\\\\Mx1.pfx\", \"www.server-to-contact.com\": \"D:\\\\App\\\\Mx2.pfx\" }\n```\n\n----------------------------------------\n\nTITLE: Defining Time Zone Tokens in Mendix\nDESCRIPTION: Examples of tokens used in Mendix to refer to specific moments in time, including both user time zone and UTC versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/date-and-time-handling/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n[%BeginOfCurrentDay%]\n[%BeginOfCurrentDayUTC%]\n```\n\n----------------------------------------\n\nTITLE: Calculating Total with Loop and Variable (Mendix Expression)\nDESCRIPTION: Expression used in Change Variable activity to calculate running total of order prices within a loop iteration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\n$CalculatedTotalPrice + $IteratorOrder/TotalPrice\n```\n\n----------------------------------------\n\nTITLE: Grouped Constraints with Parentheses in Java\nDESCRIPTION: An XPath query demonstrating how to use parentheses to group constraints and define priorities. This query retrieves customers named either 'Jansen' or 'Smit' who also live in Rotterdam.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[( Name = 'Jansen' or Name = 'Smit' ) and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Subtracting Months from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 2 months from a specific date and time using the subtractMonths function. The function takes a datetime value and an integer representing months to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nsubtractMonths(dateTime(2007, 3, 1, 1, 1, 1), 2)\n```\n\n----------------------------------------\n\nTITLE: Managing Messages in SAP Event Mesh\nDESCRIPTION: Sample microflows demonstrating message publishing and consumption operations in SAP Event Mesh. Includes operations for publishing messages to queues/topics and consuming messages from queues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-event-mesh-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: microflow\nCODE:\n```\nPublishMessage\nParameters:\n- Credentials\n- Destination\n- Queue or Topic Name\n- Message\n- Message Or Content Type\n```\n\nLANGUAGE: microflow\nCODE:\n```\nConsumeMessage\nParameters:\n- Credentials\n- Queue Name\n```\n\n----------------------------------------\n\nTITLE: Updating AppDelegate.m to Handle Deep Links (Objective-C - iOS)\nDESCRIPTION: This Objective-C snippet shows how to modify the openURL method in AppDelegate.m to handle incoming URLs for deep linking in a Mendix native application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-deep-link.md#2025-04-21_snippet_3\n\nLANGUAGE: objc\nCODE:\n```\n- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation {\n  [RCTLinkingManager application:application openURL:url sourceApplication:sourceApplication annotation:annotation];\n  [MendixAppDelegate application:application openURL:url sourceApplication:sourceApplication annotation:annotation];\n  return YES;\n}\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Days Example\nDESCRIPTION: Shows the output of subtracting 5 days from January 5, 2007, 01:01:01. The result is January 1, 2007, 01:01:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:01:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Removing Whitespace with trim Function in Java\nDESCRIPTION: The trim function removes all whitespace at the beginning and end of a string. It takes a single string parameter and returns the trimmed string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\ntrim(' this is my string     ')\n```\n\nLANGUAGE: java\nCODE:\n```\n'this is my string'\n```\n\n----------------------------------------\n\nTITLE: Creating a New Native Mobile App in Mendix Studio Pro\nDESCRIPTION: Step-by-step process for initializing a new native mobile application using the Blank Native Mobile App template in Mendix Studio Pro\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/getting-started-with-native-mobile.md#2025-04-21_snippet_0\n\nLANGUAGE: steps\nCODE:\n```\n1. Open Mendix Studio Pro\n2. Select File > New Project\n3. Choose Blank Native Mobile App\n4. Click Use this starting point\n5. Click Create app\n6. Click Run Locally\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to String using OQL CAST in SQL\nDESCRIPTION: This example demonstrates a common use case for the CAST function, converting a datetime variable to a more readable string format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-cast.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCAST ( your_datetime_variable AS string )\n```\n\n----------------------------------------\n\nTITLE: Filtering on Reference Sets in Mendix\nDESCRIPTION: Code that shows how to filter objects based on associations with multiple objects using the contains filter builder, assuming the associated objects are available in a selectable objects data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { association, literal, notEquals, contains } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAssociationReferenceSet.filterable) {\n    // assuming those two objects are available\n    const objectItem1 = this.props.mySelectableObjects.items[0];\n    const objectItem2 = this.props.mySelectableObjects.items[1];\n    \n    const filterCond = contains(association(this.props.myAssociationReferenceSet.id), literal([objectItem1, objectItem2]));\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Association is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Maximum Total Price with XPath in Mendix\nDESCRIPTION: This XPath query returns the highest total price found in any Sales.Order object. It demonstrates the basic usage of the max() function on a numeric attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-max.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmax(//Sales.Order/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Registering Deep Link Nanoflow in Mendix\nDESCRIPTION: The Register Deep Link nanoflow action registers a callback nanoflow that is executed whenever the app is opened using a URL. The URL Handler nanoflow receives the complete URL (as a string) as an input parameter for processing. The name of the input parameter is case sensitive and must be named 'URL'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Getting Object by GUID in Push Notifications - JavaScript\nDESCRIPTION: This snippet shows how to retrieve an object using its GUID with the GetObjectByGUID JavaScript action when a notification is tapped. This is essential for accessing the entity's details, which are needed to display on the user's details page after they interact with the notification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst entity = GetObjectByGUID(entityGUID);\n// Display entity's details on the page\n```\n\n----------------------------------------\n\nTITLE: Customizing Switch Widget Styles in JavaScript\nDESCRIPTION: This code provides styling options for a Switch widget in Mendix Native applications. The JavaScript object includes container styling, track and thumb color customizations, and handling for disabled states. It requires 'ViewStyle' and 'TextStyle' properties to fully utilize customization capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_switch_Switch = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the text box is non-editable.\n  },\n  input: {\n    // This has all TextStyle properties. \n    trackColorOn: null, // Custom color for the switch track when turned on.\n    trackColorOff: null, // Custom color for the switch track when turned off.\n    thumbColorOn: null, // Color of the foreground switch grip when turned on. If this is set on iOS, the switch grip will lose its drop shadow.\n    thumbColorOff: null, // Color of the foreground switch grip when turned off. If this is set on iOS, the switch grip will lose its drop shadow.\n  },\n  inputError: {\n    // This has the same properties as `input`. Overrides `input` styles if there are validation errors.\n  },\n  inputDisabled: {\n    // This has the same properties as `input`. Overrides `input` styles if the checkbox is non-editable.\n  },\n  label: {\n    // This has all TextStyle properties \n    numberOfLines: 1, // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis.\n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the checkbox is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Constructing Request Body for User UUID Retrieval (JSON)\nDESCRIPTION: Example of how to structure the JSON request body when retrieving user UUIDs. The body contains an array of email addresses for which UUIDs are requested.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-identifiers-api.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"emailAddresses\":[\n      { \"emailAddress\":\"jane.doe@domain.tld\" },\n      { \"emailAddress\":\"john.doe@domain.tld\" }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Error Handling for Get Destination Action\nDESCRIPTION: This code snippet demonstrates best practices for error handling when using the Get Destination action in microflows. It shows how to catch exceptions and handle different error scenarios.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/sap-btp/sap-destination-service.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/deployment/sap-btp/sap-destination-service/get-destination-error-flow.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Custom Error Page in HTML\nDESCRIPTION: A simple example of a custom error page HTML structure that can be used for offline.html, 404.html, or 403.html pages. It includes references to external CSS and JavaScript files that must be placed in the error_page directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/custom-error-page.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/error_page/style.css\">\n    <script src=\"/error_page/script.js\"></script>\n  </head>\n  <body>\n    This application is currently offline.\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Creating New Mendix Projects using mx create-project\nDESCRIPTION: Command pattern for creating new Mendix applications. Allows specifying app name, output directory, language code, and sprintr app ID. Optionally accepts a template MPK file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mx-command-line-tool.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmx create-project [OPTIONS] [TEMPLATE-MPK-FILE]\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Date Generation Query\nDESCRIPTION: PostgreSQL-specific SQL query that generates a list of dates for all first Mondays of the month within a specified date range using common table expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nwith first_day_of_month as (\n    SELECT *\n    FROM generate_series\n        ( date_trunc('month', '2017-01-24 00:00'::timestamp)\n        , '2017-11-05 12:00', '1 months'\n        ) as firstday\n),\nfirstmonday as (\n    select fdom.firstday::date +\n        ((8 - extract(dow from fdom.firstday))::integer % 7)\n        as first_monday_date\n    from first_day_of_month as fdom\n)\nselect fm.first_monday_date\nfrom firstmonday as fm\nwhere fm.first_monday_date >= '2017-01-24 00:00'::timestamp\nand fm.first_monday_date <= '2017-11-05 12:00'::timestamp\n;\n```\n\n----------------------------------------\n\nTITLE: Opening an Existing Mendix App with Platform SDK in TypeScript\nDESCRIPTION: Shows how to open an existing Mendix app using its App ID with the platform client.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst app = client.getApp(\"33118fbf-7053-482a-8aff-7bf1c626a6d9\");\n```\n\n----------------------------------------\n\nTITLE: Creating New Customer with POST Request\nDESCRIPTION: Example HTTP POST request to insert a new customer record with sample JSON payload containing customer details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nPOST http://localhost:8080/odata/CustomerApi/v1/Customers\n\n{\n    \"Firstname\": \"Jimmy\",\n    \"Lastname\": \"Smooth\",\n    \"Title\": \"Engineer\",\n    \"CompanyName\": \"CustKo\"\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Distinct Product Names\nDESCRIPTION: Uses COUNT with DISTINCT to count only unique product names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(DISTINCT Name) AS DistinctNameEntryCount FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes from Reserved Word Entity in OQL\nDESCRIPTION: Example demonstrating how to select all attributes from an entity with a name that is a reserved OQL word by using double quotes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \"Sales.Order\".* FROM \"Sales.Order\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Attribute Value from List Item\nDESCRIPTION: Shows how to obtain a read-only attribute value for a specific item in a list using ListAttributeValue\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_19\n\nLANGUAGE: ts\nCODE:\n```\nconst attributeValue = this.props.myAttributeOnDatasource.get(this.props.myDataSource.items[0]);\n```\n\n----------------------------------------\n\nTITLE: Adding Minutes to a Date in Java\nDESCRIPTION: Example of using the addMinutes function to add 3 minutes to a date. This function adds a specified number of minutes to a date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\naddMinutes(dateTime(2007, 1, 1, 1, 1, 1), 3)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:04:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Alert Message in Markdown\nDESCRIPTION: Shows a warning alert message using Markdown syntax to indicate that this activity can only be used in microflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/show-home-page.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nThis activity can only be used in **Microflows**.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Sample Output for Pipeline Runs\nDESCRIPTION: This snippet shows the format of the `kubectl get pipelineruns` output. It includes the pipeline run names, their success status, and timestamps for start and completion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nNAME SUCCEEDED REASON STARTTIME COMPLETIONTIME\nmx-pipeline-app-create-run-generic-zzt8h False Failed 8d 8d\nmx-pipeline-build-run-gitlab-2bjc7 True Succeeded 22d 22d\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customers with XPath in Mendix\nDESCRIPTION: Demonstrates basic XPath queries to retrieve customer data in Mendix. Shows how to select all customers and filter by name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer\n```\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer[Name='Jansen']\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Schema for a Message in Mendix REST Service\nDESCRIPTION: This snippet shows the structure of a JSON schema definition for a message in a Mendix published REST service. It includes the type and properties of the message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"#definition_name#\": { \n  \"type\": \"object\",\n  \"properties\": [\n     #attribute_name#: #attribute_schema#\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Offsetting GraphQL Results in Mendix\nDESCRIPTION: This query retrieves the names of the seventh, eighth, and ninth employee. It shows how to use the offset parameter to skip a number of objects before returning the result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_3\n\nLANGUAGE: graphql\nCODE:\n```\n{\n    employees(first: 3 offset: 6) {\n        name\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying with month-from-dateTime and Timezone in Studio Pro\nDESCRIPTION: This query retrieves all log entries where the month extracted from the `DateAttribute` equals 12 (December), specifically using the 'America/New_York' time zone. This demonstrates the use of the timezone parameter within the `month-from-dateTime` function in a Studio Pro XPath query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [month-from-dateTime(DateAttribute, 'America/New_York') = 12]\n```\n\n----------------------------------------\n\nTITLE: Executing XPath Query with Java in Mendix\nDESCRIPTION: This Java code snippet demonstrates how to execute an XPath expression in Mendix, returning a list of entities. It utilizes the `Core.createXPathQuery()` function, requires a string parameter for the XPath expression, and validates that the returned objects match a specified entity type. It highlights the use of Java APIs to create reusable microflow actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-datastorage-api.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic java.util.List<IMendixObject> executeAction() throws Exception\n{\n    //BEGIN USER CODE\n    List<IMendixObject> result = null;\n    result = Core.createXPathQuery(this.XPath).execute(getContext());\n    if (!result.isEmpty() && !result.get(0).isInstanceOf(this.ResultEntity)) {\n        throw new MendixRuntimeException(String.format(\"Unexpected result entity: %s vs %s\",\n            result.get(0).getMetaObject().getName(), this.ResultEntity));\n    }\n    return result;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Sales Orders by Customer Name in XPath\nDESCRIPTION: This XPath query counts all Sales.Order objects associated with a customer named 'Jansen'. It filters the orders based on a relationship to the Sales.Customer entity and the customer's name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-count.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"count(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen'])\"\n```\n\n----------------------------------------\n\nTITLE: Styling Native Bottom Sheet Widget in Mendix (JavaScript)\nDESCRIPTION: JavaScript code for styling a Bottom Sheet widget that creates modal or expanding bottom options in Mendix native mobile apps, with customizable text styles for different item types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_bottomsheet_BottomSheet = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  containerWhenExpandedFullscreen: {\n    // This has all ViewStyle properties. This has all ViewStyle properties. Only available if `Expading` and `Enable full screen` are enabled.\n  },\n  modal: {\n    // This has all ViewStyle properties. \n  },\n  defaultStyle: {\n    // This has all TextStyle properties. Available when `Default` is selected as style for basic items.\n  },\n  primaryStyle: {\n    // This has all TextStyle properties. Available when `Primary` is selected as style for basic items.\n  },\n  dangerStyle: {\n    // This has all TextStyle properties. Available when `Danger` is selected as style for basic items.\n  },\n  customStyle: {\n    // This has all TextStyle properties. Available when `Custom` is selected as style for basic items.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Formatting Time Part of DateTime in Mendix\nDESCRIPTION: Extracts and formats only the time portion of a Date and time value. Returns a time string in a standard format based on Java version and user locale.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nformatTime(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Configuring App Pipeline - Bash\nDESCRIPTION: This script configures an existing Mendix app by sending a POST request to the pipeline trigger URL. It allows updating environment variables, constants, and setting the number of replicas. Requires cURL and the appropriate permissions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST \\\n  http://pipeline.trigger.yourdomain.com/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Event: configure-app' \\\n  -H 'X-GitLab-Token: SomeLongSecureToken42' \\\n  -d '{\\n    \"namespace\":\"namespace-with-operator\",\\n    \"env-internal-name\":\"mx-environment-internal-name\",\\n    \"source-url\":\"https://example.com/url-to-mda/or/oci-image\",\\n    \"mx-admin-password\":\"Welc0me!\",\\n    \"replicas\":5,\\n    \"dtap-mode\":\"D\",\\n    \"set-constants\":\"{\\\"key\\\":\\\"value\\\"}\",\\n    \"add-constants\":\"{\\\"key\\\":\\\"value\\\"}\",\\n    \"remove-constants\":\"[\\\"key\\\"]\",\\n    \"set-env-vars\":\"{\\\"key\\\":\\\"value\\\"}\",\\n    \"add-env-vars\":\"{\\\"key\\\":\\\"value\\\"}\",\\n    \"remove-env-vars\":\"[\\\"key\\\"]\"\\n}'\n```\n\n----------------------------------------\n\nTITLE: Implementing TextInput Component with Styling in TypeScript\nDESCRIPTION: This code defines the TextInput component in components/TextInput.tsx. It includes the interface for input properties and renders an input element with the passed properties and styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { CSSProperties, Component, ReactNode, createElement } from \"react\";\nimport classNames from \"classnames\";\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n}\nexport class TextInput extends Component<InputProps> {\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.props.value}\n            tabIndex={this.props.tabIndex}\n        />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering the Order List with Attributes of Associated Customers Using XPath - Mendix\nDESCRIPTION: This snippet explains how to filter orders based on attributes of associated customers using XPath. It outlines the process to set up the XPath constraint for filtering orders based on the city of the associated customers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/filtering-data-on-an-overview-page.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n1. To constrain the results in the order overview to only orders from customers in Rotterdam, enter the following XPath into the **XPath Constraint** editor: `[Sales.Order_Customer/Sales.Customer/City = 'Rotterdam']`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure SQL Database for Managed Identity\nDESCRIPTION: SQL commands to replace static database user with managed identity and grant database owner permissions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_24\n\nLANGUAGE: sql\nCODE:\n```\nDROP USER [<static-database-username>];\nCREATE USER [<managed-identity-name>] FROM EXTERNAL PROVIDER;\nALTER ROLE db_owner ADD MEMBER [<managed-identity-name>];\n```\n\n----------------------------------------\n\nTITLE: Using JOIN with Subquery in FROM Clause in SQL\nDESCRIPTION: Demonstrates how to use JOIN operations with subqueries in the FROM clause. This example performs a LEFT JOIN between the Request table and a subquery containing all customers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_56\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM\n\tSales.Request Req\n\tLEFT JOIN\n\t(\n\t\tSELECT *\n\t\tFROM Sales.Customer\n\t) AS Cust\n\tON Req.CustomerName = Cust.LastName\n```\n\n----------------------------------------\n\nTITLE: Defining a Basic Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet shows the common structure for defining a property in a pluggable widget. It includes the required 'key' and 'type' attributes, as well as 'caption' and 'description' elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"propertyKey\" type=\"propertyType\">\n\t<caption>My Property</caption>\n\t<description>This is my property</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Selecting Grid Row in Mendix with Selenium\nDESCRIPTION: JavaScript code showing how to select the fourth row in a grid named 'ArtistGrid' using CSS selectors in Selenium. Uses both the grid name and index-based selection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/selenium-support.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$('.mx-name-ArtistGrid .mx-name-index-3')\n```\n\n----------------------------------------\n\nTITLE: Defining Editability System Property in Mendix Pluggable Widget XML\nDESCRIPTION: This XML snippet defines the Editability system property for a Mendix pluggable widget. It allows the widget to have an editable configuration similar to core input widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_24\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Editability\"/>\n```\n\n----------------------------------------\n\nTITLE: Determining Sort Direction Parameter in Mendix\nDESCRIPTION: Conditional expression that converts the boolean SortAscending attribute to appropriate 'asc' or 'desc' text values for the REST API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_4\n\nLANGUAGE: expression\nCODE:\n```\nif $Paging/SortAscending then 'asc' else 'desc'\n```\n\n----------------------------------------\n\nTITLE: Checking Enumeration Equality - Java\nDESCRIPTION: This snippet illustrates how to check for equality between two enumeration values in Mendix within a conditional statement. It provides the syntax used in such comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nif $Order/Status = OrderProcessing.Status.completed then \n  true \nelse \n  false\n```\n\n----------------------------------------\n\nTITLE: Using RANGEBEGIN to Query Future Sales Periods - SQL\nDESCRIPTION: This snippet retrieves all sales periods that end after a given future date defined by a range parameter using the RANGEBEGIN function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_28\n\nLANGUAGE: sql\nCODE:\n```\nSELECT End, Revenue FROM Sales.Period WHERE End > RANGEBEGIN($range_future)\n```\n\n----------------------------------------\n\nTITLE: Redirecting Unsupported Browsers\nDESCRIPTION: This snippet implements a check for browser support of ES6 Symbols, redirecting users to an unsupported browser page if their browser does not support this feature. Ensuring compatibility is crucial when enforcing CSP.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/csp.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Redirect to unsupported browser page if opened from browser that doesn't support Symbols\nif (typeof Symbol !== \"function\") {\n    var homeUrl = window.location.origin + window.location.pathname;\n    var appUrl = homeUrl.slice(0, homeUrl.lastIndexOf(\"/\")) + \"/\";\n    window.location.replace(appUrl + \"unsupported-browser.html\");\n}\n```\n\n----------------------------------------\n\nTITLE: Dividing Numbers in Mendix - Java\nDESCRIPTION: This code showcases division in Mendix using Java with 'div' or ':' syntax. The inputs are of type Integer/Long or Decimal and result in Decimal output. The examples highlight potential precision issues in division with infinite decimal expansions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n3 div 5\n```\n\nLANGUAGE: Java\nCODE:\n```\n12 : 3\n```\n\nLANGUAGE: Java\nCODE:\n```\n3 : 7\n```\n\nLANGUAGE: Java\nCODE:\n```\n(3 : 7) * 7\n```\n\nLANGUAGE: Java\nCODE:\n```\nceil((3 : 7) * 7)\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Price for Specific Customer Orders using XPath in Java\nDESCRIPTION: This XPath query calculates the average total price of orders placed by a specific customer named 'Jansen'. It filters the Sales.Order entities based on the customer name before applying the avg() function to the TotalPrice attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-avg.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\navg(//Sales.Order[Sales.Customer_Order/Sales.Customer = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Including On Enter Event Snippet\nDESCRIPTION: This snippet specifies the on-enter property event for the text area widget, executed when the widget is focused. It details the behavior when entering the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Specifying Name Property for Mendix Pluggable Widget\nDESCRIPTION: This XML snippet shows how to specify the Name system property for a Mendix pluggable widget. The Name property controls the position of the widget name input and is used for locating the widget during automated tests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_25\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Name\"/>\n```\n\n----------------------------------------\n\nTITLE: Backwards Compatible Authtoken Setter Implementation\nDESCRIPTION: Code snippet that provides backwards compatibility for auth token setting across different Mendix Studio Pro versions, handling both encrypted and unencrypted tokens.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.8.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// This import most likely already exists in your code.\nimport AsyncStorage from \"@react-native-community/async-storage\"; \n\nfunction getAuthtokenSetter() {\n\tlet setValue = async (value) => await AsyncStorage.setItem(\"token\", value);\n\ttry {\n\t\tsetValue = (require(\"mendix/utils/native/authtoken\"))?.setValue;\n\t} catch (e) {\n\t\tconsole.warn(\"Client does not support encrypted token\");\n\t}\n\treturn setValue;\n}\n```\n\n----------------------------------------\n\nTITLE: XSUAA User Authentication Config\nDESCRIPTION: Configuration line for granting app access in the xs-security.json file of XSUAA service instance bound with bapi-service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ngranted-apps\" : [ \"$XSAPPNAME(application,your-Mendix-app-deployed-on-SAP-BTP)\"]\n```\n\n----------------------------------------\n\nTITLE: Getting Logged-In Users in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for retrieving the list of currently logged-in users in the Mendix Runtime. If a user has multiple sessions, they will be listed once for each session.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_logged_in_user_names\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\": {\n    \"count\":1,\n    \"users\":[\"MxAdmin\"]\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing Basic Authentication Header in JavaScript\nDESCRIPTION: This snippet demonstrates how to construct the Authorization header for basic authentication in OData services. It combines the username and password, encodes them in Base64, and prepends 'Basic ' to create the full header value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nAuthorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\n```\n\n----------------------------------------\n\nTITLE: Calculating Minimum Value with min Function\nDESCRIPTION: Returns the smallest value from specified numeric arguments or date and time values. Supports multiple input types and preserves the most precise data type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nmin(5, 1, 5, 6.7)\n```\n\n----------------------------------------\n\nTITLE: Handling Object GUIDs in Local Notifications\nDESCRIPTION: Framework for retrieving object GUIDs and passing them through local notifications to specific pages. Uses GetGUID and GetObjectByGUID JavaScript actions to manage object references.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Optimizing Performance with a Combined SQL Query for Chart Data\nDESCRIPTION: This SQL snippet combines the retrieval of multiple temperature metrics into a single query, reducing execution time and enhancing performance in Mendix apps. The query utilizes a Common Table Expression (CTE) to summarize data and then employs a UNION to format the output suitable for a multi-series chart. This approach minimizes the number of queries executed against the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nwith days as (\n    select date_valid_std\n    ,      avg(avg_temperature_air_2m_f) as avg_temp_f\n    ,      round(avg((avg_temperature_air_2m_f - 21) * (5/9)),1) as avg_temp_c\n    ,      min(avg_temperature_air_2m_f) as min_temp_f\n    ,      round(min((avg_temperature_air_2m_f - 21) * (5/9)),1) as min_temp_c\n    ,      max(avg_temperature_air_2m_f) as max_temp_f\n    ,      round(max((avg_temperature_air_2m_f - 21) * (5/9)),1) as max_temp_c\n    from   STANDARD_TILE.HISTORY_DAY\n    group by date_valid_std\n    order by DATE_VALID_STD asc\n)\nselect d1.DATE_VALID_STD\n,      'AvgTempCelcius' as \"MeasurementType\"\n,      d1.avg_temp_c as \"Value\"\nfrom   days as d1\nunion\nselect d2.DATE_VALID_STD\n,      'MinTempCelcius' as \"MeasurementType\"\n,      d2.min_temp_c as \"Value\"\nfrom   days as d2\nunion\nselect d3.DATE_VALID_STD\n,      'MaxTempCelcius' as \"MeasurementType\"\n,      d3.max_temp_c as \"Value\"\nfrom   days as d3\norder by 1,2\n```\n\n----------------------------------------\n\nTITLE: Linking React Native NFC Manager Module\nDESCRIPTION: This command links the react-native-nfc-manager module to the React Native project. This command is used for React Native versions below 0.60.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n\"react-native link react-native-nfc-manager\"\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year Only in Mendix\nDESCRIPTION: Creates a date object by specifying only the year (2007), automatically setting month and day to January 1st and time to midnight.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007)\n```\n\n----------------------------------------\n\nTITLE: Sorting Employees by Name and Age in OData\nDESCRIPTION: Demonstrates how to sort the result set using the $orderby query option. This example sorts employees by name in ascending order, then by age in descending order.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_4\n\nLANGUAGE: odata\nCODE:\n```\n?$orderby=Name asc,Age desc\n```\n\n----------------------------------------\n\nTITLE: Creating a Subscription and Monitor Items in Mendix\nDESCRIPTION: This snippet describes the steps necessary to create a subscription in Mendix that listens for changes in monitored items from an OPC-UA server. It emphasizes the use of the `CreateSubscription` action and the importance of correctly specifying monitor attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/opc-ua-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Call `CreateSubscription` action. \n2. Create `MonitorItem` objects for each attribute to be monitored, with the following fields specified: `NodeID`, `AttributeID`, `MicroflowName`, associated to the created `Subscription`. \n3. Do not use the Mendix commit, use instead the provided `CommitMonitoredItem` or `CommitMonitoredItems` action.\n```\n\n----------------------------------------\n\nTITLE: Implementing Post-Processor for Iris Classification in Java\nDESCRIPTION: This Java code implements a post-processor that converts the numerical output from a Random Forest model (0, 1, or 2) into human-readable Iris flower species names (Setosa, Versicolour, or Virginica).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n    @java.lang.Override\n    public java.lang.String executeAction() throws Exception\n    {\n      this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.ML_Output_Entity_Iris_RF_ML_Model.initialize(getContext(), __Parameter);\n    \n      // BEGIN USER CODE\n      if (Parameter.getOutput_label() == 0) {\n        return \"Setosa\";\n      } else if (Parameter.getOutput_label() == 1) {\n        return \"Versicolour\";\n      } else\n        return \"Virginica\";\n      // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Replacing First Occurrence with replaceFirst Function in Java\nDESCRIPTION: The replaceFirst function replaces the first occurrence of a regular expression with a replacement string. It takes three string parameters: the string to search in, the regular expression to match, and the replacement string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_13\n\nLANGUAGE: java\nCODE:\n```\nreplaceFirst('this is a string with 75 some numbers 234 thrown in', '([0-9])', 'NUMBER')\n```\n\nLANGUAGE: java\nCODE:\n```\n'this is a string with NUMBER5 some numbers 234 thrown in'\n```\n\n----------------------------------------\n\nTITLE: Opening a tab on menu item click using Typescript\nDESCRIPTION: This code snippet demonstrates how to open a tab in Studio Pro when a specific menu item is clicked. It uses the `studioPro.ui.extensionsMenu.addEventListener` to listen for the `menuItemActivated` event. When the event is triggered for the specified `menuId`, the code opens a new tab using `studioPro.ui.tabs.open`, specifying the title and component to load.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/get-started.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n    // Open a tab when the menu item is clicked\n    studioPro.ui.extensionsMenu.addEventListener(\"menuItemActivated\", (args) => {\n      if (args.menuId === \"myextension.ShowTabMenuItem\") {\n        studioPro.ui.tabs.open(\n          {\n            title: \"My Extension Tab\",\n          },\n          {\n            componentName: \"extension/myextension\",\n            uiEntrypoint: \"tab\",\n          }\n        );\n      }\n    });\n```\n\n----------------------------------------\n\nTITLE: Defining Switch Widget Styles in JavaScript\nDESCRIPTION: This snippet sets up the styling properties for the Switch widget in Mendix. It includes input styles for track colors, thumb colors, and properties for disabled states, along with error handling for validation messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_switch_Switch = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the text box is non-editable.\n  },\n  input: {\n    // This has all TextStyle properties. \n    trackColorOn: null, // Custom color for the switch track when turned on.\n    trackColorOff: null, // Custom color for the switch track when turned off.\n    thumbColorOn: null, // Color of the foreground switch grip when turned on. If this is set on iOS, the switch grip will lose its drop shadow.\n    thumbColorOff: null, // Color of the foreground switch grip when turned off. If this is set on iOS, the switch grip will lose its drop shadow.\n  },\n  inputError: {\n    // This has the same properties as `input`. Overrides `input` styles if there are validation errors.\n  },\n  inputDisabled: {\n    // This has the same properties as `input`. Overrides `input` styles if the checkbox is non-editable.\n  },\n  label: {\n    // This has all TextStyle properties \n    numberOfLines: 1, // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis.\n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the checkbox is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Using 'or' Operator in Java\nDESCRIPTION: This example shows how the 'or' operator can be used to check if at least one of the two Boolean expressions is true, returning a Boolean value accordingly. The snippet features a model with entity attributes; however, it doesn't specify any libraries as dependencies. Inputs are Boolean expressions utilising comparisons or equality checks, and the output is a Boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n($product/price < $product/recommendedPrice : 2) or ($product/price > 0)\n```\n\nLANGUAGE: java\nCODE:\n```\n('hello' = 'nothello') or ('byebye' = 'stillnotbyebye')\n```\n\n----------------------------------------\n\nTITLE: Setting Up NFC Support in Mendix Nanoflow\nDESCRIPTION: This snippet outlines the steps to set up NFC support in a Mendix nanoflow using a series of actions, including error handling for unknown NFC support and reading an NFC tag if supported.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Open **ATC_ReadNFCTag**.\n1. Double-click the **Has NFC Support** action, set the **Variable name** as *HasNFCSupport*, and click **OK**.\n1. Right-click the **Has NFC Support** action, select **Set error handling**, and set the type to **Custom without rollback**.\n1. Create a **Show message** action, set the type as **Error**, and set the template as: *Error occurred while checking NFC support: {1}*. Add a parameter containing *$latestError*.\n1. Connect the **Has NFC Support** activity to the **Show message** activity. Right-click the connection to the **Show message** action and select **Set as error handler**.\n1. Add an end event under your error message, then connect the message to the end event.\n1. Add a **Decision** action. In its **Expression** check for the return variable with the expression *$HasNFCSupport*, write *Has NFC support?* in **Caption**, then click **OK**. Add an end event under this show message activity.\n1. If a device is not supported, show a message of type warning. Create a **Show message** action with template text *Sorry, your device does not support NFC.* and then connect this error message to the decision.\n1. If a device is supported, add the **Read NFC Tag** action and store the response in the variable *TagValue*.\n1. Set the sequence flows from the decision to **True** (going left) and **False** (going down).\n1. Right-click the **Read NFC Tag** action and select **Set error handling**. Set the type to **Custom without rollback**.\n1. Create a **Show message** action, set the type as error, and set the template text to *Error occurred while reading an NFC tag: {1}*. Use *$latestError* as the single parameter.\n1. Connect the **Read NFC Tag** activity with a **Show message** activity. Right-click the connection to the **Show message** action and select **Set as error handler**.\n1. Connect this **Show message** action to an end point. Set the type as information, and set the template as *Your NFC tags says: {1}*. Use *$TagValue* as a parameter.\n1. Optionally you can add **Show progress** and **Hide progress** activities to give your user more information while using the NFC reader. This action can be found in the **Nanoflow Commons** module.\n1. Deploy your app to the sandbox.\n```\n\n----------------------------------------\n\nTITLE: XML Representation of One-to-Many Association\nDESCRIPTION: Shows how a one-to-many association between Order and Customer entities is represented in XML. The association is stored in the Order element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/associations/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<Order id=\"101\">\n\t<number>1</number>\n\t<date>9/30/2008</date>\n\t<Order_Customer>id_201</Order_Customer>\n</Order>\n\n<Customer id=\"201\">\n\t<fullname>Apple Inc.</fullname>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n</Customer>\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a basic line chart with two data series using scatter plot type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"x\": [ 1, 2 ],\n    \"y\": [ 1, 2 ],\n    \"type\": \"scatter\"\n  },\n  {\n    \"x\": [ 3, 4 ],\n    \"y\": [ 9, 14 ],\n    \"type\": \"scatter\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Extracting Year from DateAttribute in Local Timezone\nDESCRIPTION: XPath query to filter logs based on the year extracted from a DateAttribute using the local timezone. Returns logs where the year is 2011.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-year-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n[year-from-dateTime(DateAttribute) = 2011]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Logging.Log[year-from-dateTime(DateAttribute) = 2011]\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example: Applying Constraints\nDESCRIPTION: This XPath query retrieves 'Customer' objects from the 'Sales' module where the 'TotalAmount' attribute is greater than 1000.  The '[]' tokens enclose the constraint expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_3\n\nLANGUAGE: xpath\nCODE:\n```\n\"//Sales.Customer[TotalAmount > 1000]\"\n```\n\n----------------------------------------\n\nTITLE: SQL Query for Creating CustomerVE View Entity in Mendix\nDESCRIPTION: This SQL query creates a view entity that joins customer data with their billing and delivery addresses. It selects and transforms customer information including IDs, names, contact details, and concatenated address data from multiple tables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-export-data.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    c.CustomerId as CustomerID,\n    c.CompanyName as Company,\n    (c.FirstName + ' ' + c.LastName) as FullName,\n    c.Phone as Phone, \n    c.Fax as Fax,\n    (ba.Address + ', ' + ba.City + ' ' + ba.PostalCode + ', ' + ba.Country) as BillingAddress,\n    (da.Address + ', ' + da.City + ' ' + da.PostalCode + ', ' + da.Country) as DeliveryAddress\nFROM Shop.Customer c\n    LEFT JOIN c/Shop.BillingAddress/Shop.Address ba\n    LEFT JOIN c/Shop.DeliveryAddress/Shop.Address da\n```\n\n----------------------------------------\n\nTITLE: Adding Headers to a REST Request in Mendix\nDESCRIPTION: Steps to add custom headers to REST requests in the Consumed REST Service document.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/consumed-rest-service.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open the **Headers** tab and click **Add header**.\n2. In the **Key** field, click the drop-down and choose from the list of the most commonly used HTTP headers. You can also create a custom header by typing directly in the key field and adding a value in the **Value** field.\n3. Click **OK**. To test the header, click **Send**.\n```\n\n----------------------------------------\n\nTITLE: Calculating Days Between Dates in Java\nDESCRIPTION: The `daysBetween` function calculates the absolute difference between two dates in days, accounting for time. It takes two Date and Time objects as input and returns a decimal indicating the day difference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndaysBetween(dateTime(2007, 2, 13, 1, 1, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Defining an XPath Query in Java\nDESCRIPTION: This snippet demonstrates using a basic XPath query to retrieve all customers named Jansen within a Java environment. It requires that the entity and context are explicitly defined.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Creating an Unfiltered ProjectVE View Entity with SQL\nDESCRIPTION: SQL query for creating a view entity that retrieves all project information including ProjectID, TenantID, Name, Description, dates, and status from the Project entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/multitenant-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    p.ProjectID as ProjectID,\n    t.TenantID as TenantID,\n    p.Name as Name,\n    p.Description as Description,\n    p.StartDate as StartDate,\n    p.EndDate as EndDate,\n    p.Status as Status,\n    p.CreatedAt as CreatedAt,\n    p.UpdatedAt as UpdatedAt\nFROM MultiTenantApp.Project as p\n```\n\n----------------------------------------\n\nTITLE: Requesting Total Count in Mendix Widget using TypeScript\nDESCRIPTION: This snippet shows how to request the total count of items in a Mendix widget. It calls the requestTotalCount method in the constructor.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport default class PagedWidget extends Component<PagedWidgetProps> {\n    constructor(props: PagedWidgetProps) {\n        super(props);\n    \n        props.myDataSource.requestTotalCount(true);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Associations in OData PATCH Request (JSON)\nDESCRIPTION: Example of updating associations using a PATCH request in OData. It demonstrates setting a single associated object using @id syntax and removing an association using null.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Birthplace\": { \"@id\": \"Cities(511342)\" },\n  \"Region\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Adding an Image Uploader Widget in Mendix\nDESCRIPTION: This snippet explains how to add an Image Uploader widget within a Mendix form that allows users to attach images to the associated objects. This widget works within a data container such as a data view.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/attach-images.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **New Report** page where employees submit a new report.\n\n2. Open the **Toolbox** and search for the **Create** button.\n\n3. Drag the button above **Save** and **Cancel** buttons:\n\n4. In the **Select Entity** dialog box, choose the **Receipt** entity:\n\n5. Open the **Properties** pane for the button and do the following:\n\n    1. Select the **Caption** property and rename it to *Attach Images*.\n\n    2. Click the **Icon** property.\n\n    3. In the **Select icon** dialog box, search for the *picture* glyph icon, and click **Select**.\n\n    4. Click the **Button style** property and change it from **Default** to **Success**.\n\n    5. Click the **On click page** property and in the **Select web page** dialog box, click **New**.\n\n    6. In the **Create Page** dialog box, do the following:\n\n        1. Set the **Title** to *Receipt_NewEdit*.\n        2. Set the **Layout** to *PopupLayout*.\n        3. Since this button creates the Receipt object, the contents of the page will be configured automatically for you and the suggested page template is narrowed down to **Forms**. Choose **Form Vertical** and click **Create**.\n```\n\n----------------------------------------\n\nTITLE: OQL Addition Operator with Attribute Modification\nDESCRIPTION: Query demonstrating the addition operator to modify the Number attribute by adding 5 to each value in the result set.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, (Number + 5) AS N FROM Sales.Order\n```\n\n----------------------------------------\n\nTITLE: Applying Boolean Attribute Filter in Mendix\nDESCRIPTION: Code that checks if a boolean attribute is filterable, then applies a filter condition to show only items where the boolean value is true. Uses the 'equals' filter builder.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { attribute, literal, equals } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAttributeBoolean.filterable) {\n    const filterCond = equals(attribute(this.props.myAttributeBoolean.id), literal(true));\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Attribute is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Checking NFC Support in a JavaScript Action\nDESCRIPTION: This code checks if the device supports NFC by first verifying the NfcManager module is available, then calling its isSupported method. It returns a boolean indicating whether NFC is supported by the device.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nif (!NativeModules.NfcManager) {\nthrow new Error(\"The NfcManager module is not available in your app.\");\n}\nreturn NfcManager.isSupported();\n```\n\n----------------------------------------\n\nTITLE: Adding Seconds to a Date in Java\nDESCRIPTION: Example of using the addSeconds function to add 2 seconds to a date. This function adds a specified number of seconds to a date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\naddSeconds(dateTime(2007, 1, 1, 1, 1, 1), 2)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:03 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix Objects from GitHub API Response\nDESCRIPTION: Implementation that maps GitHub API results to Mendix objects with hardcoded entity and attribute names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); \n    const jsonData = await response.json();\n    logger.debug(\"count\", jsonData.total_count);\n    const gitHubUsers = jsonData.items.map(createGitHubUser);\n    return Promise.all(gitHubUsers);\n\n    function createGitHubUser(user) {\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: \"HowTo.GitHubUser\",\n                callback: function(mxObject) {\n                    mxObject.set(\"login\", user.login);\n                    mxObject.set(\"avatar_url\", user.avatar_url);\n                    resolve(mxObject);\n                },\n                error: function(e) {\n                    reject(\"Could not create object:\" + error.message);\n                }\n            });\n        });\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Font Family Definition\nDESCRIPTION: This CSS snippet shows the correct way to define font families with different weights and styles for Mendix native mobile apps.  Instead of using a single font family, this defines an object that maps weights and styles (regular, boldItalic, bold, italic) to their corresponding PostScript names.  This is crucial for ensuring consistent font rendering across both Android and iOS platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_6\n\nLANGUAGE: css\nCODE:\n```\nexport const timesNewRomanFontFamily = {\n    regular: \"TimesNewRomanPSMT\",\n    boldItalic: \"TimesNewRomanPS-BoldItalicMT\",\n    bold: \"TimesNewRomanPS-BoldMT\",\n    italic: \"TimesNewRomanPS-ItalicMT\",\n};\n```\n\n----------------------------------------\n\nTITLE: Using GreaterThanOrEqual Filter Helper in TypeScript\nDESCRIPTION: Demonstrates the greaterThanOrEqual helper for filtering items where a value is greater than or equal to a specified number. Works with numeric and datetime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is greater than or equals 42\nconst filterCondition = greaterThanOrEqual(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Using XPath min Function in Java\nDESCRIPTION: These snippets demonstrate how to use the XPath `min()` function to find the minimum numeric value from a specific column in a database query. The first example finds the lowest total price across all orders, while the second example filters orders placed by a customer with the name 'Jansen'. These queries require an XPath engine capable of processing XPaths, and the queried column must be numeric.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-min.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmin(//Sales.Order/TotalPrice)\n```\n\nLANGUAGE: java\nCODE:\n```\nmin(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Updating iOS Podfile for Permissions\nDESCRIPTION: This XML snippet shows how to update the ios/podfile to include necessary permissions for your Mendix native mobile app. Each 'pod' declaration specifies a permission, linking to the react-native-permissions module. This is a crucial step for enabling permission requests on iOS.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/generic-permission-action.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n\"target 'YourAwesomeProject' do\\n\\n  # …\\n\\n  permissions_path = '../node_modules/react-native-permissions/ios'\\n\\n  pod 'Permission-AppTrackingTransparency', :path => \"#{permissions_path}/AppTrackingTransparency\"\\n  pod 'Permission-BluetoothPeripheral', :path => \"#{permissions_path}/BluetoothPeripheral\"\\n  pod 'Permission-Calendars', :path => \"#{permissions_path}/Calendars\"\\n  pod 'Permission-Camera', :path => \"#{permissions_path}/Camera\"\\n  pod 'Permission-Contacts', :path => \"#{permissions_path}/Contacts\"\\n  pod 'Permission-FaceID', :path => \"#{permissions_path}/FaceID\"\\n  pod 'Permission-LocationAccuracy', :path => \"#{permissions_path}/LocationAccuracy\"\\n  pod 'Permission-LocationAlways', :path => \"#{permissions_path}/LocationAlways\"\\n  pod 'Permission-LocationWhenInUse', :path => \"#{permissions_path}/LocationWhenInUse\"\\n  pod 'Permission-MediaLibrary', :path => \"#{permissions_path}/MediaLibrary\"\\n  pod 'Permission-Microphone', :path => \"#{permissions_path}/Microphone\"\\n  pod 'Permission-Motion', :path => \"#{permissions_path}/Motion\"\\n  pod 'Permission-Notifications', :path => \"#{permissions_path}/Notifications\"\\n  pod 'Permission-PhotoLibrary', :path => \"#{permissions_path}/PhotoLibrary\"\\n  pod 'Permission-PhotoLibraryAddOnly', :path => \"#{permissions_path}/PhotoLibraryAddOnly\"\\n  pod 'Permission-Reminders', :path => \"#{permissions_path}/Reminders\"\\n  pod 'Permission-Siri', :path => \"#{permissions_path}/Siri\"\\n  pod 'Permission-SpeechRecognition', :path => \"#{permissions_path}/SpeechRecognition\"\\n  pod 'Permission-StoreKit', :path => \"#{permissions_path}/StoreKit\"\\nend\"\n```\n\n----------------------------------------\n\nTITLE: Using beginOfWeek Function in Mendix\nDESCRIPTION: Calculates the beginning of the week for a given datetime input based on user's locale. Returns midnight of the first day of that week.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nbeginOfWeek(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Microflow to Evaluate and Set UserType in Mendix\nDESCRIPTION: The `User_EvaluateAndSetUserType` microflow populates the `UserType` attribute on the `UserReportInfo` entity for a given `User`. It retrieves the email address from specializations of `System.User` (e.g., `Administration.Account`, `MendixSSO.MendixSSOUser`) and uses this to determine if a user is internal or external based on the email domain.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/populate-user-type.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n\"2. Create a microflow `User_EvaluateAndSetUserType` which will populate the `UserType` attribute on the `UserReportInfo` entity for a given `User`.\"\n\n```\n\n----------------------------------------\n\nTITLE: Using $latestHttpResponse Variable in Mendix Microflows\nDESCRIPTION: This snippet provides information about the $latestHttpResponse variable, including its type and the conditions under which its Content attribute is populated, making it accessible for further processing within the microflow where the Call REST Service activity is executed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\nThe `$latestHttpResponse` variable is of the [HttpResponse](/refguide9/http-request-and-response-entities/#http-response) type. It is available after a **Call REST** activity. This variable can only be accessed in the microflow where the **Call REST Service** activity is used.\n\nHowever, its `Content` attribute will be left empty in most cases to minimize memory usage.\n\nThis attribute is filled when one of the following scenarios occur:\n\n* The **Response handling** is **Store in an HTTP response** and the call succeeded\n* The **Store message body in $latestHttpResponse variable** option in the **Error handling** section is checked and the call failed\n```\n\n----------------------------------------\n\nTITLE: Java Dependency Management Configuration\nDESCRIPTION: Enables specifying JAR dependencies per module in a Mendix application, with automatic conflict resolution through Gradle. Dependencies are downloaded from Maven central repository or custom repositories.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.3.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nDependencies are resolved through Gradle and downloaded into the new **vendorlib** folder, which is committed to version control.\n```\n\n----------------------------------------\n\nTITLE: Generating a Mendix Java Action with CustomJavaAction\nDESCRIPTION: A template for creating a Java action in Mendix, demonstrating the structure of a custom Java action class with predefined execution and toString methods. The code allows custom implementations between specific comment blocks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage myfirstmodule.actions;\n\nimport com.mendix.systemwideinterfaces.core.IContext;\nimport com.mendix.webui.CustomJavaAction;\n\npublic class JavaAction_1 extends CustomJavaAction<java.lang.Void>\n{\n\tpublic JavaAction_1(IContext context)\n\t{\n\t\tsuper(context);\n\t}\n\t@java.lang.Override\n\tpublic java.lang.Void executeAction() throws Exception\n\t{\n\t\t// BEGIN USER CODE\n\t\treturn true;\n\t\t// END USER CODE\n\t}\n\t/**\n\t * Returns a string representation of this action\n\t */\n\t@java.lang.Override\n\tpublic java.lang.String toString()\n\t{\n\t\treturn \"JavaAction_1\";\n\t}\n\n\t// BEGIN EXTRA CODE\n\t// END EXTRA CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Platform Module for Platform-Specific Styling\nDESCRIPTION: This code updates the React Native import statement to include the Platform module, which allows for platform-specific styling adjustments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View } from \"react-native\"\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View, Platform } from \"react-native\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Property Validation for Sub-Objects in TypeScript\nDESCRIPTION: Example validation function that targets specific properties of sub-objects. This check function validates that the 'y' value of each data point is not greater than 10, returning appropriate error messages with specific property paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction check(values) {\n    var problems = [];\n    values.dataPoints.forEach((p, i) => {\n        if (p.y > 10) {\n            problems.push({\n                property: `dataPoints/${i + 1}/y`,\n                message: \"y should not be larger than 10\"\n            });\n        }\n    });\n    return problems;\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Java Action in Task Queue using Java\nDESCRIPTION: Schedules a Java action for background execution within a specified task queue using the Java API. The function `executeInBackground` is invoked with a context and queue name. Parameters for the Java action can be specified. Designed for performing tasks without an immediate return, the execution will occur asynchronously. Refer to the full API documentation for additional options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/task-queue.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nCore.userActionCall(\"AModule.SomeJavaAction\")\n  .withParams(context, \"Value1\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\");\n```\n\n----------------------------------------\n\nTITLE: Custom Default Styling for GroupBox\nDESCRIPTION: JavaScript configuration for defining default custom styles for the group box widget using Atlas UI variables\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_47\n\nLANGUAGE: js\nCODE:\n```\nimport { brand } from \"../core/variables\";\n\nexport const com_mendix_widget_native_groupbox_GroupBox = {\n    container: {\n        borderColor: brand.primary\n    },\n    header: {\n        backgroundColor: brand.primary\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Styling Floating Action Button with JavaScript\nDESCRIPTION: This code snippet defines the styling properties for the Floating Action Button widget. It includes properties for the container, button (size, rippleColor), button container, button icon, secondary button (size), secondary button icon, secondary button caption, and secondary button caption container. Each property allows customization of appearance using ViewStyle, TextStyle, and ImageStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_floatingactionbutton_FloatingActionButton = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  button: {\n    // This has all ViewStyle properties.\n    size: null, // This is the radius of the button.\n    rippleColor: null, // This is the color of the ripple on Android.\n  },\n  buttonContainer: {\n    // This has all ViewStyle properties.\n  },\n  buttonIcon: {\n    // This has all ImageStyle properties.\n  },\n  secondaryButton: {\n    // This has all ViewStyle properties.\n    size: null, // This is the radius of the secondary buttons.\n  },\n  secondaryButtonIcon: {\n    // This has all ImageStyle properties.\n  },\n  secondaryButtonCaption: {\n    // This has all TextStyle properties.\n  },\n  secondaryButtonCaptionContainer: {\n    // This has all ViewStyle properties.\n  },\n};\n\n```\n\n----------------------------------------\n\nTITLE: Extracting Day from DateTime in Specific Time Zone\nDESCRIPTION: XPath query to filter logs based on the day of the month using the day-from-dateTime() function with a specified time zone (New York). Returns logs where the date is on the 30th day of the month in the America/New_York time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\n//Logging.Log[day-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Defining Mendix App Deployment YAML\nDESCRIPTION: This YAML file defines a Kubernetes StatefulSet named `mendix-k8s-stateful` for deploying the Mendix application. It specifies the Docker image, ports, volume mounts for persistent storage, and environment variables sourced from the Kubernetes secrets created earlier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: mendix-k8s-stateful\n  labels:\n    app: mendix-k8s\nspec:\n  serviceName: mendix-app-service\n  replicas: 2\n  selector:\n    matchLabels:\n      app: mendix-k8s\n  template:\n    metadata:\n      labels:\n        app: mendix-k8s\n    spec:\n      containers:\n        - name: mendix-app\n          image: <hub-user>/<repo-name>:<tag>\n          imagePullPolicy: Always\n          ports:\n            - containerPort: 8080 \n          volumeMounts:\n            - mountPath: \"/opt/mendix/build/data/files\"\n              subPath: files\n              name: mendix-data\n          env:\n            - name: ADMIN_PASSWORD\n              valueFrom:\n                secretKeyRef:\n                  name: mendix-app-secrets\n                  key: admin-password\n            - name: DATABASE_ENDPOINT\n              valueFrom:\n                secretKeyRef:\n                  name: mendix-app-secrets\n                  key: db-endpoint\n            - name: LICENSE_ID\n              valueFrom:\n                secretKeyRef:\n                  name: mendix-app-secrets\n                  key: license-id\n            - name: LICENSE_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: mendix-app-secrets\n                  key: license-key      \n      volumes:\n        - hostPath:\n            path: \"/home/docker/mendix-files\"\n          name: mendix-data\n```\n```\n\n----------------------------------------\n\nTITLE: Representing Mendix Data Types in OData XML\nDESCRIPTION: This XML snippet demonstrates how different Mendix data types are represented in OData XML format. It includes examples for various data types such as ID, AutoNumber, Boolean, Date and time, Enumeration, Big decimal, Hashed string, Integer, Long, and String.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/odata-representation.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<entry>\n  <id>3940649673954387</id>\n  <autoNumber>1</autoNumber>\n  <boolean>true</boolean>\n  <dateTime>2014-12-19T10:27:27.000Z</dateTime>\n  <enumeration>Blue</enumeration>\n  <decimal>0.3333333333333333333333333333333333</decimal>\n  <hashedString>HashPassword</hashedString>\n  <integer>50</integer>\n  <long>3940649673954387</long>\n  <string>John</string>\n</entry>\n```\n\n----------------------------------------\n\nTITLE: LEFT OUTER JOIN Syntax in OQL\nDESCRIPTION: This snippet illustrates the syntax for using a 'LEFT OUTER JOIN' in OQL, which includes all rows from the first entity and matching rows from the second entity, inserting nulls whenever there is no match. It is useful for retrieving unmatched rows from the left side of the join.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nLEFT [ OUTER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: Using Existing Business Event Service in Studio Pro 9.24+\nDESCRIPTION: Demonstrates how to import and use an existing business event service YAML file in Studio Pro 9.24 and above\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/business-event-services/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nRight-click on module > Add other > Business event service > Use an existing business event service\n```\n\n----------------------------------------\n\nTITLE: Reversing Product Name in Java Action\nDESCRIPTION: This snippet demonstrates how to reverse a product name within a Java action. It retrieves a product name using the provided product parameter and returns it in reverse order. The key dependencies include the `this.productParameter.getName()` method for fetching the name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/extending-your-application-with-custom-java.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nString productName = this.productParameter.getName(this.getContext());\nreturn new StringBuilder(productName).reverse().toString();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Employee Data with XPath in JSON (Mendix Client to Runtime Server)\nDESCRIPTION: This JSON request demonstrates how the Mendix Client retrieves employee data from the Runtime Server using an XPath expression. It includes parameters for sorting, pagination, and specifying which attributes to retrieve.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"retrieve_by_xpath\",\n   \"params\":{\n      \"xpath\":\"//MyFirstModule.Employee\",\n      \"schema\":{\n         \"id\":\"a2916c7c-af2f-4267-a8e9-99604f045861\",\n         \"offset\":0,\n         \"sort\":[\n            [\n               \"Firstname\",\n               \"asc\"\n            ]\n         ],\n         \"amount\":20\n      },\n      \"count\":true,\n      \"aggregates\":false\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee5ad0c056a0\":15\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ImageValue Type in Mendix 9 Pluggable Widgets API\nDESCRIPTION: This code defines the ImageValue type used to represent static or dynamic images in Mendix widgets. It includes WebImage interface for web widgets and NativeImage type for native widgets, both usable through the DynamicValue<ImageValue> property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface WebImage {\n    readonly uri: string;\n    readonly name: string;\n    readonly altText?: string;\n}\nexport type NativeImage = Readonly<ImageURISource & { name?: string; } | string | number>;\nexport type ImageValue = WebImage | NativeImage;\n```\n\n----------------------------------------\n\nTITLE: Configuring Visual Studio Code as File Comparison Tool in Mendix Studio Pro\nDESCRIPTION: Example of how to set up Visual Studio Code as the file comparison tool for viewing file changes in the commit dialog box. The path to VS Code executable is specified with arguments to enable diff mode between two files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/edit-menu/preferences-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{path to VS Code}/Code.exe --wait --diff \"{0}\" \"{1}\"\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Customers without Orders Over 30000 in Studio Pro\nDESCRIPTION: This Studio Pro query retrieves customers who have not placed any orders with a `TotalPrice` greater than 30,000, including those who haven't placed any orders at all.  It demonstrates using `not()` to check for the absence of orders exceeding a specific price threshold.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_6\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [not(Sales.Customer_Order/Sales.Order/TotalPrice > 30000)]\n```\n\n----------------------------------------\n\nTITLE: Illustrating Break Event Usage in Mendix Microflow\nDESCRIPTION: This XML snippet demonstrates the structure of a microflow using a break event within a loop. It shows how to check for unpaid order lines and break the loop when one is found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/events/break-event.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/application-logic/microflows-and-nanoflows/events/break-event/break-event-example.png\" alt=\"Break Event Example\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Enabling Specific Scheduled Events in Mendix App using YAML\nDESCRIPTION: Configures the execution of specific scheduled events in a Mendix app by setting scheduledEventExecution to 'SPECIFIED' and listing the events. Dependencies on understanding the scheduling logic within the application are assumed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  runtime:\n    scheduledEventExecution: SPECIFIED\n    myScheduledEvents:\n      - MyFirstModule.EventOne\n      - MySecondModule.EventTwo\n```\n\n----------------------------------------\n\nTITLE: Working with Mendix Data in Tableau\nDESCRIPTION: This section explains how to connect Tableau to a Mendix application's OData service. It includes steps for connecting Tableau to the service, adding multiple entities, defining relationships between them, and visualizing the data in Tableau.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Validating Input String Text in JavaScript Actions\nDESCRIPTION: Shows how to properly validate a string input parameter in a JavaScript action by checking for undefined values and empty strings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {string} text\n */\nasync function TextToSpeech(text) {\n    // BEGIN USER CODE    \n    if (text === undefined) {\n        // Throw an error when the parameter is set to 'empty', the value will be undefined \n        throw new Error(\"The Text parameter is required\");\n    }\n    if (text.trim() === \"\") {\n        // Throw an error when the text is an empty string \"\"\n        throw new Error(\"The Text parameter can not be empty\");\n    }\n    /* implementation */\n    // END USER CODE\n  }\n```\n\n----------------------------------------\n\nTITLE: Customizing Legend Properties in JSON\nDESCRIPTION: This snippet provides settings for customizing the chart legend, including background color, border properties, font settings, and positioning. Adjust x and y properties for positioning.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"legend\": {\n    \"showlegend\": true,\n    \"legend\": {\n      \"bgcolor\": \"#fff\",\n      \"bordercolor\": \"#444\",\n      \"borderwidth\": 0,\n      \"font\":{\n        \"family\": \"Open Sans, verdana, arial, sans-serif\",\n        \"size\": 12,\n        \"color\": \"black\"\n      },\n      \"orientation\": \"v\",\n      \"traceorder\": \"normal\",\n      \"tracegroupgap\": 10,\n      \"x\": -0.1,\n      \"xanchor\": \"right\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Enumeration Expression Decision in Mendix Microflow\nDESCRIPTION: Example of using an enumeration expression in a Decision element to assign different meeting URLs based on an employee's working location.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/decisions/decision.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n$MeetingRegistration/WorkingLocation\n```\n\n----------------------------------------\n\nTITLE: Configuring Microsoft Entra ID Web Manifest for Native Mobile App\nDESCRIPTION: JSON configuration for setting up redirect URIs in Microsoft Graph App Manifest for a native mobile application deployment\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mobile-sso.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"web\": {\n\"homePageUrl\": null,\n\"logoutUrl\": null,\n\"redirectUris\": [\n\"APP_NAME://oauth/callback\"\n]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing File Operations with Mendix Studio Pro Extension API\nDESCRIPTION: A complete React component that demonstrates saving, loading, and deleting local app files using the Mendix studioPro.app.files API. It includes three async functions for file operations and renders buttons that trigger these operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/local-app-files-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { studioPro } from \"@mendix/extensions-api\";\nimport { StrictMode, useCallback } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nconst saveFile = async () => {\n  await studioPro.app.files.putFile(\n    \"HelloWorld.txt\",\n    \"Hello world from a file!\"\n  );\n  studioPro.ui.messageBoxes.show(\"info\", \"Saving HelloWorld.txt\");\n};\n\nconst loadFile = async () => {\n  const message = await studioPro.app.files.getFile(\"HelloWorld.txt\");\n  studioPro.ui.messageBoxes.show(\n    \"info\",\n    `Loaded HelloWorld.txt it contained: ${message}`\n  );\n};\n\nconst deleteFile = async () => {\n  await studioPro.app.files.deleteFile(\"HelloWorld.txt\");\n  studioPro.ui.messageBoxes.show(\"info\", \"Deleted HelloWorld.txt\");\n};\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <StrictMode>\n    <h1>Mendix Studio Pro Extension</h1>\n    <p>Hello from an extension!</p>\n    <p>\n      <button onClick={saveFile}>Save Hello world File</button>\n      <button onClick={loadFile}>Load Hello world File</button>\n      <button onClick={deleteFile}>Delete Hello world File</button>\n    </p>\n  </StrictMode>\n);\n```\n\n----------------------------------------\n\nTITLE: State Interface Definition\nDESCRIPTION: Interface definition for the GroupBox component state\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_20\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxState {\n        collapsed: boolean;\n    }\n```\n\n----------------------------------------\n\nTITLE: Selecting Next Available Task in SQL\nDESCRIPTION: SQL query used by executors to claim the next available task from the queue while avoiding tasks locked by other executors\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/task-queue.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FOR UPDATE SKIP LOCKS\n```\n\n----------------------------------------\n\nTITLE: Defining Custom CSS Class (Simplified with btnBordered)\nDESCRIPTION: This code snippet shows a simplified custom CSS class named btnBordered in native/main.js, focusing solely on the container style with a transparent background. The icon and caption properties have been removed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport const btnBordered = {\n    container: {\n        backgroundColor: \"transparent\"\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: String Concatenation Expression with Multiple Fields\nDESCRIPTION: A single expression that concatenates first name, middle name, last name, and suffix fields with proper handling of empty/blank values and whitespace trimming.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/string-concatenation.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntrim(\n( if $ContactPerson/Firstname != empty and $ContactPerson/Firstname != ''\nthen $ContactPerson/Firstname + ' ' else '' ) +\n( if  $ContactPerson/Middlename != empty  and $ContactPerson/Middlename != ''\nthen  $ContactPerson/Middlename + ' ' else  '' ) +\n( if  $ContactPerson/Lastname != empty  and $ContactPerson/Lastname != ''\nthen  $ContactPerson/Lastname + ' ' else  '' ) +\n( if  $ContactPerson/Suffix !=  empty  \nthen  getCaption( $ContactPerson/Suffix )\nelse '')\n)\n```\n\n----------------------------------------\n\nTITLE: Resetting Filters in Data Grid Using JavaScript\nDESCRIPTION: This snippet demonstrates how to utilize the Reset_Filter and Reset_All_Filters actions within the Data Widgets module to reset filters on a data grid. It necessitates creating a nanoflow and specifying the name of the filter or data grid to be reset.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/data-widgets/data-grid-2.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"// Example of resetting filters in Data Grid\\nReset_Filter('YourFilterName');\\nReset_All_Filters('YourDataGridName');\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Area Chart Configuration in JSON\nDESCRIPTION: This snippet defines an area chart configuration in JSON format, including x and y coordinates along with fill mode for shading. The output will be an area chart visually representing the specified values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"mode\": \"scatter\",\n  \"fill\": \"tonexty\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Extracting Seconds in XPath with Timezone - Studio Pro\nDESCRIPTION: This snippet demonstrates the use of the optional timezone parameter in the `seconds-from-dateTime()` function within the Studio Pro environment, filtering logs for records in the New York timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: XPath\nCODE:\n```\n[seconds-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Response Example for Current Runtime Executions in Mendix\nDESCRIPTION: This JSON response shows detailed information about current executions in the Mendix Runtime, including duration, type, user, and the action stack with details about activities being performed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"202de1e51639ae0\":{\n      \"request_duration\":106175,\n      \"type\":\"CLIENT\",\n      \"user\":\"Anonymous_2ce7c971-f077-4aca-83c5-f3898443ed01\",\n      \"action_stack\":[\n      {\n        \"xpath\":\"//MyFirstModule.Entity\",\n        \"amount\":1,\n        \"depth\":0,\n        \"offset\":-1,\n        \"sort\":{},\n        \"type\":\"RetrieveXPathAction\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"Retrieve Entity from database\",\n          \"type\":\"RetrieveByXPath\"\n        },\n        \"name\":\"MyFirstModule.LoopNested\",\n        \"type\":\"Microflow\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"LoopNested\",\n          \"type\":\"SubMicroflow\"\n        },\n        \"name\":\"MyFirstModule.Loop\",\n        \"type\":\"Microflow\"\n      }\n    ]},\n    \"bcbb5508-0293-4f12-b290-ee109962811e\":{\n      \"request_duration\":104776,\n      \"type\":\"CLIENT_ASYNC_MONITORED\",\n      \"user\":\"Anonymous_2ce7c971-f077-4aca-83c5-f3898443ed01\",\n      \"action_stack\":[\n      {\n        \"current_activity\":{\n          \"caption\":\"Retrieve Entity from database\",\n          \"type\":\"RetrieveByXPath\"\n        },\n        \"name\":\"MyFirstModule.LoopNested\",\n        \"type\":\"Microflow\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"LoopNested\",\n          \"type\":\"SubMicroflow\"\n        },\n        \"name\":\"MyFirstModule.Loop\",\n        \"type\":\"Microflow\"\n      }\n    ]}\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing List Initialization with Microflow Execution\nDESCRIPTION: Java implementation for creating and initializing a list of objects using a specified microflow. The code shows object instantiation, attribute copying, and microflow execution for initialization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-connector-kit.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nfor (int i = 0; i < listSize; i++) {\n    IMendixObject newObj = Core.instantiate(context, resultEntity);\n    if (defaultObject != null) {\n        Core.copyAttributes(context, defaultObject, newObj);\n    }\n    Core.execute(context, initializationMicroflow, newObj);\n    result.add(newObj);\n}\n```\n\n----------------------------------------\n\nTITLE: Querying with Implicit Type Conversion (String to Number)\nDESCRIPTION: This snippet demonstrates implicit type conversion from String to Number in XPath. It retrieves all Sales.Order objects where TotalPrice is greater than or equal to '42'. The string '42' will be converted to the number 42 before the comparison. Example provided in both Studio Pro and JavaQuery.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_9\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [TotalPrice >= '42']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Order[TotalPrice >= '42']\n```\n\n----------------------------------------\n\nTITLE: Creating Employee Level Enumeration\nDESCRIPTION: Define an enumeration with career levels for employee classification\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/testing-microflows-using-the-unittesting-module.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Enumeration\nCODE:\n```\nEnumeration: Level\nValues:\n- Junior\n- Medior\n- Senior\n```\n\n----------------------------------------\n\nTITLE: Equal To Comparison of DateTimes in Mendix\nDESCRIPTION: This snippet demonstrates the equal to relational expression in Mendix, which compares two DateTime values and returns a Boolean value indicating whether the two DateTime values are equal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n```java\ndateTime(2007) = dateTime(2007)\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nTrue\n```\n```\n\n----------------------------------------\n\nTITLE: Defining a Message in JSON Schema\nDESCRIPTION: This JSON snippet defines a message schema for REST operations in Mendix. It allows customization of the definition name through the 'Public name' setting in a mapping. The definition is an object type with properties that correspond to attributes defined in the message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"#definition_name#\": { \\n  \\\"type\\\": \\\"object\\\",\\n  \\\"properties\\\": [\\n     #attribute_name#: #attribute_schema#\\n  ]\\n}\n```\n\n----------------------------------------\n\nTITLE: Executing a List Action on an Item Example\nDESCRIPTION: Demonstrates how to execute a list action on a specific item from a datasource by first obtaining an ActionValue instance for that item and then calling its execute method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst actionOnFirstItem = this.props.myListAction(this.props.myDataSource.item[0]);\n\nactionOnFirstItem.execute();\n```\n\n----------------------------------------\n\nTITLE: Exporting Styles from Group Box File\nDESCRIPTION: This code snippet exports all definitions from the `group-box.js` file. This is done to consolidate group box styles into a separate file and then re-export them from the `custom.js` file to ensure they are still available for use within the Mendix application. This approach helps keep the code organized and maintainable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\nexport * from \"./group-box\";\n```\n\n----------------------------------------\n\nTITLE: Paging in OData with Top and Skip\nDESCRIPTION: Shows how to implement paging using the $top and $skip query options. This example retrieves the second page of results, assuming 100 items per page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_5\n\nLANGUAGE: odata\nCODE:\n```\n?$top=100&$skip=100\n```\n\n----------------------------------------\n\nTITLE: Creating an Addition Microflow in Mendix Studio Pro with C#\nDESCRIPTION: Implements the CreateAdditionMicroflow method to generate a microflow that performs addition. It sets up parameters, return expressions, and creates a microflow call activity for decimal values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nvoid CreateAdditionMicroflow(IModel currentApp, IFolderBase folder, IMicroflow callingMicroflow, string outputVariableName)\n{\n    var addition1Param = \"addition1\";\n    var addition2Param = \"addition2\";\n\n    var returnExpression = microflowExpressionService.CreateFromString($\"${addition1Param} + ${addition2Param}\");\n    var returnValue = new MicroflowReturnValue(DataType.Decimal, returnExpression);\n\n    var additionMicroflow = microflowService.CreateMicroflow(currentApp, folder, \"AdditionMicroflow\",\n        returnValue,\n        (addition1Param, DataType.Decimal),\n        (addition2Param, DataType.Decimal));\n\n    CreateMicroflowCallActivity(currentApp, callingMicroflow, additionMicroflow,\n        outputVariableName,\n        (addition1Param, \"1.2\"),\n        (addition2Param, \"2.2\"));\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using quarter-from-dateTime with Specific Timezone\nDESCRIPTION: Example of an XPath query that retrieves all Logging.Log objects where the DateAttribute is in the fourth quarter (October-December) using the America/New_York timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-quarter-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[quarter-from-dateTime(DateAttribute, 'America/New_York') = 4]\n```\n\n----------------------------------------\n\nTITLE: Creating Login Entity in Mendix Domain Model\nDESCRIPTION: This snippet shows the structure of a non-persistable Login entity in the Mendix domain model. It includes attributes for Username, Password, and ValidationMessage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/authenticating-users.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<entity name=\"Login\">\n  <attribute name=\"Username\" type=\"String\" />\n  <attribute name=\"Password\" type=\"String\" />\n  <attribute name=\"ValidationMessage\" type=\"String\" />\n</entity>\n```\n\n----------------------------------------\n\nTITLE: Sending Email with Template using SendEmailWithTemplate Java Action\nDESCRIPTION: Java action to send emails using templates. Takes data object, email account, template and queuing parameters to configure and send the email.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nSendEmailWithTemplate(\n  DataObject dataObject,\n  EmailAccount emailAccount,\n  EmailTemplate template,\n  Boolean queued\n)\n```\n\n----------------------------------------\n\nTITLE: Enabling JMX in Mendix Runtime\nDESCRIPTION: This YAML snippet demonstrates how to enable JMX (Java Management Extensions) on a Mendix Runtime environment by adding specific Java options to the *m2ee.yaml* configuration file. These options configure the JMX remote access, port, authentication, SSL, and hostname for monitoring the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/monitoring-mendix-using-jmx.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n\"javaopts: [\\n\\n\\\"-Dfile.encoding=UTF-8\\\", \\\"-Xmx128M\\\", \\\"-Xms128M\\\",\\n\\n\\\"-Djava.io.tmpdir=/tmp\\\",\\n\\n\\\"-Dcom.sun.management.jmxremote\\\",\\n\\n\\\"-Dcom.sun.management.jmxremote.port=7845\\\",\\n\\n\\\"-Dcom.sun.management.jmxremote.local.only=false\\\",\\n\\n\\\"-Dcom.sun.management.jmxremote.authenticate=false\\\",\\n\\n\\\"-Dcom.sun.management.jmxremote.ssl=false\\\",\\n\\n\\\"-Djava.rmi.server.hostname=192.168.1.70\\\",\\n\\n]\"\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Minutes in Java\nDESCRIPTION: The trimToMinutes function trims the date to minutes by rounding off all (milli)seconds to zero. It returns the adjusted date rounded down to the nearest minute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntrimToMinutes($myDate)\n```\n\n----------------------------------------\n\nTITLE: Power Calculation with pow Function\nDESCRIPTION: Raises a number to a specified power, supporting integer and decimal inputs. Provides flexibility in numeric exponentiation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npow(2, 3)\n```\n\nLANGUAGE: java\nCODE:\n```\npow(2.5, 3)\n```\n\n----------------------------------------\n\nTITLE: Extending Default Widget Classes for Native Mobile Styling\nDESCRIPTION: This example shows how to extend the default class of a widget (ActionButton) by customizing its container and caption properties. This approach allows styling a specific widget type throughout the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ActionButton = {\n\tcontainer: {\n\t\t// ViewStyle properties\n\t\tborderWidth: 3\n\t},\n\tcaption: {\n\t\t// TextStyle properties\n\t\tfontSize: 20\n\t},\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing OPC-UA Connection\nDESCRIPTION: Microflow implementation to initialize and manage the connection to an OPC-UA server, including after-startup and before-shutdown actions. The purpose is to ensure proper connection handling for secure data exchange in a Mendix application. Prerequisites include a configured microflow in Studio Pro and OPC-UA server setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/opc-ua-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\"OPCUAConnector.ASU_OPCUA\" tries to reconnect to configured servers, re-monitor items, and pre-loads your app trusted certificates.\\n\"OPCUAConnector.BSD_OPCUA\" closes all open connections.\n```\n\n----------------------------------------\n\nTITLE: Creating a UNION SQL Query for Consolidated View Entity in Mendix\nDESCRIPTION: This SQL query combines data from ActiveProducts and DiscontinuedProducts tables into a single view entity called AllProductsVE. It uses UNION to merge both datasets and adds an 'Archived' boolean column to indicate the data source (FALSE for active products, TRUE for discontinued products).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-archived-data.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    ap.ProductId as ProductId,\n    ap.ProductName as ProductName,\n    ap.QuantityPerUnit as QuantityPerUnit,\n    ap.Category as Category,\n    ap.Price as Price,\n    cast(FALSE as BOOLEAN) as Archived\nFROM Shop.ActiveProducts ap\nUNION\nSELECT\n    dp.ProductId as ProductId,\n    dp.ProductName as ProductName,\n    dp.QuantityPerUnit as QuantityPerUnit,\n    dp.Category as Category,\n    dp.Price as Price,\n    cast(TRUE as BOOLEAN) as Archived\nFROM Shop.DiscontinuedProducts dp\n```\n\n----------------------------------------\n\nTITLE: Calculating Beginning of Year in Java\nDESCRIPTION: Explains the usage of the `beginOfYear` function which calculates the start of the year for a given Date and time input, returning January 1st at midnight for the year inferred from the input date. This function operates based on a supplied Date and time attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nbeginOfYear(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Granting User Privileges for Mendix in Oracle\nDESCRIPTION: SQL commands to grant necessary privileges to a Mendix user in Oracle. These privileges allow the user to create sessions, sequences, and tables, which are required for Mendix to function properly with the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/oracle.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nGRANT CREATE SESSION TO mendix;\nGRANT CREATE SEQUENCE TO mendix;\nGRANT CREATE TABLE TO mendix;\nGRANT UNLIMITED TABLESPACE TO mendix;\n```\n\n----------------------------------------\n\nTITLE: Enumeration Property Type Definition\nDESCRIPTION: Shows how to define an enumeration property type with multiple options and a default value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myEnumeration\" type=\"enumeration\" defaultValue=\"blue\">\n\t<caption>My enumeration</caption>\n\t<description>My enumeration setting</description>\n\t<enumerationValues>\n\t\t<enumerationValue key=\"red\">Red</enumerationValue>\n\t\t<enumerationValue key=\"green\">Green</enumerationValue>\n\t\t<enumerationValue key=\"blue\">Blue</enumerationValue>\n\t</enumerationValues>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Executing a GET Request to Check Email Request Status in Mendix - HTTP\nDESCRIPTION: This GET request checks the status of an existing CustomerEmailRequest to determine if the email has been sent. It demonstrates asynchronous processing by providing the client with the resource location to check status updates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_16\n\nLANGUAGE: HTTP\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/CustomerEmailRequests(12)\n```\n\n----------------------------------------\n\nTITLE: Creating SendProductToAllDevices Microflow in Mendix\nDESCRIPTION: A microflow configuration that prepares and sends product data as push notifications to multiple devices using Mendix's PushNotifications module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/push-notifications/notif-mult-devices.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Add Product data parameter\n2. Retrieve PushNotifications.Device entity list\n3. Configure PrepareMessageData:\n   - Title: myTitle\n   - Body: myBody\n   - TimeToLive: 0\n   - Badge: 0\n   - ActionName: sendProduct\n   - ContextObjectGuid: empty\n4. Configure SendMessageToDevices:\n   - Message data param: $MessageToBeSent\n   - Device param: $Devices\n   - Context object: $Product\n```\n\n----------------------------------------\n\nTITLE: Git Proxy Configuration\nDESCRIPTION: Commands to configure proxy settings in Git for remote repository access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/troubleshoot-git-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit config --local http.proxy [protocol://][user[:password]@]proxyhost[:port]\\ngit config --local http.proxy\n```\n\n----------------------------------------\n\nTITLE: Configuring Mendix Native App after NPM install\nDESCRIPTION: This command applies the configuration from the Mendix Native Mobile Builder to the native app. It is run after installing NPM dependencies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"npm run configure\"\n```\n\n----------------------------------------\n\nTITLE: Finding Entity by Qualified Name\nDESCRIPTION: Locates an entity using its fully-qualified name and retrieves its first attribute name\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/manipulating-existing-models/finding-things-in-the-model.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst customerEntity = model.findEntityByQualifiedName(\"Customers.Customer\");\nif (customerEntity) {\n    const attributeName = customerEntity.attributes[0].name;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating ONNX Spam Filter with Embedded Pre-processing in Python\nDESCRIPTION: Demonstrates creating an ONNX model for spam filtering that includes a count vectorizer as an embedded pre-processor. Uses scikit-learn for model training and skl2onnx for conversion to ONNX format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom skl2onnx import to_onnx\nfrom skl2onnx.common.data_types import StringTensorType\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import make_pipeline\n\nimport pandas as pd\n\ndf = pd.read_csv(\"spam.csv\", encoding=\"L1\")\n\nX = df[\"v2\"].values\ny = df[\"v1\"].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=345)\n\n# create a pipeline object\npipe = make_pipeline(\n   CountVectorizer(binary=True),\n   MultinomialNB()\n)\n\n# fit the whole pipeline\npipe.fit(X_train, y_train)\n\n# we can now use it like any other estimator\nprint(accuracy_score(pipe.predict(X_test), y_test))\n\nonxx_pipeline = to_onnx(pipe, initial_types=[('message', StringTensorType([None, 1]))])\n\nwith open(\"spam_nb.onnx\", \"wb\") as f:\n   f.write(onxx_pipeline.SerializeToString())\n```\n\n----------------------------------------\n\nTITLE: Using NotEqual Helper for Filtering in TypeScript\nDESCRIPTION: Shows how to use the notEqual helper to create a filter condition that keeps items where a value is not equal to a specific literal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrA = attribute(this.props.myAttributeA.id);\nconst name = literal(\"Bob\");\n\n// filter keeps items where value not equal to \"Bob\"\nconst filterCondition = notEqual(attrA, name);\n```\n\n----------------------------------------\n\nTITLE: Implementing Boolean Attribute Filtering in Mendix\nDESCRIPTION: Code that shows how to filter on a boolean attribute using the equals filter builder. It checks if the attribute is filterable before applying the filter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { attribute, literal, equals } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAttributeBoolean.filterable) {\n    const filterCond = equals(attribute(this.props.myAttributeBoolean.id), literal(true));\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Attribute is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Data Type Conversion Rules - CSV Input\nDESCRIPTION: Matrix showing supported data type conversions from CSV source to various target types including String, Int, Long, Decimal, Boolean and DateTime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/data-importer-extension.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Source Type | Target- String | Target- Int | Target- Long | Target- Decimal | Target- Boolean | Target- DateTime |\n| :-------- | :------- | :-------- | :------- | :-------- | :------- | :-------- |\n| String  | Yes    | Partial    | Partial    | Partial    | Partial    | No    |\n```\n\n----------------------------------------\n\nTITLE: Checking Association Type in TypeScript\nDESCRIPTION: Shows how to determine the type of association (Reference or ReferenceSet) by checking the type field on an association property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nif (this.props.myAssociationOnDatasource.type === \"Reference\") {\n  console.log(\"Reference association\");\n} else {\n  // TypeScript will narrow it down to \"ReferenceSet\" when the type is not equal to \"Reference\"\n  console.log(\"ReferenceSet association\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading IPA to App Store Connect using xcrun\nDESCRIPTION: This snippet shows how to upload a signed IPA file to the Apple App Store using the `xcrun altool` command-line tool, which is included with Xcode. It requires Xcode to be installed and the command line tools to be set up. Replace the placeholder values with the actual path to the IPA file, your App Store email, and password.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/deploying-native-app.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"xcrun altool --upload-app --type ios --file \\\"path/to/application.ipa\\\"\\n--username \\\"YOUR_APPSTORE_USER_EMAIL\\\" --password \\\"YOUR_APPSTORE_PASSWORD\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Ceiling Function with Division in Mendix\nDESCRIPTION: Shows how using the ceiling function with division results can help mitigate floating-point approximation issues in some cases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nceil((3 : 7) * 7)\n```\n\nLANGUAGE: java\nCODE:\n```\n4\n```\n\n----------------------------------------\n\nTITLE: Defining HttpRequest Attributes in Mendix\nDESCRIPTION: This snippet shows the attributes of the HttpRequest entity, including inherited attributes. It specifies the attribute names, types, default values, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/http-request-and-response-entities.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|  Attribute  |  Type  |  Default Value | Description  |\n|  ---  |  ---  |  ---  |  ---  |\n|  `HttpVersion` (Inherited from `HttpMessage`) |  String  | HTTP/1.1 | The protocol version. You can almost always ignore this value. |\n|  `Uri`  | String  | empty | The full URI for the incoming request, including query parameters. |\n|  `Content` (inherited from `HttpMessage`) |  String  | empty | The body of the request. |\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Components with kubectl in Bash\nDESCRIPTION: These kubectl commands create the PostgreSQL deployment and service using the YAML definitions. They instruct Kubernetes to apply the configurations defined in the provided YAML files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"kubectl create -f postgres-deployment.yaml\nkubectl create -f postgres-service.yaml\"\n```\n\n----------------------------------------\n\nTITLE: Creating XPath Constraint for User-Specific Order Access in Mendix\nDESCRIPTION: This XPath constraint is used in an Order entity access rule to ensure that a customer can only view their own orders. It uses the CurrentUser variable to match the associated Customer with the logged-in user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_3\n\nLANGUAGE: xpath\nCODE:\n```\n[Module.Order_Customer = '[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Updating renderHeader Method (TSX)\nDESCRIPTION: This TypeScript snippet updates the `renderHeader` method in the display component (`GroupBox.tsx`) to include the `renderIcon` method. This integrates the dynamic icon rendering into the group box header.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\nprivate renderHeader = (): ReactNode => {\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n            {this.renderIcon()}\n        </View>\n    );\n\n    const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n\n    return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n};\n\n```\n\n----------------------------------------\n\nTITLE: Counting All Sales Orders in XPath\nDESCRIPTION: This XPath query uses the `count()` function to determine the total number of Sales.Order objects. It retrieves all objects of the Sales.Order entity and returns the count of these objects as an integer.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-count.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"count(//Sales.Order)\"\n```\n\n----------------------------------------\n\nTITLE: Adding Visibility Property to Mendix Pluggable Widget\nDESCRIPTION: This XML snippet shows how to add the Visibility system property to a Mendix pluggable widget. The Visibility property enables conditional hiding of the widget and controls the position of visibility inputs in the widget configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_27\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Visibility\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Microflow Decision Method in Mendix Workflow\nDESCRIPTION: Example of a custom microflow used as a decision method in a multi-user task. This microflow returns the first outcome selected by a participant.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task/microflow-decision.png\" alt=\"Custom Microflow Decision Method\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Styling Native Mobile Checkbox Widget in JavaScript\nDESCRIPTION: Defines styling configuration for checkbox widget in both switch and checkbox render modes. Includes styles for container, label, validation, input track/thumb colors, and checkbox-specific properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Checkbox = {\n  container: {\n    // All ViewStyle properties\n  },\n  containerDisabled: {\n    // All ViewStyle properties. Same properties as `container`. Overrides `container` styles if the text box is non-editable.\n  },\n  label: {\n    // This has all TextStyle properties.\n    numberOfLines: 1 // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis.\n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the checkbox is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n\n  // The following properties are only used for the render mode: Switch\n  input: {\n    // All ViewStyle properties.\n    trackColorOn: null, // Custom color for the switch track when turned on.\n    trackColorOff: null, // Custom color for the switch track when turned off.\n    thumbColorOn: null, // Color of the foreground switch grip when turned on. If this is set on iOS, the switch grip will lose its drop shadow.\n    thumbColorOff: null, // Color of the foreground switch grip when turned off. If this is set on iOS, the switch grip will lose its drop shadow.\n  },\n  inputError: {\n    // This has the same properties as `input`. Overrides `input` styles if there are validation errors.\n  },\n  inputDisabled: {\n    // This has the same properties as `input`. Overrides `input` styles if the checkbox is non-editable.\n  },\n  \n  // The following properties are only used for the render mode: Checkbox\n  checkboxInput: {\n    // This has all ViewStyle properties.\n    // Render mode: Checkbox.\n    color: null, // Custom color for the tick icon.\n    size: null, // Custom size for the tick icon.\n  },\n  checkboxInputDisabled: {\n    // This has the same properties as `checkboxInput`. Overrides `checkboxInput` styles if the checkbox is non-editable.\n  },\n  checkboxInputError: {\n    // This has the same properties as `checkboxInput`. Overrides `input` styles if there are validation errors.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Resources in Kubernetes YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure resource requests and limits for a Kubernetes container, setting boundaries for CPU, memory, and ephemeral storage usage. Dependencies include a Kubernetes setup with appropriate permissions to apply changes. Key values such as 'cpu', 'memory', and 'ephemeral-storage' define the minimum guaranteed ('requests') and maximum allowed ('limits') resources. Proper resource allocation is crucial for performance and stability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nresources:\n  limits:\n    cpu: 1\n    memory: 512Mi\n    ephemeral-storage: 256Mi\n  requests:\n    cpu: 100m\n    memory: 512Mi\n    ephemeral-storage: 256Mi\n```\n\n----------------------------------------\n\nTITLE: Concatenating Strings using + Operator in Java\nDESCRIPTION: The + operator can be used to concatenate two strings or a string and a number. At least one of the parameters must be of type string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_14\n\nLANGUAGE: java\nCODE:\n```\n'foo' + 'bar'\n```\n\nLANGUAGE: java\nCODE:\n```\n'foobar'\n```\n\nLANGUAGE: java\nCODE:\n```\n4.73 + ' kilometers'\n```\n\nLANGUAGE: java\nCODE:\n```\n'4.73 kilometers'\n```\n\n----------------------------------------\n\nTITLE: Implementing renderIcon Method in Container Component\nDESCRIPTION: TypeScript React method that handles icon rendering in the container component. It processes DynamicValue<NativeIcon> props, falling back to default glyphs when needed, and returns a Mendix Icon component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_37\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderIcon = (toBeRenderedIcon: DynamicValue<NativeIcon> | undefined, glyph: string) => {\n    const nativeIcon: NativeIcon =\n        toBeRenderedIcon && toBeRenderedIcon.status === ValueStatus.Available\n            ? toBeRenderedIcon.value\n            : { type: \"glyph\", iconClass: glyph };\n\n    return <Icon icon={nativeIcon} />;\n};\n```\n\n----------------------------------------\n\nTITLE: Defining a String Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define a string property within a Mendix widget. The string property lets you pass a simple string to the widget. The example shows the basic attributes: key, type, caption, category, and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"message\" type=\"string\">\n  <caption>Message</caption>\n  <category>Data source</category>\n  <description>A hardcoded message</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data by XPath with JSON in Mendix\nDESCRIPTION: This JSON payload triggers a data retrieval using an XPath query. It specifies the \"retrieve_by_xpath\" action, the XPath expression to use (//MyFirstModule.Employee), and schema information for pagination and sorting.  It also includes context and profile data, and specifies release IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"retrieve_by_xpath\",\n   \"params\":{\n      \"xpath\":\"//MyFirstModule.Employee\",\n      \"schema\":{\n         \"id\":\"a2916c7c-af2f-4267-a8e9-99604f045861\",\n         \"offset\":0,\n         \"sort\":[[\"Firstname\",\"asc\"]],\n         \"amount\":20\n      },\n      \"count\":true,\n      \"aggregates\":false\n   },\n   \"context\":[],\n   \"releaseids\":[\"281474976710757\"],\n   \"profiledata\":{\n      \"204eeb2972550c0\":28\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostgreSQL Service in YAML\nDESCRIPTION: This YAML file defines a Kubernetes Service to expose the PostgreSQL database. It specifies the service type as ClusterIP, the port to expose (5432), and a selector to target the PostgreSQL pods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n\"apiVersion: v1\nkind: Service\nmetadata:\n  name: postgres-service\nspec:\n  type: ClusterIP\n  ports:\n    - port: 5432\n  selector:\n    app: postgres\"\n```\n\n----------------------------------------\n\nTITLE: Using Attribute Helper for Filtering in TypeScript\nDESCRIPTION: Demonstrates how to use the attribute helper to create a filter condition based on an attribute value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrA = attribute(this.props.myAttributeA.id);\nconst filterCondition = equals(attrA, literal(\"Bob\"));\n```\n\n----------------------------------------\n\nTITLE: Updating Database with SQL in Mendix\nDESCRIPTION: This SQL query updates the \"dateofbirth\" column in the \"myfirstmodule$employee\" table for the row where the ID matches the specified value. The values are passed as parameters to the database.  This query is used to persist changes to the database after a successful commit operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\n UPDATE \"myfirstmodule$employee\"\n SET \"dateofbirth\" = ?\n WHERE \"id\" = ?\n```\n\n----------------------------------------\n\nTITLE: Calculating Hours Between Dates in Java\nDESCRIPTION: The `hoursBetween` function determines the absolute difference between two date values in hours. This function accepts two Date and Time parameters and provides a decimal output representing the time difference in hours.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nhoursBetween(dateTime(2007, 1, 1, 3, 31, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Implementing a Drop Zone in Structure Preview using TypeScript\nDESCRIPTION: This snippet demonstrates how to add a drop zone to the widget preview. It uses the 'DropZone' type and shows how to configure it with a widgets property and placeholder text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nexports.getPreview = (values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => ({\n    type: \"Container\",\n    borders: true,\n    children: [\n        {\n            type: \"Text\",\n            content: \"This widget acts as a container for other widgets\"\n        },\n        {\n            type: \"DropZone\",\n            property: values.myWidgetsProp,\n            placeholder: \"Drop your widgets here!\"\n        }\n    ]\n})\n```\n\n----------------------------------------\n\nTITLE: Creating a Quarterly Sales Pivot Table with SQL in Mendix\nDESCRIPTION: SQL query that transforms the OrderVE data into a pivot table format. It groups data by year and uses CASE statements to create columns for quarterly sales totals.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/create-pivot-table.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT\n    o.OrderYear as OrderYear,\n    SUM(CASE WHEN o.OrderQuarter = 1 THEN o.TotalOrderValue ELSE 0 END) as TotalSales_Q1,\n    SUM(CASE WHEN o.OrderQuarter = 2 THEN o.TotalOrderValue ELSE 0 END) as TotalSales_Q2,\n    SUM(CASE WHEN o.OrderQuarter = 3 THEN o.TotalOrderValue ELSE 0 END) as TotalSales_Q3,\n    SUM(CASE WHEN o.OrderQuarter = 4 THEN o.TotalOrderValue ELSE 0 END) as TotalSales_Q4\nFROM Shop.OrderVE o\nGROUP BY o.OrderYear\n```\n\n----------------------------------------\n\nTITLE: Evaluating and Setting User Type Microflow\nDESCRIPTION: Microflow that determines and sets whether a user is internal or external based on email domain logic. Handles both Administration.Account and MendixSSO.MendixSSOUser types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/populate-user-type.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nUser_EvaluateAndSetUserType\n```\n\n----------------------------------------\n\nTITLE: Querying with month-from-dateTime in Java\nDESCRIPTION: This Java query retrieves all Logging.Log entries where the month extracted from the `DateAttribute` equals 12 (December) using the local time zone.  It demonstrates the basic usage of the `month-from-dateTime` function in a Java XPath query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n //Logging.Log[month-from-dateTime(DateAttribute) = 12]\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request for Getting Security Group by Name\nDESCRIPTION: HTTP request example demonstrating how to retrieve a security group using its name. The example uses the group name 'RnD' and includes required authentication headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_11\n\nLANGUAGE: http\nCODE:\n```\nGET /legacy-api/1/groups/RnD HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Parsing URL To Mendix Object Nanoflow Action\nDESCRIPTION: This action takes a URL string and parses it into various components, creating a new Mendix object that contains attributes such as protocol, host, pathname, etc. This is necessary for processing data received from deep links.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n// Parse URL To Object Nanoflow Action\n// This action splits the URL and sets object attributes accordingly.\n\nParseUrlToObject(\n    url: string\n) {\n    // Code to parse the URL and create a new Mendix object\n}\n```\n\n----------------------------------------\n\nTITLE: Using Contains String Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the contains helper to filter items where an attribute value contains a specified substring. Works with String, Integer, Long, and Decimal attributes and String literals for both text and numeric comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_36\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrStr = attribute(this.props.myAttributeA.id); // string attribute\nconst subStr = literal(\"secret\");\n\n// filter keeps items where value has a substring \"secret\"\n// like \"my secret password\", \"secret file\", \"top secret\"\nconst filterCondition1 = contains(attrStr, subStr);\n\n// also works with numeric attributes\nconst attrNum = attribute(this.props.myAttributeB.id); // integer attribute\nconst subNum = literal(\"1337\");\n\n// filter keeps items where value has sequence of numbers \"1337\"\n// like \"133700\", \"1231337\", \"913379\"\nconst filterCondition2 = contains(attrNum, substrNum);\n```\n\n----------------------------------------\n\nTITLE: @BeforeTest Method to Initialize WebDriver with Firefox\nDESCRIPTION: Initializes FirefoxDriver before test execution. Depends on Selenium and Firefox WebDriver. Executes setup actions for WebDriver. No input/output; ensures the browser is ready for tests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@BeforeTest\npublic void beforeTest() {\n    driver = new FirefoxDriver();\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Boolean to String in Java\nDESCRIPTION: This code snippet illustrates the use of toString function to convert a Boolean value to a string in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ntoString(true)\n```\n\n----------------------------------------\n\nTITLE: Setting XPath Constraint for Order Entity\nDESCRIPTION: XPath constraint that filters Orders to only show those with an OrderStatus of 'Open' for users with the User role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/create-a-secure-app.md#2025-04-21_snippet_3\n\nLANGUAGE: xpath\nCODE:\n```\n[OrderStatus = 'Open']\n```\n\n----------------------------------------\n\nTITLE: Listing Connected Android Devices\nDESCRIPTION: This command is used to verify that the Android device is connected and recognized by the Android Debug Bridge (adb). It lists all connected Android devices that are authorized for debugging. This is a prerequisite for other adb commands, such as port forwarding and logcat.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\n\"adb devices\"\n```\n\n----------------------------------------\n\nTITLE: Layout Widgets in Document Templates\nDESCRIPTION: Layout widgets provide structural organization in document templates, allowing developers to create complex document layouts with tables, page breaks, and line breaks\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Table\n\nTables can be used to change the layout of the page. They contain a number of rows and columns and the intersection of the two is called a cell.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Page Break\n\nWhen inserting a page break, the current page will be cut off after the break and widgets below the break will be displayed in a new page.\n```\n\n----------------------------------------\n\nTITLE: Configuring Popup Menu Styling Structure in XML\nDESCRIPTION: XML structure for styling the Popup Menu widget. The structure includes container, buttonContainer, custom and basic style objects that control the appearance of the menu components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_34\n\nLANGUAGE: xml\nCODE:\n```\n<container/>\n<buttonContainer/>\n<custom>\n\t<containerStyle/>\n\t<itemStyle>\n\t\t</rippleColor>\n\t</itemStyle>\n</custom>\n<basic>\n    <containerStyle/>\n    <dividerColor/>\n    <itemStyle>\n        <ellipsizeMode/>\n\t</rippleColor>\n        <defaultStyle/>\n        <primaryStyle/>\n        <dangerStyle/>\n        <customStyle/>\n    </itemStyle>\n<basic/>\n```\n\n----------------------------------------\n\nTITLE: Using LessThanOrEqual Filter Helper in TypeScript\nDESCRIPTION: Shows how to use the lessThanOrEqual helper for filtering items where a value is less than or equal to a specified number. Compatible with numeric and datetime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_32\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is less than or equals 42\nconst filterCondition = lessThanOrEqual(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Bucket Access Policy in JSON\nDESCRIPTION: Defines an environment template policy for granting access to an S3 bucket. Users need an existing S3 bucket and appropriate IAM permissions. Replace `<bucket_name>` with your S3 bucket name. The policy restricts access to paths matching the IAM username and allows listing and object actions within user-specific directories.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowListingOfUserFolder\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>\"\n            ],\n            \"Condition\": {\n                \"StringLike\": {\n                    \"s3:prefix\": [\n                        \"${aws:username}/*\",\n                        \"${aws:username}\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"AllowAllS3ActionsInUserFolder\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>/${aws:username}/*\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: ModifiableValue Interface Definition in TypeScript for Mendix Associations\nDESCRIPTION: Defines the ModifiableValue interface used to represent association values that can be changed by a pluggable widget client component. It provides methods to read, modify, and validate reference or reference set values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ModifiableValue<T> {\n\treadonly status: ValueStatus;\n\treadonly readOnly: boolean;\n    \n\treadonly value: Option<T>;\n\treadonly setValue: (value: Option<T>) => void;\n\treadonly validation: Option<string>;\n\treadonly setValidator: (validator?: (value: Option<T>) => Option<string>) => void;\n}\n```\n\n----------------------------------------\n\nTITLE: Expanding Associated Objects in GET Request\nDESCRIPTION: Demonstrates how to include associated objects in the response using the $expand expression in a GET request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_11\n\nLANGUAGE: HTTP\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers(1)?$expand=Addresses,Notes\n```\n\n----------------------------------------\n\nTITLE: Calculating Seconds Between Dates in Java\nDESCRIPTION: The secondsBetween function calculates the difference between two dates in seconds. It takes two DateTime parameters and returns a Decimal value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nsecondsBetween(dateTime(2007, 1, 1, 1, 1, 1), dateTime(2007,1,1,1,2,3))\n```\n\n----------------------------------------\n\nTITLE: Calling Microflow with Complex Entity Parameter in OData POST Request (JSON)\nDESCRIPTION: Example of calling a microflow with a complex entity parameter using a POST request in OData. It shows how to pass nested objects and associations within the request body.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Customer\": {\n    \"Name\": \"Lato Bike Services\",\n    \"Addresses\": [\n      {\n        \"Type\": \"SHIPPING\",\n        \"AddressLine 1\": \"123 Regent Street\",\n        \"City\": \"London\",\n        \"PostalCode\": \"W1B 5TG\",\n        \"Country\": \"UK\"\n      },\n      {\n        \"Type\": \"BILLING\",\n        \"AddressLine 1\": \"456 Oxford Street\",\n        \"City\": \"London\",\n        \"PostalCode\": \"W1D 1BP\",\n        \"Country\": \"UK\"\n      }\n    ],\n    \"PrimaryContact\": {\n      \"FullName\": \"John Doe\",\n      \"Email\": \"john.doe@latobikes.com\",\n      \"Phone\": \"+442092572091\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Batch Retrieve\nDESCRIPTION: This snippet illustrates the concept of batch data retrieval in Mendix, which can enhance the performance of data handling within applications. The example can also apply similarly to commit operations, helping to handle large volumes of data efficiently.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580216.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Group by Clause Example - Summing Order Prices\nDESCRIPTION: This SQL query showcases the GROUP BY clause by summing the total prices of all orders per city. It retrieves data from Sales.Order and joins with related customer and address tables to group results by city.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT SUM(Sales.\"Order\"/TotalPrice)\nFROM Sales.\"Order\"\nINNER JOIN Sales.\"Order\"/Sales.Customer_Order/Sales.Customer/Sales.Customer_Address/Sales.Address\nGROUP BY Sales.Address/City\n```\n\n----------------------------------------\n\nTITLE: Creating a Manifest File for Mendix Extensions in JSON\nDESCRIPTION: This JSON snippet defines the manifest.json file required for Mendix extensions. The file specifies entry points for the extension through the mx_extensions array, which lists the DLL files that will be loaded by Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/get-started.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"mx_extensions\": [ \"MyExtension.dll\" ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JSON Format Log Subscriber\nDESCRIPTION: Request format for creating a new JSON log subscriber with custom tags. Demonstrates how to set log level, subscriber name, and add custom tags like environment and service name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"create_log_subscriber\",\n  \"params\": {\n    \"type\": \"console_json\",\n    \"name\": \"JsonLogSubscriber\",\n    \"autosubscribe\": \"INFO\",\n    \"tags\": {\n      \"ddtags\": \"env:test\",\n      \"service\": \"my-application-name\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Info.plist for Deep Linking (XML - iOS)\nDESCRIPTION: Instructions to modify the Info.plist file to register the schema and host for deep linking in iOS applications, including the necessary URL type configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-deep-link.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<key>CFBundleURLTypes</key>\n<array>\n    <dict>\n        <key>CFBundleURLSchemes</key>\n        <array>\n            <string>app</string>\n        </array>\n        <key>CFBundleURLName</key>\n        <string>myapp</string>\n    </dict>\n</array>\n```\n\n----------------------------------------\n\nTITLE: Mendix Error Handling Trace Log Example\nDESCRIPTION: Example log message shown when file content cannot be downloaded during synchronization in Mendix Studio Pro 9.17+\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/synchronization.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n\"Could not download the file content for the object with guid {OBJECT-GUID} due to an error. This may be due to broken file content on the server. Synchronization will continue and ignore this object.\"\n```\n\n----------------------------------------\n\nTITLE: Task Scheduling via Core API - Java\nDESCRIPTION: This snippet demonstrates how to schedule a microflow and Java action for background execution at a specific date and time using the `Core.microflowCall` and `Core.userActionCall` methods in Java.  It includes examples for both microflows and Java actions, scheduling them to run one day in the future, and uses parameters to pass data to the task. Both tasks get added to AModule.SomeQueueName\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n```java\nCalendar calendar = Calendar.getInstance();\ncalendar.add(Calendar.DATE, 1); // add 1 day to the current date\nDate date = calendar.getTime();\nCore.microflowCall(\"AModule.SomeMicroflow\")\n  .withParam(\"Param1\", \"Value1\")\n  .withParam(\"Param2\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\", date);\nCore.userActionCall(\"AModule.SomeJavaAction\")\n  .withParams(context, \"Value1\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\", date);\n// the tasks will be executed 1 day from this point in time\n```\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Block for Atlas UI Deprecation\nDESCRIPTION: Markdown code block showing an alert message about Atlas UI Resources module and Atlas 2 deprecation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/atlas-ui/create-company-atlas-ui-resources.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\\nThe Atlas UI Resources module is deprecated, as is Atlas 2. If you are still using Atlas 2, Mendix recommends that you [migrate from Atlas 2 To Atlas 3](/refguide9/moving-from-atlas-2-to-3/).\\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Login Action Subclass in Java\nDESCRIPTION: This snippet demonstrates how to create a subclass of UserAction<ISession> that will serve as a custom login action handler. It receives context and parameters and allows for implementing custom login steps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/login-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class CustomLoginAction extends UserAction<ISession> {\n  private final Map<String, ?> params;\n\n  public CustomLoginAction(IContext context, java.util.Map<String, ? extends Object> params) {\n    super(context);\n    this.params = params;\n  }\n\n  @Override\n  public ISession executeAction() throws Exception {\n    // perform custom login steps using info received in param\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders by Status with XPath in Mendix\nDESCRIPTION: This snippet demonstrates how to filter a data grid to only display orders with a specific status ('Open') using an XPath constraint. This is achieved by setting the data source type to XPath and entering the XPath expression in the XPath Constraint field. The XPath expression filters the Order entities based on the OrderStatus attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n\"[OrderStatus = ‘Open’]\"\n```\n\n----------------------------------------\n\nTITLE: Enabling AppCenter OTA in Native Mobile Config\nDESCRIPTION: JSON configuration for enabling Over-the-Air (OTA) updates in the Mendix Native Mobile Builder configuration file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/how-to-ota.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"appCenterOTA\": {\n        \"enabled\": true\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Greater Than or Equal To Comparison in Java\nDESCRIPTION: Demonstrates a greater than or equal to comparison in Java that returns a Boolean true when checking if 4 is greater than or equal to 3.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n4>=3\n```\n\n----------------------------------------\n\nTITLE: Executing Microflow to Create Object List in Java\nDESCRIPTION: This Java method initializes a list of objects of a specified entity, instantiates them, and calls a microflow for initialization. The method contains parameters for the entity, default object, initialization microflow, and list size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-connector-kit.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"  @Override\\n  public List<IMendixObject> executeAction() throws Exception {\\n    // BEGIN USER CODE\\n    var logger = Core.getLogger(\\\"MyLogNode\\\");\\n    logger.info(String.format(\\\"creating list of %d %s objects, initialized by %s\\\",\\n        this.ListSize, this.ResultEntity, this.InitializationMicroflow));\\n\\n    // Create a list to return with all the instantiated objects\\n    var resultList = new ArrayList<IMendixObject>();\\n\\n    for (int i = 0; i < this.ListSize; i++) {\\n      // create new object of type resultentity\\n      var newObject = Core.instantiate(getContext(), this.ResultEntity);\\n\\n      if (this.DefaultObject != null) {\\n        // copy values from default object\\n        for (var entry : DefaultObject.getMembers(getContext()).entrySet()) {\\n          var member = entry.getValue();\\n\\n          if (member.isVirtual() ||\\n              member instanceof MendixObjectReference ||\\n              member instanceof MendixObjectReferenceSet ||\\n              member instanceof MendixAutoNumber) {\\n            continue;\\n          }\\n\\n          newObject.setValue(this.getContext(), entry.getKey(), member.getValue(this.getContext()));\\n        }\\n      }\\n\\n      // run the specified initialization microflow\\n      Core.microflowCall(this.InitializationMicroflow)\\n          .withParam(\\\"objectToInit\\\", newObject)\\n          .inTransaction(true)\\n          .execute(getContext());\\n\\n      // add new object to list\\n      resultList.add(newObject);\\n    }\\n\\n    return resultList;\\n    // END USER CODE\\n  }\"\n```\n\n----------------------------------------\n\nTITLE: SQL Task Selection Query\nDESCRIPTION: SQL query used by task executors to claim the next available task from the queue using row-level locking while skipping already locked tasks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FOR UPDATE SKIP LOCKS\n```\n\n----------------------------------------\n\nTITLE: Styling Bottom Sheet Widget Structure in XML\nDESCRIPTION: XML structure for styling bottom sheet widget with modal and expanding variations, including container and style elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_33\n\nLANGUAGE: xml\nCODE:\n```\n<container />\n<containerWhenExpandedFullscreen />\n<modal />\n<modalItems>\n\t<defaultStyle />\n\t<primaryStyle />\n\t<dangerStyle />\n\t<customStyle />\n</modalItems>\n```\n\n----------------------------------------\n\nTITLE: Syntax Definition for seconds-from-dateTime XPath Function\nDESCRIPTION: Defines the basic syntax for the seconds-from-dateTime function in XPath, showing the required attribute parameter and optional timezone parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nseconds-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Setting Common Properties in Mendix Microflows\nDESCRIPTION: This code snippet demonstrates the structure of common properties for microflow elements in Mendix. It includes properties like caption, auto-generate caption, background color, error handling type, and disabled status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/microflow-element-common-properties.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* [Caption](#caption)\n* [Auto-generate caption](#auto-generate-caption)\n* [Background color](#color)\n* [Error handling type](#error-handling)\n* [Disabled](#disabled)\n```\n\n----------------------------------------\n\nTITLE: SQL Rounded Decimal Comparison Query\nDESCRIPTION: Query showing decimal comparison with ROUND function to compare values to 2 decimal places.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_35\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Price FROM Sales.Order WHERE ROUND(Price, 2) = ROUND(1.50000001, 2)\n```\n\n----------------------------------------\n\nTITLE: Using COALESCE in OQL\nDESCRIPTION: This snippet demonstrates the syntax for using the COALESCE function in OQL to handle NULL values in expressions. No additional dependencies are required other than a basic understanding of OQL syntax. The key parameter is the 'expression,' which will be evaluated to return the first non-null result. The function expects a series of expressions as arguments and outputs the first non-null value. It is restricted to the provided expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-coalesce.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCOALESCE ( expression [ ,...n ] )\n```\n\n----------------------------------------\n\nTITLE: Styling Toggle Buttons Widget in JavaScript\nDESCRIPTION: Defines the style properties for the Toggle Buttons widget, allowing customization of the container, disabled container, button, text, active button, active button text, and validation message. These properties use ViewStyle and TextStyle properties. The default class to style all toggle buttons is named `com_mendix_widget_native_togglebuttons_ToggleButtons`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_togglebuttons_ToggleButtons = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  containerDisabled: {\n    // This has all ViewStyle properties.\n  },\n  button: {\n    // This has all ViewStyle properties.\n  },\n  text: {\n    // This has all TextStyle properties.\n  },\n  activeButton: {\n    // This has all ViewStyle properties.\n  },\n  activeButtonText: {\n    // This has all TextStyle properties.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: SQL Query for Passing List of Values to a Parameter\nDESCRIPTION: This SQL query demonstrates how to pass a list of values to a parameter in the External Database Connector. It uses a Common Table Expression (CTE) with JSON_TABLE to parse a JSON array parameter into individual values for use in an IN clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-connector-mx10.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nWITH empids AS (\n   SELECT empid\n   FROM json_table({EmpIdList}, '$[*]' columns (empid number PATH '$'))\n)\nSELECT *\nFROM emp\nWHERE empno IN\n    (SELECT empid\n     FROM empids);\n```\n\n----------------------------------------\n\nTITLE: Bracket Expression for Character Matching\nDESCRIPTION: This example demonstrates that a bracket expression can match any single character within the specified brackets. It includes both specified characters and ranges. There are no dependencies, and it is used to simplify the construction of a matching condition. Example inputs would be individual characters; outputs indicate a match if one of the bracketed characters is present.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/regular-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: Regex\nCODE:\n```\n[abc]\n```\n\n----------------------------------------\n\nTITLE: Implementing Styles Property in Container Component\nDESCRIPTION: Class property that merges default styles with user-provided styles using the flattenStyles utility function. This ensures consistent styling while allowing customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_41\n\nLANGUAGE: tsx\nCODE:\n```\nprivate readonly styles = flattenStyles(defaultStyle, this.props.style);\n```\n\n----------------------------------------\n\nTITLE: Sample Client Certificate Usage Configuration - Text\nDESCRIPTION: This sample configuration demonstrates defining service-specific client certificate usage for a Mendix application. It shows how to assign certificates to specific services or leave them empty if not required. The key parameter is the assignment of certificates to services or endpoints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/use-a-client-certificate.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{ \"Module.WebService1\": \"D:\\\\App\\\\Mx1.pfx\", \"Module.WebService2\": \"\" }\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Microflow Activities in C#\nDESCRIPTION: This example shows how to use the GetAllMicroflowActivities method to retrieve all activities in a microflow flow. It returns a list of IActivity objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nIReadOnlyList<IActivity> activities = _microflowService.GetAllMicroflowActivities(microflow);\n```\n\n----------------------------------------\n\nTITLE: Using Log Message Activity to Debug ML Model Inference Results\nDESCRIPTION: Example showing how to use the Log Message activity to observe classification results after a Call ML Model activity. This helps developers monitor the outputs of ML model inferences during runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/using-ml-kit/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nTrace\n\n* ML Model Inference Time: This shows how many milliseconds it took to make an inference call.\n```\n\n----------------------------------------\n\nTITLE: Implementing Todo List Web UI in HTML\nDESCRIPTION: Creates the HTML structure for the Todo list interface using Tailwind CSS for styling. Includes input fields, todo/done sections, and action buttons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n  <head>\n    <title>To Do List</title>\n    <script src=\"https://cdn.tailwindcss.com\"></script>\n    <style type=\"text/tailwindcss\">\n      @tailwind base;\n      @tailwind components;\n      @tailwind utilities;\n\n      @layer base {\n        body {\n          @apply m-6;\n        }\n        h1 {\n          @apply text-2xl mt-6;\n        }\n        h2 {\n          @apply text-xl mt-6;\n        }\n        input[type=checkbox] + label {\n          @apply ml-2;\n        }\n        input[type=checkbox]:checked + label {\n          text-decoration: line-through;\n        }\n        button {\n          @apply text-blue-600 italic\n        }\n      }\n    </style>\n  </head>\n  <body>\n    <div><label for=\"addToDoInput\">Add to do:</label> <input id=\"addToDoInput\" type=\"text\" placeholder=\"To do text\" /> <button id=\"addToDoButton\">Add</button></div>\n    <h1>To Do</h1>\n    <div id=\"todo\"></div>\n    <h1>Done</h1>\n    <div id=\"done\"></div>\n    <button id=\"clearDoneButton\">Clear</button>\n    <script type=\"module\" src=\"./main.js\"></script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Evaluating 'or' Operator in Java\nDESCRIPTION: Shows the usage of the 'or' operator to check if at least one of the expressions is true. Returns true if either or both expressions are true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n($product/price < $product/recommendedPrice : 2) or ($product/price     > 0)\n```\n\nLANGUAGE: java\nCODE:\n```\n('hello' = 'nothello') or ('byebye' = 'stillnotbyebye')\n```\n\n----------------------------------------\n\nTITLE: Parsing DateTime with Default Value in Mendix\nDESCRIPTION: Parses a string to a datetime value with a fallback default value if parsing fails. This example demonstrates error handling when the input string doesn't match the expected format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nparseDateTime('noDateTime', 'dd-MM-yyyy', dateTime(2007))\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Metrics Using Java API\nDESCRIPTION: Shows how to create custom metrics (counter, gauge, timer) using the Mendix Runtime Java API. It demonstrates creating a counter with tags and description using the builder pattern.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nimport com.mendix.metrics.Counter;\nimport com.mendix.core.Core;\n…\n\n// Create a counter\nCounter counter1 = Core.metrics().createCounter(\"app.strikes\")\n                                .withTag(\"app\", \"myapp\")\n                                .withDescription(\"Metrics to count the strike outs\")\n                                .build();\nCounter counter2 = Core.metrics().createCounter(\"app.count\").build();\n```\n\n----------------------------------------\n\nTITLE: Regenerating Mendix Projects with Native Builder\nDESCRIPTION: Command to recreate a project on GitHub with the latest version of 'Native Template', rename the previous app, and update App Center build configurations. It requires the 'prepare' command to be run at least once for the specified project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe regenerate --project-name \"CoolApp\" --mendix-version 8.5.0\n```\n\n----------------------------------------\n\nTITLE: Enhancing renderIcon Method with Explicit Styling\nDESCRIPTION: Updated renderIcon method that applies explicit color and size styling to the Mendix Icon component, ensuring proper visual appearance. It uses styles from the merged style object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_42\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderIcon = (toBeRenderedIcon: DynamicValue<NativeIcon> | undefined, glyph: string) => {\n    const nativeIcon: NativeIcon =\n        toBeRenderedIcon && toBeRenderedIcon.status === ValueStatus.Available\n            ? toBeRenderedIcon.value\n            : { type: \"glyph\", iconClass: glyph };\n\n    return (\n        <Icon color={this.styles.headerContent.color} icon={nativeIcon} size={this.styles.headerContent.fontSize} />\n    );\n};\n```\n\n----------------------------------------\n\nTITLE: Converting String to Uppercase\nDESCRIPTION: Converts all characters in a string to uppercase, returning a new string without modifying the original input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntoUpperCase('thisISmyString')\n```\n\n----------------------------------------\n\nTITLE: Error Handling in DL_ShowUrlDetails Nanoflow\nDESCRIPTION: This snippet includes the detailed process of setting error handling in the DL_ShowUrlDetails nanoflow to gracefully manage parsing errors, ensuring robustness during deep link processing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\n// Step to set error handling\n// 1. Set error handling for Parse URL to Object as Custom without rollback\n// 2. Add End event below it\n// 3. Set error handling to show 'Failed to parse deep link data.'\n```\n\n----------------------------------------\n\nTITLE: XML Setup for Page Containers in Mendix\nDESCRIPTION: This XML snippet outlines the structure of a page in a Mendix mobile application, detailing the layout of elements like 'statusBar', 'header', and 'container'. Each element has specific style properties to configure its appearance. Understanding of XML and Mendix page layout is necessary. The styles influence the header’s text and background colors, particularly useful in styling mobile app pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<page>\n\t<statusBar/>\n\t<header/>\n\t<container>\n\t\tapplication content\n\t</container>\n</page>\n```\n\n----------------------------------------\n\nTITLE: Grouping Results with GROUP BY Clause - OQL\nDESCRIPTION: This example illustrates how to use the GROUP BY clause to aggregate query results based on specified attributes. The query computes the total stock per brand from the Sales.Location entity, returning the brand names alongside their respective total stock values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_30\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, SUM(Stock) AS SumStock\nFROM Sales.Location\nGROUP BY Brand\n```\n\n----------------------------------------\n\nTITLE: TypeScript Type Definitions for Properties Configuration\nDESCRIPTION: TypeScript type definitions that define the structure of the Properties, PropertyGroup, Property, and ObjectProperties interfaces used to configure widget properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype Properties = PropertyGroup[];\n\ntype PropertyGroup = {\n    caption: string;\n    propertyGroups?: PropertyGroup[];\n    properties?: Property[];\n}\n\ntype Property = {\n    key: string;\n    caption: string;\n    description?: string;\n    objectHeaders?: string[]; // used for customizing object grids\n    objects?: ObjectProperties[];\n}\n\ntype ObjectProperties = {\n    properties: PropertyGroup[];\n    captions?: string[]; // used for customizing object grids\n}\n```\n\n----------------------------------------\n\nTITLE: Scaffolding a Group Box Widget App\nDESCRIPTION: This command uses the Mendix Pluggable Widget Generator to scaffold a new widget app called 'GroupBox'. It initializes the app folder with a recommended structure for developing Mendix widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyo @mendix/widget GroupBox\n```\n\n----------------------------------------\n\nTITLE: Updating Apache Log4j CVE Fix\nDESCRIPTION: Security update to address CVE-2021-44228 and CVE-2021-45046 by upgrading Cloud Foundry client (mx-cf-client) Log4j libraries to version 2.16.0.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.9.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nmx-cf-client with Log4j 2.16.0\n```\n\n----------------------------------------\n\nTITLE: Defining FileValue Type in Mendix 9 Pluggable Widgets API\nDESCRIPTION: This code defines the FileValue interface used to represent files in Mendix widgets. A file can only be configured through a file property and is represented as a readonly object containing a URI and name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface FileValue {\n    readonly uri: string;\n    readonly name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Combining Constraints Using XPath - Mendix\nDESCRIPTION: This snippet illustrates how to combine multiple XPath constraints using logical operators 'AND' and 'OR' to filter orders based on their status and total price. It provides insight into modifying the existing XPath constraint to achieve this.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/filtering-data-on-an-overview-page.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n1. To constrain the results in the order overview to only the **Open** orders *or* orders with a minimum price of 50.00, you have to insert an `or` statement in the XPath constraint: `[OrderStatus = 'Open'] or [TotalPrice >= 50]`.\n\n3. To constrain the results in the order overview to only the **Open** orders *and* orders with a minimum price of 50.00, you have to insert an `and` statement in the XPath constraint: `[OrderStatus = 'Open'] and [TotalPrice >= 50]`.\n```\n\n----------------------------------------\n\nTITLE: Complete Android Icons Configuration Example in JSON\nDESCRIPTION: A comprehensive example showing all required icon configurations for Android apps. This includes both standard and round launcher icons at various densities from mdpi to xxxhdpi.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"images\": [\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-mdpi\",\n            \"title\": \"mipmap-mdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-hdpi\",\n            \"title\": \"mipmap-hdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-xhdpi\",\n            \"title\": \"mipmap-xhdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-xxhdpi\",\n            \"title\": \"mipmap-xxhdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-xxxhdpi\",\n            \"title\": \"mipmap-xxxhdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-mdpi\",\n            \"title\": \"mipmap-mdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-hdpi\",\n            \"title\": \"mipmap-hdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-xhdpi\",\n            \"title\": \"mipmap-xhdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-xxhdpi\",\n            \"title\": \"mipmap-xxhdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-xxxhdpi\",\n            \"title\": \"mipmap-xxxhdpi-ic_launcher_round.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Grouped Constraints with Parentheses in XPath\nDESCRIPTION: This snippet demonstrates using parentheses to group constraints, determining priority in evaluation, and targeting customers named Jansen or Smit who live in Rotterdam.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[( Name = 'Jansen' or Name = 'Smit' ) and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Configuring Navigation Styles in JavaScript\nDESCRIPTION: Defines style properties for a navigation component, including a bottom bar and a progress overlay in a Mendix app. Uses JavaScript objects to assign ViewStyle and TextStyle properties to different parts of the navigation component, allowing customization of their appearance. Requires understanding of Mendix's styling system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nexport const navigationStyle = {\n  bottomBar: {\n    container: {\n      // This has all ViewStyle properties.\n    },\n    label: {\n      // This has all TextStyle properties.\n    },\n    selectedLabel: {\n      // This has all TextStyle properties.\n    },\n    icon: {\n      // This has all TextStyle properties.\n    },\n    selectedIcon: {\n      // This has all ViewStyle properties.\n    }\n  },\n  progressOverlay: {\n    background: {\n      // This has all ViewStyle properties.\n    },\n    container: {\n      // This has all ViewStyle properties.\n    },\n    activityIndicator: {\n      // This is the same as the `activity indicator` widget.\n    },\n    text: {\n      // This has all TextStyle properties.\n    }\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Calculating Calendar Years Between Dates in Java\nDESCRIPTION: The `calendarYearsBetween` function computes the absolute difference between two date values in years, ignoring the time aspect. It accepts two Date and Time inputs and returns an Integer/Long indicating the year difference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\ncalendarYearsBetween(dateTime(2007, 1, 1, 10, 1, 1), dateTime(2017, 1, 1, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Using beginOfDay Function in Mendix\nDESCRIPTION: Calculates the beginning of the day for a given datetime input. Returns midnight (00:00) of the same day.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nbeginOfDay(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Defining Popup Menu Widget Styling in JavaScript\nDESCRIPTION: This code defines the style structure for the Popup Menu widget in Mendix native mobile applications. It enables styling of basic items, custom items, button containers, and the main menu container with various text and visual properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_popupmenu_PopupMenu = {\n  basic: {\n  // BasicItemStyle. Styles basic items.\n    containerStyle: {\n      // This has all ViewStyle properties. Styles the wrapper container around a basic item. \n    },\n    itemStyle: {\n      ellipsizeMode: null, // 'head', 'middle', 'tail', or 'clip'. Styles how the text will be clipped if its too long.\n      rippleColor: null, // Styles the color of touch feedback when item is tapped. Works for both iOS and Android platforms.\n      defaultStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `default` style selected.\n      },\n      primaryStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `primary` style selected.\n      },\n      dangerStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `danger` style selected.\n      },\n      customStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `custom` style selected.\n      },\n    },\n    dividerColor: null, // Styles the divider color. \n  },\n\n  custom: {\n    // CustomItemStyle. Styles custom items.\n    // This has the same properties as BasicItemStyle.\n  },\n\n  buttonContainer: {\n    // This has all ViewStyle properties. Styles the wrapper view of triggerer since there could be multiple elements, and it has to be wrapped in a view. \n  },\n  container: {\n    // This has all ViewStyle properties. Styles the wrapper view around the whole menu.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Demo User Properties Table in Markdown\nDESCRIPTION: A markdown table describing the properties available for demo users, including username, password, entity, and user roles configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/security/app-security/demo-users.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Property   | Description                                                  |\n| ---------- | ------------------------------------------------------------ |\n| User name  | The name of the demo user. This name must be unique, and cannot be the same as the name of the [administrator user](/refguide9/administrator/). |\n| Password   | The password of the demo user is created automatically when the demo user is created. It cannot be changed, but you can click **Copy password to clipboard**, for example, to share the credentials of a demo user with someone else. |\n| Entity     | The entity of the demo user. This entity must be the System.User entity or a specialization of it. |\n| User roles | A user role of the demo user. Each demo user must have one or more roles. |\n```\n\n----------------------------------------\n\nTITLE: Combined LIMIT and OFFSET Query\nDESCRIPTION: Shows how to combine LIMIT and OFFSET for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_44\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, City, LocationNumber\nFROM Sales.Location\nORDER BY LocationNumber\nLIMIT 3\nOFFSET 2\n```\n\n----------------------------------------\n\nTITLE: Calling renderContent in Render Method\nDESCRIPTION: This TypeScript snippet updates the render method to call the `renderContent` method. The result of renderContent is included in the main View, conditionally rendering the content area.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_22\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n        return (\n            <View style={this.styles.container}>\n                <View style={this.styles.header}>\n                    <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                    <Text style={this.styles.headerContent}>-</Text>\n                </View>\n                {this.renderContent()}\n            </View>\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Filtering a List of Objects from the Database in Mendix\nDESCRIPTION: This snippet involves creating a microflow to retrieve a list of 'Order' entities from the database and applying an XPath constraint to filter those orders to only include those with a 'Processing' status. It includes steps to set up a UI button to initiate this microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Create a new microflow by right-clicking your module and selecting **Add** > **Microflow**.\n2. In the **Add Microflow** dialog box, in the **Name** field, enter *IVK_SetOrderToComplete*, and then click **OK**.\n3. On the **Orders** overview page, add an **Action** button to the toolbar.\n4. Double-click the **Action** button and change the **Caption** to *Set Processing to Complete*.\n5. In the **On click** list, select **Call a microflow**, and then select the **IVK_SetOrderToComplete** microflow.\n6. Open the **IVK_SetOrderToComplete** microflow by right-clicking the new button and selecting **Go to microflow**.\n7. Open the **Toolbox** and search for the **Retrieve** activity.\n8. Drag a **Retrieve** activity from the **Toolbox** to the line between the start and end events.\n9. Double-click the **Retrieve** activity, and then set the following properties:\n    * **Source** – select **From database**\n    * **Entity** – select **Order**\n    * **List** – enter *OrderList*\n10. To filter the list to only orders with the status **Processing**, in the **XPath constraint** field, add the following XPath expression: `[OrderStatus = 'Processing']`.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Rows with WHERE Clause - OQL\nDESCRIPTION: This snippet demonstrates how to use the WHERE clause to filter query results based on specific criteria. The example shows a query that retrieves all customers whose last name is 'Doe'. Key parameters include 'LastName', which is strictly compared to the string 'Doe'. The expected output is a list of customers with the last name 'Doe'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_26\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.Customer\nWHERE LastName = 'Doe'\n```\n\n----------------------------------------\n\nTITLE: Promise-based Confirmation Dialog\nDESCRIPTION: Shows how to wrap a Mendix confirmation dialog in a Promise to handle user interaction asynchronously.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nfunction AskConfirmation(question) {\n    // BEGIN USER CODE\n    return new Promise(function (resolve) {\n        mx.ui.confirmation({\n            content: question,\n            handler: function() {\n                resolve(true);\n            },\n            onCancel: function() {\n                resolve(false);\n            }\n        });\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Conditional Minimum Value with XPath min() Function in Java\nDESCRIPTION: This example shows how to use the XPath min() function with a condition to find the lowest total price for orders placed by a specific customer. It combines the min() function with a filter to narrow down the results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-min.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nmin(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Applying XPath Constraints in Mendix Java Microflow\nDESCRIPTION: This XPath constraint ensures access control by limiting entity retrieval to those objects belonging to the same tenant as the current user. It requires the SiemensInsightsHubSingleSignOn module and an understanding of XPath query syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-development-considerations.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n[SiemensInsightsHubSingleSignOn.TenantObject_Tenant/SiemensInsightsHubSingleSignOn.Tenant/SiemensInsightsHubSingleSignOn.Account_Tenant='$currentUser']\n```\n\n----------------------------------------\n\nTITLE: NULL Constants Without Aliases (No Longer Allowed)\nDESCRIPTION: Example of a query with a NULL constant that does not have an alias, which was allowed in OQL v1 but is invalid in OQL v2.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  Name,\n  NULL\nFROM Module.City\n```\n\n----------------------------------------\n\nTITLE: Loading and Using Domain Models in Mendix SDK - TypeScript\nDESCRIPTION: Demonstrates using the asynchronous load method to fully load a domain model unit in Mendix SDK. This example highlights the transition from interface objects to full objects, verifying the loading state with isLoaded, and leveraging TypeScript for type casting. Note: TypeScript's inference negates the need for explicit type declarations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/manipulating-existing-models/loading-units-and-elements.md#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst model = await workingCopy.openModel();\n\n// at first, only interfaces are available:\nconst domainModel = model.allDomainModels()[0];\nconst entity1Interface = domainModel.entities[0];\n\nconsole.log(entity1Interface.isLoaded); // ==> prints false\n\nconst entity1 = await entity1Interface.load();\n\n// entity1 is now the fully-loaded entitiy of type domainmodels.Entity\nconsole.log(entity1.isLoaded); // ==> prints true\nconsole.log(entity1Interface === entity1); // ==> prints true\n\n// loading the entity actually loaded the complete domain model unit:\nconsole.log(domainModel.isLoaded); // prints true\n// ... so we can cast it as a fully loaded domainModel:\nconst fullDomainModel = domainModel.asLoaded();\n\n// In fully-loaded units, all sub elements also have the fully-loaded types,\n// while in interfaces all sub objects are interfaces as well.\nconst entity2: domainmodels.Entity = fullDomainModel.entities[1];\nconsole.log(entity2.isLoaded); // prints true\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Dojo Settings for CSP\nDESCRIPTION: This snippet configures the Dojo settings within the Mendix application to adhere to a strict Content Security Policy. It sets debugging options and specifies CSP-related restrictions, such as allowing only local resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/csp.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nwindow.dojoConfig = {\n    // Default Dojo config\n\tisDebug: false,\n\tuseCustomLogger: true,\n\tasync: true,\n\tbaseUrl: \"mxclientsystem/dojo/\",\n\tcacheBust: \"{{cachebust}}\",\n\trtlDirect: \"index-rtl.html\",\n\n    // CSP Dojo config\n\thas: {\n        \"csp-restrictions\": true\n    },\n\tblankGif: \"mxclientsystem/dojo/resources/blank.gif\"\n};\n\nif (!document.cookie || !document.cookie.match(/(^|;) *originURI=/gi))\n\tdocument.cookie = \"originURI=/login.html\" + (window.location.protocol === \"https:\" ? \";SameSite=None;Secure\" : \"\");\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example: Retrieving Customers in Sales Module\nDESCRIPTION: This XPath query retrieves all 'Customer' objects within the 'Sales' module. The '.' token is used to separate the module name from the entity name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\n\"//Sales.Customer\"\n```\n\n----------------------------------------\n\nTITLE: Adding Icon Props to GroupBoxProps Interface (TSX)\nDESCRIPTION: This TypeScript snippet modifies the `GroupBoxProps` interface in the display component (`GroupBox.tsx`) to include optional `collapseIcon` and `expandIcon` properties. These properties allow the container component to pass the configured icons to the display component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface GroupBoxProps {\n    collapseIcon?: ReactNode;\n    expandIcon?: ReactNode;\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n\n```\n\n----------------------------------------\n\nTITLE: Long Query in POST Request Body\nDESCRIPTION: Demonstrates how to place a long query in the request body using POST and $query for improved performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_13\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST http://localhost/8080/odata/CustomerApi/v1/Customers/$query\nContent-Type: text/plain\n```\n\n----------------------------------------\n\nTITLE: Generating Random Alphanumeric String in JavaScript\nDESCRIPTION: This snippet demonstrates the core functionality for creating a random alphanumeric string. It uses Math.random() to generate a random number, converts it to base 36 (which includes numbers and lowercase letters), and then slices the result to get a 6-character string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/ats-core-actions/rg-one-random-string.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nMath.random().toString(36).slice(2,8)\n```\n\n----------------------------------------\n\nTITLE: Filtering Gold Customers in Studio Pro with XPath true\nDESCRIPTION: This code snippet demonstrates how to use the `true()` function in an XPath constraint within Mendix Studio Pro to select customers whose `IsGoldCustomer` attribute is set to true. The square brackets indicate a filter condition applied to the entity set.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-true.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\n    [IsGoldCustomer = true()]\n    \n```\n\n----------------------------------------\n\nTITLE: Opening a Tab in the Working Area with C# Extensibility API\nDESCRIPTION: This snippet demonstrates how to open a custom tab in the Mendix working area using the IDockingWindowManager API. The view model for the tab must derive from 'WebViewTabViewModel' and override the InitWebView method to set the URL for the web content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-reference-guide/web-view.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nIDockingWindowManager.OpenTab(...) // Opens a custom tab in the UI\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Greater than or equal to Operator\nDESCRIPTION: Describes how the greater than or equal to operator functions in OQL, returning true for values that are equal to or exceed another.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n| `>=` | Greater than or equal to | `Price >= 9.80` returns true if price is 9.80, false if price is 9.70. |\n```\n\n----------------------------------------\n\nTITLE: Toggle Design Property Example\nDESCRIPTION: A complete example of a Toggle design property definition with name, type, description, and class fields. Toggle properties can be turned on or off to apply CSS classes to widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n{\n    \"name\": \"Full width\",\n    \"type\": \"Toggle\",\n    \"description\": \"Description of My Toggle Design Property\",\n    \"class\": \"fullWidth\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Validation Message Enumeration\nDESCRIPTION: Definition of an enumeration containing all possible validation messages for translation purposes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Subtracting Milliseconds from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 1000 milliseconds (1 second) from a specific date and time using the subtractMilliseconds function. The function takes a datetime value and an integer representing milliseconds to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nsubtractMilliseconds(dateTime(2007, 1, 1, 1, 1, 1), 1000)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Microflow Timer\nDESCRIPTION: This snippet describes the process of setting up a timer in a Mendix microflow to measure execution time. It involves creating a variable to store the start time and logging the duration once the microflow completes. This is essential for identifying slow performing microflows and their activities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580222.png\" class=\"no-border\" >}}\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580221.png\" class=\"no-border\" >}}\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580219.png\" class=\"no-border\" >}}\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/howto9/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580220.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Adding Browser Compatibility Check for Web SpeechSynthesis API in Mendix JavaScript Action\nDESCRIPTION: Extended JavaScript action that verifies browser compatibility with the Web SpeechSynthesis API and includes documentation references.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function TextToSpeech(text) {\n    // BEGIN USER CODE\n    // Documentation: https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis\n    // Compatibility: https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis#Browser_compatibility\n    if (!text) {\n        return false;\n    }\n    if (\"speechSynthesis\" in window === false) {\n        throw new Error(\"Browser does not support text to speech\");\n    }\n    throw new Error(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Counting Non-Null Stock Values\nDESCRIPTION: Demonstrates how COUNT ignores NULL values when counting a specific column.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(Stock) AS StockEntryCount FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Mendix Custom Validation Expression Example\nDESCRIPTION: This code snippet shows an example of a custom validation expression in Mendix. The expression checks if the `myAttribute` attribute of the `currentObject` is not empty, which is used to determine if a button should be visible. The `$currentObject` variable represents the object of the closest enclosing data container.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/common-widget-properties.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Expression\nCODE:\n```\n\"$currentObject/myAttribute != empty\"\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by FirstName Length in Studio Pro\nDESCRIPTION: This XPath query retrieves all customer objects where the length of the `FirstName` attribute is greater than or equal to 5. It utilizes the `length()` function within the XPath expression to filter the results based on string length.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-length.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[length(FirstName) >= 5]\n\n```\n\n----------------------------------------\n\nTITLE: curl Command for Upload Package API\nDESCRIPTION: Example curl command for uploading a deployment package to a Mendix Cloud app, showing the required parameters, headers, and file attachment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -v -F \"file=@%USERPROFILE%/Documents/Mendix/calc-main/releases/calc_1.0.0.45.mda\"  -X POST -H \"Mendix-Username: richard.ford51@example.com\" -H \"Mendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\" \"https://deploy.mendix.com/api/v2/apps/calc/packages/upload?name=calc_1.0.0.45.mda\"\n```\n\n----------------------------------------\n\nTITLE: Greater Than Comparison in Java\nDESCRIPTION: Demonstrates a simple greater than comparison in Java that returns a Boolean true when checking if 4 is greater than 3.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n4>3\n```\n\n----------------------------------------\n\nTITLE: Importing JSON String with Mapping in Java Action\nDESCRIPTION: This code snippet outlines the steps for implementing a Java action that imports a JSON string using a specified import mapping. It involves creating an InputStream from the JSON input, using `Core.integration().importStream()` to perform the import, and returning the first imported object.  The action requires the \"ImportMapping\" and the \"ResultEntity\" as inputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-connector-kit.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n1. Create an InputStream from the JSON input so it can be read by the import mapping.\n2. Use `Core.integration().importStream()` to import the JSON with the specified mapping.\n3. Return the first object imported.\n```\n\n----------------------------------------\n\nTITLE: OQL CAST Function Syntax\nDESCRIPTION: Demonstrates the basic syntax for casting expressions between different data types in OQL. Allows conversion of an expression to a specified data type including BOOLEAN, DATETIME, DECIMAL, INTEGER, LONG, and STRING.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-cast.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCAST ( expression AS data_type )\n```\n\n----------------------------------------\n\nTITLE: Adding Icon Properties to GroupBox XML\nDESCRIPTION: This XML snippet defines two new properties (`expandIcon` and `collapseIcon`) for the Mendix GroupBox widget. These properties allow Mendix developers to specify custom icons for the expand and collapse actions of the group box.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_25\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <property key=\"content\" type=\"widgets\" required=\"false\">\n                <caption>Content</caption>\n                <description>Widgets to place inside.</description>\n            </property>\n            <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                <caption>Header caption</caption>\n                <description />\n            </property>\n            <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                <caption>Expand icon</caption>\n                <description>Icon used to indicate that the group box can be expanded.</description>\n            </property>\n            <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                <caption>Collapse icon</caption>\n                <description>Icon used to indicate that the group box can be collapsed.</description>\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n\n```\n\n----------------------------------------\n\nTITLE: Defining an Action Property with Variables in XML\nDESCRIPTION: This XML snippet demonstrates how to define an action property that incorporates variables. These variables can be used when executing the action and are predefined with types and captions for clarity in the UI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"actionWithVariable\" type=\"action\">\n\t<caption>On click</caption>\n\t<description>Action to be performed when button is clicked</description>\n\t<actionVariables>\n\t\t<actionVariable key=\"random\" type=\"Decimal\" caption=\"Random number between 0 and 1\" />\n\t</actionVariables>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies with NPM\nDESCRIPTION: This Bash script installs the necessary JavaScript dependencies for the Mendix Native Mobile App using NPM. For NPM v7 and above, the --legacy-peer-deps flag is used to avoid peer dependency conflicts. This step is essential before proceeding with building the app in Android Studio or Xcode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Comparison with Equal Values in Java\nDESCRIPTION: Demonstrates a less than or equal to comparison in Java that returns a Boolean true when checking if 3 is less than or equal to 3.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n3<=3\n```\n\n----------------------------------------\n\nTITLE: GET Request for All User Accounts in Company\nDESCRIPTION: HTTP GET request to retrieve OpenIDs of all users in the company. Supports optional parameters for search, offset, and limit.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET /legacy-api/1/users HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Generating Domain Model Code with MendixPlatformClient\nDESCRIPTION: A comprehensive script demonstrating how to load a domain model from a Mendix project and serialize its JavaScript representation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/generating-code-from-the-model.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { JavaScriptSerializer } from \"mendixmodelsdk\";\nimport { MendixPlatformClient } from \"mendixplatformsdk\";\n\nconst projectId = \"{YOUR_PROJECT_ID}\";\nconst moduleName = \"MyFirstModule\";\n\nasync function main() {\n    const client = new MendixPlatformClient();\n\n    const app = client.getApp(projectId);\n\n    const workingCopy = await app.createTemporaryWorkingCopy(\"main\");\n    const model = await workingCopy.openModel();\n\n    const domainModelInterface = model.allDomainModels().filter(dm => dm.containerAsModule.name === moduleName)[0];\n    const domainModel = await domainModelInterface.load();\n\n    console.log(JavaScriptSerializer.serializeToJs(domainModel));\n}\n\nmain().catch(console.error);\n```\n\n----------------------------------------\n\nTITLE: Floor Rounding with floor Function\nDESCRIPTION: Rounds down a number to the nearest integer, always returning the largest integer less than or equal to the input value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nfloor(3.9)\n```\n\nLANGUAGE: java\nCODE:\n```\nfloor(-1.2)\n```\n\n----------------------------------------\n\nTITLE: Setting Snowflake JDBC Query Result Format\nDESCRIPTION: This SQL statement sets the default query result format for Snowflake JDBC to JSON. This is necessary for compatibility with JDK versions 17 or 21 to avoid issues with the Apache Arrow dependency. It ensures that the Snowflake JDBC driver can handle query executions without compatibility problems.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n**ALTER USER <user_name> SET JDBC_QUERY_RESULT_FORMAT='JSON';**\n```\n\n----------------------------------------\n\nTITLE: Checking String Ending with endsWith Function in Java\nDESCRIPTION: The endsWith function checks if a string ends with a specified substring. It takes two string parameters and returns a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nendsWith('thisismystring', 'ring')\n```\n\nLANGUAGE: java\nCODE:\n```\ntrue\n```\n\n----------------------------------------\n\nTITLE: Mendix Runtime API: Adding WebSocket Endpoint\nDESCRIPTION: This code snippet demonstrates how to add a WebSocket endpoint using the Mendix Runtime API. It utilizes the `WebSocketEndpointConfiguration` interface to configure subprotocols and modify the handshake process. This allows for customization of response headers for WebSocket connections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"Core.addWebSocketEndpoint(java.lang.String,javax.websocket.Endpoint)\"\n```\n\n----------------------------------------\n\nTITLE: Opening a Tab with TypeScript Implementation\nDESCRIPTION: This code demonstrates how to implement a class that opens a tab from an extension menu. It tracks open tabs using a dictionary and provides functionality to both open and close tabs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/tab-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IComponent, studioPro, TabHandle } from \"@mendix/extensions-api\";\n\nclass Main implements IComponent {\n  tabs: { [menuId: string]: Promise<TabHandle> } = {};\n  async loaded() {\n    // Add menu items to the Extensions menu to open and close our tab\n    await studioPro.ui.extensionsMenu.add({\n      menuId: \"myextension.MainMenu\",\n      caption: \"MyExtension Menu\",\n      subMenus: [\n        { menuId: \"myextension.ShowTabMenuItem\", caption: \"Show tab\" },\n        {\n          menuId: \"myextension.CloseTabMenuItem\",\n          caption: \"Close tab\",\n        },\n      ],\n    });\n\n    studioPro.ui.extensionsMenu.addEventListener(\n      \"menuItemActivated\",\n      async (args) => {\n        // Open a tab when the menu item is clicked\n        if (args.menuId === \"myextension.ShowTabMenuItem\") {\n          const handle = studioPro.ui.tabs.open(\n            {\n              title: \"My Extension Tab\",\n            },\n            {\n              componentName: \"extension/myextension\",\n              uiEntrypoint: \"tab\",\n            }\n          );\n\n          // Track the open tab\n          this.tabs[\"myextension.MainMenu\"] = handle;\n        }\n\n        // Close the tab opened previously\n        if (args.menuId === \"myextension.CloseTabMenuItem\") {\n          studioPro.ui.tabs.close(await this.tabs[\"myextension.MainMenu\"]);\n        }\n      }\n    );\n  }\n}\n\nexport const component: IComponent = new Main();\n```\n\n----------------------------------------\n\nTITLE: Rendering Group Box with Conditional Content in TSX\nDESCRIPTION: This TSX code renders the Group Box component with a header and conditionally renders the content area. It uses the Children.count method to check if there are any child components before rendering the content View.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_15\n\nLANGUAGE: TSX\nCODE:\n```\nprivate renderContent = (): ReactNode => {\n    if (Children.count(this.props.children) === 0) {\n        return null;\n    }\n\n    return <View style={this.styles.content}>{this.props.children}</View>;\n};\n\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            {this.renderContent()}\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading iOS IPA to App Store using Xcode Command Line Tool\nDESCRIPTION: This command uses Xcode's command line tool to upload a signed iOS IPA file to the Apple App Store. It requires the path to the IPA file, the developer's App Store email, and password.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/deploying-native-app.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxcrun altool --upload-app --type ios --file \"path/to/application.ipa\" --username \"YOUR_APPSTORE_USER_EMAIL\" --password \"YOUR_APPSTORE_PASSWORD\"\n```\n\n----------------------------------------\n\nTITLE: Parsing Valid Integer String\nDESCRIPTION: Demonstrates parsing a valid integer string, converting '42' to the integer value 42\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-integer.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseInteger('42')\n```\n\n----------------------------------------\n\nTITLE: Importing React and React Native Components in TypeScript\nDESCRIPTION: This snippet shows the necessary imports from React and React Native to create a collapsible widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_23\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Children, Component, ReactNode, createElement, ComponentClass } from \"react\";\n\nimport {\n    Text,\n    View,\n    Platform,\n    TouchableOpacity,\n    TouchableNativeFeedback\n} from \"react-native\";\n```\n\n----------------------------------------\n\nTITLE: Setting Log Levels via Python Script in Mendix\nDESCRIPTION: This Python script configures log levels for specific nodes in a Mendix application. It sends a request to the runtime admin port to set the log levels of 'ConnectionBus' to 'TRACE' and 'ActionManager' to 'DEBUG'. The 'force':True parameter ensures the log levels are updated.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/log-levels.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport requests, base64, json, sys\n\npayload = {\n    'action':'set_log_level',\n    'params': {'nodes' : [\n        { 'name':'ConnectionBus', 'level':'TRACE'},\n        { 'name':'ActionManager', 'level':'DEBUG'}\n        ], 'force':True}\n}\n\n```\n\n----------------------------------------\n\nTITLE: Reducing a Badge Number to Clear the Badge\nDESCRIPTION: This snippet describes how to clear the app badge number when the user opens the app. It uses the App Events widget to trigger a nanoflow when the app loads or resumes, setting the badge number to 0 to clear the badge.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/local-notifications/local-notif-badges.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Parsing URL to Object in Mendix\nDESCRIPTION: The Parse URL To Object nanoflow action creates a new Mendix object. This object will be populated with attributes based on parts of the URL. For example, it parses the URL, splits the URL, and then sets all the object attributes with their corresponding values from the URL components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Finding Substring Position in Mendix - Java\nDESCRIPTION: The `find` function identifies the initial position of a substring within a string. Requiring two strings (a subject and a target), it optionally accepts a starting search position. If absent, it returns -1. Care should be taken as the operation may return negative results if the substring isn't found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nfind('thisismystring', 'my')\n```\n\n----------------------------------------\n\nTITLE: Defining Pie/Doughnut Chart Styles in JavaScript\nDESCRIPTION: This snippet defines the styling properties for the Pie/Doughnut Chart widget in Mendix. It includes settings for container styles and slice properties, allowing customization of colors, font styles, padding, and radius configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_piedoughnutchart_PieDoughnutChart = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  slices: {\n    customStyles: {\n      any_custom_key: {\n        slice: {\n          color: null, // Applies a color to the slice (string). If labels are configured to be shown, each label will be the same color as its corresponding slice.\n          fontFamily: null, // Applies a font type to the slice label (string).\n          fontSize: null, //  Applies a size to the slice label (number).\n          fontStyle: null, // Applies a font style to the slice label (**normal** or **italic**).\n          fontWeight: null, // Applies a font weight to the slice label (\"normal\" or \"bold\" or \"100\"-\"900\" ascending by increments of 100).\n        },\n      },\n    },\n    colorPalette: null, // Provides colors to slices that do not have a slice color configured (string with list of colors separated by a ';').\n    innerRadius: null, //  Applies an inner radius to the chart when in doughnut presentation mode (number).\n    padding: null, // Applies padding to all sides of the chart (number).\n    paddingBottom: null, // Applies padding to the bottom side of the chart (number).\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the chart (number).\n    paddingLeft: null, // Applies padding to the left side of the chart (number).\n    paddingRight: null, // Applies padding to the right side of the chart (number).\n    paddingTop: null, // Applies padding to the top side of the chart (number).\n    paddingVertical: null, // Applies padding to the vertical sides of the chart (number).\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Font in FOP XML Configuration\nDESCRIPTION: This XML snippet demonstrates how to configure a custom font within the fop.xconf file for PDF generation in Mendix. The embed-url attribute specifies the location of the font file, and the font-triplet element defines the name to be used in CSS.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/style.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<font kerning=\"yes\" embed-url=\"mycustomfont.ttf\">\n    <font-triplet name=\"myfont\" style=\"normal\" weight=\"normal\"/>\n</font>\n```\n\n----------------------------------------\n\nTITLE: Getting Object by GUID - JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve an object using its GUID with a JavaScript action. This is crucial when handling notifications to display the specific entity object that corresponds to the notification tapped by the user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst entity = GetObjectByGUID(objectGUID);\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Operation Request Body - Object Reference\nDESCRIPTION: Defines the JSON schema for a request body parameter that references a single object based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \"$ref\": \"#/definitions/#definition_name#\"}\n```\n\n----------------------------------------\n\nTITLE: Parsing Invalid String with Default Value\nDESCRIPTION: Shows parsing an invalid string with a default value, returning 42 when the input cannot be parsed\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-integer.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nparseInteger('not_an_integer', 42)\n```\n\n----------------------------------------\n\nTITLE: Configuring AppCenter App Names in Native Mobile Config\nDESCRIPTION: JSON configuration for specifying iOS and Android app names in the native mobile configuration file, including optional organization settings for App Center.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/how-to-ota.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"appcenter\": {\n        \"iosAppName\": \"App-iOS\",\n        \"androidAppName\": \"App-Android\"\n    }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"appcenter\": {\n        \"iosAppName\": \"App-iOS\",\n        \"androidAppName\": \"App-Android\",\n        \"organization\": \"your-organization-here\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Group Box Component Props in TypeScript\nDESCRIPTION: Extends GroupBoxProps interface to support collapsibility and initial collapsed state with optional icons and header caption\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_41\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxProps {\n    startCollapsed?: boolean;\n    collapsible: boolean;\n    collapseIcon?: ReactNode;\n    expandIcon?: ReactNode;\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Database Index for Customer Retrieval\nDESCRIPTION: Example OQL query demonstrating index usage for retrieving customer records by ZIP code and house number. Shows the importance of matching attribute order in index and query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/entities/indexes.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nFROM Module.Customer AS c\nWHERE c.zipcode = $ParameterZipCode AND c.housenumber = $ParameterHouseNumber\nSELECT c.name AS CustomerName\n```\n\n----------------------------------------\n\nTITLE: Configuring a Basic REST Request in Mendix\nDESCRIPTION: Steps to configure a basic GET, POST, PUT, PATCH or DELETE request in the Consumed REST Service document.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/consumed-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. In the **Method & URL** field, use the drop-down to select the HTTP method you want to use.\n2. Add an endpoint and click **Send**.\n3. Click **Base URL**.\n4. Add a base URL to use the same URL across all requests in this consumed REST Service document.\n5. Click **Authentication**.\n6. Select an authentication method, then click **OK**.\n7. Click **Send**.\n```\n\n----------------------------------------\n\nTITLE: Initializing Column Chart Configuration in JSON\nDESCRIPTION: This snippet describes the configuration for a vertical column chart in JSON, specifying the x and y axes and setting type and orientation. The expected output is a column chart displaying provided values vertically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ \"giraffe\", \"elephant\" ],\n  \"y\": [ 2, 4 ],\n  \"type\": \"bar\",\n  \"orientation\": \"v\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Microflow Using CreateMicroflow Method in C#\nDESCRIPTION: This example shows how to use the CreateMicroflow method, which is a simpler alternative to Initialize. It creates a microflow and adds it to the model in a single step, requiring just the model, folder, and name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\npublic void CreateMicroflow(IModel currentApp)\n{\n    var module = currentApp.Root.GetModules().Single(m => m.Name == \"MyFirstModule\");\n\n    using var transaction = currentApp.StartTransaction(\"Create microflows\");\n   \n    var microflow = _microflowService.CreateMicroflow(currentApp, module, \"Microflow\");\n\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OData Service Generalization\nDESCRIPTION: Adds a new property to enable using OData baseType for generalizations in published OData services\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.18.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nuseGeneralization: true\n```\n\n----------------------------------------\n\nTITLE: Setting Workflow Context in Mendix with Java\nDESCRIPTION: This snippet outlines how to use the setWorkflowObject method from the com.mendix.workflows.Workflow interface to manually set the context object for a workflow. This is useful for maintaining compatibility between workflow instances and their context when the context entity is modified. This action requires knowledge of Mendix Java actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-versioning.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nvoid setWorkflowObject(contextObject: IMendixObject)\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Global Operator Namespace\nDESCRIPTION: This command verifies that the Operator and Agent pods are in 'Running' status within the Global Operator namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-global-operator.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {globalOperatorNamespace} get pods\n```\n\n----------------------------------------\n\nTITLE: Basic UNION Query\nDESCRIPTION: Demonstrates combining results from two SELECT queries using UNION.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_45\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nUNION\nSELECT FirstName, LastName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: OQL Query with Time-Related Variables and Functions\nDESCRIPTION: Example demonstrating the use of time-related system variables and date functions to calculate current year, age, and a date from three years ago.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tBirthDate,\n\tDATEPART(YEAR, '[%BeginOfCurrentYear%]') AS CurrentYear,\n\tDATEDIFF(YEAR, BirthDate, '[%CurrentDateTime%]') AS Age,\n\t'[%BeginOfCurrentDay%] - 3 * [%YearLength%]' AS TodayThreeYearsAgo\nFROM\n\tSales.Person\n```\n\n----------------------------------------\n\nTITLE: Defining iOS Splash Screens Interface in JSON\nDESCRIPTION: TypeScript interface definition for iOS splash screen configuration. This schema defines the structure required for the ios.json file under splashScreens directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\ninterface AndroidSplashScreensConfig {\n      \"images\": Array<{\n              \"size\": \"640x960\" | \"375x667\" | \"414x736\",\n              \"idiom\": \"universal\",\n              \"scale\": \"1x\" | \"2x\" | \"3x\",\n              \"type\": \"splashScreen\",\n              \"filename\": string\n          }>,\n      \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders List by Order Status Using XPath in Mendix\nDESCRIPTION: This snippet demonstrates how to set an XPath constraint on the Orders data grid to filter the displayed orders to only those with the status 'Open'. It details the steps for selecting the data grid, accessing properties, and entering the XPath expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_1\n\nLANGUAGE: XPath\nCODE:\n```\n[OrderStatus = 'Open']\n```\n\n----------------------------------------\n\nTITLE: Creating a Published OData Service in Mendix Studio Pro\nDESCRIPTION: This snippet outlines the steps to create a published OData service within a Mendix application. This involves adding an OData service, selecting the entities to expose, and configuring the association settings. The service allows third-party applications to read data from the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Configuring Chart Themes Using JSON in Mendix\nDESCRIPTION: The purpose of this snippet is to illustrate the structure of a JSON file used for global chart theming in a Mendix application. The file specifies layout, data, and configuration options that affect all charts within the app. This setup requires placing the JSON file, named 'com.mendix.charts', inside the theme folder of the app root directory. The JSON file includes specific sections for each chart type such as LineChart and AreaChart. Users must pay attention to the file structure to apply themes correctly, keeping in mind that these configurations are global and secondary to widget-specific settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"layout\": {\n    // Add shared layout options here (for all charts)\n  },\n  \"configuration\": {\n    // Add shared configuration options here (for all charts)\n  },\n  \"charts\": {\n    \"LineChart\": {\n      \"layout\": {\n        // Add line chart only layout options here\n      },\n      \"data\": {\n        // Add line chart only data options here\n      },\n      \"configuration\": {\n          // Add line chart only configuration options here\n      }\n    },\n    \"AreaChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BubbleChart\": {\n      // Same arrangement as the line chart\n    },\n    \"TimeSeries\": {\n      // Same arrangement as the line chart\n    },\n    \"ColumnChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BarChart\": {\n      // Same arrangement as the line chart\n    },\n    \"PieChart\": {\n      // Same arrangement as the line chart\n    },\n    \"HeatMap\": {\n      // Same arrangement as the line chart\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adapting JOIN Queries in OQL v2\nDESCRIPTION: This snippet illustrates the change required in OQL v2 where `JOIN` operations must include an `ON` clause or use join over association, as opposed to OQL v1.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Module.Person\nJOIN Module.City\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Module.Person, Module.City\n```\n\n----------------------------------------\n\nTITLE: Styling List View Swipe Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the list view swipe widget in Mendix native mobile applications. It includes styles for the container and left/right swipe actions, with properties for panel size and threshold.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_listviewswipe_ListViewSwipe = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  leftAction: {\n    // This has all ViewStyle properties.\n    panelSize: null, // The number of pixels and the combined size of the background buttons.\n    threshold: null, // The number of pixels to accept the swipe action.\n  },\n  rightAction: {\n    // This has all ViewStyle properties.\n    panelSize: null, // The number of pixels and the combined size of the background buttons.\n    threshold: null, // The number of pixels to accept the swipe action.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Authentication Header Format for Deploy API v1\nDESCRIPTION: Shows the required authentication headers for making Deploy API calls. Users must include their Mendix username and API key in each request to authenticate.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Defining Datasource Property in Mendix Pluggable Widget XML\nDESCRIPTION: This XML snippet defines a datasource property for a Mendix pluggable widget. It specifies the property key, type, whether it's a list, and if it's required. It also includes a caption and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"data\" type=\"datasource\" isList=\"true\" required=\"false\">\n\t<caption>Data source</caption>\n\t<description />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Selecting Fields with OData $select\nDESCRIPTION: Shows how to select specific fields to return in the query result using the $select option. This example selects only the Name and Age fields.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_7\n\nLANGUAGE: OData\nCODE:\n```\n?$select=Name,Age\n```\n\n----------------------------------------\n\nTITLE: Login Test Method with Selenium WebDriver\nDESCRIPTION: Test method to perform login by entering credentials and clicking submit with priority 2\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=2)\npublic void login() {\n    driver.findElement(By.cssSelector(\"#usernameInput\")).sendKeys(\"MxAdmin\");\n    driver.findElement(By.cssSelector(\"#passwordInput\")).sendKeys(\"1\");\n    driver.findElement(By.cssSelector(\"#loginButton\")).click();\n}\n```\n\n----------------------------------------\n\nTITLE: FULL OUTER JOIN on Association in OQL\nDESCRIPTION: This query shows how to use a FULL OUTER JOIN with an association between entities, which is more efficient when a relationship exists in the data model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_25\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nFULL OUTER JOIN Cust/Sales.Request_Customer/Sales.Request Req\n```\n\n----------------------------------------\n\nTITLE: Creating a Data Loading Microflow for Knowledge Base Integration\nDESCRIPTION: A microflow implementation that retrieves objects from a database, adds them to a chunk collection, and uploads them to a Mendix Cloud Knowledge Base. This process allows for grounding LLMs in application data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/how-to/ground_your_llm_in_data.md#2025-04-21_snippet_0\n\nLANGUAGE: microflow\nCODE:\n```\nACT_TicketList_LoadAllIntoKnowledgeBase\n- Retrieve Objects (From database, MyFirstModule.Ticket, All, TicketList)\n- Chunks: Initialize ChunkCollection (ChunkCollection)\n- Loop over TicketList (For each item)\n  - Chunks: Add KnowledgeBaseChunk to ChunkCollection ($ChunkCollection, $IteratorTicket/Description, empty, $IteratorTicket)\n- Retrieve MxCloudKnowledgeBase (From database, MxGenAIConnector.MxCloudKnowledgeBase, First, MxCloudKnowledgeBase)\n- Connection: Get (MxCloudKnowledgeBase, TicketSolutions, MxKnowledgeBaseConnection)\n- Embed & Repopulate Collection (MxKnowledgeBaseConnection, GenAICommons.ChunkCollection, IsSuccess)\n- Decision (Replace Success, Expression, $IsSuccess)\n  - true: End event (return true)\n  - false: End event (return false)\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Without Orders Having a Delivered Status Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all customers that do not have an order that has a status equal to 'Delivered' using an XPath query. Unlike the previous three queries, it also retrieves customers with no orders. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [not(Sales.Customer_Order/Sales.Order/Status = 'Delivered')]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[not(Sales.Customer_Order/Sales.Order/Status = 'Delivered')]\n```\n\n----------------------------------------\n\nTITLE: REST Service Custom HTTP Headers Configuration\nDESCRIPTION: Shows how to add custom HTTP headers to a REST service request, with caution about NGINX header handling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_2\n\nLANGUAGE: configuration\nCODE:\n```\nCustom HTTP Headers: { key: \"value\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS SQS Access Policy for Receiving Messages\nDESCRIPTION: Defines the AWS IAM policy to allow the Mendix Event Broker Bridge to receive messages from the defined SQS queue. The policy details the principal role, permissions, and SQS ARN.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/event-broker.md#2025-04-21_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"Sid\": \"__receiver_statement\",\n  \"Effect\": \"Allow\",\n  \"Principal\": {\n    \"AWS\": [\n      \"arn:aws:iam::044806572671:role/mendix-event-broker-bridge\"\n    ]\n  },\n  \"Action\": [\n    \"SQS:ChangeMessageVisibility\",\n    \"SQS:DeleteMessage\",\n    \"SQS:ReceiveMessage\"\n  ],\n  \"Resource\": \"<Tenant SQS ARN>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Skipping Records with $skip Parameter in OData URL\nDESCRIPTION: Example of how to skip a specific number of records in the result set by using the $skip query parameter. The parameter $skip=1 skips the first record in the result set.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/Expenses/Expenses?$skip=1\n```\n\n----------------------------------------\n\nTITLE: Configuring User Task for Manager Role in Mendix\nDESCRIPTION: This snippet describes the configuration steps for a user task assigned to the Manager role, focusing on specifying devices and location for a new hire. It covers setting task properties, XPath constraints, and creating a workflow page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Navigate to the **Toolbox** pane, find a **User task** activity, and drag it into the workflow editor.\n2. Select the **User task** activity and open the **Properties** pane.\n3. Set the **Name** property to **Specify_Device_and_Location**.\n4. Set the **Caption** property to **Manager: Specify Device and Location**.\n5. Configure the user task to be assigned to the Manager role using XPath: `[System.UserRoles = '[%UserRole_Manager%]']`.\n```\n\n----------------------------------------\n\nTITLE: Using Selectable Component in React\nDESCRIPTION: This code snippet defines a React functional component that utilizes the Selectable component from the Mendix preview library. It accepts a list of truck drivers as props and renders each one, making it selectable. Each selectable item displays the driver's name and age, and includes a caption based on their experience.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Selectable } from \"mendix/preview/Selectable\";\n\ntype TruckDriversType = {\n    name: string;\n    age: number;\n    isExperienced: boolean;\n}\n\ntype TruckWidgetPreviewProps = {\n    truckDrivers: TruckDriversType[];\n}\n\nexport const preview: React.FC<TruckWidgetPreviewProps> = (props) => (\n    <div className=\"my-pw-container\">\n        {props.truckDrivers.map((truckDriver, i) => (\n            <Selectable\n                object={truckDriver}\n                caption={truckDriver.isExperienced ? \"Awesome truck driver\" : undefined}\n                key={`truck_driver_${i}`}\n            >\n                <div className=\"my-pw-truck-driver\">\n                    <div>Name: {truckDriver.name}</div>\n                    <div>Age: {truckDriver.age}</div>\n                </div>\n            </Selectable>\n        ))}\n    </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Complete Widget XML Definition\nDESCRIPTION: This XML snippet shows the complete widget definition with the `content` and `headerCaption` properties. It also changes the `name` element and removes the `needsEntityContext` attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n    <widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\"\n        supportedPlatform=\"Native\"\n        xmlns=\"http://www.mendix.com/widget/1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n        <name>Group box</name>\n        <description />\n        <icon />\n        <properties>\n            <propertyGroup caption=\"General\">\n                <property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                    </property>\n                <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                    <caption>Header caption</caption>\n                    <description />\n                </property>\n            </propertyGroup>\n        </properties>\n    </widget>\n```\n\n----------------------------------------\n\nTITLE: Configuring List Operation in Mendix\nDESCRIPTION: Demonstrates the configuration of list operation properties, including selecting an action type (binary, member inspection, unary, or expression-based) and specifying input parameters and result variables\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/list-operation.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nList Operation\n- Action: Sort\n- Input List: CustomerList\n- Sort By: CustomerName\n- Result Variable: SortedCustomerList\n```\n\n----------------------------------------\n\nTITLE: Creating Order and OrderPosition Objects from Request Objects\nDESCRIPTION: This snippet highlights the microflow that retrieves request objects and applies the stored changes to create Order and OrderPosition objects while reducing the Stock count. It allows a seamless transition from request to applied changes within the domain model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/best-practices/request-object.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n---\n// Microflow to apply changes based on request objects\n// Retrieve request objects\n// Create Order and OrderPosition objects\n// Update Stock count\n---\n```\n\n----------------------------------------\n\nTITLE: Legend Position Configuration - Top (JSON)\nDESCRIPTION: This snippet configures the chart legend to be displayed at the top of the chart. The `orientation` is set to \"h\" for horizontal, and the `y` value is set to 1.1 to position it above the chart area.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": true,\n  \"legend\": {\n    \"orientation\": \"h\",\n    \"y\": 1.1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Children Component from React\nDESCRIPTION: This TypeScript import statement imports the `Children` component from the React library. The `Children` component is used to check if the GroupBox widget contains any child components (content).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n    Children,\n    Component,\n    ReactNode,\n    createElement,\n    ComponentClass\n} from \"react\";\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes from a Specific Entity with JOIN\nDESCRIPTION: Shows how to select all attributes from a specific entity in a joined query using the entity_name/* syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Request/*\nFROM Sales.Customer\nJOIN Sales.Customer/Sales.Customer_Request/Sales.Request\n```\n\n----------------------------------------\n\nTITLE: Converting Boolean to String with toString Function in Java\nDESCRIPTION: Demonstrates how to convert a Boolean value to a string representation using the toString function. Returns either 'true' or 'false' as a string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ntoString(true)\n```\n\n----------------------------------------\n\nTITLE: UNION with Different Types\nDESCRIPTION: Shows UNION operation between columns of different but compatible data types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_50\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sale as CombinedSale FROM Sales.BulkSales\nUNION\nSELECT Sale FROM Sales.Sales\n```\n\n----------------------------------------\n\nTITLE: Retrieving Thread Stack Traces in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for retrieving all thread stack traces from the Mendix Runtime. This is useful for low-level analysis of application behavior, showing the current execution state of all threads.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_all_thread_stack_traces\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\": {\n    \"qtp1967003817-95\":[\n      \"sun.misc.Unsafe.park(Native Method)\",\n      \"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\",\n      \"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)\",\n      \"java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\",\n      \"com.mendix.modules.microflowengine.debugger.internal.EventPusher.handleRequest(EventPusher.scala:18)\",\n      \"com.mendix.modules.microflowengine.debugger.internal.DebuggerHandler.processJsonRequest(DebuggerHandler.scala:124)\",\n      \"com.mendix.modules.microflowengine.debugger.internal.DebuggerHandler.processRequest(DebuggerHandler.scala:50)\",\n      \"com.mendix.externalinterface.connector.MxRuntimeConnector$1.execute(MxRuntimeConnector.java:69)\",\n      \"com.mendix.externalinterface.connector.MxRuntimeConnector$1.execute(MxRuntimeConnector.java:66)\",\n      \"com.mendix.util.classloading.Runner.doRunUsingClassLoaderOf(Runner.java:32)\",\n      \"com.mendix.externalinterface.connector.MxRuntimeConnector.processRequest(MxRuntimeConnector.java:72)\",\n      \"com.mendix.core.impl.MxRuntimeImpl.processRequest(MxRuntimeImpl.java:715)\",\n      \"com.mendix.m2ee.appcontainer.server.handler.RuntimeHandler.handle(RuntimeHandler.java:41)\",\n      \"org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\",\n      \"org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\",\n      \"org.eclipse.jetty.server.Server.handle(Server.java:368)\",\n      \"org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\",\n      \"org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)\",\n      \"org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)\",\n      \"org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:647)\",\n      \"org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\",\n      \"org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\",\n      \"org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)\",\n      \"org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\",\n      \"org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\",\n      \"org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\",\n      \"java.lang.Thread.run(Thread.java:745)\"\n    ],\n    \"pool-1-thread-10\":[\n      \"sun.misc.Unsafe.park(Native Method)\",\n      \"java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\",\n      \"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\",\n      \"java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)\",\n      \"java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)\",\n      \"java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)\",\n      \"java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\",\n      \"java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\",\n      \"java.lang.Thread.run(Thread.java:745)\"\n    ],\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Price of Orders using XPath in Java\nDESCRIPTION: This XPath query calculates the average total price of all placed orders. It uses the avg() function to aggregate the TotalPrice attribute of all Sales.Order entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-avg.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\navg(//Sales.Order/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Querying Orders for Current User with XPath in Mendix\nDESCRIPTION: XPath constraint to limit access to orders belonging to the currently logged-in customer. This ensures customers can only view their own orders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[Module.Order_Customer = '[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Using trim() Function in Mendix Expressions\nDESCRIPTION: The trim() function removes spaces from the beginning and end of a string. It returns the input string with leading and trailing whitespace removed, or an empty string if the input is empty.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\ntrim(' this is my string     ')\n```\n\nLANGUAGE: java\nCODE:\n```\ntrim($MyString)\n```\n\n----------------------------------------\n\nTITLE: Adding ID Property to Alert Component - TypeScript\nDESCRIPTION: This snippet defines the Alert component with an optional `id` property to support accessibility features in relation to the associated input fields.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface AlertProps {\n    id?: string;\n    alertStyle?: \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\";\n    className?: string;\n    children?: ReactNode;\n}\n    \nexport const Alert = ({ alertStyle = \"danger\", className, children, id }: AlertProps): ReactElement | null =>\n    children ? (\n        <div id={id} className={`alert alert-${alertStyle} mx-validation-message ${className}`}>    \n            {children}\n        </div>\n    ) : null;\n    \nAlert.displayName = \"Alert\";\n```\n\n----------------------------------------\n\nTITLE: Setting Image Options Extension for OpenAI Image Generation\nDESCRIPTION: This microflow adds a new `OpenAIImageOptions_Extension` to an `ImageOptions` object to define additional configurations for the image generation operation. These parameters are optional and customize the generation process by altering aspects like quality and style.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\nimage generation: Set ImageOptions Extension\n```\n\n----------------------------------------\n\nTITLE: Defining Base URL for App Repository API\nDESCRIPTION: Specifies the base URL endpoint that serves as the foundation for all App Repository API requests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nhttps://repository.api.mendix.com/v1\n```\n\n----------------------------------------\n\nTITLE: Calling Microflow with Parameters in OData POST Request (JSON)\nDESCRIPTION: Example of calling a microflow with parameters using a POST request in OData. The request body includes various parameter types including primitive types, dates, and booleans.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"FirstName\": \"John\",\n  \"LastName\": \"Doe\",\n  \"FirstWorkingDay\": \"20240101T00:00:00.000Z\",\n  \"CreatePayrollAccount\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Validation with Consistency Checks in TypeScript\nDESCRIPTION: Function definition for custom validation in Mendix Studio Pro. This shows how to define a check function that validates configured data and returns an array of problems that will be displayed in the Errors pane.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nfunction check(values: ValuesAPI): Problem[]\n```\n\n----------------------------------------\n\nTITLE: Creating a New Mendix App\nDESCRIPTION: This command creates a new Mendix app using the Studio Pro version associated with the mx tool. If a template file is not provided, a default empty project template will be used.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\n\"mx create-project [OPTIONS] [TEMPLATE-MPK-FILE]\"\n```\n\n----------------------------------------\n\nTITLE: Empty Value Comparison\nDESCRIPTION: Query to find customers with orders having empty status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/Status = empty]\n```\n\n----------------------------------------\n\nTITLE: Fetching Server Statistics in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for retrieving server statistics from the Mendix Runtime. The response includes information about the embedded Jetty web server, such as connections and threadpool configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"server_statistics\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"jetty\":{\n      \"current_connections\":0,\n      \"max_connections\":0,\n      \"max_idle_time_s\":200,\n      \"requests_active_max\":0\n    },\n    \"threadpool\": {\n      \"idle_threads\":3,\n      \"max_threads\":254,\n      \"threads_priority\":5,\n      \"threads\":8,\n      \"max_queued\":-1,\n      \"min_threads\":8,\n      \"max_idle_time_s\":60,\n      \"max_stop_time_s\":0\n    }\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Collapse Toggle Function in React\nDESCRIPTION: This method toggles the collapsed state of the group box when the header is tapped.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_27\n\nLANGUAGE: tsx\nCODE:\n```\nprivate toggleCollapsed = (): void => {\n    const collapsed = !this.state.collapsed;\n    this.setState({ collapsed });\n};\n```\n\n----------------------------------------\n\nTITLE: Query with Undefined Parameter in OR Condition\nDESCRIPTION: Demonstrates behavior when a parameter in an OR condition is undefined.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name\nFROM Sales.Person\nWHERE\n    Age > $param \n    OR\n    Job = 'Sales'\n```\n\n----------------------------------------\n\nTITLE: Adding a Request Body in Mendix REST Requests\nDESCRIPTION: How to add and configure request bodies for POST, PUT and PATCH requests in the Consumed REST Service document.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/consumed-rest-service.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nIf the request body content is static, paste the text into the **Body** tab. This text will be included as the body content when you send the request.\n\nWhen the text in the Body tab contains a parameter name surrounded by curly braces, it is interpreted as a parameter. These parameters can be used to change the body content dynamically.\n\nFor example, if your body content is `product_curr={currency}&product_price={price}`, the parameters `currency` and `price` can be used to change the body content.\n```\n\n----------------------------------------\n\nTITLE: End of Day Date Calculation in Java\nDESCRIPTION: Calculates the end of the day (23:59) for a given date using the endOfDay function. Takes a Date and time parameter and returns a Date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nendOfDay(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Rendering Expand/Collapse Icon (TSX)\nDESCRIPTION: This TypeScript snippet defines a `renderIcon` method in the display component (`GroupBox.tsx`) that renders either the `expandIcon` or `collapseIcon` based on the `collapsed` state. If the respective icon prop is not provided, it renders a default '+' or '-' sign.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\nprivate renderIcon = (): ReactNode => {\n    const { collapseIcon, expandIcon } = this.props;\n\n    if (this.state.collapsed) {\n        return expandIcon ? expandIcon : <Text style={this.styles.headerContent}>+</Text>;\n    }\n\n    return collapseIcon ? collapseIcon : <Text style={this.styles.headerContent}>-</Text>;\n};\n\n```\n\n----------------------------------------\n\nTITLE: Installing NPM dependencies for Mendix Native App\nDESCRIPTION: This command installs the required NPM dependencies for the Mendix native mobile app. For NPM versions 7 and above, the `--legacy-peer-deps` flag is needed to handle peer dependencies correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"npm install\"\n```\n\nLANGUAGE: javascript\nCODE:\n```\n\"npm install --legacy-peer-deps\"\n```\n\n----------------------------------------\n\nTITLE: Using Image Component with SVG Source\nDESCRIPTION: This JSX code demonstrates how to use the `Image` component provided by Mendix to display an SVG image in a pluggable native widget. The `source` property specifies the location of the SVG, and the `style` property allows for applying styling, such as setting the fill color.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n\"import { createElement } from \\\"react\\\";\\nimport { Image } from \\\"mendix/components/native/Image\\\";\\n\\nexport const PluggableWidget = () => (\\n    <Image source=\\\"PUT_SOURCE_HERE\\\" style={{ fill: 'blue' }} />\\n);\"\n```\n\n----------------------------------------\n\nTITLE: Connection Pooling Configuration\nDESCRIPTION: These settings control the behavior of the database connection pool used by the Mendix Runtime. The `ConnectionPoolingMaxActive` parameter sets the maximum number of active connections, `ConnectionPoolingMaxIdle` sets the maximum number of idle connections, and `ConnectionPoolingMinIdle` sets the minimum number of idle connections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingMaxActive\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingMaxIdle\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"ConnectionPoolingMinIdle\"\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix Pluggable Widget Generator\nDESCRIPTION: This command installs the Mendix Pluggable Widget Generator globally, allowing developers to scaffold a widget app using Yeoman. It requires Node.js, Yeoman, and internet access to fetch packages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install -g @mendix/generator-widget\n```\n\n----------------------------------------\n\nTITLE: Object Retrieval API Calls in Mendix Runtime\nDESCRIPTION: Examples of Mendix Core API calls for retrieving objects from the database or request scope. These methods demonstrate different ways to fetch objects, with some respecting the request scope cache and others always hitting the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/objects-and-caching.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nCore.retrieveByPath([..])\nCore.retrieveId([..])\nCore.retrieveIdList([..])\n```\n\n----------------------------------------\n\nTITLE: Data View Context and Source Configuration Errors\nDESCRIPTION: Explains consistency errors related to data view configuration, including issues with entity selection, microflow/nanoflow sources, and widget listening\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Error Code | Message in the Error Pane | Cause of the Error | Way to Fix |\n| ---------- | ------------------------- | ------------------ | ---------- |\n```\n\n----------------------------------------\n\nTITLE: Calling renderContent in Render Method\nDESCRIPTION: This TypeScript code snippet updates the render method to call the `renderContent` lambda method. This enables the conditional rendering of the content area based on whether the GroupBox widget has any content. The return of `renderContent()` determines whether the View with the content is displayed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            {this.renderContent()}\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Evaluating Employee Promotion to Medior Level in Mendix Expressions\nDESCRIPTION: An expression used in an Assert activity to check if an employee has been promoted to Medior level. It compares the employee's current level with the Medior enumeration value and provides a custom failure message showing the actual level if the assertion fails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/testing-microflows-with-unit-testing.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Expressions\nCODE:\n```\n$NewEmployee/Level = MyFirstModule.Level.Medior\n```\n\nLANGUAGE: Mendix Expressions\nCODE:\n```\n'Expected employee level to be Medior. Actual value: ' + getCaption($NewEmployee/Level)\n```\n\n----------------------------------------\n\nTITLE: Performing a GET Request for OData Service in Mendix - HTTP\nDESCRIPTION: This GET request retrieves attributes of the CustomerHomeAddress resource, specifying which attributes to select, the sorting order, and the number of objects needed. It's a simple way to query an OData service to get customer home address details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_14\n\nLANGUAGE: HTTP\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/CustomerHomeAddresses?$select=CustomerId,FullName,Street,City&$orderby=City+desc&$top=2\n```\n\n----------------------------------------\n\nTITLE: Importing ML Model in Mendix Studio Pro\nDESCRIPTION: Steps to import an ONNX logistic regression model into Mendix Studio Pro using the Machine Learning Kit. Requires Studio Pro 9.23 or above and involves adding the ML model mapping.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/using-ml-kit/logistic-regression-example.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\nAdd other > ML model mapping\n```\n\n----------------------------------------\n\nTITLE: Correct Font Family Definition\nDESCRIPTION: This CSS code demonstrates the recommended approach for defining font families in React Native, for Mendix native mobile apps, ensuring consistency across platforms. It defines a constant object with specific font family names for each weight and style combination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n\"export const timesNewRomanFontFamily = {\\n    regular: \\\"TimesNewRomanPSMT\\\",\\n    boldItalic: \\\"TimesNewRomanPS-BoldItalicMT\\\",\\n    bold: \\\"TimesNewRomanPS-BoldMT\\\",\\n    italic: \\\"TimesNewRomanPS-ItalicMT\\\",\\n};\"\n```\n\n----------------------------------------\n\nTITLE: Checking String Contains Substring in Java\nDESCRIPTION: Shows how to use the contains function to determine if a string contains a specific substring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\ncontains('stringtosearchin', 'stringtosearchfor')\n```\n\nLANGUAGE: java\nCODE:\n```\nfind('stringtosearchin', 'stringtosearchfor') != -1\n```\n\nLANGUAGE: java\nCODE:\n```\ncontains('stringtosearchin', $param)\n```\n\nLANGUAGE: java\nCODE:\n```\ncontains('thisismystring', 'my')\n```\n\n----------------------------------------\n\nTITLE: Configuring Rollback Object Properties in Mendix\nDESCRIPTION: Demonstrates the configuration options for the Rollback Object activity, including object selection and client refresh settings. This snippet highlights the key parameters for managing object rollback in microflows and nanoflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/rollback-object.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<!-- Rollback Object Properties -->\n<activity>\n    <object>VariableName</object>\n    <refreshInClient>No</refreshInClient>\n</activity>\n```\n\n----------------------------------------\n\nTITLE: Activities Documentation Structure\nDESCRIPTION: Markdown structure defining the categories and descriptions of different activities in Mendix Studio Pro, including their graphical representations and use cases in microflows and nanoflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Object Activities\n\nObject activities can be used to create and manipulate objects. The [domain model](/refguide8/domain-model/) defines the object types ([entities](/refguide8/entities/)) that can be used.\n\n| Graphic | Name | Description |\n| --- | --- | --- |\n| {{< figure src=\"/attachments/refguide8/modeling/application-logic/activities/cast-object.png\" alt=\"cast object\" link=\"/refguide8/cast-object/\" class=\"no-border\" >}} | [Cast object](/refguide8/cast-object/) *(microflows only)* | In combination with an [object type decision](/refguide8/object-type-decision/) allows you to use the specialized members of the object. |\n```\n\n----------------------------------------\n\nTITLE: Adding Label System Property in Widget Definition (XML)\nDESCRIPTION: This snippet demonstrates how to add a label property to the widget definition using the systemProperty element in XML. This allows the widget to display a label in the Mendix Modeler.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Label\">\n        <systemProperty key=\"Label\" />\n    </propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Adjusting Render Method in Container (TSX)\nDESCRIPTION: This TypeScript snippet adjusts the `render` method in the container component (`GroupBox.tsx`) to use the `renderIcon` method to pass the correct collapse and expand icons as props to the display component. It also ensures that the other necessary props are passed to the display component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_33\n\nLANGUAGE: typescript\nCODE:\n```\nrender(): ReactNode {\n    const { collapseIcon, expandIcon, content, headerCaption, style } = this.props;\n\n    const props: WrappedGroupBoxProps = {\n        headerCaption,\n        collapseIcon: this.renderIcon(collapseIcon, defaultCollapseIconGlyph),\n        expandIcon: this.renderIcon(expandIcon, defaultExpandIconGlyph),\n        style\n    };\n\n    return <WrappedGroupBox {...props}>{content}</WrappedGroupBox>;\n}\n\n```\n\n----------------------------------------\n\nTITLE: XPath Association Query\nDESCRIPTION: Illustrates querying across associations between entities using forward slashes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_2\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer/Sales.Customer_Order/Sales.Order\n```\n\n----------------------------------------\n\nTITLE: Creating HTTP Response Utility Methods in C# for Mendix Extension\nDESCRIPTION: This C# code defines utility methods for handling HTTP responses in the Mendix extension. It includes methods for sending file contents, JSON data, and empty responses with status codes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_10\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Net;\nusing System.Text;\n\nnamespace Mendix.ToDoExtension;\n\npublic static class HttpListenerResponseUtils\n{\n    public static async Task SendFileAndClose(this HttpListenerResponse response, string contentType, string filePath, CancellationToken ct)\n    {\n        response.AddDefaultHeaders(200);\n\n        var fileContents = await File.ReadAllBytesAsync(filePath, ct);\n\n        response.ContentType = contentType;\n        response.ContentLength64 = fileContents.Length;\n\n        await response.OutputStream.WriteAsync(fileContents, ct);\n\n        response.Close();\n    }\n\n    public static void SendJsonAndClose(this HttpListenerResponse response, MemoryStream jsonStream)\n    {\n        response.AddDefaultHeaders(200);\n\n        response.ContentType = \"application/json\";\n        response.ContentEncoding = Encoding.UTF8;\n        response.ContentLength64 = jsonStream.Length;\n\n        jsonStream.WriteTo(response.OutputStream);\n\n        response.Close();\n    }\n\n    public static void SendNoBodyAndClose(this HttpListenerResponse response, int statusCode)\n    {\n        response.AddDefaultHeaders(statusCode);\n\n        response.Close();\n    }\n\n    static void AddDefaultHeaders(this HttpListenerResponse response, int statusCode)\n    {\n        response.StatusCode = statusCode;\n\n        // Makes sure the web-code can receive responses\n        response.AddHeader(\"Access-Control-Allow-Origin\", \"*\");\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Compiling and Running TypeScript Script with tsc\nDESCRIPTION: This Bash command compiles a TypeScript script into JavaScript. Ensure that TypeScript is installed and configured with a 'tsconfig.json' file. The command operates on all files specified in the configuration. The expected output is a compiled '.js' file, which can be run using Node.js.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-your-first-script.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ tsc\n```\n\n----------------------------------------\n\nTITLE: Subscribe to Incoming Email using SubscribeToIncomingEmail Java Action\nDESCRIPTION: Java action to subscribe to incoming emails from an account. Takes email account and callback microflows for new emails and subscription state changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nSubscribeToIncomingEmail(\n  EmailAccount emailAccount,\n  onNewEmailReceivedMicroflow,\n  onSubscriptionStateChangedMicroflow\n)\n```\n\n----------------------------------------\n\nTITLE: Importing required classes for XPath retrieval\nDESCRIPTION: This snippet imports the necessary Java and Mendix classes for performing XPath queries. It includes classes for list manipulation (List), core Mendix functionalities (Core), and proxy classes for the Product and ProductState entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/extending-your-application-with-custom-java.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nimport java.util.List;\nimport com.mendix.core.Core;\nimport products.proxies.Product;\nimport products.proxies.ProductState;\n\n```\n\n----------------------------------------\n\nTITLE: Custom Sass Example\nDESCRIPTION: This snippet defines custom styles for page header elements using Sass. The styles change the text color for titles and subtitles in the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/sass-eight.md#2025-04-21_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\n.pageheader-title {\n\tcolor: red;\n}\n\n.pageheader-subtitle {\n\tcolor: green;\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Stored Procedures in Mendix\nDESCRIPTION: Describes how to call a stored procedure in Mendix Studio Pro 10.13 and above. Includes steps to select the stored procedure option, input the procedure call syntax with schema and procedure name, and handle parameters. Important considerations include handling result sets and understanding rollback behavior for DML and DDL commands.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-external-database-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nCall latest_schema.InsertDataIntoTable1({1},{2})\n```\n\n----------------------------------------\n\nTITLE: Query with NULL Parameter in OR Condition\nDESCRIPTION: Shows how the query behaves when a parameter is NULL in an OR condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name\nFROM Sales.Person\nWHERE\n    Age > NULL\n    OR\n    Job = 'Sales'\n```\n\n----------------------------------------\n\nTITLE: Initializing Box Chart Configuration in JSON\nDESCRIPTION: This snippet describes the configuration for a box chart using JSON format, specifying the x values to visualize statistical distributions. The expected output is a box chart representing the given data values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3, 4, 5 ],\n  \"type\": \"box\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Retrieving UserReportInfo Microflow\nDESCRIPTION: Microflow that ensures a UserReportInfo object exists for a given User. This is fundamental for user type classification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/populate-user-type.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nUser_RetrieveOrCreateUserReportInfo\n```\n\n----------------------------------------\n\nTITLE: Error Reporting Structure in JSON for Mendix\nDESCRIPTION: This JSON snippet represents the structure of error reports generated by MxBuild for a Mendix application. It includes the `problems` array, which contains objects detailing each error, warning, or deprecation. Key properties include `name`, `severity`, `message`, and `locations` for errors. This structure is useful for automated error handling and integration with logging systems.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mxbuild.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"problems\": [\n    {\n      \"name\": null,\n      \"severity\": \"Error\",\n      \"message\": \"Start event cannot be the last object of a flow.\",\n      \"locations\": [\n        {\n          \"elementId\": \"252e1008-d795-4e49-b3e3-2ba38eb0a56d\",\n          \"unitId\": \"1a8a3593-6f01-43a3-bc22-bd22f9244983\",\n          \"element\": \"Start event\",\n          \"document\": \"Microflow 'MyMicroflow'\",\n          \"module\": \"MyModule\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Basic XPath year-from-dateTime Function Syntax\nDESCRIPTION: Shows the basic syntax structure for the year-from-dateTime function which can accept an attribute and an optional timezone parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-year-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nyear-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Configuring Design Properties for Group Box Widget in settings-native.json\nDESCRIPTION: This JSON configuration adds a design property dropdown for the Group Box widget in Mendix Studio Pro. It defines three style options (Success, Warning, Danger) that map to the corresponding style classes created earlier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_50\n\nLANGUAGE: JSON\nCODE:\n```\n\"com.mendix.widget.native.groupbox.GroupBox\": [\n    {\n        \"name\": \"Group box style\",\n        \"type\": \"Dropdown\",\n        \"description\": \"Style of the group box.\",\n        \"options\": [\n            {\n                \"name\": \"Success\",\n                \"class\": \"groupBoxSuccess\"\n            },\n            {\n                \"name\": \"Warning\",\n                \"class\": \"groupBoxWarning\"\n            },\n            {\n                \"name\": \"Danger\",\n                \"class\": \"groupBoxDanger\"\n            }\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Packages via HTTP GET\nDESCRIPTION: Retrieves all deployment packages available for a specific app. Requires authentication headers and returns a list of package objects with details like ID, name, version, status etc.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/1/apps/calc/packages HTTP/1.1\nHost: deploy.mendix.com\nAccept: */*\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Handling Numeric Precision with Big.js\nDESCRIPTION: This snippet illustrates handling decimal precision using the Big.js library. It converts JavaScript numbers to Big objects to avoid precision errors common in JavaScript arithmetic. The example includes both the problem and the solution using Big.js library.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Precision limitation of JavaScript numbers\n0.1 + 0.2                  // 0.30000000000000004\n// Solved with BigJs\nx = new Big(0.1)\ny = x.plus(0.2)            // '0.3'\n```\n\n----------------------------------------\n\nTITLE: Displaying a Modal Dialog with Web Content in C#\nDESCRIPTION: This snippet details how to display a modal dialog within the Mendix framework by using the IDialogService API. The dialog is managed by 'WebViewModalDialogViewModel,' which must extend the base class and include necessary logic to initialize a web view.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-reference-guide/web-view.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nIDialogService.ShowDialog(...) // Shows a modal dialog in the UI\n```\n\n----------------------------------------\n\nTITLE: Complex Filtering with HAVING Clause - OQL\nDESCRIPTION: This snippet shows how to use the HAVING clause in combination with aggregate functions. The query filters brands based on their stock and number of locations, allowing for more detailed analysis of aggregated results. It emphasizes the flexibility of HAVING to enforce conditions on aggregated data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_35\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand\nFROM Sales.Location\nGROUP BY Brand\nHAVING COUNT(*) > 1 AND SUM(Stock) < 20\n```\n\n----------------------------------------\n\nTITLE: Query with Undefined Parameter in LIMIT Clause\nDESCRIPTION: Demonstrates a query that would throw an exception when using an undefined parameter in LIMIT.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name\nFROM Sales.Person\nORDER BY LastName\nLIMIT $param\n```\n\n----------------------------------------\n\nTITLE: Defining Public Documentation in Markdown\nDESCRIPTION: This snippet shows how to define the public documentation section in Markdown. The public documentation is used in the service's OpenAPI (Swagger) documentation page and supports GitHub-flavored markdown for rich text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-resource.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Public Documentation {#public-documentation}\n\nThe public documentation is used in the service's [OpenAPI (Swagger) documentation page](/refguide/published-rest-services/#interactive-documentation). You can use [GitHub-flavored markdown](/refguide/gfm-syntax/) for rich text.\n```\n\n----------------------------------------\n\nTITLE: Adding Days in Java UTC\nDESCRIPTION: The `addDays` function adds a specified number of days to a date using the server's calendar. The function requires the initial date and the number of days to add as input parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\naddDays(dateTime(2007, 1, 1, 1, 1, 1), 3)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 04 01:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Loading Files with Mendix Studio Pro API\nDESCRIPTION: An async function that loads the contents of 'HelloWorld.txt' using the studioPro.app.files.getFile API and displays the content in a message box.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/local-app-files-api.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst loadFile = async () => {\n  const message = await studioPro.app.files.getFile(\"HelloWorld.txt\");\n  studioPro.ui.messageBoxes.show(\n    \"info\",\n    `Loaded HelloWorld.txt it contained: ${message}`\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Committing Objects in Microflow Action\nDESCRIPTION: Configures the commit object(s) activity in a Mendix microflow, defining how objects are saved and processed. Supports committing single or multiple objects with options for event handling and client refresh.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/committing-objects.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nCommitObject(\n    Object: $MyEntity,\n    WithEvents: true,\n    RefreshInClient: false\n)\n```\n\n----------------------------------------\n\nTITLE: Creating ResNet Preprocessor with ONNX Operators in Python\nDESCRIPTION: Python implementation for creating a custom ONNX preprocessor for ResNet models using native ONNX operators. Includes image resizing and batch normalization steps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_5\n\nLANGUAGE: Python\nCODE:\n```\nfrom onnx import helper, version_converter\nfrom onnx import TensorProto\n\nimport numpy as np\n\nX = helper.make_tensor_value_info('X', TensorProto.FLOAT, [1, 3, None, None])\nsizes = helper.make_tensor_value_info('sizes', TensorProto.INT64, [4])\nn1 = onnx.helper.make_node(\n    'Resize',\n    inputs=['X', '', '', 'sizes'],\n    outputs=['T1'],\n    coordinate_transformation_mode='tf_crop_and_resize',\n    name='n1'\n)\n\nscale = helper.make_tensor_value_info('scale', TensorProto.FLOAT, [3])\nbias = helper.make_tensor_value_info('bias', TensorProto.FLOAT, [3])\nmean = helper.make_tensor_value_info('mean', TensorProto.FLOAT, [3])\nvar = helper.make_tensor_value_info('var', TensorProto.FLOAT, [3])\nn2 = onnx.helper.make_node(\n    'BatchNormalization',\n    inputs=['T1', 'scale', 'bias', 'mean', 'var'],\n    outputs=['Y'],\n    epsilon=0.0,\n    momentum=0.0,\n    name='n2'\n)\n\nY = helper.make_tensor_value_info('Y', TensorProto.FLOAT, [1, 3, 224, 224])\n\ngraph_def = helper.make_graph(\n    [n1, n2],\n    'preprocessor',\n    [X, sizes, scale, bias, mean, var],\n    [Y]\n)\n\nmodel_def = helper.make_model(graph_def, producer_name='onnx-example')\n\nonnx.save(model_def, 'preprocessor.onnx')\n```\n\n----------------------------------------\n\nTITLE: Date Picker Calendar Year Switcher Structure in HTML\nDESCRIPTION: Shows the new HTML structure for the year switcher in the date picker calendar, with previous, selected, and next year elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_17\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-calendar-year-switcher\">\n\t<span class=\"mx-calendar-year-previous\">2018</span>\n\t<span class=\"mx-calendar-year-selected\">2019</span>\n\t<span class=\"mx-calendar-year-next\">2020</span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: LIMIT Clause Query Example\nDESCRIPTION: Shows how to limit the number of returned rows using LIMIT clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_42\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, City, LocationNumber\nFROM Sales.Location\nORDER BY LocationNumber\nLIMIT 3\n```\n\n----------------------------------------\n\nTITLE: Starting the Widget Development Environment with npm\nDESCRIPTION: Command to start the development environment for a Mendix native widget. This bundles the widget and watches for changes in source files, automatically rebundling when changes are detected.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Defining IAM Policy for Existing S3 Bucket Access in JSON\nDESCRIPTION: This JSON defines an IAM policy that grants necessary permissions for a Mendix environment to access an existing S3 bucket. It allows actions like uploading, downloading, and deleting objects within the specified bucket.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n        \"Effect\": \"Allow\",\n        \"Action\": [\n            \"s3:AbortMultipartUpload\",\n            \"s3:DeleteObject\",\n            \"s3:GetObject\",\n            \"s3:ListMultipartUploadParts\",\n            \"s3:PutObject\"\n        ],\n        \"Resource\": [\n            \"arn:aws:s3:::<bucket_name>/*\"\n        ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Orders Having a Status Not Delivered Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all customers with an order that has a status different from 'Delivered' using an XPath query. Note that it does not retrieve customers with no orders. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order/Sales.Order/Status != 'Delivered']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Sales.Customer_Order/Sales.Order/Status != 'Delivered']\n```\n\n----------------------------------------\n\nTITLE: Retrieving an Order by ID in Mendix Microflow\nDESCRIPTION: This code snippet demonstrates how to set up a Retrieve activity in a Mendix microflow to fetch an Order based on the OrderID. It's configured to retrieve the first matching order from the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/publish-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nRetrieve\nSource: From database\nEntity: Order\nName: Order\nRange: First\nXPath constraint: [OrderID = $OrderIDLong]\n```\n\n----------------------------------------\n\nTITLE: Subtracting Numbers in Mendix - Java\nDESCRIPTION: Illustrates subtraction in Mendix with Java code, using the subtraction operator. Accepts Integer/Long or Decimal inputs, producing similar type outputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n5 - 4\n```\n\n----------------------------------------\n\nTITLE: Selecting a Microflow Button with jQuery in JavaScript\nDESCRIPTION: This snippet demonstrates the selection of a Microflow button named 'Execute' using jQuery. It requires jQuery to be included in the project and targets elements by their class name. The expected use is within an automated test script to trigger button actions identified by the Mendix framework-generated class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/selenium-support.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n$('.mx-name-Execute')\n\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Environment Snapshots Listing in Mendix Cloud\nDESCRIPTION: This is an example JSON response from the List Environment Snapshots API call. It shows a paginated list of snapshots with details including ID, state, creation time, and expiration date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"limit\": 5,\n\t\"offset\": 0,\n\t\"total\": 32,\n\t\"snapshots\": [\n\t\t{\n\t\t\t\"snapshot_id\": \"5deda9e2-f882-4925-830c-45e73c57366e\",\n\t\t\t\"model_version\": \"8.12.7.11687\",\n\t\t\t\"comment\": \"Uploaded snapshot\",\n\t\t\t\"expires_at\": \"2021-08-05T18:38:41.000Z\",\n\t\t\t\"state\": \"completed\",\n\t\t\t\"status_message\": \"Completed extraction\",\n\t\t\t\"created_at\": \"2021-05-05T18:38:41.000Z\",\n\t\t\t\"finished_at\": \"2021-05-05T18:40:12.000Z\",\n\t\t\t\"updated_at\": \"2021-05-05T18:40:12.000Z\"\n\t\t},\n\t\t{\n\t\t\t\"snapshot_id\": \"bf45ed4d-3308-4fb9-876b-36453ba149bf\",\n\t\t\t\"model_version\": \"8.12.7.11687\",\n\t\t\t\"comment\": \"Automatically created nightly snapshot\",\n\t\t\t\"expires_at\": \"2021-05-18T01:41:27.000Z\",\n\t\t\t\"state\": \"completed\",\n\t\t\t\"status_message\": \"Completed backup creation\",\n\t\t\t\"created_at\": \"2021-05-04T01:41:27.000Z\",\n\t\t\t\"finished_at\": \"2021-05-04T01:45:47.000Z\",\n\t\t\t\"updated_at\": \"2021-05-04T01:45:47.000Z\"\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Thread Stack Traces from Mendix Runtime\nDESCRIPTION: API endpoint that returns detailed stack traces for all running threads in the application for low-level analysis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_all_thread_stack_traces\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Exporting from Module\nDESCRIPTION: This JavaScript code exports all members from the specified module's custom variables file. This makes the variables defined in the module available for use in the main application theme. The path to the module should be updated to reflect the actual location of the module's custom variables file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n\"export * from \\\"../../themesource/mytheme/native/custom-variables\\\";\"\n```\n\n----------------------------------------\n\nTITLE: Breaking Change Example - Widget Class Format\nDESCRIPTION: Example showing the change in menu widget class naming convention from GUID-based to widget-name-based format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.5.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nmx-name-GUID-NUMBER\\nmx-name-WIDGETNAME-NUMBER\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Specific Dependencies using CocoaPods\nDESCRIPTION: This Bash script changes the working directory to the 'ios' folder and runs 'pod install' to install iOS-specific dependencies using CocoaPods. It is a crucial step for setting up the iOS project in Xcode for the Mendix native mobile app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\ncd ios\npod install\n```\n\n----------------------------------------\n\nTITLE: Creating Module Package - Mendix Command-Line Tool\nDESCRIPTION: This command exports a module package from a Mendix application, allowing options to filter required libraries or exclude specified files. The input includes the target .mpr app and the module name to be exported.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/export.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nmx create-module-package [OPTIONS] TARGET-FILE MODULE-NAME\n\nOPTIONS:\n  -l, --filter-required-libs   Includes all the files except the userlibs that do not have an accompanying [ModuleName].RequiredLib file.\n  -e, --exclude-files          Excludes all the files that match the given regular expression.\n  -d, --package-dir            Exports the module package to the directory.\n  --help                       Displays the help screen.\n\nTARGET-FILE: Specify the *.mpr* app you want to export.\nMODULE-NAME: Specify the name of the module you want to export.\n```\n\n----------------------------------------\n\nTITLE: Subtracting Weeks from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 2 weeks from a specific date and time using the subtractWeeks function. The function takes a datetime value and an integer representing weeks to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nsubtractWeeks(dateTime(2007, 1, 15, 1, 1, 1), 2)\n```\n\n----------------------------------------\n\nTITLE: Example Microflow Call Activity Usage\nDESCRIPTION: Example usage of CreateMicroflowCallActivity method showing how to create call activities for multiplication and addition operations with specific parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_10\n\nLANGUAGE: csharp\nCODE:\n```\nCreateMicroflowCallActivity(currentApp, callingMicroflow, mathMicroflow,\n   outputVariableName,\n   (\"multiplication1\", \"10\"),\n   (\"multiplication2\", \"100\"));\n\nCreateMicroflowCallActivity(currentApp, callingMicroflow, additionMicroflow,\n   outputVariableName,\n   (\"addition1\", \"1.2\"),\n   (\"addition2\", \"2.2\"));\n```\n\n----------------------------------------\n\nTITLE: Setting Pagination Parameters in TypeScript\nDESCRIPTION: Example showing how to set offset and limit parameters for paginating datasource results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nthis.props.myDataSource.setOffset(20);\nthis.props.myDataSource.setLimit(10);\n```\n\n----------------------------------------\n\nTITLE: Merging ONNX Preprocessor with ResNet Model\nDESCRIPTION: Demonstrates how to load, combine and save two ONNX artifacts - a preprocessor and a ResNet model. The code uses onnx.compose.merge_models to combine the preprocessor with the ResNet model, mapping the output 'Y' to the input 'data'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\npreporcessor = onnx.load('preprocessor.onnx')\nresnet = onnx.load('resnet50-v1-12-int8.onnx')\n\ncombined_model = onnx.compose.merge_models(\n    preporcessor, resnet,\n    io_map=[('Y', 'data')]\n)\n\nonnx.save(combined_model, 'combined_resnet.onnx')\n```\n\n----------------------------------------\n\nTITLE: Configuring OperatorConfiguration for Services in Mendix for Private Cloud\nDESCRIPTION: This YAML configuration example demonstrates how to set up services for network endpoints in Mendix for Private Cloud. It includes options for service type, annotations, and ports, which are particularly useful for integrating with service meshes or load balancers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-services-only.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # ...\n  # Other configuration options values\n  # Endpoint (Network) configuration\n  endpoint:\n    # Endpoint type: ingress, openshiftRoute, or service\n    type: service\n    # Optional, can be omitted: the Service type\n    serviceType: LoadBalancer\n    # Optional, can be omitted: Service annotations\n    serviceAnnotations:\n      # example: annotations required for AWS NLB\n      service.beta.kubernetes.io/aws-load-balancer-type: external\n      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\n      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n    # Optional, can be omitted: Service ports\n    servicePorts:\n      - 80\n      - 443#\n      ...\n# ...      \n# omitted lines for brevity\n# ... \n```\n\n----------------------------------------\n\nTITLE: Rendering Icon for Collapsible Group Box in TypeScript\nDESCRIPTION: This TypeScript snippet renders the appropriate icon for a collapsible Group Box based on its current state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_48\n\nLANGUAGE: TypeScript\nCODE:\n```\nprivate renderIcon = (): ReactNode => {\n    const { collapsible, collapseIcon, expandIcon } = this.props;\n\n    if (!collapsible) {\n        return null;\n    }\n\n    if (this.state.collapsed) {\n        return expandIcon ? expandIcon : <Text style={this.styles.headerContent}>+</Text>;\n    }\n\n    return collapseIcon ? collapseIcon : <Text style={this.styles.headerContent}>-</Text>;\n};\n```\n\n----------------------------------------\n\nTITLE: Example Build Command with Native Builder CLI\nDESCRIPTION: This snippet showcases an example of a build command within the Native Builder CLI environment, demonstrating the structure and parameters. The command is designed to be customized with specific project information, including project name, build number, and app version. The curly braces indicate placeholder values that should be replaced with actual data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/deploying-native-app-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n\"native-builder.exe build --project-name {ExampleName} --build-number {1} --app-version {0.1.0}\"\n```\n\n----------------------------------------\n\nTITLE: Network Optimization Pseudocode\nDESCRIPTION: Two optimization modes for data retrieval in Mendix: Network Round Trips returns all attributes and caches objects, while Network Load returns only required attributes without caching.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/datasource-runtime-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n// Network Round Trips Mode\nfetch(orderLine) {\n    return allAttributes        // Returns all entity attributes\n    cacheObject(response)      // Caches complete object\n    updateUI(immediately)      // Updates UI without reload\n}\n\n// Network Load Mode\nfetch(orderLine) {\n    return requestedAttributesOnly   // Returns only needed attributes\n    skipCache()                     // Does not cache objects\n    updateUI(onReload)              // Updates UI on data reload\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Document Context Menu Extension in C#\nDESCRIPTION: This snippet demonstrates implementing a context menu extension for documents in Mendix Studio Pro. It creates context menu items specific to document types like microflows and pages, showing how to handle different document types with type checking.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-context-menu.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace MyCompany.MyProject.MendixExtension;\n\n[method: ImportingConstructor]\n[Export(typeof(ContextMenuExtension<>))]\nclass MyDocumentContextMenuExtension(IMessageBoxService messageBoxService) : ContextMenuExtension<IDocument>\n{\n    public override IEnumerable<MenuViewModel> GetContextMenus(IDocument document)\n    {\n        if (document is IMicroflow microflow)\n            yield return new MenuViewModel(\"This document is a  microflow\", () => messageBoxService.ShowInformation(microflow.Name));\n\n        else if (document is IPage page)\n            yield return new MenuViewModel(\"This document is a  page\", () => messageBoxService.ShowInformation(page.Name));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Logging Configuration\nDESCRIPTION: YAML configuration example for setting up logsubscribers in the Settings.yaml file. The Logging property must start with an uppercase letter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/windows-service.md#2025-04-21_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nLogging:\n  logsubscribers:\n    # Additional logging configuration goes here\n```\n\n----------------------------------------\n\nTITLE: OData Query Examples\nDESCRIPTION: This code snippet provides examples of different OData query URLs that can be used to filter and retrieve specific data from a Mendix application through its published OData service. These queries demonstrate filtering by ID, counting entities, and filtering based on field values and date ranges.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Module-Level Custom Native Variables in JavaScript\nDESCRIPTION: The module-specific custom variables file for native mobile styling. This contains brand color definitions that can be reused across applications that import this module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nexport const brand = {\n    primary: \"#264AE5\",\n    success: \"#3CB33D\",\n    warning: \"#ECA51C\",\n    danger: \"#E33F4E\",\n    info: \"#0086D9\",\n    primaryLight: \"#0086D9\",\n    successLight: \"#F1FCF1\",\n    warningLight: \"#FFF9E6\",\n    dangerLight: \"#FFEEF0\",\n    infoLight: \"#ECF9FF\"\n};\n```\n\n----------------------------------------\n\nTITLE: Querying Specific Customer Orders in SQL\nDESCRIPTION: Demonstrates the use of the equality operator to retrieve orders for a specific customer named 'Moose'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Number FROM Sales.Order WHERE LastName = Moose\n```\n\n----------------------------------------\n\nTITLE: XSD Schema Footer for Country Import\nDESCRIPTION: XML Schema Definition footer that completes the structure for the country import document. This forms the closing part of the XSD file used for XML-to-domain mapping in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n```\n\n----------------------------------------\n\nTITLE: End of Week Date Calculation in Java\nDESCRIPTION: Calculates the end of the week (23:59 on last day) based on user's locale using the endOfWeek function. Takes a Date and time parameter and returns a Date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nendOfWeek(dateTime(2007, 2, 7, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Listing Available Releases with Native Builder CLI\nDESCRIPTION: Retrieves a list of available releases for a given project using Native Builder CLI. Replace `\"CoolApp\"` with the name of your project to fetch corresponding release information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\n`native-builder.exe release list --project-name \"CoolApp\"`\n```\n\n----------------------------------------\n\nTITLE: Building Custom Developer App - Powershell\nDESCRIPTION: This command builds your project's custom developer app using the Native Builder CLI. Replace '{your project's name}' with the name of your project. The command creates a 'developer' branch and initiates the build process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-devapps-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nnative-builder.exe build dev-app --project-name {your project's name}\n```\n\n----------------------------------------\n\nTITLE: Debugging Java Actions in Eclipse\nDESCRIPTION: This snippet describes the steps for debugging Java actions in Eclipse, including starting the application in debug mode, using debug tools, and inspecting variable values during execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/debug-java-actions/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n1. Select the app root node in the package explorer and click the debug icon in the Eclipse toolbar:\n2. The application will now be started with Eclipse attached as debugger.\n3. As soon as the deployment process is ready, open the application in your browser and trigger the Java action:\n4. Open Eclipse. You should now see the \"debug\" perspective of Eclipse.\n5. Click **Step into** (or press <kbd>F5</kbd>) or **Step over** (or press <kbd>F6</kbd>) to move on the next step in the microflow.\n```\n\n----------------------------------------\n\nTITLE: Styling Tab Container Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the Tab Container widget in Mendix native mobile applications. It includes styles for the container, tab bar, indicator, tab, label, active label, badge container, and badge caption. The tabBar object includes properties specific to tab behavior and appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nexport const TabContainer = {\n  container: {\n    // All ViewStyle properties   \n  },\n  tabBar: {\n    // All ViewStyle properties\n    bounces: null, // This is a Boolean value indicating whether the tab bar bounces when scrolling.\n    pressColor: null, // This is a color for material ripple (Android only).\n    pressOpacity: null, // This is opacity for a pressed tab.\n    scrollEnabled: null, // This is a Boolean value enabling scrollable tabs.\n    tabBarPosition: 'top' // This is the position of the tab bar in the tab view, and possible values are `top` and `bottom`. \n  },\n  indicator: {\n    // All ViewStyle properties   \n  },\n  tab: {\n    // All ViewStyle properties   \n  },\n  label: {\n    // All TextStyle properties   \n  },  \n  activeLabel: {\n    // All TextStyle properties   \n  },\n  badgeContainer: {\n    // All ViewStyle properties   \n  },\n  badgeCaption: {\n    // All TextStyle properties   \n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Notification Tap Handler Nanoflow\nDESCRIPTION: Creates ON_tapNotification nanoflow to handle notification tap events and retrieve associated objects by GUID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_5\n\nLANGUAGE: mendix\nCODE:\n```\nNanoflow: ON_tapNotification\n  1. Parameter: notificationEntity (Type: Notification)\n  2. JavaScript Action: GetObjectByGuid\n     - Input: $NotificationEntity/GUIDString\n     - Output: ReturnedObjectByGUID\n```\n\n----------------------------------------\n\nTITLE: Updating GroupBox Props Interface with Icon Properties\nDESCRIPTION: TypeScript React interface that defines the props for the GroupBox display component, including new collapseIcon and expandIcon properties to support custom icons for expand/collapse actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_32\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxProps {\n    collapseIcon?: ReactNode;\n    expandIcon?: ReactNode;\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Selectable Objects in TypeScript\nDESCRIPTION: This example demonstrates how to create a list of selectable objects in a widget preview. It shows how to use the Selectable type to make object instances behave like widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nexport function getPreview(values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) {\n    const container: ContainerProps = {\n        type: \"Container\",\n        borders: true,\n        children: [\n            { type: \"Text\", fontSize: 18, content: \"List with selectable elements\" }\n        ],\n    };\n\n    for (const item of values.myObjectProp) {\n        container.children!.push({\n            type: \"Selectable\",\n            object: item,\n            child: {\n                type: \"Text\",\n                fontColor: \"#2A2C96\",\n                content: item.caption\n            },\n        });\n    }\n    return container;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Symmetric Error Bar Configuration in JSON\nDESCRIPTION: This snippet shows the configuration for a symmetric error bar chart in JSON format, outlining x and y values along with error arrays. The expected output will visually represent data points along with their associated errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 0, 1, 2 ],\n  \"y\": [ 6, 10, 2 ],\n  \"error_y\": {\n    \"type\": \"data\",\n    \"array\": [ 4, 2, 3 ]\n  },\n  \"type\": \"scatter\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Validation Logic in TextBox Component - TypeScript\nDESCRIPTION: This code snippet demonstrates how to implement a custom validation method in the TextBox component, which checks if the requiredMessage property is populated and if the input value is present. Validation messages are applied as necessary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_7\n\nLANGUAGE: ts\nCODE:\n```\ncomponentDidMount(): void {\n    this.props.textAttribute.setValidator(this.validator.bind(this));\n}\n\nprivate validator(value: string | undefined): string | undefined {\n    const { requiredMessage } = this.props;\n    if (requiredMessage && requiredMessage.value && !value) {\n        return requiredMessage.value;\n    }\n    return;\n}\n```\n\n----------------------------------------\n\nTITLE: Date Output Format Example in Mendix\nDESCRIPTION: Examples of how date objects are formatted as strings when returned by the dateTime function, showing the standard output format with timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 00:00:00 CET 2007\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 00:00:00 CET 2007\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 00:00:00 CET 2007\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:00:00 CET 2007\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:00 CET 2007\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Add Disabled Property to TextInput Component (TSX)\nDESCRIPTION: This snippet modifies the `TextInput.tsx` file by adding a `disabled` property to the `InputProps` interface and setting the HTML input attribute to `disabled`. This allows the TextInput component to be disabled, preventing user interaction and modifying its appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { CSSProperties, ChangeEvent, Component, ReactNode, createElement } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    onUpdate?: (value: string) => void;\n    disabled?: boolean;\n}\n\nexport class TextInput extends Component<InputProps> {\n\n    private readonly handleChange = this.onChange.bind(this);\n\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.props.value}\n            tabIndex={this.props.tabIndex}\n            onChange={this.handleChange}\n            disabled={this.props.disabled}\n        />;\n    }\n\n    private onChange(event: ChangeEvent<HTMLInputElement>) {\n        if (this.props.onUpdate) {\n            this.props.onUpdate(event.target.value);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Initialize List with Microflow Java Action\nDESCRIPTION: Java implementation for creating and initializing a list of objects. This action creates a specified number of objects, optionally copies values from a default object, and calls an initialization microflow for each new object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-connector-kit.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n  @Override\n  public List<IMendixObject> executeAction() throws Exception {\n    // BEGIN USER CODE\n    var logger = Core.getLogger(\"MyLogNode\");\n    logger.info(String.format(\"creating list of %d %s objects, initialized by %s\",\n        this.ListSize, this.ResultEntity, this.InitializationMicroflow));\n\n    // Create a list to return with all the instantiated objects\n    var resultList = new ArrayList<IMendixObject>();\n\n    for (int i = 0; i < this.ListSize; i++) {\n      // create new object of type resultentity\n      var newObject = Core.instantiate(getContext(), this.ResultEntity);\n\n      if (this.DefaultObject != null) {\n        // copy values from default object\n        for (var entry : DefaultObject.getMembers(getContext()).entrySet()) {\n          var member = entry.getValue();\n\n          if (member.isVirtual() ||\n              member instanceof MendixObjectReference ||\n              member instanceof MendixObjectReferenceSet ||\n              member instanceof MendixAutoNumber) {\n            continue;\n          }\n\n          newObject.setValue(this.getContext(), entry.getKey(), member.getValue(this.getContext()));\n        }\n      }\n\n      // run the specified initialization microflow\n      Core.microflowCall(this.InitializationMicroflow)\n          .withParam(\"objectToInit\", newObject)\n          .inTransaction(true)\n          .execute(getContext());\n\n      // add new object to list\n      resultList.add(newObject);\n    }\n\n    return resultList;\n    // END USER CODE\n  }\n```\n\n----------------------------------------\n\nTITLE: XML Representation of One-to-One Association\nDESCRIPTION: This snippet shows the XML representation of a one-to-one association between Profile and Customer entities in Mendix. The association is stored in both the Profile and Customer elements, referencing each other's IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<Profile id=\"401\">\n\t<religion>Buddhism</religion>\n\t<job>Chief Executive Officer</job>\n\t<website>http://www.apple.com/ </website>\n\t<Customer_Profile>id_201</Customer_Profile>\n</Profile>\n\n<Customer id=\"201\">\n\t<fullname>Steve Jobs</fullname>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n\t<Customer_Profile>id_401</Customer_Profile>\n</Customer>\n\n```\n\n----------------------------------------\n\nTITLE: SQL Server User and Role Creation for Managed Identity\nDESCRIPTION: SQL commands to create a user from external provider and assign database manager role\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nCREATE USER [<sql-admin-identity-name>] FROM EXTERNAL PROVIDER;\nGO\nALTER ROLE dbmanager ADD MEMBER [<sql-admin-identity-name>];\nGO\nquit\n```\n\n----------------------------------------\n\nTITLE: Using If Expressions in Java for Conditional Actions\nDESCRIPTION: This snippet demonstrates how to utilize if expressions within a Change variable activity in Mendix. The expression evaluates a condition and assigns a string value based on the result. Key parameters include the condition to evaluate and the values to return based on the evaluation's outcome. The expected input is a valid conditional expression with corresponding output values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/if-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nif 7 > 6 then 'correct' else 'incorrect'\n```\n\n----------------------------------------\n\nTITLE: Adding Months to Date in Java\nDESCRIPTION: Demonstrates adding 13 months to a date using addMonths function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\naddMonths(dateTime(2007, 1, 1, 1, 1, 1), 13)\n```\n\n----------------------------------------\n\nTITLE: Calculating Date Difference in Months - SQL\nDESCRIPTION: This snippet calculates the difference in months between the End and Start dates in the Sales.Period table using the DATEDIFF function, which helps understand the duration of sales periods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_23\n\nLANGUAGE: sql\nCODE:\n```\nSELECT DATEDIFF(MONTH , End, Start ) as difference FROM Sales.Period\n```\n\n----------------------------------------\n\nTITLE: Selecting Attributes Over Associations\nDESCRIPTION: Demonstrates how to access attributes of associated objects using path notation, retrieving data across related entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tNumber AS RequestNumber,\n\tSales.Request/Sales.Request_Customer/Sales.Customer/LastName AS CustomerName\nFROM Sales.Request\n```\n\n----------------------------------------\n\nTITLE: JavaScript Layout for Barcode Scanner Styles\nDESCRIPTION: JavaScript snippet illustrating the layout and style properties for the barcode scanner widget, including 'container' and 'mask' elements to determine camera view and mask styling. Lists dependencies, such as knowledge of JavaScript and image processing within Mendix apps, and handles border and background styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n<container>\n        <mask />\n<container />\n```\n\n----------------------------------------\n\nTITLE: String to Number Conversion Query\nDESCRIPTION: Query demonstrating implicit conversion of string to number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Order[TotalPrice >= '42']\n```\n\n----------------------------------------\n\nTITLE: Finding Minimum Total Price using min() - Java\nDESCRIPTION: The 'min()' function retrieves the minimum value from the specified numeric attribute. The output will be the minimum total price found within the queried data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-aggregate-functions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nmin(//Sales.Order/TotalPrice)\n```\n\nLANGUAGE: java\nCODE:\n```\nmin(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: AND Operator Example in Java\nDESCRIPTION: Demonstrates the use of the 'and' operator to check if both boolean expressions are true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n(6 > 4) and (3 < 5)\n```\n\nLANGUAGE: java\nCODE:\n```\n('hello' = 'hallo') and (3 < 5)\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Certificate Usages in Custom Settings (Shell)\nDESCRIPTION: Example of the ClientCertificateUsages custom setting value that maps specific web services and REST endpoints to their corresponding certificate files. Paths must use doubled backslashes and the entire value should be enclosed in braces.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/use-a-client-certificate.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n{ \"Module.WebService1\": \"D:\\\\App\\\\Mx1.pfx\", \"www.server-to-contact.com\": \"D:\\\\App\\\\Mx2.pfx\" }\n```\n\n----------------------------------------\n\nTITLE: OQL Query Using RANGEBEGIN Function\nDESCRIPTION: Example OQL query that uses the RANGEBEGIN function to select customers born since the beginning of last week. This demonstrates how RANGEBEGIN is used to extract the start of a date range.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangebegin.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT FirstName AS First, LastName AS Last, Name AS Name, Birthday AS BDay, CustomerType AS Type FROM Sales.Customer\nWHERE Birthday > RANGEBEGIN($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Rendering React Native Components in TypeScript\nDESCRIPTION: Implements a custom render method for a React Native widget using built-in components like View and Text. This snippet does not require specific Mendix APIs, making it compatible with any React Native app. It highlights the use of styles for component rendering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>Header caption</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            <View style={this.styles.content}>\n                <Text>Content</Text>\n            </View>\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting About Information - JSON\nDESCRIPTION: This snippet represents a JSON request that queries for information about the Mendix Runtime. It includes an action specifying 'about' and an empty parameters object. The request structure allows clients to retrieve relevant metadata about the Mendix Runtime environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"about\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Updating Object Attributes via JSON in Mendix\nDESCRIPTION: This JSON payload represents a request to change an object's attributes in Mendix.  It specifies the \"change\" action, includes a parameter with the GUID of the object to be modified, and the attributes to be updated. The \"Firstname\" attribute of the object with the specified GUID will be updated to \"peter1\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"change\",\n   \"params\":{\n      \"281474976710757\":{\n         \"Firstname\":\"peter1\"\n      }\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee8bb633f9a0\":25\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Core Resources in OperatorConfiguration for GKE Autopilot\nDESCRIPTION: YAML configuration patch file example for setting equal resource requests and limits in the OperatorConfiguration to align with GKE Autopilot requirements. This ensures resource settings for build, metrics-sidecar, and other containers meet Google's balanced allocation requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  buildResources:\n    limits:\n      cpu: \"1\"\n      memory: 256Mi\n      ephemeral-storage: 2Gi\n    requests:\n      cpu: \"1\"\n      memory: 256Mi\n      ephemeral-storage: 2Gi\n  metricsSidecarResources:\n    limits:\n      cpu: 100m\n      memory: 32Mi\n      ephemeral-storage: 4Mi\n    requests:\n      cpu: 100m\n      memory: 32Mi\n      ephemeral-storage: 4Mi\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Nested Constraints\nDESCRIPTION: This snippet uses nested constraints to target customers living in Rotterdam or Losdun, exemplifying tunnel limiting within larger data contexts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address[City = 'Rotterdam' or City = 'Losdun']]\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Less than or equal to Operator\nDESCRIPTION: Details the less than or equal to operator that checks if a value is either less than or equal to another in OQL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n| `<=` | Less than or equal to | `Price <= 9.80` returns true if price is 9.80, false if price is 9.90. |\n```\n\n----------------------------------------\n\nTITLE: Extracting Quarter using XPath in Java\nDESCRIPTION: This XPath query snippet retrieves logs where the DateAttribute is in the fourth quarter. The function quarter-from-dateTime() is used to determine the quarter from a DateTime attribute, enabling quarter-based comparisons. Ensure that the DateAttribute is of Date and time type for this query to function as intended.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-quarter-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n//Logging.Log[quarter-from-dateTime(DateAttribute) = 4]\n```\n\n----------------------------------------\n\nTITLE: Processing GitHub API Response with JavaScript\nDESCRIPTION: This JavaScript snippet processes the JSON response from the GitHub API. It extracts the total count and maps the items array to create an array of GitHub users, using the `createGitHubUser` function. It then uses `Promise.all` to ensure all the user creations are completed before returning.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n                logger.debug(\"count\", jsonData.total_count);\n                var gitHubUsers = jsonData.items.map(createGitHubUser);\n                return Promise.all(gitHubUsers);\n            });\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Title and Font Properties in JSON\nDESCRIPTION: Defines the customization options for the chart title, including title text and font attributes like family, size, and color.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"title\": \"CHART TITLE\",\n  \"titlefont\": {\n    \"family\": \"Droid Sans, Droid Serif, sans-serif\",\n    \"size\": 20,\n    \"color\": \"black\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Epoch to DateTime in Java (Mendix)\nDESCRIPTION: Shows how to use the epochToDateTime function to create a Date and time value from the number of milliseconds since January 1, 1970, 00:00:00 GMT.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nepochToDateTime(141990610000)\n```\n\n----------------------------------------\n\nTITLE: Filtering Records with Not Equal Comparison in OData\nDESCRIPTION: Example of filtering records where a specific field does not equal a particular value. This query retrieves Engineers whose Name is not 'Kim'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers?$filter=Name+ne+'Kim'\n```\n\n----------------------------------------\n\nTITLE: Describing Java Operators - Java\nDESCRIPTION: This snippet presents additional operators that can only be used in Java code within Mendix applications, specifying their functionality along with examples and return values. Operators include '+', '-', '*', and 'div'. Expected inputs are numeric expressions, and outputs are the results of those calculations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n| `+` | Addition | `6 + 4` | 10 |\n| `-` | Subtraction | `6 - 4` | 2 |\n| `*` | Multiplication | `6 * 4` | 24 |\n| `div` | Division | `8 div 4` | 2 |\n```\n\n----------------------------------------\n\nTITLE: Creating Date with All Parameters\nDESCRIPTION: Creates a datetime object using all available parameters: year, month, day, hour, minute, and second. Returns fully specified date and time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Configuration in Studio Pro\nDESCRIPTION: Configuration steps for setting up a PostgreSQL database connection in Mendix Studio Pro, including database type, URL, username, and password\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_1\n\nLANGUAGE: configuration\nCODE:\n```\nDatabase Type: PostgreSQL\nDatabase Name: default\nURL: postgresql://localhost:5432\nUser Name: postgres\nPassword: [admin_password]\n```\n\n----------------------------------------\n\nTITLE: Multiple UNION Query\nDESCRIPTION: Demonstrates chaining multiple UNION operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_49\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName AS Name FROM Sales.SalesPerson\nUNION\nSELECT FirstName AS Name FROM Sales.Customer\nUNION\nSELECT LastName AS Name FROM Sales.SalesPerson\nUNION\nSELECT LastName AS Name FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Filtering by Reference Set in Mendix\nDESCRIPTION: Code that filters objects that are associated with specific objects from a selectable objects data source. Uses the 'contains' filter builder to check if the reference set contains the specified objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { association, literal, notEquals, contains } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAssociationReferenceSet.filterable) {\n    // assuming those two objects are available\n    const objectItem1 = this.props.mySelectableObjects.items[0];\n    const objectItem2 = this.props.mySelectableObjects.items[1];\n    \n    const filterCond = contains(association(this.props.myAssociationReferenceSet.id), literal([objectItem1, objectItem2]));\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Association is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GroupBoxProps Interface with Header Caption\nDESCRIPTION: This TypeScript interface defines the properties for the GroupBox component. It includes an optional `headerCaption` property of type string, allowing Mendix developers to configure the header text in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface GroupBoxProps {\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n```\n\n----------------------------------------\n\nTITLE: Security Groups List JSON Response\nDESCRIPTION: Example JSON response from the get all security groups endpoint, showing details of multiple groups including their names, descriptions, UUIDs, member counts, and lock statuses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"groups\": [\n        {\n            \"name\": \"Test group\",\n            \"description\": \"This is a test group.\",\n            \"uuid\": \"86a2558b-b63b-4c76-a056-018d9eb8f1b9\",\n            \"memberCount\": 1,\n            \"userGroupLocked\": true\n        } ,\n        {\n            \"name\": \"Another new group\",\n            \"description\": \"\",\n            \"uuid\": \"74e34c92-c2a2-461d-84eb-2c5f0b7c700a\",\n            \"memberCount\": 0,\n            \"userGroupLocked\": false\n        }\n    ],\n    \"count\": 6\n}\n```\n\n----------------------------------------\n\nTITLE: Enhancing Group Box Props with Icons in TypeScript\nDESCRIPTION: Extends the GroupBoxProps interface in a TypeScript component to include optional expand and collapse icons using ReactNode. Requires React and the CustomStyle type, and the component updates interface to handle icon props, allowing customization of visuals.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_34\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface GroupBoxProps {\\n    collapseIcon?: ReactNode;\\n    expandIcon?: ReactNode;\\n    headerCaption?: string;\\n    style: CustomStyle[];\\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Response Structure with Tags\nDESCRIPTION: Shows the format of a paginated JSON response that includes an array of tags with customer and contact names, along with limit and offset parameters for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/search-api.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n            },\n            \"tags\": [\n                {\n                    \"name\": \"customer\"\n                },\n                {\n                    \"name\": \"contact\"\n                }\n            ]\n        }, \n    ],\n    \"limit\": 20,\n    \"offset\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Data Passing Nanoflow with Notification Actions\nDESCRIPTION: A comprehensive nanoflow for generating and displaying mobile notifications with dynamic data and GUID retrieval\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_5\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nNanoflow: ACT_PassGUIDToNotification\nActivities:\n- Retrieve First TestEntity Object\n- Get Object GUID (JavaScript Action)\n- Create Variables: Title, Subtitle, Body, ActionName\n- Display Notification (JavaScript Action)\n```\n\n----------------------------------------\n\nTITLE: Query with Proper Column Aliases in OQL v2\nDESCRIPTION: The corrected version of the previous query, adding aliases to function calls and subqueries to comply with OQL v2 requirements that all columns must have names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  Name,\n  LENGTH(Name) AS NameLength,\n  (\n    SELECT COUNT(*)\n    FROM Module.Person\n    WHERE Module.Person/City = Module.City/Name\n  ) AS PersonCount\nFROM Module.City\n```\n\n----------------------------------------\n\nTITLE: Basic XPath quarter-from-dateTime Function Syntax\nDESCRIPTION: The basic syntax pattern for the quarter-from-dateTime function, which extracts the quarter (1-4) from a Date and time attribute. It requires a Date and time attribute parameter and supports an optional timezone parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-quarter-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nquarter-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Cancelling All Scheduled Notifications in Mendix\nDESCRIPTION: This snippet demonstrates how to use the \"Cancel all scheduled notifications\" JavaScript action within a Mendix nanoflow to cancel all previously scheduled local notifications.  It involves creating a nanoflow, adding the action, and configuring it to not use a return value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/local-notifications/local-notif-schedule-cancel.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n\"1. Create a nanoflow named  *ACT_CancelAllScheduledNotifications*.\n2. Drag a JavaScript action named **Cancel all scheduled notifications** into your nanoflow: \n\n    {{< figure src=\\\"/attachments/howto/mobile/native-mobile/implementation/notifications/local-notif-parent/local-notif-schedule-cancel/cancel-all-action.png\\\" alt=\\\"cancel scheduled action\\\"   width=\\\"500\\\"  class=\\\"no-border\\\" >}}\n\n3. Double-click your new cancel notification action.\n4. Select  **Use return value** > **No**.\n5. Click **OK**.\n6. Drag this nanoflow onto your home screen and name its button *Cancel all*.\n\n    {{< figure src=\\\"/attachments/howto/mobile/native-mobile/implementation/notifications/local-notif-parent/local-notif-schedule-cancel/cancel-button.png\\\" alt=\\\"cancel button\\\"   width=\\\"300\\\"  class=\\\"no-border\\\" >}}\"\n```\n\n----------------------------------------\n\nTITLE: TypeScript Definitions for Icon Property Types\nDESCRIPTION: Type definitions for the Icon property, showing the structure for different icon types (glyph, image, or icon collection) that can be used in pluggable widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype GlyphIcon = { type: \"glyph\"; iconClass: string; }\ntype ImageIcon = { type: \"image\"; imageUrl: string; }\ntype Icon = { type: \"icon\"; iconClass: string; }\n\ntype IconProperty = null | GlyphIcon | ImageIcon | Icon;\n```\n\n----------------------------------------\n\nTITLE: Retrieve Data Grid JSON Request\nDESCRIPTION: JSON request to retrieve employee data for a data grid with sorting and pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"retrieve_by_xpath\",\n   \"params\":{\n      \"xpath\":\"//MyFirstModule.Employee\",\n      \"schema\":{\n         \"id\":\"a2916c7c-af2f-4267-a8e9-99604f045861\",\n         \"offset\":0,\n         \"sort\":[[\"Firstname\",\"asc\"]],\n         \"amount\":20\n      },\n      \"count\":true,\n      \"aggregates\":false\n   },\n   \"context\":[],\n   \"releaseids\":[\"281474976710757\"],\n   \"profiledata\":{\n      \"204eeb2972550c0\":28\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Exporting and Importing Translations in Mendix\nDESCRIPTION: This command pattern 'mx translate' facilitates the import and export of translatable texts in a Mendix application. You can specify the type of export file (xlsx or po) and the source language code, as well as handle options for force import and inclusion of marketplace modules. Dependencies: Mendix CLI installed and correct *.mpr* file version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n`mx translate [-i|-e] -t EXPORT_FORMAT -s LANGUAGE_CODE PROJECT TRANSLATION_PATH [OPTIONS]`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx translate --help`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx translate -i -t po -s en_US C:\\MxProjects\\App-main\\App-main.mpr C:\\MxProjects\\App-main\\translations`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx translate -e -t xlsx -s en_US C:\\MxProjects\\App-main\\App-main.mpr C:\\MxProjects\\App-main\\translations`\n```\n\n----------------------------------------\n\nTITLE: Adding Meta Refresh for SSO Redirection in index.html\nDESCRIPTION: HTML meta tag for redirecting users from index.html to the SAML SSO endpoint. This enables automatic single sign-on by redirecting any user accessing the index page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<meta http-equiv=\"refresh\" content=\"0;URL=/SSO/\" />\n```\n\n----------------------------------------\n\nTITLE: REST Service URL Configuration\nDESCRIPTION: URL template for the REST service endpoint with pagination parameters. The template includes limit and page parameters for server-side paging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://my-json-server.typicode.com/mendix/howto-api-data/airports?_limit=5&_page={1}\n```\n\n----------------------------------------\n\nTITLE: Creating a Menu Extension to Open Dockable Pane in C#\nDESCRIPTION: This code creates a menu extension that adds menu items to Studio Pro, including one that opens the custom dockable pane. It injects the IDockingWindowService to handle opening the pane and IMessageBoxService for displaying messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-dockable-pane.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.ComponentModel.Composition;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Menu;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Services;\n\nnamespace MyCompany.MyProject.MendixExtension;\n\n[Export(typeof(MenuExtension))]\npublic class MyMenuExtension(IDockingWindowService dockingWindowService, IMessageBoxService messageBoxService) : MenuExtension\n{\n    public override IEnumerable<MenuViewModel> GetMenus()\n    {\n        yield return new MenuViewModel(\"Say hello\", () => messageBoxService.ShowInformation(\"Hello World!\"));\n        yield return new MenuViewModel(\"Open My Dockable Pane\", () => dockingWindowService.OpenPane(MyDockablePaneExtension.ID));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Module Version with MX CLI\nDESCRIPTION: The `mx show-module-version` command displays the current version of a specified module in a Mendix project. Prerequisites include access to the *.mpr* file, and the specific module name needs to be known. Outputs the module version, or an error if the module does not have a version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/module.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n`mx show-module-version TARGET-FILE MODULE-NAME`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx show-module-version C:\\MyApp\\MyApp.mpr MyFirstModule`\n```\n\n----------------------------------------\n\nTITLE: Client Certificate Configuration for Mendix Cloud\nDESCRIPTION: Describes steps to configure client certificates in the Mendix Cloud, including the need to upload certificate files and link them to specific web services or endpoints. This is crucial for ensuring secure outgoing connections from the Mendix application deployed in the cloud.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/certificates/use-a-client-certificate.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nN/A\n```\n\n----------------------------------------\n\nTITLE: Configuring StatSD Registry with Accept Filters\nDESCRIPTION: Example of StatSD metrics registry configuration with filters that accept specific metric name patterns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": { \"protocol\": \"TCP\" },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"accept\", \"values\" : [\"app.\", \"employee.\", \"myapp.\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Comparing DateTime Values in XPath\nDESCRIPTION: Examples of DateTime comparisons in XPath queries showing localized and non-localized date handling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/date-and-time-handling/datetime-handling-faq.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[LocalDateAttr > [%CurrentDateTime%]\n```\n\nLANGUAGE: xpath\nCODE:\n```\n[NotLocalDateAttr > [%CurrentDateTime%]\n```\n\n----------------------------------------\n\nTITLE: NFC Tag Reading JavaScript Action\nDESCRIPTION: Implement a JavaScript action to read NFC tag information\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nreturn new Promise(resolve => {\n    NfcManager.registerTagEvent(tag => {\n        NfcManager.unregisterTagEvent();\n        const text = Ndef.text.decodePayload(tag.ndefMessage[0].payload);\n        resolve(text);\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Functionality to Expose Customers via Microflow\nDESCRIPTION: This snippet outlines how to create a microflow in Mendix that retrieves a list of customers from the database to be exposed through a web service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/expose-a-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nCreate a microflow that retrieves and returns a list of customers from the database (for details on how to create a microflow, see [How to Trigger a Microflow From a Menu Item](/howto8/logic-business-rules/trigger-microflow-from-menu-item/)).\nTo make the microflow more exciting, add two input parameters to dynamically set the range settings of the retrieve action. Configure the range options of the retrieve action like this:\nReference this microflow:\n```\n\n----------------------------------------\n\nTITLE: Validation Section Link\nDESCRIPTION: Links to the validation section of the text area properties documentation, covering how validation can be implemented.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/widget-validation-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Ceiling Function with Division in Java\nDESCRIPTION: Example using ceil function with division operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nceil((3 : 7) * 7)\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Snowflake Query in SQL\nDESCRIPTION: SQL query to retrieve climate forecast data for a specific postal code, calculating average temperatures and transforming date-related information\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nselect POSTAL_CODE as \"PostalCode\"\n    , COUNTRY as \"Country\"\n    , doy_std as \"DayOfYearClimate\"\n    , dayofyear(CURRENT_DATE) as \"DayOfYearToday\"\n    , current_date + doy_std - dayofyear(CURRENT_DATE) as \"ClimateDate\"\n    , round((AVG_OF__DAILY_AVG_TEMPERATURE_AIR_F - 32) * (5 / 9), 1) as \"AvgAvgTempCelsius\"\n    , round((AVG_OF__DAILY_MIN_TEMPERATURE_AIR_F - 32) * (5 / 9), 1) as \"AvgMinTempCelsius\"\n    , round((AVG_OF__DAILY_MAX_TEMPERATURE_AIR_F - 32) * (5 / 9), 1) as \"AvgMaxTempCelsius\"\nfrom  CLIMATOLOGY_DAY\nwhere postal_code = {postal_code} \nand   ((doy_std + 365) - dayofyear (current_date)) % 365 <=10\norder by doy_std asc\nlimit 10\n```\n\n----------------------------------------\n\nTITLE: Rendering Geometric Shapes in XR\nDESCRIPTION: Widgets for creating predefined geometric objects like cubes, spheres, and squares in XR environments. These simple objects can be quickly used for prototyping or creating basic visual elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/augmented-reality/how-to-web-xr.md#2025-04-21_snippet_0\n\nLANGUAGE: documentation\nCODE:\n```\n#### Cube (XR), Sphere (XR), Square (XR)\n```\n\n----------------------------------------\n\nTITLE: Creating Date with dateTime function and one parameter\nDESCRIPTION: This snippet demonstrates how to create a date using the `dateTime` function with a single year parameter. The `dateTime` function utilizes the session's calendar, whereas `dateTimeUTC` uses UTC. It returns a date object with the year set to 2007 and the time set to the default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 00:00:00 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Scroll Container Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for a scroll container widget that enables scrolling for page sections. Supports all ViewStyle properties for container customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ScrollContainer = {\n  container: {\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Calculating Weeks Between Dates in Java\nDESCRIPTION: The weeksBetween function calculates the difference between two dates in weeks. It takes two DateTime parameters and returns a Decimal value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nweeksBetween(dateTime(2007, 1, 9, 1, 1, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Building Mendix Apps for Distribution using Native Builder\nDESCRIPTION: Command to build JavaScript bundles and assets, create a GitHub build, and initialize the build on App Center. This is executed after running the 'prepare' command and requires parameters like project name, app version, and build number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe build --project-name \"CoolApp\" --app-version \"1.0.0\" --build-number 1\n```\n\n----------------------------------------\n\nTITLE: Installing React Developer Tools Globally\nDESCRIPTION: This command installs React Developer Tools globally using npm. The `-g` flag ensures that the tool is accessible from any directory in the command-line interface (CLI).  Installing version 3 ensures compatibility with the Make It Native app for debugging styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_5\n\nLANGUAGE: NPM\nCODE:\n```\n\"npm i -g react-devtools@3\"\n```\n\n----------------------------------------\n\nTITLE: Required Selenium Import Statements\nDESCRIPTION: Import statements needed for multi-browser testing with Chrome and IE WebDrivers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.ie.InternetExplorerDriver;\nimport org.testng.annotations.Parameters;\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Themes using JSON in Mendix\nDESCRIPTION: This JSON configuration allows you to define theme settings for all chart types utilized in a Mendix application. It includes layout, data, and specific configurations for each type of chart like Line, Area, Bubble, etc. Ensure your application theme folder contains this file to apply global styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"layout\": {\n    // Add shared layout options here (for all charts)\n  },\n  \"configuration\": {\n    // Add shared configuration options here (for all charts)\n  },\n  \"charts\": {\n    \"LineChart\": {\n      \"layout\": {\n        // Add line chart only layout options here\n      },\n      \"data\": {\n        // Add line chart only data options here\n      },\n      \"configuration\": {\n          // Add line chart only configuration options here\n      }\n    },\n    \"AreaChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BubbleChart\": {\n      // Same arrangement as the line chart\n    },\n    \"TimeSeries\": {\n      // Same arrangement as the line chart\n    },\n    \"ColumnChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BarChart\": {\n      // Same arrangement as the line chart\n    },\n    \"PieChart\": {\n      // Same arrangement as the line chart\n    },\n    \"HeatMap\": {\n      // Same arrangement as the line chart\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Triggering Ingestion Job in Snowflake SQL\nDESCRIPTION: SQL statement to programmatically trigger a Mendix Data Loader ingestion job using the RUN_INGESTION_JOB stored procedure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/mendix-data-loader.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nCALL MENDIX_DATA_LOADER.MX_FUNCTIONS.RUN_INGESTION_JOB('40FJYP9D','');\n```\n\n----------------------------------------\n\nTITLE: Fetching Object Details with SQL in Mendix\nDESCRIPTION: This SQL query retrieves the details of an employee object from the database. It selects the ID, firstname, dateofbirth, jobtitle, department, and lastname from the \"myfirstmodule$employee\" table where the ID matches the specified value. This SQL query is executed by the Mendix Runtime to fetch data for validation and business logic execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n WHERE \"myfirstmodule$employee\".\"id\" = (281474976710857)\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Files in settings.json for Mendix Theme\nDESCRIPTION: This JSON configuration specifies which CSS files should be loaded when viewing pages in Mendix Studio Pro. In this example, the theme/web/css/main.scss file will be loaded for styling the application interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/configuring-your-theme.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"cssFiles\": [ \"theme/web/css/main.scss\" ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing SVG in Pluggable Widget with Image Component\nDESCRIPTION: Example of using the Image component to display SVG in a pluggable native widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-svg.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createElement } from \"react\";\nimport { Image } from \"mendix/components/native/Image\";\n\nexport const PluggableWidget = () => (\n    <Image source=\"PUT_SOURCE_HERE\" style={{ fill: 'blue' }} />\n);\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Customers without Orders in Java\nDESCRIPTION: This Java query retrieves all `Sales.Customer` objects that have not placed any orders. It uses the `not()` function to determine the absence of related `Sales.Order` objects through the `Sales.Customer_Order` association.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: Java Query: Weekday from DateAttribute\nDESCRIPTION: This Java query retrieves `Logging.Log` objects where the weekday of the `DateAttribute` is 6 (Friday) in the local time zone.  It demonstrates how to use the `weekday-from-dateTime` function within a Java context in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n\"//Logging.Log[weekday-from-dateTime(DateAttribute) = 6]\"\n```\n\n----------------------------------------\n\nTITLE: Calculating Calendar Months Between Dates in Java\nDESCRIPTION: Example of using calendarMonthsBetween function to calculate the difference between two dates in months.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\ncalendarMonthsBetween(dateTime(2007, 1, 1, 10, 1, 1), dateTime(2007, 8, 1, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Multiplying Numbers in Mendix - Java\nDESCRIPTION: The snippet demonstrates how to multiply two numbers in Mendix using Java. No additional dependencies are required. The inputs can be of type Integer/Long or Decimal, resulting in a compatible type output. The function returns the product of the provided numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n2*3\n```\n\n----------------------------------------\n\nTITLE: OQL ORDER BY Descending Example\nDESCRIPTION: This SQL query selects the concatenated FirstName and LastName from the Sales.Customer entity and orders the results by LastName in descending order. The result will be customers' full names sorted in reverse alphabetical order by their last names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-order-by-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n\"SELECT FirstName + ' ' + LastName FROM Sales.Customer\nORDER BY LastName DESC\"\n```\n\n----------------------------------------\n\nTITLE: Calculating String Length in Java\nDESCRIPTION: Illustrates the usage of the length function to determine the length of a string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nlength('thisismystring')\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Digit Character \\d\nDESCRIPTION: This example showcases the use of `\\d` in regular expressions to represent a digit. It is an abbreviation for `[0-9]`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: regex\nCODE:\n```\n\"\\d\"\n```\n\n----------------------------------------\n\nTITLE: Getting Maximum Value in Mendix Using Java\nDESCRIPTION: The 'max' function returns the largest value from the specified arguments which can be numbers or date/time values. It accepts multiple numeric values and outputs the largest among them, ensuring the most precise type is returned based on the input types. This function is essential for performing comparisons and obtaining maximum values in applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmax(5, 1, 5, 6.7)\n```\n\nLANGUAGE: java\nCODE:\n```\n6.7\n```\n\n----------------------------------------\n\nTITLE: Explicit Entity Reference for Duplicate Columns in OQL v2\nDESCRIPTION: The corrected version of the previous query, explicitly specifying which entity the 'Name' attribute belongs to as required in OQL v2.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Module.Person/Name\nFROM Module.Person\nJOIN Module.Person/Module.Person_City/Module.City\n```\n\n----------------------------------------\n\nTITLE: Registering Global Entity Event Listener in Mendix\nDESCRIPTION: Java action to register a global entity event listener that logs all attribute changes before they are committed to the database. This enables monitoring of data changes across the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-datastorage-api.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic java.lang.Boolean executeAction() throws Exception {\n    // BEGIN USER CODE\n    Core.getListenersRegistry().registerBeforeCommitListener(objects -> {\n        ILogNode logger = Core.getLogger(\"BeforeCommitListener\");\n        for (IMendixObject obj : objects) {\n            logger.info(\"ObjectType: \" + obj.getType());\n\n            List<? extends IMendixObjectMember<?>> changedMembers = obj.getChangedMembers(getContext());\n\n            logger.info(String.format(\"Has changed members: %b? Number of changed members: %d\", obj.isChanged(), changedMembers.size()));\n            for (IMendixObjectMember member : changedMembers) {\n                logger.info(\n                        String.format(\"Changed member %s : %s -> %s\", member.getName(),\n                                member.getOriginalValue(getContext()) != null ? member.getOriginalValue(getContext()).toString() : \"\",\n                                member.getValue(getContext()) != null ? member.getValue(getContext()).toString() : \"\"\n                        )\n                );\n            }\n        }\n    });\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Applying 'not' Operator in Java\nDESCRIPTION: Illustrates the use of the 'not' operator to negate a boolean expression. Returns the opposite boolean value of the evaluated expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nnot('hello' = 'hallo')\n```\n\nLANGUAGE: java\nCODE:\n```\nnot(true)\n```\n\n----------------------------------------\n\nTITLE: Fixing XPath Expression with DateTime Variable in PostgreSQL\nDESCRIPTION: Fixed an issue where using a microflow variable of type DateTime in an XPath expression (particularly [$var = empty]) failed on PostgreSQL with a data type determination exception.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.12.md#2025-04-21_snippet_3\n\nLANGUAGE: XPath\nCODE:\n```\n[$var = empty]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Server Statistics from Mendix Runtime\nDESCRIPTION: API endpoint to get information about the embedded Jetty web server status and threadpool configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"server_statistics\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Applying Transparent Background to Button Container\nDESCRIPTION: Customize a button widget by setting a transparent background color. This example shows how to modify the container's styling properties to change the default appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport const className = {\n    container: {\n        backgroundColor: \"transparent\"\n    },\n    icon: {\n    },\n    caption: {\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Star Icons in Mendix Rating Widget using CSS\nDESCRIPTION: This code snippet demonstrates how to overwrite the default star icon in the Mendix Rating widget by adding CSS classes to your app theme. It replaces the content property with the desired glyphicon code to customize the appearance of the star icons. The `rating-flag` class needs to be added to the widget configuration on the **Common** tab to apply these styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/rating.md#2025-04-21_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\n .rating-flag [class*=\"widget-star-rating-full\"]:before {\n  content: \"\\e034\"; /* flag icon */ \n }\n.rating-flag .widget-star-rating-empty:before {\n  content: \"\\e034\"; /* flag icon */\n }\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Objects with OData Query\nDESCRIPTION: Demonstrates how to retrieve all objects using a basic OData URI. This query returns all objects of the specified resource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_0\n\nLANGUAGE: OData\nCODE:\n```\n/odata/myservice/myresource\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section for Checkbox\nDESCRIPTION: This snippet includes the design properties section for the checkbox, where styling and appearance-related configurations are defined.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Subtracting Quarters from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 1 quarter from a specific date and time using the subtractQuarters function. The function takes a datetime value and an integer representing quarters to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_14\n\nLANGUAGE: java\nCODE:\n```\nInput: subtractQuarters(dateTime(2007, 4, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Configuring Signature Widget Styles in JavaScript\nDESCRIPTION: Defines the style configuration object for the Mendix native signature widget. Includes styling properties for the signature container, clear and save buttons, and their respective captions. Supports ViewStyle and TextStyle properties along with specific customizations for Android and iOS platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_signature_Signature = {\n  container: {\n    // This has all ViewStyle properties. \n    penColor: null, // This will change the color of the stroke.\n  },\n  buttonWrapper: {\n    // This has all ViewStyle properties. \n  },\n  buttonClearContainer: {\n    // This has all ViewStyle properties. \n    rippleColor: null, // This will change the color of the ripple on Android.\n    activeOpacity: null, // This will change the opacity when touch is active on iOS.\n    underlayColor: null, // This will change the underlay color when touch is active on iOS.\n  },\n  buttonClearCaption: {\n    // This has all TextStyle properties. \n  },\n  buttonSaveContainer: {\n    // This has all ViewStyle properties.\n  },\n  buttonSaveContainer: {\n    // This has all ViewStyle properties. \n    rippleColor: null, // This will change the color of the ripple on Android.\n    activeOpacity: null, // This will change the opacity when touch is active on iOS.\n    underlayColor: null, // This will change the underlay color when touch is active on iOS.\n  }, \n  buttonSaveCaption: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Attribute Value in TextBox Component (TSX)\nDESCRIPTION: This TypeScript code snippet demonstrates how to update the value of a Mendix attribute from within a React component. It defines an `onUpdate` function that uses the `setValue` method of the attribute to update the value in the Mendix data model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nexport class TextBox extends Component<TextBoxContainerProps> {\n\n    private readonly onUpdateHandle = this.onUpdate.bind(this);\n\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        return <TextInput\n            value={value}\n            tabIndex={this.props.tabIndex}\n            onUpdate={this.onUpdateHandle}\n        />;\n    }\n\n    private onUpdate(value: string): void {\n        this.props.textAttribute.setValue(value);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Selecting Attributes Over Multiple Associations\nDESCRIPTION: Shows how to build paths over multiple associations, including system associations like System.owner to retrieve related data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_9\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tLastName AS CustomerName,\n\tSales.Customer/Sales.Request_Customer/Sales.Request/System.owner/System.User/Name AS UserName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Finding Text Box Input Element with jQuery\nDESCRIPTION: jQuery selector code to find the input element within a Mendix text box widget using the mx-name class selector. This is used to verify element accessibility for automation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-03-textbox.md#2025-04-21_snippet_0\n\nLANGUAGE: jquery\nCODE:\n```\n$('.mx-name-textBox2 input')\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress Endpoint in OperatorConfiguration\nDESCRIPTION: YAML configuration for setting up Ingress endpoint in the OperatorConfiguration. This includes service annotations, ingress annotations, domain settings, TLS configuration, and other ingress-related options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  # Endpoint (Network) configuration\n  endpoint:\n    # Endpoint type: ingress, openshiftRoute or service\n    type: ingress\n    # Optional, can be omitted: Service annotations\n    serviceAnnotations:\n      # example: custom AWS CLB configuration\n      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:eu-west-1:account:certificate/id\n      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: \"443\"\n    # Ingress configuration: used only when type is set to ingress\n    ingress:\n      # Optional, can be omitted: annotations which should be applied to all Ingress Resources\n      annotations:\n        # default annotation: allow uploads of files up 500 MB in the NGINX Ingress Controller\n        nginx.ingress.kubernetes.io/proxy-body-size: 500m\n        # example: use the specified cert-manager ClusterIssuer to generate TLS certificates with Let's Encrypt\n        cert-manager.io/cluster-issuer: staging-issuer\n        # example: deny access to /rest-doc\n        nginx.ingress.kubernetes.io/configuration-snippet: |\n          location /rest-doc {\n            deny all;\n            return 403;\n          }\n      # App URLs will be generated for subdomains of this domain, unless an app is using a custom appURL\n      domain: mendix.example.com\n      # Enable or disable TLS\n      enableTLS: true\n      # Optional: name of a kubernetes.io/tls secret containing the TLS certificate\n      # This example is a template which lets cert-manager to generate a unique certificate for each app\n      tlsSecretName: '{{.Name}}-tls'\n      # Optional: specify the Ingress class name\n      ingressClassName: alb\n      # Optional, can be omitted : specify the Ingress path\n      path: \"/\"\n      # Optional, can be omitted : specify the Ingress pathType\n      pathType: ImplementationSpecific\n# ...\n# omitted lines for brevity\n```\n\n----------------------------------------\n\nTITLE: Creating Firebase Service Worker\nDESCRIPTION: JavaScript code for the Firebase messaging service worker. Sets up Firebase messaging functionality for handling push notifications in the background.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/push-notifications/notif-implement-pwa.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimportScripts('https://www.gstatic.com/firebasejs/10.11.0/firebase-app-compat.js');\nimportScripts('https://www.gstatic.com/firebasejs/10.11.0/firebase-messaging-compat.js');\nconst firebaseConfig = {\n  apiKey: \"...\",\n  authDomain: \"...\",\n  projectId: \"...\",\n  storageBucket: \"...\",\n  messagingSenderId: \"...\",\n  appId: \"...\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst messaging = firebase.messaging();\n```\n\n----------------------------------------\n\nTITLE: Illustrating ISO-8601 Date Format for REST Path Parameters\nDESCRIPTION: Demonstrates the correct format for date and time parameters in REST path parameters. Date and time should be entered using the ISO-8601 standard format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-path-parameters.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n2018-12-31T09:00:00\n```\n\n----------------------------------------\n\nTITLE: Styling Image Widget in Mendix Native Mobile\nDESCRIPTION: Defines styles for the image widget, including container, image, and backdrop properties. This widget can display static or dynamic images on pages, layouts, or snippets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_image_Image = {\n  container: {\n    // All ViewStyle properties\n  },\n  image: {\n    // This has all ImageStyle properties.\n  },\n  backdrop: {\n    // All ViewStyle properties\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Requesting Top-level Model Elements in C#\nDESCRIPTION: This snippet illustrates how to retrieve top-level model elements such as Project and Module units. It utilizes the untyped model access service to filter and find specific model units based on their type and name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/untyped-model-api.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nclass Sample3(IUntypedModelAccessService untypedModelAccessService, IModel currentApp)\n{\n    public IModelUnit GetProjectData() =>\n        untypedModelAccessService.GetUntypedModel(currentApp)\n            .GetUnitsOfType(\"Projects$Project\")\n            .Single();\n\n    public IModelUnit GetMyModuleData() =>\n        untypedModelAccessService.GetUntypedModel(currentApp)\n            .GetUnitsOfType(\"Projects$Module\")\n            .Single(unit => unit.Name == \"MyFirstModule\");\n}\n```\n\n----------------------------------------\n\nTITLE: JSON - CSS Files Configuration\nDESCRIPTION: Configures the `cssFiles` property in *theme/web/settings.json* to include additional CSS files, such as *water.css*. This allows developers to incorporate third-party CSS libraries into their Mendix web applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"cssFiles\": [\"theme.compiled.css\", \"water.css\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Structuring Container Widget in XML\nDESCRIPTION: Demonstrates the XML structure for a container widget. Containers are used to style or hide groups of widgets and do not have a default visual representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\tcontent\n</container>\n```\n\n----------------------------------------\n\nTITLE: Filtering Records by Date Comparison in OData\nDESCRIPTION: Example of filtering records based on a date field being greater than a specific date. This retrieves SmartTasks with a DueDate after January 1, 1995.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/SmartTasks?$filter=DueDate+gt+datetime'1995-01-01T00:00:00'\n```\n\n----------------------------------------\n\nTITLE: Default Values for Different Attribute Types in Mendix\nDESCRIPTION: This table shows the default values for different attribute types in Mendix when no specific default value is provided. It includes information about AutoNumber attributes, data types like Boolean, Date and time, Decimal, and various limitations for each type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/entities/attributes.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Type of Attribute | Default Value When Not Specified | Additional Comments |\n| --- | --- | --- |\n| AutoNumber | 1 | Starting value of this attribute. If there are already objects of this entity, the AutoNumber values will be based on the right 32 bits of the id column value. This can cause gaps in the AutoNumber ranges with jumps of 100, because id values are reserved by the Runtime in blocks of 100. |\n| Binary | N/A |   |\n| Boolean | False |   |\n| Date and time | (empty) | The default value can either be a UTC date with the format `year-month-day` (suffixed optionally by `hour:minute`, or `hours:minute:second`), or `[%CurrentDateTime%]` (which sets the value of this attribute to the date and time when the object is created). |\n| Decimal | 0 |   |\n| Enumeration | (empty) |   |\n| Hashed string | (empty) |   |\n| Integer | 0 |   |\n| Long | 0 |   |\n| String | (empty) |   |\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request for Getting All Security Groups\nDESCRIPTION: HTTP request example showing how to retrieve security groups with a limit parameter to control the number of results returned. The request includes required authentication headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_13\n\nLANGUAGE: http\nCODE:\n```\nGET /legacy-api/1/groups?limit=2 HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Creating TextInput Component with State Management\nDESCRIPTION: Develops a reusable TextInput component with local state management, change tracking, and onLeave event handling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nexport class TextInput extends Component<InputProps, InputState> {\n    private readonly onChangeHandle = this.onChange.bind(this);\n    private readonly onBlurHandle = this.onBlur.bind(this);\n    readonly state: InputState = { editedValue: undefined };\n    componentDidUpdate(prevProps: InputProps): void {\n        if (this.props.value !== prevProps.value) {\n            this.setState({ editedValue: undefined });\n        }\n    }\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.getCurrentValue()}\n            tabIndex={this.props.tabIndex}\n            onChange={this.onChangeHandle}\n            disabled={this.props.disabled}\n            onBlur={this.onBlurHandle}\n        />;\n    }\n    private getCurrentValue(): string {\n        return this.state.editedValue !== undefined\n            ? this.state.editedValue\n            : this.props.value;\n    }\n    private onChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({ editedValue: event.target.value });\n    }\n    private onBlur(): void {\n        const inputValue = this.props.value;\n        const currentValue = this.getCurrentValue();\n        if (this.props.onLeave) {\n            this.props.onLeave(currentValue, currentValue !== inputValue);\n        }\n        this.setState({ editedValue: undefined });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Extracting Seconds in Java Query with Timezone\nDESCRIPTION: This snippet shows how to apply the `seconds-from-dateTime()` function with a timezone parameter in a Java context to find logs in the New York timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n//Logging.Log[seconds-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Using REPLACE Function in OQL\nDESCRIPTION: The REPLACE function replaces all occurrences of a pattern string with a replacement string within a given expression. It takes three arguments: the string to be searched, the pattern to find, and the replacement string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-replace.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nREPLACE ( expression, pattern, replacement )\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Blob Endpoint\nDESCRIPTION: The `com.mendix.storage.azure.BlobEndpoint` runtime setting is used to configure the Azure Blob Storage endpoint. When the container name is included as a suffix in the setting, files are stored at the top level of the container without a directory hierarchy. This configuration was modified and then restored in subsequent versions due to a known issue.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Styling ListView Widgets in JavaScript\nDESCRIPTION: Defines style properties for the ListView widget applicable to Mendix native mobile apps. It includes attributes like numColumns for layout configuration and rippleColor for interactive elements, with constraints for specific platform interactions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ListView = {\n  container: {\n    numColumns: 1\n  },\n  listItem: {\n    rippleColor: 'rgba(0, 0, 0, 0.2))',\n    underlayColor: null,\n  },\n  listItemDisabled: {\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Mendix App Custom Resource (CR) in YAML for Kubernetes\nDESCRIPTION: This YAML snippet defines a complete Mendix application Custom Resource specification for Kubernetes deployment. It includes configuration for database, storage, runtime settings, networking, resources, and other customizations needed for a Mendix application to run in a Kubernetes environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  database: # Specification of Database CR\n    servicePlan: dev\n  storage: # Specification of Storage CR\n    servicePlan: dev\n  mendixRuntimeVersion: 8.0.0 # Studio Pro version of the Mendix app\n  sourceURL: https://example.com/example-app.mda # URL of App's source MDA or prebuilt OCI image\n  appURL: example-mendixapp.k8s-cluster.example.com # URL to access the app\n  tls: # Optional, can be omitted : set a custom TLS configuration, overriding the default operator configuration\n    # Enable or disable TLS for the app\n    enableTLS: true\n    # Optional: name of an existing kubernetes.io/tls secret containing the TLS certificate\n    secretName: example-mendixapp-cert\n    # Optional: TLS certificate value (tls.crt)\n    certificate: |-\n      -----BEGIN CERTIFICATE-----\n      [...]\n      -----END CERTIFICATE-----\n    # Optional: TLS key value (tls.key)\n    key: |-\n      -----BEGIN PRIVATE KEY-----\n      [...]\n      -----END PRIVATE KEY-----\n  replicas: 1 # Number of replicas, set to 0 to stop all replicas\n  resources: # Optional, can be omitted : set resources for Mendix Runtime container\n    limits: # Upper limit - process will be stopped if it tries to use more\n      cpu: 500m # 500 millicores - half of a vCPU\n      memory: 512Mi # 512 megabytes - suitable for small-scale non-production apps\n      ephemeral-storage: 256Mi # 256 megabytes - for temporary files such as generated Excel documents\n    requests: # Lower limit - needs at least these resources\n      cpu: 250m\n      memory: 256Mi\n      ephemeral-storage: 256Mi\n  runtimeDeploymentPodAnnotations: # Optional, can be omitted : set custom annotations for Mendix Runtime Pods\n    # example: inject the Linkerd proxy sidecar\n    linkerd.io/inject: enabled\n  serviceAnnotations: # Optional, can be omitted : specify the Service annotations\n    # example: custom AWS CLB configuration\n    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:eu-west-1:account:certificate/id\n    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: \"443\"\n  endpointAnnotations: # Optional, can be omitted : set custom annotations for Ingress or OpenShift Route objects\n    # example: allow uploads of files up 100 MB in the NGINX Ingress Controller\n    nginx.ingress.kubernetes.io/proxy-body-size: 100m\n    # example: deny access to /rest-doc\n    nginx.ingress.kubernetes.io/configuration-snippet: |\n      location /rest-doc {\n        deny all;\n        return 403;\n      }\n  ingressClassName: alb # Optional, can be omitted : specify the Ingress class\n  ingressPath: \"/\" # Optional, can be omitted : specify the Ingress path. Anything other than \"/\" or \"/*\" will be ignored as Mendix applications don't support path based routing\n  ingressPathType: ImplementationSpecific # Optional, can be omitted : specify the Ingress pathType\n  topologySpreadConstraints: # Optional, can be omitted : specify Kubernetes topology spread constraints\n    - maxSkew: 1\n      topologyKey: topology.kubernetes.io/zone\n      whenUnsatisfiable: DoNotSchedule\n      labelSelector:\n        matchLabels:\n          privatecloud.mendix.com/app: example-mendixapp\n  runtime: # Configuration of the Mendix Runtime\n    logAutosubscribeLevel: INFO # Default logging level\n    mxAdminPassword: V2VsYzBtZSE= # base64 encoded password for MendixAdmin user. In this example, 'Welc0me!'; can be left empty keep password unchanged\n    debuggerPassword: V2VsYzBtZSE= # base64 encoded password for debuggerPassword. In this example, 'Welc0me!';\n    dtapMode: P # Security & runtime mode: P for production, D for development\n    logLevels: # Optional, can be omitted : set custom log levels for specific nodes\n      NodeOne: CRITICAL\n      NodeTwo: DEBUG\n    logFormatType: json # Optional, can be omitted : specify the log format\n    microflowConstants: # Optional, can be omitted : set values for microflow constants\n      MyFirstModule.Constant: \"1234\"\n      Atlas_UI_Resources.Atlas_UI_Resources_Version: \"2.5.4\"\n    scheduledEventExecution: SPECIFIED # Optional, can be omitted: specify which scheduled events should be enabled: ALL/NONE/SPECIFIED\n    myScheduledEvents: # List which scheduled events should be enabled; should only be used if scheduledEventExecution is set to SPECIFIED\n      - MyFirstModule.MyScheduledEvent\n    # Mendix Runtime Jetty options, in JSON format; validated and applied by the mx-m2ee-sidecar container\n    jettyOptions: |-\n      {\n        \"max_form_content_size\": 10485760,\n        \"use_blocking_connector\": false\n      }\n    environmentVariables: # Optional, can be omitted : set environment variables for the Mendix Runtime container\n      - name: MY_ENVIRONMENT_VARIABLE # name of the environment variable\n        value: debug # value of the environment variable\n        # valueFrom can be used instead of value to load values from a Secret:\n        #valueFrom:\n        #  secretKeyRef:\n        #    name: proxy-secret\n        #    key: java-proxy-secret\n      - name: JAVA_TOOL_OPTIONS # name of the environment variable\n        value: -Dhttp.proxyHost=10.0.0.100 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=10.0.0.100 -Dhttps.proxyPort=8443 -Dhttp.nonProxyHosts=\"localhost|host.example.com\"\n    clientCertificates: # Optional, can be omitted : set client certificates for TLS authentication\n      - key: Q0VSVElGSUNBVEU= # base64-encoded PKCS12 certificate\n        password: Q2hhbmdlLW1lNDI= # base64-encoded password for the certificate, cannot be empty\n        pinTo: # Optional, list of web services or domain names where this certificate should be used\n        - \"www.example.com\"\n        - \"service.www.example.com\"\n    # All custom Mendix Runtime parameters go here, in JSON format; validated and applied by the mx-m2ee-sidecar container\n    customConfiguration: |-\n      {\n        \"ApplicationRootUrl\": \"https://myapp1-dev.mendix.example.com\"\n      }\n  runtimeMetricsConfiguration: # Optional, can be omitted : set Runtime metrics configuration\n    mode: native # Metrics collection mode : native or compatibility\n    interval: \"PT1M\" # Optional, can be omitted : set Prometheus scrape interval\n    mxAgentConfig: |- # Optional, can be omitted : specify configuration for collecting additional metrics\n      {\n        …\n      }\n    mxAgentInstrumentationConfig: |- # Optional, can be omitted : specify instrumentation configuration for collecting additional metrics\n      {\n        …\n      }\n  runtimeLeaderSelection: assigned # Optional, can be omitted : specify how the leader node will be selected\n  customPodLabels: # Optional: custom pod labels\n    general: # Optional: general pod labels (applied to all app-related pods)\n      azure.workload.identity/use: \"true\" # Example: enable Azure Workload Identity\n  runtimeLicenseProduct: # Optional: Specify the type of product required for the Runtime License. This is applicable when PCLM is used for licensing. By default, the value is set to Standard, if left empty\n  deploymentStrategy: # Optional: Specify a deployment strategy to reduce app downtime\n    type: PreferRolling\n    switchoverThreshold: 50%\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 50%\n  runtimeReadOnlyRootFilesystem: true # Optional: specify if the Mendix Runtime container should use a read-only root filesystem\n```\n\n----------------------------------------\n\nTITLE: Granting RDS IAM Role to Database User via psql\nDESCRIPTION: This SQL snippet connects to the PostgreSQL database using `psql` and grants the `rds_iam` role to the specified database user. It also sets the user's password to NULL, which forces the use of IAM authentication. Replace `<database-username>` and `<database-host>` with the correct values for your setup. This is done through a kubernetes pod execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nGRANT rds_iam TO <database-username>;\nALTER ROLE <database-username> WITH PASSWORD NULL;\n```\n\n----------------------------------------\n\nTITLE: Defining ListActionValue Interface for Item Actions\nDESCRIPTION: Defines an interface for performing actions on individual list items, enabling dynamic action retrieval and execution\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_16\n\nLANGUAGE: ts\nCODE:\n```\nexport interface ListActionValue {\n    get: (item: ObjectItem) => ActionValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Not Equal Operator for Name Comparison in Java\nDESCRIPTION: This query shows an alternative way to find customers whose names are not equal to \"Jansen\" using the != operator instead of the not() function. In this specific case, both queries return the same result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name != 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Installing Fastlane Using Bash\nDESCRIPTION: This snippet provides the command for installing Fastlane, a tool for automating app deployment, using the gem package manager in Bash. It also includes instructions for setting the environment variable necessary to ensure Fastlane runs correctly. Ruby must be installed on the system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo gem install fastlane -NV\n```\n\nLANGUAGE: bash\nCODE:\n```\nexport FASTLANE_PATH=\"/usr/local/lib/ruby/gems/2.6.0/gems/fastlane-2.134.0/bin\"\nexport PATH=\"$FASTLANE_PATH:$PATH\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Data with DELETE in HTTP\nDESCRIPTION: Shows how to delete a customer resource using a DELETE request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_10\n\nLANGUAGE: HTTP\nCODE:\n```\nDELETE http://localhost:8080/odata/CustomerApi/v1/Customers(5)\n```\n\n----------------------------------------\n\nTITLE: Running Mendix Docker Image with Microsoft SQL Server\nDESCRIPTION: Docker command to run a Mendix Docker image with Microsoft SQL Server database configuration. Requires setting ADMIN_PASSWORD and DATABASE_ENDPOINT environment variables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-docker-image.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\ndocker run -it \\\n  -e ADMIN_PASSWORD=Password1! \\\n  -e DATABASE_ENDPOINT=sqlserver://username:password@host:port/mendix \\\n  mendix/mendix-buildpack:v1.2  \n```\n\n----------------------------------------\n\nTITLE: Querying Mendix Switch Input Element with jQuery in JavaScript\nDESCRIPTION: This code snippet uses jQuery to find the input element of a Mendix Switch widget. It demonstrates how to construct a selector for the Switch widget's input element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-02-switch.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n$( '.mx-name-switch1 input' )\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Options for New Relic in m2ee.yaml\nDESCRIPTION: This YAML snippet shows how to add the New Relic Java agent to the Java options in the m2ee.yaml configuration file for Mendix applications on Linux. It includes settings for file encoding, memory allocation, temporary directory, and the New Relic agent path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/setting-up-monitoring-with-new-relic.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njavaopts: [\n \"-Dfile.encoding=UTF-8\", \"-Xmx256M\", \"-Xms256M\",\n \"-Djava.io.tmpdir=/path/to/project/data/tmp\",\n \"-javaagent:/home/mendix-user/newrelic/newrelic.jar\",\n]\n```\n\n----------------------------------------\n\nTITLE: Editing Mendix App Resources in Kubernetes\nDESCRIPTION: Command to edit a MendixApp custom resource in Kubernetes to modify environment settings like memory requests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit mendixapp {environmentInternalId}\n```\n\n----------------------------------------\n\nTITLE: Configuring Capabilities for Android Appium Testing\nDESCRIPTION: This JSON snippet sets up the desired capabilities for testing a Mendix native Android app using Appium. Key attributes include device name, emulator, platform, app specifics, and the Espresso automation tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"deviceName\": \"arbitrary name of your Android device\",\n    \"avd\": \"snake-cased name of your Android emulator\",\n    \"platformName\": \"Android\",\n    \"udid\": \"udid of your Android device\",\n    \"appPackage\": \"the package name of your app\",\n    \"appActivity\": \"the main activity name of your app\",\n    \"automationName\": \"Espresso\",\n    \"app\": \"location of your .apk Android app file\"\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Date Picker Widget in JavaScript for Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for a date picker widget in Mendix native mobile apps. It includes properties for customizing container, label, value, placeholder, validation message, and iOS-specific picker styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nexport const DatePicker = {\n  container: {\n    // All ViewStyle properties\n  },\n  containerDisabled: {\n    // All ViewStyle properties. Same properties as `container`. Overrides `container` styles if the text box is non-editable.\n  },\n  label: {\n    // This has all TextStyle properties.\n    // Render mode: Both.\n    numberOfLines: 1 // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis. Render mode: Both.\n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the checkbox is non-editable.\n    // Render mode: Both.\n  },\n  value: {\n    // This has all TextStyle properties.\n    rippleColor: 'rgba(0, 0, 0, 0.2)', // This is the color of the ripple on Android, and will be applied only when the date picker is pressed.\n    underlayColor: null, // This is the color while pressing the date picker on iOS, if not set it will be defaulted to opacity only.\n  },\n  valueDisabled: {\n    // This has all TextStyle properties. Overrides `value` styles if the date picker is non-editable.\n  },\n  valueContainerError: {\n    // This has all TextStyle properties. Overrides `value` styles if the date picker has a validation error.\n  }, \n  placeholder: {\n    // This has all TextStyle properties.\n  },\n  placeholderDisabled: {\n    // This has all TextStyle properties.  Overrides `placeholder` styles if the date picker is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n  pickerBackdropIOS: {\n    // This has all Viewstyle properties.\n  },\n  pickerIOS: {\n    // This has all Viewstyle properties.\n    color: null,\n  },\n  pickerTopIOS: {\n    // This has all Viewstyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring General Session Settings in Mendix Runtime\nDESCRIPTION: This code snippet shows how to configure general session settings in Mendix Runtime, including SessionTimeout and ClusterManagerActionInterval.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n| Name | Description | Default value |\n| --- | --- | --- |\n| `SessionTimeout` | Defines after how much time the session becomes invalid (in milliseconds). After that timeout, a session becomes applicable for removal. The session won't be destroyed until the next time the cluster manager evaluates the active sessions. | 600000 |\n| `ClusterManagerActionInterval` | The interval (in milliseconds) used for performing all cluster manager actions. These actions include unblocking users and removing invalid sessions. If nothing is specified, the interval is half the `SessionTimeout`. | 300000 |\n```\n\n----------------------------------------\n\nTITLE: Defining TextInputProps Interface in TextInput.tsx\nDESCRIPTION: This snippet shows how to define the TextInputProps interface with optional properties (className, style, tabIndex) and how to pass these properties to the input component. This ensures the TextInput component can receive styling and other standard properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { createElement, CSSProperties, ReactElement } from \"react\";\n\n    export interface TextInputProps {\n        value: string;\n        className?: string;\n        style?: CSSProperties;\n        tabIndex?: number;\n    }\n\n    export function TextInput({ value, tabIndex, style, className }: TextInputProps): ReactElement {\n        return <input \n            type=\"text\" \n            value={value} \n            className={\"form-control \" + className} \n            style={style} \n            tabIndex={tabIndex} \n        />;\n    }\n```\n\n----------------------------------------\n\nTITLE: OpenShift 3 Registry Configuration Command\nDESCRIPTION: Command to retrieve Docker registry service details in OpenShift 3, used to determine push and pull URLs for container image registry\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-registry.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\noc get svc docker-registry -n default\n```\n\n----------------------------------------\n\nTITLE: Getting Model Unit's Properties in C#\nDESCRIPTION: This snippet shows how to access and retrieve properties from a model element or unit, specifically targeting project runtime settings. It includes methods to extract specific properties based on their names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/untyped-model-api.md#2025-04-21_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nclass Sample5(IUntypedModelAccessService untypedModelAccessService, IModel currentApp)\n{\n    private IReadOnlyList<IModelProperty> GetProjectRuntimeSettingsProperties() =>\n        untypedModelAccessService.GetUntypedModel(currentApp)\n            .GetUnitsOfType(\"Settings$ProjectSettings\")\n            .Single()\n            .GetElements()\n            .Single(element => element.Type == \"Settings$RuntimeSettings\")\n            .GetProperties();\n\n\n    public string? GetAfterStartupMicroflowId() =>\n        GetProjectRuntimeSettingsProperties()\n            .Single(property => property.Name == \"AfterStartupMicroflowId\")\n            .Value?\n            .ToString();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic OQL Query with CurrentUser System Variable\nDESCRIPTION: Example query demonstrating how to select the Name field from Sales.Person objects owned by the current user by using the system variable [%CurrentUser%].\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tName\nFROM\n\tSales.Person\nWHERE\n\tSystem.owner = '[%CurrentUser%]'\n```\n\n----------------------------------------\n\nTITLE: Updating Administrator Password for PCLM\nDESCRIPTION: CLI command to update the default administrator password for the PCLM server. This should be done immediately after installation for security reasons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli user update \\\n  -s <pclm-http-url> -u administrator -p <default-password> \\\n  --username administrator --password='<new-password>' --type admin \\\n  --custom-tls-cert-path=<custom-ca-cert-path>\n```\n\n----------------------------------------\n\nTITLE: Creating a Machine Learning Pipeline for Text Classification\nDESCRIPTION: This code creates a pipeline object that combines CountVectorizer for text feature extraction and MultinomialNB classifier for spam detection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-sagemaker-machine-learning.md#2025-04-21_snippet_1\n\nLANGUAGE: Python\nCODE:\n```\npipe = make_pipeline( \n    CountVectorizer(binary=True), \n    MultinomialNB() \n)\n```\n\n----------------------------------------\n\nTITLE: Adding Paging to REST Service Call in Mendix Microflow\nDESCRIPTION: This snippet demonstrates how to modify the REST service call to include paging functionality. It updates the URL template to include limit and page parameters, and adds a parameter for the page number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nTemplate: https://my-json-server.typicode.com/mendix/howto-api-data/airports?_limit=5&_page={1}\n\nParameters:\nNew parameter: toString($Paging/PageNumber)\n```\n\n----------------------------------------\n\nTITLE: Setting up Microflow for Nested Template Grid in Mendix 8\nDESCRIPTION: Describes how to configure a microflow for a nested template grid to retrieve data. The microflow takes the containing data view's object as input and returns a list of objects matching the nested grid's entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/template-grid-document-template.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\nMicroflow: [Select microflow]\n```\n\n----------------------------------------\n\nTITLE: Addition with Negative Numbers in Mendix\nDESCRIPTION: Shows how to add numbers in Mendix expressions, including with negative values. The operation returns an Integer/Long if both inputs are Integer/Long, or a Decimal if either input is a Decimal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n-3 + 4\n```\n\nLANGUAGE: java\nCODE:\n```\n1\n```\n\n----------------------------------------\n\nTITLE: Configuring Scatter Map in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a scatter map with location markers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"lon\": [ 12, 22 ],\n  \"lat\": [ 42, 39 ],\n  \"type\": \"scattergeo\",\n  \"text\": [ \"Rome\", \"Greece\" ],\n  \"mode\": \"marker\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Decoding Features with Java Actions\nDESCRIPTION: This Java action processes the output of a machine learning model and maps it to a String representing a class name. The action retrieves the output label and maps it to a category (Setosa, Versicolour, or Virginica). The Java action relies on the `iris_randomforest.proxies.ML_Output_Entity_Iris_RF_ML_Model` proxy to retrieve the `Output_label` attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n    @java.lang.Override\n    public java.lang.String executeAction() throws Exception\n    {\n      this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.ML_Output_Entity_Iris_RF_ML_Model.initialize(getContext(), __Parameter);\n    \n      // BEGIN USER CODE\n      if (Parameter.getOutput_label() == 0) {\n        return \"Setosa\";\n      } else if (Parameter.getOutput_label() == 1) {\n        return \"Versicolour\";\n      } else\n        return \"Virginica\";\n      // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Defining Interface for ListValue Properties in Mendix\nDESCRIPTION: Interface definition that shows the structure of props for a widget with various list-related properties including data sources, attributes, and associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    mySelectableObjects: ListValue;\n    myAttributeString: ListAttributeValue<string>;\n    myAttributeBoolean: ListAttributeValue<boolean>;\n    myAttributeNumber: ListAttributeValue<BigJS>;\n    myAssociationReference: ListReferenceValue;\n    myAssociationReferenceSet: ListReferenceSetValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Day of Year from DateTime in Studio Pro - Mendix XPath\nDESCRIPTION: This snippet demonstrates how to use the `day-of-year-from-dateTime()` function in the Mendix Studio Pro environment to filter logs based on the day of the year extracted from a DateAttribute. The query retrieves logs where the day is equal to 40 in the local timezone, effectively selecting dates like '2011-02-09' and '2012-02-09'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n[day-of-year-from-dateTime(DateAttribute) = 40]\n```\n\n----------------------------------------\n\nTITLE: Custom Authentication Microflow for OData Service in Mendix\nDESCRIPTION: This XML snippet illustrates the custom authentication microflow used in the publishing app to validate tokens received from the OData service request. It processes the Authorization header to validate user information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/security-authentication.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<figure src=\"/attachments/catalog/security/authentication-microflow.png\" alt=\"authentication microflow\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Checking Variable Name Usage in a Microflow in C#\nDESCRIPTION: This example demonstrates how to check if a variable name is already in use within a microflow before adding a new activity. It creates a microflow call activity and validates the output variable name to avoid conflicts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\npublic void AddNewActivity(IModel currentApp, IMicroflow microflow, string activityName)\n{\n    using var transaction = currentApp.StartTransaction(\"Create microflows\");\n\n    var microflowCallActivity = currentApp.Create<IActionActivity>();\n    var microflowCallAction = currentApp.Create<IMicroflowCallAction>();\n    microflowCallAction.MicroflowCall = currentApp.Create<IMicroflowCall>();\n    microflowCallAction.MicroflowCall.Microflow = microflow.QualifiedName;\n    microflowCallActivity!.Action = microflowCallAction;\n\n    if (!_microflowService.IsVariableNameInUse(microflow, activityName))\n        microflowCallAction.OutputVariableName = activityName;\n    else\n    {\n        _messageBoxService.ShowError(\"That variable name is already in use.\");\n        return;\n    }\n\n    _microflowService.TryInsertAfterStart(microflow, microflowCallActivity);\n\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Thread Stack Traces in Mendix Runtime (JSON)\nDESCRIPTION: This endpoint returns all current thread stack traces by name, useful for low-level analysis of application behavior. It provides more detailed information than the 'get_current_runtime_executions' request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\" : \"get_all_thread_stack_traces\",\n  \"params\":{}\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\": {\n    \"qtp1967003817-95\":[\n      \"sun.misc.Unsafe.park(Native Method)\",\n      \"java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\",\n      \"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)\",\n      \"java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\",\n      \"com.mendix.modules.microflowengine.debugger.internal.EventPusher.handleRequest(EventPusher.scala:18)\",\n      \"com.mendix.modules.microflowengine.debugger.internal.DebuggerHandler.processJsonRequest(DebuggerHandler.scala:124)\",\n      \"com.mendix.modules.microflowengine.debugger.internal.DebuggerHandler.processRequest(DebuggerHandler.scala:50)\",\n      \"com.mendix.externalinterface.connector.MxRuntimeConnector$1.execute(MxRuntimeConnector.java:69)\",\n      \"com.mendix.externalinterface.connector.MxRuntimeConnector$1.execute(MxRuntimeConnector.java:66)\",\n      \"com.mendix.util.classloading.Runner.doRunUsingClassLoaderOf(Runner.java:32)\",\n      \"com.mendix.externalinterface.connector.MxRuntimeConnector.processRequest(MxRuntimeConnector.java:72)\",\n      \"com.mendix.core.impl.MxRuntimeImpl.processRequest(MxRuntimeImpl.java:715)\",\n      \"com.mendix.m2ee.appcontainer.server.handler.RuntimeHandler.handle(RuntimeHandler.java:41)\",\n      \"org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\",\n      \"org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\",\n      \"org.eclipse.jetty.server.Server.handle(Server.java:368)\",\n      \"org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)\",\n      \"org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)\",\n      \"org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)\",\n      \"org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:647)\",\n      \"org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)\",\n      \"org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\",\n      \"org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)\",\n      \"org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\",\n      \"org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\",\n      \"org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\",\n      \"java.lang.Thread.run(Thread.java:745)\"\n    ],\n    \"pool-1-thread-10\":[\n      \"sun.misc.Unsafe.park(Native Method)\",\n      \"java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\",\n      \"java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\",\n      \"java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1088)\",\n      \"java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)\",\n      \"java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)\",\n      \"java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\",\n      \"java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\",\n      \"java.lang.Thread.run(Thread.java:745)\"\n    ]\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP Method Selection in REST Call\nDESCRIPTION: Illustrates available HTTP methods for REST service calls including GET, POST, PUT, PATCH, DELETE, HEAD, and OPTIONS\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_1\n\nLANGUAGE: configuration\nCODE:\n```\nHTTP Method: [GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS]\n```\n\n----------------------------------------\n\nTITLE: Using DATEDIFF Function in OQL\nDESCRIPTION: This snippet illustrates how to use the DATEDIFF function to calculate the difference between two date/time values. The function takes three parameters: a unit for measuring the difference, a start date expression, and an end date expression. The output is the calculated difference in the specified unit.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-datediff.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nDATEDIFF ( unit , startdate_expression, enddate_expression )\n```\n\n----------------------------------------\n\nTITLE: Defining ToggleButtonGroup with CSS Variables in JSON\nDESCRIPTION: This snippet demonstrates how to define a ToggleButtonGroup using CSS variables in JSON. It supports the multiSelect feature, with inputs being CSS variables for aligning text. The snippet implies CSS variable dependencies. Outputs are styles affected by the selected CSS variables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n    \"name\": \"Text align\",\n    \"type\": \"ToggleButtonGroup\",\n    \"description\": \"Description of Text align Property\",\n    \"options\": [\n        {\n            \"name\": \"left\",\n            \"variable\": \"--align-left\"\n        },\n        {\n            \"name\": \"center\",\n            \"variable\": \"--align-center\"\n        },\n        {\n            \"name\": \"right\",\n            \"variable\": \"--align-right\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring and Invoking Amazon Bedrock Agents\nDESCRIPTION: Instructions for setting up and invoking Amazon Bedrock agents from a Mendix application, including agent creation, deployment, and implementation of the InvokeAgent operation with appropriate parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-bedrock.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Create the agent, as described in [Create an agent](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-create.html) in the Amazon Bedrock documentation.\n2. Deploy the agent to create an alias, as described in [Deploy your agent](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-deploy.html) in the Amazon Bedrock documentation.\n3. In your Mendix app, create a new microflow and add the **InvokeAgent** operation as a microflow step.\n4. Either pass an **InvokeAgentRequest** object as a parameter to the flow, or create one within the microflow. Ensure that the following attributes are populated for the request:\n\n    * Agent ID\n    * Agent Alias ID\n    * Input text (the prompt to send to the agent).\n    * The session id (by reusing this value in a subsequent request, it is possible to continue a conversation).\n    * Make a choice on 'EnableTrace' to enable or disable the tracking of the reasoning process.\n    * Set 'EndSession' to specify whether or not you want to have the option of continuing the conversation in another request.\n  \n5. Enter the desired region as a value of the **AWSAuthentication.ENUM_Region** type.\n6. Select a **Credentials** object. You can put it in scope with the **AWSAuthentication.GetStaticCredentials** or the **AWSAuthentication.GetTemporaryCredentials** microflow.\n7. Select a microflow that takes an **AmazonBedrockConnector.InvokeAgentResponse** object as an input and handles that response.\n    This is necessary because InvokeAgent is an asynchronous operation which means that it will not necessarily finish when the process that it was invoked from finishes. By giving the operation a handler microflow, the response can be handled as soon as it arrives. For an example handler microflow, see **AmazonBedrockConnector.InvokeAgentResponse_Handle** in the connector module. This microflow logs the response, so you can also use it just to investigate the response.\n```\n\n----------------------------------------\n\nTITLE: Generating Multiple Microflows in Mendix Studio Pro with C#\nDESCRIPTION: Implements the CreateMicroflowsInFolder method to create multiple microflows for mathematical operations. It sets up return value expressions and calls methods to create specific microflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nvoid CreateMicroflowsInFolder(IModel currentApp, IFolderBase folder)\n{\n    string multiplicationResult = \"multiplicationResult\";\n    string additionResult = \"additionResult\";\n\n    string returnValueExpression = $\"(${multiplicationResult} - round(${additionResult}) > 0)\";\n\n    var callingMicroflow = microflowService.CreateMicroflow(currentApp, folder, \"Microflow\",\n        new MicroflowReturnValue(DataType.Boolean, microflowExpressionService.CreateFromString(returnValueExpression)));\n\n    CreateMultiplicationMicroflow(currentApp, folder, callingMicroflow, multiplicationResult);\n    CreateAdditionMicroflow(currentApp, folder, callingMicroflow, additionResult);\n}\n```\n\n----------------------------------------\n\nTITLE: Enhancing InputProps with Accessibility\nDESCRIPTION: This segment involves adding id and aria attributes to the TextInput component, making it accessible to screen readers. It requires the classnames library for styling and uses key props like id, aria-labelledby, aria-invalid, and aria-required to handle input accessibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface InputProps {\n    id?: string;\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    hasError?: boolean;\n    required?: boolean;\n    disabled?: boolean;\n    onLeave?: (value: string, changed: boolean) => void;\n}\n\nrender(): ReactNode {\n    const className = classNames(\"form-control\", this.props.className);\n    const labelledby = `${this.props.id}-label` \n        + (this.props.hasError ? ` ${this.props.id}-error` : \"\");\n\n    return <input\n        id={this.props.id}\n        type=\"text\"\n        className={className}\n        style={this.props.style}\n        value={this.getCurrentValue()}\n        tabIndex={this.props.tabIndex}\n        onChange={this.onChangeHandle}\n        disabled={this.props.disabled}\n        onBlur={this.onBlurHandle}\n        aria-labelledby={labelledby}\n        aria-invalid={this.props.hasError}\n        aria-required={this.props.required}\n    />;\n}\n```\n\n----------------------------------------\n\nTITLE: Fully Rolling Out an Update with Native Builder CLI\nDESCRIPTION: Completes the rollout of an update by changing the rollout percentage to 100% using Native Builder CLI. This ensures the update reaches all users. Specify the project name, target version, and build number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_5\n\nLANGUAGE: Text\nCODE:\n```\nnative-builder.exe release patch-update --project-name \"CoolApp\" --target-version \"1.0.0\" --build-number 1 --rollout-percentage 100\n```\n\n----------------------------------------\n\nTITLE: Delete Security Group Request\nDESCRIPTION: HTTP DELETE request example for removing a security group. Requires Company Manager role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_22\n\nLANGUAGE: http\nCODE:\n```\nDELETE /legacy-api/1/groups/a552a41b-5b30-41000-bab7-ad102eacd653 HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Daemon with Minikube in Bash\nDESCRIPTION: This command configures the local environment to use the Docker daemon provided by Minikube. It is required after Minikube is running to ensure that subsequent Docker commands interact with the Minikube environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"minikube docker-env\"\n```\n\n----------------------------------------\n\nTITLE: Adding Server-Side Sorting to the Microflow\nDESCRIPTION: This snippet illustrates how to update the 'Call_REST' microflow to incorporate server-side sorting by modifying the REST service URL to include sorting parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open your **Call_REST** microflow.\n2. Double-click the **Call REST service** activity.\n3. Click **Location** > **Edit**.\n4. Add `&_sort={2}&_order={3}` to the end of your current **Template** address:\n5. Click **Parameters** > **New** to add the second parameter and enter the following expression `toLowerCase($Paging/SortAttribute)`:\n6. Click **OK** to accept this expression.\n7. Click **Parameters** > **New** to add the third parameter and enter the following expression `if $Paging/SortAscending then 'asc' else 'desc'`:\n8. Click **OK** to accept this expression.\n9. Click **OK** to accept the changes in the location.\n10. Click **OK** once more to accept the changes in the **Call REST service** activity.\n```\n\n----------------------------------------\n\nTITLE: Returning Object List with JSON in Mendix\nDESCRIPTION: This JSON payload represents a response from the Mendix Runtime Server containing a list of objects. Each object includes its type, GUID, and a set of attributes with their values.  This is the structure for returning object data to the client.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"actionResult\":[\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710657\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"piet\"},\n            \"DateOfBirth\":{\"value\":476406000000},\n            \"Jobtitle\":{\"value\":\"consultant\"},\n            \"Department\":{\"value\":\"expert services\"},\n            \"Lastname\":{\"value\":\"jansen\"}\n         }\n      },\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710957\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"wee\"},\n            \"DateOfBirth\":{\"value\":1454886000000},\n            \"Jobtitle\":{\"value\":\"ewji\"},\n            \"Department\":{\"value\":\"wew\"},\n            \"Lastname\":{\"value\":\"ewfeew\"}\n         }\n      },\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710958\"\n         …\n      }\n      …\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to Epoch Milliseconds in Mendix\nDESCRIPTION: Converts a Date and time value to the number of milliseconds since January 1, 1970, 00:00:00 GMT (Unix epoch time). Returns a long integer value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\ndateTimeToEpoch(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Calculating Milliseconds Between Dates in Java\nDESCRIPTION: The millisecondsBetween function calculates the difference between two dates in milliseconds. It takes two DateTime parameters and returns a Decimal value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmillisecondsBetween(dateTime(2007, 1, 1, 1, 1, 1), dateTime(2007,1,1,1,1,3))\n```\n\n----------------------------------------\n\nTITLE: Example Metrics Agent Configuration - JSON\nDESCRIPTION: This JSON example illustrates how to configure the Metrics Agent to log all request handlers, a specific microflow, and two activities in a Mendix application. It serves as a practical demonstration of the configuration format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"requestHandlers\": [\n    {\n      \"name\": \"*\"\n    }\n  ],\n  \"microflows\": [\n    {\n      \"name\": \"Administration.After_Startup\"\n    }\n  ],\n  \"activities\": [\n    {\n      \"name\": \"CreateObject\"\n    },\n    {\n      \"name\": \"DeleteObject\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an Expense Test Method in Java with Selenium WebDriver\nDESCRIPTION: Test method that automates creating a new expense by clicking the New Expense button, entering an amount, selecting a description from the dropdown, and saving the expense. Uses CSS selectors to target UI elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=4)\npublic void createExpense() {\n\tdriver.findElement(By.cssSelector(\".mx-name-newButton3\")).click();\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-textBox6 input\")).clear();\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-textBox6 input\")).sendKeys(\"15.00\");\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-referenceSelector1 option:nth-child(2)\")).click();\n\tdriver.findElement(By.cssSelector(\".mx-window-active .mx-name-saveButton1\")).click();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic OQL SELECT Syntax in Mendix\nDESCRIPTION: The fundamental syntax pattern for OQL SELECT clause statements. It demonstrates the structure including optional DISTINCT keyword, selection expressions, and column aliases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT [ DISTINCT ]\n    {\n            *\n        | { entity_name | from_alias }.*\n        | { expression [ [ AS ] column_alias ] } [ ,...n ]\n    }\n```\n\n----------------------------------------\n\nTITLE: Referencing the Web Service Return Value in Mendix\nDESCRIPTION: This expression references the variable that stores the return value from the web service operation to display in a message dialog.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-simple-web-service.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\n$TemperatureInFahrenheit\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Aggregates with GROUP BY Clause - OQL\nDESCRIPTION: This snippet demonstrates how to specify multiple aggregate functions in conjunction with GROUP BY. It retrieves total, minimum, and maximum stock values per brand from the Sales.Location entity. This query provides a summary of stock per brand, allowing for a comprehensive view of stock metrics.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_31\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tBrand,\n\tSUM(Stock) AS SumStock,\n\tMIN(Stock) AS MinStock,\n\tMAX(Stock) AS MaxStock\nFROM Sales.Location\nGROUP BY Brand\n```\n\n----------------------------------------\n\nTITLE: Implementing String Import with Mapping in Java\nDESCRIPTION: Java code that creates an action to import JSON strings using import mappings. The action takes an input string, import mapping name, and result entity type as parameters. It creates an InputStream from JSON input and uses Core.integration().importStream() to perform the import.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-connector-kit.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nInputStream inputStream = new ByteArrayInputStream(InputString.getBytes(StandardCharsets.UTF_8));\nIMendixObject result = (IMendixObject) Core.integration().importStream(context, inputStream, ImportMapping);\nreturn result;\n```\n\n----------------------------------------\n\nTITLE: Multiple ORDER BY Criteria Query\nDESCRIPTION: Shows how to sort results using multiple ordering criteria.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_39\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nORDER BY LastName, FirstName\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Comparison in Mendix\nDESCRIPTION: This snippet demonstrates a less than or equal to comparison in Mendix. It compares two integer values and returns a boolean value based on whether the first value is less than or equal to the second.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n\"6<=3\"\n```\n\nLANGUAGE: Java\nCODE:\n```\n\"3<=3\"\n```\n\n----------------------------------------\n\nTITLE: DOM Structure Changes\nDESCRIPTION: Explains the DOM structure changes introduced in Studio Pro 10 to ensure compatibility with future versions of React. It describes the addition of a `div[data-widget-wrapper]` element around React widgets rendered as Dojo widgets and the removal of the extra `script` element. The description further explains the potential impact on CSS styling that relies on direct child, sibling, or `nth-child` selectors and how to resolve styling issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/installation/upgrading-from-9-to-10.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Calculating Minutes Between Dates in Java\nDESCRIPTION: The minutesBetween function calculates the difference between two dates in minutes. It takes two DateTime parameters and returns a Decimal value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nminutesBetween(dateTime(2007, 1, 1, 1, 2, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Runtime Create Operation Configuration\nDESCRIPTION: JSON configuration for the create operation stored in the Runtime registry\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {\n        \"ObjectType\": \"MyFirstModule.Employee\"\n    },\n    \"id\": \"ntjTpU3TgkGh/QiiBMR1PQ\",\n    \"parameters\": {},\n    \"type\": \"create\"\n}\n```\n\n----------------------------------------\n\nTITLE: Granting Oracle Privileges for Mendix User\nDESCRIPTION: SQL commands to grant the necessary privileges to a Mendix user in Oracle. These permissions allow the user to create sessions, sequences, and tables, which are required for Mendix to properly represent its domain model and interact with data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/oracle.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nGRANT UNLIMITED TABLESPACE TO mendix\n```\n\n----------------------------------------\n\nTITLE: TextToSpeech with Browser API Check\nDESCRIPTION: Enhanced implementation that includes browser compatibility check for the SpeechSynthesis API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction TextToSpeech(text) {\n    // BEGIN USER CODE\n    // Documentation: https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis\n    // Compatibility: https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis#Browser_compatibility\n    if (!text) {\n        return Promise.resolve(false);\n    }\n    if (\"speechSynthesis\" in window === false) {\n        return Promise.reject(\"Browser does not support text to speech\");\n    }\n    return Promise.reject(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Matching in Java\nDESCRIPTION: Shows how to use isMatch() function to test if a string matches a regular expression pattern.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nisMatch('234hello6432', '^([0-9]+)$')\n```\n\n----------------------------------------\n\nTITLE: Obtaining Debugger Credentials in Mendix Cloud\nDESCRIPTION: Procedure for retrieving debugger URL and password from Mendix Cloud environment through Developer Portal\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-microflows/debug-microflows-remotely.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nOpen Apps > Environments > Deploy Tab > Details > Show Debugger Information\n```\n\n----------------------------------------\n\nTITLE: Checking if a Synchronization is Running in Mendix\nDESCRIPTION: Demonstrates the isSyncing() function which checks if there is currently a synchronization process running. Returns a Boolean value and is only available in client-side expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nisSyncing()\n```\n\n----------------------------------------\n\nTITLE: Creating WebDriver Variable in TestNG\nDESCRIPTION: Declares a WebDriver instance variable to control browser automation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic WebDriver driver;\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint for Object Owner in Mendix\nDESCRIPTION: An XPath constraint that limits access to objects where the current user is the owner of the object. This is only valid when the 'Store owner' checkbox is enabled in the entity properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n[System.owner='[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Using GreaterThan Helper for Filtering in TypeScript\nDESCRIPTION: Demonstrates how to use the greaterThan helper to create a filter condition that keeps items where a value is greater than a specific literal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_32\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is greater than 42\nconst filterCondition = greaterThan(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Simplified Custom Widget Properties\nDESCRIPTION: Simplified JSON configuration for custom widget design properties in themesource module\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n \"MyCustomWidget\": [\n  {\n   \"name\": \"Opacity\",\n   \"type\": \"Dropdown\",\n   \"description\": \"Emphasize the visual-importance via opacity.\",\n   \"options\": [\n    {\n     \"name\": \"Light\",\n     \"class\": \"opacity-light\"\n    },\n    {\n     \"name\": \"Normal\",\n     \"class\": \"opacity-normal\"\n    }\n   ]\n  }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Access Rules on the Order Entity Using XPath - Mendix\nDESCRIPTION: This section defines the access rules for the Order entity using an XPath constraint to restrict visibility based on the payment status. It guides the user through setting up the necessary constraints in the Mendix Access Rules section for the Financial Administrator role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/define-access-rules-using-xpath.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **Access rules** tab for the **Order** entity:\n\n    {{< figure src=\"/attachments/refguide/modeling/xpath/define-access-rules-using-xpath/18580996.png\" class=\"no-border\" >}}\n\n2. Double-click the **FinancialAdministrator** module role to open its properties and go to the **XPath constraint** tab:\n\n    {{< figure src=\"/attachments/refguide/modeling/xpath/define-access-rules-using-xpath/18581000.png\" class=\"no-border\" >}}\n\n3. To constrain the access of the financial administrator to only **Complete** orders, add the following **XPath**:\n\n    {{< figure src=\"/attachments/refguide/modeling/xpath/define-access-rules-using-xpath/18580995.png\" class=\"no-border\" >}}\n\n4. Click **OK** and re-deploy your application.\n5. When you sign in with the **Financial Administrator** account, you will see that only completed orders are shown in the orders overview:\n\n    {{< figure src=\"/attachments/refguide/modeling/xpath/define-access-rules-using-xpath/18580994.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Executing a Filtered SQL Query in Mendix with Snowflake\nDESCRIPTION: This SQL snippet retrieves records from the HISTORY_DAY table with postal code and country filters to limit the dataset returned to the Mendix application. It enhances performance by allowing pre-filtering at the database level before data is displayed in the Mendix app. Parameters are expected to be provided dynamically based on user input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nselect *\nfrom   STANDARD_TILE.HISTORY_DAY\nwhere  ({filterPostalCode1} IS NULL \n                or (postal_code like '%' ||{filterPostalCode2}|| '%'))\n    and ({filterCountry1} IS NULL \n                or (country like '%' ||{filterCountry2}|| '%')) \nlimit 1000\n```\n\n----------------------------------------\n\nTITLE: Output of Unary Minus Operation in Java\nDESCRIPTION: This code snippet shows the output of using the unary minus operator on a variable. Given $myVariable with a value of -7, the output will be 7 when the unary minus is applied.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/unary-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n7\n```\n\n----------------------------------------\n\nTITLE: Getting Association Value in TypeScript\nDESCRIPTION: Example of obtaining a DynamicValue<ObjectItem> representing an associated object from a data source item.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nconst associationValue = this.props.myAssociationOnDatasource.get(this.props.myDataSource.items[0]);\n```\n\n----------------------------------------\n\nTITLE: DynamicValue Type Definition in TypeScript\nDESCRIPTION: Defines the DynamicValue type which represents values that can change over time. It uses a discriminated union pattern with three possible states: Available, Unavailable, and Loading.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport type DynamicValue<X> =\n    | { readonly status: ValueStatus.Available; readonly value: X }\n    | { readonly status: ValueStatus.Unavailable; readonly value: undefined }\n    | { readonly status: ValueStatus.Loading; readonly value: X | undefined };\n    \nexport const enum ValueStatus {\n    Loading = \"loading\",\n    Unavailable = \"unavailable\",\n    Available = \"available\"\n}\n```\n\n----------------------------------------\n\nTITLE: INNER JOIN Syntax in OQL\nDESCRIPTION: This code snippet provides the syntax for using an 'INNER JOIN' in OQL, which is the default join operation used to filter pairs of rows that have associations matching specified constraints between entities. It outlines the mechanism of associating two entities where each pair of rows that meet the join predicate will be included in the result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n[ INNER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Tooltip in JSON\nDESCRIPTION: Defines the properties for tooltip functionality in a chart, controlling the hover behavior and how information is displayed during user interaction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hovermode\": \"text\",\n  \"hovertext\": \"text\",\n  \"hoverinfo\": \"all\",\n  \"textposition\": \"inside\",\n  \"hoverlabel\": {\n    \"bgcolor\": \"#888\",\n    \"bordercolor\": \"#888\",\n    \"font\": {\n      \"color\": \"white\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: DB2 SQL Error for Transaction Log Depletion\nDESCRIPTION: Shows the exception thrown when the transaction log space is depleted or there's a temporary increase in active transactions. This error with SQL code -964 indicates that LOGPRIMARY size needs to be increased.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/db2.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\ncom.ibm.db2.jcc.am.SqlException: DB2 SQL Error: SQLCODE=-964, SQLSTATE=57011, SQLERRMC=null\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure SQL Database Plan in mxpc-cli\nDESCRIPTION: This snippet details the configuration for an Azure SQL database plan in mxpc-cli. It includes server details, authentication method, and Azure-specific settings like Elastic Pool, Edition, and Service Objective.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nDatabase:\n  type: sqlserver\n  host: <Server name of Azure SQL database server>\n  port: 1433\n  strict_tls: yes\n  authentication: azure-wi\n  managed_identity_client_id: <Client ID of storage admin Managed Identity>\n  k8s_service_account: mendix-storage-provisioner-wi\n  is_azure_sql_server: yes\n  elastic_pool: <Optional: Name of existing Elastic Pool>\n  edition: Basic\n  service_objective: Basic\n  maximum_size: 1 GB\n```\n\n----------------------------------------\n\nTITLE: Calculating Beginning of Week in Java\nDESCRIPTION: This snippet shows using the `beginOfWeek` function to determine the start of the week based on a provided date, influenced by the user's locale or browser settings in case of anonymous users. Needs a Date and time type input and outputs the first day of the week with time set to midnight.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nbeginOfWeek(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: XPath Predicates Fix in Constraint Editor\nDESCRIPTION: Fix for XPath constraint suggestions when using multiple predicates (expressions between square brackets).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.0.md#2025-04-21_snippet_2\n\nLANGUAGE: xpath\nCODE:\n```\n[[ ]]\n```\n\n----------------------------------------\n\nTITLE: Recreating StackOverflow with Microflow in Mendix\nDESCRIPTION: This Java snippet demonstrates a scenario where a StackOverflowError can occur in a Mendix application by creating a microflow that calls itself in an infinite loop. This can result in a crash due to the overflow of the runtime stack.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/runtime-java/runtime-java-errors.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nCreating a microflow called 'Microflow' with a single microflow call action and selecting the microflow called 'Microflow'.\n```\n\n----------------------------------------\n\nTITLE: Configuring React Client Setting\nDESCRIPTION: Configuration options for enabling the new React version of the Mendix Client, with three possible modes: No, Yes, and Migration mode\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-explorer/app/app-settings/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nUse React Client:\n  - No: Do not use the React client (default)\n  - Yes: Use the React client\n  - Migration mode: Use React client with incompatible widget handling\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Styles in Chart Series\nDESCRIPTION: JSON configuration for different line styles including markers, combined lines and markers, and various dash patterns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"mode\": \"markers\"\n  },\n  {\n    \"mode\": \"lines+markers\"\n  },\n  {\n    \"mode\": \"lines\"\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"dash\": \"dashdot\"\n    }\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"dash\": \"dot\"\n    }\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"dash\": \"longdash\"\n    }\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"width\": 5\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Handling Empty Search Criteria in Mendix Expression\nDESCRIPTION: Conditional expression that handles empty search input by returning an empty string, otherwise returns the search value from the Paging entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_7\n\nLANGUAGE: expression\nCODE:\n```\nif $Paging/Name = empty then '' else $Paging/Name\n```\n\n----------------------------------------\n\nTITLE: Setting Metrics Configuration in OperatorConfiguration - YAML\nDESCRIPTION: This YAML snippet sets up the default metrics configuration for a namespace in Mendix by modifying the `OperatorConfiguration` or `MendixApp` CR. It includes parameters for metrics mode and interval and configures the Mendix monitoring agent. Prerequisites include having Mendix Operator v2.4.0 or later. The output configures metrics monitoring as specified.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n…\n  # Metrics configuration\n  runtimeMetricsConfiguration:\n    mode: native\n    interval: \"PT1M\"\n    mxAgentConfig: |-\n      {\n        \"requestHandlers\": [\n          {\n            \"name\": \"*\"\n          }\n        ],\n        \"microflows\": [\n          {\n            \"name\": \"*\"\n          }\n        ],\n        \"activities\": [\n          {\n            \"name\": \"*\"\n          }\n        ]\n      }\n    mxAgentInstrumentationConfig: |-\n      {\n        …\n      }\n  # …\n\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Tags POST Request in Bash\nDESCRIPTION: Example POST request for adding tags to a Mendix environment. Tags can be used for metrics in Datadog or for grouping environments in a landscape management dashboard.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps/calc/environments/acceptance/tags\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n\t\"Tag\": \"europe\"\n}\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Weeks Example\nDESCRIPTION: Shows the output of subtracting 2 weeks from January 15, 2007, 01:01:01. The result is January 1, 2007, 01:01:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:01:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Configuring Service-type Network Endpoints for Mendix Private Cloud\nDESCRIPTION: YAML configuration for setting up Kubernetes Services as network endpoints without Ingress or OpenShift routes. Includes service type, annotations, and custom port configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # Endpoint (Network) configuration\n  endpoint:\n    # Endpoint type: ingress, openshiftRoute, or service\n    type: service\n    # Optional, can be omitted: the Service type\n    serviceType: LoadBalancer\n    # Optional, can be omitted: Service annotations\n    serviceAnnotations:\n      # example: annotations required for AWS NLB\n      service.beta.kubernetes.io/aws-load-balancer-type: external\n      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip\n      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing\n    # Optional, can be omitted: Service ports\n    servicePorts:\n      - 80\n      - 443\n```\n\n----------------------------------------\n\nTITLE: Delete - Event Functionality\nDESCRIPTION: This snippet outlines the 'Delete' event's behavior in different data containers within Mendix. It describes how it deletes objects based on the context where it is placed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nThe **Delete event** deletes an object. Its behavior depends on a data container it is placed in.\n```\n\n----------------------------------------\n\nTITLE: Including Common Section for Radio Buttons\nDESCRIPTION: This snippet includes the common section properties related to the radio buttons widget, detailing shared attributes and functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_0\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Header Caption Property in XML\nDESCRIPTION: This XML snippet defines the header caption property for the Group Box widget. It specifies the property key, type, and caption for use in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_9\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"headerCaption\" type=\"string\" required=\"false\">\n    <caption>Header caption</caption>\n    <description />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year, Month, and Day in Mendix\nDESCRIPTION: Creates a date object by specifying the year (2007), month (1 for January), and day (1), with time set to midnight.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: OQL Aggregate Function with WHERE Clause for Order Totals\nDESCRIPTION: Calculates the sum of total amounts for all paid orders. This query shows how to use aggregate functions and filter on boolean fields, with proper quoting of reserved words.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT SUM(TotalAmount) FROM Sales.\"Order\" WHERE IsPaid = true\n```\n\n----------------------------------------\n\nTITLE: Module Properties Definition Table\nDESCRIPTION: Definition of module role properties showing name and documentation fields\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/security/module-security.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* **Name** – the name of a module role; end-users do not see the names of module roles, if they create or view user accounts, they only see the names of user roles\n* **Documentation** – the documentation of a module role is there only for the convenience of Studio Pro users, it is not displayed to the end-users\n```\n\n----------------------------------------\n\nTITLE: Using Image Component with SVG in Pluggable Widget\nDESCRIPTION: This JSX code demonstrates how to use the `Image` component from `mendix/components/native/Image` to display an SVG within a pluggable native widget. The `source` prop specifies the image source, and the `style` prop allows for applying styling, such as setting the `fill` color. This provides a way to use static images, including SVGs, in pluggable widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createElement } from \"react\";\nimport { Image } from \"mendix/components/native/Image\";\n\nexport const PluggableWidget = () => (\n    <Image source=\"PUT_SOURCE_HERE\" style={{ fill: 'blue' }} />\n);\n```\n\n----------------------------------------\n\nTITLE: Editing the New Microflow in Mendix\nDESCRIPTION: This snippet outlines the steps to configure the newly created microflow to display a message. It provides detailed instructions on modifying the microflow using Mendix's visual tools, including adding activities and setting properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/trigger-microflow-from-menu-item.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **Hello World** microflow by right-clicking the new menu item created in the previous section and selecting **Go to target**.\n2. Open the **Toolbox** and search for the **Show message** activity:\n3. Drag the **Show message** activity from the **Toolbox** into the flow between the start event and end event.\n4. Double-click the message activity to open the **Show Message** properties.\n5. Enter *Hello World* for the **Template** value and click **OK**.\n6. Click **Run Locally** and then **View** to see the application in your default browser.\n7. Click the **Hello World** menu item in the menu bar to see the message.\n```\n\n----------------------------------------\n\nTITLE: Runtime Commit Operation Configuration\nDESCRIPTION: JSON configuration for the commit operation stored in the Runtime registry\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {},\n    \"id\": \"EjuFdBJ7EUC93YSYtlb7Mg\",\n    \"parameters\": {\n        \"Objects\": [\n            \"AnyObjectList\"\n        ]\n    },\n    \"type\": \"commit\"\n}\n```\n\n----------------------------------------\n\nTITLE: ActionValue Interface Definition - TypeScript\nDESCRIPTION: Defines the interface for action properties like button clicks, including execution state and control methods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ActionValue {\n    readonly canExecute: boolean;\n    readonly isExecuting: boolean;\n    execute(): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic JavaScript Action with Parameter Check\nDESCRIPTION: Initial code structure for the SearchGitHubUsers JavaScript action with a check to verify if the required query parameter has been set correctly. Returns an empty list if no query is provided.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    throw new Error(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Firebase Dependency from Android Gradle Settings\nDESCRIPTION: Remove Firebase module entries from the Android Gradle settings file when removing the dependency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally-manually.md#2025-04-21_snippet_4\n\nLANGUAGE: gradle\nCODE:\n```\ninclude ':react-native-firebase'\nproject(':react-native-firebase').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-firebase/android')\n```\n\n----------------------------------------\n\nTITLE: OQL Query Example\nDESCRIPTION: This OQL query calculates the aggregated total order amount for all orders of a customer within a specific customer group. It selects the customer's name and the sum of total amounts, grouping the results by customer name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\n\"FROM CRM.Customers As CustomerObj\nINNER JOIN CustomerObj/CRM.Orders_Customer/CRM.Orders As OrderObj\nWHERE CustomerObj/CRM.Customer_Group = $ParGroup\nGROUP BY CustomerObj/Name\nSELECT CustomerObj/Name As Name, SUM(OrderObj/TotalAmount) As TotalAmount\"\n```\n\n----------------------------------------\n\nTITLE: Inserting New Employee Data in SQL (Runtime Server to RDBMS)\nDESCRIPTION: This SQL query is executed by the Runtime Server to insert a new Employee record into the database. It includes placeholders for all the attribute values of the Employee entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nINSERT INTO \"myfirstmodule$employee\" (\"id\",\n\"firstname\",\n\"dateofbirth\",\n\"jobtitle\",\n\"department\",\n\"lastname\")\nVALUES (?,\n?,\n?,\n?,\n?,\n?)\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Email Attachments with a Microflow\nDESCRIPTION: This process outlines how to create an email message with an inline image attachment using a microflow. It details the steps for setting up the content and associating the attachment with the email message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n'before inline image<br><img src=\"cid:mxcid:test.png\" width=\"530\" height=\"110\"><br>after inline image'\n```\n\n----------------------------------------\n\nTITLE: Handling DB2 SQL Error for Index Creation\nDESCRIPTION: Example of a DB2 SQL exception thrown when an index is too large for the page size. This requires increasing the table space page size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/db2.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\ncom.ibm.db2.jcc.am.SqlException: DB2 SQL Error: SQLCODE=-614, SQLSTATE=54008, SQLERRMC=some_index_name\n```\n\n----------------------------------------\n\nTITLE: Multiplication Example in Mendix Expressions\nDESCRIPTION: Demonstrates how to multiply two numbers in Mendix expressions. The operation returns an Integer/Long if both inputs are Integer/Long, or a Decimal if either input is a Decimal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n2*3\n```\n\nLANGUAGE: java\nCODE:\n```\n6\n```\n\n----------------------------------------\n\nTITLE: Configuring Scheduled Event Properties in Mendix\nDESCRIPTION: Overview of key configuration properties for scheduled events including name, documentation, microflow, and execution settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/scheduled-events/scheduled-events-task-queue.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n| Property | Description |\n| --- | --- |\n| Name | The name of the scheduled event |\n| Documentation | Optional documentation field |\n| Microflow | Microflow to be executed |\n| Enabled | Toggle event execution\n```\n\n----------------------------------------\n\nTITLE: Generating Excel Document Using Java Action - Mendix - Java\nDESCRIPTION: This snippet explains how to call the XLSReport.GenerateExcelDoc Java action within a microflow to export a document. The Java action requires input of specific objects, which are passed from the microflow to generate a FileDocument object as output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/using-the-excel-exporter.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n// Call the Java action to generate an Excel document\n// Input the necessary objects here\nXLSReport.GenerateExcelDoc(objToExport, templateObj);\n```\n\n----------------------------------------\n\nTITLE: GetI18NText Microflow Implementation\nDESCRIPTION: Microflow that validates and retrieves internationalized text, preventing null pointer exceptions through validation checks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Calculating Weeks Between Dates in Java\nDESCRIPTION: The `weeksBetween` function computes the absolute difference between two date values in weeks. It accepts two Date and Time objects and returns a decimal value representing the difference in weeks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nweeksBetween(dateTime(2007, 1, 9, 1, 1, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Custom Legend Configuration (JSON)\nDESCRIPTION: This snippet shows how to customize the legend's appearance by adding specific properties to the layout configuration. It allows you to modify the background color, border color, font, orientation, trace order, trace group gap, and position of the legend. These adjustments enhance the readability and visual appeal of the chart's legend.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"legend\": {\n    \"showlegend\": true,\n    \"legend\": {\n      \"bgcolor\": \"#fff\",\n      \"bordercolor\": \"#444\",\n      \"borderwidth\": 0,\n      \"font\":{\n        \"family\": \"Open Sans, verdana, arial, sans-serif\",\n        \"size\": 12,\n        \"color\": \"black\"\n      },\n      \"orientation\": \"v\",\n      \"traceorder\": \"normal\",\n      \"tracegroupgap\": 10,\n      \"x\": -0.1,\n      \"xanchor\": \"right\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ToggleButtonGroup with CSS Classes in JSON\nDESCRIPTION: This JavaScript code snippet demonstrates how to define a ToggleButtonGroup design property using CSS classes. Dependencies include Mendix design properties and CSS classes for alignment. Three options are provided with associated CSS classes for text alignment. Inputs are CSS classes, and the ToggleButtonGroup component changes styles based on the class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n    \"name\": \"Text align\",\n    \"type\": \"ToggleButtonGroup\",\n    \"description\": \"Description of Text align Property\",\n    \"options\": [\n        {\n            \"name\": \"left\",\n            \"class\": \"textAlignLeft\"\n        },\n        {\n            \"name\": \"center\",\n            \"class\": \"textAlignCenter\"\n        },\n        {\n            \"name\": \"right\",\n            \"class\": \"textAlignRight\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Points with Object Headers and Captions in TypeScript\nDESCRIPTION: This snippet demonstrates how to configure geographic coordinate data points with custom formatting. It uses object headers and captions to display latitude and longitude values with degree notation in a table format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n{\n    key: \"dataPoints\",\n    caption: \"Data points\",\n    description: \"\",\n    objectHeaders: [\"N Coordinate\", \"W Coordinate\"], // column headers\n    objects: [\n        {\n            captions: [`${values.dataPoints[0].y}° N`, `${values.dataPoints[0].x}° W`],\n            properties: [\n                {\n                    caption: \"Data Point\",\n                    properties: [\n                        { key: \"y\", caption: \"Y value\", description: \"\" },\n                        { key: \"x\", caption: \"X value\", description: \"\" }\n                    ]\n                }\n            ]\n        },\n        {\n            captions: [`${values.dataPoints[1].y}° N`, `${values.dataPoints[1].x}° W`],\n            properties: [\n                {\n                    caption: \"Data Point\",\n                    properties: [\n                        { key: \"y\", caption: \"X value\", description: \"\" },\n                        { key: \"x\", caption: \"X value\", description: \"\" }\n                    ]\n                }\n            ]\n        },\n        {\n            captions: [`${values.dataPoints[2].y}° N`, `${values.dataPoints[2].x}° W`],\n            properties: [\n                {\n                    caption: \"Data Point\",\n                    properties: [\n                        { key: \"y\", caption: \"X value\", description: \"\" },\n                        { key: \"x\", caption: \"Y value\", description: \"\" }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Introduction Screen Widget Structure in XML\nDESCRIPTION: XML structure for styling introduction screen widget with pagination, navigation buttons, and content containers in both fullscreen and popup modes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_31\n\nLANGUAGE: xml\nCODE:\n```\n<fullscreenContainer>\n\tcontent\n\t<paginationContainer>\n\t\t<dotStyle/><activeDotStyle/><dotStyle/>\n\t</paginationContainer>\n\t<paginationAbove.buttonsContainer>\n\t\t<buttonSkip.container>\n\t\t\t<icon/><caption>Skip</caption>\n\t\t</buttonSkip.container>\n\t\t<buttonPrevious.container>\n\t\t\t<icon/><caption>Back</caption>\n\t\t</buttonPrevious.container>\n\t\t<buttonNext.container>\n\t\t\t<icon/><caption>Next</caption>\n\t\t</buttonNext.container>\n\t\t<buttonDone.container>\n\t\t\t<icon/><caption>Done</caption>\n\t\t</buttonDone.container>\n\t</paginationAbove.buttonsContainer>\n</fullscreenContainer>\n\n<popupContainer>\n\tcontent\n\t<paginationBetween>\n\t\t<buttonSkip.container>\n\t\t\t<icon/><caption>Skip</caption>\n\t\t</buttonSkip.container>\n\t\t<buttonPrevious.container>\n\t\t\t<icon/><caption>Back</caption>\n\t\t</buttonPrevious.container>\n\t\t<paginationContainer>\n\t\t\t<paginationText>4 / 5</paginationText>\n\t\t</paginationContainer>\n\t\t<buttonNext.container>\n\t\t\t<icon/><caption>Next</caption>\n\t\t</buttonNext.container>\n\t\t<buttonDone.container>\n\t\t\t<icon/><caption>Done</caption>\n\t\t</buttonDone.container>\n\t</paginationBetween>\n</popupContainer>\n```\n\n----------------------------------------\n\nTITLE: Defining MyListWidgetsProps Interface with Expressions in TypeScript\nDESCRIPTION: Defines an interface for widget properties including a data source, expression, and text template linked to that data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    myExpressionOnDatasource: ListExpressionValue<boolean>;\n    myTextTemplateOnDatasource: ListExpressionValue<string>;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Web App Manifest for PWA\nDESCRIPTION: This JSON snippet defines the background color and theme color for a PWA's web app manifest, which is essential for controlling the appearance of the app when installed on devices.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/introduction-to-mobile-technologies/progressive-web-app.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"background_color\": \"white\",\n    \"theme_color\": \"#0CABF9\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing DropZone in TypeScript\nDESCRIPTION: This snippet shows how to add a DropZone to a widget preview. It demonstrates setting up a container with a text description and a configurable drop zone for other widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nexports.getPreview = (values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => ({\n    type: \"Container\",\n    borders: true,\n    children: [\n        {\n            type: \"Text\",\n            content: \"This widget acts as a container for other widgets\"\n        },\n        {\n            type: \"DropZone\",\n            property: values.myWidgetsProp\n            placeholder: \"Drop your widgets here!\"\n        }\n    ]\n})\n```\n\n----------------------------------------\n\nTITLE: Using mx merge for Three-Way Merging of MPR Files\nDESCRIPTION: The `mx merge` command performs a three-way merge using base, mine, and theirs *.mpr* files. This command allows users to combine changes from different app versions while accounting for their common ancestor, making it essential for managing app developments across branches.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmx merge [OPTIONS] BASE MINE THEIRS\n```\n\n----------------------------------------\n\nTITLE: Calculating Calendar Years Between Dates in Java\nDESCRIPTION: The calendarYearsBetween function calculates the difference between two dates in years, ignoring time. It takes two DateTime parameters and returns an Integer/Long value. Available in Mendix 8.15 and above.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\ncalendarYearsBetween(dateTime(2007, 1, 1, 10, 1, 1), dateTime(2017, 1, 1, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Gauge Properties Configuration Example\nDESCRIPTION: Illustrates the configuration of a gauge metric activity with details about name, value, and optional tags\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/metrics-activities/metrics-gauge.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nName: application_request_count\nValue: 42.5\nTags:\n  - environment: production\n  - service: user_authentication\n```\n\n----------------------------------------\n\nTITLE: Declaring WebDriver Variable in Java\nDESCRIPTION: Defines a WebDriver variable for Selenium operations. Requires Selenium WebDriver library. No input parameters; initializes the WebDriver object for browser control.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic WebDriver driver;\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Object with OData Query\nDESCRIPTION: Shows how to retrieve a single object by specifying its identifier in the OData URI. This query returns a specific object based on its unique ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_1\n\nLANGUAGE: OData\nCODE:\n```\n/odata/myservice/myresource(8444249301330581)\n```\n\n----------------------------------------\n\nTITLE: Creating Menu with Submenus in Mendix Studio Pro\nDESCRIPTION: This code demonstrates how to create a menu hierarchy with parent menus and child submenus. It creates two top-level menus, with the first one containing multiple levels of child menus. The code shows how to structure the menu objects and handle menu activation events.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/menu-api.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IComponent, Menu, studioPro } from \"@mendix/extensions-api\";\n\nconst menuApi = studioPro.ui.extensionsMenu;\nconst messageBoxApi = studioPro.ui.messageBoxes;\n\n// Open a message box when the menu item is clicked\nstudioPro.ui.extensionsMenu.addEventListener(\"menuItemActivated\", (args) => {\n  messageBoxApi.show(\"info\", `Child menu '${args.menuId}' was clicked`);\n});\nclass Main implements IComponent {\n  async loaded() {\n    const grandChild: Menu = {\n      caption: \"Grandchild Menu\",\n      menuId: \"grandChild\",\n    };\n\n    const childMenu1: Menu = {\n      caption: \"Child Menu 1\",\n      menuId: \"child_1\",\n      subMenus: [grandChild],\n    };\n\n    const childMenu2: Menu = {\n      caption: \"Child Menu 2\",\n      menuId: \"child_2\",\n    };\n\n    const menu1: Menu = {\n      caption: \"Menu 1\",\n      menuId: \"menu1\",\n      subMenus: [childMenu1, childMenu2],\n    };\n\n    const menu2: Menu = {\n      caption: \"Menu 2\",\n      menuId: \"menu2\",\n      subMenus: [],\n    };\n\n    await menuApi.add(menu1);\n    await menuApi.add(menu2);\n  }\n}\n\nexport const component: IComponent = new Main();\n```\n\n----------------------------------------\n\nTITLE: Creating SVG Image Preview for Structure Mode in TypeScript\nDESCRIPTION: This example shows how to create a widget preview with an SVG image in Structure Mode. It defines a circular SVG and sets a maximum width for the preview.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => {\n    const mySvgImage = `\n<svg height=\"1000\" width=\"1000\">\n    <circle cx=\"500\" cy=\"500\" r=\"400\" stroke=\"black\" stroke-width=\"35\" fill=\"blue\" />\n</svg>`;\n    return {\n        type: \"Image\",\n        document: mySvgImage,\n        width: 200 // sets a maximum width of 200\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Hours in Java\nDESCRIPTION: The trimToHours function trims the date to hours by rounding off all minutes to zero, using the user's time zone for calculation. The corresponding UTC version can be used for universal time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ntrimToHours($myDate)\n```\n\n----------------------------------------\n\nTITLE: Calculating Sum of Distinct Stock Values\nDESCRIPTION: Demonstrates using SUM with DISTINCT to sum only unique stock values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sum(DISTINCT Stock) AS DistinctStockSum FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Configuring User Assignment with XPath Constraints in Mendix\nDESCRIPTION: This snippet provides an XPath example for configuring user assignment in workflow tasks. It specifies the conditions under which a user can view their assigned tasks based on their role and the state of the task.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-security.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n'[State = 'InProgress' and (System.WorkflowUserTask_TargetUsers = '[%CurrentUser%]' or System.WorkflowUserTask_Assignee= '[%CurrentUser%]') and System.WorkflowUserTask_Workflow/System.Workflow[State != 'Incompatible' and State != 'Failed']].'\n```\n\n----------------------------------------\n\nTITLE: Example Response for Mendix Runtime Information - JSON\nDESCRIPTION: This snippet shows an example JSON response for the request made to retrieve information about the Mendix Runtime. It includes feedback about the runtime, model version, copyright details, build status, vendor name, Java version, and the unique runtime identifier. The structure allows for easy parsing of runtime metadata.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"feedback\":{\n      \"model_version\":\"unversioned\",\n      \"copyright\":\"Copyright © 2003-2016 Mendix bv. All rights reserved.\",\n      \"build\":\"unreleased\",\n      \"vendor\":\"Mendix\",\n      \"name\":\"Mendix Runtime\",\n      \"java_version\":\"1.8.0_77\",\n      \"xasid\":\"68ece856-3771-4024-9c42-078aaa2282aa\",\n      \"version\":\"unreleased\"\n   },\n   \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Category with XPath in Mendix Microflow\nDESCRIPTION: This XPath query retrieves a Category object from the database based on the CategoryId from the ProductOverviewVE entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_7\n\nLANGUAGE: xpath\nCODE:\n```\n[CategoryId = $ProductOverviewVE/CategoryId]\n```\n\n----------------------------------------\n\nTITLE: Registering HTTP Request Interceptor in Custom Java Actions - Mendix 8.9\nDESCRIPTION: This code example demonstrates how to register an HTTP request interceptor using `Core.http().registerHttpRequestInterceptor(...)` in custom Java actions. This functionality allows for intercepting REST and web service calls, enabling logging or adding headers. It's typically used during application startup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.9.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCore.http().registerHttpRequestInterceptor(function(request) { /* interceptor logic */ });\n```\n\n----------------------------------------\n\nTITLE: Mendix Catalog API Search Response\nDESCRIPTION: Example JSON response from the Catalog API search endpoint showing pagination links, result metadata, and detailed entity information including connections, security classifications, and entity relationships.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/search-api.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"totalResults\": 177,\n    \"links\": [\n        {\n            \"rel\": \"First\",\n            \"href\": \"https://catalog.mendix.com/rest/search/v5/data?offset=0&serviceType=OData&query=Customer&limit=20\"\n        },\n        {\n            \"rel\": \"Current\",\n            \"href\": \"https://catalog.mendix.com/rest/search/v5/data?offset=0&serviceType=OData&query=Customer&limit=20\"\n        },\n        {\n            \"rel\": \"Next\",\n            \"href\": \"https://catalog.mendix.com/rest/search/v5/data?offset=20&serviceType=OData&query=Customer&limit=20\"\n        },\n        {\n            \"rel\": \"Last\",\n            \"href\": \"https://catalog.mendix.com/rest/search/v5/data?offset=160&serviceType=OData&query=Customer&limit=20\"\n        }\n    ],\n    \"data\": [\n        {\n            \"connections\": 11,\n            \"validated\": true,\n            \"description\": \"Primary data source for customer information. Requires approval for prod use - please contact owner for details.\",\n            \"totalEntities\": 3,\n            \"securityClassification\": \"Internal\",\n            \"specificationVersion\": \"3.0\",\n            \"name\": \"CustomerApi\",\n            \"version\": \"1.1.0\",\n            \"serviceType\": \"OData\",\n            \"environment\": {\n                \"type\": \"Production\",\n                \"uuid\": \"6e40b8c9-0d70-47ff-ba8c-cf1a074cafaf\",\n                \"name\": \"Production\",\n                \"location\": \"https://customermanagement103.mendixcloud.com\"\n            },\n            \"links\": [\n                {\n                    \"rel\": \"Self\",\n                    \"href\": \"https://catalog.mendix.com/rest/search/v5/endpoints/ca355a57-dae1-4449-873c-51e2d6fd1755\"\n                },\n                {\n                    \"rel\": \"Catalog\",\n                    \"href\": \"https://catalog.mendix.com/link/endpoint?EndpointUUID=ca355a57-dae1-4449-873c-51e2d6fd1755\"\n                }\n            ],\n            \"entities\": [\n                {\n                    \"topSupported\": true,\n                    \"countable\": true,\n                    \"skipSupported\": true,\n                    \"validated\": false,\n                    \"totalAttributes\": 1,\n                    \"totalAssociations\": 2,\n                    \"namespace\": \"mx.customer.api\",\n                    \"entityTypeName\": \"Customer\",\n                    \"name\": \"Customer\",\n                    \"type\": \"Dataset\",\n                    \"sortable\": true,\n                    \"entitySetName\": \"Customers\",\n                    \"filterable\": true,\n                    \"updatable\": false,\n                    \"links\": [\n                        {\n                            \"rel\": \"Catalog\",\n                            \"href\": \"https://catalog.mendix.com/link/entity?EndpointUUID=ca355a57-dae1-4449-873c-51e2d6fd1755&EntityUUID=9ef95bd7-198a-444a-958a-89c874443409\"\n                        }\n                    ],\n                    \"deletable\": false,\n                    \"attributes\": [\n                        {\n                            \"countable\": true,\n                            \"typeName\": \"Edm.Int64\",\n                            \"typeKind\": \"Attribute\",\n                            \"sortable\": true,\n                            \"filterable\": true,\n                            \"updatable\": false,\n                            \"insertable\": false,\n                            \"name\": \"CustomerId\"\n                        }\n                    ],\n                    \"associations\": [\n                        {\n                            \"countable\": true,\n                            \"multiplicity\": \"*\",\n                            \"entitySetName\": \"ContactHistorys\",\n                            \"updatable\": false,\n                            \"insertable\": false,\n                            \"namespace\": \"mx.customer.api\",\n                            \"referencedDataset\": \"ContactHistory\",\n                            \"name\": \"ContactHistory_Customer\",\n                            \"entityTypeName\": \"ContactHistory\"\n                        },\n                        {\n                            \"countable\": true,\n                            \"multiplicity\": \"0..1\",\n                            \"entitySetName\": \"ContactInfos\",\n                            \"updatable\": false,\n                            \"insertable\": false,\n                            \"namespace\": \"mx.customer.api\",\n                            \"referencedDataset\": \"ContactInfo\",\n                            \"name\": \"ContactInfo_Customer\",\n                            \"entityTypeName\": \"ContactInfo\"\n                        }\n                    ],\n                    \"insertable\": false\n                },\n                {\n                    \"topSupported\": true,\n                    \"countable\": true,\n                    \"skipSupported\": true,\n                    \"validated\": false,\n                    \"totalAttributes\": 0,\n                    \"totalAssociations\": 1,\n                    \"namespace\": \"mx.customer.api\",\n                    \"entityTypeName\": \"ContactHistory\",\n                    \"name\": \"ContactHistory\",\n                    \"type\": \"Dataset\",\n                    \"sortable\": true,\n                    \"entitySetName\": \"ContactHistorys\",\n                    \"filterable\": true,\n                    \"updatable\": false,\n                    \"links\": [\n                        {\n                            \"rel\": \"Catalog\",\n                            \"href\": \"https://catalog.mendix.com/link/entity?EndpointUUID=ca355a57-dae1-4449-873c-51e2d6fd1755&EntityUUID=325261db-a8c0-427e-ab4c-14768bfd9c9a\"\n                        }\n                    ],\n                    \"deletable\": false,\n                    \"associations\": [\n                        {\n                            \"countable\": true,\n                            \"multiplicity\": \"0..1\",\n                            \"entitySetName\": \"Customers\",\n                            \"updatable\": false,\n                            \"insertable\": false,\n                            \"namespace\": \"mx.customer.api\",\n                            \"referencedDataset\": \"Customer\",\n                            \"name\": \"ContactHistory_Customer\",\n                            \"entityTypeName\": \"Customer\"\n                        }\n                    ],\n                    \"insertable\": false\n                },\n                {\n                    \"topSupported\": true,\n                    \"countable\": true,\n                    \"skipSupported\": true,\n                    \"validated\": false,\n                    \"totalAttributes\": 0,\n                    \"totalAssociations\": 1,\n                    \"mamespace\": \"mx.customer.api\",\n                    \"entityTypeName\": \"ContactInfo\",\n                    \"mame\": \"ContactInfo\",\n                    \"type\": \"Dataset\",\n                    \"sortable\": true,\n                    \"entitySetName\": \"ContactInfos\",\n                    \"filterable\": true,\n                    \"updatable\": false,\n                    \"links\": [\n                        {\n                            \"rel\": \"Catalog\",\n                            \"href\": \"https://catalog.mendix.com/link/entity?EndpointUUID=ca355a57-dae1-4449-873c-51e2d6fd1755&EntityUUID=de5140bd-f181-4b0e-ab60-20664cc6184e\"\n                        }\n                    ],\n                    \"deletable\": false,\n                    \"items\": [\n                        {\n                            \"countable\": true,\n                            \"multiplicity\": \"*\",\n                            \"entitySetName\": \"Customers\",\n                            \"updatable\": false,\n                            \"insertable\": false,\n                            \"namespace\": \"mx.customer.api\",\n                            \"referencedDataset\": \"Customer\",\n                            \"name\": \"ContactInfo_Customer\",\n                            \"entityTypeName\": \"Customer\"\n                        }\n                    ],\n                    \"insertable\": false\n                }\n            ],\n            \"lastUpdated\": \"2021-05-26T16:12:52.795Z\",\n            \"uuid\": \"ca355a57-dae1-4449-873c-51e2d6fd1755\",\n            \"application\": {\n                \"type\": \"Other\",\n                \"technicalOwner\": {\n                    \"email\": \"andrej.koelewijn@mendix.com\",\n                    \"uuid\": \"d9d4b5bc-ffe8-4c5c-b237-7358d01f7981\",\n                    \"name\": \"Andrej Koelewijn\"\n                },\n                \"icon\": \"https://catalog.mendix.com/resources/logos/other_icon.png\",\n                \"uuid\": \"1bed66d2-4477-39a9-9144-d0f848212f1e\",\n                \"repositoryLocation\": \"https://sprintr.home.mendix.com/link/project/369386df-35b4-475b-a917-17adcc81c1b5\",\n                \"businessOwner\": {\n                    \"email\": \"andrej.koelewijn@mendix.com\",\n                    \"uuid\": \"d9d4b5bc-ffe8-4c5c-b237-7358d01f7981\",\n                    \"name\": \"Andrej Koelewijn\"\n                },\n                \"name\": \"CustomerApp\"\n            },\n            \"securityScheme\": {\n                \"securityTypes\": [\n                    {\n                        \"name\": \"Anonymous\"\n                    }\n                ],\n                \"mxAllowedRoles\": [\n                    {\n                        \"uuid\": \"8dd52bfa-6d7e-453b-b506-303c0a3d9567\",\n                        \"name\": \"Administrator\"\n                    },\n                    {\n                        \"uuid\": \"53f5d6fa-6da9-4a71-b011-454ec052cce8\",\n                        \"name\": \"User\"\n                    }\n                ]\n\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Customers with Orders Under 30000 in Studio Pro\nDESCRIPTION: This Studio Pro query retrieves customers who have placed at least one order with a `TotalPrice` less than or equal to 30,000, regardless of other orders. It's a contrasting example to the `not()` query, showcasing a different filtering logic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_8\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order/Sales.Order/TotalPrice <= 30000]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customer Names Using OQL\nDESCRIPTION: This OQL query retrieves the names of all customers from the Sales.Customer entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: OQL\nCODE:\n```\nSELECT Name FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Blob Endpoint in Mendix Runtime\nDESCRIPTION: This snippet describes a known issue related to the `com.mendix.storage.azure.BlobEndpoint` runtime setting. When the setting contains the container name as a suffix, files stored in Azure will be stored at the top-level without a directory hierarchy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.24.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n\"com.mendix.storage.azure.BlobEndpoint\"\n```\n\n----------------------------------------\n\nTITLE: Implementing OnChange Handler in TextBox Component\nDESCRIPTION: Updated TextBox component implementation with onLeave functionality that triggers onChange actions only when the input value has changed and the field loses focus.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createElement, Fragment, ReactElement, useEffect } from \"react\";\nimport { TextBoxContainerProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\nimport \"./ui/TextBox.css\";\nimport { Alert } from \"./components/Alert\";\n\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n    const value = props.textAttribute.value || \"\";\n    const validationFeedback = props.textAttribute.validation;\n    \n    useEffect(() => {\n        props.textAttribute.setValidator((value?: string): string | undefined => {\n            if (!value) {\n                return props.requiredMessage?.value ?? \"\";\n            }\n        });\n    }, []);\n    \n    function onLeave(value: string, isChanged: boolean): void {\n        if (!isChanged) {\n            return;\n        }\n        props.textAttribute.setValue(value);\n    }\n    \n    return (\n        <Fragment>\n            <TextInput\n                value={value}\n                onLeave={onLeave}\n                tabIndex={props.tabIndex}\n                disabled={props.textAttribute.readOnly}\n            />\n            <Alert>{validationFeedback}</Alert>\n        </Fragment>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Quantifier Example {n}\nDESCRIPTION: This example shows how to use the `{n}` quantifier to match the preceding element exactly *n* times. It provides an alternative way to write the Dutch post code regular expression using this quantifier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: regex\nCODE:\n```\n\"[1-9][0-9]{3} ?[A-Za-z]{2}\"\n```\n\n----------------------------------------\n\nTITLE: Multiple X Axes Configuration (JSON)\nDESCRIPTION: This snippet configures multiple X axes in a chart, allowing for separate titles, colors, grid settings, and line visibility for each X axis. The `overlaying` property overlays the second X axis on the first, while the `side` property positions it at the top.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"title\": \"X-axis 1\",\n    \"color\": \"#4682B4\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"zeroline\": true\n  },\n  \"xaxis2\": {\n    \"title\": \"X-axis 2\",\n    \"titlefont\": {\n      \"color\": \"#FF8C00\"\n    },\n    \"tickfont\": {\n      \"color\": \"#FF8C00\"\n    },\n    \"zeroline\": true,\n    \"color\": \"#FF8C00\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"overlaying\": \"x\",\n    \"side\": \"top\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using XPath not() Function for Name Comparison in Java\nDESCRIPTION: This query demonstrates how to use the not() function to find customers whose names are not equal to \"Jansen\". This specific query returns the same result as using the != operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Name = 'Jansen')]\n```\n\n----------------------------------------\n\nTITLE: Implementing Header Render Method\nDESCRIPTION: Lambda method for rendering the clickable header with platform-specific touch feedback\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_18\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = (): ReactNode => {\n        const view = (\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n        );\n\n        const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n\n        return <Touchable>{view}</Touchable>;\n    };\n```\n\n----------------------------------------\n\nTITLE: Setting Up FinishedQueuedActionsCleanupInDays Constant\nDESCRIPTION: This snippet outlines how to configure the automatic cleanup of finished queued actions using the FinishedQueuedActionsCleanupInDays constant, determining the frequency and conditions under which the cleanup occurs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/process-queue.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Negative value = disabled\n* 0 = clear all finished actions\n* 1 or more = clear all finished actions that completed {1 or more} days ago\n```\n\n----------------------------------------\n\nTITLE: Creating HttpResponse Object for Successful Request in Mendix Microflow\nDESCRIPTION: This snippet demonstrates how to create an HttpResponse object in a Mendix microflow to handle a successful REST service request. It sets the status code, content, and HTTP version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/publish-rest-service.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<member>\\n    <name>StatusCode</name>\\n    <value>200</value>\\n</member>\\n<member>\\n    <name>Content</name>\\n    <value>$Order_JSON</value>\\n</member>\\n<member>\\n    <name>HttpVersion</name>\\n    <value>'HTTP/1.1'</value>\\n</member>\n```\n\n----------------------------------------\n\nTITLE: Referencing Enumeration Values in Mendix Expressions (Java)\nDESCRIPTION: Demonstrates how to reference an enumeration value using the module name, enumeration name, and enumeration value format. The example uses an OrderProcessing module with a Status enumeration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nOrderProcessing.Status.completed\n```\n\n----------------------------------------\n\nTITLE: Using Query External Database Activity in Mendix\nDESCRIPTION: Instructions on utilizing the 'Query external database' activity within a microflow, including selecting a query, assigning values to parameters using the Expression editor, and understanding output handling. Emphasizes security practices to avoid SQL injection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-external-database-connector.md#2025-04-21_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Importing Style Utility Functions\nDESCRIPTION: Import statement for the flattenStyles utility function, which is used to merge default styles with user-provided styles in a predictable way.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_40\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Style, flattenStyles } from \"./utils/common\";\n```\n\n----------------------------------------\n\nTITLE: Implementing WebServerExtension for To-Do List in C# for Mendix\nDESCRIPTION: This C# code creates a WebServerExtension class for the To-Do List feature in Mendix. It sets up routes for serving the index page, JavaScript file, and To-Do list data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_11\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.ComponentModel.Composition;\nusing System.Net;\nusing System.Text.Json;\nusing Mendix.StudioPro.ExtensionsAPI.Services;\nusing Mendix.StudioPro.ExtensionsAPI.UI.WebServer;\n\nnamespace Mendix.ToDoExtension;\n\n[Export(typeof(WebServerExtension))]\npublic class ToDoListWebServerExtension : WebServerExtension\n{\n    private readonly IExtensionFileService _extensionFileService;\n    private readonly ILogService _logService;\n\n    [ImportingConstructor]\n    public ToDoListWebServerExtension(IExtensionFileService extensionFileService, ILogService logService)\n    {\n        _extensionFileService = extensionFileService;\n        _logService = logService;\n    }\n\n    public override void InitializeWebServer(IWebServer webServer)\n    {\n        webServer.AddRoute(\"index\", ServeIndex);\n        webServer.AddRoute(\"main.js\", ServeMainJs);\n        webServer.AddRoute(\"todos\", ServeToDos);\n    }\n\n    private async Task ServeIndex(HttpListenerRequest request, HttpListenerResponse response, CancellationToken ct)\n    {\n        var indexFilePath = _extensionFileService.ResolvePath(\"wwwroot\", \"index.html\");\n        await response.SendFileAndClose(\"text/html\", indexFilePath, ct);\n    }\n\n    private async Task ServeMainJs(HttpListenerRequest request, HttpListenerResponse response, CancellationToken ct)\n    {\n        var indexFilePath = _extensionFileService.ResolvePath(\"wwwroot\", \"main.js\");\n        await response.SendFileAndClose(\"text/javascript\", indexFilePath, ct);\n    }\n\n    private async Task ServeToDos(HttpListenerRequest request, HttpListenerResponse response, CancellationToken ct)\n    {\n        if (CurrentApp == null)\n        {\n            response.SendNoBodyAndClose(404);\n            return;\n        }\n\n        var toDoList = new ToDoStorage(CurrentApp, _logService).LoadToDoList();\n        var jsonStream = new MemoryStream();\n        await JsonSerializer.SerializeAsync(jsonStream, toDoList, cancellationToken: ct);\n\n        response.SendJsonAndClose(jsonStream);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-Browser Configuration with TestNG Parameters\nDESCRIPTION: Enhanced WebDriver setup that supports Chrome, IE, and Firefox browsers using TestNG's @Parameters annotation. Requires ChromeDriver and IEDriverServer executables in specified paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n@Parameters(\"browser\")\n@BeforeTest\npublic void beforeTest(String browser) {\n\tif(browser.equalsIgnoreCase(\"chrome\")){\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"C://Selenium/chromedriver.exe\");\n\t\tdriver = new ChromeDriver();\n\t}\n\telse if(browser.equalsIgnoreCase(\"ie\")){\n\t\tSystem.setProperty(\"webdriver.ie.driver\", \"C://Selenium/IEDriverServer.exe\");\n\t\tdriver = new InternetExplorerDriver();\n\t}\n\telse{\n\t\tdriver = new FirefoxDriver();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Current Runtime Executions in Mendix\nDESCRIPTION: JSON request to get information about current runtime executions including microflows, Java actions, web service calls and scheduled events. Returns details about execution duration, type, user and action stack.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_current_runtime_requests\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"202de1e51639ae0\":{\n      \"request_duration\":106175,\n      \"type\":\"CLIENT\",\n      \"user\":\"Anonymous_2ce7c971-f077-4aca-83c5-f3898443ed01\",\n      \"action_stack\":[\n      {\n        \"xpath\":\"//MyFirstModule.Entity\",\n        \"amount\":1,\n        \"depth\":0,\n        \"offset\":-1,\n        \"sort\":{},\n        \"type\":\"RetrieveXPathAction\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"Retrieve Entity from database\",\n          \"type\":\"RetrieveByXPath\"\n        },\n        \"name\":\"MyFirstModule.LoopNested\",\n        \"type\":\"Microflow\"\n      }]\n    }\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Same Name as City Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve all the customers who have the same name as the city they live in using an XPath query. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Name = City]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Name = City]\n```\n\n----------------------------------------\n\nTITLE: OQL Query Using Range Parameter\nDESCRIPTION: Example OQL query that uses a range parameter to select customers born within a specific date range (last week). This query doesn't use RANGEBEGIN directly but showcases the context in which range parameters are used.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangebegin.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT FirstName AS First, LastName AS Last, Name AS Name, Birthday AS BDay, CustomerType AS Type FROM Sales.Customer\nWHERE Birthday IN ($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Global Chart Theme Configuration (JSON)\nDESCRIPTION: This JSON snippet shows a theme configuration file for Mendix charts, setting global font properties under the layout section. This configuration is placed in *com.mendix.charts.json* within the theme folder of the Mendix project.  The changes will apply to all charts when the app is restarted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-theme.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n    {\n      \"layout\": {\n        \"font\": {\n          \"family\": \"Impact\",\n          \"size\": 20,\n          \"color\": \"#4682B4\"\n        }\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Removing Log Subscriber in Mendix Runtime with JSON\nDESCRIPTION: Request format for removing a log subscriber from the Mendix Runtime. This is the second step in configuring log format by changing log subscribers, to be followed by creating a new log subscriber.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\"action\": \"remove_log_subscriber\", \"params\": {\"name\": \"ConsoleLogSubscriber\"}}\n```\n\n----------------------------------------\n\nTITLE: Deleting App Deployments in Kubernetes for Operator Upgrade\nDESCRIPTION: Kubectl commands to remove app deployments when upgrading from Mendix Operator v2.0.0 to v2.1.0, resolving potential namespace labeling issues\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/mendix-for-private-cloud.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete deployment <app>-master -n <namespace>\nkubectl delete deployment <app>-worker -n <namespace>\n```\n\n----------------------------------------\n\nTITLE: Referencing Outer Tables from Subquery in FROM Clause in SQL\nDESCRIPTION: Shows how to reference tables from the outer FROM clause within a subquery. This example finds the maximum request number for each customer.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_55\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/MaxNumber\nFROM\n\tSales.Customer AS Cust,\n\t(\n\t\tSELECT MAX(Number) as MaxNumber\n\t\tFROM Sales.Request\n\t\tWHERE Req.CustomerName = Cust.LastName\n\t) AS Req\n```\n\n----------------------------------------\n\nTITLE: Combining Excel Columns for XSD\nDESCRIPTION: Demonstrates the use of an Excel formula to concatenate multiple column values into a single column, preparing data for XSD import by merging XML tags with data. There are no additional dependencies for this operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n=(A1&B1&C1)\n```\n\n----------------------------------------\n\nTITLE: Data Deletion Prevention Alert\nDESCRIPTION: Markdown alert block describing the immutable mode functionality and its implications for file storage and backup requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThe **Prevent Data Deletion** option switches the bucket into immutable mode:\n\n* When a `System.FileDocument` entity is removed, its actual file will remain in the storage bucket.\n* When a `System.FileDocument` entity is modified, a new blob file will be uploaded into the storage bucket.\n* When an environment is deleted, its files will not be cleaned up (deleted) from the storage bucket.\n\nThis can increase storage costs, but in exchange removes the need to run file backups. To roll back an app environment to an earlier stage, only the database needs to be rolled back. All files referenced by that database snapshot are already available in the blob storage bucket.\n\nIf **Prevent Data Deletion** is enabled, you can remove `s3:DeleteObject` and `s3:DeleteBucket` permissions from example IAM policies.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Adding Months in Java UTC\nDESCRIPTION: The `addMonths` function adds a specified number of months to a date. It takes the initial date and the month count as input parameters and returns the new date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\naddMonths(dateTime(2007, 1, 1, 1, 1, 1), 13)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Feb 01 01:01:01 CET 2008\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Certificates with Empty Path Example (Shell)\nDESCRIPTION: Example showing how to configure client certificates with an empty path to specify that no certificate should be used for a particular web service, even when the server accepts one.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/use-a-client-certificate.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n{ \"Module.WebService1\": \"D:\\\\App\\\\Mx1.pfx\", \"Module.WebService2\": \"\" }\n```\n\n----------------------------------------\n\nTITLE: Using Long Values in Date Functions\nDESCRIPTION: Example of using Long type values in date addition functions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\naddSeconds(dateTime(1970, 1, 1, 0, 0, 0), (long)(2147483647 + 100))\n```\n\n----------------------------------------\n\nTITLE: Sign Out - User Action\nDESCRIPTION: This snippet describes the 'Sign Out' event, which allows the currently signed-in user to log out of the application. It notes that no action will occur if no user is signed in.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\nThe **Sign out** event signs the currently signed-in user out. When no user is signed in, no action is performed.\n```\n\n----------------------------------------\n\nTITLE: Updated Form Group Structure in HTML\nDESCRIPTION: Shows the new HTML structure for form groups with the 'form-group' and 'no-columns' classes, which is now used even when the 'Show caption' option is set to 'No'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-group no-columns mx-name-textBox4 [...]\" [...]>\n\t<INPUT-WIDGET />\n</div>\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Constraints in Java\nDESCRIPTION: In Java, multiple constraints can also be combined using an and operator in the XPath expression. This relates to querying a customer's name and their associated address city in a single query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen' and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Enabling Horizontal Pod Autoscaling in Shell\nDESCRIPTION: This shell command is used to enable horizontal pod autoscaling for Mendix apps in a Kubernetes environment, adjusting replica numbers based on CPU usage. It requires a Kubernetes cluster with Operator version 2.4.0+ and proper configuration of namespaces. Parameters include 'environment name', 'namespace', 'cpu-percent', 'min', and 'max', ensuring optimized workload management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} autoscale mendixapp {envname} --cpu-percent=50 --min=1 --max=10\n```\n\n----------------------------------------\n\nTITLE: Using AND Logical Filter Helper in TypeScript\nDESCRIPTION: Shows how to combine multiple conditions using the AND logical operator. All conditions must be true for an item to be included in the filtered results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_36\n\nLANGUAGE: typescript\nCODE:\n```\nconst filterCondition = and(\n    startsWith(attribute(this.props.myAttributeA.id), literal(\"Hi\")), // myAttributeA starts with string \"Hi\"\n    equals(attribute(this.props.myAttributeB.id), literal(5)), // myAttributeB equals 5\n    greaterThan(attribute(this.props.myAttributeC.id), literal(new Date())) // myAttributeC greaterThan current date and time\n);\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for 'Find Element by CSS' Action in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Find Element by CSS' action in a markdown table format. It specifies the name, datatype, and description of the returned element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-find/rg-one-find-element-by-css.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nElement | WebElement | The wanted WebElement\n```\n\n----------------------------------------\n\nTITLE: HTML5 Render Mode Options for Container\nDESCRIPTION: List of HTML5 semantic elements that can be used to render a container, providing semantic meaning to page structure\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/structure-widgets/container.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n| Div (default) | <div> |\n| Section | <section> |\n| Article | <article> |\n| Header | <header> |\n| Footer | <footer> |\n| Main | <main> |\n| Nav | <nav> |\n| Aside | <aside> |\n| Hgroup | <hgroup> |\n| Address | <address> |\n```\n\n----------------------------------------\n\nTITLE: Loading Domain Model in TypeScript\nDESCRIPTION: This snippet demonstrates how to load the domain model for a specific module named 'MyFirstModule'. It uses the loadAll method with a filter function to specify which unit to load. The operation is asynchronous and returns a promise.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/model-api.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst [domainModel] = await domainModels.loadAll((info: Primitives.UnitInfo) => info.moduleName === 'MyFirstModule');\n```\n\n----------------------------------------\n\nTITLE: Enabling Snapshot Isolation Levels in SQL Server\nDESCRIPTION: These SQL commands enable the Read Committed Snapshot and Snapshot Isolation features for a SQL Server database, which improves concurrency by allowing read operations to proceed even during concurrent transactions. This functionality is important for Mendix applications using SQL Server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/setting-up-a-new-sql-server-database.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nALTER DATABASE [MySchema] SET READ_COMMITTED_SNAPSHOT ON;\n\nALTER DATABASE [MySchema] SET ALLOW_SNAPSHOT_ISOLATION ON;\n```\n\n----------------------------------------\n\nTITLE: Creating Email from Template using CreateEmailFromTemplate Java Action\nDESCRIPTION: Java action to create draft email messages from templates. Takes a data object for placeholder tokens, email template, and queuing option as parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nCreateEmailFromTemplate(\n  DataObject dataObject,\n  EmailTemplate template,\n  Boolean queued\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for a container widget including ripple effects for Android and underlay colors for iOS. Includes both normal and disabled container states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Container = {\n  container: {\n    rippleColor: 'rgba(0, 0, 0, 0.2)',\n    underlayColor: null,\n  },\n  containerDisabled: {\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing 'Load More' Functionality in Mendix Widget using TypeScript\nDESCRIPTION: This snippet shows how to implement a 'Load More' button in a Mendix widget. It checks if more items are available and increases the limit when the button is clicked.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst currentLimit = this.props.myDataSource.limit;\nthis.props.myDataSource.hasMoreItems &&\n<button \n    onClick={() => this.props.myDataSource.setLimit(currentLimit + 10)}\n>\n    Load more\n</button>\n```\n\n----------------------------------------\n\nTITLE: Default Gradle Repositories Configuration\nDESCRIPTION: This snippet shows the default repository configurations commonly used in Gradle for Mendix dependencies. It serves as a baseline for dependency management in Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/managed-dependencies.md#2025-04-21_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\ngradlePluginPortal()\nmavenCentral()\n```\n\n----------------------------------------\n\nTITLE: Implementing Message Boxes with Menu Items in Mendix Web Extensions API\nDESCRIPTION: This TypeScript code creates three menu items in Mendix Studio Pro that display different types of message boxes (information, warning, error) when clicked. It uses the messageBoxApi.show() method with different message types, content, and optional detailed information that appears in an expandable area.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/messagebox-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IComponent, Menu, studioPro } from \"@mendix/extensions-api\";\nconst messageBoxApi = studioPro.ui.messageBoxes;\nconst menuApi = studioPro.ui.extensionsMenu;\n\nconst show_info_menu_id = \"show-info-id\";\nconst show_error_menu_id = \"show-error-id\";\nconst show_warning_menu_id = \"show-warning-id\";\n\nmenuApi.addEventListener(\"menuItemActivated\", (args) => {\n  if (args.menuId === show_info_menu_id)\n    messageBoxApi.show(\"info\", \"This is information.\", \"Extra info\");\n  if (args.menuId === show_error_menu_id)\n    messageBoxApi.show(\"error\", \"This is an error.\", \"Extra error details\");\n  if (args.menuId === show_warning_menu_id)\n    messageBoxApi.show(\n      \"warning\",\n      \"This is a warning.\",\n      \"Extra warning details\"\n    );\n});\n\nclass Main implements IComponent {\n  async loaded() {\n    const infoMenu: Menu = {\n      caption: \"Show Info\",\n      menuId: show_info_menu_id,\n    };\n\n    const errorMenu: Menu = {\n      caption: \"Show Error\",\n      menuId: show_error_menu_id,\n    };\n\n    const warningMenu: Menu = {\n      caption: \"Show Warning\",\n      menuId: show_warning_menu_id,\n    };\n\n    await menuApi.add(infoMenu);\n    await menuApi.add(errorMenu);\n    await menuApi.add(warningMenu);\n  }\n}\n\nexport const component: IComponent = new Main();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Runtime Information in Mendix\nDESCRIPTION: API endpoint that returns system information about the Mendix Runtime including version, build details and Java version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"about\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Adding Test Method for Opening Expenses Tab in Java\nDESCRIPTION: This test method waits for the expenses tab to become visible and then clicks it. It uses WebDriverWait to handle potential delays in element loading.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=3)\npublic void openExpensesTab() {\n    WebDriverWait wait = new WebDriverWait(driver, 10);\n    wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\".mx-name-tabPage4\"))).click();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Platform-Specific Border Radius for the Group Box\nDESCRIPTION: This code snippet applies platform-specific styling to the group box, setting rounded corners for iOS devices and square corners for Android devices.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: Platform.OS === \"ios\" ? 4 : 0,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    label: {\n        color: \"#F6BB42\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking String Ends With Substring in Java\nDESCRIPTION: Illustrates the usage of the endsWith function to determine if a string ends with a specific substring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nendsWith('thisismystring', 'string')\n```\n\n----------------------------------------\n\nTITLE: Update settings.json URL for PhoneGap\nDESCRIPTION: This code snippet demonstrates how to modify the `url` property within the `settings.json` file of a PhoneGap project. This is crucial for directing the mobile app to connect to a locally running Mendix application for debugging purposes. The IP address should be replaced with the actual IP of the development machine.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/debug-a-mobile-app.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"url\": \"http://10.140.149.92:8080\",\n  \"hybridTabletProfile\": \"\",\n  \"hybridPhoneProfile\":  \"\",\n  \"enableOffline\": false,\n  \"requirePin\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Entity Data Model\nDESCRIPTION: Sets up two entities (TestEntity and Notification) with their respective attributes for handling notification data storage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\nEntity: TestEntity\n  - Attribute: StringAttribute_1 (String)\n\nEntity: Notification\n  - Attribute: GUIDString (String)\n```\n\n----------------------------------------\n\nTITLE: XML Representation of One-to-Many Association\nDESCRIPTION: XML example showing how a one-to-many association between Order and Customer entities is stored in the database. The association is stored in the Order element, which is the owner of the relationship.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/associations/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<Order id=\"101\">\n\t<number>1</number>\n\t<date>9/30/2008</date>\n\t<Order_Customer>id_201</Order_Customer>\n</Order>\n\n<Customer id=\"201\">\n\t<fullname>Apple Inc.</fullname>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n</Customer>\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Series with Range Selector\nDESCRIPTION: JSON configuration for time series charts with range selector buttons and slider for time-based filtering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"rangeslider\": {\n      \"visible\": true\n    },\n    \"rangeselector\": {\n      \"buttons\": [\n        {\n          \"step\": \"all\",\n          \"label\": \"reset\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"backward\",\n          \"count\": 1,\n          \"label\": \"1 YEAR\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"backward\",\n          \"count\": 5,\n          \"label\": \"5 YEARS\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"backward\",\n          \"count\": 10,\n          \"label\": \"10 YEARS\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"todate\",\n          \"count\": 1,\n          \"label\": \"YTD\"\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: OQL Subtraction Operator for Calculated Fields\nDESCRIPTION: Query that uses the subtraction operator to calculate profit by subtracting Cost from Revenue in financial data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSelect (Revenue - Cost) as Profit FROM Sales.Finances\n```\n\n----------------------------------------\n\nTITLE: Configuring Association Property in Mendix Pluggable Widget\nDESCRIPTION: Example of defining an association property with reference configuration and selectable objects in a Mendix widget XML.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"ref\" type=\"association\" selectableObjects=\"objectsDatasource\">\n    <caption>Reference</caption>\n    <description>Reference</description>\n    <associationTypes>\n        <associationType name=\"Reference\"/>\n        <associationType name=\"ReferenceSet\"/>\n    </associationTypes>\n</property>\n\n<property key=\"objectsDatasource\" type=\"datasource\" isList=\"true\">\n    <caption>Selectable objects</caption>\n    <description/>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Defining Metric Filters in Mendix Registry\nDESCRIPTION: JSON syntax for configuring filters to control which metrics are sent to the registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"filters\" : [\n  {\"type\" : \"<filter-type>\", \"result\" : \"filter-result\", \"values\": [ \"<list-of-filter-values>\"] }\n]\n```\n\n----------------------------------------\n\nTITLE: Closing Browser in AfterTest Method\nDESCRIPTION: Closes the browser instance after test execution is complete\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n@AfterTest\npublic void afterTest() {\ndriver.close();\n}\n```\n\n----------------------------------------\n\nTITLE: Building iOS App via Cordova CLI\nDESCRIPTION: Cordova CLI command for building iOS release build with device signing and development team configuration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/build-hybrid-apps/build-hybrid-locally.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build -- ios --release --device --codeSignIdentity=\"iPhone Developer\" --developmentTeam=\"<your-teams-id>\"\n```\n\n----------------------------------------\n\nTITLE: Event Handler Properties Table Definition\nDESCRIPTION: Defines the structure and values for event handler configuration in Mendix, including moments and events\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/entities/event-handlers.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Value | Description |\n| --- | --- |\n| Create | The microflow is executed when an object of this entity is created. |\n| Commit | The microflow is executed when an object of this entity is committed. |\n| Delete | The microflow is executed when an object of this entity is deleted. |\n| Rollback | The microflow is executed when an object of this entity is rolled back. |\n```\n\n----------------------------------------\n\nTITLE: Defining Line Chart Structure in XML\nDESCRIPTION: This snippet outlines the XML structure necessary to create a line chart widget in Mendix. It includes various components such as the container, chart, and grid elements, each with specific attributes and styling properties. Dependencies include the Mendix line chart native package, and it's crucial for rendering visual data representations in native applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_37\n\nLANGUAGE: XML\nCODE:\n```\n<container/>\n<errorMessage/>\n<chart/>\n<grid/>\n<xAxis>\n\t<label/>\n</xAxis>\n<yAxis>\n\t<label/>\n</yAxis>\n<legend>\n\t<container/>\n\t<item/>\n\t<indicator/>\n\t<label/>\n</legend>\n<lines>\n\t<customLineStyles>\n\t\t<any_custom_line_style_name>\n\t\t\t<line/>\n\t\t\t<markers/>\n\t\t</any_custom_line_style_name>\n\t</customLineStyles>\n</lines>\n<lineColorPalette/>\n```\n\n----------------------------------------\n\nTITLE: Creating File Storage Secret in Vault\nDESCRIPTION: Command to create a file storage secret in Vault with S3 configuration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nvault kv put secret/<{env-file-secret}> storage-service-name=\"com.mendix.storage.s3\" storage-endpoint=\"https://my-app-bucket.s3.eu-west-1.amazonaws.com\" storage-access-key-id=\"AKIA################\" storage-secret-access-key=\"A#######################################\" storage-bucket-name=\"subdirectory\" storage-use-ca-certificates=\"true\" storage-perform-delete=\"true\"\n```\n\n----------------------------------------\n\nTITLE: Using Widgets Property in a Preview Component\nDESCRIPTION: Example showing how to render child widgets using the WidgetsProperty renderer in a pluggable widget preview component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\ntype Props = {\n    content: WidgetsProperty;\n}\n\nexport const preview: React.FC<Props> = (props) => {\n    const ContentRenderer = props.content.renderer;\n\n    return (\n        <div className=\"my-pw-container\">\n            <div className=\"my-pw-header\">…</div>\n            <ContentRenderer><div className=\"my-pw-content\" /></ContentRenderer>\n        </div>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Bar Chart Configuration in JSON\nDESCRIPTION: This snippet shows how to set up a horizontal bar chart using JSON format, detailing the x and y values along with orientation specifications. The output will be a bar chart oriented horizontally based on the provided data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"y\": [ \"giraffe\", \"elephant\" ],\n  \"x\": [ 2, 4 ],\n  \"type\": \"bar\",\n  \"orientation\": \"h\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Price using avg() - Java\nDESCRIPTION: The 'avg()' function calculates the average of total prices from orders, requiring a valid XPath query that targets numeric attributes. Produces an average value as the output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-aggregate-functions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\navg(//Sales.Order/TotalPrice)\n```\n\nLANGUAGE: java\nCODE:\n```\navg(//Sales.Order[Sales.Customer_Order/Sales.Customer = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Configuring Gallery Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Mendix native Gallery widget. Includes configuration for container, empty placeholder, list items, and load more button with special Android ripple effects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_gallery_Gallery = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  emptyPlaceholder: {\n    // This has all ViewStyle properties. Applies a view style to the empty placeholder.\n  },\n  firstItem: {\n    // This has all ViewStyle properties. Applies a view style to the first item of the list.\n  },\n  lastItem: {\n    // This has all ViewStyle properties. Applies a view style to the last item of the list.\n  },\n  list: {\n    // This has all ViewStyle properties. Applies a view style to the list container.\n  },\n  listitem: {\n    // This has all ViewStyle properties. Applies a view style to each item container in the list.\n  },\n  loadMoreButtonContainer: {\n    // This has all ViewStyle properties. Applies a view style to the load more button container.\n  },\n  loadMoreButtonPressableContainer: {\n    // This has all ViewStyle properties. Applies a view style to the load more button container.\n    rippleColor: null, // Defines the color of the ripple effect. ([color](https://reactnative.dev/docs/colors)) (Android only)\n    borderless: null, // Defines if ripple effect should not include border. (Boolean) (Android only)\n    radius: null, // Defines the radius of the ripple effect. (number) (Android only)\n    foreground: null, // Set to true to add the ripple effect to the foreground of the view, instead of the background. (Boolean) (Android only)\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Cleaned Up Default Styles Without Unused Label Property\nDESCRIPTION: This code removes the unused label property from the defaultStyle constant, keeping only the styles needed for the group box component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: Platform.OS === \"ios\" ? 4 : 0,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Java Action Parameter in Mendix APM Tool\nDESCRIPTION: This code snippet shows a sample Java file generated by Mendix with a fictive parameter mismatch. The user needs to change the old parameter name to the new parameter name between the '// BEGIN USER CODE' and '// END USER CODE' comments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-one/ig-one-installation-steps/ig-one-after-startup-error.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// BEGIN USER CODE\nString oldParameterName = \"Some value\";\n// ... (other code)\n// END USER CODE\n```\n\n----------------------------------------\n\nTITLE: Interval Calculation Implementation in Mendix 5.3.2\nDESCRIPTION: This code snippet shows how Mendix 5.3.2 calculates time intervals for scheduled events based on the selected interval type. It converts different interval types (seconds, minutes, hours, days, weeks, months, years) into appropriate time units and interval values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/scheduled-events.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nswitch(scheduledEvent.getIntervalType())\n{\n    case SECOND:\n        timeUnit = TimeUnit.SECONDS;\n        interval = scheduledEvent.getInterval();\n        break;\n    case MINUTE:\n        timeUnit = TimeUnit.MINUTES;\n        interval = scheduledEvent.getInterval();\n        break;\n    case HOUR:\n        timeUnit = TimeUnit.HOURS;\n        interval = scheduledEvent.getInterval();\n        break;\n    case DAY:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval();\n        break;\n    case WEEK:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval()*7;\n        break;\n    case MONTH:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval()*31;\n        break;\n    case YEAR:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval()*365;\n        break;\n}\n```\n\n----------------------------------------\n\nTITLE: Using the min Function in Mendix\nDESCRIPTION: Returns the smallest value from a set of numbers. When provided with multiple numeric arguments, the function identifies and returns the lowest value among them.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nmin(5, 1, 5, 6.7)\n```\n\n----------------------------------------\n\nTITLE: Defining MxStatsMBean Interface in Java\nDESCRIPTION: This Java snippet defines an interface, MxStatsMBean, used to expose generic management information via JMX by declaring methods to retrieve various statistics about the Mendix application runtime. Prerequisites include implementing the interface in a Java class to provide concrete functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/monitoring-mendix-using-jmx.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage jmx.actions;\n\npublic interface MxStatsMBean {\n\npublic int getMaximumNumberConcurrentUsers() throws Exception;\n\npublic int getActionQueueSize();\n\npublic int getActiveActionCount();\n\npublic int getScheduledActionCount();\n\npublic long getNumberConcurrentSessions();\n\npublic long getCurrentUserCount();\n\npublic long getCompletedActionCount();\n\npublic long getNamedUserCount();\n\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Microflow Decision with Fallback in Mendix Workflow\nDESCRIPTION: Example of a microflow decision method with a fallback option to prevent workflow failure when all participants have completed their tasks but no decision has been made.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task/microflow-decision-fallback.png\" alt=\"Custom Microflow Decision Method\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Subtracting Days using Java\nDESCRIPTION: This function subtracts a specified number of days from a given date and time value. It accepts an initial date in the 'Date and time' format and an integer as the number of days to subtract, using either the server's calendar or UTC. The result is an adjusted date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nsubtractDays(dateTime(2007, 1, 5, 1, 1, 1), 5)\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Native Theme Variables in JavaScript\nDESCRIPTION: Example of native mobile theme variables in theme/native/custom-variables.js that will be made into a reusable theme module. These define color schemes for native mobile applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nexport const brand = {\n    primary: \"#264AE5\",\n    success: \"#3CB33D\",\n    warning: \"#ECA51C\",\n    danger: \"#E33F4E\",\n    info: \"#0086D9\",\n    primaryLight: \"#F3F5FF\",\n    successLight: \"#F1FCF1\",\n    warningLight: \"#FFF9E6\",\n    dangerLight: \"#FFEEF0\",\n    infoLight: \"#ECF9FF\"\n};\n```\n\n----------------------------------------\n\nTITLE: Rounding a Number in Mendix Using Java\nDESCRIPTION: 'Round' is a function that rounds a given number to a specified precision. It provides options for different rounding modes and allows for an optional precision parameter, defaulting to 0. The output's type varies based on the precision specified, which is vital for managing numerical data representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nround(3.5)\n```\n\nLANGUAGE: java\nCODE:\n```\n4\n```\n\nLANGUAGE: java\nCODE:\n```\nround(88.725,2)\n```\n\nLANGUAGE: java\nCODE:\n```\n88.72\n```\n\n----------------------------------------\n\nTITLE: Combining EXISTS with Subquery in SQL\nDESCRIPTION: Demonstrates using the EXISTS operator with a subquery to find customers who have placed orders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Sales.Customer customer\nWHERE EXISTS\n    (SELECT *\n    FROM Sales.Order order\n    WHERE order.LastName = customer.LastName)\n```\n\n----------------------------------------\n\nTITLE: Not Equal Comparison Query\nDESCRIPTION: Query to find customers with orders not having 'Delivered' status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/Status != 'Delivered']\n```\n\n----------------------------------------\n\nTITLE: Git Global User Configuration\nDESCRIPTION: Commands to set up global Git user name and email configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/troubleshoot-git-issues.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit config --global user.name \"<Name>\"\\ngit config --global user.email \"<Email>\"\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using quarter-from-dateTime in Local Timezone\nDESCRIPTION: Example of an XPath query that retrieves all Logging.Log objects where the DateAttribute is in the fourth quarter (October-December) using the local timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-quarter-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[quarter-from-dateTime(DateAttribute) = 4]\n```\n\n----------------------------------------\n\nTITLE: Querying Date Range with Year Length in Studio Pro\nDESCRIPTION: This XPath query retrieves customer objects registered in the past three years from the beginning of the current day. It demonstrates using date arithmetic with system variables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_6\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [DateRegistered > '[%BeginOfCurrentDay%] - 3 * [%YearLength%]']\n```\n\n----------------------------------------\n\nTITLE: Fetching Logged-In Users in Mendix Runtime (JSON)\nDESCRIPTION: This endpoint retrieves a list of currently logged-in users. If a user has multiple sessions, they will be listed once for each session.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\" : \"get_logged_in_user_names\",\n  \"params\":{}\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\": {\n    \"count\":1,\n    \"users\":[\"MxAdmin\"]\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Snapshot in Mendix\nDESCRIPTION: This Bash script demonstrates how to update a comment for a specific snapshot in the Mendix environment via a PUT request. Dependencies include having the Mendix-Username and Mendix-ApiKey ready. The input is the endpoint URL and a JSON object containing the comment. The output will be the updated snapshot details with the new comment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nPUT /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots/51dc7872-771e-4c3e-853b-352359444db6\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"comment\" :  \"Hello\"\n}\n```\n\n----------------------------------------\n\nTITLE: Sending HTTP POST Request to Build Mendix App Package\nDESCRIPTION: Example HTTP POST request to the Mendix Deploy API for building a package from a specific branch and revision. The request includes authentication headers (Mendix-Username and Mendix-ApiKey) and a JSON payload specifying branch, revision, version, and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPOST /api/1/apps/calc/packages HTTP/1.1\nHost: deploy.mendix.com\nAccept: */*\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"Branch\" : \"branches/feature\" ,\n     \"Revision\" :  \"63\" ,\n     \"Version\" :  \"2.5.4\" ,\n     \"Description\" :  \"Add scientific mode\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Column Chart Configuration for Mendix Native Widget - JavaScript\nDESCRIPTION: This JavaScript object defines the configuration settings for a column chart widget in Mendix. It includes properties for layout, grid styling, axis configuration, legend options, and custom column styles intended for rendering a vertical column graph based on static and dynamic datasets. The key parameters are structured within nested objects detailing view and text styling properties. The expected input is a properly structured JavaScript object that adheres to Mendix's widget guidelines, with outputs being styled vertical column charts rendered in a Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_columnchart_ColumnChart = {\n  container: {\n    // All ViewStyle properties.\n  },\n  errorMessage: {\n    // All TextStyle properties.\n  },\n  chart: {\n    // All ViewStyle properties.\n  },\n  grid: {\n    backgroundColor: null, // Applies a color to the grid background (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the grid lines (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    lineColor: null, // Applies a color to the grid lines (string).\n    width: null, // Applies a width to the grid lines (number).\n    padding: null, // Applies padding to all sides of the grid (number). This makes axis value labels visible.\n    paddingBottom: null, // Applies padding to the bottom side of the grid (number). This makes axis value labels visible.\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the grid (number). This makes axis value labels visible.\n    paddingLeft: null, // Applies padding to the left side of the grid (number). This makes axis value labels visible.\n    paddingRight: null, // Applies padding to the right side of the grid (number). This makes axis value labels visible.\n    paddingTop: null, // Applies padding to the top side of the grid (number). This makes axis value labels visible.\n    paddingVertical: null, // Applies padding to the vertical sides of the grid (number). This makes axis value labels visible.\n  },\n  xAxis: {\n    color: null, // Applies a color to the axis value labels (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the axis line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    fontFamily: null, // Applies a font type to the axis value labels (string).\n    fontSize: null, // Applies a size to the axis value labels (number).\n    fontStyle: null, // Applies a font style to the axis value labels (\"normal\" or \"italic\").\n    fontWeight: null, // Applies a font weight to the axis value labels (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n    lineColor: null, // Applies a color to the axis line (string).\n    width: null, // Applies a width to the axis line (number).\n    label: {\n      // All TextStyle properties.\n      relativePositionGrid: null, //P ositions the axis label at the **bottom** or **right** side of the grid.\n    }\n  },\n  yAxis: {\n    // All xAxis properties\n  },\n  legend: {\n    container: {\n      // All ViewStyle properties.\n    },\n    item: {\n      // All ViewStyle properties.\n    },\n    indicator: {\n      // All ViewStyle properties.\n    },\n    label: {\n      // All TextStyle properties.\n    },\n  },\n  domain: {\n    padding: {\n      x: null, // Applies a number of pixels of padding to add the beginning and end of the X axis domain (number).\n      y: null, // Applies a number of pixels of padding to add the beginning and end of the Y axis domain (number).\n    }\n  },\n  columns: {\n    columnColorPalette: null, // Provides colors to columns that do not have a column color configured (string with list of colors separated by ';', one color for each series).\n    columnsOffset: null, // Determines the number of pixels each column in a group should be offset from its original position on the Y axis (number). This is only applicable when presentation mode is **Grouped**.\n    customColumnStyles: {\n      any_custom_column_style_name: {\n        column: {\n          ending: null, // Specifies a radius to apply to each column.\n          columnColor: null, // Applies a color to the column (string). If columns are configured to have labels, the labels will be the same color as the column.\n          width: null, // Applies a width to the column (number).\n        },\n        label: {\n          fontFamily: null, // Applies a font type to the column label (string).\n          fontSize: null, // Applies a size to the column label (number).\n          fontStyle: null, // Applies a font style to the column label (**normal** or **italic**).\n          fontWeight: null, // Applies a font weight to the column label (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n        }\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Division with Colon Syntax in Mendix Expressions\nDESCRIPTION: Demonstrates division using the colon (:) syntax in Mendix. This alternative syntax is provided because the conventional slash (/) would conflict with object/member separation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n12 : 3\n```\n\nLANGUAGE: java\nCODE:\n```\n4.0\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example: Navigating Associations\nDESCRIPTION: This XPath query navigates through associations to retrieve related entities. The '/' token is used to traverse from 'Customer' to 'Order' via the 'Customer_Order' association.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_2\n\nLANGUAGE: xpath\nCODE:\n```\n\"//Sales.Customer/Sales.Customer_Order/Sales.Order\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Pie Chart Properties in JSON\nDESCRIPTION: This snippet configures the properties of a pie chart, specifically defining the size of the hole within the pie, which affects its visual representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\"hole\": 0.9}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Naming Conventions in JavaScript\nDESCRIPTION: This snippet illustrates the use of lower camel case for variable and function names in JavaScript, as recommended in the guidelines.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/create-widgets.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst mySecondVariable = \"example\";\n\nfunction doSomething() {\n    // Function body\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Hours to Date in Java\nDESCRIPTION: Shows adding 25 hours to a date using addHours function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\naddHours(dateTime(2007, 1, 1, 1, 1, 1), 25)\n```\n\n----------------------------------------\n\nTITLE: Using Unary Minus Operator in Java\nDESCRIPTION: This snippet demonstrates the unary minus operator to represent a negative value. The operator can be applied to change the sign of a number, such as using it with the integer value '-8'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/unary-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n-8\n```\n\n----------------------------------------\n\nTITLE: Post-processing ResNet50 Model Output in Java\nDESCRIPTION: Decodes the ResNet50 model output from base64, finds the index of the highest confidence class, and maps it to the corresponding class label using a pre-loaded mapping file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// BEGIN EXTRA CODE\nfinal Map<Integer, String> classes = new java.util.HashMap<>();\n{\n  try {\n    File basePath = new File(Core.getConfiguration().getBasePath(), \"ml\");\n    File filePath = Paths.get(\"resnet50\", \"imagenet_classes.txt\").toFile();\n    File classesFile = new File(basePath, filePath.getPath());\n    Scanner reader = new Scanner(classesFile);\n    while (reader.hasNextLine()) {\n      String line = reader.nextLine();\n      String[] split = line.split(\":\");\n      Integer id = Integer.valueOf(split[0].trim());\n      String cls = split[1].trim();\n      classes.put(id, cls);\n    }\n    reader.close();\n  } catch (Exception e) {\n    e.printStackTrace();\n  }\n}\n// END EXTRA CODE\n\n@java.lang.Override\npublic java.lang.String executeAction() throws Exception\n{\n  this.ResnetCategory = this.__ResnetCategory == null ? null : resnet50.proxies.ML_Output_Entity_ResNet50ModelMapping.initialize(getContext(), __ResnetCategory);\n\n  // BEGIN USER CODE\n  // 1. convert base64 to array\n  float[] outputScores = new float[1000];\n  // 2. decode InputStream from Base64\n  final InputStream is = MLKit.fromBase64(ResnetCategory.getResnetv17_dense0_fwd());\n  // 3. read InputStream and write to provided array\n  MLKit.toArray(is, outputScores);\n  // 4. find index of Top 1 \n  float max = Integer.MIN_VALUE;\n  int index = 0;\n  for(int i = 0; i < outputScores.length; i++) {\n    if(outputScores[i] > max) {\n      max = outputScores[i];\n      index = i;\n    }\n  }\n  String result = classes.get(index);\n  return result;\n  // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Multiple Y Axes Data Properties in JSON\nDESCRIPTION: This snippet allows for displaying multiple datasets on different Y axes, facilitating comparisons between distinct data types with different scales in one chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n[{\"name\": \"yaxis2 data\", \"yaxis\": \"y2\", \"type\": \"scatter\"},{\"name\": \"yaxis data\", \"type\": \"scatter\"}]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customers by Name with XPath in Java\nDESCRIPTION: This code snippet shows how to retrieve customer objects with a specific name ('Jansen') using XPath in a Java environment within Mendix. It uses a constraint within square brackets to filter the results based on the 'Name' attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n\"//Sales.Customer[Name='Jansen']\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Row Layout with Fixed Column Sizes in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a row layout with fixed column sizes, where the first child takes half the space and the other three share the remaining half. It uses the 'grow' property to set proportional column sizes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"RowLayout\",\n        columnSize: \"fixed\",\n        children: [\n            { type: \"Image\", data: mxLogo, grow: 3 },\n            { type: \"Text\", fontSize: 20, content: \"We share the\" },\n            { type: \"Text\", fontSize: 16, content: \"right half of\" },\n            { type: \"Text\", fontSize: 12, content: \"the row layout\" }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Synchronous Value Addition in JavaScript Action\nDESCRIPTION: Demonstrates a synchronous JavaScript action that adds two Big.js values and returns the result immediately.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {Big} valueA\n * @param {Big} valueB\n * @param {Big}\n */\nfunction AddValue(valueA, valueB) {\n    // BEGIN USER CODE\n    return valueA.plus(valueB)\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-Browser TestNG Suite Configuration\nDESCRIPTION: Enhanced TestNG XML suite configuration that defines separate test runs for Chrome, IE, and Firefox browsers using parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suite name=\"MyFirstTestSuite\">\n\t<test name=\"ChromeTest\">\n\t\t<parameter name=\"browser\" value=\"chrome\" />\n\t\t<classes>\n\t\t\t<class name=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n\t<test name=\"IETest\">\n\t\t<parameter name=\"browser\" value=\"ie\" />\n\t\t<classes>\n\t\t\t<class name=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n\t<test name=\"FirefoxTest\">\n\t\t<parameter name=\"browser\" value=\"firefox\" />\n\t\t<classes>\n\t\t\t<class name=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n</suite>\n```\n\n----------------------------------------\n\nTITLE: Converting String to Lowercase in Java\nDESCRIPTION: Demonstrates the use of the toLowerCase function to convert all characters in a string to lowercase.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntoLowerCase('thisISmyString')\n```\n\n----------------------------------------\n\nTITLE: Changes to index.html for Insights Hub Compatibility\nDESCRIPTION: This snippet outlines the necessary changes to the standard index.html file to ensure proper integration with Insights Hub. It includes requirements for OS Bar support, XSRF token configuration, and SSO login adjustments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script> // Add XSRF token support here </script>\n<link rel=\"stylesheet\" href=\"/themesource/siemensinsightshubwebcontent/public/style.css\">\n<!-- Include additional scripts for SSO integration -->\n```\n\n----------------------------------------\n\nTITLE: Converting Multiple Toggles to ToggleButtonGroup in JavaScript\nDESCRIPTION: Shows configuration for converting multiple toggle properties into a single multi-select ToggleButtonGroup property with preserved settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"Font styling\",\n    \"type\": \"ToggleButtonGroup\",\n    \"description\": \"Change font styling\",\n    \"multiSelect\": true,\n    \"options\": [\n        {\n            \"name\": \"Bold\",\n            \"oldNames\": [\"Bold text\"],\n            \"class\": \"text-bold\"\n        },\n        {\n            \"name\": \"Italic\",\n            \"oldNames\": [\"Italic text\"],\n            \"class\": \"text-italic\"\n        },\n        {\n            \"name\": \"Underline\",\n            \"oldNames\": [\"Underline text\"],\n            \"class\": \"text-underline\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Mobile SSO Module Compatibility Table in Markdown\nDESCRIPTION: A table showing the compatibility matrix between Mobile SSO versions, Mendix versions, and OIDC SSO versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mobile-sso.md#2025-04-21_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n| Mobile SSO Version | Mendix Version | OIDC SSO Version |\n| --- | --- | --- |\n| 2.1.0 | 10.12.3 and above | 3.0.0 and above |\n| 2.0.0 | 10.9.0 and above | 2.4.0 and above |\n| 1.1.0 | 9.24.2 | 3.0.0 and above |\n| 1.0.1 | 9.24.2 | 2.4.0 and above |\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Timer for Microflow Performance Measurement in Mendix\nDESCRIPTION: This snippet illustrates how to set up a timing mechanism within a microflow to assess its execution duration, helping to identify performance bottlenecks. The snippet involves creating a variable to store the start time and logging the end time to compare the two.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nTo set up a timer, first add a **Create variable** activity as the first step, where you are going to store the current time:\n\n{{< figure src=\"/attachments/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580221.png\" class=\"no-border\" >}}\n\nThen, add a **Log message** activity at the end of your microflow:\n\n{{< figure src=\"/attachments/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580219.png\" class=\"no-border\" >}}\n\nSet up the activity similar to this:\n\n{{< figure src=\"/attachments/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580220.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Employee Object in Mendix\nDESCRIPTION: JSON request to instantiate a new Employee object in the Mendix Runtime Server. This is the first step in creating a new record before setting values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"instantiate\",\n   \"params\":{\n      \"objecttype\":\"MyFirstModule.Employee\",\n      \"preventCache\":1455032246146\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee68c92aea60\":27\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing WebViewDockablePaneViewModel for ToDo List in C#\nDESCRIPTION: This code defines a view model class that hosts a web interface for a ToDo list extension. It handles communication between the web UI and the extension logic, processes user actions like adding/changing/removing ToDo items, and manages the persistence of ToDo data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing Mendix.StudioPro.ExtensionsAPI.Model;\nusing Mendix.StudioPro.ExtensionsAPI.Services;\nusing Mendix.StudioPro.ExtensionsAPI.UI.DockablePane;\nusing Mendix.StudioPro.ExtensionsAPI.UI.WebView;\n\nnamespace Mendix.ToDoExtension;\n\npublic class ToDoListDockablePaneViewModel : WebViewDockablePaneViewModel {\n\n    private readonly Uri _baseUri;\n    private readonly Func<IModel?> _getCurrentApp;\n    private readonly ILogService _logService;\n\n    public ToDoListDockablePaneViewModel(Uri baseUri, Func<IModel?> getCurrentApp, ILogService logService)\n    {\n        _baseUri = baseUri;\n        _getCurrentApp = getCurrentApp;\n        _logService = logService;\n    }\n\n    public override void InitWebView(IWebView webView)\n    {\n        webView.Address = new Uri(_baseUri, \"index\");\n\n        webView.MessageReceived += (_, args) =>\n        {\n            var currentApp = _getCurrentApp();\n            if (currentApp == null) return;\n\n            if (args.Message == \"AddToDo\")\n            {\n                var toDoText = args.Data[\"toDoText\"]?.GetValue<string>() ?? \"New To Do\";\n                AddToDo(currentApp, toDoText);\n                webView.PostMessage(\"RefreshToDos\");\n            }\n\n            if (args.Message == \"ChangeToDoStatus\")\n            {\n                var toDoId = args.Data[\"id\"]!.GetValue<string>();\n                var newIsDone = args.Data[\"isDone\"]!.GetValue<bool>();\n\n                ChangeToDoStatus(currentApp, toDoId, newIsDone);\n                webView.PostMessage(\"RefreshToDos\");\n            }\n\n            if (args.Message == \"ClearDone\")\n            {\n                ClearDone(currentApp);\n                webView.PostMessage(\"RefreshToDos\");\n            }\n        };\n    }\n\n    private void AddToDo(IModel currentApp, string toDoText)\n    {\n        var toDoStorage = new ToDoStorage(currentApp, _logService);\n        var toDoList = toDoStorage.LoadToDoList();\n        toDoList.ToDos.Add(new ToDoModel(toDoText, false));\n        toDoStorage.SaveToDoList(toDoList);\n    }\n\n    private void ChangeToDoStatus(IModel currentApp, string toDoId, bool newIsDone)\n    {\n        var toDoStorage = new ToDoStorage(currentApp, _logService);\n        var toDoList = toDoStorage.LoadToDoList();\n        var toDo = toDoList.ToDos.FirstOrDefault(x => x.Id == toDoId);\n        if (toDo != null)\n        {\n            toDo.IsDone = newIsDone;\n            toDoStorage.SaveToDoList(toDoList);\n        }\n    }\n\n    private void ClearDone(IModel currentApp)\n    {\n        var toDoStorage = new ToDoStorage(currentApp, _logService);\n        var toDoList = toDoStorage.LoadToDoList();\n        toDoList.ToDos.RemoveAll(x => x.IsDone);\n        toDoStorage.SaveToDoList(toDoList);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Link List for Integration Documentation\nDESCRIPTION: A structured list of markdown links to various Mendix integration how-to guides.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* [Consume a Simple Web Service](/howto9/integration/consume-a-simple-web-service/)\n* [Export XML Documents](/howto9/integration/export-xml-documents/)\n* [Import Excel Documents](/howto9/integration/importing-excel-documents/)\n* [Expose a Web Service](/howto9/integration/expose-a-web-service/)\n* [Use Selenium Support](/howto9/integration/selenium-support/)\n* [Import XML Documents](/howto9/integration/importing-xml-documents/)\n* [Consume a REST Service](/howto9/integration/consume-a-rest-service/)\n* [Expose Data to BI tools Using OData](/howto9/integration/exposing-data-to-bi-tools-using-odata/)\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Years in Java\nDESCRIPTION: The trimToYears function is used to trim the date to years, rounding off all months and days to zero via the user's time zone settings. A UTC-based version of this function is also available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ntrimToYears($myDate)\n```\n\n----------------------------------------\n\nTITLE: Adding an Operation to a Resource - Mendix\nDESCRIPTION: This snippet describes the approach to adding a new operation to a REST service, which is a backward-compatible change. It includes steps for creating a new minor version, duplicating the service, and adding the new operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/version-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Create a new folder called **PetStore_1_1_0**.\n2. Duplicate the PetStore service. Call it **PetStore_1_1_0** and move it to the **PetStore_1_1_0** folder.\n3. Add the **GetPetByStatus** operation to the **PetStore_1_1_0** service.\n```\n\n----------------------------------------\n\nTITLE: Android Bundle Structure - Example\nDESCRIPTION: Illustrative structure of the Android bundle that is created after building a Mendix Native app, showcasing where drawable resources and assets are located.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n- android\n    - res\n        - drawable-mdpi\n        - drawable-hdpi\n        - drawable-xhdpi\n        - drawable-xxhdpi\n        - drawable-xxxhdpi\n        - raw\n    - assets\n        - index.android.bundle\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Comparison in Mendix\nDESCRIPTION: This snippet demonstrates the less than or equal to relational expression in Mendix, which compares two numeric values and returns a Boolean value indicating whether the first value is less than or equal to the second value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n```java\n3<=3\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nTrue\n```\n```\n\n----------------------------------------\n\nTITLE: Input Widget Consistency Error Reference Table\nDESCRIPTION: Table showing error codes, messages, causes, and solutions for common input widget consistency errors in Mendix\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_3\n\nLANGUAGE: markup\nCODE:\n```\n| Error Code | Message in the Error Pane | Cause of the Error | Way to Fix |\n| ---------- | ------------------------------------------------------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| CE0544 | This widget can only function inside a data container. Move it into a data view, list view or template grid. | You have added an input widget to a page, but it is not inside a data container. Input widgets need to refer to an attribute of a specific entity type. And entities are only available via data containers. | Place this widget into a data container: a data view, list view, or template grid. |\n| CE0545 | Select an attribute for this {widget name}. | You have added an input widget, and it is inside a data container, but an attribute is not selected for it. | Right-click the widget, click **Select Attribute** in the drop-down list, and set an attribute; or open widget's properties > the **Data source** section and set an attribute in the **Attribute (path)** field. |\n```\n\n----------------------------------------\n\nTITLE: Creating a Microflow to Call REST Service\nDESCRIPTION: This snippet demonstrates how to create a microflow named 'Call_REST' that retrieves data from a specified REST service URL. It includes configuring the call to the REST service and handling the response by applying an import mapping.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Right-click your module, click **Add Microflow**, and create a new microflow named *Call_REST*.\n2. From the **Toolbox**, drag a **Call REST service** activity into the microflow.\n3. Double-click your **Call REST service** activity.\n4. Click the **Location** > **Edit** button:\n5. In the **Template** field, add `https://my-json-server.typicode.com/mendix/howto-api-data/airports` then click the **OK** button:\n6. Click the **Response** tab:\n7. Select **Apply import mapping** from the **Response handling** drop-down menu.\n8. Click **Mapping** > **Select** and select the import mapping you created.\n9. For **Variable Name**, type *Result.* Click **OK** to accept the changes:\n10. From the **Toolbox** drag the **Retrieve** activity into the microflow and double-click it.\n11. Click **Association** > **Select**, click **Expand All**, and select **JsonObject_Summary (List of NativeMobile.JsonObject)**.\n12. Click **OK** to accept this association.\n13. Right-click the **Retrieve** activity and select **Set $JsonObjectList as return value**:\n```\n\n----------------------------------------\n\nTITLE: Styling Native Web View Widget in Mendix (JavaScript)\nDESCRIPTION: JavaScript code for styling a Web View widget that embeds websites in Mendix native mobile apps. Includes properties for container styling, error container, and error text customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_webview_WebView = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  errorContainer: {\n    // This has all ViewStyle properties.\n  },\n  errorText: {\n    // This has all TextSTyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Group By Chart Configuration in JSON\nDESCRIPTION: This snippet outlines the configuration for a group by chart in JSON format, detailing x and y values for plotting groups of data points. The expected output is a scatter chart representing distinct groupings of the provided data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n[ {\n    \"type\": \"scatter\",\n    \"x\": [ \"Arthur\",\"Jolly\",\"Daphine\",\"Arthur\",\"Jolly\",\"Daphine\" ],\n    \"y\": [ 1, 6, 2, 5, 8, 1 ],\n    \"mode\": \"markers\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Nested ID Reference Query\nDESCRIPTION: Query finding customer by order ID using nested path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/ID = 124123512341]\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request for Creating Security Group\nDESCRIPTION: HTTP request example showing how to create a new security group named 'RnD' with a description. The request includes the required authentication headers and JSON payload with group details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_19\n\nLANGUAGE: http\nCODE:\n```\nPOST /legacy-api/1/groups HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n\n{\n   \"name\": \"RnD\",\n   \"description\": \"Research and Development\"\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Setting for Legacy Cookies\nDESCRIPTION: The custom setting `RequestHandling.AllowLegacyCookies` allows violations of RFC 6265, which is enforced in recent Jetty versions. Enabling this setting can expose your app to CVE-2023-26049 and should be done with caution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Dialog Confirmation\nDESCRIPTION: Defines the input parameters for dialog confirmation actions, including dialog title and type specifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-dialog/rg-one-confirm-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nDialog Title | String | no | The title of the dialog you want to cancel\nDialog Type | Enumeration | no | The type of the dialog you want to cancel\n```\n\n----------------------------------------\n\nTITLE: Configuring Metrics Registries JSON Structure\nDESCRIPTION: JSON structure for configuring metrics registries in Mendix. This defines the base format that includes type, settings, and filters properties for each registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"<registry1>\",\n    \"settings\": { <settings> },\n    \"filters\": [ <list-of-filters> ]\n  },\n  {\n    \"type\": \"<registry2>\",\n    \"settings\": { <settings> },\n    \"filters\": [ <list-of-filters> ]\n  },\n  …\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Customer Entity in Domain Model\nDESCRIPTION: Defines the structure for storing customer data with key attributes like ID, company name, address, city, and postal code\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-xml-documents.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Entity name=\"Customer\">\n    <Attribute name=\"CustomerID\" type=\"Integer\" />\n    <Attribute name=\"CompanyName\" type=\"String\" />\n    <Attribute name=\"Address\" type=\"String\" />\n    <Attribute name=\"City\" type=\"String\" />\n    <Attribute name=\"PostalCode\" type=\"String\" />\n</Entity>\n```\n\n----------------------------------------\n\nTITLE: Time Zone Token Examples in Mendix\nDESCRIPTION: Examples of time zone tokens used in Mendix for referring to specific moments. These tokens can be used in both local user time zone and UTC formats.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/date-and-time-handling/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n[%BeginOfCurrentDay%]\n[%BeginOfCurrentDayUTC%]\n```\n\n----------------------------------------\n\nTITLE: JavaScript Style Object Export\nDESCRIPTION: Imports the `companyHeaderTextSize` constant from *custom-variables.js* and exports a JavaScript object `companyHeader` from *company-header.js*. The `companyHeader` object defines the `fontSize` style property using the imported constant. This style can then be applied to native mobile app components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n import { companyHeaderTextSize } from “./custom-variables”;\n export const companyHeader = { fontSize: companyHeaderTextSize };\n```\n\n----------------------------------------\n\nTITLE: Adding Sort and Order Parameters to REST Template in Mendix\nDESCRIPTION: Adds sorting parameters to the REST service call template in a Mendix microflow. This allows for server-side sorting of data grid results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_2\n\nLANGUAGE: Expression\nCODE:\n```\n&_sort={2}&_order={3}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Single Object by Key with GraphQL in Mendix\nDESCRIPTION: This query retrieves the name of the employee whose userName is 'jdoe'. It demonstrates how to query a single object using a key attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_4\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  employee(userName: \"jdoe\") {\n    name\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Microflow ML Model Inference Configuration\nDESCRIPTION: Demonstrates creating input objects, calling the ML model, and consuming inference output using microflow activities and expressions in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/using-ml-kit/logistic-regression-example.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\nCall ML model activity > Create object > Create variable\n```\n\n----------------------------------------\n\nTITLE: Extending Default Widget Class in JavaScript\nDESCRIPTION: Shows how to extend a default class for a widget by adding custom style properties like borderWidth and fontSize. This approach allows for further customization of widget appearance based on default styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ActionButton = {\n  container: {\n    borderWidth: 3\n  },\n  caption: {\n    fontSize: 20\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Capturing Android Device Logs\nDESCRIPTION: This command captures log data from an Android device using the `adb logcat` command and redirects it to a file named `output.txt`. The captured logs include system and application messages, which are helpful for debugging and troubleshooting Android applications. The logs are continuously written to the output file until the process is manually stopped.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\n\"adb logcat > output.txt\"\n```\n\n----------------------------------------\n\nTITLE: Converting Decimal to String with toString Function in Java\nDESCRIPTION: Demonstrates how to convert a decimal value to a string representation using the toString function. Returns the numerical value as a string without special formatting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntoString(1.4)\n```\n\n----------------------------------------\n\nTITLE: Setting Axis Range Mode in JSON\nDESCRIPTION: This snippet sets how the Y-axis range is determined, with three modes: 'normal', 'nonnegative', and 'tozero'. Each mode configures the chart to handle axis ranges based on specific conditions of the plotted data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\"yaxis\": {\"rangemode\": \"normal\"}}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"yaxis\": {\"rangemode\": \"nonnegative\"}}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\"yaxis\": {\"rangemode\": \"tozero\"}}\n```\n\n----------------------------------------\n\nTITLE: Example XML Instance for Customer Schema\nDESCRIPTION: This XML instance adheres to the previously defined 'customer' schema. It provides an example of how XML data structured according to this schema would appear, with 'name' and 'shoesize' elements including a 'country' attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/xml-schemas/xml-schema-support.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<customer xmlns=\"http://www.example.com/\">\n  <name>John Doe</name>\n  <shoesize country=\"GB\">8</shoesize>\n</customer>\n```\n\n----------------------------------------\n\nTITLE: Implementing TextBox Container Component - TypeScript\nDESCRIPTION: This TypeScript snippet represents the 'TextBox' container component that renders the 'TextInput' component. It retrieves the value from 'textAttribute' and passes it down to 'TextInput'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component, ReactNode, createElement } from \"react\"; \nimport { hot } from \"react-hot-loader/root\";\n\nimport { TextBoxContainerProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\nimport \"./ui/TextBox.css\";\n\nclass TextBox extends Component<TextBoxContainerProps> {\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        return <TextInput value={value} />;\n    }\n}\n\nexport default hot(TextBox);\n```\n\n----------------------------------------\n\nTITLE: Adding React Native Dependency via NPM\nDESCRIPTION: Command to add a new dependency to the project's package.json file with save flag\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm i -s <dependency name>\n```\n\n----------------------------------------\n\nTITLE: Defining System Property for Label in Mendix Pluggable Widget\nDESCRIPTION: This code snippet shows how to define a Label system property in a Mendix pluggable widget. This allows the widget to have labeling functionality similar to core input widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_23\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Label\"/>\n```\n\n----------------------------------------\n\nTITLE: Java Runtime Settings Configuration\nDESCRIPTION: New option to select between Java 11 and Java 17 in app Runtime settings, enabling language constructs and APIs from Java 17\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* We added the option to select between Java 11 and 17 in the app Runtime settings.\n```\n\n----------------------------------------\n\nTITLE: Styling Static Image Widget in Mendix Native Mobile\nDESCRIPTION: Defines styles for the static image widget, including container and image properties. It also includes styles for disabled states and touch feedback on different platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Image = {\n  container: {\n    // All ViewStyle properties\n    rippleColor: 'rgba(0, 0, 0, 0.2)',\n    underlayColor: null,\n  },\n  containerDisabled: {\n    // Same properties as `container`.\n  },\n  image: {\n    // This has all ImageStyle properties.\n  },\n  imageDisabled: {\n    // Same properties as `image`.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating Date with dateTime function and three parameters\nDESCRIPTION: This snippet demonstrates how to create a date using the `dateTime` function with year, month, and day parameters. The `dateTime` function utilizes the session's calendar, whereas `dateTimeUTC` uses UTC. It returns a date object with the year set to 2007, the month set to January, the day set to 1, and the time set to the default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 00:00:00 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Collapsed State in TypeScript\nDESCRIPTION: This TypeScript snippet initializes the collapsed state based on the startCollapsed prop.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_46\n\nLANGUAGE: TypeScript\nCODE:\n```\nreadonly state: GroupBoxState = {\n    collapsed: !!this.props.startCollapsed\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Subtraction in Java\nDESCRIPTION: Simple subtraction operation between two numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n5 - 4\n```\n\n----------------------------------------\n\nTITLE: Initializing Bubble Map Configuration in JSON\nDESCRIPTION: This snippet illustrates the configuration of a bubble map in JSON format, including longitude and latitude data along with marker attributes. The output is a geographic representation of the defined coordinates with bubbles sized according to provided values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"lon\": [ 100, 400 ],\n  \"lat\": [ 0, 0 ],\n  \"type\": \"scattergeo\",\n  \"marker\": {\n    \"color\": [ \"red\", \"blue\" ],\n    \"size\": [ 20, 50 ]\n  },\n  \"mode\": \"marker\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Influx Registry in JSON\nDESCRIPTION: Example configuration for Influx metrics registry with authentication and database settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"influx\",\n    \"settings\": {\n      \"uri\": \"http://mendix.influx.com\",\n      \"db\": \"mx.metrics\",\n      \"userName\": \"mendix\",\n      \"password\": \"MayBeThis**\",\n      \"step\": \"P2Y6M4DT12H21M5S\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Query Logs for Specific Weekday (New York Timezone)\nDESCRIPTION: XPath query that retrieves all logs where the DateAttribute falls on a Friday (day 6) using America/New_York timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[weekday-from-dateTime(DateAttribute, 'America/New_York') = 6]\n```\n\n----------------------------------------\n\nTITLE: Configuring Startup Probe\nDESCRIPTION: This YAML snippet configures a startup probe for a Mendix application deployment. It uses an HTTP GET request to check if the application has finished starting up, using parameters such as the path, port, and thresholds. Note that startup probes are deprecated in Mendix Operator 2.15.0 and later.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\n\"startupProbe:\\n  httpGet:\\n    path: /\\n    port: mendix-app\\n    scheme: HTTP\\n  failureThreshold: 30\\n  periodSeconds: 10\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Menu Item in Mendix Studio Pro using TypeScript\nDESCRIPTION: This code creates a simple menu item that displays a message box when clicked. It imports necessary APIs, sets up event listening for menu activation, and defines a menu with basic properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/menu-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IComponent, Menu, studioPro } from \"@mendix/extensions-api\";\n\nconst menuApi = studioPro.ui.extensionsMenu;\n\nconst messageBoxApi = studioPro.ui.messageBoxes;\nconst menuId = \"my-menu-unique-id\";\nconst caption = \"My First Menu\";\n\n// Open a message box when the menu item is clicked\nstudioPro.ui.extensionsMenu.addEventListener(\"menuItemActivated\", (args) => {\n  if (args.menuId === \"my-menu-unique-id\") {\n    messageBoxApi.show(\"info\", `My menu '${args.menuId}' was clicked`);\n  }\n});\nclass Main implements IComponent {\n  async loaded() {\n    const menu: Menu = {\n      caption: caption,\n      menuId: menuId,\n      subMenus: [],\n      hasSeparatorBefore: false,\n      hasSeparatorAfter: true,\n      enabled: true,\n    };\n\n    await menuApi.add(menu);\n  }\n}\n\nexport const component: IComponent = new Main();\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Order Price with XPath in Mendix\nDESCRIPTION: Shows how to use an aggregate function (avg) with XPath to calculate the average total price of paid orders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\navg(//Sales.Order[IsPaid = true()]/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Configuring Area Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating an area chart with filled regions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"mode\": \"scatter\",\n  \"fill\": \"tonexty\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: OQL Query with Range Parameter\nDESCRIPTION: Example query demonstrating the use of range parameter in selecting customers born within last week\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangeend.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nselect FirstName as First, LastName as Last, Name as Name, Birthday as BDay, CustomerType as Type from Sales.Customer\nwhere Birthday IN ($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Filtering OData Query with Skip Parameter\nDESCRIPTION: This example shows how to skip a certain number of results in an OData query using the $skip parameter. It skips the first result and returns the subsequent ones.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_2\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/Expenses/Expenses?$skip=1\n```\n\n----------------------------------------\n\nTITLE: Basic GetJobStatus SOAP Response Example\nDESCRIPTION: XML structure of the basic response from the GetJobStatus service. This response includes the execution status, result, and any error messages without additional details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Body>\n    <tns:GetTestRunResponse>\n      <TestRun>\n        <ExecutionStatus>[key]</ExecutionStatus>\n        <ExecutionResult>[key]</ExecutionResult>\n        <ErrorMessage>exampleString</ErrorMessage>\n      </TestRun>\n    </tns:GetTestRunResponse>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Setting Enumeration Values - Java\nDESCRIPTION: This snippet demonstrates how to set the value of an attribute to a specific enumeration value in Mendix. It illustrates the syntax required for referencing enumeration values in the OrderProcessing module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nOrderProcessing.Status.completed\n```\n\n----------------------------------------\n\nTITLE: Running Compiled JavaScript with Node.js\nDESCRIPTION: This command runs the compiled JavaScript file using Node.js. Ensure that Node.js is installed. The execution will create and log actions related to a new Mendix app and its manipulations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-your-first-script.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ node script.js\n```\n\n----------------------------------------\n\nTITLE: Async REST API Call with Error Handling\nDESCRIPTION: Implementation of an async function that fetches user data from an API endpoint with proper error handling using try-catch blocks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nasync function GetUserNameSampleRest(userID) {\n    // BEGIN USER CODE\n    if (!userID) {\n        throw new Error(\"The UserID parameter is required\")\n    }\n    const url = \"https://jsonplaceholder.typicode.com/users/\" + userID;\n    try {\n        const response = await fetch(url); // Fetch returns a promise, gets the url and wait for result\n        const jsonData = await response.json(); // Transform to json\n        return jsonData.name; // Get the data\n    } catch (error) {\n        throw new Error(\"Failed to get user information\");\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Opening XML Element Tag in Excel\nDESCRIPTION: Excel text string that adds the opening part of an XML element tag to country names. This string is placed in column A and copied down for all countries to prepare for XSD file creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<xs:element type=\"xs:string\" name=\"\n```\n\n----------------------------------------\n\nTITLE: Registering Environment in Catalog\nDESCRIPTION: Describes the process of registering an application's environment using specific API parameters and a Personal Access Token\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/automate-registration.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nRequirements:\n* Personal Access Token\n* application_UUID\n* Environment Name\n* Environment Location\n* Environment Type\n\nFollow Catalog Registration API environment registration steps\n```\n\n----------------------------------------\n\nTITLE: Deleting a Mendix App using Platform SDK in TypeScript\nDESCRIPTION: Shows how to delete a Mendix app using the app object. This operation permanently deletes all app resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nawait app.delete();\n```\n\n----------------------------------------\n\nTITLE: Quantified Expression Example\nDESCRIPTION: Demonstrates how to use quantifiers to specify the number of times an expression can appear in a match. This example uses specific minimum and maximum counts for repetition. No additional dependencies are involved, and it is particularly helpful when constructing more complex matching patterns where quantity is a factor.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/regular-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: Regex\nCODE:\n```\na{3,5}\n```\n\n----------------------------------------\n\nTITLE: Basic XPath Constraint Example in Java\nDESCRIPTION: A simple XPath query that retrieves all customers whose name is equal to 'Jansen'. The constraint is enclosed in brackets after the entity specification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenShift Routes in OperatorConfiguration YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure OpenShift Routes for network endpoints in the OperatorConfiguration resource. It includes options for enabling TLS, adding route annotations, specifying a custom domain, and referencing an existing TLS certificate secret.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-openshift.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # ...\n  # Other configuration options values\n  # Endpoint (Network) configuration\n  endpoint:\n    # Endpoint type: ingress, openshiftRoute, or service\n    type: openshiftRoute\n    # OpenShift Route configuration: used only when type is set to openshiftRoute\n    openshiftRoute:\n      # Optional, can be omitted: annotations which should be applied to all Ingress Resources\n      annotations:\n        # Example: set HSTS headers\n        haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload\n        # This is automatically added by mxpc-cli to allow path-based routing\n        haproxy.router.openshift.io/rewrite-target: \"/\"\"\n      # Optional: App URLs will be generated for subdomains of this domain, unless an app is using a custom appURL\n      domain: mendix.example.com\n      # Enable or disable TLS\n      enableTLS: true\n      # Optional: name of a kubernetes.io/tls secret containing the TLS certificate\n      tlsSecretName: 'mendixapps-tls'\n# ...\n# omitted lines for brevity\n# ...\n```\n\n----------------------------------------\n\nTITLE: Design Section Link Include\nDESCRIPTION: Markdown snippet inclusion for design section documentation link\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-view.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Example: Multiple Package Conversion\nDESCRIPTION: Example command demonstrating conversion of multiple Mendix app packages to a target directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mx-command-line-tool.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmx convert C:\\Mendix\\App1.mpk C:\\Mendix\\App2.mpk C:\\Mendix\\ConvertedProjects\\\n```\n\n----------------------------------------\n\nTITLE: Subtracting Years from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 1 year from a specific date and time using the subtractYears function. The function takes a datetime value and an integer representing years to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_16\n\nLANGUAGE: java\nCODE:\n```\nInput: subtractYears(dateTime(2007, 1, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Navigating to JavaScript Action Directory in PowerShell\nDESCRIPTION: This command navigates to the folder containing the JavaScript actions within the Mendix app, which is necessary for installing dependencies related to NFC functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\ncd C:\\MendixApps\\NativeNFC\\javascriptsource\\nativenfc\\actions\n```\n\n----------------------------------------\n\nTITLE: Configuring App Shutdown Delay in YAML\nDESCRIPTION: Sets a delay for app shutdown using the 'runtimeTerminationDelaySeconds' value in OperatorConfiguration. Useful for scenarios requiring graceful pod termination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  runtimeTerminationDelaySeconds: 90\n```\n\n----------------------------------------\n\nTITLE: Book Search API Response Structure Example\nDESCRIPTION: Example JSON response structure from the Google Books API demonstrating the data model used for integration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/integrating-a-legacy-system-into-a-mendix-app.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"items\": [\n        {\n            \"volumeInfo\": {\n                \"title\": \"string\",\n                \"authors\": [\"string\"],\n                \"description\": \"string\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Seconds Between Dates in Java\nDESCRIPTION: The `secondsBetween` function calculates the absolute difference between two date values in seconds. It takes two Date and Time objects as inputs and outputs a decimal value denoting the difference in seconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nsecondsBetween(dateTime(2007, 1, 1, 1, 1, 1), dateTime(2007,1,1,1,2,3))\n```\n\n----------------------------------------\n\nTITLE: Calculating Minutes Between Dates in Java\nDESCRIPTION: The `minutesBetween` function computes the absolute difference between two date values in minutes. Given two Date and Time objects, it returns a decimal value that represents the difference in minutes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nminutesBetween(dateTime(2007, 1, 1, 1, 2, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Configuring Metrics Filters\nDESCRIPTION: JSON structure for filters that can be applied to metrics. This defines how to accept or deny metrics based on criteria like name prefixes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"filters\" : [\n  {\"type\" : \"<filter-type>\", \"result\" : \"filter-result\", \"values\": [ \"<list-of-filter-values>\"] }\n]\n```\n\n----------------------------------------\n\nTITLE: Integrating Validation Feedback in TextBox Component\nDESCRIPTION: This snippet shows how to integrate the validation feedback mechanism into the TextBox widget by using the previously defined 'Alert' component to display validation messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n    const value = props.textAttribute.value || \"\";\n    const validationFeedback = props.textAttribute.validation;\n    \n    return (\n        <Fragment>\n            <TextInput\n                value={value}\n                onChange={props.textAttribute.setValue}\n                tabIndex={props.tabIndex}\n                disabled={props.textAttribute.readOnly}\n            />\n            <Alert>{validationFeedback}</Alert>\n        </Fragment>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Example File Storage Path in Mendix Backups\nDESCRIPTION: This snippet demonstrates a specific example of how a file with UUID 0d3e301f-5551-46f8-ad44-8de2be084c95 would be stored in the tree structure of a Mendix backup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/backups/restore-backup.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n/tree\n   /0d\n      /3e\n         /0d3e301f-5551-46f8-ad44-8de2be084c95\n```\n\n----------------------------------------\n\nTITLE: Styling Barcode Scanner Widget in Mendix Native Mobile\nDESCRIPTION: JavaScript style object for customizing the barcode scanner widget which allows scanning barcodes and QR codes. Includes container styling and mask properties for customizing the scanner overlay.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_barcodescanner_BarcodeScanner = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  mask: {\n    color: '#62B1F6', // Property to set the color of the mask border indicators.\n    width: null, // Property to set the width of the barcode reader.\n    height: null, // Property to set the height of the barcode reader.\n    backgroundColor: 'rgba(0, 0, 0, 0.6)' // Property to set the background color of the mask.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Fetching Marketplace Modules Information\nDESCRIPTION: Retrieves and logs information about Marketplace modules used in the application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/manipulating-existing-models/finding-things-in-the-model.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst model = await workingCopy.openModel();\nmodel.allModules()\n\t.filter(module => module.fromAppStore === true)\n\t.forEach(module =>\n\t\tconsole.log({\n\t\t\tname: module.name,\n\t\t\tappStoreVersion: module.appStoreVersion,\n\t\t\tappStoreGuid: module.appStoreGuid,\n\t\t\tappStoreVersionGuid: module.appStoreVersionGuid\n\t\t})\n\t);\n```\n\n----------------------------------------\n\nTITLE: Adding Days to a Date in Java\nDESCRIPTION: Example of using the addDays function to add 3 days to a date. This function adds a specified number of days to a date and time value using the server's calendar.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\naddDays(dateTime(2007, 1, 1, 1, 1, 1), 3)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 04 01:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Creating Image Entity with System.Image Inheritance\nDESCRIPTION: Demonstrates creating a MyImage entity that inherits from System.Image to handle image functionality in Mendix. This enables using standard platform widgets for image upload and viewing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/working-with-images-and-files.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nEntity: MyImage\nGeneralization: System.Image\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Classes for Design Properties\nDESCRIPTION: CSS class definitions for background colors used in design properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_11\n\nLANGUAGE: css\nCODE:\n```\n.backgroundColorLightBlue {\n    background-color: #87CEFA;\n}\n\n.backgroundColorLightGreen {\n    background-color: #90EE90;\n}\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Years Example\nDESCRIPTION: Shows the output of subtracting 1 year from January 1, 2007, 01:01:01. The result is January 1, 2006, 01:01:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_17\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:01:01 CET 2006\n```\n\n----------------------------------------\n\nTITLE: Configuring Toggle Buttons Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Toggle Buttons widget including container, button, text and validation message styles. Controls the appearance of enumeration selection buttons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_togglebuttons_ToggleButtons = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  containerDisabled: {\n    // This has all ViewStyle properties.\n  },\n  button: {\n    // This has all ViewStyle properties.\n  },\n  text: {\n    // This has all TextStyle properties.\n  },\n  activeButton: {\n    // This has all ViewStyle properties.\n  },\n  activeButtonText: {\n    // This has all TextStyle properties.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Variable Activities in Mendix\nDESCRIPTION: Covers activities for creating and modifying variables in microflows and nanoflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Graphic | Name | Description |\n| --- | --- | --- |\n| Change variable | Allows you to changes the value of a variable. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Template Grid for Picture Display\nDESCRIPTION: Shows how to configure a template grid to display data from a Picture entity, including generating pages and connecting data sources dynamically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/responsive-web-app.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Page Configuration\nCODE:\n```\nTemplate Grid Configuration:\n- Entity: Picture\n- Data Source: Picture Entity\n- Building Block: Card Action with Image\n- Dynamic Image: Linked to Picture Entity\n```\n\n----------------------------------------\n\nTITLE: Creating a New Employee Object in JSON (Mendix Client to Runtime Server)\nDESCRIPTION: This JSON request is sent from the Mendix Client to the Runtime Server to instantiate a new Employee object. It specifies the object type and includes a cache prevention parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"instantiate\",\n   \"params\":{\n      \"objecttype\":\"MyFirstModule.Employee\",\n      \"preventCache\":1455032246146\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee68c92aea60\":27\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: INNER JOIN Syntax in OQL\nDESCRIPTION: The syntax for INNER JOIN in OQL, which is the most common join operation between entities and represents the default join type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n[ INNER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: Editing Operator Configuration in OpenShift\nDESCRIPTION: Command to edit the Operator Configuration in OpenShift to adjust resource settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} edit operatorconfiguration\n```\n\n----------------------------------------\n\nTITLE: Adjusting Render Method to Display Header\nDESCRIPTION: This TypeScript snippet adjusts the render method in `GroupBox.tsx` to display the `headerCaption` text. It renders the header caption within a Text component, nested inside View components for styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_15\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n        return (\n            <View style={this.styles.container}>\n                <View style={this.styles.header}>\n                    <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                    <Text style={this.styles.headerContent}>-</Text>\n                </View>\n                <View style={this.styles.content}>\n                    <Text>Content</Text>\n                </View>\n            </View>\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Creating Test Roles in Snowflake\nDESCRIPTION: SQL commands to create two test roles ROLETESTA and ROLETESTB for RBAC testing\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE ROLE ROLETESTA;\nCREATE ROLE ROLETESTB;\n```\n\n----------------------------------------\n\nTITLE: Creating a Table in PostgreSQL with SQL\nDESCRIPTION: SQL statement to create an employee table with primary key and required fields. The statement creates a table with three columns: emp_id (primary key), first_name, and last_name (both required).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-rds-database-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE employee (\n    emp_id INT PRIMARY KEY,\n    first_name VARCHAR(50) NOT NULL,\n    last_name VARCHAR(50) NOT NULL)\n```\n\n----------------------------------------\n\nTITLE: Convert Decimal to String in Mendix\nDESCRIPTION: This snippet demonstrates converting a decimal value (1.4) to its string representation using the `toString` function in Mendix. The input is a decimal value, and the output is a string representation of that value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"toString(1.4)\"\n```\n\n----------------------------------------\n\nTITLE: Creating Row Access Policy\nDESCRIPTION: SQL command to create a row-based access policy that restricts data access based on region and role\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_7\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE OR REPLACE ROW ACCESS POLICY RegionRole\nAS (region varchar) RETURNS BOOLEAN -> case \nwhen region = 'EU' and 'ROLETESTA' = current_role()  then true \nwhen region = 'US' and 'ROLETESTB' = current_role()  then true else false end\n;\n```\n\n----------------------------------------\n\nTITLE: Specifying Merge Driver for MPR Files\nDESCRIPTION: This code snippet instructs Git to use the custom merge driver for *.mpr* files by adding a line to the attributes file in the project's .git directory. This is crucial for ensuring that merge conflicts are handled correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_5\n\nLANGUAGE: ini\nCODE:\n```\n*.mpr merge=custom\n```\n\n----------------------------------------\n\nTITLE: XML Import Microflow Logic\nDESCRIPTION: Defines the microflow for importing XML documents using a predefined XML-to-domain mapping\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-xml-documents.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<Microflow name=\"XMLDocument_Import\">\n    <Parameter name=\"XMLDocument\" type=\"XMLDocument\" />\n    <ActionActivity name=\"ImportXMLData\">\n        <ImportWithMapping variable=\"XMLDocument\" mapping=\"ImportCustomersMapping\" />\n    </ActionActivity>\n</Microflow>\n```\n\n----------------------------------------\n\nTITLE: Adding Days to Date in Java\nDESCRIPTION: Demonstrates adding 3 days to a date using addDays function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\naddDays(dateTime(2007, 1, 1, 1, 1, 1), 3)\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Snippet\nDESCRIPTION: This snippet includes the common properties for buttons, referenced from an external markdown file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/button-widgets/button-properties.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Applying Upgrade Manifest for Mendix Operator\nDESCRIPTION: This command applies the upgrade manifest, which updates the dependency versions for the Mendix Operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-upgrade-guide.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} apply -f upgrade_manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Kubernetes ECR Token Refresh Configuration\nDESCRIPTION: Kubernetes manifest that sets up a CronJob to refresh ECR authentication tokens every 4 hours, including necessary RBAC permissions and initial secret creation job.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ecr-secret\ntype: Opaque\ndata:\n  AWS_ACCESS_KEY_ID: $BASE64_KEYID_HERE\n  AWS_SECRET_ACCESS_KEY: $BASE64_ACCESSKEY_HERE\n  AWS_ACCOUNT: $BASE64_AWS_ACCOUNT_HERE\n  AWS_REGION: $BASE64_AWS_REGION_HERE\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: ecr-token-update\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: ecr-token-update\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"serviceaccounts\"]\n    verbs: [\"get\", \"patch\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: ecr-token-update-binding\nsubjects:\n  - kind: ServiceAccount\n    name: ecr-token-update\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ecr-token-update\n---\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: create-ecr-secret\nspec:\n  template:\n    spec:\n      serviceAccountName: ecr-token-update\n      containers:\n        - name: kubectl\n          imagePullPolicy: IfNotPresent\n          envFrom:\n            - secretRef:\n                name: ecr-secret\n          image: alpine/k8s:1.18.16\n          command:\n            - \"/bin/sh\"\n            - \"-c\"\n            - |\n              DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com\n              DOCKER_USER=AWS\n              DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} | cut -d' ' -f6`\n              DOCKER_CONFIG_PASSWORD=`echo ${DOCKER_USER}:${DOCKER_PASSWORD} | base64 -w 0`\n              CONFIG=\"\n              {\n                \\\"auths\\\": {\n                  \\\"${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com\\\": {\n                    \\\"auth\\\": \\\"${DOCKER_CONFIG_PASSWORD}\\\"\n                  }\n                }\n              }\"\n              \n              echo \"Writing to config.json\"\n              printf \"${CONFIG}\" > config.json\n              \n              kubectl delete secret aws-registry || true\n              kubectl create secret generic aws-registry \\\n              --from-file=.dockerconfigjson=config.json \\\n              --type=kubernetes.io/dockerconfigjson\n              \n              kubectl patch serviceaccount tekton-triggers-mx-sa -p '{\"imagePullSecrets\":[{\"name\":\"aws-registry\"}]}'\n              kubectl patch serviceaccount tekton-triggers-mx-sa -p '{\"secrets\":[{\"name\":\"aws-registry\"}]}'\n      restartPolicy: Never\n  backoffLimit: 1\n---\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: aws-registry-credential-cron\nspec:\n  schedule: \"0 */4 * * *\"\n  successfulJobsHistoryLimit: 1\n  failedJobsHistoryLimit: 1\n  jobTemplate:\n    spec:\n      backoffLimit: 1\n      template:\n        spec:\n          serviceAccountName: ecr-token-update\n          terminationGracePeriodSeconds: 0\n          restartPolicy: Never\n          containers:\n            - name: kubectl\n              imagePullPolicy: IfNotPresent\n              envFrom:\n                - secretRef:\n                    name: ecr-secret\n              image: alpine/k8s:1.18.16\n              command:\n                - \"/bin/sh\"\n                - \"-c\"\n                - |\n                  DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com\n                  DOCKER_USER=AWS\n                  DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} | cut -d' ' -f6`\n                  DOCKER_CONFIG_PASSWORD=`echo ${DOCKER_USER}:${DOCKER_PASSWORD} | base64 -w 0`\n                  CONFIG=\"\n                  {\n                    \\\"auths\\\": {\n                      \\\"${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com\\\": {\n                        \\\"auth\\\": \\\"${DOCKER_CONFIG_PASSWORD}\\\"\n                      }\n                    }\n                  }\"\n                  \n                  echo \"Writing to config.json\"\n                  printf \"${CONFIG}\" > config.json\n                  \n                  kubectl delete secret aws-registry || true\n                  kubectl create secret generic aws-registry \\\n                  --from-file=.dockerconfigjson=config.json \\\n                  --type=kubernetes.io/dockerconfigjson\n                  \n                  kubectl patch serviceaccount tekton-triggers-mx-sa -p '{\"imagePullSecrets\":[{\"name\":\"aws-registry\"}]}'\n                  kubectl patch serviceaccount tekton-triggers-mx-sa -p '{\"secrets\":[{\"name\":\"aws-registry\"}]}'\n```\n\n----------------------------------------\n\nTITLE: Creating After Commit Event Handler in Mendix\nDESCRIPTION: This snippet outlines the steps for setting up an after commit event handler in Mendix to manage data synchronization after an order is committed. It defines the event handler's properties and the creation of a new microflow for total order amount calculation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/data-models/denormalize-data-to-improve-performance.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the domain model and double-click the Order entity to open its properties editor.\n2. On the **Event handlers** tab, click **New** to add a new event handler.\n3. On the **New Event Handler** dialog box, do the following:\n    * Select **After** as the **Moment**\n    * Select **Commit** as the **Event**\n    * Select **Yes** for **Pass the event object**\n    * Click **Select...** to open the microflow selector\n4. On the microflow selector, click **New** and enter a name for the new microflow (for example, *Order_AfterCommit*).\n5. Click **OK** to create the new microflow, and then click **OK** again to save the event handler.\n```\n\nLANGUAGE: Mendix\nCODE:\n```\n6. Open the new microflow, which should look like this:\n7. Open the **Toolbox**, which should be docked in the lower-right corner of Studio Pro. If you can't find the **Toolbox** there, you can open it from the **View** menu:\n8. Drag a **Retrieve** activity from the toolbox to the line between the start and end event on the microflow, which will insert a new retrieve activity:\n9. Double-click the new activity to open its properties on the **Retrieve Objects** dialog box and do the following:\n    * Select **By association** as **Source**\n    * Click **Select...** to open the **Association** selector\n10. On the **Select association** pop-up window, select **Order_Customer** from the **Variables** node in the tree view, and then click **Select**:\n```\n\nLANGUAGE: Mendix\nCODE:\n```\n11. Click **OK** to save the activity. Your microflow should now look like this:\n12. Insert another retrieve activity (as you did in step #8), double-click it to open its properties on the **Retrieve Objects** dialog box, and do the following:\n    * Select **From Database** as **Source**\n    * Click **Select...** to open the entity selector\n13. On the **Select entity** pop-up window, select **Order** via from the **Variables** node in the tree view, and then click **Select**:\n14. Click **OK** to save the activity. Your microflow should now look like this:\n15. Insert an aggregate list activity, double-click it to open its properties on the **Aggregate List** dialog box, and do the following:\n    * Select **OrderList** as the **Input > List**\n    * Select **Sum** as the **Function**\n    * Select **Totalprice** as the **Attribute**\n    * Enter *SumTotalprice* as the **Output > Variable** name:\n```\n\nLANGUAGE: Mendix\nCODE:\n```\n16. Click **OK** to save the activity. Your microflow should now look like this:\n17. Insert a change activity, double-click it to open its properties on the **Change Object** dialog box, and do the following:\n    * Select **Customer** as the **Input > Object**\n    * Select **Yes** as the **Commit** action\n    * Select **Yes** to refresh in the client (the object changes are made on the server side, and with this option, the server triggers the client to refresh the object)\n    * Click **New** to create a new change item\n18. In the **Edit Change Item** dialog box, do the following:\n    * Select **TotalOrderAmount** as the **Member**\n    * Enter *$SumTotalprice* as the **Value**\n    * Click **OK** to save the change item\n```\n\nLANGUAGE: Mendix\nCODE:\n```\n19. Click **OK** again to save the activity. Your microflow should now look like this:\n20. Run the application and create some customers and orders. You should now see an up-to-date value for the TotalOrderAmount.\n```\n\n----------------------------------------\n\nTITLE: Using minutes-from-dateTime() Function in Mendix XPath Query\nDESCRIPTION: This example demonstrates how to use the minutes-from-dateTime() function to retrieve logs where the minutes part of the DateAttribute equals 30. The function extracts only the minutes portion from a Date and time attribute to enable specific time-based filtering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-minutes-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[minutes-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request for Getting Security Group by UUID\nDESCRIPTION: HTTP request example showing how to retrieve details of a security group using its UUID. The request includes authentication headers required for the API call.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /legacy-api/1/groups/86a2558b-b63b-4c76-a056-018d9eb8f1b9 HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Handling Missing Objects in Import Mapping\nDESCRIPTION: Configures runtime behavior when no matching object is found during import mapping, with options to create, ignore, or throw an error\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/mapping-documents/import-mappings.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Configuration\nCODE:\n```\nIf No Object Was Found:\n- Create\n- Ignore\n- Error\n```\n\n----------------------------------------\n\nTITLE: Defining a Nanoflow Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define a nanoflow property within a Mendix widget. The nanoflow property allows a user to select a nanoflow in Mendix Studio Pro which can be executed by the widget. The `needsEntityContext` attribute specifies if the nanoflow requires the context entity as an input parameter, and the `returnType` element specifies the expected return type of the nanoflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"validationNanoflow\" type=\"nanoflow\" required=\"false\" needsEntityContext=\"true\">\n  <caption>Validation Nanoflow</caption>\n  <category>Behavior</category>\n  <description>Return value: whether the given object is validated successfully</description>\n  <returnType type=\"Boolean\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Autoscaler Configuration JSON Structure\nDESCRIPTION: The structure of the JSON configuration file for the SAP BTP Application Autoscaler. This file defines the scaling policies and rules for the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/sap-btp/sap-autoscaler.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"instance_min_count\": 1,\n  \"instance_max_count\": 5,\n  \"schedules\": {\n    \"timezone\": \"UTC\",\n    \"recurring_schedule\": [\n      {\n        \"start_time\": \"10:00\",\n        \"end_time\": \"18:00\",\n        \"days_of_week\": [1, 2, 3, 4, 5],\n        \"instance_min_count\": 2,\n        \"instance_max_count\": 4\n      }\n    ]\n  },\n  \"scaling_rules\": [\n    {\n      \"metric_type\": \"memoryutil\",\n      \"threshold\": 80,\n      \"operator\": \">\",\n      \"adjustment\": \"+1\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Registry\nDESCRIPTION: JSON configuration examples for setting up Prometheus metrics registry in Mendix. The examples show how to configure the reporting frequency using different time formats.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"prometheus\",\n    \"settings\": {\n      \"step\": \"3m\"\n    }\n  }\n]\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"prometheus\",\n    \"settings\": {\n      \"step\": \"P3Y6M4DT12H30M5S\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Sending Request to Plotly REST Endpoint using JSON\nDESCRIPTION: This JSON structure is used to send a request to the Plotly Images REST endpoint. It specifies the plotting data and layout along with the image format. The 'figure' contains the data and layout properties. The 'format' specifies the desired image output format, and 'encoded' is set to false to not return a base64 image URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-plotly-images-rest.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\\n    \\\"figure\\\": {\\n        \\\"data\\\": [{\\\"y\\\": [10, 10, 2, 20]}],\\n        \\\"layout\\\": {\\\"width\\\": 700}\\n    },\\n    \\\"format\\\": \\\"png\\\",\\n    \\\"encoded\\\": false\\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering, Sorting and Paginating Customer Data\nDESCRIPTION: Complex HTTP GET request demonstrating how to combine OData query parameters for filtering, sorting, pagination, and attribute selection when fetching customer data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers?$filter=contains(Lastname, 'a')&$orderby=CompanyName&$select=FirstName,Lastname,CompanyName&$top=2&skip=1\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Property in XML for Mendix Pluggable Widgets\nDESCRIPTION: Example of defining an icon property that allows users to configure an icon similar to those used by buttons. Shows property definition with key, type, and required attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"cardIcon\" type=\"icon\" required=\"false\">\n\t<caption>Icon</caption>\n\t<description>Card icon</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Combined Constraints with OR Operator in Java\nDESCRIPTION: An XPath query using the 'or' operator to combine constraints, retrieving customers who are either named 'Jansen' or live in Rotterdam.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen' or Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Security Group Members JSON Response\nDESCRIPTION: Example JSON response showing users belonging to a security group, returning their OpenIDs and the total count of members in the group.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"users\": [\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=6043d3ed-517f-43fc-bfb5-1062afe24858\"\n        },\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=daba46fc-692c-4622-adb4-981fcfb0dec9\"\n        }\n    ],\n    \"count\": 2\n}\n```\n\n----------------------------------------\n\nTITLE: Using getKey Function with Enumerations in Java\nDESCRIPTION: Shows how to use the getKey function to obtain the technical name (key) of an enumeration value. This key is language-independent and represents the enumeration value in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ngetKey($Customer/Grade)\n```\n\n----------------------------------------\n\nTITLE: Configuring JVM Parameters for Remote Debugging\nDESCRIPTION: Adding extra JVM parameters for Mendix Runtime to ensure remote debugging functionality. This involves setting the jdwp agentlib to allow socket connections for debugging purposes. The configuration is necessary before running the application from the Mendix platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/debug-java-actions/debug-java-actions-remotely.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\n```\n\n----------------------------------------\n\nTITLE: Implementing Sign-In Action in Mendix Nanoflow\nDESCRIPTION: This snippet shows the structure of a nanoflow named ACT_SignInUser that handles the sign-in process, including calling the Sign in action and handling different response scenarios.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/authenticating-users.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n// Nanoflow: ACT_SignInUser\nParameter: Login\n\n// Call Sign in action\nSignInResponse = Sign in(Login.Username, Login.Password)\n\n// Handle response\nif SignInResponse == 200\n  // Sign-in successful, app will restart automatically\nelse if SignInResponse == 401\n  Login.ValidationMessage = \"Invalid username or password\"\nelse if SignInResponse == 0\n  Login.ValidationMessage = \"Network error occurred\"\n\n// End nanoflow\n```\n\n----------------------------------------\n\nTITLE: Mendix Operator Configuration Manifest Reference\nDESCRIPTION: Reference to the OperatorConfiguration manifest that centralizes all configuration settings for Mendix applications in a namespace, overriding individual settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n```\n\n----------------------------------------\n\nTITLE: Alert Info Block\nDESCRIPTION: Markdown shortcode for displaying additional information about data types and associations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\\\"info\\\" %}}\nFor more information on data types, see [Data Types](/refguide8/data-types/).\n\nFor more information on associations and their properties, see [Associations](/refguide8/associations/).\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Action Property\nDESCRIPTION: Defines the interface for action properties in Mendix pluggable widgets, including execution state and control methods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ActionValue {\n    readonly canExecute: boolean;\n    readonly isExecuting: boolean;\n    execute(): void;\n}\n```\n\n----------------------------------------\n\nTITLE: OData Query Example for Product Filtering\nDESCRIPTION: Example query for retrieving a filtered list of products from the GWSAMPLE_BASIC service, specifically targeting products in the Notebooks category with inline count enabled.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n@GWSAMPLE_BASIC.GWSAMPLE_BASIC + '/' + toString(GWSAMPLE_BASIC.EntitySetNames.ProductSet) + '?' + '$filter=Category%20eq%20''Notebooks''' + '&' + '$inlinecount=allpages'\n```\n\n----------------------------------------\n\nTITLE: Editing a Document Tab using C#\nDESCRIPTION: This snippet illustrates the procedure for editing a document tab in the Mendix working area through the AppExplorerExtension API. The relevant view model is 'WebViewDocumentTabViewModel', which also needs to implement the InitWebView method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-reference-guide/web-view.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nAppExplorerExtension.EditDocument(...) // Edits a document in the working area\n```\n\n----------------------------------------\n\nTITLE: Creating XMLDocument Entity\nDESCRIPTION: Creates an entity that inherits from System.FileDocument to manage XML file documents within the Mendix application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-xml-documents.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<Entity name=\"XMLDocument\" generalization=\"System.FileDocument\">\n    <!-- Inherits all properties from FileDocument -->\n</Entity>\n```\n\n----------------------------------------\n\nTITLE: Applying Default Styles to Container Component\nDESCRIPTION: Introduces a defaultStyle constant to define fallback styling for the container component, ensuring consistent text and icon display when custom styles are not provided. This relies on Mendix and React styling principles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_39\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst defaultStyle: CustomStyle = {\\n    container: {},\\n    header: {},\\n    headerContent: {\\n        color: \\\"#FFFFFF\\\",\\n        fontSize: 16\\n    },\\n    content: {}\\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Firebase in HTML\nDESCRIPTION: Code for initializing Firebase in the custom index.html file. Requires Firebase configuration details and loads necessary Firebase SDK scripts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/push-notifications/notif-implement-pwa.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://www.gstatic.com/firebasejs/10.11.0/firebase-app-compat.js\"></script>\n<script src=\"https://www.gstatic.com/firebasejs/10.11.0/firebase-messaging-compat.js\"></script>\n<script>\nconst firebaseConfig = {\n  apiKey: \"...\",\n  authDomain: \"...\",\n  projectId: \"...\",\n  storageBucket: \"...\",\n  messagingSenderId: \"...\",\n  appId: \"...\"\n};\nfirebase.initializeApp(firebaseConfig);\n</script>\n```\n\n----------------------------------------\n\nTITLE: Committing Changes with JSON in Mendix\nDESCRIPTION: This JSON payload commits the changes made to an object with a specified GUID in Mendix.  It specifies the \"commit\" action and includes the GUID of the object. This action persists the changes made to the object during the current request to the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"commit\",\n   \"params\":{\n      \"guid\":\"281474976710757\"\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee8ca8f775a0\":20\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PageTitle Widget Styles in JavaScript\nDESCRIPTION: Sets up styling for the PageTitle widget by using JavaScript objects to incorporate ViewStyle and TextStyle properties. The 'numberOfLines' attribute manages text wrapping within the title display.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nexport const PageTitle = {\n  container: {\n  },\n  text: {\n    numberOfLines: 0\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Text Replacement Microflow Logic\nDESCRIPTION: Implementation of text replacement functionality that handles translated text with variable parameters and position tokens.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Result of Subtracting Minutes Example\nDESCRIPTION: Shows the output of subtracting 30 minutes from January 1, 2007, 01:01:01. The result is January 1, 2007, 00:30:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 00:30:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Setting HashAlgorithm Custom Configuration Example\nDESCRIPTION: Example showing how to set the hash algorithm to BCRYPT using custom configuration settings in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/app/app-settings/configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nname: HashAlgorithm\nvalue: BCRYPT\n```\n\n----------------------------------------\n\nTITLE: Adding includeMetadataByDefault Property to PublishedODataService2\nDESCRIPTION: The PublishedODataService2 ModelUnit now includes a new 'includeMetadataByDefault' property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.8.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### ODataPublish\n\n#### PublishedODataService2 (ModelUnit)\n\n* We introduced the `includeMetadataByDefault` property.\n```\n\n----------------------------------------\n\nTITLE: Configuring IAM Authentication in AWS RDS using SQL\nDESCRIPTION: This snippet provides the SQL commands to enable IAM authentication and grant the 'rds_iam' role to a specified database user in PostgreSQL. It requires an active PostgreSQL connection and proper credentials set through environment variables. Inputs include the database username and host, and outputs involve role modifications in the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nkubectl run postgrestools docker.io/bitnami/postgresql:14 -ti --restart=Never --rm=true -- /bin/sh\nexport PGDATABASE=postgres\nexport PGUSER=<database-username>\nexport PGHOST=<database-host>\nexport PGPASSWORD=<database-password>\npsql\n\nGRANT rds_iam TO <database-username>;\nALTER ROLE <database-username> WITH PASSWORD NULL;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Newly Created Customer by ID\nDESCRIPTION: Example HTTP GET request to verify a newly created customer resource by retrieving it directly from its endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers(5)\n```\n\n----------------------------------------\n\nTITLE: Integer Property Type Definition\nDESCRIPTION: Shows how to define an integer property that displays as a number input in Studio Pro. It requires a defaultValue attribute and is passed as a number prop to the client component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myInteger\" type=\"integer\" defaultValue=\"1000\">\n\t<caption>My integer</caption>\n\t<description>My integer setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination in a Mendix Widget using TypeScript\nDESCRIPTION: This code shows how to implement pagination in a Mendix widget. It sets the initial limit in the constructor and provides methods to switch between pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport default class PagedWidget extends Component<PagedWidgetProps> {\n    constructor(props: PagedWidgetProps) {\n        super(props);\n\n        props.myDataSource.setLimit(props.pageSize);\n    }\n}\n\nconst ds = this.props.myDataSource;\nconst current = this.props.myDataSource.offset;\n<button onClick={() => ds.setOffset(current - this.props.pageSize)}>\n    Previous\n</button>\n<button onClick={() => ds.setOffset(current + this.props.pageSize)}>\n    Next\n</button>\n```\n\n----------------------------------------\n\nTITLE: Checking for Empty Object Member in Mendix Java\nDESCRIPTION: This snippet showcases a Mendix expression to evaluate whether a specific member of an object (like an attribute or association) is empty. The function checks a member's presence or absence, returning 'True' if the member does not have a value. It is crucial for handling cases where certain data fields might be uninitialized.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n$object1/member1 = empty\n```\n\n----------------------------------------\n\nTITLE: Configuring XPath Constraints for Database Queries\nDESCRIPTION: Example showing how to set up attribute-based constraints in database queries. The constraint consists of an Attribute, Operator, and Value to filter data displayed in widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/data-sources/database-source.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\nAttribute [Operator] Value\n```\n\n----------------------------------------\n\nTITLE: Merging ONNX Preprocessor with ResNet Model\nDESCRIPTION: Demonstrates how to combine a preprocessor ONNX model with a ResNet model using ONNX's merge_models functionality. The code loads both models, merges them using an IO mapping, and saves the combined result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n    preporcessor = onnx.load('preprocessor.onnx')\n    resnet = onnx.load('resnet50-v1-12-int8.onnx')\n    \n    combined_model = onnx.compose.merge_models(\n        preporcessor, resnet,\n        io_map=[('Y', 'data')]\n    )\n    \n    onnx.save(combined_model, 'combined_resnet.onnx')\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Executions with Mendix Runtime\nDESCRIPTION: This code snippet represents a JSON request to retrieve current execution actions known by the Mendix Runtime, including microflows, Java actions, and web service calls. No specific dependencies are mentioned, but Mendix Runtime's admin handler must be configured to listen on a specified port. The request requires setting specific headers for authentication. The response details execution duration, type, user, and an action stack for each request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_current_runtime_requests\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Pushing a New Update with Native Builder CLI\nDESCRIPTION: Builds and pushes a new update for a specified app using Native Builder CLI. This command builds the project, packages it as a new update, and releases it to all users as mandatory. Requires specifying the project name, target version, build number, rollout percentage, and mandatory flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\nnative-builder.exe release push-update --project-name \"CoolApp\" --target-version \"1.0.0\" --build-number 1 --rollout-percentage 100 --mandatory\n```\n\n----------------------------------------\n\nTITLE: Importing External Library with JavaScript\nDESCRIPTION: This snippet demonstrates how to import an external library, specifically pdf-lib, within a Mendix JavaScript action. It highlights the required dependencies and setup steps, including using npm to install the library.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the project.\nimport { Big } from \"big.js\";\nimport { PDFDocument } from \"pdf-lib\";\n\n// BEGIN EXTRA CODE\n\n```\n\n----------------------------------------\n\nTITLE: Searching GitHub Users with Dynamic Entity Type\nDESCRIPTION: This JavaScript action searches for users on GitHub using the GitHub API. It takes a search query and a user entity as input and returns a list of Mendix objects based on the GitHub API response. The action dynamically sets attributes of the Mendix objects based on the entity provided, making it more flexible and reusable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n/**\nSearching users on GitHub.com, it could find users via various criteria. This action returns up to 100 results.\n@param {string} query - The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub.\n@param {string} userEntity - The entity to match the Return type Entity\n@returns {MxObject[]}\n*/\nfunction SearchGitHubUsers(query, userEntity) {\n    // BEGIN USER CODE\n    // Documentation: https://developer.github.com/v3/search/#search-users\n    // Will return JSON structure\n    // {\n    //   \"total_count\": 82531,\n    //   \"incomplete_results\": false,\n    //   \"items\": [\n    //      {\n    //        \"login\": \"mojombo\",\n    //        \"avatar_url: \"http://...\"\n    //      }\n    //    ]\n    //  }\n    if (!query) {\n        return [];\n    }\n    var url = \"https://api.github.com/search/users?q=\" + query;\n    return fetch(url) // Fetch returns a promise, gets the URL and wait for results\n        .then(function(response) { return response.json() }) // Transform response to JSON\n        .then(function(jsonData) { // Handle the JSON\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Hours in Java\nDESCRIPTION: This function trims a date to hours by rounding off all minutes to zero. It uses the user's time zone. The function takes a Date and time input and returns the same date rounded down to hours.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ntrimToHours($myDate)\n```\n\nLANGUAGE: java\nCODE:\n```\n'Sun Jun 08 10:00:00 CEST 2008'\n```\n\n----------------------------------------\n\nTITLE: Define Admin User Role IAM Policy for Managing Roles and S3 Access\nDESCRIPTION: This JSON snippet defines an IAM policy for an admin user role. It grants permissions to attach and detach specific policies, manage IAM roles, perform file cleanup operations on an S3 bucket (optional), and create RDS tenants (optional). The policy includes conditions to restrict the attach/detach policy actions to a specific policy ARN and limits role management to roles with the `mendix-*` prefix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"LimitedAttachmentPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:AttachRolePolicy\",\n                \"iam:DetachRolePolicy\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"ArnEquals\": {\n                    \"iam:PolicyArn\": [\n                        \"<policy_arn>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"ManageRoles\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateRole\",\n                \"iam:TagRole\",\n                \"iam:DeleteRole\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:role/mendix-*\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowFileCleanup\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\",\n                \"s3:ListBucket\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowCreateRDSTenants\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"rds-db:connect\"\n            ],\n            \"Resource\": [\n                \"arn:aws:rds-db:<aws_region>:<account_id>:dbuser:<database_id>/<database_user>\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Counting All Product Rows\nDESCRIPTION: Uses COUNT(*) to count the total number of rows in the Sales.Product entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(*) AS ProductCount FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using month-from-dateTime in Local Time Zone\nDESCRIPTION: Example query that returns all logs where the month value of DateAttribute is 12 (December) in the local time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[month-from-dateTime(DateAttribute) = 12]\n```\n\n----------------------------------------\n\nTITLE: Creating File Document Entity with System.FileDocument Inheritance\nDESCRIPTION: Shows how to create a MyDocument entity that inherits from System.FileDocument to handle file operations in Mendix. This enables using standard file management widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/working-with-images-and-files.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nEntity: MyDocument\nGeneralization: System.FileDocument\n```\n\n----------------------------------------\n\nTITLE: Editability Section Link\nDESCRIPTION: Links to the editability section of the text area properties documentation, explaining how to configure the editing capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Styling Toggle Buttons Widget Structure in XML\nDESCRIPTION: XML structure for styling toggle buttons widget with standard, active, and disabled states, including container, button, text and validation elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_29\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<button><text>Standard</text></button>\n\t<activeButton><activeButtonText>Sattelite</activeButtonText></activeButton>\n\t<button><text>Hybrid</text></button>\n\t<validationMessage/>\n</container>\n\n<containerDisabled>\n\t<button><text>Standard</text></button>\n\t<activeButton><activeButtonText>Sattelite</activeButtonText></activeButton>\n\t<button><text>Hybrid</text></button>\n\t<validationMessage/>\n</containerDisabled>\n```\n\n----------------------------------------\n\nTITLE: Calculating End of Month in Java\nDESCRIPTION: The `endOfMonth` function calculates the end of the month for the specified initial date. It returns a Date and time value representing the end of that month.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nendOfMonth(dateTime(2007, 2, 7, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: List View Data Source Configuration Error Handling\nDESCRIPTION: Describes potential consistency errors when configuring list view data sources in Mendix, including scenarios with database, microflow, and nanoflow data sources\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Error Code | Message in the Error Pane | Cause of the Error | Way to Fix |\n| ---------- | ------------------------- | ------------------ | ---------- |\n```\n\n----------------------------------------\n\nTITLE: Example Request for Starting Environment - Mendix API - Bash\nDESCRIPTION: This request shows the structure of a POST request to start an environment in Mendix, including the header information and a JSON body that specifies the AutoSyncDb parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps/calc/environments/Acceptance/start\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"AutoSyncDb\" :  true\n}\n```\n\n----------------------------------------\n\nTITLE: Optimizing Microflow Commits in Mendix to Enhance Performance\nDESCRIPTION: This snippet demonstrates how to improve the performance of a microflow by committing changes to entities outside a loop, thereby reducing the number of database operations. This optimization technique focuses on minimizing commit actions during iterative processes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nIf you find yourself committing data inside a loop, you can typically optimize this by making changes to your entities and storing them into a list. For example, consider this microflow:\n\n{{< figure src=\"/attachments/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580218.png\" class=\"no-border\" >}}\n\nEvery time the loop executes, an **Order** object is committed. You can optimize this by committing the entire list outside the loop after processing is completed. Simply set the **Commit** property to **No** on the **Change order** activity, then add a commit of the entire OrderList outside the loop:\n\n{{< figure src=\"/attachments/howto8/monitoring-troubleshooting/detect-and-resolve-performance-issues/18580217.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Pushing a Partial Update Rollout with Native Builder CLI\nDESCRIPTION: Pushes a new update to a subset of users to test its stability using Native Builder CLI. Specify the rollout percentage to determine what percentage of users will receive the update. Adjust `--rollout-percentage` as necessary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\n`native-builder.exe release push-update --project-name \"CoolApp\" --target-version \"1.0.0\" --build-number 1 --rollout-percentage 50 --mandatory`\n```\n\n----------------------------------------\n\nTITLE: Querying Nested Weather Forecast Data from Snowflake in SQL\nDESCRIPTION: This SQL query retrieves nested weather forecast data from Snowflake, including location information and temperature forecasts. It uses Common Table Expressions (CTEs) and JSON functions to structure the data, returning a single JSON string containing forecast information for multiple postal code areas.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-edc.md#2025-04-21_snippet_5\n\nLANGUAGE: SQL\nCODE:\n```\nwith ftoday as (\n    select fd.postal_code as zipcode\n    ,      fd.country as country\n    ,      fd.DATE_VALID_STD as forecast_date\n    ,      round((fd.AVG_TEMPERATURE_AIR_2M_F -32) * (5/9),1) as avg_temp_c\n    ,      round((fd.MIN_TEMPERATURE_AIR_2M_F -32) * (5/9),1) as min_temp_c\n    ,      round((fd.MAX_TEMPERATURE_AIR_2M_F -32) * (5/9),1) as max_temp_c\n    from   STANDARD_TILE.FORECAST_DAY fd\n    where  fd.DATE_VALID_STD = current_date\n), ztoday as (\n    select f.zipcode || '-' || f.country as id\n    ,      f.zipcode, f.country\n    ,      object_construct(\n                'ForecastId', f.zipcode || '-' || f.country || '-' || f.forecast_date\n               ,'Date',f.forecast_date\n               ,'AvgTempCelcius',f.avg_temp_c\n               ,'MinTempCelcius',f.min_temp_c\n               ,'MaxTempCelcius',f.max_temp_c\n           ) as forecast\n    from   ftoday f\n    order by 1,2\n)\nselect array_agg(object_construct('LocationId',zt.id,'ZipCode',zt.zipcode,'Country',zt.country,'Forecast',zt.forecast)) as today_forecast_json\nfrom   ztoday as zt\n```\n\n----------------------------------------\n\nTITLE: Querying Order-Customer Association in SQL\nDESCRIPTION: This SQL snippet demonstrates the structure of the 'module$order_customer' junction table, which represents the association between Order and Customer entities. It contains foreign key references to both entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n| module$orderid | module$customerid |\n| --- | --- |\n| 8 | 1 |\n| 5 | 3 |\n```\n\n----------------------------------------\n\nTITLE: Sample Script - Set Log Level for Mendix App - PowerShell\nDESCRIPTION: This script sets the log level for a log subscriber defined in the app's Settings.yaml configuration file. It updates the log level for all log nodes at once.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_9\n\nLANGUAGE: PowerShell\nCODE:\n```\n$appName = 'Name of Mendix app'\n$subscriberName = 'Log subscriber name of the app'\n$level = 'Log level which needs to be assigned'\n\n# Set log level for all nodes of a log subscriber at once\nSet-MxLogLevel $appName -SubscriberName $subscriberName -Level $level\n```\n\n----------------------------------------\n\nTITLE: DateTime Comparison in DataGrid\nDESCRIPTION: XPath constraint expression for comparing DateTime attributes with current time\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/date-and-time-handling/datetime-handling-faq.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix-xpath\nCODE:\n```\n[LocalDateAttr > [%CurrentDateTime%]\n```\n\n----------------------------------------\n\nTITLE: Attribute Comparison Query\nDESCRIPTION: Query comparing two attributes (Name and City) of the same entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = City]\n```\n\n----------------------------------------\n\nTITLE: Configuring Paging Support in Microflow Data Source\nDESCRIPTION: This snippet explains how to modify the 'Call_REST' microflow to support server-side paging by adjusting the REST service URL to include pagination parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **CallREST** microflow.\n2. Double-click the **Call REST service** activity.\n3. Click **Location** > **Edit**.\n4. Change **Template** to `https://my-json-server.typicode.com/mendix/howto-api-data/airports?_limit=5&_page={1}`:\n5. Click **Parameters** > **New** for a new parameter and enter the following expression `toString($Paging/PageNumber)` for this parameter:\n6. Click **OK** to accept this expression.\n7. Click **OK** to accept the changes for the location, and click **OK** once more to accept the changes for the **Call REST service** activity.\n```\n\n----------------------------------------\n\nTITLE: Executing a Scheduled Event on a Specific Day in Java\nDESCRIPTION: The following Java snippets provide methods to run specific schedule events on certain days. The first snippet ensures a scheduled event executes on the 15th of every month using formatDateTime and parseInteger functions. The second snippet determines if the event should run on the last day of a given month. Both snippets assume a configured CurrentDateTime and EndOfCurrentMonth.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/scheduled-events/scheduled-events-legacy.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nparseInteger( formatDateTime( [%CurrentDateTime%], 'dd') ) = 15\n// This runs the scheduled event on the 15th of the month\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime([%CurrentDateTime%], 'dd') = formatDateTime([%EndOfCurrentMonth%], 'dd')\n```\n\n----------------------------------------\n\nTITLE: Using replaceFirst() Function in Mendix Expressions\nDESCRIPTION: The replaceFirst() function replaces the first occurrence of a regular expression with a replacement string. It returns the original string with the first match replaced, or the original string if no match is found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nreplaceFirst('this is a string with 75 some numbers 234 thrown in', '([0-9])', 'NUMBER')\n```\n\n----------------------------------------\n\nTITLE: Commenting in Markdown Using Shortcodes\nDESCRIPTION: This snippet details two methods for adding comments in Markdown. The first method uses a specific link format, while the second employs a shortcode to incorporate development notes visibly in logs but hidden from the final output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n1. With empty Markdown relative link\n\n    ```text\n    [//]: # \"my comment here\"\n\n    OR\n\n    [//]: # (my other comment here)\n    ```\n\n1. Use todo shortcode, which will output the comment into the Travis log:\n\n    ```text\n    {{%/* todo */%}}[ToDo comment text, only visible in development]{{%/* /todo */%}}\n    ```\n```\n\n----------------------------------------\n\nTITLE: Adding Image Uploader Button in Mendix Page\nDESCRIPTION: Creates a button to open a pop-up page for attaching images, configured with specific properties for user interaction\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/image-and-file-widgets/attach-images.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Page Configuration\nCODE:\n```\nButton Properties:\n- Caption: \"Attach Images\"\n- Icon: picture glyph\n- Button Style: Success\n- On Click: Open Receipt_NewEdit Popup Page\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint Example for Drop-down Search\nDESCRIPTION: An example of XPath constraint syntax for filtering shop options in a drop-down search field based on country.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/search-bar.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[MyWebshop.Bicycle_Shop/MyWebshop.Shop/Country='Netherlands']\n```\n\n----------------------------------------\n\nTITLE: Defining Collapsible Property in GroupBox Widget - XML\nDESCRIPTION: This XML snippet defines a 'collapsible' property in a Mendix widget configuration, enabling developers to set whether the group box should be collapsible and its initial state. The 'collapsible' property supports three enumeration values: no, yes (start expanded), and yes (start collapsed).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_38\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <propertyGroup caption=\"General\">\n                <property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                </property>\n                <property key=\"collapsible\" type=\"enumeration\" defaultValue=\"no\">\n                    <caption>Collapsible</caption>\n                    <description />\n                    <enumerationValues>\n                        <enumerationValue key=\"no\">No</enumerationValue>\n                        <enumerationValue key=\"yesStartExpanded\">Yes (start expanded)</enumerationValue>\n                        <enumerationValue key=\"yesStartCollapsed\">Yes (start collapsed)</enumerationValue>\n                    </enumerationValues>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Header\">\n                <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                    <caption>Caption</caption>\n                    <description />\n                </property>\n                <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                    <caption>Expand icon</caption>\n                    <description>Icon used to indicate that the group box can be expanded.</description>\n                </property>\n                <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                    <caption>Collapse icon</caption>\n                    <description>Icon used to indicate that the group box can be collapsed.</description>\n                </property>\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Generating App Bundles Only\nDESCRIPTION: Command to run only the MxBuild step, skipping GitHub configuration and App Center build steps. Outputs ZIP archives with JavaScript bundles and resources for each platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe bundle --project-name \"CoolApp\" --output-path \"C:\\bundles\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Objects with OData $filter\nDESCRIPTION: Illustrates how to filter objects using the $filter query option. This example filters employees by name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_5\n\nLANGUAGE: OData\nCODE:\n```\n/Employees?$filter=Name eq 'John'\n```\n\n----------------------------------------\n\nTITLE: Git Global User Configuration\nDESCRIPTION: Commands to set up global Git user name and email configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: git\nCODE:\n```\ngit config --global user.name \"<Name>\"\ngit config --global user.email \"<Email>\"\n```\n\n----------------------------------------\n\nTITLE: Querying with NULL Keyword in Studio Pro\nDESCRIPTION: This XPath query retrieves all customer objects where the 'Name' attribute is NULL (empty). It is used to find customers with an unknown name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[Name = NULL]\n```\n\n----------------------------------------\n\nTITLE: Building the Widget with NPM\nDESCRIPTION: This command is utilized to build the widget after making changes, ensuring the widget initializes correctly within the Mendix environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single Package via HTTP GET\nDESCRIPTION: Retrieves details for a specific deployment package by ID. Optional URL parameter to receive download URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nGET /api/1/apps/calc/packages/b3d14e53-2654-4534-b374-9179a69ef3cf?url=true HTTP/1.1\nHost: deploy.mendix.com\nAccept: */*\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Running the Widget Development Environment with NPM\nDESCRIPTION: Command to start the development environment that bundles the widget and watches for changes in source files. This allows for real-time updates in the Mendix test app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Getting Security Group Members API Endpoint\nDESCRIPTION: HTTP endpoint for retrieving all users that are members of a specific security group. The endpoint supports pagination and basic filtering options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nHTTP Method: GET\nURL: https://usermanagement.mendix.com/legacy-api/1/groups/<securityGroupUuid>/users\n```\n\n----------------------------------------\n\nTITLE: REST Query Parameter Example\nDESCRIPTION: Example showing the query parameter format in a REST URL using name and age parameters. Parameters follow a question mark and use name-value pairs separated by ampersands.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-query-parameters.md#2025-04-21_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n?name=John&age=42\n```\n\n----------------------------------------\n\nTITLE: Defining Image Property in XML for Mendix Pluggable Widgets\nDESCRIPTION: XML configuration for defining an image property in a pluggable widget. This allows users to configure a static image from an image collection or from a System.Image object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"bgImage\" type=\"image\" required=\"false\">\n\t<caption>Background Image</caption>\n\t<description>Image shown blurred in a background</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Updating Component Import Path in Container Component\nDESCRIPTION: Updates the import statement in the container component to reference the renamed GroupBox component and use an alias to avoid naming conflicts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nimport { HelloWorldSample } from \"./components/HelloWorldSample\";\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { GroupBox as WrappedGroupBox } from \"./components/GroupBox\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Margins in JSON\nDESCRIPTION: Sets the margin values around the chart area to adjust spacing and layout. Allows for control over left, right, bottom, top margins and padding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"margin\": {\n    \"l\": 70,\n    \"r\": 60,\n    \"b\": 60,\n    \"t\": 60,\n    \"pad\": 10,\n    \"autoexpand\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Content Property in XML\nDESCRIPTION: This XML snippet defines a `content` property of type `widgets` within the GroupBox widget's properties. This allows Mendix developers to drag and drop other widgets into the GroupBox widget in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\">\n    <caption>Content</caption>\n    <description>Widgets to place inside.</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Adding Property Groups to GroupBox XML\nDESCRIPTION: This XML snippet organizes the properties of the Mendix GroupBox widget into logical groups (General and Header). This improves the readability and organization of the widget's properties within the Mendix Studio Pro properties window.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_26\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <propertyGroup caption=\"General\">\n                <property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Header\">\n                <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                    <caption>Caption</caption>\n                    <description />\n                </property>\n                <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                    <caption>Expand icon</caption>\n                    <description>Icon used to indicate that the group box can be expanded.</description>\n                </property>\n                <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                    <caption>Collapse icon</caption>\n                    <description>Icon used to indicate that the group box can be collapsed.</description>\n                </property>\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n</widget>\n\n```\n\n----------------------------------------\n\nTITLE: Using getCaption Function with Enumerations in Java\nDESCRIPTION: Demonstrates the usage of the getCaption function to retrieve the caption of an enumeration value. The function returns a translatable string based on the current language.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ngetCaption($Customer/Grade)\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Date Registration Filter\nDESCRIPTION: Query that filters customers who registered since the beginning of the current week\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[DateRegistered >= '[%BeginOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Using Column Alias for Customer Name in OQL\nDESCRIPTION: Example of renaming the Name attribute to CustomerName in the result set using the AS keyword.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer.Name AS CustomerName FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Image Property\nDESCRIPTION: Defines the TypeScript types for the Image property in pluggable widgets, supporting both static images with URLs and dynamic images linked to entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype StaticImage = { type: \"static\"; imageUrl: string; };\ntype DynamicImage = { type: \"dynamic\"; entity: string; };\n\ntype ImageProperty = null | StaticImage | DynamicImage;\n```\n\n----------------------------------------\n\nTITLE: Disabling Database Disk Storage Metric\nDESCRIPTION: This snippet demonstrates how to disable the metric for database disk storage size using the `DATADOG_DATABASE_DISKSTORAGE_METRIC` custom environment variable. By setting its value to `false`, the metric will not be sent to Datadog. By default, this variable is set to `true`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/datadog-metrics.md#2025-04-21_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n`DATADOG_DATABASE_DISKSTORAGE_METRIC` custom environment variable and set its value to `false`\n```\n\n----------------------------------------\n\nTITLE: Querying Product and Category Data with SQL in Mendix View Entity\nDESCRIPTION: This SQL query selects product information and its related category data from the Shop domain model. It's used to populate a view entity that consolidates data from multiple entities, making it suitable for API exposure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/decoupling-apis.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  p.ProductId as ProductId\n  , p.ProductName as ProductName\n  , p.QuantityPerUnit as QuantityPerUnit\n  , p.Discontinued as Discontinued\n  , c.CategoryName as Category\n  , c.CategoryId as CategoryId\nFROM Shop.Product as p\n  JOIN p/Shop.Product_Category/Shop.Category as c\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Proxy Settings in gradle.properties\nDESCRIPTION: This snippet shows how to configure HTTP and HTTPS proxy settings in the `gradle.properties` file for Gradle. It requires replacing placeholder values for proxy host IP, port, username, and password with the actual values. It helps Gradle to download dependencies through the specified proxy server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/managed-dependencies.md#2025-04-21_snippet_2\n\nLANGUAGE: txt\nCODE:\n```\n\"systemProp.http.proxyHost=proxy-host-ip\nsystemProp.http.proxyPort=proxy-port\nsystemProp.http.proxyUser=userid\nsystemProp.http.proxyPassword=password\nsystemProp.https.proxyHost=proxy-host-ip\nsystemProp.https.proxyPort=proxy-port\nsystemProp.https.proxyUser=userid\nsystemProp.https.proxyPassword=password \"\n```\n\n----------------------------------------\n\nTITLE: Granting IAM Role for PostgreSQL User\nDESCRIPTION: This shell command grants the 'rds_iam' role to a specified PostgreSQL user. This command is essential for allowing IAM-based authentication for accessing an RDS database instance, enhancing security by eliminating static passwords.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nGRANT rds_iam TO db_userx;\n```\n\n----------------------------------------\n\nTITLE: Updating iOS Entitlements File for Siri Permission\nDESCRIPTION: This XML snippet demonstrates how to update the iOS entitlements file to enable Siri functionality for your app. By adding the `com.apple.developer.siri` key with a value of `true`, you grant your application permission to use Siri services. This is required if you're requesting Siri access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/generic-permission-action.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE plist PUBLIC \\\"-//Apple//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n<plist version=\\\"1.0\\\">\\n<dict>\\n\t\t<!-- … -->\\n\t\t<key>com.apple.developer.siri</key>\\n\t\t<true/>\\n\t</dict>\\n</plist>\"\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Hours Example\nDESCRIPTION: Shows the output of subtracting 1 hour from January 1, 2007, 01:01:01. The result is January 1, 2007, 00:01:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 00:01:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Creating Model Elements - New Convenient Factory Method\nDESCRIPTION: Modern approach for creating model elements using convenience factory methods that automatically register elements with their parent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/model-sdk/model-sdk-1.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nfunction newEntity(domainModel: domainmodels.DomainModel, name: string) {\n\tvar entity = domainmodels.Entity.createIn(domainModel);\n\tentity.name = name;\n\n\treturn entity;\n}\n```\n\n----------------------------------------\n\nTITLE: Example: In-place Project Conversion\nDESCRIPTION: Example command showing how to convert a Mendix app in its current directory to a specific Studio Pro version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mx-command-line-tool.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmx convert --in-place C:\\MxProjects\\App-main\n```\n\n----------------------------------------\n\nTITLE: Initializing Wikipedia REST API Endpoint in Mendix Microflow\nDESCRIPTION: Sets up the REST service endpoint URL with a parameter for the Wikipedia page title. This is used in the Call REST service activity in a Mendix microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/use-call-rest-action-in-microflow.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nhttps://en.wikipedia.org/api/rest_v1/page/summary/{1}\n```\n\n----------------------------------------\n\nTITLE: Editing Mendix App Resources in OpenShift\nDESCRIPTION: Command to edit a MendixApp custom resource in OpenShift to modify environment settings like memory requests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} edit mendixapp {environmentInternalId}\n```\n\n----------------------------------------\n\nTITLE: Configuring Object Retrieval in Export Mapping (XML)\nDESCRIPTION: XML snippet showing the structure of an export mapping with two entities (Cheesecake and Topping) mapped to corresponding schema elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/mapping-documents/export-mappings.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<export-mapping>\n  <entity name=\"Cheesecake\">\n    <element name=\"Cheesecake\">\n      <entity name=\"Topping\">\n        <element name=\"Topping\" />\n      </entity>\n    </element>\n  </entity>\n</export-mapping>\n```\n\n----------------------------------------\n\nTITLE: Checking Runtime Status in Mendix\nDESCRIPTION: API endpoint that returns the current status of the Mendix Runtime (created, starting, broken, running, stopping, stopped).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"runtime_status\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Adding Property Groups to GroupBox XML Schema\nDESCRIPTION: Enhanced XML configuration that organizes properties into logical groups, improving the user interface in Mendix Studio Pro. This separates general widget properties from header-specific properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_31\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <propertyGroup caption=\"General\">\n                <property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Header\">\n                <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                    <caption>Caption</caption>\n                    <description />\n                </property>\n                <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                    <caption>Expand icon</caption>\n                    <description>Icon used to indicate that the group box can be expanded.</description>\n                </property>\n                <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                    <caption>Collapse icon</caption>\n                    <description>Icon used to indicate that the group box can be collapsed.</description>\n                </property>\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Granting Secret Accessor Role using gcloud CLI\nDESCRIPTION: This snippet details how to grant the Secret Manager Secret Accessor role to allow the Mendix app to access secrets created in Google Secret Manager. It defines the principal format for Google Cloud IAM roles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_28\n\nLANGUAGE: shell\nCODE:\n```\nNAMESPACE=<{Kubernetes namespace}>\nENVIRONMENT_NAME=<{Mendix App CR name}>\nPROJECT_ID=<{Project ID}>\nPROJECT_NUMBER=<{Project number}>\n# Example: grant access ENVIRONMENT_NAME in NAMESPACE permissions to access its database-type secret\ngcloud secrets add-iam-policy-binding ${NAMESPACE}-${ENVIRONMENT_NAME}-database-type --role=roles/secretmanager.secretAccessor\\\n--member=principal://iam.googleapis.com/projects/${PROJECT_NUMBER}/locations/global/workloadIdentityPools/${PROJECT_ID}.svc.id.goog/subject/ns/${NAMESPACE}/sa/${ENVIRONMENT_NAME}\n```\n\n----------------------------------------\n\nTITLE: Custom Validation Expression in Mendix\nDESCRIPTION: Demonstrates how to write custom validation expressions for widget validation using Microflow expression syntax. Variables like $currentObject and $value can be used to access the current context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/common-widget-properties.md#2025-04-21_snippet_2\n\nLANGUAGE: expression\nCODE:\n```\n$currentObject\n$value\n$dataView1\n```\n\n----------------------------------------\n\nTITLE: Adding Permissions Usage Descriptions for iOS\nDESCRIPTION: This snippet outlines how to add usage descriptions for various permissions in the Info.plist file for an iOS application. Each key details the reason for requesting the specific permission, ensuring compliance with App Store guidelines.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/generic-permission-action.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE plist PUBLIC \\\"-//Apple//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n<plist version=\\\"1.0\\\">\\n<dict>\\n  <!-- 🚨 Keep only the permissions specified in setup_permissions 🚨 -->\\n  <key>NSAppleMusicUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSBluetoothAlwaysUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSBluetoothPeripheralUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSCalendarsFullAccessUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSCalendarsWriteOnlyAccessUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSCameraUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSContactsUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSFaceIDUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSLocationAlwaysAndWhenInUseUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSLocationTemporaryUsageDescriptionDictionary</key>\\n  <dict>\\n    <key>YOUR-PURPOSE-KEY</key>\\n    <string>[REASON]</string>\\n  </dict>\\n  <key>NSLocationWhenInUseUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSMicrophoneUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSMotionUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSPhotoLibraryUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSPhotoLibraryAddUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSRemindersFullAccessUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSSpeechRecognitionUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSSiriUsageDescription</key>\\n  <string>[REASON]</string>\\n  <key>NSUserTrackingUsageDescription</key>\\n  <string>[REASON]</string>\\n</dict>\\n</plist>\"\n```\n\n----------------------------------------\n\nTITLE: Using ROUND Function in OQL\nDESCRIPTION: The ROUND function is used to round a numeric expression to a specified number of decimal places. It takes two parameters: the numeric expression to be rounded and the number of decimal places to round to.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-round.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nROUND ( numeric_expression , length )\n```\n\n----------------------------------------\n\nTITLE: Calculating Selling Price with Mendix Expression\nDESCRIPTION: This snippet demonstrates how to calculate the selling price based on the default price and discount attributes using arithmetic functions in a Mendix expression. It shows how to combine subtraction, division, and multiplication. The brackets are used to define the priority of calculations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"$CurrentPrice/Price - (($CurrentPrice/Price **div** 100) * $OrderLine/Discount)\"\n```\n\n----------------------------------------\n\nTITLE: Activating a License on Cloud Foundry - Bash\nDESCRIPTION: This code snippet demonstrates how to set environment variables for license activation on an app running in Cloud Foundry using the license credentials provided by Mendix Support. After setting these variables, the app must be restarted for the changes to take effect.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/licensing-apps-outside-mxcloud.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncf set-env <YOUR_APP> LICENSE_ID <LicenseId>\ncf set-env <YOUR_APP> LICENSE_KEY <LicenseKey>\n```\n\n----------------------------------------\n\nTITLE: Configuring SOAP Call HTTP Headers in Mendix\nDESCRIPTION: Sets up the HTTP headers for a SOAP call using the SAP Destination Service. These headers are identical to the REST call headers, authenticating the app and user, specifying the SSC location, and requesting JSON response format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/sap-btp/sap-destination-with-rest.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nSAP-Connectivity-Authentication: $DestinationObject/SapConnectivityAuthentication\nSAP-Connectivity-SCC-Location_ID: $DestinationObject/SapConnectivitySccLocationId\nProxy-Authorization: 'Bearer ' + $DestinationObject/SapConnectivityProxyCredentials\nAccept: 'application/json'\n```\n\n----------------------------------------\n\nTITLE: Determining String Length\nDESCRIPTION: Calculates the total number of characters in a given string, returning an integer representing the string's length.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nlength('thisismystring')\n```\n\n----------------------------------------\n\nTITLE: Creating Date with dateTime function and two parameters\nDESCRIPTION: This snippet demonstrates how to create a date using the `dateTime` function with year and month parameters. The `dateTime` function utilizes the session's calendar, whereas `dateTimeUTC` uses UTC. It returns a date object with the year set to 2007, the month set to January, and the time set to the default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 00:00:00 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Single Branch Endpoint Request\nDESCRIPTION: HTTP GET request for retrieving information about a specific branch, showing proper URL encoding for branch names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/repositories/c0af1725-edae-4345-aea7-2f94f7760e33/branches/trunk HTTP/1.1\nHost: repository.api.mendix.com\nAccept: */*\nAuthorization: MxToken hZUPhAV4ELPrRm7U7JAKf5BnxJk6q7dcsvFdw6ZR4wRYdv7egHjwHEYBwXY4RkSZrAWde3XqVAQkxZNPysvHcpquA9sK9bsKmcTN\n```\n\n----------------------------------------\n\nTITLE: Java XPath Query for Customer Name Filtering\nDESCRIPTION: Java-based XPath query to retrieve Sales.Customer entities where the Name attribute starts with 'Jans', using the starts-with() function\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-starts-with.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n//Sales.Customer[starts-with(Name, 'Jans')]\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes with Asterisk Wildcard\nDESCRIPTION: Demonstrates retrieving all attributes from an entity using the * (asterisk) wildcard in the SELECT clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Styling Ratings Widget in JavaScript\nDESCRIPTION: Defines the style properties for the Ratings widget, enabling customization of the container, disabled container, and icon. The icon can be styled for size, color, and selected color.  The default class to style all rating inputs is named `com_mendix_widget_native_rating_Rating`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_rating_Rating = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  containerDisabled: {\n    // This has all ViewStyle properties.\n  },\n  icon: {\n    // This has all ViewStyle properties.\n    size: null, // The size of the icon.\n    color: null, // The color of the icon.\n    selectedColor: null, // The color of the icon when selected.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Menu Items for Dockable Pane in TypeScript\nDESCRIPTION: Code snippet showing how to add a menu item for opening the dockable pane. This adds a new submenu to the existing extensionsMenu.add() method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Add a menu item to the Extensions menu\nawait studioPro.ui.extensionsMenu.add({\n  menuId: \"myextension.MainMenu\",\n  caption: \"MyExtension Menu\",\n  subMenus: [\n    { menuId: \"myextension.ShowTabMenuItem\", caption: \"Show tab\" },\n    { menuId: \"myextension.ShowDockMenuItem\", caption: \"Show dock pane\" },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Addition with Negative Numbers in Java\nDESCRIPTION: Addition operation involving a negative number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n-3 + 4\n```\n\n----------------------------------------\n\nTITLE: SQL Select Statement for ExampleObject Mapping\nDESCRIPTION: SQL query that demonstrates how to map Snowflake table columns to Mendix ExampleObject attributes by using column aliases. This ensures proper data type matching and ordering for the TransformResponsesToMxObjects activity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-rest-sql.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \n     column1 as ATTR_TXT,\n     column2 as ATTR_INT,\n     column3 as ATTR_LONG,\n     column4 as ATTR_BOOL,\n     column5 as ATTR_DECI,\n     column6 as ATTR_ENUM\nFROM your_table\n```\n\n----------------------------------------\n\nTITLE: Enabling Native Metrics Mode in MendixApp CR\nDESCRIPTION: This YAML snippet enables native metrics mode in a MendixApp CR by setting the `mode` to `native`. It also includes optional settings for the Prometheus scrape interval and the MxAgent configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  # Existing configuration\n  # ...\n  # Metrics configuration\n  runtimeMetricsConfiguration:\n    # Set mode to native\n    mode: native\n    # Optional: set the scrape interval\n    interval: \"PT1M\"\n    # Optional: set the agent config\n    mxAgentConfig: |-\n      {\n        …\n      }\n    # Optional: set the agent instrumentation config\n    mxAgentInstrumentationConfig: |-\n      {\n        …\n      }\n  # …\n```\n\n----------------------------------------\n\nTITLE: Basic Chart Layout Configuration in JSON\nDESCRIPTION: Defines fundamental layout properties for charts, including font settings, title, legend visibility, hover mode, and margin configurations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"font\": {\n    // font properties\n  },\n  \"title\": \"CHART TITLE\",\n  \"titlefont\": {\n    // title font properties\n  },\n  \"hovermode\": \"closest\",\n  \"showlegend\": true,\n  \"legend\": {\n    // legend properties\n  },\n  \"hoverlabel\": {\n    // hover label properties\n  },\n  \"margin\": {\n    // margin properties\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Script - NoService Parameter - PowerShell\nDESCRIPTION: This snippet shows how to start an app as a local process instead of a service by adding the NoService argument to the Start-MxApp cmdlet. This is useful for specific development needs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_2\n\nLANGUAGE: PowerShell\nCODE:\n```\nStart-MxApp $appName -NoService -SynchronizeDatabase\n```\n\n----------------------------------------\n\nTITLE: Applying Access Policy to Table\nDESCRIPTION: SQL command to add the row access policy to the example table\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_9\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE EXAMPLE_RBAC ADD ROW ACCESS POLICY RegionRole ON (Region);\n```\n\n----------------------------------------\n\nTITLE: Implementing a Modal Web View View Model in C#\nDESCRIPTION: This code creates a view model that manages the lifecycle and messaging for a modal web view. It handles web view initialization, message receipt from the web interface, and modal dialog closing events. When receiving a message, it creates a new entity in the Mendix model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-modal-web-view.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace MyCompany.MyProject.MendixExtension;\n\nclass MyModalWebViewViewModel(\n    string title,\n    IModel currentApp,\n    IDialogService dialogService,\n    IMessageBoxService messageBoxService,\n    Uri webServerBaseUrl) : WebViewModalDialogViewModel(title)\n{\n    public override void InitWebView(IWebView webView)\n    {\n        webView.MessageReceived += Browser_MessageReceived;\n        OnClosing = HandleOnClosed;\n        webView.Address = new Uri(webServerBaseUrl + \"index\");\n    }\n    \n    void HandleOnClosed(CancelEventArgs cancelEventArgs) => messageBoxService.ShowInformation(\"Entity was created.\");\n\n    void Browser_MessageReceived(object? sender, MessageReceivedEventArgs e)\n    {\n        using var transaction = currentApp.StartTransaction(\"create entity from modal\");\n\n        var entity = currentApp.Create<IEntity>();\n        entity.Name = e.Message.Replace(\"\\\\\", \"\").Replace(\"\\\"\", \"\");\n        currentApp.Root.GetModules().First(m => m.Name == \"MyFirstModule\").DomainModel.AddEntity(entity);\n\n        transaction.Commit();\n        \n        dialogService.CloseDialog(this);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint for Write Access\nDESCRIPTION: This code snippet demonstrates an XPath constraint used to limit write access for anonymous users to only the records they created during their session. It ensures that anonymous users can only modify their own data, preventing unauthorized modification of other records.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/set-up-anonymous-user-security.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n\"[System.Owner='[%CurrentUser%]']\"\n```\n\n----------------------------------------\n\nTITLE: Selenium IDE Target Selector\nDESCRIPTION: Example of updating a Selenium IDE target selector from a dynamic ID to a stable CSS selector using Mendix's naming convention.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/testing-mendix-applications-using-selenium-ide.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\ncss=.mx-name-textBox6\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Description with Parameters in Mendix Workflow\nDESCRIPTION: Example of configuring a task description with parameters in a Mendix workflow. The image demonstrates how to use parameters to include dynamic information in the task description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-elements/user-task/task-description-example.jpg\" alt=\"Task Description Example\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: URL Prefix Configuration Restrictions\nDESCRIPTION: Validation rules for setting URL prefixes in Mendix applications, including forbidden values and alphanumeric requirements\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-explorer/app/app-settings/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nURL Prefix Restrictions:\n  - Must be alphanumeric\n  - Cannot be empty\n  - No whitespace allowed\n  - Forbidden values: ['api-doc', 'file', 'odata', ...]\n```\n\n----------------------------------------\n\nTITLE: Ambiguous Column Reference in JOIN (No Longer Allowed)\nDESCRIPTION: Example of a query with ambiguous column references that was allowed in OQL v1 but is invalid in OQL v2 because it doesn't specify which entity the 'Name' attribute belongs to.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name\nFROM Module.Person\nJOIN Module.Person/Module.Person_City/Module.City\n```\n\n----------------------------------------\n\nTITLE: Showing Checklist Items in a Table\nDESCRIPTION: This snippet details the process of displaying checklist items associated with an inspection report in a data grid within the data view. It emphasizes the importance of data associations and the setup needed to display results specific to the current report.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/configure-form.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open **Toolbox** > **Data Containers**.\n\n1. Drag **Data grid** *inside* the data view.\n\n1. Go to the data grid properties and click **Entity (path)**.\n\n1. To show only checklist items associated with the current inspection report, choose the **Checklist** entity over association (*Checklist_InspectionReport/Checklist*) in the **Select Entity** dialog box and click **Select**:\n\n1. Say **Yes** to the question *Do you want to automatically fill in the contents of the data grid?*.\n\n1. As the main purpose of the page is to display information, you do not need to search the data grid. Open data grid properties and set the **Show search bar property** to **Never**.\n\n1. To be able to add new checklist items to the report, select the **New** button in the data grid and open its properties.\n\n1. Set the **On click event** property to **Create object**.\n\n1. Set **Entity (path)** to **Checklist**.\n\n1. Click the **On click page** property.\n\n1. In the **Select web page** dialog box, click **New**.\n\n1. In the **Create Page** dialog box, set the **page name** to **Manage_Checklist** and the **Layout** to **PopupLayout**.\n\n1. Page template (*Forms*) is selected automatically for you. Choose **Forms Vertical**:\n\n1. Click **OK**.\n```\n\n----------------------------------------\n\nTITLE: Adding Enumerations in Mendix\nDESCRIPTION: This code snippet outlines how to add enumerations in Mendix for use as attribute types within entities. This allows attributes to have predefined values for selection. Dependencies include prior creation of entities where the enumerations will be applied.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/create-a-basic-data-layer.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Right-click the module and select **Add other** > **Enumeration**.\n2. Enter *OrderStatus* for the **Name** and click **OK**.\n3. Click **New** to add a new enumeration value:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582181.png\" class=\"no-border\" >}}\n\n4. Enter *Open* for the **Caption** and click **OK**.\n5. Repeat the steps above for the **Processing** and **Complete** values. You should then have the following configured values:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582179.png\" class=\"no-border\" >}}\n\n    Click **OK** to save the enumeration. Now we will create an enumeration value-based attribute in the **Order** entity.\n6. Right-click the **Order** entity and select **Add** > **Attribute**.\n7. Enter *OrderStatus* for the **Name** and select **Enumeration** for the **Type**.\n8. Select the **OrderStatus** enumeration and click **Select**.\n9. Select **Open** for **Default value**:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582197.png\" class=\"no-border\" >}}\n\n10. Click **OK** to save the new attribute. The **Order** entity should look like this:\n\n    {{< figure src=\"/attachments/howto8/data-models/create-a-basic-data-layer/18582176.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Legend Position Configuration - Right (JSON)\nDESCRIPTION: This snippet configures the chart legend to be displayed on the right side. By setting `showlegend` to true, the legend is enabled. This is a basic configuration that can be further customized with additional properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": true,\n}\n```\n\n----------------------------------------\n\nTITLE: Using Change Variable in Mendix with Variable Properties\nDESCRIPTION: This code snippet demonstrates the structure of a Change Variable activity in Mendix, showing both the activity dialog and its properties pane. It includes settings for selecting the variable to change and defining its new value through an expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/variable-activities/change-variable.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide8/modeling/application-logic/activities/variable-activities/change-variable/change-variable.png\" alt=\"Change Variable\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: DynamicImageViewer Property Update\nDESCRIPTION: Modifies the default value for the `showAsThumbnail` property in the DynamicImageViewer element\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-9/metamodel-9.5.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# DynamicImageViewer Configuration\nshowAsThumbnail: # Default value changed\n```\n\n----------------------------------------\n\nTITLE: Defining Header Caption Property in XML\nDESCRIPTION: This XML snippet defines a property named `headerCaption` for the GroupBox widget. The `type` is set to `string`, it is not `required`, and includes a caption and description for use in the Mendix Studio Pro property pane.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"headerCaption\" type=\"string\" required=\"false\">\n    <caption>Header caption</caption>\n    <description />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Adding iOS Entitlements\nDESCRIPTION: Command to add entitlements to an iOS app configuration. Supports adding notification and NFC capabilities to the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe config ios add-entitlements --project-name \"CoolApp\" --entitlements notification nfc\n```\n\n----------------------------------------\n\nTITLE: Using 'not' Operator in Java\nDESCRIPTION: This snippet illustrates the 'not' operator, which negates a Boolean expression in Java. It inverts the result of a Boolean statement. No dependencies are required for this operation. The key input is a single Boolean expression evaluated to either true or false, with the output as its logical negation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nnot('hello' = 'hallo')\n```\n\nLANGUAGE: java\nCODE:\n```\nnot(true)\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding PCLM Service in Kubernetes\nDESCRIPTION: Command to set up port forwarding from localhost to the PCLM service in Kubernetes, allowing access to the PCLM server at http://localhost:8080.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward -n <namespace> svc/<service name> 8080:8080\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Tags Example Output in JSON\nDESCRIPTION: Example response output for retrieving tags from a Mendix environment. The response includes all tags associated with the environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_32\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Tag\": \"A\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Operator Licenses in PCLM\nDESCRIPTION: Command to list all Mendix Operator licenses installed in the PCLM server, showing license IDs, type, expiration date, creation date, and product type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli license operator list \\\n   -s <pclm-http-url> \\\n   -u <admin-user> \\\n   -p <admin-password> \\\n   -t <custom-ca-cert-path>\n```\n\n----------------------------------------\n\nTITLE: Configuring a Before Commit Event Handler in Mendix 8\nDESCRIPTION: This snippet shows how to add a Before Commit event handler to a Customer entity that calls a microflow to validate the postcode before the object is committed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/entities/event-handlers.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/refguide8/modeling/domain-model/entities/event-handlers/customer-event-handlers.png\" alt=\"Example of adding a before commit event handler to the Customer entity\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Conditional Content Render Method\nDESCRIPTION: Method to conditionally render content based on collapsed state\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_24\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderContent = (): ReactNode => {\n        if (this.state.collapsed || Children.count(this.props.children) === 0) {\n            return null;\n        }\n\n        return <View style={this.styles.content}>{this.props.children}</View>;\n    };\n```\n\n----------------------------------------\n\nTITLE: Modifying settings.json for PhoneGap\nDESCRIPTION: This JSON snippet shows the structure of the `settings.json` file used within a PhoneGap application. It configures the application's URL to point to a specific IP address and port, typically the developer's local machine, which allows debugging of the Mendix app running locally. Other settings control aspects such as tablet/phone profiles, offline capabilities and PIN requirement.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/debug-a-mobile-app.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"url\": \"http://10.140.149.92:8080\",\n  \"hybridTabletProfile\": \"\",\n  \"hybridPhoneProfile\":  \"\",\n  \"enableOffline\": false,\n  \"requirePin\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Syntax for OQL RANGEBEGIN Function\nDESCRIPTION: Demonstrates the syntax for using the RANGEBEGIN function in OQL. The function takes a range parameter and extracts its initial value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangebegin.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nRANGEBEGIN ( $range )\n```\n\n----------------------------------------\n\nTITLE: Network Speed Optimization Configuration\nDESCRIPTION: Configuration steps to improve network performance in Parallels by disabling Large Send Offload (IPv4) for the Parallels VirtIO Ethernet Adapter to increase upload speeds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/using-mendix-studio-pro-on-a-mac.md#2025-04-21_snippet_1\n\nLANGUAGE: Configuration\nCODE:\n```\nWindows 10/11 Configuration:\n1. Open Device Manager\n2. Navigate to Network adapters\n3. Find Parallels VirtIO Ethernet Adapter\n4. Disable Large Send Offload (IPv4)\n```\n\n----------------------------------------\n\nTITLE: Number to String Conversion Query\nDESCRIPTION: Query demonstrating implicit conversion of number to string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[42 = Name]\n```\n\n----------------------------------------\n\nTITLE: Configuring a Microflow for AWS IoT SiteWise\nDESCRIPTION: A step-by-step guide showing how to implement the ListAssetModels activity using a microflow in a Mendix app. This snippet outlines the process of creating and configuring a microflow to retrieve asset model data from AWS IoT SiteWise.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/aws-iot-sitewise.md#2025-04-21_snippet_0\n\nLANGUAGE: Plain text\nCODE:\n```\n1. In the **App Explorer**, right-click on the name of your module, and then click **Add microflow**.\n2. Enter a name for your microflow, for example, *ACT_ListAssetModels*, and then click **OK**.\n3. In the **App Explorer**, in the **AWSIoTSiteWiseConnector** > **Operations** section, find the **ListAssetModels** activity.\n4. In your **Toolbox**, find the **Create Object** activity and drag it onto the work area of your microflow.\n5. In the **Entity** field, select **ListAssetModelsRequest**.\n6. Double-click the **ListAssetModels** microflow activity to configure the required parameters.\n7. In the **Edit parameters** section, edit the **ENUM_Region** parameter, and provide a value by using a variable or an expression.\n8. Click **OK**.\n9. In the **Toolbox** pane, search for the **Retrieve** activity and drag it onto the microflow area.\n10. Position the **Retrieve** activity between the **ListAssetModels** activity and the microflow end event.\n11. Double-click the **Retrieve** activity.\n12. In the **Select Association** dialog box, in the **Association** section, click **Select**, and then select **ListAssetModels** as the association.\n13. Click **OK**.\n14. Configure a method for triggering the **ACT_ListAssetModels** microflow.\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Operation Request Body - List Reference\nDESCRIPTION: Defines the JSON schema for a request body parameter that references a list of objects based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"type\": \"array\",\n  \"items\": [{ \"$ref\": \"#/definitions/#definition_name#\"}]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Test Microflow in Mendix\nDESCRIPTION: This snippet explains the procedure to create a test microflow named 'Test_PromoteEmployeeToJunior' in a Mendix application. The microflow tests the promotion logic by simulating an employee promotion scenario, verifying the correctness of the employee's level after the operation. It involves creating an 'Employee' object, using microflow calls to execute business logic, and asserting the desired outcome. Dependencies include a proper Mendix environment setup and the relevant microflows ('Promote', 'AssertTrue1', 'ReportStep') in the module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/microflows/testing-microflows-with-unit-testing.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. In the left-side navigation pane, right-click on **MyFirstModule**, and then click **Add folder**.\n2. In the **Name** field, enter *UnitTests*.\n3. Right-click the **UnitTests** folder, and then click **Add microflow**.\n4. In the **Name** field, enter *Test_PromoteEmployeeToJunior*.\n5. In the **Test_PromoteEmployeeToJunior** microflow, add **Employee** as an input parameter.\n6. Add a new **Create object** activity for the **Employee** entity.\n7. In the **Commit** section of the activity, select **Yes**.\n8. In the **Member** section of the activity, add a new member with the following parameters:\n    * **Name** – *John*\n    * **Member type** – **String**\n9. In the **Test_PromoteEmployeeToJunior** microflow, call the **Promote** microflow with the **Employee** object by adding an activity with the following parameters:\n    * **Type** – **Microflow call**\n    * **Microflow** – **MyFirstModule.Promote**\n    * **Parameter** – **Employee**\n    * **Argument** –*$NewEmployee*\n10. Promote the employee to the right level by using an activity with the following parameters:\n    * **Type** – **Microflow call**\n    * **Microflow** – **UnitTesting.AssertTrue1**\n    * **Parameter** – **ValueToAssert**\n    * **Argument** –*$NewEmployee/Level = MyFirstModule.Level.Junior*\n11. Right-click the **AssertTrue1** activity that you created.\n12. Select **Edit caption**, and then enter *Promoted to Junior?* for the new caption.\n13. To provide more information about test results for failed tests, call the **ReportStep** sub-microflow by doing the following steps:\n    1. Add a new activity of the **Microflow call** type between **Create Employee** and **Promote**\n    2. Select **UnitTesting.ReportStep** as the microflow.\n    3. Set the argument of the **Message** parameter to *Employee created*.\n    4. Add a new activity of the **Microflow call** type between **Promote** and **Promoted to Junior?**.\n    5. Select **UnitTesting.ReportStep** as the microflow.\n    6. Set the argument of the **Message** parameter to *Employee promoted*.\n14. Double-click the **End event**, and then specify the following properties:\n    * **Type** – **Boolean**\n    * **Return value** – *true*\n15. Connect the activities, as shown in the following figure.\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Settings in .m2eerc File for Java\nDESCRIPTION: This code snippet shows how to specify proxy settings as JVM parameters in the .m2eerc file. It includes options for proxy host, port, username, and password.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-rest-services/using-a-proxy-to-call-a-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n...\n# custom java options, like -Xmx256m or -Djava.foo=bar\n javaopts: [ ..., \"-Dhttp.proxyHost=myproxyserver.com\", \"-Dhttp.proxyPort=3128\", \"-Dhttp.proxyUser=myusername\" \"-Dhttp.proxyPassword=mypassword\" ]\n...\n```\n\n----------------------------------------\n\nTITLE: Creating Web Page for User Task in Mendix\nDESCRIPTION: This snippet provides the steps to create a new web page for capturing details related to the device and location of a new hire. It includes naming conventions and layout settings for the new page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n9. In the **Create web page** dialog box:\n   1. Set the **Page name** to **SpecifyDeviceAndLocation_Workflow**.\n   2. Set **Navigation layout** to **Atlas_Default (Atlas_Core)**.\n   3. Select the **User Task Extended** template.\n```\n\n----------------------------------------\n\nTITLE: Defining Widgets Property with DataSource in Pluggable Widget XML\nDESCRIPTION: XML configuration for defining a widgets property with a dataSource attribute, linking it to a datasource property defined elsewhere in the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\" dataSource=\"myDataSource\">\n\t<caption>Content</caption>\n\t<description>Widgets using data source</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Defining MyListWidgetsProps Interface in TypeScript\nDESCRIPTION: Defines an interface for widget properties including data source, selectable objects, association, and attribute values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    mySelectableObjects: ListValue;\n    myAssociationOnDatasource: ListReferenceValue;\n    myAttributeOnSelectableObjects: ListAttributeValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Days in Java\nDESCRIPTION: This snippet demonstrates how to use the trimToDays function to round off a date to days, removing hours, minutes, seconds, and milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ntrimToDays($myDate)\n```\n\n----------------------------------------\n\nTITLE: Configuring Pie Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a basic pie chart with labels and values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"values\": [ 10, 20, 30 ],\n  \"labels\": [ \"Uganda\", \"Netherlands\", \"US\" ],\n  \"type\": \"pie\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Blob Storage Plan in mxpc-cli\nDESCRIPTION: This snippet shows the configuration for an Azure Blob Storage plan in mxpc-cli. It includes account details, Managed Identity authentication, and resource identifiers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nStorage Plan:\n  type: azure-blob\n  account_name: <Blob Storage account name>\n  managed_identity_authentication: yes\n  account_subscription_id: <Subscription ID of Blob Storage account>\n  account_resource_group: <Resource Group of Blob Storage account>\n  managed_identity_client_id: <Client ID of storage admin Managed Identity>\n  k8s_service_account: mendix-storage-provisioner-wi\n```\n\n----------------------------------------\n\nTITLE: Using false() Function in XPath Queries - Mendix - XPath\nDESCRIPTION: This snippet demonstrates how to use the false() function to filter data in Mendix's XPath queries. The purpose is to check if a customer is not a gold customer. The input for the query is the Boolean function false() which produces a false value that filters out gold customers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-false.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n[IsGoldCustomer = false()]\n```\n\n----------------------------------------\n\nTITLE: Division Approximation Example in Mendix\nDESCRIPTION: Illustrates how division can result in approximations for infinite decimal expansions, which may lead to unexpected results in subsequent calculations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n3 : 7\n```\n\nLANGUAGE: java\nCODE:\n```\n0.4285714285714285714285714285714286\n```\n\nLANGUAGE: java\nCODE:\n```\n(3 : 7) * 7\n```\n\nLANGUAGE: java\nCODE:\n```\n3.0000000000000000000000000000000002\n```\n\n----------------------------------------\n\nTITLE: Using StartsWith Filter Helper in TypeScript\nDESCRIPTION: Shows how to use the startsWith helper for filtering items based on prefix matches. Compatible with String, Integer, Long, and Decimal attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_34\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrStr = attribute(this.props.myAttributeA.id); // string attribute\nconst subStr = literal(\"secret\");\n\n// filter keeps items where value starts with substring \"secret\"\n// like \"secret file\", but not \"my secret password\" or \"top secret\"\nconst filterCondition1 = startsWith(attrStr, subStr);\n\n// also works with numeric attributes\nconst attrNum = attribute(this.props.myAttributeB.id); // integer attribute\nconst subNum = literal(\"1337\");\n\n// filter keeps items where value stats with sequence of numbers \"1337\"\n// like \"133700\", but not \"1231337\" or \"913379\"\nconst filterCondition2 = startsWith(attrNum, substrNum);\n```\n\n----------------------------------------\n\nTITLE: Concatenate Strings with Trim in Mendix\nDESCRIPTION: This snippet demonstrates a simple string concatenation using the `trim` function to remove any leading or trailing whitespace. It concatenates the `Fullname` and `Firstname` attributes of the `ContactPerson` entity, separated by a space, ensuring that any extra whitespace from the user's input is removed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/string-concatenation.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ntrim(  $ContactPerson/Fullname + ' ' + trim(  $ContactPerson/Firstname ) )\n```\n\n----------------------------------------\n\nTITLE: Concatenate Strings with Conditional Whitespace in Mendix\nDESCRIPTION: This code snippet demonstrates how to concatenate strings while conditionally adding whitespace only when a field is populated. It uses a single expression with nested `if` statements to check for empty or blank values before adding a string and a space. A `trim` function is used to remove leading or trailing whitespace from the final result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/string-concatenation.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ntrim(\n( if $ContactPerson/Firstname != empty and $ContactPerson/Firstname != ''\nthen $ContactPerson/Firstname + ' ' else '' ) +\n( if  $ContactPerson/Middlename != empty  and $ContactPerson/Middlename != ''\nthen  $ContactPerson/Middlename + ' ' else  '' ) +\n( if  $ContactPerson/Lastname != empty  and $ContactPerson/Lastname != ''\nthen  $ContactPerson/Lastname + ' ' else  '' ) +\n( if  $ContactPerson/Suffix !=  empty  \nthen  getCaption( $ContactPerson/Suffix )\nelse '')\n)\n```\n\n----------------------------------------\n\nTITLE: Equality Comparison in Mendix\nDESCRIPTION: This snippet demonstrates an equality comparison in Mendix. It compares two string values and two date/time values to check for equality and returns a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n\"\\\"mystring\\\" = \\\"myotherstring\\\"\"\n```\n\nLANGUAGE: Java\nCODE:\n```\n\"dateTime(2007) = dateTime(2007)\"\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for 'Find Element by CSS' Action in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Find Element by CSS' action in a markdown table format. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-find/rg-one-find-element-by-css.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nCSS Selector | String | yes |  CSS selector which matches the elements you want to find\nSearch Context | WebElement | no | Limit the search to the given WebElement\nOccurrence | Integer | no | Index of the result-list value you want to get (defaults to the first element)\n```\n\n----------------------------------------\n\nTITLE: Querying Minimum Product Name for Orders in SQL\nDESCRIPTION: This SQL snippet demonstrates how Mendix sorts reference sets by using the MIN() function to determine the minimum attribute value for sorting, rather than the displayed text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/ordering-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nMIN(productName)\n```\n\n----------------------------------------\n\nTITLE: Defining Custom CSS Class (Initial)\nDESCRIPTION: This code snippet demonstrates the initial structure of a custom CSS class definition in native/main.js for styling a button widget. It includes placeholder properties for container, icon, and caption elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const className = {\n    container: {\n        <ViewStyle properties>\n    },\n    icon: {\n    },\n    caption: {\n        <TextStyle properties>\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Personal Access Token with Catalog APIs in HTTP Request\nDESCRIPTION: This snippet demonstrates how to use a Personal Access Token (PAT) to authenticate requests made to the Mendix Catalog APIs. It requires the PAT to be included in the authorization header of the HTTP GET request. Proper handling of the PAT is crucial to ensure access security.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/mendix-profile/user-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/register HTTP/1.1\nHost: catalog.mendix.com\nAuthorization: mxtoken <your personal access token>\n```\n\n----------------------------------------\n\nTITLE: Creating GroupBox Styles Based on Brand Colors\nDESCRIPTION: This snippet creates three distinct style constants for the GroupBox widget based on brand colors: success, warning, and danger. These styles enhance usability by allowing developers to apply standardized styling options quickly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\nexport const groupBoxSuccess = {\n        container: {\n            borderColor: brand.success\n        },\n        header: {\n            backgroundColor: shadeblendconvert(0.4, brand.success)\n        },\n        headerContent: {\n            color: \"#000000\"\n        }\n    };\n\nexport const groupBoxWarning = {\n        container: {\n            borderColor: brand.warning\n        },\n        header: {\n            backgroundColor: shadeblendconvert(0.4, brand.warning)\n        },\n        headerContent: {\n            color: \"#000000\"\n        }\n    };\n\nexport const groupBoxDanger = {\n        container: {\n            borderColor: brand.danger\n        },\n        header: {\n            backgroundColor: shadeblendconvert(0.4, brand.danger)\n        },\n        headerContent: {\n            color: \"#000000\"\n        }\n    };\n```\n\n----------------------------------------\n\nTITLE: Defining a Decimal Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet demonstrates how to define a decimal property for a pluggable widget. It includes the 'defaultValue' attribute set to '50.4'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myDecimal\" type=\"decimal\" defaultValue=\"50.4\">\n\t<caption>My decimal</caption>\n\t<description>My decimal setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Maps CSP\nDESCRIPTION: This code snippet provides the necessary Content Security Policy directives for integrating Google Maps into a Mendix application. It specifies domains required for scripts, images, frames, connections, fonts, styles, and workers, ensuring proper functionality of the map widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/map.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nscript-src 'self' https: blob:;\nimg-src 'self' https://*.googleapis.com https://*.gstatic.com *.google.com *.googleusercontent.com data:;\nframe-src *.google.com;\nconnect-src 'self' https://*.googleapis.com *.google.com https://*.gstatic.com data: blob:;\nfont-src https://fonts.gstatic.com;\nstyle-src 'self' 'unsafe-inline' https://fonts.googleapis.com;\nworker-src blob:;\n```\n\n----------------------------------------\n\nTITLE: Changing Brand Primary Color in Custom Variables\nDESCRIPTION: This code snippet demonstrates how to change the primary brand color in 'custom-variables.js'. This adjustment is essential for customizing the application’s visual identity, allowing the primary color to be modified easily. The variable 'brand.primary' is set to 'rosybrown', showcasing how to overwrite the existing value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n//Brand Style\nexport const brand = {\n    primary: \"rosybrown\",\n    success: \"#76CA02\",\n    warning: \"#f99b1d\",\n    danger: \"#ed1c24\",\n};\n```\n\n----------------------------------------\n\nTITLE: OQL Query with UserRole System Variable\nDESCRIPTION: Query that selects Name from Sales.Person objects owned by users with Manager role, showing how to reference system user roles in OQL conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tName\nFROM\n\tSales.Person\nWHERE\n\tSystem.owner/System.User/System.UserRoles = '[%UserRole_Manager%]'\n```\n\n----------------------------------------\n\nTITLE: Basic Widget XML Structure\nDESCRIPTION: Shows the fundamental structure of a Mendix widget XML file including the root widget element and its main child elements for name, description, icon and properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<widget id=\"HelloWorld.widget.HelloWorld\" needsEntityContext=\"true\" xmlns=\"http://www.mendix.com/widget/1.0/\">\n  <name>HelloWorld</name>\n  <description>The description of this widget.</description>\n  <icon><!-- Base64 icon here --></icon>\n  <properties>\n   <!-- Define the widget properties here -->\n  </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Seconds in Java\nDESCRIPTION: This function trims a date to seconds by rounding off all milliseconds to zero. It takes a Date and time input and returns the same date rounded down to seconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntrimToSeconds($myDate)\n```\n\nLANGUAGE: java\nCODE:\n```\n'Sun Jun 08 10:12:51 CEST 2008'\n```\n\n----------------------------------------\n\nTITLE: Using getKey Function with Enumerations in Mendix (Java)\nDESCRIPTION: Example of using the getKey function to retrieve the technical name (key) of an enumeration value. This function returns language-independent results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ngetKey($Customer/Grade)\n```\n\n----------------------------------------\n\nTITLE: Mendix SDK Dependencies Configuration\nDESCRIPTION: JSON configuration for specifying Mendix SDK dependencies in package.json.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"dependencies\": {\n  \"mendixmodelsdk\": \"^4.56.0\",\n  \"mendixplatformsdk\": \"^5.0.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Deployment Releases\nDESCRIPTION: Command to display a pretty-printed list of all deployed releases for a Mendix native app project. Supports filtering by platform and deployment target.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe release list --project-name \"CoolApp\"\n```\n\n----------------------------------------\n\nTITLE: Lazy Loading Widget Implementation\nDESCRIPTION: Example of a widget that loads data only when a button is clicked.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nexport default const LazyWidget = (props: LazyWidgetProps) => {\n    useMemo(() => props.myDataSource.setLimit(0), []);\n    return props.myDataSource.items?.length ? (\n        props.myDataSource.items.map((i) => <div key={i.id}>Item</div>)\n    ) : (\n        <button onClick={() => props.myDataSource.setLimit(undefined)}>Load data</button>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Order Price Using Aggregate Function in Mendix Microflow\nDESCRIPTION: An alternative approach using Mendix's built-in aggregate list function with the Sum operation to calculate the total price of all orders in a single step.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\n$SumTotalPrice\n```\n\n----------------------------------------\n\nTITLE: Creating Microflows in Mendix Studio Pro with C#\nDESCRIPTION: Implements the CreateMicroflows method to generate microflows within a transaction. This method is called from the menu action and uses the current app model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\npublic void CreateMicroflows(IModel currentApp)\n{\n    var module = currentApp.Root.GetModules().Single(m => m.Name == \"MyFirstModule\");\n\n    using var transaction = currentApp.StartTransaction(\"Create microflows\");\n\n    CreateMicroflowsInFolder(currentApp, module);\n\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Native Animation Widget in Mendix (JavaScript)\nDESCRIPTION: JavaScript code for styling an Animation widget in Mendix native mobile apps. This widget allows animating containers with effects like wiggle, move, or size changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_animation_Animation = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Property Definition Structure in XML\nDESCRIPTION: Shows the common structure for defining a widget property with key, type, caption and description elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"propertyKey\" type=\"propertyType\">\n\t<caption>My Property</caption>\n\t<description>This is my property</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Unix Line Ending Format for svn:ignore Property\nDESCRIPTION: Example of the svn:ignore property value with Unix (LF) line endings that should be used to fix repository property change failures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nmodeler-merge-marker\n.mendix-cache\nResolveIgnoreConflict.mpr.lock\n*.launch\nResolveIgnoreConflict.mpr.bak\nnode_modules\n```\n\n----------------------------------------\n\nTITLE: Serializing Model Unit to JavaScript with Mendix SDK\nDESCRIPTION: A simple method to convert a fully loaded model unit into JavaScript code using the JavaScriptSerializer from the Mendix SDK\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/generating-code-from-the-model.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { JavaScriptSerializer } from \"mendixmodelsdk\";\n\nconsole.log(JavaScriptSerializer.serializeToJs(someFullyLoadedModelUnit));\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Ingress for PCLM Server Access\nDESCRIPTION: This YAML configuration sets up a Kubernetes Ingress to allow HTTP connections to the PCLM server. It defines routing rules and specifies the service name and port for the PCLM server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: pclm-ingress\n  namespace: my-pclm-1\nspec:\n  rules:\n    - host: pclm.<domain> # for example, pclm.mydomain.io\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: mx-privatecloud-license-manager\n                port:\n                  number: 80\n```\n\n----------------------------------------\n\nTITLE: Getting the Caption of an Enumeration - Java\nDESCRIPTION: This snippet demonstrates the usage of the getCaption function to retrieve the translatable caption of an enumeration value. The output will vary depending on the current language of the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ngetCaption($Customer/Grade)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Gouden\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Test Class Structure\nDESCRIPTION: Example structure for creating Java unit tests using JUnit annotations. Shows how to set up test methods, before/after hooks, and utilize the TestManager for step reporting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/unit-testing.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class UnitTestExample extends AbstractUnitTest {\n    @BeforeClass\n    public static void setUp() {\n        // Run once before all tests\n    }\n\n    @Before\n    public void beforeTest() {\n        // Run before each test\n    }\n\n    @Test\n    public void testExample() {\n        TestManager.instance().reportStep(\"Test step description\");\n        // Test implementation\n    }\n\n    @After\n    public void afterTest() {\n        // Run after each test\n    }\n\n    @AfterClass\n    public static void tearDown() {\n        // Run once after all tests\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Query Logging in Mendix Runtime\nDESCRIPTION: This code snippet shows how to configure the LogMinDurationQuery setting for database query logging in Mendix Runtime. It defines the threshold for logging slow queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n| Name | Description | Default value |\n| --- | --- | --- |\n| `LogMinDurationQuery` | Defines whether database queries are logged via the `ConnectionBus_Queries` log node if they finished after the amount of milliseconds specified here. By default, only the concerning SQL query will be logged. Set the log level of the `ConnectionBus_Queries` log node to TRACE to show more information about the page or the microflow that leads to this query. |   |\n```\n\n----------------------------------------\n\nTITLE: Implementing Java Action in Eclipse\nDESCRIPTION: This Java snippet demonstrates how to implement a method in Eclipse for a Mendix custom Java action. The method reverses the name of an asset. It uses inputAssets generated by Mendix and returns a reversed string of the asset name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/java-programming/extending-your-application-with-custom-java.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n        @java.lang.Override\n        public java.lang.String executeAction() throws Exception\n        {\n            this.inputAssets = __inputAssets == null ? null : assetmanager.proxies.Asset.initialize(getContext(), __inputAssets);\n\n            // BEGIN USER CODE\n            throw new com.mendix.systemideinterfaces.MendixRuntimeException(\"Java action was not implemented\");\n            // END USER CODE\n        }\n```\n\nLANGUAGE: Java\nCODE:\n```\n    String assetsAssetName = this.inputAssets.getAssetName(this.getContext());\n    return new StringBuilder(assetsAssetName).reverse().toString();\n```\n\n----------------------------------------\n\nTITLE: Calculating Aggregated Order Amount Using OQL in SQL\nDESCRIPTION: The SQL snippet demonstrates how to calculate the aggregated total order amount for all orders of customers from a specific group using an OQL query. It uses an INNER JOIN to combine customers with their orders and filters them based on the customer group specified by the parameter `ParGroup`. The query groups the resulting data by customer name and computes the sum of the order amounts. Key parameter: `$ParGroup` is used to specify the customer group. It expects customer and order data to be present in the joined tables `CRM.Customers` and `CRM.Orders_Customer`. The query outputs the customer name and their respective total order amounts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nFROM CRM.Customers As CustomerObj\nINNER JOIN CustomerObj/CRM.Orders_Customer/CRM.Orders As OrderObj\nWHERE CustomerObj/CRM.Customer_Group = $ParGroup\nGROUP BY CustomerObj/Name\nSELECT CustomerObj/Name As Name, SUM(OrderObj/TotalAmount) As TotalAmount\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Compose for Selenium Hub\nDESCRIPTION: This bash command starts the Docker Compose configuration for the Selenium hub and nodes in detached mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-docker-selenium-hub.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block defining metadata for the release notes page including title, URL, description and weight parameters\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/private-platform/1.12.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"1.12\"\nurl: /releasenotes/private-platform/1-12/\ndescription: \"Release notes for version 1.12 of Private Mendix Platform\"\nweight: 130\n---\n```\n\n----------------------------------------\n\nTITLE: Adding OnChange Action Configuration in XML\nDESCRIPTION: XML configuration for adding an onChange action property and connecting it to the text attribute. Enables action selection in the Mendix Studio Pro interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Data source\">\n    <property key=\"textAttribute\" type=\"attribute\" onChange=\"onChangeAction\">\n        <caption>Attribute (path)</caption>\n        <description/>\n        <attributeTypes>\n            <attributeType name=\"String\"/>\n        </attributeTypes>\n    </property>\n</propertyGroup>\n<propertyGroup caption=\"Events\">\n    <property key=\"onChangeAction\" type=\"action\" required=\"false\">\n        <caption>On change</caption>\n        <description/>\n    </property>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Running Mendix Docker Image with PostgreSQL\nDESCRIPTION: Docker command to run a Mendix Docker image with PostgreSQL database configuration. Requires setting ADMIN_PASSWORD and DATABASE_ENDPOINT environment variables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-docker-image.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it \\\n  -e ADMIN_PASSWORD=Password1! \\\n  -e DATABASE_ENDPOINT=postgres://username:password@host:port/mendix \\\n  mendix/mendix-buildpack:v1.2  \n```\n\n----------------------------------------\n\nTITLE: Declaring Native Dependencies for JavaScript Actions\nDESCRIPTION: This JSON configuration declares the native dependency react-native-nfc-manager version 1.2.2, which enables Mendix to automatically install and link it when creating production-like builds of a native app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nativeDependencies\": {\n        \"react-native-nfc-manager\": \"1.2.2\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: OQL ORDER BY Syntax\nDESCRIPTION: This code snippet shows the general syntax of the ORDER BY clause in OQL. It specifies that you can sort by an order_by_expression with optional ASC or DESC modifiers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-order-by-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n\"ORDER BY\n    {\n        order_by_expression [ ASC | DESC ]\n    }\"\n```\n\n----------------------------------------\n\nTITLE: Example Request for Retrieving Environment - Mendix API - Bash\nDESCRIPTION: This request illustrates how to obtain the environment details for a specific application in a specific mode, utilizing appropriate headers for user authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/Acceptance\nHost: deploy.mendix.com\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\n\n```\n\n----------------------------------------\n\nTITLE: Including Common Section for Checkbox Properties\nDESCRIPTION: This snippet refers to the common properties that can be configured for the checkbox widget in Mendix. It likely includes standard attributes applicable to multiple widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint Example in Mendix\nDESCRIPTION: This XPath constraint limits the list of objects that can be selected in a reference selector.  For example, only products that are in stock will be selectable. It depends on the InStock attribute of the entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/reference-selector.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n\"[InStock = true()]\"\n```\n\n----------------------------------------\n\nTITLE: OQL LIMIT and OFFSET Syntax\nDESCRIPTION: Demonstrates the basic syntax for using LIMIT and OFFSET clauses in OQL queries. LIMIT specifies how many rows to return, while OFFSET indicates how many rows to skip before returning results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n[ LIMIT number ] [ OFFSET number ]\n```\n\n----------------------------------------\n\nTITLE: Local Font File Integration in SCSS\nDESCRIPTION: This code snippet demonstrates how to replace the Google Fonts CDN URL with the local path to the Open Sans font files in the custom-variables.scss file for the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_22\n\nLANGUAGE: scss\nCODE:\n```\n$font-family-import: \"./fonts/open-sans.css\"\n```\n\n----------------------------------------\n\nTITLE: Running Python Script to Set Log Levels in Mendix\nDESCRIPTION: This PowerShell command executes the Python script to set log levels. It requires Python to be installed and accessible in the system's PATH. The script takes the application ID and port number as arguments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/log-levels.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\LogDemoApp\\python\nλ python setlogs.py 87a32a3e-c6db-4bc8-9fa3-7cd5b108eaec 8090\n{\"feedback\":{},\"result\":0}\n\n```\n\n----------------------------------------\n\nTITLE: Editing Object Attributes JSON Request\nDESCRIPTION: JSON request to change attributes of an existing object in the Mendix Runtime Server, including object ID and changed values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"change\",\n   \"params\":{\n      \"281474976710757\":{\n         \"Firstname\":\"peter1\"\n      }\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee8bb633f9a0\":25\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Android App with Cordova CLI on Mac OSX\nDESCRIPTION: This command adds the Gradle binary to the path, switches the Java JDK to 1.8, and runs the build release command to generate a signed APK on Mac OSX.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/build-hybrid-apps/build-hybrid-locally.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nPATH=\"$PATH:/Users/<username>/.gradle/wrapper/dists/gradle-5.1.1-all/97z1ksx6lirer3kbvdnh7jtjg/gradle-5.1.1/bin\" JAVA_HOME=`/usr/libexec/java_home -v 1.8` npm run build -- android --release -- --keystore=<keystore-path> --storePassword=<keystore-password> --alias=<keystore-alias> --password=<certificate-password>\n```\n\n----------------------------------------\n\nTITLE: Defining Access Rules on the Order Entity Using XPath\nDESCRIPTION: This snippet provides steps to define access rules for the Order entity so that only users with the Financial Administrator role can view orders with a payment status of Complete. The required XPath constraint will limit access accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/define-access-rules-using-xpath.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\nOrder[PaymentStatus='Complete']\n```\n\n----------------------------------------\n\nTITLE: Filtering Design Properties and Styling in JSON\nDESCRIPTION: Demonstrates how to filter styling elements like design properties or CSS classes to prevent developers from applying them in the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Web_Content\": {\n            \"designProperties\": true,\n            \"styling\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Local Testing AAD Graph App Manifest Configuration\nDESCRIPTION: JSON configuration for defining reply URLs with types for local testing in the deprecated AAD Graph App Manifest\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mobile-sso.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"replyUrlsWithType\": [\n{\n\"url\": \"https://IP_address/oauth/v2/callback\",\n\"type\": \"Web\"\n},\n{\n\"url\": \"makeitnative://oauth/callback\",\n\"type\": \"Web\"\n}\n]\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Date Range\nDESCRIPTION: Query that returns customers who registered within the current week using start and end date constraints\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[DateRegistered >= '[%BeginOfCurrentWeek%]' and DateRegistered < '[%EndOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Initializing Group Box Collapsed State\nDESCRIPTION: Sets the initial collapsed state based on the startCollapsed prop using a type-safe boolean conversion\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_42\n\nLANGUAGE: tsx\nCODE:\n```\nreadonly state: GroupBoxState = {\n    collapsed: !!this.props.startCollapsed\n};\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Policy Configuration for ECR\nDESCRIPTION: IAM policy definition that grants necessary permissions for ECR repository access including authentication, image management and layer operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"ManageRepositoryContents\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:GetAuthorizationToken\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:GetRepositoryPolicy\",\n                \"ecr:DescribeRepositories\",\n                \"ecr:ListImages\",\n                \"ecr:DescribeImages\",\n                \"ecr:BatchGetImage\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:PutImage\"\n            ],\n            \"Resource\": [\n                \"arn:aws:ecr:$YOUR_REGISTRY_REGION:$YOUR_ACCOUNT:repository/$YOUR_REPO\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Range Mode Configuration - Nonnegative (JSON)\nDESCRIPTION: This snippet configures the y-axis range mode to \"nonnegative\", which shows only positive values, with the range based on the plotted positive values. This is useful when displaying data that is inherently positive or when negative values are not relevant.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"rangemode\": \"nonnegative\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Power in Mendix Using Java\nDESCRIPTION: The 'pow' function raises a number to a specified power, accepting both the base and the exponent as input parameters. It returns the result as a decimal type, making it beneficial for mathematical calculations involving exponentiation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npow(2, 3)\n```\n\nLANGUAGE: java\nCODE:\n```\n8\n```\n\nLANGUAGE: java\nCODE:\n```\npow(2.5, 3)\n```\n\nLANGUAGE: java\nCODE:\n```\n15.625\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix App Service Status\nDESCRIPTION: This command checks the status of the `mendix-app-service` within the Minikube environment, verifying that the application is running correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nminikube service mendix-app-service\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Filtering on ListValue for Pluggable Widgets\nDESCRIPTION: The setFilter method on ListValue enables powerful filtering options for pluggable widgets, supporting both simple filtering on a single attribute and advanced filtering with multiple combined conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.3.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nsetFilter\n```\n\n----------------------------------------\n\nTITLE: Supported Interval Types for Scheduled Events\nDESCRIPTION: Detailed explanation of different interval types available for scheduling events, including yearly, monthly, weekly, daily, hourly, and minute-based configurations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/scheduled-events/scheduled-events-task-queue.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Interval Types\n* Yearly\n* Monthly\n* Weekly\n* Daily\n* Hourly\n* Minutes\n```\n\n----------------------------------------\n\nTITLE: Date Format for Delta Ingestion\nDESCRIPTION: The required date format pattern for the changedDate attribute when implementing delta ingestion functionality in Mendix OData services.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/mendix-data-loader.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nyyyy-MM-dd'T'HH:mm:ss.SSS\n```\n\n----------------------------------------\n\nTITLE: Defining File Path for Set File Manager\nDESCRIPTION: Example file path format for the Set File Manager action in ATS when uploading files to a Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-upload-file-using-ats/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nC:\\users\\ats\\documents\\receipt-1.png\n```\n\n----------------------------------------\n\nTITLE: Absolute Value Calculation with abs Function\nDESCRIPTION: Calculates the absolute value of a number, always returning a non-negative numeric result regardless of input sign.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nabs(-5)\n```\n\nLANGUAGE: java\nCODE:\n```\nabs(5)\n```\n\n----------------------------------------\n\nTITLE: Example Package Info JSON Response\nDESCRIPTION: JSON response containing details about a deployed package, including status, dates, version, size, and download URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Status\" :  \"Succeeded\",\n    \"CreationDate\" :  1404990271835,\n    \"ExpiryDate\": null,\n    \"Description\" :  \"Add scientific mode\" ,\n    \"Version\" :  \"2.5.4.63\" ,\n    \"Size\" :  15342295,\n    \"PackageId\" :  \"b3d14e53-2654-4534-b374-9179a69ef3cf\" ,\n    \"Creator\" :  \"Richard Ford\" ,\n    \"Name\" :  \"Main line-2.5.4.63.mda\",\n    \"Url\": {\n        \"Location\": \"https://url/to/download/the/package/file\",\n        \"TTL\": 900\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcut for Commit\nDESCRIPTION: Keyboard shortcut to commit changes using Ctrl + Enter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/version-control-menu/commit-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<kbd>Ctrl</kbd> + <kbd>Enter</kbd>\n```\n\n----------------------------------------\n\nTITLE: Calling a BAPI Action\nDESCRIPTION: The `CallBAPI` microflow action is designed to invoke a BAPI function. It requires parameters such as the JCoDestination object and an input request object representing the BAPI call. The response from the BAPI is typified by the BAPIResponseObject defined in the BAPI module domain model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nThis microflow action is used to call a BAPI function.\n```\n\n----------------------------------------\n\nTITLE: Defining Mendix Statistics MBean Interface\nDESCRIPTION: Java interface defining methods to expose generic Mendix Runtime statistics through JMX, including user counts and action statistics.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/monitoring-mendix-using-jmx.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage jmx.actions;\n\npublic interface MxStatsMBean {\n\npublic int getMaximumNumberConcurrentUsers() throws Exception;\n\npublic int getActionQueueSize();\n\npublic int getActiveActionCount();\n\npublic int getScheduledActionCount();\n\npublic long getNumberConcurrentSessions();\n\npublic long getCurrentUserCount();\n\npublic long getCompletedActionCount();\n\npublic long getNamedUserCount();\n\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Namespace\nDESCRIPTION: Final commands to delete the namespace from the cluster after all resources are cleaned up.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_31\n\nLANGUAGE: shell\nCODE:\n```\noc delete ns {namespace}\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl delete ns {namespace}\n```\n\n----------------------------------------\n\nTITLE: Editing Operator Configuration in Kubernetes\nDESCRIPTION: Command to edit the Operator Configuration in Kubernetes to adjust resource settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit operatorconfiguration\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite Entry Points for Web Endpoints\nDESCRIPTION: TypeScript configuration for Vite that defines entry points for the main extension, tab UI, and dockable pane UI components. This specifies where the code for each endpoint is located.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nentry: {\n    main: \"src/main/index.ts\",\n    tab: \"src/ui/tab.tsx\",\n    dockablepane: \"src/ui/dockablepane.tsx\",\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Server-Side Sorting in Mendix Nanoflow\nDESCRIPTION: This code sets the 'IsSortable' member of the 'Paging' entity to false, effectively disabling server-side sorting in a Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n```\nfalse\n```\n```\n\n----------------------------------------\n\nTITLE: Starting Android Debug Bridge Server\nDESCRIPTION: This command initiates the Android Debug Bridge (adb) server, which is necessary for communication between the development machine and connected Android devices. It allows developers to debug Android applications, access device logs, and perform other development-related tasks. The adb server must be running to execute other adb commands.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\n\"adb start-server\"\n```\n\n----------------------------------------\n\nTITLE: Importing Icon Data Format Instructions\nDESCRIPTION: These instructions describe the format required for importing icon data, which includes character codes, names, and optional search tags. This data can be imported from a text file, *.csv* file, or clipboard, and it must adhere to a specific structure to be recognized by the system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/page-resources/icon-collection.md#2025-04-21_snippet_0\n\nLANGUAGE: Plain Text\nCODE:\n```\n[Char_code];[Name];[Search_Tags (optional)]\\n[Char_code];[Name];[Search_Tags (optional)]\\n...\n```\n\nLANGUAGE: Plain Text\nCODE:\n```\nF01C9;ab-testing;UX, Research\\nF16E0;abacus;Calculation\\nF1328;abjad-arabic;Alphabet, Language\n```\n\n----------------------------------------\n\nTITLE: OData to Mendix Type Mapping Table in Markdown\nDESCRIPTION: A table showing the mapping between OData types and their corresponding Mendix types for use in external actions. It includes various data types such as Boolean, numeric types, date/time types, and more.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/consumed-odata-services/consumed-odata-service-requirements.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| OData Type                        | Mendix Type                           |\n| ---                               | ---                                   |\n| Boolean                           | Boolean ¹ |\n| Byte, SByte, Int16, Int32, Int64  | Integer/Long |\n| Collection of Entities            | List of objects ³ |\n| DateTime, DateTimeOffset, Time    | Date and time |\n| Decimal, Double, Single           | Decimal ² |\n| Entity                            | Object ³ |\n| Enumeration                       | Enumeration |\n| String, Guid                      | String |\n```\n\n----------------------------------------\n\nTITLE: Installing NPM and iOS Dependencies Using Bash\nDESCRIPTION: These commands illustrate the steps to install necessary third-party dependencies for the Make It Native app, using NPM for general dependencies and CocoaPods for iOS-specific dependencies. Ensure that Node.js and CocoaPods are installed before running these commands.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd ios && pod install && cd ..\n```\n\n----------------------------------------\n\nTITLE: Defining Native Template Configuration Structure in JSON\nDESCRIPTION: JSON schema defining the structure of the Native Template configuration. It includes properties for app details, capabilities, permissions, device targets, and orientation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"configVersion\": 2,\n    \"appName\": string,\n    \"appIdentifier\": string,\n    \"appVersion\": string,\n    \"bundleName\": {\n        \"main\": string,\n        \"dev\": string\n    },\n    \"buildNumber\": number,\n    \"deviceTarget\": {\n        \"phone\": boolean,\n        \"tablet\": boolean\n    },\n    \"capabilities\": {\n        \"appCenterOTA\": { \"enabled\": boolean },\n        \"crashlytics\": { \"enabled\": boolean },\n        \"deepLink\": { \"enabled\": boolean },\n        \"firebaseAndroid\": { \"enabled\": boolean },\n        \"firebaseIos\": { \"enabled\": boolean },\n        \"localNotifications\": { \"enabled\": boolean },\n        \"maps\": { \"enabled\": boolean },\n        \"mapsIos\": { \"enabled\": boolean },\n        \"pushNotifications\": { \"enabled\": boolean }\n    },\n    \"orientation\": {\n        \"portrait\": boolean,\n        \"landscape\": boolean\n    },\n    \"permissions\": [\n        {\n            \"name\": string,\n            \"title\": string,\n            \"platform\": string,\n            \"required\": boolean,\n            \"purpose\": string\n        }\n    ],\n    \"runtimeUrl\": string\n}\n```\n\n----------------------------------------\n\nTITLE: Updating React Native Import with Platform Detection\nDESCRIPTION: Modifies the import statement to include Platform from React Native, which allows for platform-specific styling or behavior in the component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View } from \"react-native\";\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View, Platform } from \"react-native\";\n```\n\n----------------------------------------\n\nTITLE: Creating a Published App Service in Mendix\nDESCRIPTION: Configure an app service that exposes the PublishProducts microflow with username and password authentication\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-data-to-other-mendix-apps-using-an-app-service.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix App Service Configuration\nCODE:\n```\nPublished App Service: Shop\n- Version: Created\n- Action: Products (uses PublishProducts microflow)\n- Authentication: Username and password\n- Status: Consumable\n```\n\n----------------------------------------\n\nTITLE: Updating Android Permissions in Manifest\nDESCRIPTION: This XML snippet demonstrates how to declare various permissions in the AndroidManifest.xml file for an Android application. It allows an app to request permissions that are necessary for its functioning, while emphasizing the importance of keeping only those permissions that are actively used. The permissions range from location access to reading contacts and managing phone calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/generic-permission-action.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  package=\"com.myawesomeapp\">\n\n  <!-- Keep only the permissions used in your app -->\n\n  <uses-permission android:name=\"android.permission.ACCEPT_HANDOVER\" />\n  <uses-permission android:name=\"android.permission.ACCESS_BACKGROUND_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACCESS_MEDIA_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACTIVITY_RECOGNITION\" />\n  <uses-permission android:name=\"com.android.voicemail.permission.ADD_VOICEMAIL\" />\n  <uses-permission android:name=\"android.permission.ANSWER_PHONE_CALLS\" />\n  <uses-permission android:name=\"android.permission.BLUETOOTH_ADVERTISE\" />\n  <uses-permission android:name=\"android.permission.BLUETOOTH_CONNECT\" />\n  <uses-permission android:name=\"android.permission.BLUETOOTH_SCAN\" />\n  <uses-permission android:name=\"android.permission.BODY_SENSORS\" />\n  <uses-permission android:name=\"android.permission.BODY_SENSORS_BACKGROUND\" />\n  <uses-permission android:name=\"android.permission.CALL_PHONE\" />\n  <uses-permission android:name=\"android.permission.CAMERA\" />\n  <uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\n  <uses-permission android:name=\"android.permission.NEARBY_WIFI_DEVICES\" />\n  <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" />\n  <uses-permission android:name=\"android.permission.PROCESS_OUTGOING_CALLS\" />\n  <uses-permission android:name=\"android.permission.READ_CALENDAR\" />\n  <uses-permission android:name=\"android.permission.READ_CALL_LOG\" />\n  <uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n  <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_AUDIO\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_VIDEO\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_VISUAL_USER_SELECTED\" />\n  <uses-permission android:name=\"android.permission.READ_PHONE_NUMBERS\" />\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\n  <uses-permission android:name=\"android.permission.READ_SMS\" />\n  <uses-permission android:name=\"android.permission.RECEIVE_MMS\" />\n  <uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n  <uses-permission android:name=\"android.permission.RECEIVE_WAP_PUSH\" />\n  <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n  <uses-permission android:name=\"android.permission.SEND_SMS\" />\n  <uses-permission android:name=\"android.permission.USE_SIP\" />\n  <uses-permission android:name=\"android.permission.UWB_RANGING\" />\n  <uses-permission android:name=\"android.permission.WRITE_CALENDAR\" />\n  <uses-permission android:name=\"android.permission.WRITE_CALL_LOG\" />\n  <uses-permission android:name=\"android.permission.WRITE_CONTACTS\" />\n  <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n  <uses-permission android:name=\"android.permission.SCHEDULE_EXACT_ALARM\" />\n\n  <!-- … -->\n\n</manifest>\n```\n\n----------------------------------------\n\nTITLE: Boolean Property Type Definition\nDESCRIPTION: Demonstrates how to define a boolean property that appears as a toggle in Studio Pro. It requires a defaultValue attribute and is passed as a boolean prop to the client component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myBoolean\" type=\"boolean\" defaultValue=\"false\">\n\t<caption>My boolean</caption>\n\t<description>My boolean setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Adding a Consumed REST Service Document in Mendix Studio Pro\nDESCRIPTION: Steps to add a new Consumed REST Service document to a Mendix project module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/consumed-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Right-click the module you want to add the Consumed REST Service document to.\n2. Select **Add other** > **Consumed REST service**. \n3. Name the service.\n4. Under **Add request(s)**, choose whether you want to add your request **Manually**, or **From OpenAPI/Swagger contract**.\n```\n\n----------------------------------------\n\nTITLE: Extending Default Class in JavaScript\nDESCRIPTION: Illustrates how to extend the default styling class of a Mendix widget by defining a JavaScript object that adds custom ViewStyle and TextStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ActionButton = {\n  container: {\n    // ViewStyle properties\n    borderWidth: 3\n  },\n  caption: {\n    // TextStyle properties\n    fontSize: 20\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Datasource Preview in TypeScript\nDESCRIPTION: Example implementation of getPreview function that creates a datasource preview with a drop zone. Shows how to combine datasource container with child components for widget previews.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nexports.getPreview = (values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => ({\n      type: \"Datasource\",\n      property: values.myDatasourceProp, // pass the datasource property\n      child: {\n        type: \"DropZone\",\n        property: values.myWidgetsProp\n      }\n    })\n```\n\n----------------------------------------\n\nTITLE: Defining Image Property in XML for Mendix Pluggable Widgets\nDESCRIPTION: Example of defining an image property that allows users to configure static or dynamic images. Shows property definition with caption and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"bgImage\" type=\"image\" required=\"false\">\n\t<caption>Background Image</caption>\n\t<description>Image shown blurred in a background</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Single-Call Prompt in Mendix\nDESCRIPTION: Uses Get Prompt for Context Object operation to retrieve system and user prompts for single-call implementations. Returns combined prompts in a PromptToUse object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/conversational-ui/prompt-management.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nGet Prompt for Context Object\n```\n\n----------------------------------------\n\nTITLE: Creating Entities with Attributes in Mendix Domain Model\nDESCRIPTION: Demonstrates how to create entities like Customer and Order with specific attributes using Mendix Studio Pro. Shows the process of adding entities to the domain model and defining their properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/create-a-basic-data-layer.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<entity name=\"Customer\">\n    <attribute name=\"Name\" type=\"String\" />\n</entity>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<entity name=\"Order\">\n    <attribute name=\"OrderStatus\" type=\"Enumeration\" />\n</entity>\n```\n\n----------------------------------------\n\nTITLE: Configuring Choropleth Map in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a choropleth map of US states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n[ {\n    \"type\": \"choropleth\",\n    \"locations\": [\"AZ\", \"CA\", \"VT\"],\n    \"locationmode\": \"USA-states\",\n    \"z\": [10,20,40],\n    \"name\": \"Choropleth data\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Label Section Properties for Login ID Text Box\nDESCRIPTION: This snippet provides a link to the label section properties documentation for the Login ID text box widget, detailing how to configure labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/login-id-text-box.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Rolling Back an Update with Native Builder CLI\nDESCRIPTION: Rolls back the current app version to a previous one using Native Builder CLI. Requires the project name and the label of the version to which you want to roll back.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\nnative-builder.exe release rollback-update --project-name \"CoolApp\" --label \"v1\"\n```\n\n----------------------------------------\n\nTITLE: Creating Certificate Signing Request (CSR) Using OpenSSL\nDESCRIPTION: Command to generate a certificate signing request (CSR) using the previously generated private key. This CSR will be uploaded to Apple Developer Center.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/managing-app-signing-keys.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" req -new -key \"C:\\private.key\" -out \"C:\\ios.csr\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Multiplication Microflow in Mendix Studio Pro with C#\nDESCRIPTION: Implements the CreateMultiplicationMicroflow method to generate a microflow that performs multiplication. It sets up parameters, return expressions, and creates a microflow call activity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nvoid CreateMultiplicationMicroflow(IModel currentApp, IFolderBase folder, IMicroflow callingMicroflow, string outputVariableName)\n{\n    var multiplication1Param = \"multiplication1\";\n    var multiplication2Param = \"multiplication2\";\n\n    var returnExpression = microflowExpressionService.CreateFromString($\"${multiplication1Param} * ${multiplication2Param}\");\n    var returnValue = new MicroflowReturnValue(DataType.Integer, returnExpression);\n\n    var multiplicationMicroflow = microflowService.CreateMicroflow(currentApp, folder, \"MultiplicationMicroflow\",\n        returnValue,\n        (multiplication1Param, DataType.Integer),\n        (multiplication2Param, DataType.Integer));\n\n    CreateMicroflowCallActivity(currentApp, callingMicroflow, multiplicationMicroflow,\n        outputVariableName,\n        (multiplication1Param, \"10\"),\n        (multiplication2Param, \"100\"));\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Text Format Log Subscriber\nDESCRIPTION: Request format for creating a basic text format log subscriber. Shows configuration for standard text output with INFO level logging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"create_log_subscriber\",\n  \"params\": {\n    \"type\": \"console\",\n    \"name\": \"SimpleTextLogSubscriber\",\n    \"autosubscribe\": \"INFO\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Page with Inspection Report Details\nDESCRIPTION: This snippet outlines the steps for creating a new page to display details and related checklist items for an inspection report in Mendix. It includes steps for configuring the page name, layout, and data source. Prerequisites include ensuring event configurations for the 'Details' button.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/configure-form.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Click the **Details** button and go its properties.\n\n2. In the **Events** section, set **Show a page** as an on-click event.\n\n3. In the **Select web page** dialog box, click **New**.\n\n4. In the **Create Page** dialog box, do the following:\n\n    1. Set the **Page name** to **Reports_Details**. \n    2. Set the **Layout** to **Atlas_Default**.\n    3. Choose **Forms** >**Form Vertical**.\n\n5. Click **OK**.\n```\n\n----------------------------------------\n\nTITLE: Calculating Days Between Dates in Java\nDESCRIPTION: The daysBetween function calculates the difference between two dates in days. It takes two DateTime parameters and returns a Positive Decimal value, considering time differences.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndaysBetween(dateTime(2007, 2, 13, 1, 1, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Publishing a Microflow as Web Service Operation\nDESCRIPTION: This snippet provides instructions on how to publish a microflow as a web service operation in Mendix, allowing it to be accessed via the web service created earlier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/expose-a-web-service.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nRight-click somewhere in the background of the microflow and select **Publish as Web service operation**:\nLocate the web service created in [4 Creating a Published Web Service](#4) and click **Select**:\nYou should now see the **Operation Operation** properties editor. Take note of the following tab details:\n* On the **General** tab, you can change the **Name** and **Documentation**:\n* On the **Parameters** tab, you can mark the input parameters as **Optional** and **Nillable**:\n* On the **Return type** tab you can configure the return type:\nClick **Select...** to select which attributes and associations of the return object **Customer** you want to expose:\nSelect the members you want to expose and click **OK**. Only the selected members will be returned by the web service.\nClick **OK** to save the operation.\n```\n\n----------------------------------------\n\nTITLE: Defining Enumeration Parsing Microflow in Mendix\nDESCRIPTION: This snippet demonstrates a microflow for parsing an enumeration value based on the input from an Excel file. Dependencies include the Mendix environment with appropriate domain models and attributes set up. The input is an unformatted status string from Excel, and the output is the corresponding enumeration value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-excel-documents/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nif $Unformatted = 'open' then MyFirstModule.OrderStatus.Open\nelse if $Unformatted = 'processing' then MyFirstModule.OrderStatus.Processing\nelse if $Unformatted = 'complete' then MyFirstModule.OrderStatus.Complete\nelse MyFirstModule.OrderStatus.Complete\n```\n\n----------------------------------------\n\nTITLE: Dynamic CSS Classes Configuration\nDESCRIPTION: Configuring dynamic CSS classes for widgets using expressions, allowing flexible styling based on data container attributes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nThe dynamic classes property allows you to specify one or more cascading stylesheet (CSS) class like the class property, but based on an [expression](/refguide8/expressions/).\n```\n\n----------------------------------------\n\nTITLE: String Data Type Examples\nDESCRIPTION: Represents textual data containing letters, numbers, spaces, and special characters. Supports various text representations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/data-types.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n'Hello World!'\n'Desiderius Erasmus'\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix Objects in JavaScript Actions\nDESCRIPTION: Shows how to create new Mendix objects using the mx.data.create API with callback and error handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmx.data.create({\n    entity: \"MyFirstModule.Cat\",\n    callback: function(object) {\n        console.log(\"Object created on server\");\n    },\n    error: function(error) {\n        console.error(\"Could not commit object:\", error);\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Multiple Constraints in XPath Query in Java\nDESCRIPTION: An XPath query with multiple constraints that retrieves customers named 'Jansen' who live in Rotterdam. This demonstrates adding additional constraints by opening a new set of brackets after closing the first.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen'][Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Generating Random Numbers in Mendix\nDESCRIPTION: Creates a random decimal number between 0.0 (inclusive) and 1.0 (exclusive). Used for generating random values in applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nrandom()\n```\n\n----------------------------------------\n\nTITLE: Boolean Property Type Definition\nDESCRIPTION: Illustrates the definition of a boolean property type with a default value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myBoolean\" type=\"boolean\" defaultValue=\"false\">\n\t<caption>My boolean</caption>\n\t<description>My boolean setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: XML Representation of One-to-One Association in Mendix\nDESCRIPTION: This XML code demonstrates how a one-to-one association between Customer and Profile entities is represented in Mendix. The association is stored in both entities with cross-references to each other's IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/associations/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<Profile id=\"401\">\n\t<religion>Buddhism</religion>\n\t<job>Chief Executive Officer</job>\n\t<website>http://www.apple.com/ </website>\n\t<Customer_Profile>id_201</Customer_Profile>\n</Profile>\n\n<Customer id=\"201\">\n\t<fullname>Steve Jobs</fullname>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n\t<Customer_Profile>id_401</Customer_Profile>\n</Customer>\n```\n\n----------------------------------------\n\nTITLE: Data Type Examples in JavaScript\nDESCRIPTION: Examples of different data types used in ATS, including strings, integers, booleans, and dates. Note that Float and Currency types are deprecated.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-general/guidelines-custom-action.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// String examples\n\"ATS123\"\n\"Helloworld!\"\n\n// Integer examples\n123\n4423\n\n// Boolean examples\ntrue\nfalse\n\n// Date/Time example\nnew Date(\"2017-06-13T16:17:44\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Notification Nanoflow in Mendix\nDESCRIPTION: This nanoflow creates string variables for notification content, checks for notification permissions, requests permissions if needed, and displays a local notification. It handles cases where permission is not granted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/native-local-notifications.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Create string variables for Title, Subtitle, and Body\n2. Add Has notification permission activity\n3. Add decision based on permission\n4. Add Request notification permission activity\n5. Add decision based on permission granted\n6. Add Show message activity for error case\n7. Add Merge activity\n8. Add Display Notification activity\n9. Set notification content using variables\n10. Configure notification settings (sound, action)\n```\n\n----------------------------------------\n\nTITLE: List Activities in Mendix\nDESCRIPTION: Provides activities for creating and manipulating lists of objects, including aggregation, list changes, list creation, and list operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Graphic | Name | Description |\n| --- | --- | --- |\n| Aggregate list | Allows you to calculate aggregated values such as the maximum, minimum, sum, average, and total amount of objects over a list of objects. |\n```\n\n----------------------------------------\n\nTITLE: Using DISTINCT with All Columns\nDESCRIPTION: Shows how to use DISTINCT with the asterisk wildcard to return only unique rows across all columns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nSELECT DISTINCT *\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Test Suite Prerequisites Alert\nDESCRIPTION: Markdown alert block specifying the prerequisites needed before starting with test suite creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/ht-one-create-a-test-suite.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nYou can add as many test cases and test suites as you want. \n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Result of Unary Minus on a Negative Variable in Mendix\nDESCRIPTION: This example shows the output when using the unary minus operator on a variable with a negative value (-7), resulting in a positive value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/unary-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n7\n```\n\n----------------------------------------\n\nTITLE: Configuring Log Levels via Script - Python\nDESCRIPTION: This Python script sets the log levels for specific nodes in a Mendix application. It can be run before the actual log levels exist to configure them in bulk.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/log-levels.md#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nimport requests, base64, json, sys\n\npayload = {\n    'action':'set_log_level',\n    'params': {'nodes' : [\n        { 'name':'ConnectionBus', 'level':'TRACE'},\n        { 'name':'ActionManager', 'level':'DEBUG'}\n        ], 'force':True}\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Multiplication Example in Java\nDESCRIPTION: Simple multiplication operation between two integers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n2*3\n```\n\n----------------------------------------\n\nTITLE: Using getCaption Function with Enumerations in Mendix (Java)\nDESCRIPTION: Example of using the getCaption function to retrieve the translatable caption of an enumeration value. This function returns different results based on the current language.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ngetCaption($Customer/Grade)\n```\n\n----------------------------------------\n\nTITLE: Configuring Widget Visibility Based on Expression in Mendix\nDESCRIPTION: This snippet demonstrates how to use an expression to control widget visibility in Mendix. It shows an example of making a button visible only when a specific attribute has a value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/common-widget-properties.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n$currentObject/myAttribute != empty\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Single Year Parameter\nDESCRIPTION: Creates a datetime object using only the year parameter. Returns date set to January 1st at midnight of specified year.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007)\n```\n\n----------------------------------------\n\nTITLE: Port Tunneling for Android Device Connection\nDESCRIPTION: Shell command to reverse TCP ports for connecting Android device to local Mendix development environment using ADB (Android Debug Bridge)\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/getting-started-with-mobile/prerequisites.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nadb reverse tcp:8080 tcp:8080\nadb reverse tcp:8083 tcp:8083\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix Apps in OpenShift/Kubernetes Namespace\nDESCRIPTION: Commands to list all Mendix applications in a specific namespace for both OpenShift and Kubernetes platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} get mendixapp\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} get mendixapp\n```\n\n----------------------------------------\n\nTITLE: Importing a WSDL in Mendix\nDESCRIPTION: This snippet outlines the steps required to import a WSDL file into the Mendix platform, allowing access to web services defined within the WSDL. The WSDL is sourced from a specified URL and imported into a Mendix project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/consume-a-simple-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n1. Right-click your module in the **Project Explorer** and select **Add other** > **Consumed web service**:\n2. Enter a name for the new consumed web service (for example, *TemperatureConverter*):\n3. Click **OK**. You will now see the **Consumed Web Service** screen. Click **Edit**. Enter `https://www.w3schools.com/xml/tempconvert.asmx?wsdl` as the **URL** and click **Import**.\n4. The **Select Ports** dialog box is displayed for selecting a web service port:\n5. Click **OK** to select the default, and click **OK** to close the **WSDL Source** dialog. The operations **CelsiusToFahrenheit** and **FahrenheitToCelsius** will now be imported into the project.\n```\n\n----------------------------------------\n\nTITLE: Introducing navigability property in ODataRemoteAssociationSource Element\nDESCRIPTION: This snippet covers the introduction of the `navigability` property in the ODataRemoteAssociationSource element, indicating the traversable directions of associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.16.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n* We introduced the `navigability` property to answer: \"In which direction (or directions) can this association be traversed?\"\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request for Updating User Status\nDESCRIPTION: HTTP request example showing how to deactivate a user account using the User Management API. The request includes required headers and a JSON payload specifying the new active status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_6\n\nLANGUAGE: http\nCODE:\n```\nPOST /legacy-api/1/users/https%3A%2F%2Fmxid2.mendix.dev%2Fmxid2%2Fid%3Fid%3D51b54074-a66c-4337-8488-aac89bf47a2d HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n\n{\n   \"activeStatus\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Datasource Property in XML for Mendix Pluggable Widget\nDESCRIPTION: XML snippet demonstrating how to define a datasource property for a pluggable widget in Mendix. It specifies a non-required list datasource property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"data\" type=\"datasource\" isList=\"true\" required=\"false\">\n\t<caption>Data source</caption>\n\t<description />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Creating Icon Renderer for Group Box in TypeScript\nDESCRIPTION: Implements an arrow function to render the appropriate icon based on the group box's collapsed state, using React Native components. This method relies on the component's props and state to determine which icon to display.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_35\n\nLANGUAGE: TypeScript\nCODE:\n```\nprivate renderIcon = (): ReactNode => {\\n    const { collapseIcon, expandIcon } = this.props;\\n\\n    if (this.state.collapsed) {\\n        return expandIcon ? expandIcon : <Text style={this.styles.headerContent}>+</Text>;\\n    }\\n\\n    return collapseIcon ? collapseIcon : <Text style={this.styles.headerContent}>-</Text>;\\n};\n```\n\n----------------------------------------\n\nTITLE: Checking Node.js Version\nDESCRIPTION: Command to verify the installed version of Node.js.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ node --version\nv18.20.8\n```\n\n----------------------------------------\n\nTITLE: Parsing DateTime String in Java (Mendix)\nDESCRIPTION: Demonstrates the use of parseDateTime function to convert a string representation of a date into a Date and time object. The function can handle different date formats and optionally provide a default value if parsing fails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseDateTime('2015-05-21', 'yyyy-MM-dd')\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDateTime('noDateTime', 'dd-MM-yyyy', dateTime(2007))\n```\n\n----------------------------------------\n\nTITLE: Global Chart Configuration Options with Localization\nDESCRIPTION: JSON configuration for global chart settings including mode bar customization and localization settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"displayModeBar\": true,\n  \"displaylogo\": false,\n  \"modeBarButtonsToRemove\": [ \"sendDataToCloud\", \"lasso2d\", \"select2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"toggleSpikelines\" ],\n  \"locale\": \"nl\",\n  \"locales\": {\n\t\t\"nl\": {\n\t\t\t\"dictionary\": {\n\t\t\t\t\"Download plot as a png\": \"Opslaan als PNG\"\n\t\t\t},\n\t\t\t\"format\": {\n\t\t\t\t\"days\": [\"zondag\",\n\t\t\t\t\"maandag\",\n\t\t\t\t\"dinsdag\",\n\t\t\t\t\"woensdag\",\n\t\t\t\t\"donderdag\",\n\t\t\t\t\"vrijdag\",\n\t\t\t\t\"zaterdag\"],\n\t\t\t\t\"shortDays\": [\"zon\",\n\t\t\t\t\"maa\",\n\t\t\t\t\"din\",\n\t\t\t\t\"woe\",\n\t\t\t\t\"don\",\n\t\t\t\t\"vri\",\n\t\t\t\t\"zat\"],\n\t\t\t\t\"months\": [\"januari\",\n\t\t\t\t\"februari\",\n\t\t\t\t\"maart\",\n\t\t\t\t\"april\",\n\t\t\t\t\"mei\",\n\t\t\t\t\"juni\",\n\t\t\t\t\"juli\",\n\t\t\t\t\"augustus\",\n\t\t\t\t\"september\",\n\t\t\t\t\"oktober\",\n\t\t\t\t\"november\",\n\t\t\t\t\"december\"],\n\t\t\t\t\"shortMonths\": [\"jan\",\n\t\t\t\t\"feb\",\n\t\t\t\t\"maa\",\n\t\t\t\t\"apr\",\n\t\t\t\t\"mei\",\n\t\t\t\t\"jun\",\n\t\t\t\t\"jul\",\n\t\t\t\t\"aug\",\n\t\t\t\t\"sep\",\n\t\t\t\t\"okt\",\n\t\t\t\t\"nov\",\n\t\t\t\t\"dec\"],\n\t\t\t\t\"date\": \"%d-%m-%Y\",\n\t\t\t\t\"datetime\": \"%d-%m-%Y %H:%M\",\n\t\t\t\t\"year\": \"%Y\",\n\t\t\t\t\"month\": \"%b %Y\",\n\t\t\t\t\"dayMonth\": \"%d %b\",\n\t\t\t\t\"dayMonthYear\": \"%d %b %Y\"\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Detailed Test Case Results in Mendix ATS API (XML)\nDESCRIPTION: An XML SOAP response example from the GetTestRunResponse endpoint that includes execution flags and detailed information for each test case including name, result, duration, and error messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Body>\n    <tns:GetTestRunResponse>\n      <TestRun>\n        <ExecutionStatus>[key]</ExecutionStatus>\n        <ExecutionResult>[key]</ExecutionResult>\n        <ErrorMessage>exampleString</ErrorMessage>\n        <ExecutionFlags>\n            <Flags>\n                <Canceled>true</Canceled>\n                <Warning>false</Warning>\n            </Flags>\n        </ExecutionFlags>\n        <ExecutionDetailsPerTestCase>\n          <ExecutionDetailsTestCase>\n            <Name>exampleString</Name>\n            <Result>[key]</Result>\n            <Duration>00:00:04</Duration>\n          </ExecutionDetailsTestCase>\n          <ExecutionDetailsTestCase>\n            <Name>exampleString</Name>\n            <Result>[key]</Result>\n            <Duration>00:01:37</Duration>\n            <ErrorMessage>exampleString</ErrorMessage>\n          </ExecutionDetailsTestCase>\n        </ExecutionDetailsPerTestCase>\n      </TestRun>\n    </tns:GetTestRunResponse>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Using LessThanOrEqual Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the lessThanOrEqual helper to filter items where an attribute value is less than or equal to a specified literal value. Works with String, HashString, Enumeration, AutoNumber, Integer, Long, Decimal, and DateTime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_35\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is less than or equals 42\nconst filterCondition = lessThanOrEqual(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Querying Customer by Order ID (Direct Association) Using XPath\nDESCRIPTION: This snippet demonstrates how to retrieve the customer who placed the order with the given unique identification number, using the direct association. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order = 124123512341]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Sales.Customer_Order = 124123512341]\n```\n\n----------------------------------------\n\nTITLE: Disabling All Button Styles in SCSS\nDESCRIPTION: This snippet demonstrates how to completely disable default styling for the button widget in Mendix by setting the `$exclude-button` variable to `true` in the *exclusion-variables.scss* file. This removes both the base and helper styles, revealing the underlying Bootstrap styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_12\n\nLANGUAGE: scss\nCODE:\n```\n\"$exclude-button: true;\n$exclude-button-helpers: true;\"\n```\n\n----------------------------------------\n\nTITLE: Excluding Layouts and Page Templates in JSON\nDESCRIPTION: Demonstrates how to exclude Atlas Core layouts and page templates to prevent developers from using them when creating new pages. Existing pages with banned designs will continue to work.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Core\": {\n            \"layouts\": true,\n            \"pageTemplates\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: UNION with ORDER BY and LIMIT\nDESCRIPTION: Shows how to sort and limit combined results from a UNION operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_48\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nUNION\nSELECT FirstName, LastName\nFROM Sales.Customer\nORDER BY FirstName, LastName\nLIMIT 4\n```\n\n----------------------------------------\n\nTITLE: Run Configuration Fields Example\nDESCRIPTION: Displays the configuration fields needed to execute a test case in ATS\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/ht-one-getting-started.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Description |\n| --- | --- |\n| **Application** | Select the app you want to test. |\n| **Selenium Hub** | Select the Selenium hub you want to use to execute the test case. |\n| **Browser** | Select the browser that the Selenium hub uses to execute the test case. Please note that these are the supported browsers. |\n```\n\n----------------------------------------\n\nTITLE: Creating SQL Query for Product-Category View Entity in Mendix\nDESCRIPTION: SQL query that joins Product and Category entities to create a view entity that exposes selected product details. The query selects specific fields from both entities and defines their relationship through a join operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/abstracting-data.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  p.ProductId as ProductId\n  , p.ProductName as ProductName\n  , p.QuantityPerUnit as QuantityPerUnit\n  , p.Discontinued as Discontinued\n  , c.CategoryName as Category\n  , c.CategoryId as CategoryId\nFROM ShopAddOn.Product as p\n  JOIN p/ShopAddOn.Product_Category/ShopAddOn.Category as c\n```\n\n----------------------------------------\n\nTITLE: Layout YAML Metadata Configuration\nDESCRIPTION: YAML front matter defining layout documentation metadata including title, URL, and weight\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/page-resources/layout/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Layout\"\nurl: /refguide9/layout/\nweight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Updating StringBody Element Properties (Markdown)\nDESCRIPTION: Removes the 'value' property and introduces a new 'valueTemplate' property in the StringBody element of the Rest module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.11.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n#### StringBody (Element)\n\n* We deleted the `value` property. Info: \"Use valueTemplate instead.\"\n* We introduced the `valueTemplate` property. Info: \"String version of the request body using ValueTemplate.\"\n```\n\n----------------------------------------\n\nTITLE: Updating Container Component Props in TypeScript\nDESCRIPTION: This TypeScript code updates the container component to use the new headerCaption prop instead of the previous yourName prop when rendering the WrappedGroupBox component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\nreturn <WrappedGroupBox headerCaption={this.props.headerCaption} style={this.props.style} />;\n```\n\n----------------------------------------\n\nTITLE: Table Configuration YAML Frontmatter\nDESCRIPTION: YAML metadata for Mendix documentation page defining title, URL, and weight\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/structure-widgets/table.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Table\"\nurl: /refguide/table/\nweight: 60\n---\n```\n\n----------------------------------------\n\nTITLE: Setting XSUAAEnabled Constant for SAP Destination Service Authentication\nDESCRIPTION: This code snippet shows how to set the XSUAAEnabled constant to control authentication for the SAP Destination Service. Set to true for XSUAA authentication, false for NoAuthentication or BasicAuthentication without XSUAA.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/sap-btp/sap-destination-service.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/deployment/sap-btp/sap-destination-service/xsuaaenabled.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Metrics Filter Examples with StatsD\nDESCRIPTION: Example of using filters to accept specific metrics in a StatsD registry configuration. It shows how to selectively include metrics that start with certain prefixes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": { \"protocol\": \"TCP\" },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"accept\", \"values\" : [\"app.\", \"employee.\", \"myapp.\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating a Secret for Grafana Admin Credentials\nDESCRIPTION: Command to create a secret containing the Grafana admin username and password. Replace {project} with your project name, {username} with the admin username, and {password} with the admin password.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\noc --namespace {project} create secret generic grafana-admin --from-literal=admin-user={username} --from-literal=admin-password={password}\n```\n\n----------------------------------------\n\nTITLE: Calling GitHub API for User Search with JavaScript Action in Mendix\nDESCRIPTION: This code demonstrates how to make a REST call to the GitHub API's search/users endpoint. The example URL shows a GET request to https://api.github.com/search/users?q=test which returns JSON data about GitHub users matching the search query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_0\n\nLANGUAGE: HTTP\nCODE:\n```\nhttps://api.github.com/search/users?q=test\n```\n\n----------------------------------------\n\nTITLE: Executing JavaScript with Arguments Example\nDESCRIPTION: An example of using the Execute JavaScript String action in ATS. The JavaScript code would reference optional arguments using the arguments array (e.g., arguments[0], arguments[1], etc.) and must return a string value for successful execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-execute-javascript-string.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\narguments[0]\n```\n\n----------------------------------------\n\nTITLE: Creating a Webhook in Mendix using POST Request\nDESCRIPTION: Example of a POST request to create a new webhook for a Mendix application. The app ID is included in the URL path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/webhooks-api.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST /apps/80a28d6e-c5fc-43d9-87c2-d7d56b07542e/webhooks\n```\n\n----------------------------------------\n\nTITLE: Naming Conventions for JavaScript Actions\nDESCRIPTION: Guidelines for creating clear and descriptive action names that follow the 'VerbNoun' pattern and provide self-explanatory parameter names\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Good example: GetUser\n// Good example: OpenCamera\n```\n\n----------------------------------------\n\nTITLE: Subtracting Hours from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 1 hour from a specific date and time using the subtractHours function. The function takes a datetime value and an integer representing hours to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nsubtractHours(dateTime(2007, 1, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Releasing Optional Update for Mendix Native App\nDESCRIPTION: This command uses native-builder to push an optional update for a Mendix Native App. It specifies the project name, target version, build number, rollout percentage, and sets the update as non-mandatory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nnative-builder.exe release push-update --project-name \"CoolApp\" --target-version \"1.0.0\" --build-number 1 --rollout-percentage 100 --mandatory false\n```\n\n----------------------------------------\n\nTITLE: Defining Accountants and Groups in XML\nDESCRIPTION: This XML snippet demonstrates the structure for defining 'Accountant' and 'Group' entities in a many-to-many association, where each Accountant can belong to multiple Groups and vice versa. Each entity includes attributes such as id number and phone number, and the associations are denoted under 'Accountant_Group'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<Accountant id=\"501\">\n\t<idnumber>1</idnumber>\n\t<name>Earl Grey</name>\n\t<telephonenumber>1-800-EARL-GREY</telephonenumber>\n\t<Accountant_Group>id_301 id_302</Accountant_Group>\n</Accountant>\n\n<Accountant id=\"502\">\n\t<idnumber>2</idnumber>\n\t<name>Scrooge McDuck</name>\n\t<telephonenumber>1-800-SCROOGE-MCDUCK</telephonenumber>\n\t<Accountant_Group>id_301 id_302</Accountant_Group>\n</Accountant>\n\n<Group id=\"301\">\n\t<name>Multinational corporations</name>\n\t<Accountant_Group>id_501 id_502</Accountant_Group>\n</Group>\n\n<Group id=\"302\">\n\t<name>Hardware suppliers</name>\n\t<Accountant_Group>id_501 id_502</Accountant_Group>\n</Group>\n```\n\n----------------------------------------\n\nTITLE: Design Properties for Container Widget\nDESCRIPTION: Example JSON configuration showing how to extend container widget with custom design properties including alignment and border options\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n \"pageTemplates\": \"WebModeler\",\n \"cssFiles\": [\"styles/web/css/main.css\"],\n \"designProperties\": {\n  \"DivContainer\": [\n  \t{\n  \t\t\"name\": \"Align content\",\n  \t\t\"type\": \"Dropdown\",\n  \t\t\"description\": \"Align content of this element left, right or center it. Align elements inside the container as a row or as a column.\",\n  \t\t\"options\": [\n  \t\t\t\t{\n  \t\t\t\t\t\"name\": \"Left align as a row\",\n  \t\t\t\t\t\"oldNames\": [\"Left align as row\"],\n  \t\t\t\t\t\"class\": \"row-left\"\n  \t\t\t\t},\n  \t\t\t\t{\n  \t\t\t\t\t\"name\": \"Center align as a row\",\n    \t\t\t\t\"oldNames\": [\"Center align as row\"],\n  \t\t\t\t\t\"class\": \"row-center\"\n  \t\t\t\t},\n  \t\t\t\t{\n  \t\t\t\t\t\"name\": \"Right align as a row\",\n  \t\t\t\t\t\"oldNames\": [\"Right align as row\"],\n  \t\t\t\t\t\"class\": \"row-right\"\n   \t\t\t\t}\n   \t\t]\n   },\n   {\n    \"name\": \"Border\",\n    \"type\": \"Toggle\",\n    \"description\": \"Add a border.\",\n    \"class\": \"div-container-border\"\n   }\n  ]\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Division and Multiplication Chain in Java\nDESCRIPTION: Example demonstrating potential precision issues when chaining division and multiplication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n(3 : 7) * 7\n```\n\n----------------------------------------\n\nTITLE: Committing Employee Object Changes in JSON (Mendix Client to Runtime Server)\nDESCRIPTION: This JSON request is sent to commit the changes made to an Employee object. It includes the object's GUID to identify which object should be committed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"commit\",\n   \"params\":{\n      \"guid\":\"281474976710757\"\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee6e9b5eddc0\":25\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Extracting Pages and Domain Models in TypeScript\nDESCRIPTION: This snippet demonstrates how to import the pages and domain models components from the Mendix model using destructuring assignment. By extracting these components, developers can interact with the respective elements in the model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/model-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst { pages, domainModels } = studioPro.app.model;\n```\n\n----------------------------------------\n\nTITLE: Setting Breakpoints in Eclipse for Mendix Java Actions\nDESCRIPTION: Demonstrates how to set and toggle breakpoints in Java source code using keyboard shortcuts in Eclipse. Breakpoints are crucial for stepping through and inspecting code execution during debugging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/debug-java-actions/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic void reverseCustomerName() {\n    // Breakpoint can be set on this line\n    String customerName = \"Example\";\n    // Debug steps can be performed here\n}\n```\n\n----------------------------------------\n\nTITLE: Exposing Custom Native Styles in Main JavaScript\nDESCRIPTION: Imports the custom style object and exports it in the main.js file to make it available for use in the native mobile application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {companyHeader} from \"./company-header\";\nmodule.exports = {companyHeader};\n```\n\n----------------------------------------\n\nTITLE: Summing Total Prices using sum() - Java\nDESCRIPTION: The 'sum()' function aggregates the total prices of all specified objects. Outputs a single numeric value that represents the cumulative total price.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-aggregate-functions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nsum(//Sales.Order/TotalPrice)\n```\n\nLANGUAGE: java\nCODE:\n```\nsum(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Enabling Linkerd Injection for Application Namespace\nDESCRIPTION: This bash command annotates a Kubernetes namespace to enable Linkerd injection for the application deployment, which is necessary for integrating Linkerd with Mendix for Private Cloud.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-advanced-ingress-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl annotate {namespace} linkerd.io/inject=enabled\n```\n\n----------------------------------------\n\nTITLE: Configuring Instance Access XPath for Anonymous Users\nDESCRIPTION: XPath constraint to limit anonymous users to only modify records they created during their session.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/set-up-anonymous-user-security.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[System.Owner='[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Adding Finalizers to Mendix StorageInstances\nDESCRIPTION: Optional command to add finalizers to StorageInstances after restoring the backup, ensuring proper cleanup of storage from deleted environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-velero.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch storageinstances $(kubectl get storageinstances --no-headers -o custom-columns=\":metadata.name\") -p '{\"metadata\":{\"finalizers\":[\"privatecloud.mendix.com/storage-provisioner\"]}}' --type=merge\n```\n\n----------------------------------------\n\nTITLE: Defining an Enumeration Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet shows how to define an enumeration property for a pluggable widget. It includes the 'enumerationValues' element with multiple 'enumerationValue' options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n\t<property key=\"myEnumeration\" type=\"enumeration\" defaultValue=\"blue\">\n\t\t<caption>My enumeration</caption>\n\t\t<description>My enumeration setting</description>\n\t\t<enumerationValues>\n\t\t\t<enumerationValue key=\"red\">Red</enumerationValue>\n\t\t\t<enumerationValue key=\"green\">Green</enumerationValue>\n\t\t\t<enumerationValue key=\"blue\">Blue</enumerationValue>\n\t\t</enumerationValues>\n\t</property>\n```\n\n----------------------------------------\n\nTITLE: List Value Interface Definition in TypeScript\nDESCRIPTION: Defines the ListValue interface for representing lists of objects in Mendix client components, with methods for pagination control and access to list metadata such as total count and items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ObjectItem {\n    id: GUID;\n}\n\nexport interface ListValue {\n    status: ValueStatus;\n    offset: number;\n    limit: number;\n    setOffset(offset: number): void;\n    setLimit(limit: Option<number>): void;\n    items?: ObjectItem[];\n    hasMoreItems?: boolean;\n    totalCount?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Multiline String Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet shows how to define a multiline string property for a pluggable widget. It includes the 'multiline' attribute set to 'true' to enable multiline input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myStringMultiline\" type=\"string\" multiline=\"true\">\n\t<caption>My string multiline</caption>\n\t<description>My string multiline setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Fill and Area Properties\nDESCRIPTION: JSON configuration for area charts showing how to style line colors, shapes, and fill properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"line\": {\n    \"color\": \"#17202A\",\n    \"shape\": \"linear\",\n    \"dash\": \"dot\"\n  },\n  \"type\": \"scatter\",\n  \"fill\": \"tonexty\",\n  \"fillcolor\": \"#B2BABB\"\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Log Level Script via PowerShell\nDESCRIPTION: PowerShell command demonstrating how to execute the Python log level configuration script with specific parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/logging/log-levels.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\LogDemoApp\\python\nλ python setlogs.py 87a32a3e-c6db-4bc8-9fa3-7cd5b108eaec 8090\n{\"feedback\":{},\"result\":0}\n```\n\n----------------------------------------\n\nTITLE: Creating Date with dateTime function and six parameters\nDESCRIPTION: This snippet demonstrates how to create a date using the `dateTime` function with year, month, day, hour, minute, and second parameters. The `dateTime` function utilizes the session's calendar, whereas `dateTimeUTC` uses UTC. It returns a date object with the year set to 2007, the month set to January, the day set to 1, the hour set to 1, the minute set to 1, and the second set to 1.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1, 1, 1)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Custom Date Format Specification\nDESCRIPTION: This snippet specifies how to format custom date values in a date-type attribute within the search bar. It outlines the symbols that can be used for formatting and provides information on handling exact day inputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/grids/search-bar.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/custom-date-format-tokens.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Rolling Back to a Previous Deployment Release\nDESCRIPTION: Command to revert to a previous deployment release with the same target version. Creates a new deployment using a previous release specified by the label parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe release rollback-update --project-name \"CoolApp\" --label \"v4\"\n```\n\n----------------------------------------\n\nTITLE: Converting Mendix Apps using mx convert\nDESCRIPTION: Command pattern for converting Mendix applications to a specific Studio Pro version. Supports single file, directory, or multiple files as input. Options include in-place conversion and error checking skip.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mx-command-line-tool.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmx convert [OPTIONS] INPUT... OUTPUT\n```\n\n----------------------------------------\n\nTITLE: Checking Out Specific Mendix Branch Using Bash\nDESCRIPTION: This Bash snippet showcases how to check out a specific branch from the Mendix Git repository, specified by \\\"<BRANCH_NAME>\\\". It's critical for ensuring compatibility with the desired Mendix version. The example given checks out the branch for Mendix version 10.0.0.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout <BRANCH_NAME>>>\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout mx/10.0\n```\n\n----------------------------------------\n\nTITLE: Mendix Runtime API: Accessing Database Settings\nDESCRIPTION: This code snippet shows how to access database settings as a string using the `getDatabaseSettingAsString()` method in the Mendix Runtime API. This allows developers to retrieve database configuration information programmatically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"getDatabaseSettingAsString()\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Scatter Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a scatter plot with text labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"text\": [ \"A\", \"B\", \"C\" ],\n  \"textposition\": \"left center\",\n  \"mode\": \"markers+text\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Configuring Mapbox CSP\nDESCRIPTION: This code snippet provides the Content Security Policy configuration for integrating Mapbox into a Mendix application. It includes directives for enabling blob resources for workers and child sources, allowing images from blob and data sources, and establishing connections with specific Mapbox APIs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/map.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nworker-src blob: ;\nchild-src blob: ;\nimg-src data: blob: ;\nconnect-src https://api.mapbox.com https://events.mapbox.com ;\n```\n\n----------------------------------------\n\nTITLE: Creating Additional PCLM Users\nDESCRIPTION: Command to create additional operator or admin users for the PCLM server. Operator users have read-only access to license resources, while admin users have full read-write permissions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli user create \\\n  -s <pclm-http-url> -u <admin-user> -p <admin-password> \\\n  --username=<new-user>  --password='<password>' --type=<user-type> \\\n  --custom-tls-cert-path=<custom-ca-cert-path>\n```\n\n----------------------------------------\n\nTITLE: Restarting Mendix Operator for Network Resource Changes in Kubernetes\nDESCRIPTION: The provided shell script demonstrates how to restart the Mendix Operator when switching between ingress and OpenShift routes in Kubernetes. It is necessary to replace `{namespace}` with the specific namespace where the Mendix Operator is installed. This script is intended for users managing Mendix applications in a Kubernetes environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_33\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} scale deployment mendix-operator --replicas=0\nkubectl -n {namespace} scale deployment mendix-operator --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Supplier Names and IDs with OQL\nDESCRIPTION: SQL query that selects supplier identifiers and company names from the Supplier entity, creating a view entity for use in selection components like combo boxes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  s.SupplierId as SupplierId,\n  s.CompanyName as SupplierName\nFROM Shop.Supplier s\n```\n\n----------------------------------------\n\nTITLE: Styling SVG Icons in React Native\nDESCRIPTION: This JSX code defines a style object for a button, specifying the background color, caption color, and icon color. This allows for customizing the appearance of buttons and their associated SVG icons within a Mendix native mobile app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n\"export const DemoButton = {\\n\\tcontainer: {\\n\\t\\tbackgroundColor: 'green'\\n\\t},\\n\\tcaption: {\\n\\t\\tcolor: 'orange'\\n\\t},\\n\\ticon: {\\n\\t\\tcolor: 'blue'\\n\\t}\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Tab Content with React in TypeScript\nDESCRIPTION: A simple React component that renders tab content. This example shows the implementation for 'tab3', which would be placed in the corresponding folder structure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/tab-api.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <StrictMode>\n    <h1>tab3</h1>\n  </StrictMode>\n);\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Authentication\nDESCRIPTION: Command to enable Kubernetes authentication method in Vault\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nvault auth enable kubernetes\n```\n\n----------------------------------------\n\nTITLE: Configuring CalculateRoute Activity with Required Parameters\nDESCRIPTION: Code showing the required parameters for the CalculateRoute activity including credentials, region, calculator name, and position coordinates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-location-service.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<CalculateRoute>\n    <credentials>$credentials</credentials>\n    <region>us-east-1</region>\n    <request>\n        <CalculatorName>YourCalculatorName</CalculatorName>\n        <DeparturePosition>\n            <Longitude>-122.3394</Longitude>\n            <Latitude>47.6159</Latitude>\n        </DeparturePosition>\n        <DestinationPosition>\n            <Longitude>-122.3140</Longitude>\n            <Latitude>47.6290</Latitude>\n        </DestinationPosition>\n    </request>\n</CalculateRoute>\n```\n\n----------------------------------------\n\nTITLE: Defining and Using ListAttributeValue Interface\nDESCRIPTION: This snippet defines the `ListAttributeValue` interface to manage attribute properties linked to a `ListValue`. The code provides functionality for accessing values of list items with support for readonly values only. It includes parameters for identifier, sorting, and filtering capabilities, and showcases how to determine the attribute type and format attribute values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_17\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ListAttributeValue<T extends AttributeValue> {\\n    get: (item: ObjectItem) => EditableValue<T>; // NOTE: EditableValue obtained from ListAttributeValue always readonly\\n\\n    id: ListAttributeId;\\n    sortable: boolean;\\n    filterable: boolean;\\n\\n    type: AttributeType;\\n\\n    formatter: ValueFormatter<T>;\\n    universe: Option<T[]>; // only for attributes of type Enumeration\\n}\\n\\ninterface MyListWidgetsProps {\\n    myDataSource: ListValue;\\n    myAttributeOnDatasource: ListAttributeValue<string>;\\n}\\n\\nconst attributeValue = this.props.myAttributeOnDatasource.get(this.props.myDataSource.items[0]);\\n\\nif (this.props.myAttributeOnDatasource.type === \\\"String\\\") {\\n    console.log(\\\"String attribute\\\");\\n} else if (this.props.myAttributeOnDatasource.type === \\\"Integer\\\") {\\n    console.log(\\\"Integer attribute\\\");\\n} else {\\n    console.log(\\\"Not a String/Integer attribute\\\");\\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Web View Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the web view widget in Mendix native mobile applications. It includes styles for the container, error container, and error text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_webview_WebView = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  errorContainer: {\n    // This has all ViewStyle properties.\n  },\n  errorText: {\n    // This has all TextSTyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section for Static Image Widget\nDESCRIPTION: This snippet includes the visibility properties section for the Static Image widget, which dictates when the image is displayed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/image.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Authentication\nDESCRIPTION: Commands to configure Kubernetes authentication with service account token and certificates\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nvault write auth/kubernetes/config \\\nkubernetes_host=https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT \\\nkubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n```\n\n----------------------------------------\n\nTITLE: OQL ORDER BY Example (Ascending)\nDESCRIPTION: This code snippet demonstrates a query that retrieves the first names of all customers from the `Sales.Customer` entity.  The results are sorted in ascending order based on the `LastName` attribute.  Ascending order is the default so the `ASC` keyword is not needed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-order-by-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n\"SELECT FirstName FROM Sales.Customer\\nORDER BY LastName\"\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Result Example in Java (False case)\nDESCRIPTION: Shows the Boolean output of a less than or equal to comparison, returning False.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFalse\n```\n\n----------------------------------------\n\nTITLE: Python Script for Setting Log Levels\nDESCRIPTION: Python script that configures log levels for ConnectionBus and ActionManager components through the runtime admin port. Sets ConnectionBus to TRACE level and ActionManager to DEBUG level.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/log-levels.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport requests, base64, json, sys\n\npayload = {\n    'action':'set_log_level',\n    'params': {'nodes' : [\n        { 'name':'ConnectionBus', 'level':'TRACE'},\n        { 'name':'ActionManager', 'level':'DEBUG'}\n        ], 'force':True}\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting Activities in a Microflow Flow in C#\nDESCRIPTION: This snippet shows how to use TryInsertAfterStart and TryInsertBeforeActivity methods to add activities to a microflow. Activities can be added right after the start event or before another specific activity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nmicroflowService.TryInsertAfterStart(microflow, newActivity);\nmicroflowService.TryInsertBeforeActivity(newAactivity, existingActivity);\n```\n\n----------------------------------------\n\nTITLE: Ceiling Rounding with ceil Function\nDESCRIPTION: Rounds up a number to the nearest integer, always returning the smallest integer greater than or equal to the input value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nceil(3.2)\n```\n\nLANGUAGE: java\nCODE:\n```\nceil(-1.9)\n```\n\n----------------------------------------\n\nTITLE: Checking Whether an Object Is New in Mendix (Java)\nDESCRIPTION: Illustrates how to check if an object is new (created but not yet committed) in Mendix expressions. The function returns a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nisNew($object1)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Dataset OQL Query in Mendix\nDESCRIPTION: Create a microflow action that executes OQL queries defined in Mendix Datasets, providing compile-time query validation and runtime execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/howto-datastorage-api.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nCore.createOQLTextGetRequestFromDataSet(datasetName)\n```\n\n----------------------------------------\n\nTITLE: Return Value Table for Get BooleanSlider Value in Markdown\nDESCRIPTION: Markdown table describing the return value of the Get BooleanSlider Value function. It specifies the name, datatype, and description of the Value returned by the function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/booleanslider/rg-one-get-booleanslider-value.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nValue | String | The current active value of the widget.\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Result Example in Java (True case)\nDESCRIPTION: Shows the Boolean output of a less than or equal to comparison with equal values, returning True.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nTrue\n```\n\n----------------------------------------\n\nTITLE: Implementing Validation with Consistency Checks in TypeScript\nDESCRIPTION: This code defines a check function that validates widget data using the ValuesAPI. It returns an array of Problem objects that will be displayed in the Studio Pro Errors pane.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nfunction check(values: ValuesAPI): Problem[]\n```\n\n----------------------------------------\n\nTITLE: Using StartsWith String Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the startsWith helper to filter items where an attribute value begins with a specified substring. Works with String, Integer, Long, and Decimal attributes and String literals for both text and numeric comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_37\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrStr = attribute(this.props.myAttributeA.id); // string attribute\nconst subStr = literal(\"secret\");\n\n// filter keeps items where value starts with substring \"secret\"\n// like \"secret file\", but not \"my secret password\" or \"top secret\"\nconst filterCondition1 = startsWith(attrStr, subStr);\n\n// also works with numeric attributes\nconst attrNum = attribute(this.props.myAttributeB.id); // integer attribute\nconst subNum = literal(\"1337\");\n\n// filter keeps items where value stats with sequence of numbers \"1337\"\n// like \"133700\", but not \"1231337\" or \"913379\"\nconst filterCondition2 = startsWith(attrNum, substrNum);\n```\n\n----------------------------------------\n\nTITLE: Converting Temperature Value to String in Mendix Expression\nDESCRIPTION: This code creates a string expression for the web service input parameter, converting an integer temperature value to a string using the toString function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-simple-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\ntoString($TemperatureInCelsius)\n```\n\n----------------------------------------\n\nTITLE: Checking Association Type in TypeScript\nDESCRIPTION: Code demonstrating how to check and handle different association types (Reference vs ReferenceSet).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nif (this.props.myAssociationOnDatasource.type === \"Reference\") {\n  console.log(\"Reference association\");\n} else {\n  // TypeScript will narrow it down to \"ReferenceSet\" when the type is not equal to \"Reference\"\n  console.log(\"ReferenceSet association\");\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Browser Support Detection in JavaScript\nDESCRIPTION: Script to detect unsupported browsers by checking for Symbol support and redirecting to an unsupported browser page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/csp.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nif (typeof Symbol !== \"function\") {\n    var homeUrl = window.location.origin + window.location.pathname;\n    var appUrl = homeUrl.slice(0, homeUrl.lastIndexOf(\"/\") + 1);\n    window.location.replace(appUrl + \"unsupported-browser.html\");\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Date Picker Widget in XML\nDESCRIPTION: XML structure for rendering a date picker widget in Mendix Studio Pro. It includes containers for label, value, validation message, and picker elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<label>Drop down enumeration</label>\n\t<value>Content invalid</value>\n\t<validationMessage>Validation feedback enumeration</validationMessage>\n\t<pickerBackdropIOS>iOS picker modal shadow container\n\t\t<pickerIOS>iOS picker\n\t\t\t<pickerTopIOS>iOS picker modal header</pickerTopIOS>\n\t\t</pickerIOS>\n\t</pickerBackdropIOS>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Equivalent SQL SELECT Statement\nDESCRIPTION: This SQL code snippet shows the equivalent SQL SELECT statement for the OData query example provided. It demonstrates the similarity between SQL and OData queries, making it easier for developers familiar with SQL to understand OData query construction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\n\"SELECT * FROM SalesOrderSet WHERE Category='Notepads'\"\n```\n\n----------------------------------------\n\nTITLE: Collecting Diagnostic Data with mxpc-cli\nDESCRIPTION: Command to collect diagnostic logs and configuration details from a Mendix Private Cloud environment for troubleshooting purposes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmxpc-cli log-extract -n {namespace} -f {filename}\n```\n\n----------------------------------------\n\nTITLE: Adding ID Property to TextInput Component - TypeScript\nDESCRIPTION: This code snippet updates the TextInput component to include an optional `id` property, which is crucial for enhancing accessibility through proper labeling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface TextInputProps {\n    id?: string;\n    value: string;\n    className?: string;\n    style?: CSSProperties;\n    tabIndex?: number;\n    hasError?: boolean;\n    required?: boolean;\n    disabled?: boolean;\n    onLeave?: (value: string, changed: boolean) => void;\n}\n    \nexport function TextInput({ value, onLeave, tabIndex, style, className, disabled }: TextInputProps): ReactElement {\n    const [state, setState] = useState<TextInputState>({ editedValue: undefined });\n    useEffect(() => setState({ editedValue: undefined }), [value]);\n    \n    function getCurrentValue(): string {\n        return state.editedValue !== undefined ? state.editedValue : value;\n    }\n    \n    function onBlur(): void {\n        onLeave?.(getCurrentValue(), getCurrentValue() !== value);\n        setState({ editedValue: undefined });\n    }\n    \n    return (\n        <input\n            id={id}\n            type=\"text\"\n            value={getCurrentValue()}\n            onChange={event => setState({ editedValue: event.target.value })}\n            onBlur={onBlur}\n            className={\"form-control \" + className}\n            disabled={disabled}\n            style={style}\n            tabIndex={tabIndex}\n            aria-labelledby={`${props.id}-label`}\n            aria-invalid={props.hasError}\n            aria-required={props.required}\n        />\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: SQL Queries for Employee Data Retrieval in Mendix\nDESCRIPTION: SQL queries generated by the Mendix Runtime Server when retrieving Employee data. It includes one query to fetch the actual data and another to count total records for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n ORDER BY \"myfirstmodule$employee\".\"firstname\" ASC,\n \"myfirstmodule$employee\".\"id\" ASC LIMIT 20\n SELECT COUNT(*)\n FROM \"myfirstmodule$employee\"\n```\n\n----------------------------------------\n\nTITLE: Pluggable Widgets Development Overview\nDESCRIPTION: React-based widgets for web and native mobile applications, recommended for new widget development. Can be downloaded from Marketplace and provide modern widget creation approach.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/mendix-client.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: OQL Query with Unset Parameter in Mendix\nDESCRIPTION: This SQL snippet shows how an OQL query behaves when a parameter value is not set. The query selects the Name from Module.Person where Active is true, ignoring the condition with the unset parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-parameters.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT Name\nFROM Module.Person\nWHERE\n    Active = true\n```\n\n----------------------------------------\n\nTITLE: Basic Property Definition Structure in Pluggable Widgets\nDESCRIPTION: Shows the common XML structure used to define properties in pluggable widgets, including the required key and type attributes along with caption and description elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"propertyKey\" type=\"propertyType\">\n\t<caption>My Property</caption>\n\t<description>This is my property</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional CSS Files for Web Apps\nDESCRIPTION: Updates the settings.json file to include third-party CSS files that should be applied to the web application alongside the compiled theme CSS.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"cssFiles\": [\"theme.compiled.css\", \"water.css\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Using INNER JOIN in OQL\nDESCRIPTION: This example shows how to use an INNER JOIN in OQL to combine rows from two entities based on a matching condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_18\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nJOIN Sales.Request Req ON Cust.LastName = Req.CustomerName\n```\n\n----------------------------------------\n\nTITLE: Configuring JMX Registry\nDESCRIPTION: JSON configuration examples for setting up JMX metrics registry in Mendix. These examples show how to set the step size (reporting frequency) and domain for JMX metrics.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"jmx\",\n    \"settings\": {\n      \"step\": \"3m\",\n      \"domain\": \"Mendix\"\n    }\n  }\n]\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"jmx\",\n    \"settings\": {\n      \"step\": \"P3Y6M4DT12H30M5S\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Applying Configuration Patch for GKE Autopilot in Kubernetes\nDESCRIPTION: Shell command to update the OperatorConfiguration in Kubernetes with the patched resource settings file. This command applies the configuration changes needed for GKE Autopilot compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_25\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} patch OperatorConfiguration mendix-operator-configuration --type merge -p \"$(cat <patchedFile>)\"\n```\n\n----------------------------------------\n\nTITLE: Defining File Property in XML for Mendix Pluggable Widget\nDESCRIPTION: This XML snippet defines a file property for a Mendix pluggable widget. It specifies the property key, type, required attribute, caption, and description for a sample text file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_18\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"file\" type=\"file\" required=\"false\">\n\t<caption>File</caption>\n\t<description>Sample text file</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Including Design Section Snippet\nDESCRIPTION: A markdown include statement for design section documentation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/data-grid/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide9/design-section-link.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Updating Workflow User Task Definition in SQL\nDESCRIPTION: SQL snippet showing how duplicate entries were being generated in the WorkflowUserTaskDefinition system table, which was fixed in version 9.12.6.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.12.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nINSERT INTO WorkflowUserTaskDefinition (...)\n```\n\n----------------------------------------\n\nTITLE: Modulo Operation in Mendix Expressions\nDESCRIPTION: Demonstrates how to calculate the remainder of a division using the modulo operator. Returns Integer/Long if both inputs are Integer/Long, or Decimal if either input is a Decimal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n23 mod 5\n```\n\nLANGUAGE: java\nCODE:\n```\n3\n```\n\n----------------------------------------\n\nTITLE: Dynamically Setting Attributes to Mendix Objects\nDESCRIPTION: This snippet demonstrates dynamically setting attributes of Mendix objects based on the data received from the GitHub API. The `createGitHubUser` function iterates through the attributes of the Mendix object and sets the corresponding values from the GitHub API response. This improves flexibility by allowing the action to handle changes in the API response structure without requiring code modifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction SearchGitHubUsers(query, userEntity) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    var url = \"https://api.github.com/search/users?q=\" + query;\n    return fetch(url)\n        .then(function(response) { return response.json() })\n        .then(function(jsonData) {\n            logger.debug(\"count\", jsonData.total_count);\n            var gitHubUsers = jsonData.items.map(createGitHubUser);\n            return Promise.all(gitHubUsers);\n        });\n\n    function createGitHubUser(user) {\n        return new Promise(function (resolve, reject) {\n            mx.data.create({\n                entity: \"HowTo.GitHubUser\",\n                callback: function(mxObject) {\n                    // Dynamically set attributes\n                    mxObject.getAttributes()\n                        .forEach(function(attributeName) {\n                            var attributeValue = user[attributeName];\n                            if (attributeValue) {\n                                mxObject.set(attributeName, attributeValue);\n                            }\n                        });\n                    resolve(mxObject);\n                },\n                error: function(error) {\n                    reject(\"Could create object:\" + error.message);\n                }\n            });\n        });\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Users with Administrator Role in Java\nDESCRIPTION: This XPath query returns users with the Administrator role using the UserRole_Administrator system variable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//System.User[System.UserRoles = '[%UserRole_Administrator%]']\n```\n\n----------------------------------------\n\nTITLE: Querying Date Range with Year Length in Java\nDESCRIPTION: This XPath query retrieves customer objects from the 'Sales' module that have been registered in the past three years from the beginning of the current day. This Java-compatible version is suitable for use in Mendix Java actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[DateRegistered > '[%BeginOfCurrentDay%] - 3 * [%YearLength%]']\n```\n\n----------------------------------------\n\nTITLE: Converting to Uppercase in Mendix - Java\nDESCRIPTION: The `toUpperCase` function transforms all characters in the provided string to uppercase. It takes a single input parameter: the string to convert. The resulting output is the original string in uppercase. The function does not change the original string but returns a new one.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntoUpperCase('thisISmyString')\n```\n\n----------------------------------------\n\nTITLE: Building Application with Native Builder\nDESCRIPTION: This snippet demonstrates how to build an application using the Native Builder tool. It specifies the project name, build number, and app version. The command is essential for rebuilding the application using previously configured signing keys in App Center.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/deploying-native-app-cli.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe build --project-name CoolApp --build-number 1 --app-version 0.1.0\n```\n\n----------------------------------------\n\nTITLE: Setting OriginURI Cookie for SSO Redirection\nDESCRIPTION: JavaScript code to set the originURI cookie to redirect users to the SSO endpoint when they need to sign in, while still allowing direct access to local login pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.cookie = \"originURI=/SSO/\" + (window.location.protocol === \"https:\" ? \";SameSite=None;Secure\" : \"\");\n```\n\n----------------------------------------\n\nTITLE: Converting Mendix Apps without Error Checking\nDESCRIPTION: This command converts Mendix app packages (.mpk) in the specified directory to the Studio Pro version associated with the mx tool, placing the converted results in the specified output directory without checking for errors during conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\n\"mx convert --skip-error-check C:\\\\Mendix\\\\Packages\\\\ C:\\\\Mendix\\\\ConvertedPackages\\\\\"\n```\n\n----------------------------------------\n\nTITLE: Legend Position Configuration - Bottom (JSON)\nDESCRIPTION: This snippet configures the chart legend to be displayed at the bottom of the chart.  It adjusts the `orientation` to `h` for horizontal and sets the y value to `auto`. Adjustments to y might be needed for long x-axis tick labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": true,\n  \"legend\": {\n    \"orientation\": \"h\",\n    \"y\": \"auto\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Script - Create New Mendix App - PowerShell\nDESCRIPTION: This script illustrates how to create a new Mendix application and prompts for credentials, which are necessary to finalize the app's creation successfully.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_8\n\nLANGUAGE: PowerShell\nCODE:\n```\n$appName = 'Name of Mendix app'\n\n# Create new Mendix app\nNew-MxApp -Name $appName -Credential (Get-Credential)\n```\n\n----------------------------------------\n\nTITLE: Selecting Customer Names in OQL\nDESCRIPTION: This OQL query retrieves the names of all customers from the Sales.Customer entity. It demonstrates a basic SELECT statement in OQL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Checking for an Empty Object Member in Mendix\nDESCRIPTION: Shows how to check if a specific member (attribute or association) of an object is empty in a Mendix expression. Returns a Boolean value indicating the emptiness state of the member.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n$object1/member1 = empty\n```\n\n----------------------------------------\n\nTITLE: Implementing a WebSocket Endpoint in Java\nDESCRIPTION: This code snippet demonstrates a simple implementation of a WebSocket endpoint in Java using the `javax.websocket` API. It defines a class `TestEndpoint` that extends `Endpoint` and overrides the `onOpen` and `onClose` methods to handle WebSocket events such as connection opening, message reception, and connection closing. The endpoint sends a \"socket opened\" message upon connection and responds with \"test response\" if it receives \"test message\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/websockets-in-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport javax.websocket.CloseReason;\nimport javax.websocket.Endpoint;\nimport javax.websocket.EndpointConfig;\nimport javax.websocket.MessageHandler;\nimport javax.websocket.Session;\nimport java.io.IOException;\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class TestEndpoint extends Endpoint {\n  Set<Session> sessions = new HashSet<>();\n\n  @Override\n  public void onOpen(Session session, EndpointConfig config) {\n    sessions.add(session);\n    session.addMessageHandler(new MessageHandler.Whole<String>() {\n      @Override\n      public void onMessage(String message) {\n        if (\"test message\".equals(message)) {\n          try {\n            session.getBasicRemote().sendText(\"test response\");\n            session.close();\n          } catch (IOException e) {\n            e.printStackTrace();\n          }\n        }\n      }\n    });\n\n    try {\n      session.getBasicRemote().sendText(\"socket opened\");\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }\n\n  @Override\n  public void onClose(Session session, CloseReason closeReason) {\n    System.out.println(\"Received onClose call with reason: \" + closeReason);\n    sessions.remove(session);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Required Message Property in TextBox XML\nDESCRIPTION: This XML snippet adds a requiredMessage property to the TextBox widget's data source configuration, allowing for a customizable validation message when the input is empty.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"requiredMessage\" type=\"textTemplate\" required=\"false\">\n    <caption>Required message</caption>\n    <description/>\n    <translations>\n        <translation lang=\"en_US\">An input text is required</translation>\n    </translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Converting Dropdown Options to Spacing Property in JavaScript\nDESCRIPTION: Example of converting dropdown options into spacing property options with margin and padding configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"Spacing\",\n    \"type\": \"Spacing\",\n    \"description\": \"Spacing control\",\n    \"margin\": [\n        {\n            \"name\": \"M\",\n            \"top\": {\n                \"class\": \"margin-top-m\",\n                \"oldNames\": [ \"spacing-top::small\" ]\n            }\n        }\n    ],\n    \"padding\": [\n        {\n            \"name\": \"S\",\n            \"variable\": \"--size-s\",\n            \"top\": {\n                \"oldNames\": [\n                    \"spacing-top::inner small\"\n                ]\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Using beginOfYear Function in Mendix\nDESCRIPTION: Calculates the beginning of the year for a given datetime input. Returns midnight of January 1st of that year.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nbeginOfYear(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Installing Generic Tekton Pipeline Trigger\nDESCRIPTION: Command to install a generic HTTP/curl trigger for Tekton pipelines. This allows triggering pipelines through HTTP requests with Mendix-related parameters specified in the request body.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd $PATH_TO_DOWNLOADED_FOLDERS && cd helm/charts\nhelm template mx-tekton-pipeline-trigger ./triggers -f triggers/values.yaml \\\n    --set name=$SOME_UNIQUE_NAME \\\n    --set pipelineName=build-pipeline \\\n    --set triggerType=generic | kubectl apply -f - -n $NAMESPACE_WITH_PIPELINES\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Region for PutEvents Activity in Mendix\nDESCRIPTION: This code snippet demonstrates how to configure the AWS Region parameter for the PutEvents activity in a Mendix microflow using an expression. It selects the region from the AWSAuthentication.ENUM_Region enumeration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-eventbridge.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nAWSAuthentication.ENUM_Region.\n```\n\n----------------------------------------\n\nTITLE: JSON Log Output Structure\nDESCRIPTION: Defines the JSON structure for log messages that will be sent to Kibana. Includes fields for the message content, log level, timestamps, and stack traces.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-logger.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"msg\": \"actual log message\",\n  \"level\": \"log level\",\n  \"written_at\": \"log timestamp from Mendix app\",\n  \"written_ts\": \"timestamp for ordering\",\n  \"stacktrace\": \"stack trace if exists\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Response from BAPI\nDESCRIPTION: The `GetBAPIResponse` microflow action is used to retrieve responses for specific BAPIRequest objects that were included in a `CallBAPISequence`. Each request response can be accessed separately by adding this action to the microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\nThis microflow action is used together with `CallBAPISequence`.\n```\n\n----------------------------------------\n\nTITLE: Manual SSO Redirection in JavaScript\nDESCRIPTION: This JavaScript snippet provides a manual method for triggering SSO redirection on a button click. It relies on users clicking a designated button to initiate the SSO process. The script appends any necessary parameters to the SSO login URL, and users are subsequently redirected for authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nthis.href = 'sso/login' + (returnURL ? '?cont=link' + encodeURIComponent(returnURL) : '');\n```\n\n----------------------------------------\n\nTITLE: Retrieving Object GUID for Notifications - JavaScript\nDESCRIPTION: This code snippet illustrates the use of a JavaScript action to retrieve an object's GUID before sending a notification. The GUID is essential for passing specific data corresponding to an entity in the Mendix database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst objectGUID = GetGUID(entityObject);\n```\n\n----------------------------------------\n\nTITLE: System Text Parameter Example\nDESCRIPTION: Example showing how parameters are used in system texts for dynamic content insertion. The example demonstrates a deletion confirmation message where {1} is replaced with the number of selected items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/app/system-texts.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nDelete {1} items?\n```\n\n----------------------------------------\n\nTITLE: Customizing Runtime Metrics with Prometheus in YAML\nDESCRIPTION: The YAML snippet outlines a section of an OperatorConfiguration, specifying settings for collecting Prometheus metrics in Mendix apps. It sets parameters such as 'mode', 'interval', and 'mxAgentConfig' for metric data collection. Dependencies include a Mendix setup compatible with Prometheus and necessary annotations. The configuration enables monitoring tools to capture action-specific metrics to analyze application performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n    # …\nspec:\n  runtimeMetricsConfiguration:\n    mode: native\n    interval: \"PT1M\"\n    mxAgentConfig: |-\n      {\n        \"requestHandlers\": [\n          {\n            \"name\": \"*\"\n          }\n        ],\n        \"microflows\": [\n          {\n            \"name\": \"*\"\n          }\n        ],\n        \"activities\": [\n          {\n            \"name\": \"*\"\n          }\n        ]\n      }\n    mxAgentInstrumentationConfig: |-\n      {\n        …\n      }\n  # …\n```\n\n----------------------------------------\n\nTITLE: Defining a Boolean Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet demonstrates how to define a boolean property for a pluggable widget. It includes the 'defaultValue' attribute set to 'false'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myBoolean\" type=\"boolean\" defaultValue=\"false\">\n\t<caption>My boolean</caption>\n\t<description>My boolean setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Defining Preview Component CSS\nDESCRIPTION: Shows how to implement the getPreviewCss export function to provide custom CSS for widget previews in Mendix\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nexport function getPreviewCss() {\n    return `\n.my-pw-container {\n    background-color: #C0FFEE;\n}\n`;\n}\n```\n\n----------------------------------------\n\nTITLE: Command Line Tool Enhancement\nDESCRIPTION: Addition of new 'mx show-java-version' command to display the configured Java version of a Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.12.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmx show-java-version\n```\n\n----------------------------------------\n\nTITLE: Creating Grafana Ingress\nDESCRIPTION: This command creates a Kubernetes Ingress object to expose the Grafana web UI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl --namespace={namespace} create ingress loki-grafana \\\n--rule=\"{domain}/*=loki-grafana:80,tls\" \\\n--default-backend=\"loki-grafana:80\"\n```\n\n----------------------------------------\n\nTITLE: Module Structure Example\nDESCRIPTION: Example module organization for a web shop application, showing separation of order management from customer and product management\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/modules/_index.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Defining Mendix to GraphQL Data Type Mappings in Markdown\nDESCRIPTION: This snippet is a markdown table that maps Mendix data types to their corresponding GraphQL types. It includes various data types such as AutoNumber, Boolean, Date and time, Decimal, Enumeration, and others.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/graphql-representation.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Mendix Data Type | GraphQL Type |\n| --- | --- |\n| ID (not supported)  |   |\n| AutoNumber | Long (a scalar defined in the schema) |\n| Binary (not supported)  |   |\n| Boolean | Boolean |\n| Date and time | DateTime, as specified by [GraphQL DateTime Scalar spec](https://www.graphql-scalars.com/date-time) |\n| Decimal | Decimal (a scalar defined in the schema) |\n| Enumeration | Enum (defined in the schema) |\n| Hashed string | String |\n| Integer | Int |\n| Long | Long (a scalar defined in the schema) |\n| String | String |\n```\n\n----------------------------------------\n\nTITLE: Activating Mendix License Key on Linux using m2ee Console\nDESCRIPTION: This snippet demonstrates the process of activating a Mendix license key on a Linux system using the m2ee console. It involves displaying the server ID, obtaining a license key, and activating it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/unix-like.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nshow_license_information\nactivate_license\n```\n\n----------------------------------------\n\nTITLE: Visibility Section Properties for Page Title Widget\nDESCRIPTION: This snippet gives a reference link to the visibility section properties, which dictate how and when the Page Title widget is displayed in the Mendix environment. Understanding these settings is crucial for effective widget management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/text-widgets/page-title.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Color Picker CSP Configuration\nDESCRIPTION: CSP directive for enabling style sources for Color Picker widget with allowlist approach\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nstyle-src 'self' 'unsafe-inline';\n```\n\n----------------------------------------\n\nTITLE: Installing the NFC Manager Dependency\nDESCRIPTION: This command installs the `react-native-nfc-manager` library into the Mendix app's JavaScript actions directory using npm, which is essential for enabling NFC capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nnpm install react-native-nfc-manager@1.2.2\n```\n\n----------------------------------------\n\nTITLE: Date Manipulation: Subtracting Time Units\nDESCRIPTION: Functions to subtract specific time units from a date, with support for standard and UTC calendars for milliseconds, seconds, minutes, hours, days, weeks, months, quarters, and years\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: Mendix Expression\nCODE:\n```\nsubtractMonths(date, numberOfMonths)\n```\n\n----------------------------------------\n\nTITLE: Using Icon Component with SVG Source\nDESCRIPTION: This JSX code shows how to use the `Icon` component from Mendix to display an SVG icon within a pluggable native widget. It defines the icon's type as 'image' and provides the URL to the SVG via the `iconUrl` property.  The size and color of the icon can also be customized.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n\"import { createElement } from \\\"react\\\";\\nimport { Icon } from \\\"mendix/components/native/Icon\\\";\\n\\nexport const PluggableWidget = () => (\\n    <Icon \\n        icon={{\\n            type: \\\"image\\\",\\n            iconUrl: \\\"PUT_SOURCE_HERE\\\"\\n        }}\\n        size={20}\\n        color=\\\"blue\\\"\\n    />\\n);\"\n```\n\n----------------------------------------\n\nTITLE: Add User to Security Group Request\nDESCRIPTION: HTTP POST request example for adding a user to a security group using their OpenID. Requires Company Manager or Member Manager role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_23\n\nLANGUAGE: http\nCODE:\n```\nPOST /legacy-api/1/groups/a552a41b-5b30-41000-bab7-ad102eacd653/users HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n\n{\n\"openId\" : \"https://mxid2.mendix.dev/mxid2/id?id=daba46fc-692c-4622-adb4-981fcfb0dec9\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Export XML Microflow in Mendix\nDESCRIPTION: Microflow implementation for retrieving customer data, creating an XML document, and enabling file download\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/export-xml-documents.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nCustomers_Export microflow steps:\n1. Retrieve customers from database\n2. Create XMLDocument object\n3. Set XMLDocument name to 'customers.xml'\n4. Export customers using XML mapping\n5. Download generated XML file\n```\n\n----------------------------------------\n\nTITLE: Implementing a Row Layout with Grow Column Sizes in TypeScript\nDESCRIPTION: This example shows how to create a row layout with grow column sizes, where the column sizes are determined by the content and leftover space is distributed based on grow factors. It demonstrates different grow factor behaviors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"RowLayout\",\n        columnSize: \"grow\",\n        children: [\n            {\n                type: \"Container\",\n                grow: 0,\n                borders: true,\n                backgroundColor: \"#F4FFB0\",\n                children: [{ type: \"Text\", content: \"Grow 0\", fontSize: 20 }]\n            },\n            {\n                type: \"Container\",\n                borders: true,\n                backgroundColor: \"#E6FFB0\",\n                children: [{ type: \"Text\", content: \"Grow 1\", fontSize: 20 }]\n            },\n            {\n                type: \"Container\",\n                grow: 2,\n                borders: true,\n                backgroundColor: \"#B0C0FF\",\n                children: [{ type: \"Text\", content: \"Grow 2\", fontSize: 20 }]\n            }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Adding onChange Prop to TextInputProps in TextInput.tsx\nDESCRIPTION: This code snippet adds an onChange property to the TextInputProps interface and implements the onChange event handler for the input element. This allows the component to signal changes in the input value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface TextInputProps {\n        value: string;\n        className?: string;\n        style?: CSSProperties;\n        tabIndex?: number;\n        onChange?: (value: string) => void;\n    }\n\n    export function TextInput({ value, onChange, tabIndex, style, className }: TextInputProps): ReactElement {\n        return (\n            <input\n                type=\"text\"\n                value={value}\n                onChange={event => {\n                    onChange?.(event.target.value);\n                }}\n                className={\"form-control \" + className}\n                style={style}\n                tabIndex={tabIndex}\n            />\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Security Group Details JSON Response\nDESCRIPTION: Example JSON response from the security group endpoint, showing the group's name, description, UUID, member count, and lock status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"RnD\",\n    \"description\": \"Research and Development\",\n    \"uuid\": \"86a2558b-b63b-4c76-a056-018d9eb8f1b9\",\n    \"memberCount\": 57,\n    \"userGroupLocked\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Import Statements for TextBox Component\nDESCRIPTION: Import statements for the TextBox component, adding Fragment from React and the Alert component from the local components directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_5\n\nLANGUAGE: TSX\nCODE:\n```\nimport { Component, ReactNode, Fragment, createElement } from \"react\";\nimport { Alert } from \"./components/Alert\";\n```\n\n----------------------------------------\n\nTITLE: Defining Group Box Styles in JavaScript\nDESCRIPTION: This code defines three style classes (success, warning, and danger) for a group box widget using JavaScript. These styles are applied to the container, header, and header content of the group box, using brand colors and a shade blending function. The styles are exported as constants to be used elsewhere in the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nexport const groupBoxSuccess = {\n    container: {\n        borderColor: brand.success\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.success)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n\nexport const groupBoxWarning = {\n    container: {\n        borderColor: brand.warning\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.warning)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n\nexport const groupBoxDanger = {\n    container: {\n        borderColor: brand.danger\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.danger)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Order Price Using Variables and Loops in Mendix Microflow\nDESCRIPTION: A Mendix microflow implementation that calculates the total price of all orders by iterating through an order list, adding each order's price to a running total variable, and displaying the result in a message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n$CalculatedTotalPrice + $IteratorOrder/TotalPrice\n```\n\n----------------------------------------\n\nTITLE: Creating a Breakpoint Condition in Mendix Studio Pro\nDESCRIPTION: This code snippet demonstrates how to create a breakpoint condition using a Java expression that ensures a microflow or nanoflow only breaks when executed by a specific user. This is particularly useful when debugging in production environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/debug-microflows-and-nanoflows/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n$currentUser/name = 'YourUserName'\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Constraint in Java\nDESCRIPTION: This code snippet shows a complete XPath query with a constraint in a Java environment. The constraint filters the customer objects based on the 'Name' attribute, retrieving only those with the name 'Jansen'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n\"//Sales.Customer[Name='Jansen']\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Area Fill Properties in JSON\nDESCRIPTION: This snippet defines properties for rendering a filled line chart, including line color, shape, dash style, and filling color, enhancing the chart's area display.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\"line\": {\"color\": \"#17202A\", \"shape\": \"linear\", \"dash\": \"dot\"}, \"type\": \"scatter\", \"fill\": \"tonexty\", \"fillcolor\": \"#B2BABB\"}\n```\n\n----------------------------------------\n\nTITLE: Adding XSD Footer for XML Import\nDESCRIPTION: This snippet provides the footer section necessary for completing an XSD file, enclosing the sequence of XML elements and ensuring the schema's structural integrity. It finalizes the elements defined in the preceding header.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_3\n\nLANGUAGE: xsd\nCODE:\n```\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pipeline Runs\nDESCRIPTION: Use this command to list all pipelineruns within a specified namespace. This is crucial for monitoring current and past pipeline executions in Tekton.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pipelineruns -n $NAMESPACE_WITH_PIPELINES\n```\n\n----------------------------------------\n\nTITLE: Correct Font Style Application\nDESCRIPTION: This CSS code demonstrates how to apply a specific font style using the correctly defined font family names from the `timesNewRomanFontFamily` object. This ensures that the correct font is applied consistently across both Android and iOS platforms in Mendix native apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n\"export const boldText = { \\n    fontFamily: timesNewRomanFontFamily.bold,\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Running Gulp in Development Mode\nDESCRIPTION: This command starts Gulp in development mode. This will trigger Sass to compile the CSS files unminified and with source-mapping. This is helpful for debugging the styling, as a modern browser will point to the *.scss* file where a rule is specified.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/style-with-gulp-and-sass.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run dev\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Loop Properties in Mendix Microflows\nDESCRIPTION: Demonstrates how to set up the input and action properties for a Loop element in a Mendix microflow. The 'Iterate over' property specifies the list variable to loop through, while the 'Loop Object Name' defines the name for each iterated item.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/loop.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nIterate over: List of OrderLine objects\nLoop Object Name: OrderLine\n```\n\n----------------------------------------\n\nTITLE: Creating Oracle User for Mendix\nDESCRIPTION: SQL commands to create and configure a dedicated database user with necessary privileges for Mendix integration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/data-storage/oracle.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nGRANT UNLIMITED TABLESPACE TO mendix\n```\n\n----------------------------------------\n\nTITLE: Setting MaxTokens for Azure OpenAI Chat Completions\nDESCRIPTION: This code snippet highlights the recommendation of setting the `MaxTokens` parameter for chat completions with Azure OpenAI to prevent responses from being cut off. It includes a link to the Azure OpenAI documentation for further details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\nWhen you use Azure OpenAI, it is recommended to set the optional `MaxTokens` input parameter; otherwise, the response may be cut off. For more details, see the [Azure OpenAI Documentation](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/gpt-with-vision?tabs=rest%2Csystem-assigned%2Cresource#call-the-chat-completion-apis).\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Minutes in Java\nDESCRIPTION: This snippet shows how to use the trimToMinutes function to round off a date to minutes, removing seconds and milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntrimToMinutes($myDate)\n```\n\n----------------------------------------\n\nTITLE: TextToSpeech Basic Implementation\nDESCRIPTION: Implementation of text-to-speech functionality using the SpeechSynthesis API with basic promise resolution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return Promise.resolve(false);\n    }\n    if (\"speechSynthesis\" in window === false) {\n        return Promise.reject(\"Browser does not support text to speech\");\n    }\n    var utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n    return Promise.resolve(true);\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Font Weight in CSS Styles\nDESCRIPTION: This snippet illustrates how to set the font weight in CSS styles, emphasizing the limitation on Android platforms regarding unrecognized weight values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-custom-fonts.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n{ \n    fontWeight: 550\n}\n```\n\n----------------------------------------\n\nTITLE: Giving Widgets Unique Names in Mendix Studio Pro\nDESCRIPTION: Demonstrates how to change a widget's mx-name in Mendix Studio Pro to make it unique, which helps ATS interact with the correct widget during test execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-increase-recorder-helper-coverage.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\nmx-name=\"uniqueActionButton1\"\n```\n\n----------------------------------------\n\nTITLE: Setting Log Levels with Python Script\nDESCRIPTION: Python script that configures log levels for ConnectionBus and ActionManager components through the runtime admin port. The script sets ConnectionBus to TRACE level and ActionManager to DEBUG level.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/logging/log-levels.md#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport requests, base64, json, sys\n\npayload = {\n    'action':'set_log_level',\n    'params': {'nodes' : [\n        { 'name':'ConnectionBus', 'level':'TRACE'},\n        { 'name':'ActionManager', 'level':'DEBUG'}\n        ], 'force':True}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining List View Widget Styling in JavaScript\nDESCRIPTION: Defines the styling for a ListView widget using a JavaScript object to specify ViewStyle properties. This object controls aspects like container properties and ripple effects for the list items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ListView = {\n  container: {\n    // All ViewStyle properties\n    numColumns: 1 // This is the number of columns that the list should render.\n  },\n  listItem: {\n    // All ViewStyle properties\n    rippleColor: 'rgba(0, 0, 0, 0.2))', // This is the color of the ripple on Android, and will be applied only when the item has an on click action set, otherwise it will be ignored.\n    underlayColor: null, // This is the color while pressing the item on iOS, and will be applied only when the item has an on click action set, otherwise it will be ignored and defaulted to opacity only.\n  },\n  listItemDisabled: {\n    // Same properties as `listItem`. Overrides `listItem` styles if the item has an on click action and the action cannot be executed or is disabled during action.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: String Inequality Result Example in Java\nDESCRIPTION: Shows the Boolean output of a string inequality comparison with identical values, returning False.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_15\n\nLANGUAGE: java\nCODE:\n```\nFalse\n```\n\n----------------------------------------\n\nTITLE: Creating a TestNG Test Suite XML Configuration\nDESCRIPTION: XML configuration for creating a TestNG test suite that specifies which test classes to run. This configuration defines a suite named 'MyFirstTestSuite' that runs a single test class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_8\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suite name=\"MyFirstTestSuite\">\n\t<test name=\"Test1\">\n\t\t<classes>\n\t\t\t<class\n\t\t\t\tname=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n</suite>\n```\n\n----------------------------------------\n\nTITLE: Creating Selectable Objects in Structure Preview using TypeScript\nDESCRIPTION: This example shows how to make instances of an object list selectable in the structure preview. It demonstrates how to use the 'Selectable' type to create a list of selectable text elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nexport function getPreview(values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) {\n    const container: ContainerProps = {\n        type: \"Container\",\n        borders: true,\n        children: [\n            { type: \"Text\", fontSize: 18, content: \"List with selectable elements\" }\n        ],\n    };\n\n    for (const item of values.myObjectProp) {\n        container.children!.push({\n            type: \"Selectable\",\n            object: item,\n            child: {\n                type: \"Text\",\n                fontColor: \"#2A2C96\",\n                content: item.caption\n            },\n        });\n    }\n    return container;\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Notifications from Monitored Items\nDESCRIPTION: This snippet references an example microflow that logs notifications coming from a monitored item, illustrating practical usage within the Mendix environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/opc-ua-connector.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\nCheck out the example microflow `EXAMPLE_MonitoredItem_LogDefaultMessage` in the **USE_ME** > **12.MonitoredItems_service_set** folder. This microflow simply takes the information from the notification and logs it.\n```\n\n----------------------------------------\n\nTITLE: Initializing the Untyped Model Access Service in C#\nDESCRIPTION: This snippet demonstrates how to create a sample class that initializes the Untyped Model Access Service for further interactions with model elements. It requires the appropriate interface dependency for the untyped model access service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/untyped-model-api.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nclass Sample(IUntypedModelAccessService untypedModelAccessService)\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Using Functions with GROUP BY Clause - OQL\nDESCRIPTION: This snippet illustrates how to apply functions of attributes in the SELECT clause when using the GROUP BY clause. The example queries the length of brand names along with their total stock, enforcing the requirement for attributes included in the GROUP BY clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_33\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, LENGTH(Brand) AS NameLen, SUM(Stock) AS SumStock\nFROM Sales.Location\nGROUP BY Brand\n```\n\n----------------------------------------\n\nTITLE: Assigning User Task to Facilities Role using XPath in Mendix\nDESCRIPTION: This XPath expression is used to assign user tasks related to device preparation and shipping to users with the Facilities role in a Mendix workflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_2\n\nLANGUAGE: xpath\nCODE:\n```\n[System.UserRoles = '[%UserRole_Facilities%]']\n```\n\n----------------------------------------\n\nTITLE: JSON Response for Environment Snapshot Creation in Mendix Cloud\nDESCRIPTION: This is an example JSON response from the Create Environment Snapshot API call. It includes the snapshot ID, state (queued), creation time, and expiration date, which are needed for subsequent operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":null,\n   \"model_version\":null,\n   \"expires_at\":\"2020-05-18T16:00:18.000Z\",\n   \"finished_at\":null,\n   \"updated_at\":null,\n   \"snapshot_id\":\"51dc7872-771e-4c3e-853b-352359444db6\",\n   \"created_at\":\"2020-02-18T16:00:18.000Z\",\n   \"comment\":\"My snapshot\",\n   \"state\":\"queued\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Data Source Section for Radio Buttons\nDESCRIPTION: This snippet includes the data source properties for the radio buttons widget, which outlines how data is retrieved and managed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_1\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Design Properties Section for Drop-Down\nDESCRIPTION: This snippet links to the design properties applicable to the drop-down widget, focusing on aesthetic and layout considerations to enhance user experience. Effective design can greatly influence usability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Handling DB2 SQL Error for Transaction Log Depletion\nDESCRIPTION: Example of a DB2 SQL exception thrown when the transaction log space is depleted. This requires increasing the size of LOGPRIMARY.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/db2.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\ncom.ibm.db2.jcc.am.SqlException: DB2 SQL Error: SQLCODE=-964, SQLSTATE=57011, SQLERRMC=null\n```\n\n----------------------------------------\n\nTITLE: POST Request for Creating an Environment Snapshot in Mendix Cloud\nDESCRIPTION: This code shows how to make a POST request to create a new snapshot of an environment in Mendix Cloud. It includes authentication headers and a JSON body with an optional comment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"comment\" :  \"My snapshot\"\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing and Formatting JSON in Mendix (JSON)\nDESCRIPTION: The document provides detailed instructions for handling JSON snippets to convert them into schema structures usable in Mendix. Key functionalities include automatic validity checks, formatting for readability, and conversion of JSON elements into Mendix objects based on their types. JSON objects and arrays are parsed into a structured tree view that represents the schema. Key limitations include unsupported mixed arrays, and any changes require refreshing the structure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/json-structures.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Running Events on Specific Days of Month Expression\nDESCRIPTION: This expression checks if the current date is either the 1st or 15th day of the month. It demonstrates how to schedule events to run on multiple specific days within a month instead of using the built-in monthly interval.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/scheduled-events.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nparseInteger( formatDateTime( [%CurrentDateTime%], 'dd') ) = 15\n// This will run the scheduled event on the 1st and 15th of the month\n```\n\n----------------------------------------\n\nTITLE: Keyboard Control Example - HTML/Markdown\nDESCRIPTION: Demonstrates keyboard control syntax for selection modification in logic flow editors using Control/Command key.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.12.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<kbd>Ctrl</kbd> or <kbd>Command</kbd>\n```\n\n----------------------------------------\n\nTITLE: Widget Package XML Structure\nDESCRIPTION: Defines the package.xml structure for a Mendix widget package, including client module and widget file references.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<package xmlns=\"http://www.mendix.com/package/1.0/\">\n    <clientModule name=\"{packageName}\" version=\"{packageVersion}\" xmlns=\"http://www.mendix.com/clientModule/1.0/\">\n        <widgetFiles>\n            <widgetFile path=\"{widgetName}.xml\"/>\n        </widgetFiles>\n    </clientModule>\n</package>\n```\n\n----------------------------------------\n\nTITLE: Creating Export Mapping for REST Response\nDESCRIPTION: Sets up an export mapping to transform domain model data into a JSON or XML response\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-rest-service.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\nExport Mapping (EM_ExportOrder) linking domain model to message definition\n```\n\n----------------------------------------\n\nTITLE: Using Personal Access Token for Authorization in Pipelines API\nDESCRIPTION: Example of how to format an HTTP request header with the Personal Access Token (PAT) for authorization. The token must be prefixed with 'MxToken' and included in the Authorization header.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/pipelines-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /projects HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Defining iOS Icons Config Interface\nDESCRIPTION: This code snippet defines the interface for the iOS icons configuration, outlining the structure of the JSON file required to configure iOS app icons. It includes properties for image size, idiom (device type), scale, type, filename, and a version number for backwards compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n```json\ninterface IOSIconsConfig {\n    \"images\": Array<{\n            \"size\": string\",\n            \"idiom\": \"ipad\" | \"iphone\" | \"ios-marketing\",\n            \"scale\": \"1x\" | \"2x\"| \"3x\",\n            \"type\": \"icon\",\n            \"filename\": string\n        }>,\n    \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Termination Grace Period\nDESCRIPTION: This YAML snippet configures the termination grace period for a Mendix application deployment.  This setting specifies the number of seconds the application has to gracefully shut down when a termination signal is received.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_15\n\nLANGUAGE: YAML\nCODE:\n```\n\"terminationGracePeriodSeconds: 300\"\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section for Radio Buttons\nDESCRIPTION: This snippet includes visibility properties for the radio buttons widget, which control display logic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_7\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using seconds-from-dateTime with Local Timezone\nDESCRIPTION: Example query that returns all Log entities where the seconds part of DateAttribute equals 30 in the local timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[seconds-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: List View Error Code CE2633\nDESCRIPTION: Error occurs when microflow or nanoflow is selected as data source but none is specified for a list view. Fix by selecting a microflow/nanoflow or changing the data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nCE2633: No microflow configured for the data source of this list view. Select a microflow or change the data source.\n```\n\n----------------------------------------\n\nTITLE: Creating Message Definition for REST Service\nDESCRIPTION: Configures a message definition to map entity attributes for REST service export\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nMessage Definition (MD_Orders) selecting Order entity attributes\n```\n\n----------------------------------------\n\nTITLE: Triggering Build Pipeline Using a Generic Trigger - Bash\nDESCRIPTION: This Bash script sends a POST request to trigger a build on a specified pipeline. It includes headers and a JSON payload containing repository details, Kubernetes namespace, and operational modes. The script requires cURL and appropriate API permissions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST \\\n  http://pipeline.trigger.yourdomain.com/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'X-GitLab-Token: SomeLongSecureToken42' \\\n  -H 'Event: build' \\\n  -d '{\\n   \"repo\": {\\n      \"url\":\"https://yourgitdomain.com/user/repo.git\",\\n      \"revision\":\"main\"\\n   },\\n   \"namespace\":\"namespace-with-operator\",\\n   \"env-internal-name\":\"mx-environment-internal-name\",\\n   \"constants-mode\":\"auto\",\\n   \"scheduled-events-mode\":\"auto\"\\n}'\n```\n\n----------------------------------------\n\nTITLE: Transforming dependencies.json with cURL\nDESCRIPTION: This cURL command demonstrates how to call the Transform endpoint of the Registration API. It takes a dependencies.json file (converted to an escaped JSON string) and endpoint location constants as input, sending them in a POST request to the specified URL with the appropriate headers for content type and authorization. The command expects a 200 status code and a JSON response upon success.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location --request POST 'https://catalog.mendix.com/rest/registration/v5/transform/dependenciesjson' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: MxToken <your_Personal_Access_Token>' \\\n--data-raw '{ \"dependenciesJsonString\": \"{ \\\"schemaVersion\\\": \\\"1.3\\\", \\\"appName\\\": \\\"HR Acme Corp\\\", \\\"published\\\": [ { \\\"name\\\": \\\"test.acme.employeeinformation\\\", \\\"version\\\": \\\"2.0\\\", \\\"path\\\": \\\"/employeeservice/v2\\\", \\\"serviceType\\\": \\\"OData 3.0\\\", \\\"contracts\\\": [ { \\\"type\\\": \\\"ServiceFeed\\\", \\\"value\\\": \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\r\\\\n<service xmlns=\\\\\\\"http://www.w3.org/2007/app\\\\\\\" xmlns:atom=\\\\\\\"http://www.w3.org/2005/Atom\\\\\\\" xml:base=\\\\\\\"https://hr.acmecorp.test/odata/test.acme.employeeinformation/v1/\\\\\\\">\\\\r\\\\n <workspace>\\\\r\\\\n <atom:title>Default</atom:title>\\\\r\\\\n <collection href=\\\\\\\"Employees\\\\\\\">\\\\r\\\\n <atom:title>Employees</atom:title>\\\\r\\\\n </collection>\\\\r\\\\n </workspace>\\\\r\\\\n</service>\\\" }, { \\\"type\\\": \\\"Metadata\\\", \\\"value\\\": \\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"UTF-8\\\\\\\"?>\\\\r\\\\n<edmx:Edmx xmlns:edmx=\\\\\\\"http://schemas.microsoft.com/ado/2007/06/edmx\\\\\\\" xmlns:mx=\\\\\\\"http://www.mendix.com/Protocols/MendixData\\\\\\\" Version=\\\\\\\"1.0\\\\\\\">\\\\r\\\\n <edmx:DataServices xmlns:m=\\\\\\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\\\\\\" m:DataServiceVersion=\\\\\\\"3.0\\\\\\\" m:MaxDataServiceVersion=\\\\\\\"3.0\\\\\\\">\\\\r\\\\n <Schema xmlns=\\\\\\\"http://schemas.microsoft.com/ado/2009/11/edm\\\\\\\" Namespace=\\\\\\\"DefaultNamespace\\\\\\\">\\\\r\\\\n <EntityType Name=\\\\\\\"Employee\\\\\\\">\\\\r\\\\n <Key>\\\\r\\\\n <PropertyRef Name=\\\\\\\"ID\\\\\\\" />\\\\r\\\\n </Key>\\\\r\\\\n <Property Name=\\\\\\\"ID\\\\\\\" Type=\\\\\\\"Edm.Int64\\\\\\\" Nullable=\\\\\\\"false\\\\\\\" mx:isAttribute=\\\\\\\"false\\\\\\\" />\\\\r\\\\n <Property Name=\\\\\\\"Name\\\\\\\" Type=\\\\\\\"Edm.String\\\\\\\" MaxLength=\\\\\\\"200\\\\\\\" />\\\\r\\\\n <Property Name=\\\\\\\"DateOfBirth\\\\\\\" Type=\\\\\\\"Edm.DateTimeOffset\\\\\\\" />\\\\r\\\\n <Property Name=\\\\\\\"Address\\\\\\\" Type=\\\\\\\"Edm.String\\\\\\\" MaxLength=\\\\\\\"200\\\\\\\" />\\\\r\\\\n <Property Name=\\\\\\\"JobTitle\\\\\\\" Type=\\\\\\\"Edm.String\\\\\\\" MaxLength=\\\\\\\"200\\\\\\\" />\\\\r\\\\n <Property Name=\\\\\\\"Salary\\\\\\\" Type=\\\\\\\"Edm.Decimal\\\\\\\" />\\\\r\\\\n </EntityType>\\\\r\\\\n <EntityContainer Name=\\\\\\\"test.acme.employeeinformation/v1Entities\\\\\\\" m:IsDefaultEntityContainer=\\\\\\\"true\\\\\\\">\\\\r\\\\n <EntitySet Name=\\\\\\\"Employees\\\\\\\" EntityType=\\\\\\\"DefaultNamespace.Employee\\\\\\\" />\\\\r\\\\n </EntityContainer>\\\\r\\\\n </Schema>\\\\r\\\\n </edmx:DataServices>\\\\r\\\\n</edmx:Edmx>\\\" } ], \\\"security\\\": { \\\"types\\\": [ { \\\"type\\\": \\\"MxID\\\", \\\"authenticationModuleId\\\": \\\"a4f7847b-9562-4b5a-adc2-4a0bf41cc534\\\" } ], \\\"allowedRoles\\\": [ { \\\"name\\\": \\\"User\\\", \\\"id\\\": \\\"91ca220e-9498-4d23-9d2e-90b9c19aca37\\\" } ] } } ], \\\"consumed\\\": [ { \\\"name\\\": \\\"test.acme.employeemanagement\\\", \\\"version\\\": \\\"1.0\\\", \\\"serviceType\\\": \\\"OData 3.0\\\", \\\"constant\\\": \\\"MyFirstModule.EmployeeManagement_Location\\\", \\\"uses\\\": [{ \\\"type\\\": \\\"entity\\\", \\\"name\\\": \\\"ManagingEmployees\\\" }] } ] }\",\n  \"endpointLocationConstants\": [\n    {\n      \"name\": \"MyFirstModule.EmployeeManagement_Location\",\n      \"value\": \"https://hr.acmecorp.test/employeeservice/v2\"\n    }\n  ]\n}'\n```\n\n----------------------------------------\n\nTITLE: Creating a Microflow for Sending Push Notifications - Mendix\nDESCRIPTION: This snippet outlines the steps to create a microflow named ACT_SendProductToAllDevices. The microflow retrieves device information from the database and sends a push notification with a specified message data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/notif-mult-devices.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Add a *Product* data parameter to your microflow.\n2. Retrieve the *PushNotifications.Device* entity list from a database:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/notif-mult-devices/retrieveDevices.png\" alt=\"retrieveDevices\"   width=\"300\"  class=\"no-border\" >}}\n\n3. Drag the **PrepareMessageData** microflow from *PushNotifications/_USE ME/API* onto **ACT_SendProductToAllDevices** and configure the following:<br />\n    1. Title: *myTitle*.<br />\n    1. Body: *myBody*.<br />\n    1. TimeToLive: *0*.<br />\n    1. Badge: *0*.<br />\n    1. ActionName: *sendProduct*.<br />\n    1. ContextObjectGuid: *empty*:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/notif-mult-devices/prepareMessageData.png\" alt=\"prepareMessageData\"   width=\"300\"  class=\"no-border\" >}}\n\n    **ContextObjectGuid** is set to empty since you will pass the object itself to the **SendMessageToDevices** Java action where it will be retrieved automatically.\n\n4. Drag the **SendMessageToDevices** Java action from *PushNotifications/_USE ME/API* onto **ACT_SendProductToAllDevices** and configure the following:<br />\n    1. **Message data param**: **$MessageToBeSent**.<br />\n    1. **Device param**: **$Devices**.<br />\n    1. **Context object**: **$Product**:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/notif-mult-devices/sendMessagesJava.png\" alt=\"sendMessagesJava\"   width=\"300\"  class=\"no-border\" >}}\n\n5. Go to **Product_NewEdit** and drag **ACT_SendProductToAllDevices** into that page's data view:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/notif-mult-devices/sendProductToAllButton.png\" alt=\"sendProductToAllButton\"   width=\"300\"  class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting Long JSON Imports\nDESCRIPTION: Provides configuration for handling very long JSON strings that exceed default library constraints in Mendix\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/mapping-documents/import-mappings.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Configuration\nCODE:\n```\nmapping.import.MaxJsonReadingLength custom setting\n```\n\n----------------------------------------\n\nTITLE: Configuring Design Properties in Mendix Native Mobile App\nDESCRIPTION: Configure design properties in the settings-native.json file to enable developers to implement designs without writing custom styling. This is a crucial step in empowering developers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/ui-best-practices.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n// File: theme/settings-native.json\n// Modify this file to configure design properties\n```\n\n----------------------------------------\n\nTITLE: Android NFC Manifest Permissions\nDESCRIPTION: Add NFC permissions and feature declarations in the Android manifest file\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<uses-permission android:name=\"android.permission.NFC\" />\n<uses-feature android:name=\"android.hardware.nfc\" android:required=\"false\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring GCP Workload Identity Binding for Google Artifact Registry\nDESCRIPTION: Command to bind GCP Service Account to Kubernetes Service Account for workload identity authentication. Requires PROJECT_ID, K8S_NAMESPACE, KSA_NAME and GSA_NAME parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-registry.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngcloud iam service-accounts add-iam-policy-binding \\\n    --role roles/iam.workloadIdentityUser \\\n    --member \"serviceAccount:PROJECT_ID.svc.id.goog[K8S_NAMESPACE/KSA_NAME]\" \\\n    GSA_NAME@PROJECT_ID.iam.gserviceaccount.com\n```\n\n----------------------------------------\n\nTITLE: Using Big.js for Numeric Precision in Mendix\nDESCRIPTION: This snippet illustrates using the Big.js library for high-precision arithmetic in JavaScript actions within Mendix.  Mendix represents decimal, integer, and long types as Big objects to avoid JavaScript's native number limitations. This example shows how to perform addition with Big.js.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Precision limitation of JavaScript numbers\n0.1 + 0.2                  // 0.30000000000000004\n// Solved with BigJs\nx = new Big(0.1)\ny = x.plus(0.2)            // '0.3'\n```\n\n----------------------------------------\n\nTITLE: Few-Shot Prompting Example\nDESCRIPTION: This snippet illustrates Few-Shot Prompting by providing the model with examples to solve a sentiment classification problem. It shows how to guide the model to follow specific patterns for sentiment analysis, which improves the quality of the model's outputs compared to asking the LLM to come up with the answer without any examples.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"You are a classification assistant.\nYour job is to classify user reviews based on their sentiment.\n\n<examples>\nUser prompt: I love the product!\nResponse: positive\n\nUser prompt: It didn't meet my expectations\nResponse: negative\n\nUser prompt: It's the best thing I ever bought\nResponse: positive\n</examples>\"\n```\n\n----------------------------------------\n\nTITLE: Finding Maximum Total Price in Sales Order Using XPath\nDESCRIPTION: This code snippet demonstrates the usage of the XPath max function to find the highest total price in any Sales Order. It queries the TotalPrice attribute to return the maximum value from the dataset.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-max.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmax(//Sales.Order/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Manual Button-Based SSO Redirection in JavaScript\nDESCRIPTION: This JavaScript code snippet is used for manual SSO redirection through a button click. By attaching a specific onclick event to a button, this code helps activate the login process only when a user interacts with the button. It constructs the correct destination URL, ensuring users are redirected appropriately after authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.location.href='/SSO/login?cont=' + encodeURIComponent(window.location.search + window.location.hash);\n```\n\n----------------------------------------\n\nTITLE: Creating Custom HTML Error Pages\nDESCRIPTION: An example of an HTML page that serves as a custom error page, specifically when an application is offline. The page links to external resources like CSS and JavaScript files located in the same directory structure to enhance the page's appearance and behavior.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/custom-error-page.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\\n<html>\\n  <head>\\n    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"/error_page/style.css\\\">\\n    <script src=\\\"/error_page/script.js\\\"></script>\\n  </head>\\n  <body>\\n    This application is currently offline.\\n  </body>\\n</html>\n```\n\n----------------------------------------\n\nTITLE: Querying Raw Sales Data in SQL\nDESCRIPTION: Basic SELECT query to retrieve all data from Sales.Raw table.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_31\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM Sales.Raw\n```\n\n----------------------------------------\n\nTITLE: Using Subquery with IN in HAVING Clause in SQL\nDESCRIPTION: Demonstrates how to use a subquery with the IN operator in the HAVING clause. This example groups locations by city and finds cities that have at least one Rekall brand location, achieving the same result as the EXISTS example.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_62\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(*) AS LocationCount, City AS City\nFROM Sales.Location AS Location\nGROUP BY City\nHAVING\n\tLocation/City IN (\n\t\tSELECT SubLocation/City\n\t\tFROM Sales.Location AS SubLocation\n\t\tWHERE SubLocation/Brand = 'Rekall'\n\t)\n```\n\n----------------------------------------\n\nTITLE: Including Refguide Basic Functions Snippet in Markdown\nDESCRIPTION: A markdown snippet inclusion for documenting basic widget functions, referenced from a shared file location\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide9/performing-basic-functions-widgets.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Customer Entity with Location in Mendix SDK\nDESCRIPTION: This snippet demonstrates how to create a 'Customer' entity in the Mendix SDK and set its properties, including its name and location in the domain model editor.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-the-domain-model.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst customer = domainmodels.Entity.createIn(domainModel);\ncustomer.name = `Customer`;\n```\n\nLANGUAGE: typescript\nCODE:\n```\ncustomer.location = { x: 100, y: 100 };\n```\n\n----------------------------------------\n\nTITLE: Core Widgets Overview in Document Templates\nDESCRIPTION: Core widgets are essential for displaying entity data in document templates, including data grids, data views, and template grids for rendering single or multiple entity records\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Data Grid\n\nThe data grid shows a list of objects in a grid. For example, a data grid can show all the orders a customer has placed.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Data View\n\nThe data view is used for showing the contents of exactly one object. If, for example, you want to show details of a single customer you would use a data view to do this.\n```\n\n----------------------------------------\n\nTITLE: Updated CustomStyle Interface for GroupBox Widget\nDESCRIPTION: Updated TypeScript interface that defines the style properties available for the GroupBox widget. The interface removes the unused label property and adds new properties for header, headerContent, and content styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface CustomStyle extends Style {\n    container: ViewStyle;\n    header: ViewStyle;\n    headerContent: TextStyle;\n    content: ViewStyle;\n}\n```\n\n----------------------------------------\n\nTITLE: Sign Out Test Method in Java with Selenium WebDriver\nDESCRIPTION: Test method that automates signing out from a Mendix application by clicking the sign out button. Uses a CSS selector to target the button element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=5)\npublic void signOut() {\n\tdriver.findElement(By.cssSelector(\".mx-name-signOutButton1\")).click();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Widget Property Renderer in React\nDESCRIPTION: Demonstrates how to use the Widgets Property renderer to display child widgets or an empty drop-zone in the preview component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\ntype Props = {\n    content: WidgetsProperty;\n}\n\nexport const preview: React.FC<Props> = (props) => {\n    const ContentRenderer = props.content.renderer;\n\n    return (\n        <div className=\"my-pw-container\">\n            <div className=\"my-pw-header\">…</div>\n            <ContentRenderer><div className=\"my-pw-content\" /></ContentRenderer>\n        </div>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Example Widget Values Structure in JavaScript\nDESCRIPTION: This JavaScript object demonstrates the values structure that would be passed to the getProperties function for a widget with three configured data points.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    caption: \"My graph\",\n    dataCaption: \"Points\",\n    dataPoints: [\n        { x: 0, y: 10 },\n        { x: 1, y: 12 },\n        { x: 2, y: 5 }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Proxy Parameters Directly in Command Line\nDESCRIPTION: Demonstrates how to set proxy host and port directly when launching an application, for example from Eclipse.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/using-a-proxy-to-call-a-webservice.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-Dhttp.proxyHost=myproxyserver.com  -Dhttp.proxyPort=3128\n```\n\n----------------------------------------\n\nTITLE: Navigating to Native Builder Directory - Powershell\nDESCRIPTION: This snippet demonstrates how to navigate to the directory where the Native Builder executable is located using Powershell. Ensure that you replace '{path to Native Builder executable file}' with the actual path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-devapps-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\ncd {path to Native Builder executable file}\n```\n\n----------------------------------------\n\nTITLE: Configuring Metrics Counter in Mendix\nDESCRIPTION: Demonstrates how to increment a metrics counter with specific naming conventions and tagging requirements in a Mendix microflow\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/metrics-activities/metrics-increment-counter.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nName Rules:\n- Contains only alpha-numeric characters, dots, underscores\n- Starts with a letter\n- Cannot start with 'mx'\n- Case-insensitive\n- Recommended: Use common prefix for organization/application\n```\n\n----------------------------------------\n\nTITLE: Using Icon Component with SVG in Pluggable Widget\nDESCRIPTION: This JSX code demonstrates how to use the `Icon` component from `mendix/components/native/Icon` to display an SVG icon within a pluggable native widget. The `icon` prop is an object that specifies the icon type as 'image' and provides the `iconUrl`. The `size` and `color` props control the icon's dimensions and color, respectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createElement } from \"react\";\nimport { Icon } from \"mendix/components/native/Icon\";\n\nexport const PluggableWidget = () => (\n    <Icon \n        icon={{\n            type: \"image\",\n            iconUrl: \"PUT_SOURCE_HERE\"\n        }}\n        size={20}\n        color=\"blue\"\n    />\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Mail in SQL Server\nDESCRIPTION: Set up database mail configuration for sending maintenance notifications with a public and default email profile\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/mendix-sql-maintenance-plans.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\n-- Configure Database Mail\n-- 1. Choose a valid email sender address\n-- 2. Set email profile to Public and Default\n-- 3. Verify configuration by sending a test email\n```\n\n----------------------------------------\n\nTITLE: Example Carousel Style Object Structure in JavaScript\nDESCRIPTION: JavaScript example showing the structure of a style object for the Carousel widget. It demonstrates how to define container, cardLayout, and fullWidthLayout properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_36\n\nLANGUAGE: text\nCODE:\n```\nexport myCarouselStyle = {\n    container: ViewStyle  //\n    cardLayout: ...LayoutStyle,\n    fullWidthLayout: ...LayoutStyle\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Read-Only Functionality in TextBox Component\nDESCRIPTION: Updates the TextBox render function to handle read-only state based on various conditions including security rights and widget configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_1\n\nLANGUAGE: TSX\nCODE:\n```\nrender(): ReactNode {\n    const value = this.props.textAttribute.value || \"\";\n    return <TextInput\n        value={value}\n        style={this.props.style}\n        className={this.props.class}\n        tabIndex={this.props.tabIndex}\n        onUpdate={this.onUpdateHandle}\n        disabled={this.props.textAttribute.readOnly}\n    />;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating GroupBoxProps Interface\nDESCRIPTION: This TypeScript snippet updates the `GroupBoxProps` interface to include the `headerCaption` property.  It replaces the `sampleText` property with the new `headerCaption` property, maintaining the optional string type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxProps {\n        headerCaption?: string;\n        style: CustomStyle[];\n    }\n```\n\n----------------------------------------\n\nTITLE: Duration/Interval Setting Examples - HOCON Duration Formats\nDESCRIPTION: Demonstrates duration specification using HOCON (Human-Optimized Config Object Notation) format, which allows more readable time interval representations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n7 days\n90m\n1 second\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Files in settings.json for Atlas UI v2.1.0\nDESCRIPTION: Updated CSS file configuration in Atlas UI version 2.1.0 settings.json, which uses a single main.css file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-atlas.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"cssFiles\": [\n\t\"styles/web/css/main.css\"\n],\n```\n\n----------------------------------------\n\nTITLE: Validating Environment Deletion Commands in Shell\nDESCRIPTION: This code snippet provides commands to verify the deletion of an environment in a Kubernetes cluster by checking the existence of storage instances. It is essential to ensure that all corresponding resources have been removed before creating a new environment with the same name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} get storageinstance {environment-name}-file\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl get storageinstance {environment-name}-database\n```\n\n----------------------------------------\n\nTITLE: Specifying Default Pod Labels in YAML\nDESCRIPTION: Defines default pod labels for app-related pods using the 'customPodLabels.general' section in OperatorConfiguration. Applies to task pods and runtime pods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # ...\n  # Other configuration options values\n  # Optional: custom pod labels\n  customPodLabels:\n    # Optional: general pod labels (applied to all app-related pods)\n    general:\n      # Example: enable Azure Workload Identity\n      azure.workload.identity/use: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Editability Condition Configuration\nDESCRIPTION: Configuring widget editability based on attribute values or expressions, providing dynamic form interaction\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Value       | Description                                                  |\n| ----------- | ------------------------------------------------------------ |\n| Default     | The value is editable if security allows it |\n| Inherited from snippet call | Set to **Default** or **Never** by the containing data container |\n| Never       | The value is never editable |\n| Conditionally | The value is editable if the specified condition holds |\n```\n\n----------------------------------------\n\nTITLE: Configuring Domain Model Object Reference\nDESCRIPTION: Shows how to create a reference between a custom entity and the System.Session entity to maintain object state across pages in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/minimize-number.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide9/runtime/minimize-number/domain_model_npe.png\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Creating Microflow Configuration\nDESCRIPTION: Configuration for a microflow named IVK_SetOrderToComplete that handles order processing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/create-a-secure-app.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto9/security/create-a-secure-app/8946316.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Adding Styling with Props in TextBox.tsx\nDESCRIPTION: This code snippet demonstrates how to pass standard properties (style, class, tabIndex) from the runtime to the TextInput component. It enables users to style the widget like any other Mendix widget via the Properties sidebar.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n        const value = props.textAttribute.value || \"\";\n        return <TextInput \n            value={value} \n            style={props.style} \n            className={props.class} \n            tabIndex={props.tabIndex} \n        />;\n    }\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom HTTP Header Validation in Mendix\nDESCRIPTION: This XML snippet demonstrates how to set up custom HTTP header validation for published entities in Mendix. It shows the process of adding an OIDC token to the Authorization header using a microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/security-authentication.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<figure src=\"/attachments/catalog/security/authentication-headers-from-microflow.png\" alt=\"authentication flow\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Host and Port in .m2eerc\nDESCRIPTION: This snippet shows how to configure proxy server settings in the .m2eerc file using JVM parameters. It sets the http.proxyHost and http.proxyPort properties to enable proxy server usage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-web-services/using-a-proxy-to-call-a-webservice.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n...\n# custom java options, like -Xmx256m or -Djava.foo=bar\n javaopts: [ ..., \"-Dhttp.proxyHost=myproxyserver.com\", \"-Dhttp.proxyPort=3128\"]\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Frontmatter for Security Documentation\nDESCRIPTION: YAML frontmatter configuration for a security documentation page, including title, URL, weight, and description parameters for content organization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Security\"\nurl: /howto9/security/\nweight: 90\ndescription: \"Presents a series of how-tos to secure your data and ensure that the right user is seeing the right data.\"\nno_list: false\ndescription_list: true\n---\n```\n\n----------------------------------------\n\nTITLE: Creating OL_RegisterDeepLink Nanoflow in Mendix\nDESCRIPTION: This snippet outlines the steps to create a nanoflow named OL_RegisterDeepLink that registers deep link handling when the app is started. It requires the App events widget from the Native Mobile Resource module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n// Step to create the OL_RegisterDeepLink nanoflow\n// 1. Add App events widget to the home page\n// 2. Configure App events to call OL_RegisterDeepLink on Page load\n```\n\n----------------------------------------\n\nTITLE: Query with Unnamed Columns (No Longer Allowed in OQL v2)\nDESCRIPTION: Example of a query that was allowed in OQL v1 but is invalid in OQL v2 because it contains functions and subqueries without aliases, leading to columns without names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  Name,\n  LENGTH(Name),\n  (\n    SELECT COUNT(*)\n    FROM Module.Person\n    WHERE Module.Person/City = Module.City/Name\n  )\nFROM Module.City\n```\n\n----------------------------------------\n\nTITLE: Styling QR Code Structure\nDESCRIPTION: XML structure showing the container and QR code elements for styling a QR code widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_25\n\nLANGUAGE: XML\nCODE:\n```\n<container>\n\t<qrcode/>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Executing Custom SQL Query in Java for Mendix\nDESCRIPTION: This snippet demonstrates how to execute a custom SQL query using JDBC in a Mendix Java action. It includes defining the SQL statement, creating a prepared statement, setting parameters, and processing the result set to create Mendix objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic java.util.List<IMendixObject> executeAction() throws Exception\n{\n    // BEGIN USER CODE\n    String sql =\n            \"with first_day_of_month as (\\n \" +\n            \"  SELECT * \\n\" +\n            \"  FROM   generate_series\\n\" +\n            \"         ( date_trunc('month', ?::timestamp)\\n\" +\n            \"         , ?, '1 months'\\n\" +\n            \"         ) as firstday\\n\" +\n            \"),\\n\" +\n            \"firstmonday as (\\n\" +\n            \"  select fdom.firstday::date + \\n\" +\n            \"           ((8 - extract(dow from fdom.firstday))::integer % 7) \\n\" +\n            \"           as first_monday_date\\n\" +\n            \"  from   first_day_of_month as fdom\\n\" +\n            \")\\n\" +\n            \"select fm.first_monday_date\\n\" +\n            \"from   firstmonday  as fm\\n\" +\n            \"where  fm.first_monday_date >= ?::timestamp\\n\" +\n            \"and    fm.first_monday_date <= ?::timestamp\\n\" +\n            \";\"\n            ;\n    logger.info(\"executeAction: \" + sql);\n```\n\nLANGUAGE: java\nCODE:\n```\nList<IMendixObject> resultList = null;\nresultList = Core.dataStorage().executeWithConnection(connection -> {\n    List<IMendixObject> result = new ArrayList<IMendixObject>();\n    try {\n        PreparedStatement stmt = connection.prepareStatement(sql);\n        // bind start and end date variables\n        stmt.setDate(1,new java.sql.Date(this.StartDate.getTime()));\n        stmt.setDate(2, new java.sql.Date(this.EndDate.getTime()));\n        stmt.setDate(3,new java.sql.Date(this.StartDate.getTime()));\n        stmt.setDate(4, new java.sql.Date(this.EndDate.getTime()));\n        ResultSet rset = stmt.executeQuery();\n        ResultSetMetaData rmd = rset.getMetaData();\n```\n\nLANGUAGE: java\nCODE:\n```\n// loop through first monday records\nwhile(rset.next()){\n    // create FirstMondayDate mendix entity and add to list\n    FirstMondayDate dateObj = new hr.proxies.FirstMondayDate(getContext());\n    result.add(dateObj.getMendixObject());\n    dateObj.setDate(rset.getDate(1));\n    logger.debug(String.format(\"Created object %s\", dateObj));\n}\n} catch (SQLException e) {\n    logger.error(\"Failed to execute sql statement: \" + e.getMessage());\n    throw new MendixRuntimeException(e);\n}\nreturn result;\n});\nreturn resultList;\n// END USER CODE\n```\n\n----------------------------------------\n\nTITLE: Adding Grafana Helm Repository\nDESCRIPTION: These commands add the Grafana Helm repository and update the local repository cache.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhelm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Azure SQL Database Connection Configuration\nDESCRIPTION: Configuration settings for connecting a Mendix application to a Microsoft Azure SQL database, including host, database name, username, and password\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"DatabaseType\": \"SQLSERVER\",\n  \"DatabaseHost\": \"your-database-host.database.windows.net:1433\",\n  \"DatabaseName\": \"your-databasename\",\n  \"DatabaseUserName\": \"your-username\",\n  \"DatabasePassword\": \"your-password\"\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Mendix Native Floating Action Button\nDESCRIPTION: Style properties for floating action buttons including container, main button, secondary buttons, icons and captions. Includes size, ripple effects and visual customization options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_floatingactionbutton_FloatingActionButton = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  button: {\n    // This has all ViewStyle properties.\n    size: null, // This is the radius of the button.\n    rippleColor: null, // This is the color of the ripple on Android.\n  },\n  buttonIcon: {\n    // This has all ImageStyle properties.\n  },\n  secondaryButton: {\n    // This has all ViewStyle properties.\n    size: null, // This is the radius of the secondary buttons.\n  },\n  secondaryButtonIcon: {\n    // This has all ImageStyle properties.\n  },\n  secondaryButtonCaption: {\n    // This has all TextStyle properties.\n  },\n  secondaryButtonCaptionContainer: {\n    // This has all ViewStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Basic Chart Layout Configuration (JSON)\nDESCRIPTION: This snippet demonstrates a basic layout configuration for a chart, including font, title, hover mode, legend, hover label, and margin properties. Replace the commented sections with the desired property values to customize the chart's appearance. It serves as a template for adjusting the overall style and elements of the chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"font\": {\n    // font properties\n  },\n  \"title\": \"CHART TITLE\",\n  \"titlefont\": {\n    // title font properties\n  },\n  \"hovermode\": \"closest\",\n  \"showlegend\": true,\n  \"legend\": {\n    // legend properties\n  },\n  \"hoverlabel\": {\n    // hover label properties\n  },\n  \"margin\": {\n    // margin properties\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rich Text CSP Configuration (Version 2.x)\nDESCRIPTION: CSP directives for Rich Text widget versions 2.x and below, enabling script and style sources\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nscript-src 'self' 'unsafe-inline';\nstyle-src 'self' 'unsafe-inline';\n```\n\n----------------------------------------\n\nTITLE: Defining an Action Property in Mendix Pluggable Widgets\nDESCRIPTION: XML definition for an action property named 'buttonAction' that allows users to configure actions like calling nanoflows or opening pages when a button is clicked.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"buttonAction\" type=\"action\">\n\t<caption>On click</caption>\n\t<description>Action to be performed when button is clicked</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: XPath Owner Constraint for Access Rules in Mendix\nDESCRIPTION: An XPath constraint used to implement owner-based access control in Mendix. This constraint ensures the access rule is only applied if the current end-user is the object owner.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_2\n\nLANGUAGE: xpath\nCODE:\n```\n[System.owner='[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Selecting a Microflow Button in Selenium\nDESCRIPTION: A JavaScript Selenium selector that targets a microflow button named 'Execute' using the Mendix-specific CSS class naming convention.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/selenium-support.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$('.mx-name-Execute')\n```\n\n----------------------------------------\n\nTITLE: Preparing dependencies.json for Catalog Registration\nDESCRIPTION: Explains how to generate the dependencies.json file containing published and consumed services metadata for Mendix app registration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/automate-registration.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCreate an `.mda` package that includes *dependencies.json*\n```\n\n----------------------------------------\n\nTITLE: Querying with month-from-dateTime in Studio Pro\nDESCRIPTION: This query retrieves all log entries where the month extracted from the `DateAttribute` equals 12 (December) using the local time zone. It demonstrates the basic usage of the `month-from-dateTime` function in a Studio Pro XPath query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[month-from-dateTime(DateAttribute) = 12]\n```\n\n----------------------------------------\n\nTITLE: Committing Objects in Microflow\nDESCRIPTION: Demonstrates the process of committing one or more objects in a Mendix microflow. Handles persistable and non-persistable entities with configurable event and refresh options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/committing-objects.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nCommit object(s)\n    Object: $Order\n    With events: Yes\n    Refresh in client: No\n```\n\n----------------------------------------\n\nTITLE: Setting Global Font Properties in JSON\nDESCRIPTION: Sets global font properties for the chart, affecting all elements or specific sections like title, axes, and legend. Ensures consistent typography across the chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"font\": {\n    \"family\": \"Open Sans,verdana, arial, sans-serif\",\n    \"size\": 12,\n    \"color\": \"black\"\n  },\n  \"legend\": {\n    \"font\": {}\n  },\n  \"titlefont\": {}\n  \"hoverlabel\": {\n    \"font\": {}\n  },\n  \"xaxis\": {\n    \"titlefont\": {},\n    \"tickfont\": {}\n  },\n  \"yaxis\": {\n    \"titlefont\": {},\n    \"tickfont\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Compiling TypeScript Script\nDESCRIPTION: Compiles TypeScript script to JavaScript using the TypeScript compiler, with optional watch mode for continuous compilation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-creating-your-first-script.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ tsc\n$ tsc --watch\n```\n\n----------------------------------------\n\nTITLE: Importing SCSS Variables\nDESCRIPTION: This SCSS code imports custom variable definitions from a theme module into the main application theme. This allows the application to use the variables defined in the module for styling. The path should be updated to reflect the actual location of the module's custom variables file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_8\n\nLANGUAGE: scss\nCODE:\n```\n\"@import \\\"../../themesource/mytheme/web/custom-variables.scss\\\";\"\n```\n\n----------------------------------------\n\nTITLE: Operator License Status Configuration\nDESCRIPTION: YAML showing the license status section of a Mendix application configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nstatus:\n  licenseStatus:\n    licenseID: 1ca080f8-c54e-4e24-b09c-14353505a65d\n    mode: Licensed\n```\n\n----------------------------------------\n\nTITLE: Jenkins HTTP Request with Groovy Script\nDESCRIPTION: Groovy script example for Jenkins to make HTTP requests to Mendix APIs using the HTTP Request Plugin. Shows how to get the latest revision number for building deployment packages with credential binding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/implement-cicd-pipeline.md#2025-04-21_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\ndef get = new URL(\"https://deploy.mendix.com/api/1/apps/\"+appId+\"/branches/main\").openConnection();\nwithCredentials([string(credentialsId: 'mendixUsername', variable: 'username'),\n               string(credentialsId: 'mendixApiKey', variable: 'apikey')]) {\n    def customHeaders = [[name: 'Mendix-Username', value: username],\n                        [name: 'Mendix-ApiKey', value: apikey]]\n    def response = httpRequest httpMode: 'GET',\n                              url: \"https://deploy.mendix.com/api/1/apps/\"+appId+\"/branches/main\",\n                              customHeaders: customHeaders\n    def json = new groovy.json.JsonSlurper().parseText(response.content)\n    return json.latestCommit.id\n}\n```\n\n----------------------------------------\n\nTITLE: Synchronize Activity Overview in Mendix\nDESCRIPTION: Configuration details for synchronizing data between mobile device and server using different modes: All Objects, Unsynchronized Objects, and Selected Objects\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/synchronize.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Synchronization Modes\n\nAll three modes perform synchronization in two phases: upload and download.\n```\n\n----------------------------------------\n\nTITLE: Accessing Authtoken in Native Mobile - New Implementation\nDESCRIPTION: Updated implementation for handling auth tokens using the new encryption-compatible setValue method from mendix/utils/native/authtoken.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.8.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { setValue } from \"mendix/utils/native/authtoken\"\n...\nawait setValue(value)\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Image List View in Mendix\nDESCRIPTION: Sets up a list view to display attached images with dynamic image widgets and a delete button for each image\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/image-and-file-widgets/attach-images.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Page Layout\nCODE:\n```\nList View:\n- Entity: Receipt\n- Layout: 4,4,4 grid\n- Widgets: Dynamic Image, Name, Delete Button\n```\n\n----------------------------------------\n\nTITLE: Main Line Ignored Files Example\nDESCRIPTION: This snippet showcases an example list of files and directories that are set to be ignored in the main line of a version-controlled project. These entries are typically stored in the 'svn:ignore' property, ensuring that non-essential files like 'node_modules' or '.mendix-cache' are not committed to the Team Server. This setup helps maintain a clean and efficient repository by excluding temporary or user-specific files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/troubleshoot-version-control-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nmodeler-merge-marker\n.mendix-cache\nResolveIgnoreConflict.mpr.lock\n*.launch\nResolveIgnoreConflict.mpr.bak\nnode_modules\n\n```\n\n----------------------------------------\n\nTITLE: Using themecss Token in HTML Index Pages\nDESCRIPTION: This HTML snippet demonstrates how to use the {{themecss}} token in the head section of index pages. This token ensures that the same styling configured in settings.json is loaded when the application runs in a web browser.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/configuring-your-theme.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    {{themecss}}\n</head>\n```\n\n----------------------------------------\n\nTITLE: iOS Bundle Structure - Example\nDESCRIPTION: Illustrative structure of the iOS bundle that is created after building a Mendix Native app, indicating where the assets and bundled index are located.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n- iOS \n    - assets\n        - List of all images namespaced\n        - index.ios.bundle\n```\n\n----------------------------------------\n\nTITLE: Parsing DateTime String with Format Pattern in Mendix\nDESCRIPTION: Parses a datetime string using a specified format pattern and returns a Date and time value. This function uses the user's timezone for interpretation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseDateTime('2022-04-30T22:00:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n```\n\n----------------------------------------\n\nTITLE: Service Registration Response Format in JSON\nDESCRIPTION: This JSON response is returned after a successful service registration. It includes a unique UUID for the endpoint, links to access the endpoint in the Catalog and API, service metadata, security information, and status indicators for validation and discoverability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"endpoints\": [\n        {\n            \"path\": \"path/to/my/service/endpoint\",\n            \"securityClassification\": \"Internal\",\n            \"uuid\": \"f8e1772a-4bd2-43c7-bb1c-3bc61eb8bf5c\",\n            \"links\": [\n                {\n                    \"href\": \"https://catalog.mendix.com/rest/registration/v5/endpoints/f8e1772a-4bd2-43c7-bb1c-3bc61eb8bf5c\",\n                    \"rel\": \"Self\"\n                },\n                {\n                    \"href\": \"https://catalog.mendix.com/link/endpoint?EndpointUUID=f8e1772a-4bd2-43c7-bb1c-3bc61eb8bf5c\",\n                    \"rel\": \"Catalog\"\n                }\n            ],\n            \"connections\": 0,\n            \"lastUpdated\": \"2023-08-03T11:40:39.462Z\",\n            \"serviceVersion\": {\n                \"version\": \"1.0\",\n                \"description\": \"\",\n                \"publishDate\": \"2023-08-03T11:40:04.978Z\",\n                \"uuid\": \"ffdf7a37-b3df-4488-b4de-79553ed34888\",\n                \"service\": {\n                    \"name\": \"My-Service-Name\",\n                    \"uuid\": \"e36650ab-9a89-4a2d-8b88-d57a2efa5b9e\",\n                    \"links\": [\n                        {\n                            \"href\": \"https://catalog.mendix.com/rest/registration/v5/applications/831ae898-7ee2-4e60-bf9c-2c709e0050b6/services/My-Service-Name\",\n                            \"rel\": \"Self\"\n                        }\n                    ]\n                },\n                \"securityScheme\": {\n                    \"securityTypes\": [\n                        {\n                            \"name\": \"Basic\"\n                        }\n                    ]\n                },\n                \"type\": \"OData\"\n            },\n            \"validated\": false,\n            \"discoverable\": true\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Checkbox Input Control Structure in HTML\nDESCRIPTION: Illustrates the HTML structure for a checkbox input control, both with and without a label positioned after the control.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_13\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" value=\"\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"checkbox\" id=\"123_abc\" value=\"\" />\n<label for=\"123_abc\">Label</label>\n```\n\n----------------------------------------\n\nTITLE: Non-Custom Claims in Access Token\nDESCRIPTION: JSON structure of non-custom claims in the access token, including audience, subject, issuer, and other standard JWT claims. Newer versions include client_id and jti claims.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/oidc-provider.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"aud\": \"d99a49b9-95d7-410e-b79a\",\n    \"sub\": \"T6hOS9jBEBMqk3Dk\",\n    \"nbf\": 1681969726,\n    \"scope\": \"\",\n    \"iss\": \"http://localhost:8080/\",\n    \"name\": \"test\",\n    \"exp\": 1682056126,\n    \"iat\": 1681969726,\n    \"client_id\": \"d99a49b9-95d7-410e-b79a\",\n    \"jti\": \"ab86f730-c116-45c6-9b68-842190f7d8b1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Get Text Action in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Get Text' action in a markdown table format. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-get/rg-one-get-text.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nValue | String | The current value of the WebElement.\n```\n\n----------------------------------------\n\nTITLE: HTML Login Redirect Parameter Usage\nDESCRIPTION: A new parameter was added to login.html to enable redirect functionality after user login.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.18.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nlogin.html\n```\n\n----------------------------------------\n\nTITLE: IconValue Interface Definition in TypeScript\nDESCRIPTION: Defines the different icon types available in Mendix, including glyph icons, web image icons, icon class-based icons, and native image icons, which can be used in pluggable widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ninterface GlyphIcon {\n    readonly type: \"glyph\";\n    readonly iconClass: string;\n}\n    \ninterface WebImageIcon {\n    readonly type: \"image\";\n    readonly iconUrl: string;\n}\n\ninterface Icon {\n    readonly type: \"icon\";\n    readonly iconClass: string;\n}\n    \ninterface NativeImageIcon {\n    readonly type: \"image\";\n    readonly iconUrl: Readonly<ImageURISource>;\n}\n    \nexport type WebIcon = GlyphIcon | WebImageIcon | Icon | undefined;\nexport type NativeIcon = GlyphIcon | NativeImageIcon | undefined;\nexport type IconValue = WebIcon | NativeIcon;\n```\n\n----------------------------------------\n\nTITLE: Introducing PublishedRestResource Optional Properties\nDESCRIPTION: Added new optional microflow properties to the PublishedRestResource element to customize update, query, and count functionality in Mendix SDK Metamodel 9.9.0\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-9/metamodel-9.9.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* We introduced the `updateMicroflow` property for an optional microflow that replaces the default update functionality.\n* We introduced the `queryMicroflow` and `countMicroflow` properties.\n```\n\n----------------------------------------\n\nTITLE: Combined svn:ignore Property Value\nDESCRIPTION: Example of a combined svn:ignore property value after resolving a merge conflict, including items from both the main line and branch.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nmodeler-merge-marker\n.mendix-cache\nResolveIgnoreConflict.mpr.lock\n*.launch\nResolveIgnoreConflict.mpr.bak\nnode_modules\n.project\n.classpath\ndeployment\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Box Widget XML Properties\nDESCRIPTION: Adds collapsible property to the Mendix widget XML configuration with enumeration values for different collapse states\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_40\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <properties>\n        <property key=\"collapsible\" type=\"enumeration\" defaultValue=\"no\">\n            <caption>Collapsible</caption>\n            <enumerationValues>\n                <enumerationValue key=\"no\">No</enumerationValue>\n                <enumerationValue key=\"yesStartExpanded\">Yes (start expanded)</enumerationValue>\n                <enumerationValue key=\"yesStartCollapsed\">Yes (start collapsed)</enumerationValue>\n            </enumerationValues>\n        </property>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Setting Sort Attribute Parameter in Mendix Microflow\nDESCRIPTION: Sets the sort attribute parameter for the REST service call in a Mendix microflow. This parameter determines which attribute to sort by.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_3\n\nLANGUAGE: Expression\nCODE:\n```\ntoLowerCase($Paging/SortAttribute)\n```\n\n----------------------------------------\n\nTITLE: Any Chart Layout Configuration\nDESCRIPTION: Illustrates the JSON structure for configuring chart layout options, including title, annotations, and visual attributes using Plotly.js reference specifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-building-blocks.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"layout\": {\n        \"title\": \"Chart Title\",\n        \"xaxis\": {\n            \"title\": \"X Axis Label\"\n        },\n        \"yaxis\": {\n            \"title\": \"Y Axis Label\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Packaging iOS Private Key and Certificate\nDESCRIPTION: This command combines the private key and certificate into a PKCS#12 (.p12) file, which is used by the Mendix Native Mobile Builder for app signing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" pkcs12 -export -inkey \"C:\\private.key\" -in \"C:\\ios_development.pem\" -out \"C:\\key_and_certificate.p12\"\n```\n\n----------------------------------------\n\nTITLE: Auto-Redirect to SSO with JavaScript\nDESCRIPTION: This snippet automatically redirects users to the SSO login URL using the JavaScript 'window.onload' event. The code sets up an encoded return URL to facilitate seamless user navigation back to the originally requested page upon successful authentication. It is part of the configuration for aiding page and microflow URL support in SSO.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nconst returnURL = encodeURIComponent(window.location.search+window.location.hash);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nself.location = '/SSO/login?cont='+returnURL;\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI 2.0 Schema Structure in JSON\nDESCRIPTION: This JSON snippet outlines the main schema object structure for the swagger.json file generated by Mendix for published REST services. It includes key properties such as swagger version, info, host, basePath, and more.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/open-api-2.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"The name of the service\",\n    \"description\": \"The public documentation of the service\",\n    \"version\": \"1.0.0\"\n  },\n  \"host\": \"The host on which the app is running\",\n  \"basePath\": \"/rest/servicename\",\n  \"schemes\": [\"http and/or https\"],\n  \"responses\": {},\n  \"securityDefinitions\": {},\n  \"security\": [],\n  \"tags\": [],\n  \"paths\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Cocoapods for iOS Native Mobile App\nDESCRIPTION: Install Cocoapods dependencies for the iOS project. For Mac with Apple Silicon, use arch -x86_64 to ensure compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally-manually.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd ios\n```\n\nLANGUAGE: bash\nCODE:\n```\narch -x86_64 pod install\n```\n\nLANGUAGE: bash\nCODE:\n```\npod install\n```\n\n----------------------------------------\n\nTITLE: URL Decoding Strings with urlDecode Function in Java\nDESCRIPTION: The urlDecode function converts a string back from a URL. It takes a single URL-encoded string parameter and returns the decoded string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_16\n\nLANGUAGE: java\nCODE:\n```\nurlDecode('Hello%2C+world%21')\n```\n\nLANGUAGE: java\nCODE:\n```\n'Hello, world!'\n```\n\n----------------------------------------\n\nTITLE: Example iOS Icons Configuration\nDESCRIPTION: This code snippet provides an example of the JSON configuration required for iOS app icons, showcasing how to define multiple icons with different sizes, idioms, scales, and filenames. The configuration includes icons for various device types (iPad, iPhone) and resolutions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n```json\n{\n    \"images\": [\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@1x.png\"\n        },\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@2x.png\"\n        },\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@2x.png\"\n        },\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@3x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@1x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@2x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@2x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@3x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@1x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@2x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@2x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@3x.png\"\n        },\n        {\n            \"size\": \"60x60\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"app@2x.png\"\n        },\n        {\n            \"size\": \"60x60\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"app@3x.png\"\n        },\n        {\n            \"size\": \"76x76\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"ipadapp@1x.png\"\n        },\n        {\n            \"size\": \"76x76\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"ipadapp@2x.png\"\n        },\n        {\n            \"size\": \"83.5x83.5\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"ipadproapp@2x.png\"\n        },\n        {\n            \"size\": \"1024x1024\",\n            \"idiom\": \"ios-marketing\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"appstore@1x.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Chart Background Color Configuration (JSON)\nDESCRIPTION: This snippet sets the background color of the chart's paper area. The `paper_bgcolor` property accepts a hexadecimal color code. This allows for customization of the chart's overall visual appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"paper_bgcolor\": \"#FFF\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Ternary Plot in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a ternary plot with markers and labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n[{\n    \"type\": \"scatterternary\",\n    \"mode\": \"markers\",\n    \"a\": [ 5, 4, 5, 2, 10 ],\n    \"b\": [ 2, 1, 15, 20, 8 ],\n    \"c\": [ 1, 20, 5, 15, 10 ],\n    \"text\":[ \"point 1\", \"point 2\", \"point 3\", \"point 4\", \"point 5\" ]\n}]\n```\n\n----------------------------------------\n\nTITLE: Migrating Additional Custom Styles\nDESCRIPTION: This section details how to move additional stylesheet modifications to the latest Atlas structure, with path options for both app-level and reusable modules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme_atlas2/styles/web/sass/app/_\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme/web/_\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nthemesource/your-module/web/_\n```\n\n----------------------------------------\n\nTITLE: Name Property\nDESCRIPTION: This snippet represents the 'name' property configuration, likely for a Mendix widget.  It defines how the element is named within the Mendix platform for identification and reference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/data-view-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n\"{{% snippet file=\\\"/static/_includes/refguide8/name-property.md\\\" %}}\"\n```\n\n----------------------------------------\n\nTITLE: Calculating String Length with LENGTH - SQL\nDESCRIPTION: This snippet demonstrates the LENGTH function to calculate the character length of the Text field in the Sales.Reports table, allowing for statistical analysis of the text content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_26\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Text, LENGTH(Text) as text_length FROM Sales.Reports\n```\n\n----------------------------------------\n\nTITLE: Configuring Apply Jump-To Option Activity in Mendix\nDESCRIPTION: Demonstrates the configuration of the Apply jump-to option activity in a workflow, which requires a System.WorkflowJumpToDetails object to specify the target activity\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/apply-jump-to-option.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n// Apply Jump-To Option Configuration\n// Requires prior use of Generate jump-to options activity\n// Select target workflow activity from generated options\n```\n\n----------------------------------------\n\nTITLE: Using GreaterThan Filter Helper in TypeScript\nDESCRIPTION: Demonstrates how to use the greaterThan helper to filter items where a value is greater than a specified number. Works with String, HashString, Enumeration, AutoNumber, Integer, Long, Decimal, and DateTime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is greater than 42\nconst filterCondition = greaterThan(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Defining Datasource Props Type in TypeScript\nDESCRIPTION: Type definition for datasource preview properties that extends BaseProps. Includes type property, datasource property object, and optional child component for structure preview.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ntype DatasourceProps = BaseProps & {\n    type: \"Datasource\";\n    property: Nullable<object>; // datasource property object from Values API\n    child?: StructurePreviewProps; // any type of preview property component (optional)\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Numeric Values for SOAP Request Parameters\nDESCRIPTION: Shows the proper format for setting specific numeric values for the Offset and PageSize parameters in a SOAP request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n<Offset>0</Offset>\n<PageSize>10</PageSize>\n```\n\n----------------------------------------\n\nTITLE: Defining OData Metadata URL in XML\nDESCRIPTION: This XML snippet shows an example of an OData metadata URL that can be used to import service definitions. It demonstrates how to reference an OData V4 service metadata file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/consumed-odata-services/consumed-odata-service.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<metadata>https://services.odata.org/V4/Northwind/Northwind.svc/$metadata</metadata>\n```\n\n----------------------------------------\n\nTITLE: Metrics Filter Examples with Influx\nDESCRIPTION: Example of using filters to deny specific metrics in an Influx registry configuration. It demonstrates how to exclude metrics that start with certain prefixes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"influx\",\n    \"settings\": {\n      \"userName\": \"mendix\",\n      \"password\": \"MayBeThis**\"\n    },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"deny\", \"values\" : [\"Unnamed.\", \"Invalid.\", \"Internal.\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Alert Block for Microflow Source Limitation\nDESCRIPTION: Markdown alert block indicating that Microflow data source is not supported in offline applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-sources/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThe **Microflow** source is not supported in offline applications because it implies a call to the server.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Module-Level Custom Web Variables in SCSS\nDESCRIPTION: The module-specific custom variables file that contains the reusable theme definitions. These are imported by the main theme file to apply styling across the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_9\n\nLANGUAGE: scss\nCODE:\n```\n$gray-primary: #e7e7e9;\n\n$brand-default: $gray-primary;\n$brand-primary: #264ae5;\n$brand-success: #3cb33d;\n$brand-warning: #eca51c;\n$brand-danger: #e33f4e;\n```\n\n----------------------------------------\n\nTITLE: Design Properties Section Link\nDESCRIPTION: Links to the design properties section of the text area properties documentation, detailing various design-related attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Styling Native Mobile Date Picker Widget in JavaScript\nDESCRIPTION: Defines styling configuration for date picker widget including container, label, value, placeholder, and iOS-specific picker styles. Includes properties for handling disabled states and validation errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nexport const DatePicker = {\n  container: {\n    // All ViewStyle properties\n  },\n  containerDisabled: {\n    // All ViewStyle properties. Same properties as `container`. Overrides `container` styles if the text box is non-editable.\n  },\n  label: {\n    // This has all TextStyle properties.\n    // Render mode: Both.\n    numberOfLines: 1 // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis. Render mode: Both.\n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the checkbox is non-editable.\n    // Render mode: Both.\n  },\n  value: {\n    // This has all TextStyle properties.\n    rippleColor: 'rgba(0, 0, 0, 0.2)', // This is the color of the ripple on Android, and will be applied only when the date picker is pressed.\n    underlayColor: null, // This is the color while pressing the date picker on iOS, if not set it will be defaulted to opacity only.\n  },\n  valueDisabled: {\n    // This has all TextStyle properties. Overrides `value` styles if the date picker is non-editable.\n  },\n  valueContainerError: {\n    // This has all TextStyle properties. Overrides `value` styles if the date picker has a validation error.\n  }, \n  placeholder: {\n    // This has all TextStyle properties.\n  },\n  placeholderDisabled: {\n    // This has all TextStyle properties.  Overrides `placeholder` styles if the date picker is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n  pickerBackdropIOS: {\n    // This has all Viewstyle properties.\n  },\n  pickerIOS: {\n    // This has all Viewstyle properties.\n    color: null,\n  },\n  pickerTopIOS: {\n    // This has all Viewstyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Getting Database Endpoint with kubectl\nDESCRIPTION: This bash command retrieves the IP address and port for the database endpoint within the Kubernetes cluster, which is required for configuring the `DATABASE_ENDPOINT` secret.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nkubectl get ep postgres-service\n```\n```\n\n----------------------------------------\n\nTITLE: Initializing Contour Chart Configuration in JSON\nDESCRIPTION: This snippet details the configuration for a contour chart in JSON format, specifying z values for contour lines. The expected output will visually represent the contours based on the provided z data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"z\": [ [ 2, 2, 4, 11 ], [ 5, 14, 8, 11 ] ],\n  \"type\": \"contour\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Pod for Mendix Backup and Restore Operations\nDESCRIPTION: YAML configuration that creates a Kubernetes pod with necessary roles and permissions to perform backup and restore operations for Mendix environments. It includes a service account, role, role binding, and a pod with PostgreSQL tools.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mendix-backup-restore\n  annotations:\n    # Optional, to access data from environments using IRSA:\n    # specify an IAM role ARN to use for connecting to the database and S3 storage\n    eks.amazonaws.com/role-arn: arn:aws:iam::<account_id>:role/<role-name>\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: mendix-backup-restore\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - secrets\n  verbs:\n  - get\n- apiGroups:\n  - privatecloud.mendix.com\n  resources:\n  - mendixapps\n  - storageinstances\n  verbs:\n  - get\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: mendix-backup-restore\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: mendix-backup-restore\nsubjects:\n- kind: ServiceAccount\n  name: mendix-backup-restore\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mendix-backup-restore\nspec:\n  serviceAccountName: mendix-backup-restore\n  automountServiceAccountToken: true\n  terminationGracePeriodSeconds: 0\n  containers:\n  - name: pgtools\n    image: docker.io/bitnami/postgresql:12\n    command: [\"sleep\", \"infinity\"]\n    lifecycle:\n      preStop:\n        exec:\n          command: [\"/bin/sh\",\"-c\",\"killall -w sleep\"]\n```\n\n----------------------------------------\n\nTITLE: Importing Group Box Styles into Custom.js\nDESCRIPTION: This JavaScript code exports all styles from the group-box.js file, allowing for better organization of widget-specific styles while maintaining their availability through the custom.js file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\nexport * from \"./group-box\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Selenium Hub with VNC\nDESCRIPTION: This YAML configuration sets up a Selenium hub with Chrome and Firefox nodes that support VNC for live viewing of test execution. It uses debug versions of the node images and maps VNC ports.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-docker-selenium-hub.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nhub: \n image: selenium/hub:3.8.1\n environment:\n   - TZ=Europe/Amsterdam\n   - GRID_TIMEOUT=90\n ports:\n   - 4444:4444\n\nfirefox:\n image: selenium/node-firefox-debug:3.8.1\n links:\n   - hub:hub\n environment:\n   - TZ=Europe/Amsterdam\n   - SCREEN_WIDTH=1600\n   - SCREEN_HEIGHT=900\n ports:\n   - 5901:5900\n\nchrome:\n image: selenium/node-chrome-debug:3.8.1\n links:\n   - hub:hub\n environment:\n   - TZ=Europe/Amsterdam\n   - SCREEN_WIDTH=1600\n   - SCREEN_HEIGHT=900\n ports:\n   - 5900:5900\n volumes:\n   - /dev/shm:/dev/shm\n privileged: true\n```\n\n----------------------------------------\n\nTITLE: Setting Default Input Values in JavaScript Actions\nDESCRIPTION: Demonstrates how to set default values for different types of input parameters when they are not provided or are invalid.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {Big} targetSize\n * @param {\"Module.PictureSource.camera\"|\"Module.PictureSource.gallery\"} pictureSource\n * @param {boolean} correctOrientation\n * @param {string} waterMark\n */\nfunction CameraStart(targetSize, pictureSource, correctOrientation, waterMark) {\n    // BEGIN USER CODE\n    targetSize = targetSize && targetSize > 0 ? targetSize : 150;  // numeric\n    pictureSource = pictureSource ? pictureSource : \"camera\"; // enumeration\n    correctOrientation = correctOrientation ? true : false; // boolean\n    waterMark = waterMark !== undefined ? waterMark : \"DEMO\"; // string\n    /* implementation */\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Bubble Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a bubble chart with colored markers of varying sizes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"marker\": {\n    \"color\": [ \"red\", \"blue\", \"green\" ],\n    \"size\": [ 20, 50, 80 ]\n  },\n  \"mode\": \"markers\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Creating a Dockable Pane Extension Class in C#\nDESCRIPTION: This code defines a dockable pane extension class that implements the DockablePaneExtension interface. It includes a unique identifier and the Open method that returns a view model for the pane content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-dockable-pane.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.ComponentModel.Composition;\nusing Mendix.StudioPro.ExtensionsAPI.UI.DockablePane;\n\nnamespace MyCompany.MyProject.MendixExtension;\n\n[Export(typeof(DockablePaneExtension))]\npublic class MyDockablePaneExtension : DockablePaneExtension\n{\n    public const string ID = \"my-dockable-pane\";\n    public override string Id => ID;\n\n    public override DockablePaneViewModelBase Open() => new MyDockablePaneExtensionWebViewModel(\"http://mendix.com\");\n}\n```\n\n----------------------------------------\n\nTITLE: Adding iOS Background Modes\nDESCRIPTION: Command to add background modes to an iOS app configuration. Currently supports adding notification background mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe config ios add-background-modes --project-name \"CoolApp\" --modes notification\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration in Markdown\nDESCRIPTION: YAML frontmatter configuration for the release notes page, defining title, URL, description and other page metadata.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/developer-portal/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Apps Release Notes\"\nlinktitle: \"Apps\"\nurl: /releasenotes/developer-portal/\ndescription: \"Release notes for app management and other parts of Apps\"\nweight: 20\ncascade:\n    - numberless_headings: true\n---\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Sub-Constraint in Java\nDESCRIPTION: An XPath query with a sub-constraint to retrieve all customers who live in either Rotterdam or Losdun, demonstrating how to constrain on related entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address[City = 'Rotterdam' or City = 'Losdun']]\n```\n\n----------------------------------------\n\nTITLE: Sorting Results with ORDER BY Clause - OQL\nDESCRIPTION: This snippet presents the ORDER BY clause used for sorting query results. The example sorts salespersons by their last names, demonstrating how to order results in ascending order using the ORDER BY clause, regardless of whether the sorted attributes appear in the SELECT list.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_36\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nORDER BY LastName\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix App for Errors\nDESCRIPTION: This command checks the Mendix app at the specified path for errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_10\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check C:\\\\MxProjects\\\\App-main\\\\App-main.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Customers with OR Condition in Mendix\nDESCRIPTION: Demonstrates how to use the 'or' operator to filter customers whose name is 'Jansen' or who live in Rotterdam. Suitable for use with the Mendix platform using Studio Pro or Java query languages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: StudioPro\nCODE:\n```\n[Name = 'Jansen' or Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.Customer[Name = 'Jansen' or Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Data View Section Link Include\nDESCRIPTION: Markdown snippet inclusion for common section documentation link\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-view.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Integer/Long Data Type Examples\nDESCRIPTION: Represents whole numbers within the range of -(2^63) to 2^63 - 1, supporting zero and positive/negative integers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/data-types.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n-42\n0\n123\n```\n\n----------------------------------------\n\nTITLE: Extended Data Type Conversion Rules - Excel Input\nDESCRIPTION: Comprehensive matrix showing supported data type conversions from Excel source types (String, Boolean, Decimal, DateTime) to various target types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/data-importer-extension.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Source Type | Target- String | Target- Int | Target- Long | Target- Decimal | Target- Boolean | Target- DateTime |\n| :-------- | :------- | :-------- | :------- | :-------- | :------- | :-------- |\n| String  | Yes    | Partial    | Partial    | Partial    | Partial    | No    |\n| Boolean  | Yes    | No    | No    | No    | Yes    | No    |\n| Decimal  | Yes    | Partial    | Partial    | Yes    | No    | No    |\n| DateTime  | Yes    | No    | No    | No    | No    | Yes    |\n```\n\n----------------------------------------\n\nTITLE: Starting Mendix Agent Deployment\nDESCRIPTION: This command scales the deployment of the Mendix Agent back up to one replica, starting it again if it was stopped.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-upgrade-guide.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} scale deployment mendix-agent --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Blob Storage Settings\nDESCRIPTION: Configuration properties for connecting Mendix to Azure Blob Storage, including authentication, container management, and performance settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: properties\nCODE:\n```\ncom.mendix.core.StorageService=com.mendix.storage.azure\ncom.mendix.storage.azure.AccountName=\ncom.mendix.storage.azure.AccountKey=\ncom.mendix.storage.azure.SharedAccessSignature=\ncom.mendix.storage.azure.UseDefaultAzureCredential=\ncom.mendix.storage.azure.BlobEndpoint=\ncom.mendix.storage.azure.Container=\ncom.mendix.storage.azure.CreateContainerIfNotExists=true\ncom.mendix.storage.azure.ParallelismFactor=5\ncom.mendix.storage.azure.UseHttps=true\ncom.mendix.storage.azure.TimeoutIntervalInMs=\ncom.mendix.storage.azure.MaximumExecutionTimeInMs=\n```\n\n----------------------------------------\n\nTITLE: OQL SELECT with WHERE Clause for Filtering Customers\nDESCRIPTION: Retrieves the first names of customers with the lastname 'Jansen'. This query demonstrates how to filter results with a WHERE clause and string comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer WHERE LastName = 'Jansen'\n```\n\n----------------------------------------\n\nTITLE: Summing Numeric Attribute Values in Object List\nDESCRIPTION: This snippet sums attribute values within a list of Mendix objects. It ensures valid parameters by verifying the existence of an attribute name in the list objects and checking that it’s numeric. If conditions are not met, the snippet throws an error or returns zero for empty lists.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nasync function SumListAttributeValues(objectList, attributeName) {\n    if (!attributeName || attributeName.trim() === \"\") {\n        throw new Error(\"The 'Attribute name' parameter can not be empty\");\n    }\n    if (!objectList || objectList.length === 0) {\n        return new Big(0);\n    }\n    if (!objectList[0].has(attributeName)) {\n        throw new Error(\"List of type \" + objectList[0].getEntity() + \" does not have an attribute named \" + attributeName);\n    }\n    if (!objectList[0].isNumeric(attributeName)) {\n        throw new Error(\"List of type \" + objectList[0].getEntity() + \" an attribute named \" + attributeName + \" is not numeric\");\n    }\n    /* implementation */\n}\n```\n\n----------------------------------------\n\nTITLE: Checking a Mendix App for Issues\nDESCRIPTION: This command checks a Mendix app (.mpr file) for errors, warnings, deprecations, and performance recommendations. The MPR file must be the same version as the mx tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_8\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check [OPTIONS] INPUT [Optional path to exported Suppress Warnings file (JSON)]\"\n```\n\n----------------------------------------\n\nTITLE: Navigation URL Pattern for Profile Selection\nDESCRIPTION: Example URL pattern showing how to force a specific navigation profile using query parameters when accessing a Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/app/navigation/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://myapp.mendixcloud.com/index.html?profile=Responsive\n```\n\n----------------------------------------\n\nTITLE: Setting Content-Security-Policy for Iframes - Mendix\nDESCRIPTION: Configure the `Content-Security-Policy` HTTP header to allow a Mendix app to run in an iframe. This involves setting the `frame-ancestors` directive specifically for the Mendix Cloud environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/running-in-iframe.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTo enable your app to run inside an iframe, set the `frame-ancestors` directive of the `Content-Security-Policy` HTTP header.\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes from Sales.Request Entity\nDESCRIPTION: This query selects all attributes from the Sales.Request entity using the wildcard selector (*).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Sales.Request\n```\n\n----------------------------------------\n\nTITLE: SQL NULL Ordering Example\nDESCRIPTION: Demonstration of NULL value ordering in SQL ORDER BY clauses. The behavior varies by database engine, with some placing NULLs first and others placing them last in ascending or descending sorts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/ordering-behavior.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nORDER BY column_name [ASC|DESC]\n```\n\n----------------------------------------\n\nTITLE: Example Customer Database Table Schema\nDESCRIPTION: SQL table structure showing how a Customer entity is stored in the database with system attributes and custom fields\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n| id | createddate | changeddate | system$owner | system$changedby | fullname |\n| --: | --- | --- | --: | --: | --- |\n| 1 | 2006-10-24 08:10:45.053 | 2009-11-27 09:56:45.099 | 66 | 29 | Steve Jobs |\n| 3 | 2007-09-30 09:56:45.099 | 2008-04-01 08:10:45.053 | 66 | 34 | Bill Gates |\n```\n\n----------------------------------------\n\nTITLE: INNER JOIN on Association in OQL\nDESCRIPTION: This query demonstrates how to perform an INNER JOIN using an association between entities, which is more efficient when a relationship exists in the data model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_19\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nJOIN Cust/Sales.Request_Customer/Sales.Request Req\n```\n\n----------------------------------------\n\nTITLE: Defining Page Title Widget Styling in JavaScript\nDESCRIPTION: Defines the default styling for a Page Title widget with ViewStyle and TextStyle properties encapsulated in a JavaScript object, facilitating uniform appearance across page titles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nexport const PageTitle = {\n  container: {\n    // All ViewStyle properties\n  },\n  text: {\n    // All TextStyle properties\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Legend Position Configuration - Inside (JSON)\nDESCRIPTION: This snippet configures the chart legend to be displayed inside the chart area. By setting the `x` value to 0, the legend is positioned within the plot itself.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": true,\n  \"legend\": {\n    \"x\": 0\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Light Button\nDESCRIPTION: This snippet creates an outlined Bootstrap button using the 'light' color pattern. All buttons utilize a similar configurational approach.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"outline-light\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Light\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Calculating Hours Between Dates in Java\nDESCRIPTION: Example of using hoursBetween function to calculate the difference between two dates in hours.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nhoursBetween(dateTime(2007, 1, 1, 3, 31, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace\nDESCRIPTION: This command creates a new namespace in Kubernetes for the monitoring tools.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nkubectl create namespace {namespace}\n```\n\n----------------------------------------\n\nTITLE: Creating a Centered Button using Row Layouts in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a centered button using row layouts. It uses containers with different grow factors to center the button text within a bordered container.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"RowLayout\",\n        columnSize: \"grow\",\n        borders: true,\n        borderRadius: 20,\n        backgroundColor: \"#2A2C96\",\n        children: [\n            {\n                type: \"Container\", // fills space on the left\n            },\n            {\n                type: \"Container\",\n                grow: 0, // ensures that it only takes necessary space\n                padding: 10,\n                children: [\n                    { type: \"Text\", content: \"A button\", fontColor: \"#FFF\", fontSize: 20 }\n                ]\n            },\n            {\n                type: \"Container\", // fills space on the right\n            }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Branches Endpoint Request with Pagination\nDESCRIPTION: HTTP GET request for retrieving branches from a repository with pagination parameters, including a limit and cursor.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/repositories/c0af1725-edae-4345-aea7-2f94f7760e33/branches?limit=20&cursor=Rmlyc3RQYWdlQ3Vyc29y HTTP/1.1\nHost: repository.api.mendix.com\nAccept: */*\nAuthorization: MxToken hZUPhAV4ELPrRm7U7JAKf5BnxJk6q7dcsvFdw6ZR4wRYdv7egHjwHEYBwXY4RkSZrAWde3XqVAQkxZNPysvHcpquA9sK9bsKmcTN\n```\n\n----------------------------------------\n\nTITLE: Importing Custom Native Variables in Main Theme File\nDESCRIPTION: The main native theme file that exports all variables from the module-specific file. This structure allows for reusing the native theme across different apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nexport * from \"../../themesource/mytheme/native/custom-variables\";\n```\n\n----------------------------------------\n\nTITLE: Microflow Time Stamp - Create Variable (Mendix)\nDESCRIPTION: This snippet shows how to create a variable to store the current time at the start of a microflow for timing purposes. It creates a variable named 'startTime' and sets its value to the current time using the 'dateTimeNow()' function. This variable is used to calculate the execution time of the microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-performance/detect-and-resolve-performance-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n\"Create variable startTime = dateTimeNow()\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Type Initialization Error in Event Viewer\nDESCRIPTION: This code snippet shows an example of a type initialization error message that may appear in the Event Viewer when there are issues with the Mendix Service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/troubleshooting-iis.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nEventType clr20r3, P1 mendixservice.exe, P2 1.0.3810.25652, P3 4c0cf0d8, P4 mendixservice, P5 1.0.3810.25652, P6 4c0cf0d8, P7 2, P8 6, P9 system.typeinitialization, P10 NIL.\n```\n\n----------------------------------------\n\nTITLE: Defining a Form Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define a form property within a Mendix widget. The form property allows the widget to receive a Mendix form as input, which can be used to display data or interact with the user. The `needsEntityContext` attribute determines whether the form automatically receives the current object context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"helpForm\" type=\"form\">\n  <caption>Help Form</caption>\n  <category>Behaviour</category>\n  <description>Form to open</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring X and Y Axes in JSON\nDESCRIPTION: This snippet outlines the configuration for both x and y axes in a chart, including title, grid color, line visibility, and fixed range settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"gridcolor\": \"#eaeaea\",\n    \"title\": \"X-axis\",\n    \"color\": \"#0000FF\",\n    \"showgrid\": false,\n    \"fixedrange\": true,\n    \"showline\": true,\n    \"side\": \"bottom\"\n  },\n  \"yaxis\": {\n    \"rangemode\": \"tozero\",\n    \"zeroline\": true,\n    \"zerolinecolor\": \"#eaeaea\",\n    \"gridcolor\": \"#eaeaea\",\n    \"color\": \"#0000FF\",\n    \"title\": \"Y-axis\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"fixedrange\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Metrics using Mendix Java API\nDESCRIPTION: Java code example demonstrating how to create counter metrics with tags and descriptions using the Mendix Runtime Java API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\nimport com.mendix.metrics.Counter;\nimport com.mendix.core.Core;\n…\n\n// Create a counter\nCounter counter1 = Core.metrics().createCounter(\"app.strikes\")\n                            .withTag(\"app\", \"myapp\")\n                            .withDescription(\"Metrics to count the strike outs\")\n                            .build();\nCounter counter2 = Core.metrics().createCounter(\"app.count\").build();\n```\n\n----------------------------------------\n\nTITLE: Styling Gallery Widget in JavaScript for Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the Gallery widget. It includes styling options for the container, empty placeholder, first and last items, list, list items, and load more button. Some properties are specific to Android for ripple effects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_gallery_Gallery = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  emptyPlaceholder: {\n    // This has all ViewStyle properties. Applies a view style to the empty placeholder.\n  },\n  firstItem: {\n    // This has all ViewStyle properties. Applies a view style to the first item of the list.\n  },\n  lastItem: {\n    // This has all ViewStyle properties. Applies a view style to the last item of the list.\n  },\n  list: {\n    // This has all ViewStyle properties. Applies a view style to the list container.\n  },\n  listitem: {\n    // This has all ViewStyle properties. Applies a view style to each item container in the list.\n  },\n  loadMoreButtonContainer: {\n    // This has all ViewStyle properties. Applies a view style to the load more button container.\n  },\n  loadMoreButtonPressableContainer: {\n    // This has all ViewStyle properties. Applies a view style to the load more button container.\n    rippleColor: null, // Defines the color of the ripple effect. ([color](https://reactnative.dev/docs/colors)) (Android only)\n    borderless: null, // Defines if ripple effect should not include border. (Boolean) (Android only)\n    radius: null, // Defines the radius of the ripple effect. (number) (Android only)\n    foreground: null, // Set to true to add the ripple effect to the foreground of the view, instead of the background. (Boolean) (Android only)\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Git Line Endings Configuration for CSS Files\nDESCRIPTION: Configuration for .gitattributes file to handle CSS line endings properly in the theme-cache folder.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: git\nCODE:\n```\n* text eol=lf\n```\n\n----------------------------------------\n\nTITLE: Creating TextInput Component with State Management\nDESCRIPTION: Implementation of the TextInput component with state management for handling input changes and blur events. Includes props interface definition and value tracking logic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { CSSProperties, Component, ReactNode, createElement, ChangeEvent } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    id?: string;\n    disabled?: boolean;\n    onLeave?: (value: string, changed: boolean) => void;\n}\n\ninterface InputState {\n    editedValue?: string;\n}\n\nexport class TextInput extends Component<InputProps, InputState> {\n\n    private readonly onChangeHandle = this.onChange.bind(this);\n    private readonly onBlurHandle = this.onBlur.bind(this);\n    readonly state: InputState = { editedValue: undefined };\n\n    componentDidUpdate(prevProps: InputProps): void {\n        if (this.props.value !== prevProps.value) {\n            this.setState({ editedValue: undefined });\n        }\n    }\n\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.getCurrentValue()}\n            tabIndex={this.props.tabIndex}\n            onChange={this.onChangeHandle}\n            disabled={this.props.disabled}\n            onBlur={this.onBlurHandle}\n        />;\n    }\n\n    private getCurrentValue(): string {\n        return this.state.editedValue !== undefined\n            ? this.state.editedValue\n            : this.props.value;\n    }\n\n    private onChange(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({ editedValue: event.target.value });\n    }\n\n    private onBlur(): void {\n        const inputValue = this.props.value;\n        const currentValue = this.getCurrentValue();\n        if (this.props.onLeave) {\n            this.props.onLeave(currentValue, currentValue !== inputValue);\n        }\n        this.setState({ editedValue: undefined });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets YAML\nDESCRIPTION: This YAML file defines a Kubernetes Secret named `mendix-app-secrets` which stores sensitive information like admin password, database endpoint, license key, and license ID required by the Mendix application. The secret values should be base64 encoded before being placed in this file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mendix-app-secrets\ntype: Opaque\ndata:\n  admin-password: YOUR_ADMIN_PASSWORD\n  db-endpoint: YOUR_DATABASE_ENDPOINT\n  license-key: YOUR_LICENSE_KEY\n  license-id: YOUR_LICENSE_ID\n```\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Snippet\nDESCRIPTION: This snippet refers to the common section of the text area properties documentation. It provides essential links and descriptions relevant to common attributes of the text area widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Call a Nanoflow - Event Execution\nDESCRIPTION: This snippet explains how to execute a specified nanoflow using the 'Call a Nanoflow' event in Mendix. The user must set the 'Nanoflow' property to define which nanoflow to execute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSet the **Nanoflow** property to specify a [nanoflow](/refguide8/nanoflow/) that should be executed.\n```\n\n----------------------------------------\n\nTITLE: AWS Message Attributes Format\nDESCRIPTION: Required CloudEvents message attributes format for AWS SQS integration with Mendix Event Broker. Messages must contain these attributes prefixed with 'ce_'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/event-broker.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nid as ce_id\nsource as ce_source\nspecversion as ce_specversion\ntype as ce_type\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Configuration Example Output in JSON\nDESCRIPTION: Example response output for setting environment configuration in Mendix. The response mirrors the request format, showing the updated configuration values for Constants, CustomSettings, and ScheduledEvents.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"Constants\" : [{\n         \"Name\" :  \"MyFirstModule.BooleanConstant\" ,\n         \"DataType\" :  \"_Boolean\" ,\n         \"Value\" :  \"true\" ,\n         \"DeployedValue\" :  \"false\"\n     },{\n         \"Name\" :  \"MyFirstModule.DateTime\" ,\n         \"DataType\" :  \"DateTime\" ,\n         \"Value\" :  \"2013-12-20T16:02:32\" ,\n         \"DeployedValue\" :  \"2013-12-20T16:02:32\"\n     }],\n     \"CustomSettings\" : [],\n     \"ScheduledEvents\" : [{\n         \"Name\" :  \"MyFirstModule.Monitor_Scheduled_event\" ,\n         \"DeployedValue\" :  \"Disabled\" ,\n         \"Value\" :  \"Enabled\"\n     }]\n}\n```\n\n----------------------------------------\n\nTITLE: Equal To Comparison of Strings in Mendix\nDESCRIPTION: This snippet demonstrates the equal to relational expression in Mendix, which compares two string values and returns a Boolean value indicating whether the two strings are equal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n```java\n\"mystring\" = \"myotherstring\"\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nFalse\n```\n```\n\n----------------------------------------\n\nTITLE: Including Validation Section in Drop-Downs\nDESCRIPTION: This snippet includes a reference to the validation properties for drop-down widgets, outlining how to enforce data integrity upon user inputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/widget-validation-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring General Options for Mendix Charts in JSON\nDESCRIPTION: This JSON snippet shows how to adjust configurations beyond layout options for chart appearance, including toggling the display mode bar and double-click functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"displayModeBar\": true,\n  \"doubleClick\": true,\n  \"displaylogo\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Box Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a box plot.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3, 4, 5 ],\n  \"type\": \"box\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Fixing Default Value Initialization in Mendix SDK\nDESCRIPTION: This code snippet addresses a bug (MS-352) where the default value of `layout.layoutCall` was incorrectly initialized to a new instance of `LayoutCall`. The fix involves initializing `layout.layoutCall` to avoid setting it to `null`. Dependencies may include the Mendix SDK libraries that define the `Layout` and `LayoutCall` classes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/model-sdk/model-sdk-4.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst layout = pages.Layout.createIn(this.module);\n...\nlayout.layoutCall.layout = this.masterLayout;\n```\n\n----------------------------------------\n\nTITLE: Basic Implementation of SpeechSynthesis in Mendix JavaScript Action\nDESCRIPTION: JavaScript action that creates a SpeechSynthesisUtterance object and calls the speak function to convert text to speech.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return false;\n    }\n    if (\"speechSynthesis\" in window === false) {\n        throw new Error(\"Browser does not support text to speech\");\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n    return true;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Theme Configuration for Charts\nDESCRIPTION: This JSON snippet structures a theme configuration to define the global font settings for charts in a Mendix application. The file must exist in a specific folder and be properly formatted to apply the settings correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/charts-theme.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\"layout\":{\"font\":{\"family\":\"Impact\",\"size\":20,\"color\":\"#4682B4\"}}}\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Return in JavaScript Action\nDESCRIPTION: This snippet demonstrates how to implement an asynchronous return using a promise that resolves after a specified delay. It provides a structure for executing delayed actions in a Mendix nanoflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nfunction Wait(delay) {\n    // BEGIN USER CODE\n    return new Promise(function(resolve) {\n        window.setTimeout(function(){\n            resolve();\n        }, delay);\n    });\n    // END USER CODE\n}\n\n```\n\n----------------------------------------\n\nTITLE: Processing Notifications in Monitored Items\nDESCRIPTION: This snippet details the process that occurs when a notification is received for a monitored item. It focuses on triggering the specified microflow using the monitored item's full name format as well as the parameters that can be passed for data handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/opc-ua-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\nWhen a notification comes in, the microflow specified by `MicroflowName` on the monitored item will be triggered. \nUse the full name of the microflow, which has this format: `MODULENAME.MICROFLOWNAME`.\n```\n\nLANGUAGE: Mendix\nCODE:\n```\n* `MessageMonitoredItem` – This parameter contains the `MonitoredItem` information, that is, how the notification was generated. \n* `MessageMonitoredItemReadValueID` – This parameter contains the information on what node and attribute was read. \n* `MessageDataValue` – This parameter contains the information on the actual read value on the `Value` attribute.\n```\n\n----------------------------------------\n\nTITLE: Cloning GitHub Repository\nDESCRIPTION: This command clones a GitHub repository to a local machine. The repository URL should be replaced with the actual URL of the GitHub repository.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n\"git clone https://github.com/user-name/native-nfc-app\"\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using minutes-from-dateTime With Local Timezone\nDESCRIPTION: Example query that returns all log entries where the minutes part of DateAttribute equals 30 in the local timezone. This might match timestamps like \"2011-12-30 08:30:00\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-minutes-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[minutes-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: XML Data Example\nDESCRIPTION: This XML snippet shows a simple example of how data can be encoded using XML format. It represents a person object with attributes like name, age, and address.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/consumed-web-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n\"<person>\\n\\t<name>John Smith</name>\\n\\t<age>23</age>\\n\\t<address>\\n\\t\\t<street>Dopeylane 14</street>\\n\\t\\t<city>Worchestire</city>\\n\\t</address>\\n</person>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Content Security Policy for Insights Hub on AWS (Region eu1)\nDESCRIPTION: This code snippet provides the necessary Content Security Policy (CSP) configuration for a Mendix application running on Insights Hub on AWS in the eu1 region. It ensures proper loading of the Insights Hub OS Bar and the Mendix Feedback widget while defining security rules for various resource types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_9\n\nLANGUAGE: text\nCODE:\n```\ndefault-src 'self' 'unsafe-inline' 'unsafe-eval' static.eu1.mindsphere.io feedback-static.mendix.com home.mendix.com;\nfont-src 'self' static.eu1.mindsphere.io fonts.gstatic.com;\nscript-src 'self' 'unsafe-inline' 'unsafe-eval' static.eu1.mindsphere.io feedback-static.mendix.com home.mendix.com;\nstyle-src 'self' 'unsafe-inline' static.eu1.mindsphere.io feedback-static.mendix.com home.mendix.com fonts.googleapis.com;\nimg-src * data:;\nconnect-src 'self' 'unsafe-inline'  *;\n```\n\n----------------------------------------\n\nTITLE: Tooltip Configuration (JSON)\nDESCRIPTION: This snippet demonstrates how to configure the appearance and behavior of tooltips in a chart, which appear when a user hovers over a data point. It allows customization of hover mode, text, info, text position, background color, border color, and font properties. It customizes the pop-up box that appears when a user hovers over a data point.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hovermode\": \"text\",\n  \"hovertext\": \"text\",\n  \"hoverinfo\": \"all\",\n  \"textposition\": \"inside\",\n  \"hoverlabel\": {\n    \"bgcolor\": \"#888\",\n    \"bordercolor\": \"#888\",\n    \"font\": {\n      \"color\": \"white\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Splunk Environment Variables in Mendix Portal\nDESCRIPTION: Set up custom environment variables for connecting a Mendix app to Splunk Cloud Platform, including host, port, token, and log redaction settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/splunk-metrics.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nSPLUNK_HOST: test.splunkcloud.com\nSPLUNK_PORT: 8088\nSPLUNK_TOKEN: <access_token>\nLOGS_REDACTION: true\nFLUENTBIT_LOGS_BUFFER_SIZE: 128\nFLUENTBIT_LOGS_MEM_BUF_LIMIT: 50MB\n```\n\n----------------------------------------\n\nTITLE: Rendering Content in Display Component\nDESCRIPTION: This TypeScript snippet adjusts the render method in `components/GroupBox.tsx` to render the content, which is passed as `children`. The `children` prop is rendered within the content View.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_19\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n        const { children, headerCaption } = this.props;\n        \n        return (\n            <View style={this.styles.container}>\n                <View style={this.styles.header}>\n                    <Text style={this.styles.headerContent}>{headerCaption}</Text>\n                    <Text style={this.styles.headerContent}>-</Text>\n                </View>\n                <View style={this.styles.content}>\n                    {children}\n                </View>\n            </View>\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Querying Minimum Value with XPath min() Function in Java\nDESCRIPTION: This snippet demonstrates how to use the XPath min() function to find the lowest total price across all orders. The function requires a numeric attribute and returns the minimum value found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-min.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmin(//Sales.Order/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Adding 3D Social Media Logos\nDESCRIPTION: Instructions for incorporating 3D logos for social media onto the AR business card, along with setting their material properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-business-card.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nTo finish this business card demo you need something people can click to find out more about your work. For this you will add two social media logos: a Twitter one and a LinkedIn one. You can use any 3D object. The following settings correctly place them underneath our business card.\n```\n\n----------------------------------------\n\nTITLE: Initializing 3D Line Chart Configuration in JSON\nDESCRIPTION: This snippet defines the configuration for a 3D line chart in JSON format, specifying x, y, and z coordinates along with the rendering mode. The output will be a 3D line chart visualizing the given data points in three-dimensional space.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 9, 8, 5, 1 ],\n  \"y\": [ 1, 2, 4, 8 ],\n  \"z\": [ 11, 8, 15, 3 ],\n  \"mode\": \"lines\",\n  \"type\": \"scatter3d\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Implementing SVG in Pluggable Widget with Icon Component\nDESCRIPTION: Example of using the Icon component to display SVG in a pluggable native widget with size and color customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-svg.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { createElement } from \"react\";\nimport { Icon } from \"mendix/components/native/Icon\";\n\nexport const PluggableWidget = () => (\n    <Icon \n        icon={{\n            type: \"image\",\n            iconUrl: \"PUT_SOURCE_HERE\"\n        }}\n        size={20}\n        color=\"blue\"\n    />\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Datadog Site via Environment Variable\nDESCRIPTION: This snippet shows how to set the Datadog site region using the `DD_SITE` custom environment variable in a Mendix application. This is useful when the Datadog site is in a region other than the default US region.  Setting the value to `datadoghq.eu` configures the application to use the EU Datadog site.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/datadog-metrics.md#2025-04-21_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n\"DD_SITE` to `datadoghq.eu\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Range Slider Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Range Slider widget including track, markers, highlighting and validation message styles. Controls the appearance of a slider with range selection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_rangeslider_RangeSlider = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  track: {\n    // This has all ViewStyle properties.\n  },\n  trackDisabled: {\n    // This has all ViewStyle properties.\n  },\n  highlight: {\n    // This has all ViewStyle properties.\n  },\n  highlightDisabled: {\n    // This has all ViewStyle properties.\n  },\n  marker: {\n    // This has all ViewStyle properties.\n  },\n  markerActive: {\n    // This has all ViewStyle properties.\n  },\n  markerDisabled: {\n    // This has all ViewStyle properties.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Image References in Markdown\nDESCRIPTION: Multiple image references using Markdown syntax to show ATS helper and action screenshots\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/appstore/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need/mx-name-ats-helper-cp.png\" class=\"no-border\" >}}\n\n{{< figure src=\"/attachments/appstore/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need/set-value-action-search.png\" class=\"no-border\" >}}\n\n{{< figure src=\"/attachments/appstore/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need/set-checkbox-value-action-search.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Create Object - Event Definition\nDESCRIPTION: This snippet details the 'Create Object' event in Mendix, describing how to specify the entity to be created and what page to show for user input. Context parameters need to be properly configured.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* **Entity (path)** – specifies which entity to create. It is also possible to choose an association (if available) from the context object.\n* **On {event} page** – specifies which [page](/refguide8/page/) should be shown to allow the end-user to enter values for the new created object.\n```\n\n----------------------------------------\n\nTITLE: Defining Problem Type for Validation in TypeScript\nDESCRIPTION: This snippet defines the Problem type used for validation in Mendix widgets. It specifies the structure for reporting issues including property name, severity level, message, and optional URL for more information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Problem = {\n    property?: string; // key of the property, at which the problem exists\n    severity?: \"error\" | \"warning\" | \"deprecation\"; // default = \"error\"\n    message: string; // description of the problem\n    url?: string; // link with more information about the problem    \n}\n```\n\n----------------------------------------\n\nTITLE: Loading Platform-Shipped Dependencies via JavaScript\nDESCRIPTION: This code snippet demonstrates how to load platform-shipped dependencies within a JavaScript action. It utilizes the `require` function to synchronously load modules provided by the Mendix Client, allowing access to utility functions and other pre-built functionalities.  These libraries are already loaded by the platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Synchronous libs that are already loaded\nvar lang = require(\"mendix/lang\");\n```\n\n----------------------------------------\n\nTITLE: CSS Selector for Mendix Element\nDESCRIPTION: CSS selector pattern used to identify Mendix elements. Mendix automatically adds mx-name- prefix to element class names based on their widget names in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/testing-mendix-applications-using-selenium-ide.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.mx-name-textBox10\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using seconds-from-dateTime with Specific Timezone\nDESCRIPTION: Example query that returns all Log entities where the seconds part of DateAttribute equals 30 in the America/New_York timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[seconds-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Defining Widgets Property with DataSource in XML for Mendix Pluggable Widgets\nDESCRIPTION: Example of defining a widgets property with a dataSource attribute, linking it to a datasource property defined elsewhere in the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\" dataSource=\"myDataSource\">\n\t<caption>Content</caption>\n\t<description>Widgets using data source</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Proper Use of ORDER BY with LIMIT in Subquery for OQL v2\nDESCRIPTION: The corrected version of the previous query, adding LIMIT to the ORDER BY clause in the subquery to comply with OQL v2 requirements and ensure reliable ordering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM (\n    SELECT Name\n    FROM Module.Person\n    ORDER BY Name\n    LIMIT 20\n)\n```\n\n----------------------------------------\n\nTITLE: BAPI Service XSUAA Security Config\nDESCRIPTION: Complete xs-security.json configuration example for bapi-service showing scopes and role templates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n{\n  \"xsappname\" : \"bapi-service\",\n  \"tenant-mode\" : \"shared\",\n  \"scopes\": [{\n      \"name\": \"$XSAPPNAME.bapiAuth\",\n      \"granted-apps\" : [ \"$XSAPPNAME(application,BAPI-Consumer-dev)\"],\n      \"grant-as-authority-to-apps\" : [ \"$XSAPPNAME(application, BAPI-Consumer-dev)\"]\n  }],\n  \"role-templates\": [ {\n      \"name\"                : \"<role template name>\",\n      \"default-role-name\"   : \"<role name>\",\n      \"scope-references\"    : [\"$XSAPPNAME.bapiAuth\"]\n  }]\n}\n```\n\n----------------------------------------\n\nTITLE: Generating RSA Private Key Using OpenSSL\nDESCRIPTION: Command to generate a 2048-bit RSA private key using OpenSSL. This is the first step in creating iOS app signing certificates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/managing-app-signing-keys.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" genrsa -out \"C:\\private.key\" 2048\n```\n\n----------------------------------------\n\nTITLE: Configuring Cordova Security Settings for Mendix Feedback Widget\nDESCRIPTION: XML configuration to allow network requests and navigation for the Mendix Feedback widget in iOS hybrid mobile apps. These settings override default iOS security policies to enable proper rendering of feedback content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/feedback-widget-ios.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<!-- Don't block any requests -->\n<access origin=\"*\" />\n<!-- Allow links to sprintr.home.mendix.com -->\n<allow-navigation href=\"https://sprintr.home.mendix.com/*\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Group By Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a grouped scatter plot.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n[ {\n    \"type\": \"scatter\",\n    \"x\": [ \"Arthur\",\"Jolly\",\"Daphine\",\"Arthur\",\"Jolly\",\"Daphine\" ],\n    \"y\": [ 1, 6, 2, 5, 8, 1 ],\n    \"mode\": \"markers\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Environment Template S3 Access Policy\nDESCRIPTION: IAM policy template that grants an environment's user access to their own S3 bucket and objects. Uses variables to restrict access to buckets/paths matching the username.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowListingOfUserFolder\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::${aws:username}\"\n            ],\n            \"Condition\": {\n                \"StringLike\": {\n                    \"s3:prefix\": [\n                        \"${aws:username}/*\",\n                        \"${aws:username}\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"AllowAllS3ActionsInUserFolder\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::${aws:username}/${aws:username}/*\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: NPM Package Dependencies Installation with Legacy Peer Deps\nDESCRIPTION: Recommended installation method for NPM package dependencies in Mendix widget projects using NPM version 7 or higher\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Assigning User Task to Manager Role using XPath in Mendix\nDESCRIPTION: This XPath expression is used to assign a user task to users with the Manager role in a Mendix workflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[System.UserRoles = '[%UserRole_Manager%]']\n```\n\n----------------------------------------\n\nTITLE: Creating a Nanoflow for URL Opening\nDESCRIPTION: Details on how to create a nanoflow that opens a URL related to the user's social media profile upon clicking the AR business card.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-business-card.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nNow all that is left is to add a nanoflow that opens a URL to the **Events** > **On click functionality**. Create a new nanoflow with the **Open URL** action. Add your Twitter profile URL here.\n```\n\n----------------------------------------\n\nTITLE: Radio Buttons Group Structure in HTML\nDESCRIPTION: Demonstrates the HTML structure for a group of radio buttons, including the container div and individual radio button elements with labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_14\n\nLANGUAGE: html\nCODE:\n```\n<div role=\"radiogroup\" id=\"123_abc\" aria-labelledby=\"123_abc-label\">\n\t<div class=\"radio\">\n\t\t<input type=\"radio\" id=\"123_abc_0\" value=\"Funghi\">\n\t\t<label for=\"123_abc_0\">Funghi</label>\n\t</div>\n\t<div class=\"radio\">\n\t\t<input type=\"radio\" id=\"123_abc_1\" value=\"Pepperoni\">\n\t\t<label for=\"123_abc_1\">Pepperoni</label>\n\t</div>\n\t<div class=\"radio\">\n\t\t<input type=\"radio\" id=\"123_abc_2\" value=\"Tre_Formaggi\">\n\t\t<label for=\"123_abc_2\">Tre Formaggi</label>\n\t</div>\n\t<div class=\"radio\">\n\t\t<input type=\"radio\" id=\"123_abc_3\" value=\"Margherita\">\n\t\t<label for=\"123_abc_3\">Margherita</label>\n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Styling Range Slider Widget in JavaScript\nDESCRIPTION: Defines the style properties for the Range Slider widget, allowing customization of various elements such as the container, track, highlight, marker, and validation message. It includes states for disabled and active markers. The default class name to style all range slider inputs is `com_mendix_widget_native_rangeslider_RangeSlider`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_rangeslider_RangeSlider = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  track: {\n    // This has all ViewStyle properties.\n  },\n  trackDisabled: {\n    // This has all ViewStyle properties.\n  },\n  highlight: {\n    // This has all ViewStyle properties.\n  },\n  highlightDisabled: {\n    // This has all ViewStyle properties.\n  },\n  marker: {\n    // This has all ViewStyle properties.\n  },\n  markerActive: {\n    // This has all ViewStyle properties.\n  },\n  markerDisabled: {\n    // This has all ViewStyle properties.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Example XML Instance Conforming to Schema\nDESCRIPTION: An XML document that adheres to the defined schema, containing a customer element with name and shoesize child elements. The shoesize element includes a country attribute demonstrating the use of the complex type with simple content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/mapping-documents/xml-documents/xml-schemas.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<customer xmlns=\"http://www.example.com/\">\n  <name>John Doe</name>\n  <shoesize country=\"GB\">8</shoesize>\n</customer>\n\n```\n\n----------------------------------------\n\nTITLE: Initializing Time Series Configuration in JSON\nDESCRIPTION: This snippet defines the configuration for a time series chart using JSON, specifying x and y values corresponding to specific dates. The expected output will illustrate trends over time based on the data points provided.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"type\": \"scatter\",\n  \"mode\": \"lines\",\n  \"x\": [ \"2018-09-04\", \"2018-10-04\", \"2018-11-04\", \"2018-12-04\", \"2018-12-04\" ],\n  \"y\": [ 5, 2, 7, 10 ]\n} ]\n```\n\n----------------------------------------\n\nTITLE: Whitelist Filter Configuration\nDESCRIPTION: Configuration to accept only specific metrics and deny all others using an empty string deny filter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": { \"protocol\": \"TCP\" },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"accept\", \"values\" : [\"app.\"] },\n      { \"type\" : \"nameStartsWith\", \"result\" : \"deny\", \"values\" : [\"\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Showing Studio Pro Version of a Mendix App\nDESCRIPTION: This command reports the version of Studio Pro that was last used to open the specified Mendix app (.mpr file). The MPR file must be the same version as the mx tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_15\n\nLANGUAGE: Text\nCODE:\n```\n\"mx show-version [OPTIONS] INPUT\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Settings for REST Calls\nDESCRIPTION: Demonstrates how to configure proxy settings for REST service calls, including options to use app settings, override settings, or disable proxy use.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* **Use app settings** – use whatever settings are defined at the app level (default)\n* **Override** – override the app-level settings for this action\n* **No proxy** – do not use a proxy for this action, even if there is a proxy configured at the app level\n```\n\n----------------------------------------\n\nTITLE: Querying State Statistics in Mendix Runtime (JSON)\nDESCRIPTION: This endpoint retrieves detailed information about objects currently in the state of the Mendix Runtime, including totals per session and per-user totals broken down by entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\" : \"cache_statistics\",\n  \"params\":{}\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"totals\":{\n      \"Expenses.TempUser\":1,\n      \"System.Session\":1\n    },\n    \"user_totals\":[\n      {\n        \"user_name\":\"MxAdmin\",\n        \"total_count\":2,\n        \"amounts_per_type\":{\n          \"Expenses.TempUser\":1,\n          \"System.Session\":1\n         }\n      }\n    ]\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Cancelling All Scheduled Notifications in Mendix\nDESCRIPTION: Creates a nanoflow to cancel all previously scheduled local notifications using a JavaScript action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-schedule-cancel.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nNanoflow: ACT_CancelAllScheduledNotifications\n- JavaScript Action: Cancel all scheduled notifications\n  (Use return value: No)\n```\n\n----------------------------------------\n\nTITLE: Setting Sort Order in Mendix Widget using TypeScript\nDESCRIPTION: These snippets demonstrate how to set sorting for a ListValue in a Mendix widget. It includes examples of single and multiple attribute sorting, as well as resetting to default sort order.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nif (this.props.attributeAge.sortable) {\n    // sort by age ascending\n    const sortInstrs = [\n        [this.props.attributeAge.id, \"asc\"]\n    ]; \n    this.props.myDataSource.setSortOrder(sortInstrs);\n} else {\n    console.warn(\"Can't apply sorting. Attribute Age is not sortable\");\n}\n\nif (this.props.attributeAge.sortable && this.props.attributeName.sortable) {\n    // sort by age descending, and then by name ascending (within age groups)\n    const sortInstrs = [\n        [this.props.attributeAge.id, \"desc\"],\n        [this.props.attributeName.id, \"asc\"],\n    ]; \n    this.props.myDataSource.setSortOrder(sortInstrs);\n} else {\n    console.warn(\"Can't apply sorting. Attribute Age and/or Name is not sortable\");\n}\n\nthis.props.myDataSource.setSortOrder(undefined);\n```\n\n----------------------------------------\n\nTITLE: Filtering Order Status by Specific Date in Mendix OQL\nDESCRIPTION: This SQL WHERE clause can be added to the previous query to filter results for a specific date, allowing you to take a snapshot of order statuses at a point in time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-data-versioning.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nWHERE u.UpdateDate < CAST('1997/08/17' as DATETIME)\n```\n\n----------------------------------------\n\nTITLE: Task Queue Configuration Settings\nDESCRIPTION: Runtime configuration settings for task queue behavior including shutdown grace period, cleanup age, and batch size for processed tasks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/task-queue.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nTaskQueue.ShutdownGracePeriod = 10000\ncom.mendix.core.ProcessedTasksCleanupAge = 86400000\ncom.mendix.core.ProcessedTasksCleanupBatchSize = 10000\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Block for PhoneGap Deprecation\nDESCRIPTION: A markdown alert block warning users about Adobe PhoneGap Build service deprecation and its impact on iOS app builds, recommending native app development instead.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/hybrid-mobile/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nBuilding hybrid apps in the cloud uses the PhoneGap Build service from Adobe. Unfortunately, Adobe no longer maintains this service. PhoneGap does not allow you to create iOS 13 builds, but the Apple App Store requires builds be iOS 13 or higher. As a result, as of April 30 2020, hybrid iOS apps built using the PhoneGap Build service are not being accepted on Apple's App Store. To publish your iOS app in the Apple App Store, Mendix recommends building native iOS apps instead. For more information, see [How to Build Native Apps](/howto8/mobile/build-native-apps/).\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Months in Java\nDESCRIPTION: This snippet shows the usage of the trimToMonths function to round off a date to months, removing days, hours, minutes, seconds, and milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ntrimToMonths($myDate)\n```\n\n----------------------------------------\n\nTITLE: Conditional Enumeration Assignment - Java\nDESCRIPTION: This snippet shows how to use a conditional statement to assign enumeration values based on a condition in Mendix. It highlights the syntax for if-else structures involving enumeration values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nif 4>3 then\n  OrderProcessing.Status.completed\nelse\n  OrderProcessing.Status.started\n```\n\n----------------------------------------\n\nTITLE: Exporting Data from Private Cloud Environment using Data Transfer Tool\nDESCRIPTION: This command creates a backup file of the specified environment's database and files. It requires the namespace, environment name, and destination file path as parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-data-migration backup -n <namespace> -e <environment> -f <file>\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Search Results in JSON Format\nDESCRIPTION: Example response from a user search endpoint, returning a list of user OpenIDs and the total count of matching users in the company.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"users\": [\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=daba46fc-692c-4622-adb4-981fcfb0dec9\"\n        },\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=c8101ad7-bdfb-48b1-b212-99fa86f8cdb0\"\n        },\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=f3ecda3f-1cd4-4571-92d9-5c53bd80c542\"\n        },\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=344a8193-bbe0-4b31-b7ae-de701eccf030\"\n        },\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=51b54074-a66c-4337-8488-aac89bf47a2d\"\n        },\n        {\n            \"openId\": \"https://mxid2.mendix.dev/mxid2/id?id=6043d3ed-517f-43fc-bfb5-1062afe24858\"\n        }\n    ],\n    \"count\": 6\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associated Objects Using Java API in Mendix\nDESCRIPTION: A Java action that retrieves objects associated with a specialization through a self-reference. This workaround is used when standard by-association retrieval isn't possible due to inheritance limitations. It uses Core.retrieveByPath() with a reverse parameter to control retrieval direction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/associations/query-over.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class RetrieveAsAssociatedWithB extends CustomJavaAction<java.util.List<IMendixObject>>\n{\n\tprivate IMendixObject __B;\n\tprivate main.proxies.Specialization B;\n\tprivate java.lang.Boolean Reverse;\n\n\tpublic RetrieveAsAssociatedWithB(IContext context, IMendixObject B, java.lang.Boolean Reverse)\n\t{\n\t\tsuper(context);\n\t\tthis.__B = B;\n\t\tthis.Reverse = Reverse;\n\t}\n\n\t@java.lang.Override\n\tpublic java.util.List<IMendixObject> executeAction() throws Exception\n\t{\n\t\tthis.B = __B == null ? null : main.proxies.Specialization.initialize(getContext(), __B);\n \n\t\t// BEGIN USER CODE\n\t\treturn Core.retrieveByPath(getContext(), __B, \"Main.Generalization_Specialization\", Reverse);\n\t\t// END USER CODE\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Deployment Configuration Components\nDESCRIPTION: Key components in the Mendix runtime deployment workflow, including Docker environment specification, Cloud Foundry CLI, and M2ee tools for managing application startup\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/runtime-deployment.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndeployment:\n  docker_environment: cloud-foundry-spec\n  buildpack: mendix-deployment-script\n  runtime_tools:\n    - m2ee-tools\n    - m2ee-sidecar\n```\n\n----------------------------------------\n\nTITLE: Documenting WidgetObject Element Changes in Mendix SDK Metamodel 8.1\nDESCRIPTION: Describes the removal of the labelTemplate property from the WidgetObject element and its relocation to the CustomWidget element in Mendix SDK Metamodel 8.1.0.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.1.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nWe deleted the `labelTemplate` property and moved it to the `CustomWidget` element (see above).\n```\n\n----------------------------------------\n\nTITLE: Example Request for Getting Start Environment Status - Mendix API - Bash\nDESCRIPTION: This request demonstrates how to query the status of a job related to starting an environment in Mendix, including the necessary host and content types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/Acceptance/start/02df2e50-0e79-11e4-9191-0800200c9a66\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n```\n\n----------------------------------------\n\nTITLE: Getting PostgreSQL Service Instance Details in Cloud Foundry\nDESCRIPTION: Command to retrieve environment variables of an application in Cloud Foundry, necessary for obtaining PostgreSQL service instance details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncf env {application-name}\n```\n\n----------------------------------------\n\nTITLE: Creating and Checking Branches in Git - Bash\nDESCRIPTION: This snippet demonstrates how to create a new branch from an existing one, typically from the 'production' branch, using Git. It stresses the importance of not working directly on the production branch to prevent unwanted changes. The 'git diff --check' command is suggested for checking unnecessary whitespace before committing changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-a-github-repository.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b fix/production/my_contribution production\n```\n\nLANGUAGE: bash\nCODE:\n```\ngit diff --check\n```\n\n----------------------------------------\n\nTITLE: Validation Section for Drop-Down\nDESCRIPTION: This snippet refers to the validation properties applicable to the drop-down widget, which ensure that user selections conform to the predefined criteria or rules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/widget-validation-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Updating Group Box Render Method in TypeScript\nDESCRIPTION: Modifies the renderHeader method to incorporate the renderIcon function, integrating the display of icons alongside header text. The function conditionally renders icons based on expand/collapse states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_36\n\nLANGUAGE: TypeScript\nCODE:\n```\nprivate renderHeader = () => {\\n    const view = (\\n        <View style={this.styles.header}>\\n            <Text style={this.styles.headerContent}>            {this.props.headerCaption}</Text>\\n            {this.renderIcon()}\\n        </View>\\n    );\\n    \\n    const Touchable: ComponentClass<any> = Platform.OS === \\\"ios\\\" ? TouchableOpacity : TouchableNativeFeedback;\\n    \\n    return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\\n};\n```\n\n----------------------------------------\n\nTITLE: REST Service Location Template\nDESCRIPTION: URL template for the Wikipedia REST API endpoint with parameter mapping for the page title.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/consume-a-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: url\nCODE:\n```\nhttps://en.wikipedia.org/api/rest_v1/page/summary/{1}\n```\n\n----------------------------------------\n\nTITLE: Pushing Docker Image to Minikube\nDESCRIPTION: This bash command pushes the Docker image of the Mendix app to the Minikube registry, allowing it to be deployed within the Minikube environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nminikube image push <hub-user>/<repo-name>:<tag>\n```\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Role for Mendix Azure Operator\nDESCRIPTION: This snippet provides a JSON configuration for creating a custom role in Azure tailored for Mendix deployment. It details the necessary permissions to grant the Mendix Operator appropriate access levels without requiring broader roles like Owner or Contributor. Key permissions include actions related to Microsoft.Solutions and Microsoft.Resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mx-azure/mx-azure-getting-started.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n{\n    \"properties\": {\n        \"roleName\": \"Mendix on Azure Operator\",\n        \"description\": \"\",\n        \"assignableScopes\": [\n            \"/subscriptions/<yoursubscriptionid>\"\n    ],\n    \"permissions\": [\n        {\n            \"actions\": [\n            \"*/register/action\",\n            \"Microsoft.Solutions/applications/*\",\n            \"Microsoft.Solutions/locations/operationstatuses/*\",\n            \"Microsoft.Resources/subscriptions/resourceGroups/*\",\n            \"Microsoft.Resources/deployments/*\",\n            \"Microsoft.Monitor/accounts/*\",\n            \"Microsoft.Authorization/roleAssignments/write\",\n            \"Microsoft.Authorization/roleAssignments/read\"\n        ],\n        \"notActions\": [],\n        \"dataActions\": [],\n        \"notDataActions\": []\n        }\n    ]\n     }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking String Starts With Substring in Java\nDESCRIPTION: Demonstrates the use of the startsWith function to determine if a string begins with a specific substring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nstartsWith('thisismystring', 'this')\n```\n\n----------------------------------------\n\nTITLE: Including Snippet for Basic Widget Functions in Markdown\nDESCRIPTION: This snippet shows how to include a reusable content snippet about performing basic functions with widgets using Hugo's shortcode syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/text-widgets/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/performing-basic-functions-widgets.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Basic Widget Definition XML Structure\nDESCRIPTION: Shows the basic structure of a widget definition XML file including name, description and properties sections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget [attributes]>\n    <name>{User friendly widget name}</name>\n    <description>{User friendly short description}</description>\n    <properties>\n        [properties]\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Microflow Time Stamp - Log Message (Mendix)\nDESCRIPTION: This snippet shows how to log the execution time of a microflow to the console. It calculates the difference between the current time and the 'startTime' variable (created at the beginning of the microflow) in milliseconds and logs it to the console as an informational message. This allows developers to measure the duration of the microflow execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-performance/detect-and-resolve-performance-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n\"Log message: \\'Microflow took \\' + toString(dateTimeNow() - $startTime) + \\' milliseconds\\'\"\n```\n\n----------------------------------------\n\nTITLE: Extracting Quarter in Local Time Zone\nDESCRIPTION: XPath query to filter records by quarter using the local time zone. Returns records where the specified date attribute falls in the fourth quarter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-quarter-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n[quarter-from-dateTime(DateAttribute) = 4]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Logging.Log[quarter-from-dateTime(DateAttribute) = 4]\n```\n\n----------------------------------------\n\nTITLE: Configuring Session Timeout Settings in Mendix Runtime\nDESCRIPTION: Configuration settings for session timeout and cluster manager action intervals in Mendix Runtime. These settings control how long sessions remain valid and how frequently session data is synchronized across cluster nodes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/clustered-mendix-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nSessionValidationTimeout = <value in milliseconds>\\nClusterManagerActionInterval = <value in milliseconds>\n```\n\n----------------------------------------\n\nTITLE: Upload Package API Response JSON\nDESCRIPTION: JSON response structure returned after uploading a deployment package, containing the PackageId of the created package and the JobId for tracking the upload operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"PackageId\": \"<packageID>\",\n    \"JobId\": \"<JobID>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Security Levels in Mendix\nDESCRIPTION: Steps to set application security level to prototype/demo and production modes, including user role and module role management\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/create-a-secure-app.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nSecurity level: Prototype / demo\n```\n\nLANGUAGE: Mendix\nCODE:\n```\nSecurity level: Production\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Policy for AWS ECR Access\nDESCRIPTION: JSON policy document that grants the necessary permissions for Mendix Operator to interact with Amazon ECR. This policy includes permissions for image operations and authentication. The resource ARN must be customized with your AWS region, account ID, and repository name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-registry.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowImageBuilds\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ecr:BatchGetImage\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:CompleteLayerUpload\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:InitiateLayerUpload\",\n                \"ecr:PutImage\",\n                \"ecr:ListImages\",\n                \"ecr:UploadLayerPart\",\n                \"ecr:DescribeRepositories\",\n                \"ecr:CreateRepository\"\n            ],\n            \"Resource\": \"arn:aws:ecr:<aws_region>:<account_id>:repository/<repository>\"\n        },\n        {\n            \"Sid\": \"AllowAuthentication\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"ecr:GetAuthorizationToken\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Options for New Relic Agent in m2ee.yaml\nDESCRIPTION: Configuration snippet for adding the New Relic Java agent to the JVM options in the m2ee.yaml file for on-premises Linux and Windows Service Console deployments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/manage-app-performance/manage-app-performance-with-new-relic.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njavaopts: [\n  \"-Dfile.encoding=UTF-8\", \"-Xmx512M\", \"-Xms512M\",\n  \"-Djava.io.tmpdir=/srv/mendix/data/tmp\",\n  \"-javaagent:/opt/newrelic/javaagent.jar\"\n]\n```\n\n----------------------------------------\n\nTITLE: Querying OData with XPath Constraint\nDESCRIPTION: XPath query to retrieve users based on username from an XClientInput entity. This constraint is translated into an OData request sent to the connector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/wrap-services-odata.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\nUsername=$XClientInput/Username\n```\n\n----------------------------------------\n\nTITLE: Extracting Substring in Java\nDESCRIPTION: Demonstrates the use of the substring function to retrieve a part of a string, with optional start position and length parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nsubstring('thisismystring', 6)\n```\n\nLANGUAGE: java\nCODE:\n```\nsubstring('thisismystring', 6, 2)\n```\n\nLANGUAGE: java\nCODE:\n```\nsubstring('thisismystring', 0, min(length('thisismystring'), 20))\n```\n\n----------------------------------------\n\nTITLE: Defining XPath Constraints for Access Rules\nDESCRIPTION: This snippet provides instructions for applying XPath constraints to limit data access based on order status within the User module role. Such constraints ensure that users can only see relevant orders based on predefined criteria.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/create-a-secure-app.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Double-click the **Order** entity:\n2. On the **Properties of Entity 'MyFirstModule.Order'** editor, open the **Access rules** tab:\n3. Double-click the **User** module role to open the **Edit Access Rule of Entity 'MyFirstModule.Order'** editor and select the **XPath constraint** tab:\n4. To constrain the access of the financial administrator to only the open orders, add the following XPath statement:\n5. Click **OK**. The properties editor of your Order entity should look like this:\n6. Re-deploy your application.\n7. If you sign in with the Test User account, you will see that only orders with the **Order status** of **Open** are shown in the overview.\n```\n\n----------------------------------------\n\nTITLE: Mendix Operator Secret Configuration\nDESCRIPTION: YAML configuration for storing operator credentials in Kubernetes secret. Contains base64 encoded username and password.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: <secret-name>\ndata:\n  username: <base64-encoded username>\n  password: <base64-encoded password>\n```\n\n----------------------------------------\n\nTITLE: Using Parameter Notation in String Templates\nDESCRIPTION: Example of how to use numbered parameters in XML request templates. Parameters are written as numbers in braces (like {1}) and can be replaced with string values from microflow expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/integration-activities/call-web-service-action.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n{1}\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section for Menu Bar\nDESCRIPTION: This snippet includes a reference to the 'design-section-link.md' file, which likely contains details about the design-related properties of the menu bar widget. It is crucial for comprehensive documentation of aesthetic aspects of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/menu-widgets/menu-bar.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Performance Recorder Alert Code in Markdown\nDESCRIPTION: Alert box markup for displaying an information notice about browser session recording behavior.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-three-apd/rg-three-recorder/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nA browser session is per browser window. If a user uses multiple browser instances to connect with the application, this results in a recorded session for each instance.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Running npm Install for Mendix Native App\nDESCRIPTION: This command installs the required Node.js dependencies for a Mendix native mobile app build. Ensures compatibility by using legacy peer dependencies for NPM v7 and above.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Renaming Theme Directory\nDESCRIPTION: This snippet provides the steps to rename the Atlas 2 theme directory to comply with Atlas 3 standards. Users are recommended to rename it to 'theme_atlas2'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Rename you Atlas 2 **theme** directory. Mendix suggests naming it *theme_atlas2*:\n```\n\n----------------------------------------\n\nTITLE: Defining Object Property in XML for Mendix Pluggable Widget\nDESCRIPTION: XML snippet demonstrating how to define an object property for a pluggable widget in Mendix. It creates a list of objects with boolean and action properties grouped together.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_16\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myObject\" type=\"object\" isList=\"true\">\n\t<caption>My object list</caption>\n\t<description/>\n\t<properties>\n\t\t<propertyGroup caption=\"Object list group\">\n\t\t\t<property key=\"myObjectBool\" type=\"boolean\" defaultValue=\"true\">\n\t\t\t\t<caption>My boolean</caption>\n\t\t\t\t<description>My boolean setting</description>\n\t\t\t</property>\n\t\t\t<property key=\"myObjectAction\" type=\"action\">\n\t\t\t\t<caption>My action</caption>\n\t\t\t\t<description>My action setting</description>\n\t\t\t</property>\n\t\t</propertyGroup>\n\t</properties>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Deploying Mendix App using OpenShift CLI\nDESCRIPTION: Describes the process to deploy a Mendix app using the OpenShift CLI, which includes signing into OpenShift and applying a configuration file in the appropriate project namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\noc apply -f {File containing the CR} -n {namespace where app is being deployed}\n```\n\n----------------------------------------\n\nTITLE: Creating Spam Filter Pipeline with ONNX in Python\nDESCRIPTION: Python implementation of a spam filter using scikit-learn pipeline with CountVectorizer and MultinomialNB, converted to ONNX format. Demonstrates integration of text preprocessing within ONNX model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\nfrom skl2onnx import to_onnx\nfrom skl2onnx.common.data_types import StringTensorType\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.metrics import accuracy_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.naive_bayes import MultinomialNB\nfrom sklearn.pipeline import make_pipeline\n\nimport pandas as pd\n\ndf = pd.read_csv(\"spam.csv\", encoding=\"L1\")\n\nX = df[\"v2\"].values\ny = df[\"v1\"].values\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=345)\n\npipe = make_pipeline(\n   CountVectorizer(binary=True),\n   MultinomialNB()\n)\n\npipe.fit(X_train, y_train)\n\nprint(accuracy_score(pipe.predict(X_test), y_test))\n\nonxx_pipeline = to_onnx(pipe, initial_types=[(\"message\", StringTensorType([None, 1]))])\n\nwith open(\"spam_nb.onnx\", \"wb\") as f:\n   f.write(onxx_pipeline.SerializeToString())\n```\n\n----------------------------------------\n\nTITLE: Displaying Community Contribution Alert in Markdown\nDESCRIPTION: This snippet shows how to create an info alert in Markdown to acknowledge a community contribution to a feature.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}Adding a search to the smart suggestions is based on an [upvoted idea from Anthony Dickinson](https://community.mendix.com/link/space/microflows/ideas/3472) submitted to the Mendix Community. Thanks, Anthony!{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Git Repository Status Commands\nDESCRIPTION: Commands for retrieving Git repository status and configuration information for troubleshooting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: git\nCODE:\n```\ngit status -b\ngit remote -v\ngit config --list --show-origin --show-scope\n```\n\n----------------------------------------\n\nTITLE: Loading Platform Dependencies in JavaScript Actions\nDESCRIPTION: Shows how to load built-in Mendix Client libraries that are available for use in JavaScript actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Synchronous libs that are already loaded\nvar lang = require(\"mendix/lang\");\n```\n\n----------------------------------------\n\nTITLE: Configuring Amazon S3 Resource Name Prefix in Mendix Runtime\nDESCRIPTION: This snippet shows the addition of the custom Runtime setting `com.mendix.storage.s3.ResourceNamePrefix`. The value of this setting will be prepended to the key when retrieving or storing files from and to Amazon S3. This setting deprecates the usage of slashes in bucket names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.24.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n\"com.mendix.storage.s3.ResourceNamePrefix\"\n```\n\n----------------------------------------\n\nTITLE: Custom Date Format Tokens Example\nDESCRIPTION: Reference table showing date format tokens that can be used in custom date formatting for grid columns when displaying Date and Time attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/data-grid/columns.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide9/custom-date-format-tokens.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Handling Selected Model Operations\nDESCRIPTION: Nanoflow configuration for opening and displaying selected 3D models from the search results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/3d-viewer-for-teamcenter.md#2025-04-21_snippet_3\n\nLANGUAGE: Nanoflow\nCODE:\n```\nOpenSelectedModel\nInputs: ModelDocument\nOutputs: Updated PageObject\n```\n\n----------------------------------------\n\nTITLE: Chart Title Configuration (JSON)\nDESCRIPTION: This snippet demonstrates how to configure the title of a chart, including its text, font family, size, and color.  The title appears above the chart and helps to explain the chart's overall topic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"title\": \"CHART TITLE\",\n  \"titlefont\": {\n    \"family\": \"Droid Sans, Droid Serif, sans-serif\",\n    \"size\": 20,\n    \"color\": \"black\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Database Connection in Java Action Task Queue\nDESCRIPTION: The Java API DataStorage.executeWithConnection(context, function) now properly closes the database connection when called from a Java action executed on a task queue.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.24.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nDataStorage.executeWithConnection(context, function)\n```\n\n----------------------------------------\n\nTITLE: Preparing Native Mobile App with CLI (Shell - Native Mobile App Builder)\nDESCRIPTION: Use the Native Mobile App Builder CLI to create a shell app by executing a prepare command with required parameters for your project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-deep-link.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnative-builder.exe prepare --project-name \"Native Deep Link\" --app-name \"Native Deep Link\" --java-home \"C:\\Program Files\\AdoptOpenJDK\\jdk-11.0.3.7-hotspot\" --mxbuild-path \"C:\\Program Files\\Mendix\\8.6.0.715\\modeler\\mxbuild.exe\" --project-path \"C:\\mendix-projects\\NativeDeepLink\\NativeDeepLink.mpr\" --github-access-token \"c3f322c471623\" --appcenter-api-token \"2d5b570693d34\"  --app-identifier \"com.mendix.native.deeplink\" --runtime-url \"https://nativedeeplink-sandbox.mxapps.io/\" --mendix-version \"8.6.0\"\n```\n\n----------------------------------------\n\nTITLE: Importing Custom Font Constants in JavaScript\nDESCRIPTION: This snippet shows how to import and use custom font constants in a JavaScript file for styling text elements in a Mendix native mobile app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { customFonts } from \"../theme/customFonts\";\n\nexport const custom = {\n    textHeading1: {\n        fontFamily: customFonts.timesNewRoman\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Styling Gallery Text Filter in JavaScript for Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the Gallery Text Filter widget. It includes styling options for the text input container, focused text input container, text input, and text input clear icon. These styles are applied when filtering is enabled within gallery items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_gallerytextfilter_GalleryTextFilter = {\n  textInputContainer: {\n    // This has all ViewStyle properties. Applies a view style to the container of the text input. \n  },\n  textInputContainerFocused: {\n    // This has all ViewStyle properties. Applies a view style to the container of the text input when the text box is focused.\n  },\n  textInput: {\n    // This has all ViewStyle properties. Applies a view style to the text input.\n  },\n  textInputClearIcon: {\n    // This has all ViewStyle properties. Applies style to the text clear button in the text box.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Accessing the Model Root in C#\nDESCRIPTION: This snippet shows how to access the model root by calling the GetUntypedModel method on the untyped model access service. It relies on having the current application model passed as a parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/untyped-model-api.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nclass Sample2(IUntypedModelAccessService untypedModelAccessService, IModel currentApp)\n{\n    public IModelRoot GetUntypedModelRoot() => untypedModelAccessService.GetUntypedModel(currentApp);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Selectable Component in Mendix Widget Preview\nDESCRIPTION: Demonstrates how to use the Selectable component from mendix/preview/Selectable to render selectable items with optional captions in a widget preview\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Selectable } from \"mendix/preview/Selectable\";\n\ntype TruckDriversType = {\n    name: string;\n    age: number;\n    isExperienced: boolean;\n}\n\ntype TruckWidgetPreviewProps = {\n    truckDrivers: TruckDriversType[];\n}\n\nexport const preview: React.FC<TruckWidgetPreviewProps> = (props) => (\n    <div className=\"my-pw-container\">\n        {props.truckDrivers.map((truckDriver, i) => (\n            <Selectable\n                object={truckDriver}\n                caption={truckDriver.isExperienced ? \"Awesome truck driver\" : undefined}\n                key={`truck_driver_${i}`}\n            >\n                <div className=\"my-pw-truck-driver\">\n                    <div>Name: {truckDriver.name}</div>\n                    <div>Age: {truckDriver.age}</div>\n                </div>\n            </Selectable>\n        ))}\n    </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Migrating Design Properties\nDESCRIPTION: Instructions to move user-defined design properties from Atlas 2's settings.json to the new format in Atlas 3, specifying necessary paths for module creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme_atlas2/settings.json\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nthemesource/your-module/web/design-properties.json\n```\n\n----------------------------------------\n\nTITLE: Background Color CSS Classes in Mendix\nDESCRIPTION: Pre-defined CSS classes for changing background colors in Mendix applications. Includes theme-based colors and layout background options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n/* Theme-based background colors */\n.background-primary { /* primary background color */ }\n.background-info { /* info background color */ }\n.background-success { /* success background color */ }\n.background-warning { /* warning background color */ }\n.background-danger { /* danger background color */ }\n\n/* Lighter variant background colors with matching foreground */\n.bg-primary { /* primary background color */ }\n.bg-info { /* info background color */ }\n.bg-success { /* success background color */ }\n.bg-warning { /* warning background color */ }\n.bg-danger { /* danger background color */ }\n\n/* Layout background colors */\n.background-layout { /* default layout background */ }\n.background-layout-secondary { /* alternative layout background */ }\n.background-default { /* default layout background */ }\n.background-default-dark { /* dark layout background */ }\n.background-default-darker { /* darker layout background */ }\n.background-default-light { /* light layout background */ }\n.background-default-lighter { /* lighter layout background */ }\n```\n\n----------------------------------------\n\nTITLE: OutOfMemoryError: Analyzing Heap Space Issues\nDESCRIPTION: This scenario describes an OutOfMemoryError due to excessive object creation or memory leaks in Mendix runtime applications. It emphasizes the importance of analyzing object caches and the heap to diagnose the issue accurately.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/runtime-java/runtime-java-errors.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nObjects creation that can consume a lot of memory; Memory leak detection by analyzing Object Cache and Heap graphs.\n```\n\n----------------------------------------\n\nTITLE: Querying Ingestion Jobs in Snowflake SQL\nDESCRIPTION: SQL query to retrieve all ingestion jobs for a specific data source from the core.ingestion_job table, ordered by creation date descending.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/mendix-data-loader.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM core.ingestion_job WHERE DATASOURCE_ID = '1234abcd' ORDER BY CREATED_DATE_TIME DESC;\n```\n\n----------------------------------------\n\nTITLE: Android Bundle Folder Structure\nDESCRIPTION: Illustrates the file system structure for Android bundles after MxBuild.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n\"- android\n    - res\n        - drawable-mdpi\n        - drawable-hdpi\n        - drawable-xhdpi\n        - drawable-xxhdpi\n        - drawable-xxxhdpi\n        - raw\n    - assets\n        - index.android.bundle\"\n```\n\n----------------------------------------\n\nTITLE: System Database Maintenance Plan Configuration\nDESCRIPTION: Establish maintenance subplans for system databases with backup and index maintenance tasks scheduled at specific intervals\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/mendix-sql-maintenance-plans.md#2025-04-21_snippet_3\n\nLANGUAGE: SQL\nCODE:\n```\n-- System Database Maintenance Plan (MP_SYSDB)\n-- Subplans:\n-- 1. Full Database Backup (Tuesday-Friday at 02:00)\n-- 2. Weekly Maintenance (Sunday at 01:00)\n-- Index reorganization with default free space settings\n```\n\n----------------------------------------\n\nTITLE: Deleting Mendix Apps from Namespace\nDESCRIPTION: Commands to remove specific Mendix applications from a namespace using their internal IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_27\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} delete mendixapp {internalId}\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} delete mendixapp {internalId}\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js and Pods for iOS Development - Shell\nDESCRIPTION: This snippet details the command to install necessary Node.js modules and iOS dependencies using CocoaPods for local development of a custom developer app on iOS. This setup is crucial for ensuring all required libraries and dependencies are available for successful app building.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/how-to-devapps.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i && cd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Read-Only Control Structure in HTML\nDESCRIPTION: Shows the new HTML structure for read-only controls with 'Read-only style' set to 'Text', now rendered as a div with 'form-control-static' class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-control-static\">value</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Web App Manifest in JSON\nDESCRIPTION: Example of customizing the web app manifest by modifying the manifest-overrides.webmanifest file in the theme folder. This snippet shows how to set the background_color and theme_color properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/introduction-to-mobile-technologies/progressive-web-app.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"background_color\": \"white\",\n    \"theme_color\": \"#0CABF9\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing 3D Scatter Chart Configuration in JSON\nDESCRIPTION: This snippet illustrates the configuration for a 3D scatter chart using JSON format, detailing x, y, and z coordinates along with the mode for rendering. The output is a scatter chart visualizing the data points in a three-dimensional coordinate system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ \"9\", \"8\", \"5\", \"1\" ],\n  \"y\": [ \"1\", \"2\", \"4\", \"8\" ], \n  \"z\": [ \"11\", \"8\", \"15\", \"3\" ],\n  \"mode\": \"markers\",\n  \"type\": \"scatter3d\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: URL Encoding Function Update\nDESCRIPTION: Updated URL encoding functionality that now encodes spaces as %20 instead of + characters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.0.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nurlEncode()\n```\n\n----------------------------------------\n\nTITLE: Boolean Property Condition Example\nDESCRIPTION: Example showing how to conditionally display delivery address fields based on a Boolean attribute in a web shop scenario.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\nSameBillingAndDeliveryAddress\n```\n\n----------------------------------------\n\nTITLE: Styling Native Introduction Screen Widget in Mendix (JavaScript)\nDESCRIPTION: JavaScript code for styling an Introduction Screen widget that displays paginated, swipeable content with navigation buttons in Mendix native mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_animation_Animation = {\n  fullscreenContainer: {\n    // This has all ViewStyle properties.\n  },\n  popupContainer: {\n    // This has all ViewStyle properties.\n  },\n  paginationContainer: {\n    // This has all ViewStyle properties.\n  },\n  paginationText: {\n    // This has all TextStyle properties.\n  },\n  dotStyle: {\n    // This has all ViewStyle properties.\n  },\n  activeDotStyle: {\n    // This has all ViewStyle properties.\n  },\n  buttonsContainer: {\n    // This has all ViewStyle properties.\n  },\n  container: {\n    // This has all ViewStyle properties. Meant for buttonSkip, buttonDone, buttonPrevious, and buttonNext.\n  },\n  caption: {\n    // This has all ViewStyle properties.\n  },\n  icon: {\n    size: null, // The size of the icon.\n    color: null, // The color of the icon.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Required Java Permissions for APD Components\nDESCRIPTION: List of Java permission statements needed for various APD functionalities including JMX monitoring, console output redirection, logging, JDBC connections, hostname resolution, and thread modification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-one/ig-one-prerequisites/ig-one-java-security-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npermission javax.management.MBeanServerPermission \"*\";\npermission javax.management.MBeanPermission \"**\", \"**\";\npermission javax.management.MBeanTrustPermission \"*\";\npermission java.lang.management.ManagementPermission \"monitor\";\n\npermission java.lang.RuntimePermission \"setIO\"; // for java console\n\npermission java.util.logging.LoggingPermission \"control\"; // for java util\n\npermission java.net.SocketPermission \"<server>:<port>\", \"connect\"; // for JDBC\n\npermission java.net.SocketPermission \"<mx server>\", \"resolve\"; // for license by hostname\n\npermission java.lang.RuntimePermission \"modifyThread\"; // for dynamic scheduled events\n```\n\n----------------------------------------\n\nTITLE: Implementing Extended CASE Expression in SQL\nDESCRIPTION: This snippet showcases the use of an extended CASE expression that evaluates price thresholds to classify order types. It returns 'Priority' if the price is above 7, 'Lucky' if the number is 7, and 'Regular' otherwise. This functionality is implemented in a SQL SELECT query on the Sales.Order table.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_18\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tLastName,\n\tNumber,\n\tPrice,\n\tCASE\n\t\tWHEN Price > 7 THEN 'Priority'\n\t\tWHEN Number = 7 THEN 'Lucky'\n\t\tELSE 'Regular'\n\t\tEND AS OrderType\nFROM Sales.Order\n```\n\n----------------------------------------\n\nTITLE: Embedding AR Widgets in Mendix Page\nDESCRIPTION: XML structure showing how to nest the Container (AR), ImageTracker (AR), and Cube (AR) widgets in a Mendix page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-simple-cube.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<container_ar>\n  <imagetracker_ar>\n    <cube_ar>\n    </cube_ar>\n  </imagetracker_ar>\n</container_ar>\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Region Selection in Mendix Microflows\nDESCRIPTION: Example code showing how to select an AWS region in a Mendix microflow expression. This is used when configuring Amazon S3 operations like CreateBucket.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/aws-s3-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nENUM_Region.AWSAuthentication.ENUM_Region.[your-aws-region]\n```\n\n----------------------------------------\n\nTITLE: Configuring Icon Styling for Native Mendix Widget\nDESCRIPTION: This code snippet is part of a function that configures the styling for icons in a custom native Mendix widget. It sets the color and size of the icons based on certain conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n        );\n    };\n    \n```\n\n----------------------------------------\n\nTITLE: Subtracting Minutes from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 30 minutes from a specific date and time using the subtractMinutes function. The function takes a datetime value and an integer representing minutes to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nsubtractMinutes(dateTime(2007, 1, 1, 1, 1, 1), 30)\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS SQS Access Policy for Sending Messages\nDESCRIPTION: Defines the AWS IAM policy allowing the Mendix Event Broker Bridge to send messages to the specified SQS queue. The policy requires specifying the principal role, allowed actions, and the target SQS ARN.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/event-broker.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"Sid\": \"__sender_statement\",\n  \"Effect\": \"Allow\",\n  \"Principal\": {\n    \"AWS\": [\n      \"arn:aws:iam::044806572671:role/mendix-event-broker-bridge\"\n    ]\n  },\n  \"Action\": [\n    \"SQS:SendMessage\"\n  ],\n  \"Resource\": \"<Tenant SQS ARN>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Years in Java UTC\nDESCRIPTION: The `addYears` function adds a specified number of years to a date. It requires an initial date and the number of years to be added as parameters, returning the modified date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\naddYears(dateTime(2007, 1, 1, 1, 1, 1), 11)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:01 CET 2018\"\n```\n\n----------------------------------------\n\nTITLE: Configuring 3D Surface Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a 3D surface plot with color scaling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"colorscale\": \"Viridis\",\n  \"z\": [ [ 3, 5, 7, 9 ], [ 21, 13, 8, 5 ] ],\n  \"type\": \"surface\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Passing Content to Display Component\nDESCRIPTION: This TypeScript code snippet shows how to pass the `content` property to the display component (`WrappedGroupBox`). This enables the display component to render the widgets placed inside the GroupBox in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nrender(): ReactNode {\n    const { content, headerCaption, style } = this.props;\n\n    return (\n        <WrappedGroupBox headerCaption={headerCaption} style={style}>\n            {content}\n        </WrappedGroupBox>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Updating List View CSS Selectors\nDESCRIPTION: Examples showing how to update CSS selectors for list views to work with simplified class structure\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.mx-listview-item {\n\t// Your styling\n}\n.mx-listview-search-input input {\n\t// Your styling\n}\n.mx-listview-clear-button {\n\t// Your styling\n}\n```\n\nLANGUAGE: css\nCODE:\n```\n.mx-listview li {\n\t// Your styling\n}\n.mx-listview-searchbar input {\n\t// Your styling\n}\n.mx-listview-searchbar button {\n\t// Your styling\n}\n```\n\n----------------------------------------\n\nTITLE: Describing Alert Events Payload\nDESCRIPTION: This snippet shows the JSON payload sent when a Mendix app triggers an alert. A configured webhook endpoint should be present to handle this data. Key parameters include 'app_name', 'environment', 'message', and 'severity', providing context on the alert's origin and type. These inputs inform about alert conditions and the necessary recovery actions if needed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/webhooks.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"app_name\": \"your-app-name\",\n  \"environment\": \"your-environment-name\",\n  \"environment_id\": \"n90c72er-344e-4a26-8efd-e0695234b465\",\n  \"id\": \"73eb456a-10d4-4821-ae58-31e4a49753ca\",\n  \"message\": \"INFORMATIONAL: Runtime heartbeat is okay.\",\n  \"service\": \"Application Status\",\n  \"severity\": \"Recovery\",\n  \"timestamp\": \"2023-08-18T08:11:22.586000+00:00\",\n  \"url\": \"https://your-mendix-app.mendixcloud.com\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Settings in .m2eerc\nDESCRIPTION: Example of how to configure proxy settings including host, port, username and password in the .m2eerc file using Java options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/using-a-proxy-to-call-a-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n...\\n# custom java options, like -Xmx256m or -Djava.foo=bar\\n javaopts: [ ..., \"-Dhttp.proxyHost=myproxyserver.com\", \"-Dhttp.proxyPort=3128\", \"-Dhttp.proxyUser=myusername\" \"-Dhttp.proxyPassword=mypassword\" ]\\n...\n```\n\n----------------------------------------\n\nTITLE: Setting binlog_format for MySQL Transaction Isolation\nDESCRIPTION: Configure the binlog_format database setting to ROW or MIXED to support the Read Committed transaction isolation level used by Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/mysql.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nSET GLOBAL binlog_format = 'ROW';\n```\n\n----------------------------------------\n\nTITLE: XML Representation of One-to-Many Association\nDESCRIPTION: This snippet shows the XML representation of a one-to-many association between Order and Customer entities in Mendix. The association is stored in the Order element, referencing the Customer's ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Order id=\"101\">\n\t<number>1</number>\n\t<date>9/30/2008</date>\n\t<Order_Customer>id_201</Order_Customer>\n</Order>\n\n<Customer id=\"201\">\n\t<fullname>Apple Inc.</fullname>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n</Customer>\n\n```\n\n----------------------------------------\n\nTITLE: NPM Install Legacy Command\nDESCRIPTION: Special installation command for NPM v7 and above to handle peer dependencies properly when installing modules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Starting Mendix Operator Deployment\nDESCRIPTION: This command scales the deployment of the Mendix Operator back up to one replica, starting it again after the upgrade process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-upgrade-guide.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} scale deployment mendix-operator --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Docker Compose with UI Configuration\nDESCRIPTION: Extended YAML configuration adding Selenoid UI service for live view functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenoid-hub.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n selenoid:\n   network_mode: bridge\n   image: aerokube/selenoid\n   volumes:\n     - \"/docker:/etc/selenoid\"\n     - \"/var/run/docker.sock:/var/run/docker.sock\"\n     - \"/docker/video:/opt/selenoid/video\"\n   environment:\n     - OVERRIDE_VIDEO_OUTPUT_DIR=/docker/video\n     - TZ=Europe/Amsterdam\n   command: [\"-conf\", \"/etc/selenoid/browsers.json\", \"-video-output-dir\", \"/opt/selenoid/video\"]\n   ports:\n     - \"4444:4444\"\n\n selenoid-ui:\n   image: \"aerokube/selenoid-ui\"\n   network_mode: bridge\n   links:\n     - selenoid\n   ports:\n     - \"8080:8080\"\n   command: [\"--selenoid-uri\", \"http://selenoid:4444\"]\n```\n\n----------------------------------------\n\nTITLE: Setting Microflow Constants in Mendix App Configuration YAML\nDESCRIPTION: Illustrates the process of setting microflow constants for Mendix apps by specifying constants in the runtime section. The sample sets constants with values that take precedence over those defined in other settings. This configuration affects how constants are handled at runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  runtime:\n    microflowConstants:\n      MyFirstModule.Constant: \"1234\"\n      MyModule.AnotherConstant: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Platform-Specific Style in React Native\nDESCRIPTION: Uses the Platform API to implement conditional styling in React Native. The borderRadius property dynamically changes based on the operating system, demonstrating cross-platform adaptability in styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View, Platform } from \"react-native\";\n\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: Platform.OS === \"ios\" ? 4 : 0,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Hours in Java\nDESCRIPTION: This snippet illustrates the use of the trimToHours function to round off a date to hours, removing minutes, seconds, and milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ntrimToHours($myDate)\n```\n\n----------------------------------------\n\nTITLE: Restoring Snapshot with Database Only Option\nDESCRIPTION: This Bash script provides a way to perform a database-only restoration of a Mendix snapshot by setting the db_only parameter to true in the POST request. Use caution as this will not restore application files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/v2/apps/b5f19af7-7453-465e-b9a1-d7556f524c1e/environments/d436e0cd-6200-4ac5-b858-849a6ddbb56a/restores?source_snapshot_id=5f8ace23-19df-4134-bd67-c338142a6097\\u0026db_only=true\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Updating Employee Object Values in Mendix\nDESCRIPTION: JSON request from Mendix Client to Runtime Server to change the values of an Employee object. This happens after object creation but before committing to the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"change\",\n   \"params\":{\n      \"281474976710757\":{\n         \"Firstname\":\"peter\",\n         \"Lastname\":\"jones\",\n         \"Jobtitle\":\"sales\",\n         \"Department\":\"sales\",\n         \"DateOfBirth\":-315622800000\n      }\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee6970d53960\":18\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Java Code Generation Example - Mendix 7\nDESCRIPTION: Example showing how Mendix Modeler version 7 generates Java code for a LogMessage action with parameter naming postfix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n        public LogMessage(IContext context, java.lang.String MessageParameter1)\n        {\n            super(context);\n            this.MessageParameter1 = MessageParameter1;\n        }\n        @java.lang.Override\n        public java.lang.Boolean executeAction() throws Exception\n        {\n            // BEGIN USER CODE\n            Core.getLogger(\"MyLogger\").info(this.MessageParameter1);\n            // END USER CODE\n        }\n```\n\n----------------------------------------\n\nTITLE: Configuring Layout Grids in Mendix\nDESCRIPTION: CSS classes for adjusting layout grid appearance and behavior, including vertical alignment and padding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_4\n\nLANGUAGE: CSS\nCODE:\n```\nv-center\nno-gutter\ncol-xs-N\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Metrics in MendixApp CR\nDESCRIPTION: This YAML snippet configures runtime metrics in a MendixApp Custom Resource (CR) by setting the `mode` to `compatibility`. It's used in standalone mode to override default configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  # Existing configuration\n  # ...\n  # Metrics configuration\n  runtimeMetricsConfiguration:\n    # Set mode to compatibility\n    mode: compatibility\n```\n\n----------------------------------------\n\nTITLE: Notification Tap Handler Nanoflow\nDESCRIPTION: Nanoflow designed to handle notification taps, retrieve objects by GUID, and navigate to specific pages\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_6\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nNanoflow: ON_tapNotification\nParameters:\n- notificationEntity (Notification)\nActivities:\n- Get Object By GUID (JavaScript Action)\n- Change Object with Dynamic Value\n```\n\n----------------------------------------\n\nTITLE: Selecting All Records from Sales.Period Table - SQL\nDESCRIPTION: This snippet retrieves all records from the Sales.Period table, which contains data about different sales periods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_22\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM Sales.Period\n```\n\n----------------------------------------\n\nTITLE: Editing Mendix Agent Deployment in Kubernetes\nDESCRIPTION: Command to edit the Mendix Agent deployment in Kubernetes to adjust resource settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit deployment mendix-agent\n```\n\n----------------------------------------\n\nTITLE: Deprecating IContext Method in UserAction\nDESCRIPTION: The `IContext context()` method in `com.mendix.systemwideinterfaces.core.UserAction` is deprecated. Developers should use `IContext getContext()` instead. The reason is most likely to standardize naming conventions and provide clarity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n\"IContext context()\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"IContext getContext()\"\n```\n\n----------------------------------------\n\nTITLE: Handling Association Values Based on Type in Mendix Widgets\nDESCRIPTION: Example code showing how to handle both reference and reference set values in a widget by checking the association type. This determines if the value is a single ObjectItem (Reference) or an array of ObjectItems (ReferenceSet).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (association.value === undefined) {\n\treturn \"None\";\n}\n\nif (association.type === \"Reference\") {\n\treturn textTemplate.get(association.value);\n} else {\n\treturn association.value.map((objectItem) => textTemplate.get(objectItem)).join(\",\");\n}\n```\n\n----------------------------------------\n\nTITLE: Upload Package POST Request Example\nDESCRIPTION: Example of a POST request to upload a deployment package to a Mendix Cloud app, showing required headers and multipart form data format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/v2/apps/calc/packages/upload?name=calc_1.0.0.45.mda\nHost: deploy.mendix.com\n\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\nContent-Type: multipart/form-data; boundary=MultipartBoundary\n\n--MultipartBoundary\nContent-Disposition: form-data;\n\n@%USERPROFILE%/Documents/Mendix/calc-main/releases/calc_1.0.0.45.mda\n--MultipartBoundary--\n```\n\n----------------------------------------\n\nTITLE: Basic Design Properties JSON Structure for Web/Native Styling\nDESCRIPTION: A simplified example of a design-properties.json file showing the structure with two widget types (DivContainer and Button) and two design properties (Toggle and Dropdown).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n{\n    \"DivContainer\": [\n        {\n            \"name\": \"My Toggle Property\",\n            \"type\": \"Toggle\",\n            \"description\": \"Description of My Toggle Design Property\",\n            \"class\": \"hereMyClass\"\n        },\n        {\n            \"name\": \"My Dropdown Property\",\n            \"type\": \"Dropdown\",\n            \"description\": \"Description of My Dropdown Design Property\",\n            \"options\": [\n                {\n                    \"name\": \"Styling option 1\",\n                    \"class\": \"stylingClassOne\"\n                },\n                {\n                    \"name\": \"Styling option 2\",\n                    \"class\": \"stylingClassTwo\"\n                }\n            ]\n        }\n    ],\n    \"Button\": [\n        ...\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Link Button\nDESCRIPTION: This snippet implements a Bootstrap button that resembles a link, styled with the 'link' color. It utilizes the same parameter structure as the other button types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"link\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Link\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Typography CSS Classes in Mendix\nDESCRIPTION: CSS classes for typography styling in Mendix applications, including text weight, spacing, alignment, and text transformations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n/* Text styling */\n.text-normal { /* normal text */ }\n.text-bold { /* bold text */ }\n.text-spacing { /* adds spacing to the text bottom and top */ }\n.text-lined { /* underlines the text-lined */ }\n.text-break { /* breaks text over multiple lines */ }\n.text-uppercase { /* transforms the text to upper case */ }\n.text-lowercase { /* transforms the text to lower case */ }\n.text-capitalize { /* capitalizes every word */ }\n\n/* Text alignment */\n.text-right { /* aligns the text to the right */ }\n.text-center { /* aligns the text to the center */ }\n.text-left { /* aligns the text to the left (default) */ }\n\n/* Other */\n.nowrap { /* don't wrap texts */ }\n```\n\n----------------------------------------\n\nTITLE: Using Access Token for Insights Hub API Authorization\nDESCRIPTION: This code snippet shows how to retrieve and use the access token for authorization when making REST calls to Insights Hub APIs. The token needs to be refreshed before each API call due to its short expiration time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n// 1. First retrieve the access token using DS_AccessToken microflow\n// 2. Verify token exists using: ${AccessTokenName} != empty (e.g., $AccessToken != empty)\n// 3. Add token to REST call Authorization header\n// 4. Delete AccessToken after use for security\n\n// Example microflow actions:\n// - Call DS_AccessToken microflow to populate AccessToken entity\n// - Add token to REST call in Edit Custom HTTP Header dialog: Authorization: $AccessToken\n// - Delete AccessToken object before ending microflow\n```\n\n----------------------------------------\n\nTITLE: Formatting DateTime with Custom Pattern in Mendix\nDESCRIPTION: Converts a Date and time value to a formatted string according to the specified pattern. This example formats the date with day name, day, month name, year, time, and timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime($object/Date1,'EEE, d MMM yyyy HH:mm:ss Z')\n```\n\n----------------------------------------\n\nTITLE: Configuring Mendix App Deployment Settings\nDESCRIPTION: YAML configuration for controlling Mendix application pod settings in Kubernetes. Includes service account token mounting and pod annotations for sidecars and monitoring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # Optional: provide Mendix app Pods to get a Kubernetes Service Account token\n  runtimeAutomountServiceAccountToken: true\n  # Optional: annotations for Mendix app Pods\n  runtimeDeploymentPodAnnotations:\n    # example: inject the Linkerd proxy sidecar\n    linkerd.io/inject: enabled\n    # example: enable Prometheus metrics scraping\n    prometheus.io/path: /metrics\n    prometheus.io/port: '8900'\n    prometheus.io/scrape: 'true'\n```\n\n----------------------------------------\n\nTITLE: Required Domain Access List\nDESCRIPTION: Lists the domains that must be whitelisted in the firewall for Team Server access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-troubleshooting/troubleshoot-team-server-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://teamserver.sprintr.com/\nhttps://git.api.mendix.com/\nhttps://home.mendix.com\n```\n\n----------------------------------------\n\nTITLE: File Value Interface Definition in TypeScript\nDESCRIPTION: Defines the FileValue interface for representing files in Mendix client components, providing access to the file's URI and name properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface FileValue {\n    readonly uri: string;\n    readonly name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Safe Area View Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Safe Area View widget which prevents content rendering in unwanted areas on iOS devices.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_safeareaview_SafeAreaView = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: jQuery Selector Patterns\nDESCRIPTION: Extended selector patterns provided by jQuery that can be used in ATS actions. These must be used without jQuery() or $() functions in Find Widget Child Node action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/rg-one-selectors.md#2025-04-21_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n:animated\n:checkbox\n:input\n:has(selector)\n:parent\n:text\n```\n\n----------------------------------------\n\nTITLE: Implementing a Datasource Preview in a Mendix Widget\nDESCRIPTION: Example of how to implement the getPreview function that returns a Datasource preview with a drop zone. This allows widgets to display data source containers with editable areas in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nexports.getPreview = (values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => ({\n  type: \"Datasource\",\n  property: values.myDatasourceProp, // pass the datasource property\n  child: {\n    type: \"DropZone\",\n    property: values.myWidgetsProp\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Adding APD Browser Agent Widget Path\nDESCRIPTION: Snippet path reference for including the APD Browser Agent Widget in app layouts. The widget is loaded once regardless of how many times a user opens a page containing it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-three.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUSE_ME/APDBrowserAgentWidget\n```\n\n----------------------------------------\n\nTITLE: Clear System Prompt Example\nDESCRIPTION: This example demonstrates how to provide a clear and specific system prompt for a helpful assistant. The detailed instructions cover providing information about Mendix, checking documentation and the forum for technical issues, including the source of information, and admitting when the answer is unknown, leading to more reliable responses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"You are a helpful assistant who provides information about Mendix. \nIf the user has a technical question, check the Mendix Documentation and include the link. \nIf the user is struggling with a bug, check Mendix Forum or Documentation for a solution. \nPlease provide the source of the information in your response. \nLastly, if you are not sure about the response, do not try to create one but rather inform the user that you do not know the answer.\"\n```\n\n----------------------------------------\n\nTITLE: Getting Minimum Value in Mendix Using Java\nDESCRIPTION: The 'min' function returns the smallest value from the specified arguments which can be numbers or date/time values. It takes multiple numeric inputs and outputs the smallest among them, ensuring the return type aligns with the input values. This function is crucial for finding the minimum values in various scenarios.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nmin(5, 1, 5, 6.7)\n```\n\nLANGUAGE: java\nCODE:\n```\n1\n```\n\n----------------------------------------\n\nTITLE: Basic SQL SELECT Query Example\nDESCRIPTION: Example of a SQL SELECT query that retrieves name and number columns from a stock table. This represents the kind of query that can be executed using the Execute query action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nselect name, number from stock\n```\n\n----------------------------------------\n\nTITLE: Creating Container Preview for Structure Mode in TypeScript\nDESCRIPTION: This example demonstrates how to create a container preview with multiple text elements. It creates a bordered container with two stacked text elements for widget preview in Structure Mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"Container\",\n        borders: true,\n        children: [\n            { type: \"Text\", content: \"I am on top\" },\n            { type: \"Text\", content: \"I am on the bottom\" }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: SSL Certificate Content for *.mendixcloud.com\nDESCRIPTION: This code snippet contains the full content of an SSL certificate issued for *.mendixcloud.com. It includes details such as the issuer, validity period, subject, public key, and various X509v3 extensions. The certificate is issued by Sectigo RSA Domain Validation Secure Server CA and is valid from October 29, 2021 to October 29, 2022.\nSOURCE: https://github.com/mendix/docs/blob/development/static/attachments/releasenotes/developer-portal/mendixcloud.com-2021-10-29.crt.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            ca:60:76:6a:e9:60:6a:8b:8c:d8:a8:d3:52:67:c1:e4\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = GB, ST = Greater Manchester, L = Salford, O = Sectigo Limited, CN = Sectigo RSA Domain Validation Secure Server CA\n        Validity\n            Not Before: Oct 29 00:00:00 2021 GMT\n            Not After : Oct 29 23:59:59 2022 GMT\n        Subject: CN = *.mendixcloud.com\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:c6:24:b1:b2:a6:98:81:26:6b:31:2d:34:f1:43:\n                    49:28:f6:70:e0:8e:6b:30:eb:f2:f4:45:9a:d7:7e:\n                    64:ee:c8:2d:68:0e:bd:18:06:68:b2:4c:4a:35:b6:\n                    8e:f1:34:da:ae:99:e9:04:07:22:57:d8:b4:e2:9c:\n                    a0:30:6d:d8:d9:d2:f8:34:69:08:09:96:d8:66:43:\n                    b7:c2:74:8e:62:73:e6:6b:5b:11:b8:e8:9d:e5:86:\n                    b6:54:61:8d:d4:ce:c9:4c:ce:d9:39:71:23:8f:a8:\n                    d8:2a:d6:44:35:54:9e:1b:22:68:0a:8b:2a:9f:5b:\n                    fa:9e:0d:4b:dd:10:77:cd:6b:fc:0f:83:38:16:15:\n                    59:08:98:8c:20:5d:a2:03:7d:52:7a:8c:ed:c0:b1:\n                    c0:2e:b2:dc:54:01:5e:e9:4b:0c:cb:c8:8f:af:c2:\n                    b4:da:5d:45:ad:96:a6:c8:c8:c2:ba:50:6b:35:2e:\n                    87:5e:cc:74:19:67:2b:6a:80:f5:a5:a8:1a:4f:4e:\n                    11:40:78:df:3d:ef:07:60:bc:8a:b5:81:c9:a8:a6:\n                    bf:51:69:ef:87:d6:08:5a:91:19:08:f9:a4:64:30:\n                    86:60:96:c4:38:22:c2:23:8e:c2:6f:d1:8e:ea:c2:\n                    d1:e5:d3:13:59:0b:82:c9:42:bb:0c:76:39:1f:db:\n                    0f:13\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Authority Key Identifier:\n                keyid:8D:8C:5E:C4:54:AD:8A:E1:77:E9:9B:F9:9B:05:E1:B8:01:8D:61:E1\n\n            X509v3 Subject Key Identifier:\n                D5:AC:AA:41:40:C3:C9:D0:30:0B:82:38:CA:6E:B6:91:9B:04:70:4F\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Extended Key Usage:\n                TLS Web Server Authentication, TLS Web Client Authentication\n            X509v3 Certificate Policies:\n                Policy: 1.3.6.1.4.1.6449.1.2.2.7\n                  CPS: https://sectigo.com/CPS\n                Policy: 2.23.140.1.2.1\n\n            Authority Information Access:\n                CA Issuers - URI:http://crt.sectigo.com/SectigoRSADomainValidationSecureServerCA.crt\n                OCSP - URI:http://ocsp.sectigo.com\n\n            X509v3 Subject Alternative Name:\n                DNS:*.mendixcloud.com, DNS:mendixcloud.com\n            CT Precertificate SCTs:\n                Signed Certificate Timestamp:\n                    Version   : v1 (0x0)\n                    Log ID    : 46:A5:55:EB:75:FA:91:20:30:B5:A2:89:69:F4:F3:7D:\n                                11:2C:41:74:BE:FD:49:B8:85:AB:F2:FC:70:FE:6D:47\n                    Timestamp : Oct 29 11:35:48.588 2021 GMT\n                    Extensions: none\n                    Signature : ecdsa-with-SHA256\n                                30:46:02:21:00:DA:B0:07:B2:8E:D1:4A:12:19:CF:D8:\n                                AB:6C:E9:A9:ED:3A:44:35:69:A8:8B:1A:53:D7:3C:54:\n                                0F:27:5E:9E:6D:02:21:00:B4:E4:06:89:F2:6B:38:D2:\n                                66:48:79:0D:A5:44:32:E1:09:0A:CF:D6:6C:72:C6:FC:\n                                DF:57:D0:4F:76:3B:52:50\n                Signed Certificate Timestamp:\n                    Version   : v1 (0x0)\n                    Log ID    : 41:C8:CA:B1:DF:22:46:4A:10:C6:A1:3A:09:42:87:5E:\n                                4E:31:8B:1B:03:EB:EB:4B:C7:68:F0:90:62:96:06:F6\n                    Timestamp : Oct 29 11:35:48.533 2021 GMT\n                    Extensions: none\n                    Signature : ecdsa-with-SHA256\n                                30:44:02:20:2B:A6:41:63:52:6B:FF:33:45:BF:E5:46:\n                                90:0C:C4:A1:AB:DF:ED:57:10:D1:78:50:73:ED:E3:0F:\n                                7E:8C:7B:AD:02:20:0C:0C:57:B7:52:99:4C:CC:79:D6:\n                                2E:18:6A:B7:1C:B4:2F:DA:C4:2A:3E:02:86:4D:01:86:\n                                B4:2F:E4:8E:C7:71\n                Signed Certificate Timestamp:\n                    Version   : v1 (0x0)\n                    Log ID    : 29:79:BE:F0:9E:39:39:21:F0:56:73:9F:63:A5:77:E5:\n                                BE:57:7D:9C:60:0A:F8:F9:4D:5D:26:5C:25:5D:C7:84\n                    Timestamp : Oct 29 11:35:48.495 2021 GMT\n                    Extensions: none\n                    Signature : ecdsa-with-SHA256\n                                30:44:02:20:7E:2D:EC:08:B1:33:18:15:A1:7E:AD:EF:\n                                70:70:88:A9:F5:EE:03:24:13:58:05:F1:55:94:8B:0A:\n                                98:C9:A1:2A:02:20:6C:A4:7F:87:5F:26:93:84:46:BB:\n                                7F:98:2B:0A:32:ED:5C:8A:01:04:69:23:72:6F:28:3B:\n                                35:90:AD:9A:7E:69\n    Signature Algorithm: sha256WithRSAEncryption\n         89:3e:7e:bf:ab:5c:7f:7c:9c:07:1f:72:86:39:ac:b2:9d:17:\n         2c:69:31:b0:b9:1a:db:38:18:a5:aa:4e:bd:76:61:fe:fb:07:\n         8b:9a:05:65:25:c4:bb:f8:66:f7:f2:79:96:a8:f3:e4:82:4e:\n         ac:43:6a:06:ed:71:70:f8:da:ff:9e:b4:e9:a6:2e:83:9e:55:\n         cf:51:fc:49:42:ba:ec:90:85:30:57:69:0b:6b:e1:f9:4e:89:\n         61:84:63:02:78:93:36:cd:a3:54:25:42:e0:79:45:ee:fd:17:\n         7a:42:4f:d0:9c:ae:ce:31:79:4a:7c:c9:72:18:d9:b9:b8:3f:\n         77:d3:c3:41:9e:5c:bf:a3:5d:5b:6b:79:52:0b:38:e7:23:8c:\n         8a:26:98:f7:d4:cb:29:d9:47:44:4c:a9:ca:2c:0c:c4:5e:83:\n         cd:84:58:a2:3e:67:0d:0b:fc:b4:90:19:5f:c1:b2:17:88:05:\n         e0:bc:ef:25:61:c2:ff:81:94:9e:3d:b5:35:f3:b7:5e:46:f2:\n         6c:cf:a0:89:e8:dc:6a:93:e1:3a:9a:5e:b5:52:b3:47:fd:d5:\n         bf:9b:3a:de:1e:4d:f7:c9:82:b3:4a:6a:d9:f8:18:bb:62:d2:\n         60:77:1e:e2:c1:27:2a:82:dd:7f:ce:68:1d:1f:71:3b:9b:79:\n         52:34:8f:63\n```\n\n----------------------------------------\n\nTITLE: Configuring Login Redirect in HTML\nDESCRIPTION: HTML snippet showing how to add a parameter to the login.html page to redirect to another page after login, added in version 9.12.6.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.12.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<form action=\"login.html?redirectTo=/mypage\">\n```\n\n----------------------------------------\n\nTITLE: Adding Milliseconds to Date in Java\nDESCRIPTION: Demonstrates adding 1400 milliseconds to a specific date using addMilliseconds function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\naddMilliseconds(dateTime(2007, 1, 1, 1, 1, 1), 1400)\n```\n\n----------------------------------------\n\nTITLE: Displaying File Upload Capabilities Table in Markdown\nDESCRIPTION: A markdown table showing file upload capabilities for different Selenium setups in ATS, including Local Selenium Server, BrowserStack, Sauce Labs, and Selenium SaaS Agent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Selenium Setup | Uploading your own file | Uploading a file | Uploading possible? |\n| :-------------- | :---------------------- | :--------------- | :------------------ |\n| Local Selenium Server (Docker) | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/grey.png\" class=\"no-border\" >}} Limited¹ | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/green.png\" class=\"no-border\" >}} Yes | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/green.png\" class=\"no-border\" >}} Yes |\n| BrowserStack (SaaS) | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/red.png\" class=\"no-border\" >}} No | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/green.png\" class=\"no-border\" >}} Yes | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/green.png\" class=\"no-border\" >}} Yes |\n| Sauce Labs (SaaS) | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/red.png\" class=\"no-border\" >}} No | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/red.png\" class=\"no-border\" >}} No | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/red.png\" class=\"no-border\" >}} No |\n| Selenium SaaS Agent | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/grey.png\" class=\"no-border\" >}} Limited² | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/green.png\" class=\"no-border\" >}} Yes | {{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats/red.png\" class=\"no-border\" >}} No |\n```\n\n----------------------------------------\n\nTITLE: Specifying No Client Certificate for a Service in Mendix\nDESCRIPTION: This snippet shows how to configure an empty path for `ClientCertificateUsages` in order to specify that no client certificate should be used for a particular service, even when the server accepts it. This allows for flexibility in service configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/certificates/use-a-client-certificate.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n{\"<endpoint>\":\"\"}\n```\n\n----------------------------------------\n\nTITLE: Styling Static Image Widget in Mendix Native Mobile\nDESCRIPTION: Defines styles for the static image widget, including container, image, and disabled states. It also includes specific properties for ripple and underlay colors when the image has an onClick action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Image = {\n  container: {\n    // All ViewStyle properties\n    rippleColor: 'rgba(0, 0, 0, 0.2)', // This is the color of the ripple on Android, and will be applied only when the container has an on click action set, otherwise it will be ignored.\n    underlayColor: null, // This is the color while pressing the container on iOS, and will be applied only when the container has an on click action set, otherwise it will be ignored and defaulted to opacity only.\n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the image has an on click action and the action cannot be executed or is disabled during action.\n  },\n  image: {\n    // This has all ImageStyle properties.\n  },\n  imageDisabled: {\n    // Same properties as `image`. Overrides `image` styles if the image has an on click action and the action cannot be executed or is disabled during action.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Mendix App Deployment Definition Example\nDESCRIPTION: Example YAML deployment configuration for a Mendix application showing container settings, health probes, and resource specifications. This represents how a deployed app appears in Kubernetes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 0\n  # ...\n  # omitted lines for brevity\n  # ...\n  template:\n    metadata:\n      # ...\n      # omitted lines for brevity\n      # ...\n      creationTimestamp: null\n      labels:\n        app: b8nn6lq5\n        component: mendix-app\n        node-type: master\n    spec:\n      automountServiceAccountToken: false\n      containers:\n      - env:\n        - name: M2EE_ADMIN_LISTEN_ADDRESSES\n          value: 127.0.0.1\n        - name: M2EE_ADMIN_PORT\n          value: \"9000\"\n        - name: M2EE_ADMIN_PASS\n          valueFrom:\n            secretKeyRef:\n              key: adminpassword\n              name: b8nn6lq5-m2ee\n        image: image-registry.openshift-image-registry.svc:5000/test-app/b8nn6lq5\n        imagePullPolicy: Always\n        ports:\n          - containerPort: 8080\n          name: mendix-app\n          protocol: TCP\n        name: mendix\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /m2ee-sidecar/v1/healthz\n            port: 8800\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 15\n          successThreshold: 1\n          timeoutSeconds: 3\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /\n            port: mendix-app\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 1\n          successThreshold: 1\n          timeoutSeconds: 1\n        terminationGracePeriodSeconds: 300\n        resources:\n          limits:\n            cpu: 1\n            memory: 512Mi\n            ephemeral-storage: 4Mi\n          requests:\n            cpu: 100m\n            memory: 512Mi\n            ephemeral-storage: 4Mi\n# ...\n# omitted lines for brevity\n# ...\n```\n\n----------------------------------------\n\nTITLE: FULL OUTER JOIN Syntax in OQL\nDESCRIPTION: The syntax for FULL OUTER JOIN in OQL, which returns all rows when there is a match in either the left or right entity, with NULL values for unmatched rows from either side.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nFULL [ OUTER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: Defining Attribute Property in XML for Mendix Pluggable Widget\nDESCRIPTION: XML snippet showing how to define an attribute property for a pluggable widget in Mendix. It specifies a 'percentage' attribute that can be of Decimal or Integer type, with an associated onChange action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_15\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"percentage\" type=\"attribute\" onChange=\"onPercentageChange\">\n\t<caption>Percentage</caption>\n\t<description>Progress percentage</description>\n\t<attributeTypes>\n\t\t<attributeType name=\"Decimal\"/>\n\t\t<attributeType name=\"Integer\"/>\n\t</attributeTypes>\n</property>\n    \n<property key=\"onPercentageChange\" type=\"action\">\n\t<caption>On change</caption>\n\t<description/>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Initializing Collapsed State in GroupBox\nDESCRIPTION: Sets the initial state of the GroupBox component to indicate that it is not collapsed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_29\n\nLANGUAGE: tsx\nCODE:\n```\nreadonly state: GroupBoxState = {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    collapsed: false\n```\n\nLANGUAGE: tsx\nCODE:\n```\n};\n```\n\n----------------------------------------\n\nTITLE: Disable Large Send Offload (IPv4) in Parallels Network Adapter (Windows)\nDESCRIPTION: This snippet guides users to disable the Large Send Offload (IPv4) setting in the Parallels VirtIO Ethernet Adapter properties within Windows Device Manager. This can potentially improve network upload speed issues experienced when using Parallels with Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/general/using-mendix-studio-pro-on-a-mac.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"1. In Windows 10/11, navigate to **Start** > **Control Panel**> **Device Manager** > **Network adapters** > **Parallels VirtIO Ethernet Adapter**.\n\n2. Right-click **Parallels VirtIO Ethernet Adapter** and select **Properties** in the drop-down list. \n3. On the **Advance** tab, find the **Large Send Offload** **(IPv4)** property and change its value to **Disabled**. \n4. Click **OK**.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Chart Theming in Mendix\nDESCRIPTION: JSON configuration for global chart theming in a Mendix project, allowing shared layout, configuration, and chart-specific options across different chart types\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"layout\": {\n    \"// Add shared layout options here (for all charts)\": null\n  },\n  \"configuration\": {\n    \"// Add shared configuration options here (for all charts)\": null\n  },\n  \"charts\": {\n    \"LineChart\": {\n      \"layout\": {\n        \"// Add line chart only layout options here\": null\n      },\n      \"data\": {\n        \"// Add line chart only data options here\": null\n      },\n      \"configuration\": {\n        \"// Add line chart only configuration options here\": null\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Escaping Special Characters in Markdown\nDESCRIPTION: This snippet demonstrates how special characters are escaped in a Markdown code block. It shows characters that have special meaning in style selectors used by ATS.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n\"#$%&'()*+,.\\/\"\n```\n\n----------------------------------------\n\nTITLE: UI Entry Points Configuration in Manifest JSON\nDESCRIPTION: JSON configuration specifying the UI entry points for the extension, including the tab and dockable pane components. This tells Studio Pro which JavaScript files to load for each UI entrypoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n\"ui\": {\n  \"tab\": \"tab.js\",\n  \"dockablepane\": \"dockablepane.js\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Date with All Parameters in Mendix\nDESCRIPTION: Creates a date object by specifying all parameters: year (2007), month (1 for January), day (1), hour (1 AM), minute (1), and second (1).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenStreetMap CSP\nDESCRIPTION: This code snippet outlines the Content Security Policy required for integrating OpenStreetMap into a Mendix application. It includes directives for allowing scripts and images from specified sources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/map.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nscript-src 'self';\nimg-src 'self' https://*.tile.osm.org data:;\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PEM Format Using OpenSSL\nDESCRIPTION: Command to convert the signing certificate from .cer format to PEM format, which is an intermediate step in creating the final P12 certificate.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/managing-app-signing-keys.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" x509 -in \"C:\\ios.cer\" -inform DER -out \"C:\\ios_pem.pem\" -outform PEM\n```\n\n----------------------------------------\n\nTITLE: Creating Domain Model Entities in Mendix\nDESCRIPTION: Process of creating custom entities and attributes in a Mendix domain model, specifically for mobile notification handling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Domain Model\nCODE:\n```\nEntity: TestEntity\nAttributes:\n- StringAttribute_1 (String)\n\nEntity: Notification\nAttributes:\n- GUIDString (String)\n```\n\n----------------------------------------\n\nTITLE: Checking Runtime Status in Mendix (JSON)\nDESCRIPTION: This endpoint returns the current status of the Mendix Runtime. Possible status values are 'created', 'starting', 'broken', 'running', 'stopping', and 'stopped'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\" : \"runtime_status\",\n  \"params\":{}\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"status\":\"running\"\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GroupBox Properties in XML\nDESCRIPTION: XML configuration for group box widget properties, including collapse icon and common system properties\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_42\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n    <caption>Collapse icon</caption>\n    <description>Icon used to indicate that the group box can be collapsed.</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Combined Constraints with AND Operator in Java\nDESCRIPTION: An XPath query using the 'and' operator to combine constraints, retrieving customers named 'Jansen' who live in Rotterdam in a single constraint expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen' and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Platform-Specific Styling for GroupBox Widget\nDESCRIPTION: Updated styling that introduces platform-specific border radius adjustments. iOS devices will have rounded corners with a 4px radius, while Android devices will have square corners.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: Platform.OS === \"ios\" ? 4 : 0,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    label: {\n        color: \"#F6BB42\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Visibility Section Link Include\nDESCRIPTION: Markdown snippet inclusion for visibility section documentation link\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-view.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Editing Mendix Agent Deployment in OpenShift\nDESCRIPTION: Command to edit the Mendix Agent deployment in OpenShift to adjust resource settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} edit deployment mendix-agent\n```\n\n----------------------------------------\n\nTITLE: Grid Selector RadioButton Parameter Table\nDESCRIPTION: Table showing the required input parameters for setting Grid Selector radio button values. Includes parameter names, datatypes, requirements, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/grid-selector/rg-one-set-grid-selector-radiobutton-checked.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | -------- | ---------------\nWidget Name | String | Yes | The name of the Grid Selector widget.\nColumn Caption | String | Yes | The column caption of the radio button cell.\nRow Caption | String | Yes | The row caption of the radio button cell.\nChecked | Boolean | Yes | The value for the checkbox you want to set (true or false).\n```\n\n----------------------------------------\n\nTITLE: Configuring Widget Description in XML\nDESCRIPTION: XML markup for defining a widget's display name and description that will appear in Studio Pro. These elements control how the widget is presented to developers in the development environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n    <name>My Progress Card</name>\n    <description>Displays my progress.</description>\n```\n\n----------------------------------------\n\nTITLE: Concatenating XML Tags in Excel\nDESCRIPTION: Excel formula that combines the opening tag, country name, and closing tag into a single cell. This formula is applied to column D to create complete XML element definitions for each country.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_2\n\nLANGUAGE: Excel formula\nCODE:\n```\n=(A1&B1&C1)\n```\n\n----------------------------------------\n\nTITLE: Configuring Heatmap in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a basic heatmap visualization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"z\": [ [ 1, 2 ], [ 3, 4 ] ],\n  \"type\": \"heatmap\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Obtaining Mendix Objects in Import Mapping\nDESCRIPTION: Defines three primary methods for retrieving Mendix objects during import mapping: creating a new object, finding an existing object by key, or calling a custom microflow\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/mapping-documents/import-mappings.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Configuration\nCODE:\n```\nObtain Mendix Object Methods:\n- Create an object\n- Find an object (by key)\n- Call a microflow\n```\n\n----------------------------------------\n\nTITLE: Authenticating User Identifiers API Request with PAT (HTTP)\nDESCRIPTION: Example of how to include the Personal Access Token (PAT) in the Authorization header for a User Identifiers API request. The PAT is prefixed with 'MxToken'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-identifiers-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /api/user-identifiers/v1/uuids HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Styles to Google Maps using JSON\nDESCRIPTION: This JSON snippet defines custom styles for Google Maps to hide labels and change colors for specific features like roads and landscape. The JSON array configures visual aspects such as color and visibility of map features, which can be pasted into the 'Style Array' section of the Google Maps widget's customization tab. It requires the Google Maps widget, available from the Mendix Marketplace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/style-google-maps.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n[{\"featureType\":\"all\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#abce83\"}]},{\"featureType\":\"landscape\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"poi\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"visibility\":\"simplified\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#5B5B3F\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#ABCE83\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#EBF4A4\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road.local\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"transit\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#aee2e0\"}]}]\n```\n\n----------------------------------------\n\nTITLE: Styling Animation Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the animation widget in Mendix native mobile applications. It includes styles for the container.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_animation_Animation = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: ActionValue Interface Definition in TypeScript\nDESCRIPTION: Defines the ActionValue interface that represents actions like the On click property. It includes properties for execution state and the execute method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ActionValue {\n    readonly canExecute: boolean;\n    readonly isExecuting: boolean;\n    execute(): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Date with dateTime function and five parameters\nDESCRIPTION: This snippet demonstrates how to create a date using the `dateTime` function with year, month, day, hour, and minute parameters. The `dateTime` function utilizes the session's calendar, whereas `dateTimeUTC` uses UTC. It returns a date object with the year set to 2007, the month set to January, the day set to 1, the hour set to 1, the minute set to 1, and the seconds set to the default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1, 1)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:00 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Querying String Length with OQL LENGTH in SQL\nDESCRIPTION: The LENGTH function is designed to return the number of characters in a given string expression. It requires a string type expression as an argument and outputs an integer representing the length of that string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-length.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nLENGTH ( expression )\n```\n\n----------------------------------------\n\nTITLE: Retrieving Apps from Mendix Cloud\nDESCRIPTION: API request to retrieve all apps that the authenticated user has access to on Mendix Cloud. This includes licensed apps and deployed Free Apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps\nHost: deploy.mendix.com\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Filtering on Association References in Mendix\nDESCRIPTION: Code that demonstrates how to filter objects based on whether they have an association with another object using the notEquals and empty filter builders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { association, literal, notEquals, empty } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAssociationReference.filterable) {\n    const filterCond = notEquals(association(this.props.myAssociationReference.id), empty());\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Association is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Google Maps API Key in Android Manifest\nDESCRIPTION: This snippet demonstrates how to set up the Google Maps API key in an Android project. It involves editing the AndroidManifest.xml to replace a placeholder with the actual API key necessary for running Google Maps services. Ensure the key is acquired as per Google\\'s official documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<meta-data android:name=\"com.google.android.geo.API_KEY\"\n         android:value=\"YOUR_API_KEY_HERE\"/>\n```\n\n----------------------------------------\n\nTITLE: MxBuild Error Output JSON Structure\nDESCRIPTION: Example JSON output format when using the --write-errors option to capture project errors\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mxbuild.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"problems\": [\n    {\n      \"name\": null,\n      \"severity\": \"Error\",\n      \"message\": \"Start event cannot be the last object of a flow.\",\n      \"locations\": [\n        {\n          \"elementId\": \"252e1008-d795-4e49-b3e3-2ba38eb0a56d\",\n          \"unitId\": \"1a8a3593-6f01-43a3-bc22-bd22f9244983\",\n          \"element\": \"Start event\",\n          \"document\": \"Microflow 'MyMicroflow'\",\n          \"module\": \"MyModule\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Data from Excel in Mendix Microflow\nDESCRIPTION: An activity in Mendix microflows that enables importing data from an Excel file using a predefined Data Importer document. Supports configuration of file source and output variable. Available in Studio Pro 10.6 and above.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/data-importer.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nImport data from file activity\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Properties in Drop-Downs\nDESCRIPTION: This snippet includes the common properties section relevant to drop-down widgets in Mendix applications, providing essential shared attributes necessary for proper widget functioning.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Testing SAP JCoDestination Connection\nDESCRIPTION: The `TestDestinationConnection` action checks if the application can connect to the SAP system using the specified JCoDestination. This is primarily a development tool and is not meant for production use.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\nThis action is used to verify whether your application is able to reach your SAP system using the configured `JCoDestination`.\n```\n\n----------------------------------------\n\nTITLE: Filtering Data with XPath in View Entities\nDESCRIPTION: Example of using XPath expressions to filter data on a combined attribute in a view entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/use-view-entities.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n//ViewEntity[FullName = $FullName]\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Injection for Kubernetes Namespace\nDESCRIPTION: This bash command labels a Kubernetes namespace to enable Istio injection, which is necessary for integrating Istio Service Mesh with an Ingress Controller.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-advanced-ingress-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace <name> istio-injection=enabled --overwrite\n```\n\n----------------------------------------\n\nTITLE: Executing mx set-app-version Command in Shell\nDESCRIPTION: The `mx set-app-version` command is used to assign a version to a solution under development, using the versioning convention SemVer. This command needs both an MPR-FILE and a version number as inputs, which should adhere to SemVer format. Exit codes are used to signal success or issues such as invalid version formats. Be prepared with a valid MPR-FILE and a correctly formatted version string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/adaptable.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmx set-app-version MPR-FILE VERSION\n```\n\nLANGUAGE: shell\nCODE:\n```\nmx set-app-version C:\\MyApp\\MyApp.mpr 1.2.3\n```\n\n----------------------------------------\n\nTITLE: Finding Product with Highest Stock\nDESCRIPTION: Uses a subquery with MAX to identify the product with the highest stock level.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_9\n\nLANGUAGE: sql\nCODE:\n```\nSELECT HighestStockProductName FROM Sales.Product\nWHERE Stock = (SELECT MAX(P.Stock) FROM Sales.Product P)\n```\n\n----------------------------------------\n\nTITLE: Creating a Centered Button using RowLayout in TypeScript\nDESCRIPTION: This snippet shows how to create a centered button-like element using RowLayout. It demonstrates the use of grow factors and containers to achieve centering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"RowLayout\",\n        columnSize: \"grow\",\n        borders: true,\n        borderRadius: 20,\n        backgroundColor: \"#2A2C96\",\n        children: [\n            {\n                type: \"Container\", // fills space on the left\n            },\n            {\n                type: \"Container\",\n                grow: 0, // ensures that it only takes necessary space\n                padding: 10,\n                children: [\n                    { type: \"Text\", content: \"A button\", fontColor: \"#FFF\", fontSize: 20 }\n                ]\n            },\n            {\n                type: \"Container\", // fills space on the right\n            }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image using Mendix Buildpack in Bash\nDESCRIPTION: This snippet details the steps to build a Docker image for a Mendix application. It requires Docker to be installed and the Mendix Docker Buildpack to be downloaded and unzipped. The process involves setting the BUILD_PATH to the location of the Mendix project folder and executing a Docker build command. The command specifies the project location and tags the image. Key dependencies include Docker and Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build --build-arg BUILD_PATH=\\\"{relative-mendix-project-location}\\\" -t {image name} .\n```\n\n----------------------------------------\n\nTITLE: Requesting Runtime Statistics in Mendix\nDESCRIPTION: This JSON request retrieves comprehensive statistics about the Mendix Runtime, including information about request handlers, cache, sessions, database connections, and memory usage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"runtime_statistics\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Specifying JSON Configuration for Mendix Microflows and Activities\nDESCRIPTION: This snippet provides the JSON structure required to configure the Mendix Java instrumentation agent. It specifies which request handlers, microflows, and activities to report to Prometheus, using a pattern that supports wildcard and specific definitions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"requestHandlers\": [\n    {\n      \"name\": \"*\" | \"<requesthandler>\"\n    }\n  ],\n  \"microflows\": [\n    {\n      \"name\": \"*\" | \"<microflow>\"\n    }\n  ],\n  \"activities\": [\n    {\n      \"name\": \"*\" | \"<activity>\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying with day-from-dateTime in Java\nDESCRIPTION: This Java query retrieves all `Logging.Log` objects where the day of the month of the `DateAttribute` is 30, using the local time zone.  The `day-from-dateTime()` function extracts the day, which is then compared to the integer 30.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[day-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Counting Records with $count in OData\nDESCRIPTION: Example of using the $count operator to retrieve the total number of records instead of the actual data. This returns the count of Engineer entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers/$count\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Range Settings for Database Retrieval\nDESCRIPTION: Shows the configuration for a retrieve action in a microflow that uses input parameters to dynamically set range constraints. This allows callers of the web service to control query parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/published-web-services/expose-a-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/expose-a-web-service/18581709.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring View Menu Pane Interactions\nDESCRIPTION: Demonstrates the different ways to position and arrange panes within Mendix Studio Pro's interface, including tab and window-level positioning options\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Within the current *pane* you can position a pane in one of the following ways:\n\n    1. Pane-height – left \n    2. Pane-height – right \n    3. Pane-height – top\n    4. Pane-height – bottom\n    5. New pane as a new tab\n```\n\n----------------------------------------\n\nTITLE: Implementing TextInput Component\nDESCRIPTION: React component implementation for the display component that renders the input field.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Component, ReactNode, createElement } from \"react\";\n\nexport interface InputProps {\n    value: string;\n}\n\nexport class TextInput extends Component<InputProps> {\n\n    render(): ReactNode {\n        return <input type=\"text\" value={this.props.value} />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Queue Management Operations in SAP Event Mesh\nDESCRIPTION: Sample microflows for managing queues including creation, deletion, and retrieval of queue information. Shows various queue management operations supported by the connector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-event-mesh-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: microflow\nCODE:\n```\nGetQueueList\nParameters:\n- Management Credentials\n```\n\nLANGUAGE: microflow\nCODE:\n```\nGetQueueDetails\nParameters:\n- Management Credentials\n- Queue Name\n```\n\nLANGUAGE: microflow\nCODE:\n```\nCreateOrUpdateQueue\nParameters:\n- Management Credentials\n- Queue Name\n```\n\nLANGUAGE: microflow\nCODE:\n```\nDeleteQueue\nParameters:\n- Management Credentials\n- Queue Name\n```\n\n----------------------------------------\n\nTITLE: Configuring Tab Container Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for a tab container widget including tab bar, indicators, labels and badges. Supports customization of tab positioning, scrolling behavior and visual feedback.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nexport const TabContainer = {\n  container: {\n  },\n  tabBar: {\n    bounces: null,\n    pressColor: null,\n    pressOpacity: null,\n    scrollEnabled: null,\n    tabBarPosition: 'top'\n  },\n  indicator: {\n  },\n  tab: {\n  },\n  label: {\n  },  \n  activeLabel: {\n  },\n  badgeContainer: {\n  },\n  badgeCaption: {\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Breakpoints in Java Actions\nDESCRIPTION: This snippet instructs users on how to set breakpoints in the Java code using Eclipse for debugging purposes. It explains the usage of keyboard shortcuts and the process of enabling a breakpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/debug-java-actions/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n1. Open Eclipse and locate the app in the **Package Explorer**.\n2. Double-click **ReverseCustomerName.java**:\n3. Place the cursor on the line that needs debugging, hold down <kbd>Ctrl</kbd> + <kbd>Shift</kbd>, and press <kbd>B</kbd> to enable a breakpoint. A blue dot in front of the line will appear.\n```\n\n----------------------------------------\n\nTITLE: Toggle Collapsed State Method\nDESCRIPTION: Method to toggle the collapsed state of the GroupBox\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_22\n\nLANGUAGE: tsx\nCODE:\n```\nprivate toggleCollapsed = (): void => {\n        this.setState(prevState => ({ collapsed: !prevState.collapsed }));\n    };\n```\n\n----------------------------------------\n\nTITLE: XSD Schema Header\nDESCRIPTION: Header section of the XSD schema file for importing Excel data into Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\">\n<xs:element name=\"CountriesImport\">\n<xs:complexType>\n<xs:sequence>\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Extension Lifecycle Events in C#\nDESCRIPTION: A C# code snippet demonstrating how to subscribe to extension lifecycle events. The code shows how to detect when an extension is loaded into Studio Pro and when it's about to be unloaded.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-menu-extension.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing Mendix.StudioPro.ExtensionsAPI.UI.Events;\n\nnamespace MyCompany.MyProject.MendixExtension;\n\n[method: ImportingConstructor]\n[Export(typeof(MenuExtension))]\npublic class MyMenuExtension() : MenuExtension\n{\n    public MyMenuExtension()\n    {\n       Subscribe<ExtensionLoaded>(onEvent: () => { MyActionOnLoaded() });\n       Subscribe<ExtensionUnloading>(onEvent: () => { MyActionOnUnloading() });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Default User Provisioning Attribute Mapping\nDESCRIPTION: Standard attribute mapping configuration for default user provisioning in OIDC SSO module\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Mappings\": [\n        {\"IdP Attribute\": \"email\", \"Entity Attribute\": \"Email\"},\n        {\"IdP Attribute\": \"name\", \"Entity Attribute\": \"FullName\"},\n        {\"IdP Attribute\": \"sub\", \"Entity Attribute\": \"Name\"}\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Feedback Widget with JavaScript\nDESCRIPTION: This code snippet defines the styling properties for the Feedback widget. It includes properties for the floating button, dialog, title, text area input, switch label, switch input, button, disabled button, and activity indicator. Each property allows customization of appearance using ViewStyle and TextStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_feedback_Feedback = {\n  floatingButton: {\n    // This has all ViewStyle properties.\n  },\n  dialog: {\n    // This has all ViewStyle properties.\n  },\n  title: {\n    // This has all TextStyle properties.\n  },\n  textAreaInput: {\n    // This has all TextStyle properties.\n    placeholderTextColor: null, // This is the text color of the placeholder string.\n    selectionColor: null, // This is the highlight and cursor color of the text input.\n    underlineColorAndroid: null, // This is the underline color for Android devices.\n    numberOfLines: null, // This is the height of the text area is based on this number of text lines.\n  },\n  switchLabel: {\n    // This has all TextStyle properties.\n  },\n  switchInput: {\n    // This has all TextStyle properties.\n    trackColorOn: null, // This is the custom color for the switch track when turned on.\n    trackColorOff: null, // This is the custom color for the switch track when turned off.\n    thumbColorOn: null, // This is the color of the foreground switch grip when turned on. If this is set on iOS, the switch grip will lose its drop shadow.\n    thumbColorOff: null, // This is the color of the foreground switch grip when turned off. If this is set on iOS, the switch grip will lose its drop shadow.\n  },\n  button: {\n    borderColor: null, // This is the color of dialog button borders.\n    borderWidth: null, // This is the width of dialog button borders.\n    color: null, // This is the color of dialog button text.\n  },\n  buttonDisabled: {\n    color: null, // This is the color of dialog button text when disabled.\n  },\n  activityIndicator: {\n    color: null, // This is the color of the activity indicator that is shown while feedback is being submitted.\n  },\n};\n\n```\n\n----------------------------------------\n\nTITLE: Creating a Microflow with Return Type and Parameters in C#\nDESCRIPTION: This example demonstrates creating a microflow with a return value using IMicroflowExpressionService. It creates an expression for simple addition and sets it as the return value with an Integer data type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\n void CreateMicroflow(IModel currentApp)\n {\n    var module = currentApp.Root.GetModules().Single(m => m.Name == \"MyFirstModule\");    \n    string returnValueExpression = \"1 + 2\";\n\n    var microflow = microflowService.CreateMicroflow(currentApp, module, \"Microflow\",\n         new MicroflowReturnValue(DataType.Integer, microflowExpressionService.CreateFromString(returnValueExpression)));\n\n    transaction.Commit();\n }\n```\n\n----------------------------------------\n\nTITLE: Android Keystore Generation with Java Keytool\nDESCRIPTION: Generate a keystore for Android app signing using the Java keytool utility, which creates a secure file for app distribution and publication\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nkeytool -genkey -v -keystore file.keystore -alias YOUR_ALIAS_NAME -storepass YOUR_ALIAS_PWD -keypass YOUR_ALIAS_PWD -keyalg RSA -validity 36500\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Chart Widget in JavaScript for Mendix Native\nDESCRIPTION: This code snippet defines the configuration object for the Line Chart widget in Mendix native applications. It includes styling options for various components of the chart, such as the container, grid, axes, legend, and lines. The configuration allows for extensive customization of the chart's appearance and behavior.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_linechart_LineChart = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  errorMessage: {\n    // This has all TextStyle properties. \n  },\n  chart: {\n    // This has all ViewStyle properties. \n  },\n  grid: {\n    backgroundColor: null, // Applies a color to the grid background (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the grid lines (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty).\n    lineColor: null, // Applies a color to the grid lines (string).\n    lineWidth: null, // Applies a width to the grid lines (number).\n    padding: null, // Applies padding to all sides of the grid (number). Use it to make axis value labels visible.\n    paddingBottom: null, // Applies padding to the bottom side of the grid (number). Use it to make axis value labels visible.\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the grid (number). Use it to make axis value labels visible.\n    paddingLeft: null, // Applies padding to the left side of the grid (number). Use it to make axis value labels visible.\n    paddingRight: null, // Applies padding to the right side of the grid (number). Use it to make axis value labels visible.\n    paddingTop: null, // Applies padding to the top side of the grid (number). Use it to make axis value labels visible.\n    paddingVertical: null, // Applies padding to the vertical sides of the grid (number). Use it to make axis value labels visible.\n  },\n  xAxis: {\n    color: null, // Applies a color to the axis value labels (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the axis line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    fontFamily: null, // Applies fonts to the axis value labels (string).\n    fontSize: null, // Applies a size to the axis value labels (number).\n    fontStyle: null, // Applies a font style to the axis value labels (\"normal\" or \"italic\").\n    fontWeight: null, // Applies a font weight to the axis value labels (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n    lineColor: null, // Applies a color to the axis line (string).\n    lineWidth: null, // Applies a width to the axis line (number).\n    label: { \n      // All TextStyle properties.\n      relativePositionGrid: null, // Positions the axis label at the bottom or right side of the grid (\"bottom\" or \"right\").\n    },\n  },\n  yAxis: {\n    // All `xAxis` element styles.\n  },\n  legend: {\n    container: {\n      // All ViewStyle properties.\n    },\n    item: {\n      // All ViewStyle properties. \n    },\n    indicator: {\n      // All ViewStyle properties. \n    },\n    label: {\n      // All ViewStyle properties. \n    }\n  },\n  lines: {\n    lineColorPalette: null, // Provides colors to lines that do not have a line color configured (string with list of colors separated by ';').\n    customLineStyles: {\n      any_custom_line_style_name: {\n        line: {\n          dashArray: null, // Applies a pattern of dashes and gaps to the graph line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n          ending: null, // Applies a flat or rounded line end to the graph line (\"flat\" or \"round\").\n          lineColor: null, // Applies a color to the graph line (string).\n          lineWidth: null, // Applies a width to the graph line (number).\n        },\n        markers: {\n          backgroundColor: null, // Applies a background color to the markers of the graph line (string).\n          borderColor: null, // Applies a border color to the markers of the graph line (string).\n          borderWidth: null, // Applies a border width to the markers of the graph line (string).\n          display: null, // Influences whether markers are displayed. When displayed, it positions the markers of the graph line on top or underneath the line (\"false\" or \"underneath\" or \"onTop\").\n          size: null, // Applies a size to the markers of the graph line (number).\n          symbol: null, // Applies a symbol to the markers of the graph line (\"circle\" or \"diamond\" or \"plus\" or \"minus\" or \"square\" or \"star\" or \"triangleDown\" or \"triangleUp\").\n        }\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Describing Package Upload Event Payload\nDESCRIPTION: This JSON snippet represents the payload structure sent when a package is uploaded to the Mendix Portal. Dependencies include a configured webhook endpoint to handle the payload. Key parameters are 'eventType', 'modelVersion', 'name', 'projectId', and 'uploadTime', providing details about the uploaded package and triggering event. Inputs include package attributes, and no direct outputs are provided, but implications include API interaction using package data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/webhooks.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"eventType\": \"package.uploaded\",\n  \"modelVersion\": \"0.0.19.62e3d711\",\n  \"name\": \"main-0.0.19.62e3d711.mda\",\n  \"projectId\": \"f60650eb-230a-4419-a6af-b3668fc82d5d\",\n  \"runtimeVersion\": \"9.18.1.54902\",\n  \"uploadTime\": \"2023-02-23T10:25:21.3896Z\",\n  \"uploaderId\": \"4bcafd1c-dac8-4335-b401-06ebe86f7851\"\n}\n```\n\n----------------------------------------\n\nTITLE: Convert Boolean to String in Mendix\nDESCRIPTION: This snippet demonstrates converting a Boolean value to its string representation using the `toString` function in Mendix. The input is a Boolean value (`true`), and the output is a string representation of that Boolean value ('true').\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n\"toString(true)\"\n```\n\n----------------------------------------\n\nTITLE: Setting BCRYPT Hash Algorithm in Mendix Runtime\nDESCRIPTION: Example of setting a custom configuration value for the HashAlgorithm in Mendix Runtime. This sets the hash algorithm to BCRYPT, which affects how passwords are hashed in the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/custom-settings/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nHashAlgorithm: BCRYPT\n```\n\n----------------------------------------\n\nTITLE: Updating Render Method to Utilize Header Rendering\nDESCRIPTION: This code adjusts the render method of the component to include the newly created renderHeader method, providing structure for the collapsible widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_26\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    return (\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        <View style={this.styles.container}>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n            {this.renderHeader()}\n```\n\nLANGUAGE: tsx\nCODE:\n```\n            {this.renderContent()}\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        </View>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    );\n```\n\nLANGUAGE: tsx\nCODE:\n```\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ClientCertificateUsages Setting Example in Mendix\nDESCRIPTION: Example configuration for the ClientCertificateUsages setting which specifies which service must use which client certificate. This shows the proper JSON format with escaped backslashes for certificate paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/custom-settings/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"identifier1\": \"D:\\\\App\\\\Mx1.pfx\",\n  \"identifier2\": \"D:\\\\App\\\\Mx2.pfx\",\n  \"identifier3\": \"D:\\\\App\\\\Mx3.pfx\"\n}\n```\n\n----------------------------------------\n\nTITLE: Date Range Field Type Configuration Table\nDESCRIPTION: Table showing the different types of date range fields, their behavior, examples, and corresponding date ranges.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/report-date-parameter/date-range-field.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Type | Behavior | Example | Range |\n| --- | --- | --- | --- |\n| Year | Allows the end-user to select a calendar year.¹ | 2019 | 1 January 2019 to 31 December 2019 |\n| Quarter² | Allows the end-user to select a quarter of the year. | 2019 > 2 | 1 April 2019 to 30 June 2019 |\n| Month² | Allows the end-user to select a month of the year. | 2019 > May | 1 May 2019 to 31 May 2019 |\n| Week² | Allows the end-user to select a week of the year. | 2019 > Week 19 | 5 May 2019 to 12 May 2019 |\n| Period² | *The Period date range field is being deprecated. It is recommended that you use one of the other types of date range field.*  | | |\n```\n\n----------------------------------------\n\nTITLE: Including Editability Section for Radio Buttons\nDESCRIPTION: This snippet includes editability characteristics of the radio buttons widget, outlining user interaction options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_3\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Defining an Integer Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet shows how to define an integer property for a pluggable widget. It includes the 'defaultValue' attribute set to '1000'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myInteger\" type=\"integer\" defaultValue=\"1000\">\n\t<caption>My integer</caption>\n\t<description>My integer setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Implementing Microflow Service Configuration\nDESCRIPTION: Example of implementing connector functions using provided activities in microflows, specifically for retrieving object lists from Snowflake tables and transforming HTTP responses into Mendix objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-rest-sql.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Defining Icon Property in Pluggable Widget XML\nDESCRIPTION: XML configuration for defining an icon property in a Mendix pluggable widget. The property key 'cardIcon' is defined as an optional icon type with caption and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"cardIcon\" type=\"icon\" required=\"false\">\n\t<caption>Icon</caption>\n\t<description>Card icon</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Executing ATS Test Run and Retrieving Results (PowerShell)\nDESCRIPTION: This PowerShell script for Jenkins on Windows executes an ATS test run, polls for its completion, and retrieves the final result. It defines a function for making SOAP requests and uses XML manipulation for parsing responses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-ats-and-ci-cd.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nfunction Execute-SOAPRequest \n( \n        [Xml]    $SOAPRequest, \n        [String] $URL \n) \n{ \n        write-host \"Sending SOAP Request To Server: $URL\" \n        $soapWebRequest = [System.Net.WebRequest]::Create($URL) \n        $soapWebRequest.Headers.Add(\"SOAPAction\",\"`\"http://www.facilities.co.za/valid8service/valid8service/Valid8Address`\"\")\n\n        $soapWebRequest.ContentType = \"text/xml;charset=`\"utf-8`\"\" \n        $soapWebRequest.Accept      = \"text/xml\" \n        $soapWebRequest.Method      = \"POST\" \n        \n        write-host \"Initiating Send.\" \n        $requestStream = $soapWebRequest.GetRequestStream() \n        $SOAPRequest.Save($requestStream) \n        $requestStream.Close() \n        \n        write-host \"Send Complete, Waiting For Response.\" \n        $resp = $soapWebRequest.GetResponse() \n        $responseStream = $resp.GetResponseStream() \n        $soapReader = [System.IO.StreamReader]($responseStream) \n        $ReturnXml = [Xml] $soapReader.ReadToEnd() \n        $responseStream.Close() \n        \n        write-host \"Response Received.\"\n\n       \n        return $ReturnXml \n\n}\n\n$url = 'ENTERURL'\n$appapitoken = 'APPAPITOKEN'\n$appid = 'APPID'\n$jobtemplate = 'JOBTEMPLATE'\n$soap = [xml]@\"\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\n<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:men=\\\"http://www.mendix.com/\\\">\n   <soapenv:Header>\n      <men:authentication>\n         <username>ATSAPIUser</username>\n         <password>ATSAPIUser</password>\n      </men:authentication>\n   </soapenv:Header>\n   <soapenv:Body>\n      <men:RunJob>\n         <TestRun>\n            <AppAPIToken>$appapitoken</AppAPIToken>\n            <AppID>$appid</AppID>\n            <JobTemplateID>$jobtemplate</JobTemplateID>\n         </TestRun>\n      </men:RunJob>\n   </soapenv:Body>\n</soapenv:Envelope>\n\"@\n\nwrite-host \"Starting the RunJob API call...\"\n$ret = Execute-SOAPRequest $soap $url\n$jobid = $ret.Envelope.Body.RunJobResponse.RunJob.JobID.'#cdata-section'\n\n$url2 = 'https://ats100.mendixcloud.com/ws/GetJobStatus'\n$soap2 = [xml]@\"\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\n<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:men=\\\"http://www.mendix.com/\\\">\n   <soapenv:Header>\n      <men:authentication>\n         <username>ATSAPIUser</username>\n         <password>ATSAPIUser</password>\n      </men:authentication>\n   </soapenv:Header>\n   <soapenv:Body>\n      <men:GetTestRun>\n         <TestRun>\n            <AppAPIToken>$appapitoken</AppAPIToken>\n            <JobID>$jobid</JobID>\n            <AppID>$appid</AppID>\n         </TestRun>\n      </men:GetTestRun>\n   </soapenv:Body>\n</soapenv:Envelope>\n\"@\n\nStart-Sleep -s 5\nwrite-host \"Starting the GetJobStatus API call...\"\n$ret2 = Execute-SOAPRequest $soap2 $url2\n\n$executionstatus = $ret2.Envelope.Body.GetTestRunResponse.TestRun.ExecutionStatus.'#cdata-section'\n\nwhile($executionstatus -ne 'Done')\n    {\n        write-host \"Status Test Run is: $executionstatus, please wait...\"\n        Start-sleep -s 30\n        $ret2 = Execute-SOAPRequest $soap2 $url2\n        $executionstatus = $ret2.Envelope.Body.GetTestRunResponse.TestRun.ExecutionStatus.'#cdata-section'\n    }\n\n$executionresult = $ret2.Envelope.Body.GetTestRunResponse.TestRun.ExecutionResult.'#cdata-section'\nwrite-host \"Result of Test Run is: $executionresult\"\n```\n\n----------------------------------------\n\nTITLE: Removing Style and Class Props in TextBox.tsx\nDESCRIPTION: This code shows how to remove the style and className props from the TextInput component within TextBox.tsx. The styling is removed because the widget now uses a Label system property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nreturn <TextInput value={value} tabIndex={props.tabIndex} />;\n```\n\n----------------------------------------\n\nTITLE: Update Object SQL Query\nDESCRIPTION: SQL update statement to modify the dateofbirth field of an employee record.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\n UPDATE \"myfirstmodule$employee\"\n SET \"dateofbirth\" = ?\n WHERE \"id\" = ?\n```\n\n----------------------------------------\n\nTITLE: Default Widget Configuration Structure in JavaScript\nDESCRIPTION: This JavaScript object shows the default configuration structure that would be passed to the getProperties function, representing the properties defined in the widget XML with three data points.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    {\n        caption: \"General\",\n        properties: [\n            {\n                key: \"caption\",\n                caption: \"Graph caption\",\n                description: \"The caption of this graph\"\n            }\n        ]\n    },\n    {\n        caption: \"Data\",\n        properties: [\n            {\n                key: \"dataCaption\",\n                caption: \"Data caption\",\n                description: \"The caption of the data set\"\n            },\n            {\n                key: \"dataPoints\",\n                caption: \"Data points\",\n                description: \"\",\n                objects: [\n                    {\n                        properties: [\n                            {\n                                caption: \"Data Point\",\n                                properties: [\n                                    { key: \"x\", caption: \"X value\", description: \"\" },\n                                    { key: \"y\", caption: \"Y value\", description: \"\" }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        properties: [\n                            {\n                                caption: \"Data Point\",\n                                properties: [\n                                    { key: \"x\", caption: \"X value\", description: \"\" },\n                                    { key: \"y\", caption: \"Y value\", description: \"\" }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        properties: [\n                            {\n                                caption: \"Data Point\",\n                                properties: [\n                                    { key: \"x\", caption: \"X value\", description: \"\" },\n                                    { key: \"y\", caption: \"Y value\", description: \"\" }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: List Widgets Props Interface Example\nDESCRIPTION: Example interface showing how to configure widgets property with a data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    myWidgets: (i: ObjectItem) => ReactNode;\n}\n```\n\n----------------------------------------\n\nTITLE: Restoring Velero Backup for Mendix Resources\nDESCRIPTION: Command to restore a Velero backup, including specific Mendix-related Kubernetes resources such as storageinstances, storageplans, builds, and mendixapps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-velero.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nvelero restore create --from-backup mendix-velero-bkp --status-include-resources=storageinstances.privatecloud.mendix.com,storageplans.privatecloud.mendix.com,builds.privatecloud.mendix.com,mendixapps.privatecloud.mendix.com\n```\n\n----------------------------------------\n\nTITLE: Sample Script - EnableDebugger Parameter - PowerShell\nDESCRIPTION: This example illustrates how to use the EnableDebugger argument when starting a Mendix app, allowing a connection from Studio Pro for debugging purposes. The parameter accepts a string for connection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_3\n\nLANGUAGE: PowerShell\nCODE:\n```\nStart-MxApp $appName -EnableDebugger \"Abcd@1234\"\n```\n\n----------------------------------------\n\nTITLE: Importing React Components\nDESCRIPTION: Required React component imports for implementing the collapsible group box functionality\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_16\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Children, Component, ReactNode, createElement, ComponentClass } from \"react\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Max JSON Reading Length in Mendix Runtime\nDESCRIPTION: This snippet shows how to configure the maximum length of a JSON string that can be imported, using the `mapping.import.MaxJsonReadingLength` runtime setting. This is to resolve issues where importing a JSON string with a length greater than 20000000 resulted in a runtime exception.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.24.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n\"mapping.import.MaxJsonReadingLength\"\n```\n\n----------------------------------------\n\nTITLE: Creating IAM Policy for S3 Access with IRSA\nDESCRIPTION: This JSON defines an IAM policy that grants permissions to access a specific S3 bucket using AWS IRSA (IAM Roles for Service Accounts). The policy allows actions like `s3:GetObject`, `s3:PutObject`, `s3:DeleteObject`, `s3:AbortMultipartUpload`, and `s3:ListMultipartUploadParts` on the specified bucket.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:AbortMultipartUpload\",\n        \"s3:DeleteObject\",\n        \"s3:GetObject\",\n        \"s3:ListMultipartUploadParts\",\n        \"s3:PutObject\"\n      ],\n      \"Resource\": [\n        \"arn:aws:s3:::<bucket_name>/*\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Remove include and project entries from settings.gradle\nDESCRIPTION: Removes the include and project entries of a dependency from the android/settings.gradle file. This step is essential when removing native modules from the Android project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_5\n\nLANGUAGE: gradle\nCODE:\n```\ninclude ':react-native-firebase'\nproject(':react-native-firebase').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-firebase/android')\n```\n\n----------------------------------------\n\nTITLE: Adding Numbers in Mendix - Java\nDESCRIPTION: This example adds two numbers in Mendix using Java. It illustrates addition operator usage for both Integer/Long and Decimal types, returning results of the same type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n-3 + 4\n```\n\n----------------------------------------\n\nTITLE: Initializing Notification Nanoflow in Mendix\nDESCRIPTION: Creating a nanoflow to generate a new Notification object with specific configuration steps\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nNanoflow: DS_Notification\nActivities:\n- Create Object (Entity: Notification)\n- Set return value: $NewNotification\n```\n\n----------------------------------------\n\nTITLE: Error Response Example in JSON\nDESCRIPTION: Example of a JSON error response returned by the API when authentication fails. It includes an error message and error code.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"errorMessage\": \"Authentication failed. The HTTP headers 'Mendix-Username' and 'Mendix-ApiKey' should contain valid credentials to authenticate for this request.\",\n    \"errorCode\": \"UNAUTHORIZED\"\n}\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts for Page Editing\nDESCRIPTION: Keyboard shortcuts for common page editing operations like cut, copy, and paste in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCtrl + Z / Ctrl + C / Ctrl + V\nCommand + Z / Command + C / Command + V\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commits API Request - HTTP\nDESCRIPTION: HTTP GET request format for retrieving commits from a specific branch in a Mendix app repository. The request includes path parameters for AppId and branch Name, along with optional query parameters for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_10\n\nLANGUAGE: http\nCODE:\n```\nHTTP Method: GET\n URL: https://repository.api.mendix.com/v1/repositories/<AppId>/branches/<Name>/commits\n```\n\n----------------------------------------\n\nTITLE: GetJobStatus SOAP Request with Execution Flags and Test Case Details\nDESCRIPTION: XML structure for making a comprehensive GetJobStatus request that includes execution flags and test case details. This request uses additional parameters to retrieve detailed information about each test case execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Header>\n    <tns:authentication>\n      <username>exampleUser</username>\n      <password>examplePassword</password>\n    </tns:authentication>\n  </soap:Header>\n  <soap:Body>\n    <tns:GetTestRun>\n      <TestRun>\n        <AppAPIToken>exampleString</AppAPIToken>\n        <JobID>exampleString</JobID>\n        <AppID>exampleString</AppID>\n        <IncludeExecutionFlags>true</IncludeExecutionFlags>\n        <IncludeDetailsPerTestCase>true</IncludeDetailsPerTestCase>\n      </TestRun>\n    </tns:GetTestRun>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Configuring Browsers for Selenoid Hub\nDESCRIPTION: JSON configuration file defining Firefox and Chrome browser versions and their Docker image specifications for Selenoid.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenoid-hub.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"firefox\": {\n           \"default\": \"58.0\",\n           \"versions\": {\n                   \"58.0\": {\n                           \"image\": \"selenoid/firefox:58.0\",\n                           \"port\": \"4444\",\n                           \"path\": \"/wd/hub\",\n                           \"tmpfs\": {\"/tmp\":\"size=512m\"}\n                   }\n           }\n   },\n   \"chrome\": {\n           \"default\": \"65.0\",\n           \"versions\": {\n                   \"65.0\": {\n                           \"image\": \"selenoid/chrome:65.0\",\n                           \"port\": \"4444\",\n                           \"tmpfs\": {\"/tmp\":\"size=512m\"},\n                           \"shmSize\" : 1073741824\n                   }\n           }\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: User Database Maintenance Plan Configuration\nDESCRIPTION: Create maintenance subplans for user databases including full and transaction log backups with specific scheduling and compression settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/mendix-sql-maintenance-plans.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\n-- User Database Maintenance Plan (MP_USERDB)\n-- Subplans:\n-- 1. Full Database Backup (Daily at 22:00)\n-- 2. Transaction Log Backup (Hourly)\n-- 3. Weekly Maintenance (Sunday at 01:00)\n-- 4. Daily Maintenance (Tuesday-Friday at 02:00)\n```\n\n----------------------------------------\n\nTITLE: Using NOT Operator for Negation in OQL\nDESCRIPTION: Illustrates the use of the NOT operator to reverse the value of an expression in OQL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: SQL\nCODE:\n```\nNOT City = 'Rotterdam'\n```\n\n----------------------------------------\n\nTITLE: Multiline String Property Type Definition\nDESCRIPTION: Shows how to define a multiline string property by setting the multiline attribute to true, allowing users to input longer text content spanning multiple lines.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myStringMultiline\" type=\"string\" multiline=\"true\">\n\t<caption>My string multiline</caption>\n\t<description>My string multiline setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Styling Range Slider Structure\nDESCRIPTION: XML structure showing both enabled and disabled states for styling a range slider widget including track, highlight, marker and validation elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_26\n\nLANGUAGE: XML\nCODE:\n```\n<container>\n\t<track><highlight/><marker/></track>\n\t<validationMessage/>\n</container>\n\n<container>\n\t<trackDisabled><highlightDisabled/><markerDisabled/></trackDisabled>\n\t<validationMessage/>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Simple SOAP Request Parameter Configuration\nDESCRIPTION: Example showing configuration of simple expressions for SOAP request parameters using primitive arguments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\n  <soapenv:Body>\n    {$ParameterName}\n  </soapenv:Body>\n</soapenv:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Response Format for Retrieving a Specific App\nDESCRIPTION: Example JSON response from the Retrieve App endpoint showing details of the requested app including its ID, project ID, URL, and name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"AppId\": \"calc\",\n    \"ProjectId\": \"543857rfds-dfsfsd12c5e24-3224d32eg\",\n    \"Url\": \"https://calc.mendixcloud.com\",\n    \"Name\": \"Calculation App\"\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Microflow in Mendix Runtime\nDESCRIPTION: JSON request to execute a microflow in the Mendix Runtime Server. It includes the action type and operation ID for calling the microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"runtimeOperation\",\n    \"operationId\": \"5i0E8lZXMFaIhjn/9ZdEYA\",\n    \"params\": {},\n    \"validationGuids\": [],\n    \"changes\": {},\n    \"objects\": [],\n}\n```\n\n----------------------------------------\n\nTITLE: Checking for an Empty Object Member in Mendix (Java)\nDESCRIPTION: Shows how to check if a member (attribute or association) of an object is empty in Mendix expressions. The output is a boolean indicating whether the member is empty or not.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n$object1/member1 = empty\n```\n\n----------------------------------------\n\nTITLE: Generating PCLM Server Installation Manifest with mx-pclm-cli\nDESCRIPTION: This command uses the mx-pclm-cli tool to generate a YAML manifest for installing the PCLM server. It includes various parameters for database configuration, authentication, and Docker image specification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli installer-gen --db-type <db-type> \\\n    --db-hostname <hostname> \\\n    --db-auth-mode <authenticationMode> \\\n    --db-aws-iam-role <aws-iam-role> \\\n    --db-azure-client-id <azure-client-id> \\\n    --db-name <db-name> \\\n    --db-user <db-user> \\\n    --db-password <db-pass> \\\n    --db-port <port> \\\n    --db-strict-tls <tls-boolean> \\\n    --ssl-cert-file <ssl-root-certificate> \\\n    --image-repo <docker-repo> \\\n    --image-tag <docker-tag> \\\n    --out-file <out-file>\n```\n\n----------------------------------------\n\nTITLE: Modifying SCSS Variable in Calypso\nDESCRIPTION: This code snippet demonstrates modifying a SCSS variable within the `_custom-variables.scss` file. The primary brand color is changed from a blue shade to brown.  This change is then reflected in the Mendix application's button style, demonstrating the live preview functionality of Calypso.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/calypso.md#2025-04-21_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\n\"$brand-primary: #0595DB;\"\n\n```\n\nLANGUAGE: scss\nCODE:\n```\n\"$brand-primary: brown\"\n\n```\n\n----------------------------------------\n\nTITLE: Updating Single and Null Associations in OData JSON\nDESCRIPTION: JSON example showing how to update single object associations using the @id syntax to reference an existing object, or using null to empty an association. This pattern is used when updating associations that refer to a single object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/published-odata-services/odata-query-options.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Birthplace\": { \"@id\": \"Cities(511342)\" },\n  \"Region\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Storage Service Authentication Keys\nDESCRIPTION: Configuration parameters for authenticating and connecting to Amazon S3 or IBM Cloud Object Storage with access key ID and secret access key\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"com.mendix.storage.s3.AccessKeyId\": \"your-access-key\",\n  \"com.mendix.storage.s3.SecretAccessKey\": \"your-secret-key\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Line Chart Configuration in JSON\nDESCRIPTION: This snippet demonstrates how to configure a line chart using the Any Chart Widget in JSON format. It requires an array of x and y values for plotting points on the chart. The expected output is a visual representation of the line chart based on the provided data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"x\": [ 1, 2 ],\n    \"y\": [ 1, 2 ],\n    \"type\": \"scatter\"\n  },\n  {\n    \"x\": [ 3, 4 ],\n    \"y\": [ 9, 14 ],\n    \"type\": \"scatter\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding a menu to the Studio Pro extensions menu using typescript\nDESCRIPTION: This code snippet demonstrates how to add a menu item to the Studio Pro extensions menu using the Web Extensibility API. The `studioPro.ui.extensionsMenu.add` function is used to add a new menu item with a specified `menuId`, `caption`, and `subMenus` array.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/get-started.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n    await studioPro.ui.extensionsMenu.add({\n    menuId: \"myextension.MainMenu\",\n    caption: \"MyExtension Menu\",\n    subMenus: [{ menuId: \"myextension.ShowTabMenuItem\", caption: \"Show tab\" }],\n    });\n```\n\n----------------------------------------\n\nTITLE: Locating AutoComplete Result Element with jQuery\nDESCRIPTION: This code uses jQuery to find a specific result element in the AutoComplete widget's dropdown. It combines class selectors with the :contains pseudo-selector to target an element with specific text content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-10-autocomplete.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n$( '.select2-results .autoCompleteResult:contains(\"ATS Option 11\")' )\n```\n\n----------------------------------------\n\nTITLE: Using PerformanceToolInfoAction in Java for Mendix Performance Tool\nDESCRIPTION: This Java action allows insertion of context-specific information into the Mendix Performance Tool. It can include an info string for the action name, a message string, and optionally up to 3 Mendix objects with their attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-one-apm/rg-one-performance-tool/rg-one-inserting-context-information.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nPerformanceTool.PerformanceToolInfoAction\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Log Format in YAML\nDESCRIPTION: Specifies the log format used by Mendix apps using the 'runtimeLogFormatType' entry in the OperatorConfiguration. Supports 'plain' (default) and 'json' formats.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # ...\n  # Other configuration options values\n  # Optional: log format type\n  runtimeLogFormatType: json\n```\n\n----------------------------------------\n\nTITLE: Defining Metrics and Logs Links for Grafana - HTTP\nDESCRIPTION: This HTTP URL snippet provides a template for setting up Metrics and Logs links in the Mendix Portal, allowing quick access to Grafana dashboards by using placeholder variables for namespace and environment names. It requires the Grafana domain to be set up in your cluster. Output includes formatted links for developer access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_15\n\nLANGUAGE: http\nCODE:\n```\nhttps://grafana.mendix.example.com/d/4csBnmWnk/mendix-app-dashboard?var-namespace={namespace}&var-environment_id={environment_name}\n\n```\n\n----------------------------------------\n\nTITLE: Using false() Function in XPath Query for Customer Filtering\nDESCRIPTION: This XPath query returns all customers from the Sales.Customer entity where the IsGoldCustomer attribute equals false. It demonstrates the proper use of the false() function in Mendix XPath queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-false.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[IsGoldCustomer = false()]\n```\n\n----------------------------------------\n\nTITLE: Configuring StatsD Registry in JSON\nDESCRIPTION: Example configuration for StatsD metrics registry with host, port and protocol settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": {\n      \"host\": \"mx.datadog.com\",\n      \"port\": \"8181\",\n      \"protocol\": \"TCP\",\n      \"flavor\": \"TELEGRAF\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Get Validation Message Function in Markdown\nDESCRIPTION: This code snippet defines a markdown table listing the input parameters for the 'Get Validation Message' function. It includes the parameter name, datatype, whether it's required, and a description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-get-validation-message.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype |Required| Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget\nSearch Context | WebElement | no |Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Defining Problem Type for Validation in TypeScript\nDESCRIPTION: Type definition for the Problem object used in validation. Specifies the structure required for reporting issues to the Errors pane in Studio Pro, including property reference, severity level, error message, and optional URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Problem = {\n    property?: string; // key of the property, at which the problem exists\n    severity?: \"error\" | \"warning\" | \"deprecation\"; // default = \"error\"\n    message: string; // description of the problem\n    url?: string; // link with more information about the problem    \n}\n```\n\n----------------------------------------\n\nTITLE: Handling Invalid PAT Response\nDESCRIPTION: This snippet shows the expected response when using an invalid Personal Access Token (PAT) with the Mendix Catalog APIs. Users should ensure their PAT is valid to avoid access denial.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/mendix-profile/user-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\n403 Access Denied\nContent-Type: application/json\n\n{\n    \"error\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using SELECT with Aliased Entity\nDESCRIPTION: This snippet shows how to select all attributes from an entity while using an alias for the entity specified in the FROM clause. It allows for easier reference and clarity in queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Person.* FROM Sales.Customer AS Person\n```\n\n----------------------------------------\n\nTITLE: Adding Spinner Cordova Plugin\nDESCRIPTION: This XML snippet configures the Cordova plugin for the native spinner functionality within the Mendix mobile application. It specifies the plugin name (`cordova-plugin-spinner`) and its source (`npm`). This plugin is a dependency for the spinner feature of the Mobile Features widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/mobile-features.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<gap:plugin name=\"cordova-plugin-spinner\" source=\"npm\" />\n```\n\n----------------------------------------\n\nTITLE: Creating ISO-like DateTime Format in Mendix\nDESCRIPTION: Demonstrates how to create an ISO-like datetime format by concatenating two separate formatDateTime function calls. This approach separates the date and time formatting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime($object/Date1,'yyyy-MM-dd') + 'T' + formatDateTime($object/Date1,'HH:mm:ss')\n```\n\n----------------------------------------\n\nTITLE: Configuring Edit Permissions in XML\nDESCRIPTION: This snippet demonstrates how to add an 'Editability' system property to the TextBox widget's configuration in XML to control edit permissions based on user rights and context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Editability\">\n    <systemProperty key=\"Editability\"/> \n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Using LessThan Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the lessThan helper to filter items where an attribute value is less than a specified literal value. This helper works with String, HashString, Enumeration, AutoNumber, Integer, Long, Decimal, and DateTime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_33\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is less than 42\nconst filterCondition = lessThan(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Non-Existence Check Query\nDESCRIPTION: Query to find customers who have not placed any orders using negated exist-expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_12\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: Example OQL Query with LEFT OUTER JOIN\nDESCRIPTION: A practical example of using LEFT OUTER JOIN in OQL to retrieve customers who have no associated orders, demonstrating how to find records in one entity that have no relationship with another entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \n  Customer/Name as Name,\n  Customer/<anyotherattribute> as <anyotherattribute>\nFROM MyModule.Customer\n  LEFT OUTER JOIN Customer/MyModule.Customer_Order/MyModule.Order as Order\nWHERE Order/ID IS NULL\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for getProperties Function\nDESCRIPTION: TypeScript interface definition for the getProperties function that customizes widget properties in Studio Pro. It takes values and default configuration as parameters and returns a Properties object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getProperties(\n    values: ValuesAPI,\n    defaultConfiguration: Properties\n): Properties\n```\n\n----------------------------------------\n\nTITLE: Backup Restore Status Response - JSON\nDESCRIPTION: Example response showing the status of a backup restore operation. Includes details like restore ID, status message, timestamps, state, and source/target environment information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":\"Restore completed\",\n   \"restore_id\":\"11076b79-9df4-45d8-ac4b-dd79617138f5\",\n   \"source_snapshot_id\":\"5f8ace23-19df-4134-bd67-c338142a6097\",\n   \"finished_at\":\"2020-02-18T16:46:26.000Z\",\n   \"updated_at\":\"2020-02-18T16:46:26.000Z\",\n   \"target_environment_id\":\"d436e0cd-6200-4ac5-b858-849a6ddbb56a\",\n   \"created_at\":\"2020-02-18T16:46:26.000Z\",\n   \"state\":\"completed\",\n   \"source_environment_id\":\"d436e0cd-6200-4ac5-b858-849a6ddbb56a\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix Pipelines Using Helm\nDESCRIPTION: Helm command to install Mendix pipelines in the air-gapped environment, specifying the necessary images and repositories.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/private-cloud-tekton-airgap.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncd $PATH_TO_DOWNLOADED_FOLDERS && cd helm/charts\nhelm install -n $NAMESPACE_WITH_PIPELINES mx-tekton-pipeline ./pipeline/ \\\n  -f ./pipeline/values.yaml \\\n  --set images.imagePushURL=$URL_TO_YOUR_REPO_WITHOUT_TAG \\\n  --set images.fetch=$PRIVATE_REGISTRY/mxpc-pipeline-tools:gitinit-0.0.3 \\\n  --set images.verExtraction=$PRIVATE_REGISTRY/mxpc-pipeline-tools-cli:0.0.9 \\\n  --set images.build=$PRIVATE_REGISTRY/mxbuild \\\n  --set images.imageBuild=$PRIVATE_REGISTRY/mxpc-pipeline-tools:imagebuild-0.0.9 \\\n  --set images.constantsAndEventsResolver=$PRIVATE_REGISTRY/mxpc-pipeline-tools-cli:0.0.9 \\\n  --set images.k8sPatch=$PRIVATE_REGISTRY/mxpc-pipeline-tools-cli:0.0.9 \\\n  --set images.createAppEnv=$PRIVATE_REGISTRY/mxpc-pipeline-tools-cli:0.0.9 \\\n  --set images.deleteAppEnv=$PRIVATE_REGISTRY/mxpc-pipeline-tools-cli:0.0.9 \\\n  --set images.configureAppEnv=$PRIVATE_REGISTRY/mxpc-pipeline-tools-cli:0.0.9\n```\n\n----------------------------------------\n\nTITLE: Using curl with Authentication Token for Tekton Triggers\nDESCRIPTION: Example of how to trigger a pipeline using curl with the X-GitLab-Token header for authentication. This demonstrates how to send a POST request to create an application with various parameters in the JSON payload.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST \\\n  http://pipeline.trigger.yourdomain.com/ \\\n  -H 'X-GitLab-Token: SomeLongSecureToken42' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Event: create-app' \\\n  -d '{\n    \"namespace\":\"namespace-with-operator\",\n    \"env-internal-name\":\"mx-environment-internal-name\",\n    \"dtap-mode\":\"D\",\n    \"storage-plan-name\":\"file-plan-name\",\n    \"database-plan-name\":\"db-plan-name\"\n}'\n```\n\n----------------------------------------\n\nTITLE: Basic Java Action Structure in Mendix\nDESCRIPTION: Shows the basic structure of a Java action in Mendix with markers for user code and extra code sections. This is the template structure that gets generated when creating a new Java action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/java-programming/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// BEGIN USER CODE\n// Your custom code goes here\n// END USER CODE\n\n// BEGIN EXTRA CODE\n// Additional methods can be defined here\n// END EXTRA CODE\n```\n\n----------------------------------------\n\nTITLE: Committing Working Copy Changes\nDESCRIPTION: Commits model changes to the Team Server, with error handling for tracking successful or failed operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-creating-your-first-script.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntry {\n    const revision = await workingCopy.commit();\n    console.log(`Successfully committed revision: ${revision.num()}. Done.`)\n} catch (error) {\n    console.error('Something went wrong:', error);\n}\n```\n\n----------------------------------------\n\nTITLE: Execute Microflow JSON Request\nDESCRIPTION: JSON request to execute a microflow that retrieves all employees.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"executeaction\",\n   \"params\":{\n      \"actionname\":\"MyFirstModule.GetAllEmployees\",\n      \"applyto\":\"none\"\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204f418ba05e7c0\":55\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Web Service in Mendix Studio Pro\nDESCRIPTION: Process for directly importing a web service document into a Mendix module using the WSDL source URL or local file\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Configuration\nCODE:\n```\n1. Right-click module\n2. Select \"Add Other\" > \"Consumed web service\"\n3. Specify name\n4. Enter WSDL Source URL or File\n5. Import services and operations\n```\n\n----------------------------------------\n\nTITLE: Using SELECT with All Attributes\nDESCRIPTION: This snippet demonstrates how to select all attributes from an entity in OQL using the asterisk operator. It retrieves all columns from the specified entity without needing to list them explicitly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer.* FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Configure Service Account Annotations for Azure Workload Identity\nDESCRIPTION: This text snippet illustrates how to annotate a Kubernetes Service Account to configure Azure Workload Identity, enabling a build pod to authenticate with Azure services using a managed identity. The annotation specifies the client ID of the managed identity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\nkind: ServiceAccount\nmetadata:\n    name: default\n    namespace: default # The same as the one in Configuring Build Cluster Setting\n    annotations:\n        azure.workload.identity/client-id: {client-id-build}\n```\n\n----------------------------------------\n\nTITLE: Setting HTTP Timeout in Configuration File\nDESCRIPTION: The purpose of this snippet is to set a timeout value for HTTP connections in the Subversion configuration file to avoid 'connection timed out' errors. The setting 'http-timeout' is added under the '[global]' section, with a value of '5000', indicating a timeout duration in milliseconds. This change helps prevent connection issues during version control operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/troubleshoot-version-control-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttp-timeout = 5000\n```\n\n----------------------------------------\n\nTITLE: ATS Widget Interaction Table\nDESCRIPTION: Markdown table showing the mapping between common testing tasks and their corresponding ATS actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nTask                             | Action |\n----------------------------------|:------:|\nFinding a widget                 | Find/Assert Widget action |\nClicking a widget                | Click Widget action |\nCover an input widget            | Set Value action |\nRetrieving a value from a widget | Get Value action |\nAsserting values/information     | Assert Value action |\nGenerating values/information    | See 6 Generating Values/Information for more information |\n```\n\n----------------------------------------\n\nTITLE: Numeric Comparison in XPath\nDESCRIPTION: Query to find orders with total price less than 50.00 euros using numeric comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Order[TotalPrice < 50.00]\n```\n\n----------------------------------------\n\nTITLE: Retrieving the Grafana UI URL\nDESCRIPTION: Command to retrieve the externally accessible URL for the Grafana web interface. This returns the hostname where you can access Grafana with the admin credentials created earlier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\noc --namespace {project} get route loki-grafana -o jsonpath=\"{.status.ingress[*].host}\"\n```\n\n----------------------------------------\n\nTITLE: Successful Transform API Response\nDESCRIPTION: This JSON represents a successful response from the Transform API. It contains information on the published and consumed endpoints derived from the transformed dependencies.json file. The putPublishedEndpoints section provides details necessary to register published services, while putConsumedEndpoints describes the consumed services, including endpoint locations and consumed items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"putPublishedEndpoints\": {\n    \"endpoints\": {\n      \"path\": \"/employeeservice/v2\",\n      \"discoverable\": true,\n      \"validated\": true,\n      \"serviceVersion\": {\n        \"version\": \"2.0\",\n        \"type\": \"OData\",\n        \"service\": {\n          \"name\": \"test.acme.employeeinformation\"\n        },\n        \"tags\": [\n          {\n            \"name\": \"hr\"\n          },\n          {\n            \"name\": \"employee\"\n          }\n        ],\n        \"securityScheme\": {\n          \"securityTypes\": [\n            {\n              \"name\": \"MxID\",\n              \"marketplaceModuleID\": \"93457\"\n            }\n          ],\n          \"mxAllowedRoles\": [\n            {\n              \"name\": \"User\",\n              \"uuid\": \"91ca220e-9498-4d23-9d2e-90b9c19aca37\"\n            }\n          ],\n          \"contracts\": [\n            {\n              \"type\": \"CSDL\",\n              \"documentBaseURL\": \"https://hr.acmecorp.test/odata/test.acme.employeeinformation/v1/\",\n              \"documents\": [\n                {\n                  \"isPrimary\": true,\n                  \"uri\": \"metadata.xml\",\n                  \"contents\": \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"http://schemas.microsoft.com/ado/2007/06/edmx\\\" xmlns:mx=\\\"http://www.mendix.com/Protocols/MendixData\\\">  <edmx:DataServices m:DataServiceVersion=\\\"3.0\\\" m:MaxDataServiceVersion=\\\"3.0\\\" xmlns:m=\\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\">    <Schema Namespace=\\\"DefaultNamespace\\\" xmlns=\\\"http://schemas.microsoft.com/ado/2009/11/edm\\\"><EntityType Name=\\\"Employee\\\"><Key><PropertyRef Name=\\\"ID\\\" /></Key><Property Name=\\\"ID\\\" Type=\\\"Edm.Int64\\\" Nullable=\\\"false\\\" mx:isAttribute=\\\"false\\\" /><Property Name=\\\"Name\\\" Type=\\\"Edm.String\\\" MaxLength=\\\"200\\\" /><Property Name=\\\"DateOfBirth\\\" Type=\\\"Edm.DateTimeOffset\\\" /><Property Name=\\\"Address\\\" Type=\\\"Edm.String\\\" MaxLength=\\\"200\\\" /><Property Name=\\\"JobTitle\\\" Type=\\\"Edm.String\\\" MaxLength=\\\"200\\\" /><Property Name=\\\"Salary\\\" Type=\\\"Edm.Decimal\\\" /></EntityType><EntityContainer Name=\\\"test.acme.employeeinformation/v1Entities\\\" m:IsDefaultEntityContainer=\\\"true\\\"><EntitySet Name=\\\"Employees\\\" EntityType=\\\"DefaultNamespace.Employee\\\" /></EntityContainer></Schema></edmx:DataServices></edmx:Edmx>\"\n                }\n              ]\n            }\n          ]\n        }\n      }\n    }\n  },\n  \"putConsumedEndpoints\": {\n    \"endpoints\": [\n      {\n        \"endpointLocation\": \"https://hr.acmecorp.test/employeeservice/v2\",\n        \"consumedItems\": [\n          {\n            \"type\": \"EntitySet\",\n            \"name\": \"ManagingEmployees\",\n            \"namespace\": \"DefaultNamespace\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TestNG for Cross-Browser Testing in Java\nDESCRIPTION: This Java code snippet demonstrates how to configure a TestNG test to run on multiple browsers by utilizing the `@Parameters` annotation to inject browser-specific parameters via a test suite. The code sets up drivers for Firefox, Chrome, and Internet Explorer based on the provided parameter. Ensure correct path settings for driver executables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\n@Parameters(\"browser\")\n@BeforeTest\npublic void beforeTest(String browser) {\n\tif(browser.equalsIgnoreCase(\"chrome\")){\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"C://Selenium/chromedriver.exe\");\n\t\tdriver = new ChromeDriver();\n\t}\n\telse if(browser.equalsIgnoreCase(\"ie\")){\n\t\tSystem.setProperty(\"webdriver.ie.driver\", \"C://Selenium/IEDriverServer.exe\");\n\t\tdriver = new InternetExplorerDriver();\n\t}\n\telse{\n\t\tdriver = new FirefoxDriver();\n\t}\n}\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.ie.InternetExplorerDriver;\nimport org.testng.annotations.Parameters;\n```\n\n----------------------------------------\n\nTITLE: Workflow Commons Components Overview\nDESCRIPTION: Lists the key components provided by the Workflow Commons module including pages like DefaultWorkflowAdmin, TaskDashboard, and WorkflowAdminCenter, along with their functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/workflow-commons.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\n* DefaultWorkflowAdmin\n* MyInitiatedWorkflows\n* TaskDashboard\n* TaskInbox\n* WorkflowAdminCenter\n* WorkflowDashboard\n* TaskAssignment\n```\n\n----------------------------------------\n\nTITLE: Automatic Retry on Task Failure in Java\nDESCRIPTION: Configures automatic retries for tasks that fail during execution using the Java API. Supports fixed and exponentially increasing delay strategies. This function allows setting the maximum number of attempts and delay intervals. The retry mechanism applies to microflow and Java action calls, producing separate log entries for each attempt, all tied to the original task's sequence.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/task-queue.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nCore.microflowCall(\"AModule.SomeMicroflow\")\n  .withRetry(10, Duration.ofSeconds(3))\n  .executeInBackground(context, \"AModule.SomeQueueName\");\nCore.userActionCall(\"AModule.SomeJavaAction\")\n  .withExponentialRetry(8, Duration.ofSeconds(3), Duration.ofMinutes(1))\n  .executeInBackground(context, \"AModule.SomeQueueName\");\n```\n\n----------------------------------------\n\nTITLE: Updating a Mendix Webhook using PUT Request\nDESCRIPTION: Example of a PUT request to update an existing webhook. The request includes the app ID and webhook ID in the URL path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/webhooks-api.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPUT /apps/80a28d6e-c5fc-43d9-87c2-d7d56b07542e/webhooks/msg_2M605iBQRge9hTgpYg7fKXQubaw\n```\n\n----------------------------------------\n\nTITLE: Replace All Occurrences Using Regex in Java\nDESCRIPTION: Demonstrates replaceAll() function that replaces all matches of a regular expression with a replacement string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nreplaceAll('this is a string with 75 some numbers 234 thrown in', '([0-9])', 'NUMBER')\n```\n\nLANGUAGE: java\nCODE:\n```\nreplaceAll('this is a string with no numbers thrown in', '([0-9])', 'NUMBER')\n```\n\n----------------------------------------\n\nTITLE: Multiple Metrics Filter Example\nDESCRIPTION: Example showing multiple filters with different priorities. Demonstrates how filters are applied in sequence and how their order affects which metrics are accepted or denied.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": { \"protocol\": \"TCP\" },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"accept\", \"values\" : [\"app.\"] },\n      { \"type\" : \"nameStartsWith\", \"result\" : \"deny\", \"values\" : [\"app.others.\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Widget Properties in XML\nDESCRIPTION: Comprehensive XML structure for configuring widget properties including property groups, input fields, data types, and default values. This example shows how to organize properties into logical groups for better usability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n    <properties>\n        <propertyGroup caption=\"General\">\n            <propertyGroup caption=\"Main\">\n                <property key=\"label\" type=\"textTemplate\">\n                    <caption>Label</caption>\n                    <description>Card label</description>\n                </property>\n                <property key=\"icon\" type=\"icon\" required=\"false\">\n                    <caption>Icon</caption>\n                    <description>Card icon</description>\n                </property>\n                <property key=\"percentage\" type=\"attribute\">\n                    <caption>Percentage</caption>\n                    <description>Progress percentage</description>\n                    <attributeTypes>\n                        <attributeType name=\"Decimal\"/>\n                        <attributeType name=\"Integer\"/>\n                    </attributeTypes>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Action\">\n                <property key=\"showButton\" type=\"boolean\" defaultValue=\"false\">\n                    <caption>Show button</caption>\n                    <description>Show button on the card</description>\n                </property>\n                <property key=\"buttonAction\" type=\"action\" required=\"false\">\n                    <caption>On click</caption>\n                    <description>Action to be performed when button is clicked</description>\n                </property>\n                <systemProperty key=\"TabIndex\"/>\n            </propertyGroup>\n        </propertyGroup>\n        <propertyGroup caption=\"Visual\">\n            <propertyGroup caption=\"Progress bar\">\n                <property key=\"animateProgressBar\" type=\"boolean\" defaultValue=\"true\">\n                    <caption>Animate</caption>\n                    <description>Show progress bar animation</description>\n                </property>\n                <property key=\"progressBarColor\" type=\"expression\" defaultValue=\"'red'\">\n                    <caption>Color</caption>\n                    <description>Progress bar CSS color</description>\n                    <returnType type=\"String\" />\n                </property>\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n```\n\n----------------------------------------\n\nTITLE: Initializing Firefox Browser in BeforeTest Method\nDESCRIPTION: Sets up the Firefox browser instance before test execution using WebDriver\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@BeforeTest\npublic void beforeTest() {\n\tdriver = new FirefoxDriver();\n}\n```\n\n----------------------------------------\n\nTITLE: Deprecating MendixHashString Method\nDESCRIPTION: The `String getUnhashedValue()` method of `MendixHashString` is deprecated. This method was intended for internal use only. Its deprecation prevents unintended usage and protects internal data handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n\"String getUnhashedValue()\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"MendixHashString\"\n```\n\n----------------------------------------\n\nTITLE: Output Example of getCaption Function in Mendix (Java)\nDESCRIPTION: Demonstrates the potential output of the getCaption function, showing a translated caption value in Dutch.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nGouden\n```\n\n----------------------------------------\n\nTITLE: Defining Table Structure for JVM Process Memory Types in Markdown\nDESCRIPTION: This code snippet defines a markdown table structure explaining different types of JVM process memory usage, including code cache, native code, jar files, and various memory spaces.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/metrics.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Type                 | Explanation                                                                                           |\n|----------------------|-------------------------------------------------------------------------------------------------------|\n| **code cache**       | JVM includes a code cache, containing memory that is used for compilation and storage of native code. |\n| **native code**      | JVM allocates a certain amount of memory space for native bytecode.                                   |\n| **jar files**        | These are JAR files necessary for JVM itself to run.                                                            |\n| **tenured generation** | As objects \"survive\" repeated garbage collections in the survivor space, they are migrated to the tenured generation. You can look at this metric as a number of long-living objects in JVM. |\n| **survivor space**   | This is the pool containing objects that have survived the garbage collection of the Eden space.              |\n| **eden space**       | This is the pool from which memory is initially allocated for most objects.                                   |\n| **unused java heap** | This is unused JVM heap memory.                                                                               |\n| **permanent generation** | This is the pool containing all the reflective data of the virtual machine itself, such as class and method objects. With Java VMs that use class data sharing, this generation is divided into read-only and read-write areas. |\n| **other**            | This is virtual or reserved memory space.                                                                     |\n| **thread stacks**    | This is stacks that are reserved for unique threads.                                                          |\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Chart Theme JSON Structure\nDESCRIPTION: JSON configuration file for defining shared and chart-specific theming options across different chart types in a Mendix project. Allows setting global layout, configuration, and individual chart type settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"layout\": {\n    // Add shared layout options here (for all charts)\n  },\n  \"configuration\": {\n    // Add shared configuration options here (for all charts)\n  },\n  \"charts\": {\n    \"LineChart\": {\n      \"layout\": {\n        // Add line chart only layout options here\n      },\n      \"data\": {\n        // Add line chart only data options here\n      },\n      \"configuration\": {\n          // Add line chart only configuration options here\n      }\n    },\n    \"AreaChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BubbleChart\": {\n      // Same arrangement as the line chart\n    },\n    \"TimeSeries\": {\n      // Same arrangement as the line chart\n    },\n    \"ColumnChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BarChart\": {\n      // Same arrangement as the line chart\n    },\n    \"PieChart\": {\n      // Same arrangement as the line chart\n    },\n    \"HeatMap\": {\n      // Same arrangement as the line chart\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gauge Name Rules\nDESCRIPTION: Defines naming conventions for gauge metrics in Mendix with specific restrictions on character usage and naming patterns\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/metrics-activities/metrics-gauge.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n* The name can only contain alpha-numeric characters, dots or underscores.\n* The name must start with a letter.\n* The name cannot start with `mx`, because this prefix is reserved for Mendix internal metrics.\n* The name is case-insensitive.\n```\n\n----------------------------------------\n\nTITLE: Handling CE0548 Menu Item Structure Error\nDESCRIPTION: Example of resolving CE0548 error that occurs when menu items with sub-items have actions assigned to them. The solution involves either removing the on-click event or restructuring the menu items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-navigation.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Close Page - Event Navigation\nDESCRIPTION: This snippet details the 'Close Page' event, which either closes a pop-up window or navigates back to a previous page, depending on the context of use in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nThe **Close page** event closes a pop-up window (for pop-up pages) or navigates to the previously visited page (for content pages).\n```\n\n----------------------------------------\n\nTITLE: Implementing Sign Out Test Method in Java\nDESCRIPTION: This test method simulates signing out of the application by clicking the sign out button.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=5)\npublic void signOut() {\n\tdriver.findElement(By.cssSelector(\".mx-name-signOutButton1\")).click();\n}\n```\n\n----------------------------------------\n\nTITLE: LDAP Login Name Field\nDESCRIPTION: LDAP attribute specification for the unique user login identifier in Active Directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/ldap.md#2025-04-21_snippet_1\n\nLANGUAGE: LDAP\nCODE:\n```\nsAMAccountName\n```\n\n----------------------------------------\n\nTITLE: Mendix App XSUAA Security Config\nDESCRIPTION: Complete xs-security.json configuration example for Mendix app showing foreign scope references and OAuth2 settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n{\n   \"xsappname\":\"BAPI-Consumer-dev\",\n    \"tenant-mode\" : \"shared\",\n    \"authorities\":[\"$XSAPPNAME(application,bapi-service).bapiAuth\"],\n    \"foreign-scope-references\": [\"$XSAPPNAME(application,bapi-service).bapiAuth\"],\n    \"scopes\":[\n       //scopes list\n    ],\n    \"role-templates\":[\n       //role template list\n    ],\n    \"xsenableasyncservice\":\"true\",\n    \"oauth2-configuration\":{\n       \"autoapprove\":\"true\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering with Multiple Conditions in OData\nDESCRIPTION: Shows how to combine multiple filter conditions using logical operators. This example retrieves employees named 'John' who are either over 65 or under 11 years old.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_3\n\nLANGUAGE: odata\nCODE:\n```\n/Employees?$filter=Name eq 'John' and (Age gt 65 or Age lt 11)\n```\n\n----------------------------------------\n\nTITLE: Configuring Viewer Widget Data Source\nDESCRIPTION: Setting up the Viewer widget's data source attributes to use uploaded model information\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<figure src=\"/attachments/partners/siemens/3d-viewer/viewer-datasourceuploaded.jpg\" alt=\"viewer-datasourceuploaded\" class=\"no-border\">\n```\n\n----------------------------------------\n\nTITLE: Setting Default Sort Order in Mendix Nanoflow\nDESCRIPTION: This snippet demonstrates how to set a default sort order for data in a Mendix nanoflow. It sets the 'SortAttribute' member of the 'Paging' entity to 'Name'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n```\n'Name'\n```\n```\n\n----------------------------------------\n\nTITLE: AmazonHttpClient Timeout Log Entry\nDESCRIPTION: This snippet shows a log entry indicating that an app has run out of file connections in Mendix Cloud. The log message indicates a timeout waiting for a connection from the pool. This issue can be resolved by updating Marketplace modules and increasing the number of available file connections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/behavior-of-app.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"com.amazonaws.http.AmazonHttpClient executeHelper Unable to execute HTTP request: Timeout waiting for connection from pool\"\n```\n\n----------------------------------------\n\nTITLE: Example mx diff Command\nDESCRIPTION: This is an example command showing how to invoke the mx diff command with specific file paths for comparison. It illustrates the intended usage of the command effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmx diff C:\\MyApp\\MyApp.mpr C:\\MyApp-main\\MyApp.mpr c:\\comparison\\output.json\n```\n\n----------------------------------------\n\nTITLE: Getting Security Group by Name API Endpoint\nDESCRIPTION: HTTP endpoint for retrieving security group details using the group's name. This endpoint is accessible to Company Managers and Member Managers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_10\n\nLANGUAGE: http\nCODE:\n```\n HTTP Method: GET\n URL: https://usermanagement.mendix.com/legacy-api/1/groups/by-name/<securityGroupName>\n```\n\n----------------------------------------\n\nTITLE: Filtering Data with Query Parameters in Tableau\nDESCRIPTION: This section details how to filter data retrieved by Tableau from a Mendix OData service using query parameters in the URL. It describes how to modify the OData URL in Tableau to include parameters like $top and $skip to limit the data retrieved.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Including Data Source Section Snippet\nDESCRIPTION: This snippet includes the data source section snippet which outlines the data source configuration for the text area widget in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Bold and Italic Variations of Custom Font\nDESCRIPTION: This XML snippet shows how to define bold and italic variations of a custom font within the fop.xconf file. Each variation requires a separate font element with the appropriate style and weight attributes, referencing different font files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/style.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<font kerning=\"yes\" embed-url=\"mycustomfontinbold.ttf\">\n   <font-triplet name=\"myfont\" style=\"normal\" weight=\"bold\"/>\n</font>\n\n<font kerning=\"yes\" embed-url=\"mycustomfontinitalic.ttf\">\n   <font-triplet name=\"myfont\" style=\"italic\" weight=\"normal\"/>\n</font>\n\n<font kerning=\"yes\" embed-url=\"mycustomfontinboldanditalic.ttf\">\n   <font-triplet name=\"myfont\" style=\"italic\" weight=\"bold\"/>\n</font>\n```\n\n----------------------------------------\n\nTITLE: Markdown Page Front Matter\nDESCRIPTION: YAML front matter configuration for the documentation page, defining title, URL, weight, and aliases\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/translate-your-app-content.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Translating Your App Content\"\nurl: /refguide9/translate-your-app-content/\nweight: 50\naliases:\n  - /howto9/collaboration-requirements-management/translate-your-app-content/\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Maintenance Plan Notification Pattern\nDESCRIPTION: Define a standardized notification format for SQL Server maintenance plan events with subject and body templates\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/mendix-sql-maintenance-plans.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\n-- Notification Subject Format\n-- SQL Server Message - <SQL instance> - <maintenance plan name> - <subplan name> <successful/failed>\n\n-- Notification Body Format\n-- <SQL instance> - <subplan name> <successful/failed>\n```\n\n----------------------------------------\n\nTITLE: OQL ORDER BY Example (Descending)\nDESCRIPTION: This code snippet demonstrates a query that retrieves the concatenated first and last names of all customers from the `Sales.Customer` entity. The results are sorted in descending order based on the `LastName` attribute using the `DESC` keyword.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-order-by-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n\"SELECT FirstName + ' ' + LastName FROM Sales.Customer\\nORDER BY LastName DESC\"\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Set ListView Search Action in Markdown\nDESCRIPTION: This code snippet defines a markdown table that lists the input parameters required for the 'Set ListView Search' action. It includes the parameter name, datatype, whether it's required, and a description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-multiviews/rg-one-set-listview-search.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype |Required| Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the DataGrid, TemplateGrid or Listview\nValue | String | yes | The text to set as search text\nSearch Context | WebElement | no |Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Defining Text Box Structure in XML\nDESCRIPTION: Shows the XML structure for a text box widget with validation feedback. Text boxes are used to display or edit textual values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<label>Text box</label>\n\t<inputError>Content invalid</inputError>\n\t<validationMessage>Input validation feedback message</validationMessage>\n</container>\n<container>\n\t<label>Text box</label>\n\t<input>Valid text</input>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Querying Data with RBAC\nDESCRIPTION: SQL query to test the RBAC implementation by selecting data from the example table\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_10\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT ITEM,\n    Region, \nFROM EXAMPLE_RBAC;\n```\n\n----------------------------------------\n\nTITLE: Data Conversion Rules Example for Excel-to-Mendix Types\nDESCRIPTION: Shows how Excel data types are mapped to Mendix attribute types during spreadsheet import, including rules for strings, booleans, numbers, dates and enumerations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-from-spreadsheet.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Excel Data                                                   | Attribute Type |\n| ------------------------------------------------------------ | -------------- |\n| Empty column or values not matching other types                | String         |\n| Values: 1/0, Y/N, yes/no, true/false, V/empty, X/empty       | Boolean        |\n| Numbers from –2,147,483,648 to 2,147,483,647                 | Integer        |\n| Numbers from –9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 | Long           |\n| Other numbers outside Integer/Long ranges                     | Decimal        |\n| Date or Time values                                          | Date and Time  |\n| String values used >1 time with ≤10 unique values            | Enumeration    |\n```\n\n----------------------------------------\n\nTITLE: Excel Data Type to Mendix Attribute Type Mapping\nDESCRIPTION: Conversion rules for mapping Excel data types to corresponding Mendix attribute types during spreadsheet import\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-from-spreadsheet.md#2025-04-21_snippet_1\n\nLANGUAGE: Mapping Table\nCODE:\n```\n| Excel Data Type | Mendix Attribute Type |\n|---------------|----------------------|\n| No/Empty Data | String |\n| 1/0, Y/N, True/False | Boolean |\n| Numbers (-2,147,483,648 to 2,147,483,647) | Integer |\n| Large Numbers | Long |\n| Decimal Numbers | Decimal |\n| Date/Time | Date and Time |\n| Repeated String Values | Enumeration |\n```\n\n----------------------------------------\n\nTITLE: Fixing Consistency Error CE0529 in Mendix\nDESCRIPTION: This snippet demonstrates how to resolve the consistency error CE0529 that occurs when a home page expects an object to be passed to it. A microflow needs to be created to generate an object and pass it to the page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-navigation.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open the responsive navigation profile.\n2. In **Default home page field** click **Select**.\n\n    {{< figure src=\"/attachments/refguide9/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-navigation/default-home-page-field.png\" alt=\"Default Home Page Setting\" class=\"no-border\" >}}\n\n3. In the **Select Navigation Target** dialog box, click **New**, then select **Create Microflow**.\n4. Name the microflow *ACT_Open_HomePage*.\n5. Open the created microflow, add a **Create object** activity to it.\n6. For the **Create object** activity, set **Entity** to **Customer**.\n\n    {{< figure src=\"/attachments/refguide9/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-navigation/create-object-properties.png\" alt=\"Create Object Properties\" class=\"no-border\" >}}\n\n7. Add Show Page activity to the microflow and do the following in the **Show Page** pop-up dialog:\n    1. Set **Object to pass** to **NewCustomer**.\n    2. Set **Page** to **Home**.\n```\n\n----------------------------------------\n\nTITLE: Configuring Authentication for a Web Service\nDESCRIPTION: This snippet describes how to change the authentication settings of a published web service in Mendix to require user credentials for access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/expose-a-web-service.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nDouble-click the published web service in the **Project Explorer** to open it.\nIn the **Published Web Service** properties window, open the **Settings** tab. Because **No Authentication** is set, currently users of the web service do not need to authenticate:\nChange **Authentication** to **Username and password**:\nClick **OK** and re-run the application. Users now need to authenticate before they can use the web service.\n```\n\n----------------------------------------\n\nTITLE: Loading Theme CSS in HTML - HTML\nDESCRIPTION: This HTML snippet demonstrates how to use the `{{themecss}}` token to load the appropriate theme styling in the client. It simplifies the management of CSS by ensuring that the same styling is applied in both the client and Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/configuring-your-theme.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    {{themecss}}\n</head>\n```\n\n----------------------------------------\n\nTITLE: DateTime Equality Result Example in Java\nDESCRIPTION: Shows the Boolean output of a datetime equality comparison with identical values, returning True.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_13\n\nLANGUAGE: java\nCODE:\n```\nTrue\n```\n\n----------------------------------------\n\nTITLE: Defining Visibility System Property in Mendix Pluggable Widget XML\nDESCRIPTION: This XML snippet defines the Visibility system property for a Mendix pluggable widget. It allows the widget to be conditionally hidden and controls the position of visibility inputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_23\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Visibility\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining Info Alert Block in Markdown\nDESCRIPTION: This snippet shows how to create an info alert block in Markdown using Hugo shortcodes. It's used to provide information about the beta status of a feature.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/mendix-for-private-cloud.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThis feature is currently in beta. For more information, see [Beta Releases](/releasenotes/beta-features/).\n\nSome features, such as Private Cloud License Manager, are not fully supported yet. In addition, the Deploy API does not support the Global Operator yet.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Application Tags in JSON\nDESCRIPTION: Demonstrates how to specify common tags for metrics using the Metrics.ApplicationTags setting in JSON format. These tags will be reported by every metric.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hostId\": \"7a3c0356-4dab-42ab-a139-87efb497f3e9\",\n  \"environment\": \"prod\"\n}\n```\n\n----------------------------------------\n\nTITLE: OpenShift 3 Registry Push and Pull URL Configuration\nDESCRIPTION: Configuration details for specifying push and pull URLs in OpenShift 3 container registry setup, using cluster-local service domain and IP address\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-registry.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Push URL Configuration\npush_url: docker-registry.default.svc.cluster.local:5000\n\n# Pull URL Configuration\npull_url: <registry_ip_address>:5000\n```\n\n----------------------------------------\n\nTITLE: Configuration Properties - Java\nDESCRIPTION: Runtime configuration properties for cleaning up old scheduled events and processed tasks in Mendix Studio Pro 9.9. These settings are specified in milliseconds and disabled by default.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.9.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom.mendix.core.ScheduledEventsCleanupAge\ncom.mendix.core.ProcessedTasksCleanupAge\n```\n\n----------------------------------------\n\nTITLE: Implementing Property Validation for Sub-Objects in TypeScript\nDESCRIPTION: This example demonstrates how to validate a sub-property of an object-type property. It checks if the 'y' value of each dataPoint is greater than 10 and returns an appropriate error message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction check(values) {\n    var problems = [];\n    values.dataPoints.forEach((p, i) => {\n        if (p.y > 10) {\n            problems.push({\n                property: `dataPoints/${i + 1}/y`,\n                message: \"y should not be larger than 10\"\n            });\n        }\n    });\n    return problems;\n}\n```\n\n----------------------------------------\n\nTITLE: Less Than Result Example in Java\nDESCRIPTION: Shows the Boolean output of a less than comparison, returning False.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFalse\n```\n\n----------------------------------------\n\nTITLE: Importing React Native Components\nDESCRIPTION: Required React Native component imports for touch handling and UI elements\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_17\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Text, View, Platform, TouchableOpacity, TouchableNativeFeedback } from \"react-native\";\n```\n\n----------------------------------------\n\nTITLE: CSS3 Selector Patterns\nDESCRIPTION: Common CSS3 selector patterns used in ATS for selecting elements based on class, ID, attributes, and hierarchy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/rg-one-selectors.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n.myClass\n#myID\nE[foo=\"bar\"]\n:nth-child(n)\n:first-child\n:last-child\n:checked\nE > F\n```\n\n----------------------------------------\n\nTITLE: Executing 'mx dump-mpr' Commands with Various Filters\nDESCRIPTION: These Bash commands demonstrate how to execute the 'mx dump-mpr' command with different filtering options to extract specific units and modules from a Mendix Project Repository file. Dependencies include having the Mendix CLI installed and access to the .mpr file. Filters such as unit type and module names allow for refined data extraction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n\"mx dump-mpr app.mpr\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n\"mx dump-mpr --unit-type DomainModels$DomainModel app.mpr\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n\"mx dump-mpr --unit-type DomainModels$DomainModel,Texts$SystemTextCollection app.mpr\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n\"mx dump-mpr --module-names MyFirstModule app.mpr\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n\"mx dump-mpr --module-names MyFirstModule --unit-type DomainModels$DomainModel app.mpr\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n\"mx dump-mpr --exclude-system-module --exclude-protected-modules app.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Attribute Radio Button List in Mendix\nDESCRIPTION: Demonstrates how to configure a radio button list for a Boolean or enumeration attribute, specifying display direction and labels\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/radio-button-list.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nDataSource:\n  TargetAttribute: Department\nDisplay:\n  Direction: Horizontal\n  TrueLabel: Active\n  FalseLabel: Inactive\n```\n\n----------------------------------------\n\nTITLE: Configuring Influx Registry\nDESCRIPTION: JSON configuration examples for setting up Influx metrics registry in Mendix. These examples demonstrate authentication settings and other configuration options like URI and database name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"influx\",\n    \"settings\": {\n      \"userName\": \"mendix\",\n      \"password\": \"MayBeThis**\"\n    }\n  }\n]\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"influx\",\n    \"settings\": {\n      \"uri\": \"http://mendix.influx.com\",\n      \"db\": \"mx.metrics\",\n      \"userName\": \"mendix\",\n      \"password\": \"MayBeThis**\",\n      \"step\": \"P2Y6M4DT12H21M5S\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Importing Necessary Modules (TSX)\nDESCRIPTION: This TypeScript snippet imports required modules from Mendix and the display component (`GroupBox.tsx`) into the container component (`GroupBox.tsx`). These modules provide functionalities for dynamic values, native icons, and the GroupBox component itself.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DynamicValue, NativeIcon, ValueStatus } from \"mendix\";\nimport { Icon } from \"mendix/components/native/Icon\";\nimport { GroupBox as WrappedGroupBox, GroupBoxProps as WrappedGroupBoxProps } from \"./components/GroupBox\";\n\n```\n\n----------------------------------------\n\nTITLE: Calculating Days Between Dates in Java\nDESCRIPTION: Example of using daysBetween function to calculate the difference between two dates in days.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndaysBetween(dateTime(2007, 2, 13, 1, 1, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Get Simple Checkbox Set Selector Value\nDESCRIPTION: Defines the input parameters required for the 'Get Simple Checkbox Set Selector Value' action, including the widget name and value connected to the checkbox.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/simple-checkbox-set-selector/get-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | -------- | ---------------\nWidget Name | String | Yes | The name of the Simple Checkbox Set Selector widget.\nValue | String | yes | The value connected to the checkbox.\n```\n\n----------------------------------------\n\nTITLE: Defining OQL FROM Clause Structure in SQL\nDESCRIPTION: This code snippet demonstrates the syntax for specifying the 'FROM' clause in an OQL query, including optional usage of aliases and different join types. It outlines how to define entities for data retrieval and includes examples of inner, left outer, right outer, and full joins for combining data from multiple entities. The syntax ensures stricter adherence compared to traditional SQL, requiring parentheses for subqueries and allowing optional constraints within joins.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nFROM\n\t{\n\t\tentity_name | ( sub_oql_query )\n\t}\n\t[ [ AS ] from_alias ]\n\n\t{\n\t\t{ INNER | { { LEFT | RIGHT | FULL } [ OUTER ] } } JOIN\n\t\tentity_path [ [ AS ] from_alias ]\n\t\t[ ON <constraint> ]\n\t} [ ,...n ]\n```\n\n----------------------------------------\n\nTITLE: Core Execute Method Fix Java\nDESCRIPTION: Fixed Core.execute() method implementation to handle lists containing null values without throwing NullPointerException.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.6.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nCore.execute(IContext context, String name, Object... params)\n```\n\n----------------------------------------\n\nTITLE: Charts CSP Configuration\nDESCRIPTION: CSP directive for enabling style sources for Charts widget with allowlist approach\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nstyle-src 'self' 'unsafe-inline';\n```\n\n----------------------------------------\n\nTITLE: Defining OQL EXISTS Operator\nDESCRIPTION: Describes the EXISTS operator, which tests for the existence of any rows in a subquery.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n| `EXISTS` | Test for the existance of any rows when executing the subquery. | `EXISTS (SELECT ID FROM City WHERE City = 'Losdun')` Returns true if object exists |\n```\n\n----------------------------------------\n\nTITLE: Starting Selenium Node with Configuration\nDESCRIPTION: PowerShell command to start Selenium Node with WebDriver configurations and JSON settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\njava -Dwebdriver.chrome.driver=C:\\Selenium\\chromedriver.exe -Dwebdriver.firefox.driver=C:\\Selenium\\geckodriver.exe -jar selenium- server-standalone-3.8.1.jar -role node -nodeConfig node.json\n```\n\n----------------------------------------\n\nTITLE: Checking and Updating JDK Version for Mendix Studio Pro\nDESCRIPTION: This code segment outlines the steps to verify the current JDK version in Mendix Studio Pro and how to update it if necessary. It is crucial to ensure that the JDK version is above 'jdk-11.0.5.0-hotspot' to avoid exceptions in REST API calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Check your JDK version – In Studio Pro, go to **Edit** > **Preferences** > **Deployment** > **JDK directory**. If the path points to a version below `jdk-11.0.5.0-hotspot`, you need to update the JDK by following the next steps.\n2. Go to [Eclipse Temurin JDK 11](https://adoptium.net/en-GB/temurin/releases/?variant=openjdk11&os=windows&package=jdk) and download the `.msi` file of the latest release of **JDK 11**.\n3. Open the downloaded file and follow the installation steps. Remember the installation path. Usually, this should be something like `C:/Program Files/Eclipse Adoptium/jdk-11.0.22.7-hotspot`.\n4. After the installation has finished, restart your computer if prompted.\n5. Open Studio Pro and go to **Edit** > **Preferences** > **Deployment** > **JDK directory**. Click **Browse** and select the folder with the new JDK version you just installed. This should be the folder containing the *bin* folder. Save your settings by clicking **OK**.\n6. Run the project and execute the action that threw the above-mentioned exception earlier.\n    1. You might get an error saying `FAILURE: Build failed with an exception. The supplied javaHome seems to be invalid. I cannot find the java executable.` In this case, verify that you have selected the correct JDK directory containing the updated JDK version.\n    2. You may also need to update Gradle. To do this, go to **Edit** > **Preferences** > **Deployment** > **Gradle directory**. Click **Browse** and select the appropriate Gradle version from the Mendix folder. For Mendix 10.10 and above, use Gradle 8.5. For Mendix 10 versions below 10.10, use Gradle 7.6.3. Then save your settings by clicking **OK**.\n    3. Rerun the project.\n```\n\n----------------------------------------\n\nTITLE: Text Area Input Control Structure in HTML\nDESCRIPTION: Shows the HTML structure for a text area input control, with multiple classes applied for styling and functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_12\n\nLANGUAGE: html\nCODE:\n```\n<textarea class=\"form-control mx-textarea-input mx-textarea mx-textarea-input-noresize\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Basic Module Exclusion Structure in JSON\nDESCRIPTION: Shows the basic JSON structure for excluding UI elements from specific modules using settings.json. This establishes the foundation for module-level theme exclusions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"MODULE_NAME\": {\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Annotating Service Account for Azure Workload Identity\nDESCRIPTION: This text snippet provides an example of how to add an annotation to a Kubernetes service account for Azure Workload Identity authentication. It's essential for enabling Azure Blob storage access during build processes, with specifications for identity client ID and namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nkind: ServiceAccount\nmetadata:\n  name: default\n  namespace: default # The same as the one in Configuring Build Cluster Setting\n  annotations:\n    azure.workload.identity/client-id: {client-id-build}\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix Project Errors and Warnings\nDESCRIPTION: This command executes 'mx check' along with various options which include checking for errors, warnings, deprecations, and performance recommendations in a specified *.mpr* project file. It also allows specifying a path to a suppress-warnings file in JSON format. Dependencies: Mendix CLI must be installed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n`mx check [OPTIONS] INPUT [Optional path to exported Suppress Warnings file (JSON)]`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx check --help`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx check C:\\MxProjects\\App-main\\App-main.mpr`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx check C:\\MxProjects\\App-main\\App-main.mpr -p`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx check C:\\MxProjects\\App-main\\App-main.mpr --warnings --deprecations`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx check C:\\MxProjects\\App-main\\App-main.mpr C:\\MxFiles\\my-exported-suppressed-warnings.json --warnings`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx check C:\\MxProjects\\App-main\\App-main.mpr -w -d -p`\n```\n\n----------------------------------------\n\nTITLE: Authenticating Mendix Webhooks API Request with Personal Access Token\nDESCRIPTION: Example of how to use a Personal Access Token (PAT) to authenticate a GET request to the Mendix Webhooks API. The PAT is included in the Authorization header with the 'MxToken' prefix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/webhooks-api.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /apps/80a28d6e-c5fc-43d9-87c2-d7d56b07542/webhooks HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Getting JCoDestination in Mendix\nDESCRIPTION: The `GetJCoDestination` action retrieves the JCoDestination object required for executing BAPI calls. It assigns values from predefined JCO_Constants and allows additional properties to be configured. The output is a Destination object used for BAPI operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nThe action `GetJCoDestination`, is used to get the JCoDestination. Assign the values from the *JCO_Constants* described in [SAP System Connection Details](#sap-connection-details), above. The action returns a `Destination` object which is used when making calls to a BAPI.\n```\n\n----------------------------------------\n\nTITLE: Querying with day-from-dateTime with Timezone in Java\nDESCRIPTION: This Java query retrieves all `Logging.Log` objects where the day of the month of the `DateAttribute` is 30, using the 'America/New_York' time zone.  The `day-from-dateTime()` function extracts the day, considering the specified timezone, which is then compared to the integer 30.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[day-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Calculating Absolute Value in Mendix Using Java\nDESCRIPTION: The 'abs' function calculates the absolute value of a number, ensuring the result is never negative. It accepts numeric parameters and is essential for applications needing to handle non-negative representations of values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nabs(-5)\n```\n\nLANGUAGE: java\nCODE:\n```\n5\n```\n\nLANGUAGE: java\nCODE:\n```\nabs(5)\n```\n\nLANGUAGE: java\nCODE:\n```\n5\n```\n\n----------------------------------------\n\nTITLE: Figure Display Syntax\nDESCRIPTION: Markdown syntax for displaying the Password Text Box widget image.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/pages/authentication-widgets/password-text-box/password-text-box.png\" alt=\"Password Text Box\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Adding Common Properties to GroupBox Widget - XML\nDESCRIPTION: This XML snippet adds a new property group named 'Common' to include system properties 'Name' and 'Visibility' in the Mendix group box widget configuration. This enhances the properties window, making it easier for developers to manage widget settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_39\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\nxmlns=\"http://www.mendix.com/widget/1.0/\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <propertyGroup caption=\"General\">\n                <property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                </property>\n                <property key=\"collapsible\" type=\"enumeration\" defaultValue=\"no\">\n                    <caption>Collapsible</caption>\n                    <description />\n                    <enumerationValues>\n                        <enumerationValue key=\"no\">No</enumerationValue>\n                        <enumerationValue key=\"yesStartExpanded\">Yes (start expanded)</enumerationValue>\n                        <enumerationValue key=\"yesStartCollapsed\">Yes (start collapsed)</enumerationValue>\n                    </enumerationValues>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Header\">\n                <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                    <caption>Caption</caption>\n                    <description />\n                </property>\n                <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                    <caption>Expand icon</caption>\n                    <description>Icon used to indicate that the group box can be expanded.</description>\n                </property>\n                <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                    <caption>Collapse icon</caption>\n                    <description>Icon used to indicate that the group box can be collapsed.</description>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Common\">\n                <systemProperty key=\"Name\" />\n                <systemProperty key=\"Visibility\" />\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Using RANGEEND Function to Query Customers Born After Last Week in Mendix OQL\nDESCRIPTION: Illustrates a SQL query that uses the RANGEEND function to select customers born after the end of last week. This example showcases how RANGEEND is used in practice within a WHERE clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangeend.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT FirstName AS First, LastName AS Last, Name AS Name, Birthday AS BDay, CustomerType AS Type FROM Sales.Customer\nWHERE Birthday > RANGEEND($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway URL for Insights Hub\nDESCRIPTION: This snippet details the required format for the Gateway URL based on the region where the app is deployed. It highlights the default URL for AWS and specifies how to replace the region placeholder with the actual region of deployment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nhttps://gateway.{Region}.mindsphere.io\nhttps://gateway.eu1.mindsphere.io\n```\n\n----------------------------------------\n\nTITLE: Implementing Update Handling in TextBox Component\nDESCRIPTION: This TypeScript code in TextBox.tsx adds an onUpdate function to handle updates to the text attribute. It binds the function and passes it to the TextInput component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass TextBox extends Component<TextBoxContainerProps> {\n    private readonly onUpdateHandle = this.onUpdate.bind(this);\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        return <TextInput\n            value={value}\n            style={this.props.style}\n            className={this.props.class}\n            tabIndex={this.props.tabIndex}\n            onUpdate={this.onUpdateHandle}\n        />;\n    }\n    private onUpdate(value: string): void {\n        this.props.textAttribute.setValue(value);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Installation Errors with Tekton\nDESCRIPTION: Addresses a common error related to context deadlines when installing Tekton on Kubernetes. The error might be solved by adjusting firewall rules as discussed in a Tekton GitHub issue.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_21\n\n\n\n----------------------------------------\n\nTITLE: Warning Alert for Object Deletion Support\nDESCRIPTION: Markdown alert highlighting version-specific support for deleting objects from device database\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/synchronization.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}Deleting an object from the device database is only supported in Studio Pro 9.7 and higher.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Input Mask Configuration Example\nDESCRIPTION: Demonstrates an input mask for formatting text box input with specific character rules\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-box.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`99-LLL-9999`\n```\n\n----------------------------------------\n\nTITLE: Defining GroupBoxState Interface in TypeScript\nDESCRIPTION: This interface defines the state structure for the GroupBox component, including a collapsed property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_26\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxState {\n    collapsed: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: CSP Directives for HTML/JavaScript Snippet Widget\nDESCRIPTION: These directives are used to enable the HTML/JavaScript Snippet widget in a CSP environment when it's not possible to use external files or CSP compliant code.  Adding these directives allows inline scripts and styles, which can weaken the overall security of the application. It is recommended to use the other methods described in the document if possible.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/html-javascript-snippet.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"script-src 'self' 'unsafe-inline';\nstyle-src 'self' 'unsafe-inline';;\"\n```\n\n----------------------------------------\n\nTITLE: Styling Demo Button with SVG Icon\nDESCRIPTION: Shows how to style a button container, caption, and SVG icon with custom colors in Atlas UI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-svg.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nexport const DemoButton = {\n\tcontainer: {\n\t\tbackgroundColor: 'green'\n\t},\n\tcaption: {\n\t\tcolor: 'orange'\n\t},\n\ticon: {\n\t\tcolor: 'blue'\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Source Database Environment Variables for SAP BTP Migration\nDESCRIPTION: Command line instructions for configuring source database environment variables when migrating from PostgreSQL to SAP HANA on SAP BTP\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncf set-env {application-name} MXRUNTIME_SourceDatabaseType POSTGRESQL\ncf set-env {application-name}  MXRUNTIME_SourceDatabaseHost {hostname}:{port}\ncf set-env {application-name} MXRUNTIME_SourceDatabaseName {dbname}\ncf set-env {application-name}  MXRUNTIME_SourceDatabaseUserName {username}\ncf set-env {application-name}  MXRUNTIME_SourceDatabasePassword {password}\n```\n\n----------------------------------------\n\nTITLE: Updating Object Attributes in Database for Mendix\nDESCRIPTION: SQL query to update the changed attributes of an object in the database after all validations have passed successfully.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\n UPDATE \"myfirstmodule$employee\"\n SET \"dateofbirth\" = ?\n WHERE \"id\" = ?\n```\n\n----------------------------------------\n\nTITLE: Generating Base64 Representation of Image - Shell\nDESCRIPTION: This shell command snippet provides instructions for generating a Base64 representation of an image file required for use in a Mendix widget's icon element. It covers commands for both Windows and Unix systems to create the Base64 encoded file, which can easily be integrated into the XML widget configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_40\n\nLANGUAGE: shell\nCODE:\n```\ncertutil -encode GroupBox.png data.b64\n```\n\nLANGUAGE: shell\nCODE:\n```\nbase64 -i GroupBox.png -o data.b64\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Bar Information in JSON\nDESCRIPTION: This snippet provides the structure required for the OS Bar information in JSON format. It outlines necessary entries, such as displayName, appVersion, appCopyright, and links, needed to populate the OS Bar correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"displayName\": \"<Your app name>\",\n  \"appVersion\": \"<Your app version>\",\n  \"appCopyright\": \"<Owner & Year>\",\n  \"links\": [\n    \"<Link 1>\",\n    \"<Link 2>\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example iOS Splash Screens Configuration\nDESCRIPTION: This code snippet illustrates an example of the JSON configuration for iOS splash screens, defining splash screens with different sizes, idioms, scales, and filenames. It includes splash screens for various resolutions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_7\n\nLANGUAGE: JSON\nCODE:\n```\n```json\n{\n    \"images\": [\n        {\n            \"size\": \"640x960\",\n            \"idiom\": \"universal\",\n            \"scale\": \"1x\",\n            \"type\": \"splashScreen\",\n            \"filename\": \"splash@1x.png\"\n        },\n        {\n            \"size\": \"375x667\",\n            \"idiom\": \"universal\",\n            \"scale\": \"2x\",\n            \"type\": \"splashScreen\",\n            \"filename\": \"splash@2x.png\"\n        },\n        {\n            \"size\": \"414x736\",\n            \"idiom\": \"universal\",\n            \"scale\": \"3x\",\n            \"type\": \"splashScreen\",\n            \"filename\": \"splash@3x.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Different Font Styles for PDF Generation in XML\nDESCRIPTION: This snippet demonstrates how to add various styles of the same custom font in the fop.xconf file for PDF generation in Mendix. It includes configurations for normal, bold, and italic styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/document-templates/style.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<font kerning=\"yes\" embed-url=\"mycustomfontinbold.ttf\">\n   <font-triplet name=\"myfont\" style=\"normal\" weight=\"bold\"/>\n</font>\n\n<font kerning=\"yes\" embed-url=\"mycustomfontinitalic.ttf\">\n   <font-triplet name=\"myfont\" style=\"italic\" weight=\"normal\"/>\n</font>\n\n<font kerning=\"yes\" embed-url=\"mycustomfontinboldanditalic.ttf\">\n   <font-triplet name=\"myfont\" style=\"italic\" weight=\"bold\"/>\n</font>\n```\n\n----------------------------------------\n\nTITLE: Using Expressions in Mendix Measurements Tool\nDESCRIPTION: An example expression for calculating the difference between the current and previous measurement. The expression uses the $Measurement variable and its previous value to compute the difference between ValueLong properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-one-apm/rg-one-measurements-tool.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\n$Measurement/ValueLong - $Measurement_1/ValueLong\n```\n\n----------------------------------------\n\nTITLE: Starting Selenium Grid with Docker Compose\nDESCRIPTION: This shell command starts the Selenium Grid using Docker Compose in detached mode. It initializes the hub and node containers as defined in the docker-compose.yml file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ov/ov-deployment.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Associated Attribute Ordering Query\nDESCRIPTION: Shows how to order results based on attributes of associated entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_41\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName\nFROM Sales.Customer\nORDER BY Sales.Customer/Sales.Customer_Request/Sales.Request/Number\n```\n\n----------------------------------------\n\nTITLE: XSD Schema Header for Country Import\nDESCRIPTION: XML Schema Definition header that defines the structure for the country import document. This forms the beginning part of the XSD file used for XML-to-domain mapping in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\">\n<xs:element name=\"CountriesImport\">\n<xs:complexType>\n<xs:sequence>\n```\n\n----------------------------------------\n\nTITLE: Logging Auto-Committed Objects in Mendix 9.18 and Above\nDESCRIPTION: Describes the updated log message format for auto-committed objects in Mendix versions 9.18 and later, which provides more detailed information about deleted objects during offline synchronization\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nThe offline synchronization detected {count} auto-committed objects during synchronization executed by {user}. Auto committed objects are not supported during offline synchronization. The Mendix runtime has deleted the following objects:\n- {Entity1}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\n- {Entity2}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\n...\n- {EntityN}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\n\nPlease refer to the documentation to learn more about this issue and how to solve it:\nhttps://docs.mendix.com/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects/\n```\n\n----------------------------------------\n\nTITLE: Defining OQL CAST Function Syntax in SQL\nDESCRIPTION: This snippet shows the basic syntax for using the CAST function in OQL. It demonstrates how to convert an expression to a specified data type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-cast.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCAST ( expression AS data_type )\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcut for ATS Helper Usage\nDESCRIPTION: Instructions for using the ATS Helper tool to inspect widgets in a Mendix application by pressing Ctrl and hovering over elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-install-ats-helper-recorder.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\npress <kbd>Ctrl</kbd>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Styling Classes in JavaScript for Mendix Native Apps\nDESCRIPTION: This code snippet demonstrates how to create a custom styling class for a widget that can be applied in Mendix Studio Pro. It defines container and text properties with ViewStyle and TextStyle attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// A custom styling class\nexport const customClassName = {\n\tcontainer: {\n\t\t// ViewStyle properties\n\t\tpaddingTop: 5\n\t},\n\ttext: {\n\t\t// TextStyle properties\n\t\tfontWeight: \"bold\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Text Template Property in XML\nDESCRIPTION: This XML snippet illustrates how to define a text template property that allows for translatable strings. The configuration supports default values based on different languages and specifies attributes for multiline input and required status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myBlockTitle\" type=\"textTemplate\">\n\t<caption>Input title</caption>\n\t<description>Title for the color input</description>\n\t<translations>\n\t\t<translation lang=\"en_US\">Color</translation>\n\t\t<translation lang=\"nl_NL\">Kleur</translation>\n\t\t<translation lang=\"uk_UA\">Колір</translation>\n\t</translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Saving Employee Object Changes in JSON (Mendix Client to Runtime Server)\nDESCRIPTION: This JSON request is used to save changes made to an Employee object. It includes the object's GUID and the updated attribute values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"change\",\n   \"params\":{\n      \"281474976710757\":{\n         \"Firstname\":\"peter\",\n         \"Lastname\":\"jones\",\n         \"Jobtitle\":\"sales\",\n         \"Department\":\"sales\",\n         \"DateOfBirth\":-315622800000\n      }\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee6970d53960\":18\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Persistent Sessions in Mendix Runtime\nDESCRIPTION: This YAML snippet demonstrates how to enable persistent sessions in Mendix Runtime using a custom setting. The setting name is 'PersistentSessions' and its value is set to 'true'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nPersistentSessions: true\n```\n\n----------------------------------------\n\nTITLE: Implementing a Dockable Pane Extension for Studio Pro\nDESCRIPTION: A C# class that creates a dockable pane extension for the Todo list functionality. It exports the extension type to Studio Pro and implements the necessary methods to render the extension UI within a dockable pane.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.ComponentModel.Composition;\nusing Mendix.StudioPro.ExtensionsAPI.Services;\nusing Mendix.StudioPro.ExtensionsAPI.UI.DockablePane;\n\nnamespace Mendix.ToDoExtension;\n\n[Export(typeof(DockablePaneExtension))]\npublic class ToDoListDockablePaneExtension : DockablePaneExtension\n{\n    private readonly ILogService _logService;\n    public const string PaneId = \"ToDoList\";\n\n    [ImportingConstructor]\n    public ToDoListDockablePaneExtension(ILogService logService)\n    {\n        _logService = logService;\n    }\n\n    public override string Id => PaneId;\n\n    public override DockablePaneViewModelBase Open()\n    {\n        return new ToDoListDockablePaneViewModel(WebServerBaseUrl, () => CurrentApp, _logService) { Title = \"To Do List\" };\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: SQL Exact Decimal Comparison Query\nDESCRIPTION: Query demonstrating exact decimal comparison without rounding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_34\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Number FROM Sales.Order WHERE Price = 1.50000001\n```\n\n----------------------------------------\n\nTITLE: Adding Required Message Property in XML Configuration\nDESCRIPTION: XML configuration for adding a required message property to the TextBox widget. This defines a translatable text template that can be set in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_6\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"requiredMessage\" type=\"textTemplate\" required=\"false\">\n    <caption>Required message</caption>\n    <description/>\n    <translations>\n        <translation lang=\"en_US\">An input text is required</translation>\n    </translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Client Session Settings in Mendix\nDESCRIPTION: This code snippet shows how to configure the EnableKeepAlive setting for the Mendix web client. It determines whether the client sends keep-alive requests to prevent session timeout.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n| Name | Description | Default value |\n| --- | --- | --- |\n| `EnableKeepAlive` | Defines whether the web client sends a keep alive request every `SessionTimeout`/2 milliseconds in order to prevent a session timeout. Each click in the browser also acts as `KeepAlive`. Disabling this property will result in the user being logged out automatically after 10 minutes of inactivity, even if the browser remains open. | true |\n```\n\n----------------------------------------\n\nTITLE: Copying Web Push Certificate\nDESCRIPTION: This step describes how to copy the Web Push Certificate for a Progressive Web App (PWA) from the Firebase Cloud Messaging tab of the Firebase project settings. This certificate is needed to enable web push notifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nAfter generating the certificate, copy the certificate that is highlighted in the screenshot below and store it in a safe place.\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Default Styles for GroupBox Widget\nDESCRIPTION: This snippet imports necessary variables and functions, then defines custom styles for the GroupBox widget, allowing the developer to override default styling. It utilizes parameters from the application's core variables and helper functions to customize the widget's appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_52\n\nLANGUAGE: javascript\nCODE:\n```\nimport { brand } from \"../core/variables\";\nimport shadeblendconvert from \"../core/helpers/_functions/shadeblendconvert\";\n\nexport const com_mendix_widget_native_groupbox_GroupBox = {\n        container: {\n            borderColor: brand.primary\n        },\n        header: {\n            backgroundColor: shadeblendconvert(0.4, brand.primary)\n        },\n        headerContent: {\n            color: \"#000000\"\n        }\n    };\n```\n\n----------------------------------------\n\nTITLE: Retrieving GUID for Entity in Push Notifications - JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a unique GUID for a specific entity object using the GetGUID JavaScript action. The GUID is then used to pass the entity to a notification, allowing the application to show its details upon tapping the notification. This action is crucial for linking push notifications to specific data objects within Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst entityGUID = GetGUID(entityObject);\n// Pass entityGUID to notification\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Series with Range Selector in JSON\nDESCRIPTION: This snippet outlines how to set up time-based filtering for a chart, enabling users to interactively select ranges with buttons that reset or filter the data series displayed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\"xaxis\": {\"rangeslider\": {\"visible\": true}, \"rangeselector\": {\"buttons\": [{\"step\": \"all\", \"label\": \"reset\"},{\"step\": \"year\", \"stepmode\": \"backward\", \"count\": 1, \"label\": \"1 YEAR\"},{\"step\": \"year\", \"stepmode\": \"backward\", \"count\": 5, \"label\": \"5 YEARS\"},{\"step\": \"year\", \"stepmode\": \"backward\", \"count\": 10, \"label\": \"10 YEARS\"},{\"step\": \"year\", \"stepmode\": \"todate\", \"count\": 1, \"label\": \"YTD\"}]}}}\n```\n\n----------------------------------------\n\nTITLE: Loading Data and Training a Machine Learning Model with Python\nDESCRIPTION: This code imports datasets, defines training and testing sets, creates a pipeline with CountVectorizer and MultinomialNB, and trains a model for spam detection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-sagemaker-machine-learning.md#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nX_train, X_test, y_train, y_test = train_test_split(X, y, random_state=345)\n```\n\n----------------------------------------\n\nTITLE: Checking Whether an Object Is Synced in Mendix\nDESCRIPTION: Shows how to use the isSynced() function to check if changes to an object have been synchronized to the runtime database when working with offline-capable applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nisSynced($currentObject)\n```\n\n----------------------------------------\n\nTITLE: Displaying Help Text for mx check\nDESCRIPTION: This command displays the help text for the `mx check` command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_9\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check --help\"\n```\n\n----------------------------------------\n\nTITLE: Scaling Selenium Grid Nodes with Docker Compose\nDESCRIPTION: This shell command scales the number of Firefox and Chrome nodes in the Selenium Grid. It increases both node types to two instances each, allowing for parallel test execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ov/ov-deployment.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose scale firefoxnode=2 chromenode=2\n```\n\n----------------------------------------\n\nTITLE: Formatting DateTime to String in Java (Mendix)\nDESCRIPTION: Shows how to use the formatDateTime function to convert a Date and time value to a formatted string. The function allows specifying a custom format string for output customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime($object/Date1,'EEE, d MMM yyyy HH:mm:ss Z')\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime($object/Date1,'yyyy-MM-dd') + 'T' + formatDateTime($object/Date1,'HH:mm:ss')\n```\n\n----------------------------------------\n\nTITLE: Executing Native Builder Prepare Command\nDESCRIPTION: Example command for preparing a native mobile app build using the Native Builder CLI. This command configures GitHub and App Center settings, sets up assets, and verifies required paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe prepare --github-access-token <token> --appcenter-api-token <token> --java-home <absolute-path> --mxbuild-path <absolute-path> --project-path <absolute-path-to-mpr-file> --projectName CoolApp --app-identifier \"com.company.myapp\" --app-name \"My Cool App\" --mendix-version 8.5.0\n```\n\n----------------------------------------\n\nTITLE: Duration/Interval Setting Examples - ISO 8601 Periods\nDESCRIPTION: Shows various ways to specify duration and interval settings using ISO 8601 period format, which supports specifying time intervals in different units\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nP7D\nPT1H30M\nPT1S\n```\n\n----------------------------------------\n\nTITLE: Simplified Design Properties Structure\nDESCRIPTION: A simplified view of the JSON structure showing just the widget types and property placeholders, demonstrating the hierarchical nature of the design-properties.json file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n{\n    \"DivContainer\": [\n        {\n            ... property one\n        },\n        {\n            ... property two\n        }\n    ],\n    \"Button\": [\n        ...\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Alert CSS Classes in Mendix\nDESCRIPTION: CSS classes for creating different types of alert containers in Mendix applications, including success, info, warning, and danger alerts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_7\n\nLANGUAGE: CSS\nCODE:\n```\n/* Alert styling */\n.alert { /* makes an alert of a container */ }\n.alert-success { /* creates a success alert */ }\n.alert-info { /* creates an info alert */ }\n.alert-warning { /* creates a warning alert */ }\n.alert-danger { /* creates a danger alert */ }\n```\n\n----------------------------------------\n\nTITLE: Using COALESCE Function in OQL\nDESCRIPTION: The COALESCE function takes one or more expressions as arguments and returns the first non-NULL value. It's useful for handling NULL values in queries and providing default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-coalesce.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCOALESCE ( expression [ ,...n ] )\n```\n\n----------------------------------------\n\nTITLE: Creating New Mendix App and Working Copy\nDESCRIPTION: Programmatically creates a new Mendix app with a dynamically generated name and establishes an online working copy for model manipulation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-creating-your-first-script.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst project = await client.platform().createNewApp(`NewApp-${Date.now()}`);\nconst workingCopy = await project.createWorkingCopy();\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Block - Studio Pro 9 Warning\nDESCRIPTION: A markdown alert block warning users about the availability of add-on and solution modules in Studio Pro 9 and 10.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/modules/module-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\\nIn Studio Pro 9, add-on modules and solution modules were previously available in preview for select customers and partners as part of an early access program. In Studio Pro 10, this functionality is generally available for all users. For more information, see this page in the [Studio Pro 10 Guide](/refguide/module-settings/).\\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: JSON Log Output Example\nDESCRIPTION: Example of the JSON-formatted log output showing the structure of log entries with timestamp, level, message, and custom tags.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\"node\":\"TaskQueue\",\"level\":\"INFO\",\"ddtags\":\"env:test\",\"service\":\"my-application-name\",\"message\":\"Rescheduling running tasks for expired XAS instance '169a16c5-a748-4e21-8efa-3a6057a14d8a'.\",\"timestamp\":1734629114040}\n{\"node\":\"Core\",\"level\":\"INFO\",\"ddtags\":\"env:test\",\"service\":\"my-application-name\",\"message\":\"Mendix Runtime is now shut down.\",\"timestamp\":1734629114260}\n```\n\n----------------------------------------\n\nTITLE: Rounding Up a Number in Mendix Using Java\nDESCRIPTION: The 'ceil' function rounds up a given number to the nearest integer. It accepts numeric values as input and returns an integer representing the smallest integer greater than or equal to the input, which is important for applications needing integer outputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nceil(3.2)\n```\n\nLANGUAGE: java\nCODE:\n```\n4\n```\n\nLANGUAGE: java\nCODE:\n```\nceil(-1.9)\n```\n\nLANGUAGE: java\nCODE:\n```\n-1\n```\n\n----------------------------------------\n\nTITLE: Styling QR Code Widget in JavaScript\nDESCRIPTION: Defines the style properties for the QR Code widget, enabling control over the container and the QR code's appearance (size, color, border color). These style properties allow customization of the QR Code's look and feel within the application. The default class name to style all QR codes is `com_mendix_widget_native_qrcode_QRCode`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_qrcode_QRCode = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  qrcode: {\n    size: null, // The size of the QR code.\n    color: null, // The color of the QR code. \n    borderColor: null, // The background color behind the QR code.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Dynamic Cache Busting Parameter - HTML\nDESCRIPTION: This code snippet illustrates the use of the dynamic cache busting parameter `{{cachebust}}` in the index-example.html file, which is crucial for maintaining cache control.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_20\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"mxclientsystem/mxui/mxui.js?{{cachebust}}></script>\n```\n\n----------------------------------------\n\nTITLE: Adding Content-Type Header to HTTP Response\nDESCRIPTION: Microflow activity that adds a Content-Type header with value 'application/json' to the HTTP response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/httpResponseHeader.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Calling Multiple BAPIs Sequentially\nDESCRIPTION: The `CallBAPISequence` microflow action allows multiple BAPI calls to be executed sequentially within a single JCoContext. This functionality is critical for managing related BAPI transactions that require transactional commits after all calls are made.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\nUse this microflow action when you want to call more than one BAPI in a given order.\n```\n\n----------------------------------------\n\nTITLE: Registering a Service with Mendix Data Catalog using cURL\nDESCRIPTION: This curl request demonstrates how to register an OData service in the Mendix Data Catalog. It includes all required fields such as path, service version, security scheme, and contract details for an OData 3.0 service. The payload contains metadata and service feed information formatted as XML.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location --request PUT 'https://catalog.mendix.com/rest/registration/v5/applications/{application_UUID}/environments/{environment_UUID}/published-endpoints' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: MxToken <your_Personal_Access_Token>'\\\n--data-raw '{\n  \"endpoints\": [\n    {\n      \"path\": \"/path/to/my/service/endpoint\",\n      \"serviceVersion\": {\n        \"version\": \"1.0\",\n        \"type\": \"OData\",\n        \"service\": {\n          \"name\": \"My-Service-Name\",\n           \"ContractType\": \"OData_3_0\"\n        },\n        \"securityScheme\": {\n          \"securityTypes\": [\n            {\n              \"name\": \"Basic\"\n            }\n          ]\n        },\n        \"contracts\": [\n          {\n            \"type\": \"CSDL\",\n            \"documentBaseURL\": \"https://hr.acmecorp.test/odata/test.acme.employeeinformation/v1/\",\n            \"documents\": [\n              {\n                \"isPrimary\": true,\n                \"uri\": \"metadata.xml\",\n                \"contents\": \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><edmx:Edmx Version=\\\"1.0\\\" xmlns:edmx=\\\"http://schemas.microsoft.com/ado/2007/06/edmx\\\" xmlns:mx=\\\"http://www.mendix.com/Protocols/MendixData\\\">  <edmx:DataServices m:DataServiceVersion=\\\"3.0\\\" m:MaxDataServiceVersion=\\\"3.0\\\" xmlns:m=\\\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\\\">    <Schema Namespace=\\\"DefaultNamespace\\\" xmlns=\\\"http://schemas.microsoft.com/ado/2009/11/edm\\\"><EntityType Name=\\\"Employee\\\"><Key><PropertyRef Name=\\\"ID\\\" /></Key><Property Name=\\\"ID\\\" Type=\\\"Edm.Int64\\\" Nullable=\\\"false\\\" mx:isAttribute=\\\"false\\\" /><Property Name=\\\"Name\\\" Type=\\\"Edm.String\\\" MaxLength=\\\"200\\\" /><Property Name=\\\"DateOfBirth\\\" Type=\\\"Edm.DateTimeOffset\\\" /><Property Name=\\\"Address\\\" Type=\\\"Edm.String\\\" MaxLength=\\\"200\\\" /><Property Name=\\\"JobTitle\\\" Type=\\\"Edm.String\\\" MaxLength=\\\"200\\\" /><Property Name=\\\"Salary\\\" Type=\\\"Edm.Decimal\\\" /></EntityType><EntityContainer Name=\\\"test.acme.employeeinformation/v1Entities\\\" m:IsDefaultEntityContainer=\\\"true\\\"><EntitySet Name=\\\"Employees\\\" EntityType=\\\"DefaultNamespace.Employee\\\" /></EntityContainer></Schema></edmx:DataServices></edmx:Edmx>\"\n              },\n              {\n                \"isPrimary\": false,\n                \"uri\": \"servicefeed.xml\",\n                \"contents\": \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><service xmlns:atom=\\\"http://www.w3.org/2005/Atom\\\" xml:base=\\\"https://hr.acmecorp.test/odata/test.acme.employeeinformation/v1/\\\" xmlns=\\\"http://www.w3.org/2007/app\\\"><workspace><atom:title>Default</atom:title><collection href=\\\"Employees\\\"><atom:title>Employees</atom:title></collection>  </workspace></service>\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}'''\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Named After Their Cities\nDESCRIPTION: This snippet retrieves all customers whose names are the same as the city they live in. It highlights the usage of direct attribute comparison within the XPath expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = City]\n```\n\n----------------------------------------\n\nTITLE: Calculating Powers in Mendix\nDESCRIPTION: Raises a number to a specific power. The function takes two parameters: the base number and the exponent to which it should be raised.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\npow(2, 3)\n```\n\nLANGUAGE: java\nCODE:\n```\npow(2.5, 3)\n```\n\n----------------------------------------\n\nTITLE: Adding getSslContext to IHttpConfiguration Interface\nDESCRIPTION: The `getSslContext` method was added to the `IHttpConfiguration` interface in the Mendix Runtime API. This allows Java code to access the `SslContext` for making service calls based on Mendix Runtime settings, improving security and configuration options for HTTP requests made from Java actions within the Mendix runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the release notes page, defining metadata like title, URL, description and page weight.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/community-tools/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Community Release Notes\"\nlinktitle: \"Community\"\nurl: /releasenotes/community-tools/\ndescription: \"Release notes for the community tools in the Mendix Platform.\"\nweight: 37\nnumberless_headings: true\n#This document is mapped to the landing page, update the link there if renaming or moving the doc file.\n---\n```\n\n----------------------------------------\n\nTITLE: Linux, Unix and Windows Database Requirements\nDESCRIPTION: List of supported database systems and versions including IBM DB2, MariaDB, Microsoft SQL Server, MySQL, Oracle, PostgreSQL and SAP HANA.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/system-requirements.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n* IBM DB2 11.5 for Linux, Unix, and Windows\n* MariaDB 10.4, 10.5, 10.6, 10.11\n* Microsoft SQL Server 2019, 2022\n* Azure SQL v12 compatibility mode 140 or higher\n* MySQL 8.0\n* Oracle Database 19, 21c\n* PostgreSQL 12, 13, 14, 15, 16\n* SAP HANA 2.00.040.00.1545918182\n```\n\n----------------------------------------\n\nTITLE: Repository Info Response Payload\nDESCRIPTION: JSON response format from the repository info endpoint, containing app ID, repository type, and URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"appId\": \"c0af1725-edae-4345-aea7-2f94f7760e33\",\n  \"type\": \"svn\",\n  \"url\": \"https://teamserver.sprintr.com/c0af1725-edae-4345-aea7-2f94f7760e33/\"\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering by Association Reference in Mendix\nDESCRIPTION: Code that filters objects that have an association with at least one other object. Uses the 'notEquals' and 'empty' filter builders to check if the reference association is not empty.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { association, literal, notEquals, empty } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAssociationReference.filterable) {\n    const filterCond = notEquals(association(this.props.myAssociationReference.id), empty());\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Association is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Non-Custom Claims in ID-token\nDESCRIPTION: JSON structure of non-custom claims in the ID token, including Mendix-specific claims for user language, entity, attributes, and roles, as well as standard OpenID Connect claims.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/oidc-provider.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"com.mendix.user.language\": \"en_US\",\n    \"sub\": \"T6hOS9jBEBMqk3Dk\",\n    \"iss\": \"http://localhost:8080/\",\n    \"com.mendix.user.entity\": \"Administration.Account\",\n    \"nonce\": \"k5CDLkTE7Q61Q0cUTSgy\",\n    \"com.mendix.user.attributes\": {\n        \"Email\": \"janedoe@example.com\",\n        \"FullName\": \"Jane Doe\",\n        \"IsLocalUser\": \"true\"\n    },\n    \"aud\": \"d99a49b9-95d7-410e-b79a\",\n    \"scope\": \"\",\n    \"name\": \"Jane Doe\",\n    \"exp\": 1681970318,\n    \"email\":\"janedoe@example.com\",\n    \"com.mendix.user.timezone\": \"\",\n    \"iat\": 1681969718,\n    \"com.mendix.user.roles\": [\n        \"User\"\n    ]\n    \"username\": \"Jane Doe\"\n}\n```\n\n----------------------------------------\n\nTITLE: Subtracting Months using Java\nDESCRIPTION: This function subtracts a specified number of months from a given date and time value. It can use either the server's calendar or UTC, with an integer determining the months to subtract. The resulting value reflects the change in months.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nsubtractMonths(dateTime(2007, 3, 1, 1, 1, 1), 2)\n```\n\n----------------------------------------\n\nTITLE: Implementing Mendix Statistics MBean\nDESCRIPTION: Java implementation of the MBean interface that retrieves actual statistics from the Mendix Core class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/monitoring-mendix-using-jmx.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npackage jmx.actions;\n\nimport com.mendix.core.Core;\n\n public class MxStats implements MxStatsMBean {\n\n public int getMaximumNumberConcurrentUsers() throws Exception {\n\n return Core.getMaximumNumberConcurrentUsers();\n\n }\n\n public int getActionQueueSize(){\n\n return Core.getActionQueueSize();\n\n }\n\n public int getActiveActionCount(){\n\n return Core.getActiveActionCount();\n\n }\n\n public int getScheduledActionCount(){\n\n return Core.getScheduledActionCount();\n\n }\n\n public long getNumberConcurrentSessions(){\n\n return Core.getNumberConcurrentSessions();\n\n }\n\n public long getCurrentUserCount(){\n\n return Core.getConcurrentUserCount(true);\n\n }\n\n public long getCompletedActionCount(){\n\n return Core.getCompletedActionCount();\n\n }\n\n public long getNamedUserCount(){\n\n return Core.getNamedUserCount();\n\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Authentication Token Configuration\nDESCRIPTION: New client API method for managing authentication tokens with long-lived session support for online and offline apps\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.9.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nlogin2(useAuthToken: boolean)\n```\n\n----------------------------------------\n\nTITLE: Converting Big.js to JavaScript Number\nDESCRIPTION: This snippet shows how to convert a Big.js object to a standard JavaScript number. This is useful when you need to use the value in a context that requires a standard JavaScript number rather than the Big.js object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar numberValue = Number(bigJsValue); // number\n```\n\n----------------------------------------\n\nTITLE: DateTime Comparison Expression\nDESCRIPTION: Expression comparing localized and non-localized date attributes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/date-and-time-handling/datetime-handling-faq.md#2025-04-21_snippet_1\n\nLANGUAGE: expression\nCODE:\n```\n$entity/localizeddate > $entity/nonlocalizeddate\n```\n\n----------------------------------------\n\nTITLE: Example Native App Configuration (JSON)\nDESCRIPTION: This code provides an example of a JSON configuration file for a Mendix native app, demonstrating the structure and possible values for various settings. It includes properties for app identifier, app name, app version, build number, runtime URL, bundle name, device target, orientation, permissions, and capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n{\n    \"configVersion\": 2,\n    \"appIdentifier\": \"com.mendix.mobile\",\n    \"appName\": \"Mendix App\",\n    \"appVersion\": \"1.0.0\",\n    \"buildNumber\": 1,\n    \"runtimeUrl\": \"http://localhost:8080\"\n    \"bundleName\": {\n        \"main\": \"MendixApp\",\n        \"dev\": \"MendixAppDev\"\n    },\n    \"deviceTarget\": {\n        \"phone\": true,\n        \"tablet\": false\n    },\n    \"orientation\": {\n        \"portrait\": true,\n        \"landscape\": true\n    },\n    \"permissions\": [\n        {\n            \"title\": \"Internet\",\n            \"name\": \"android.permission.INTERNET\",\n            \"platform\": \"android\",\n            \"required\": true\n        },\n        {\n            \"title\": \"Location - Always Usage\",\n            \"name\": \"NSLocationAlwaysUsageDescription\",\n            \"purpose\": \"To use that feature, the app needs access to your location.\",\n            \"platform\": \"ios\",\n            \"required\": true\n        }\n    ],\n    \"capabilities\": {\n        \"deepLink\": {\n            \"value\": \"\",\n            \"enabled\": false\n        },\n        \"maps\": {\n            \"value\": \"a12dkdadhqow12123123radqwe\",\n            \"enabled\": true\n        },\n        \"mapsIos\": {\n            \"enabled\": false\n        },\n        \"pushNotifications\": {\n            \"enabled\": false\n        },\n        \"crashlytics\": {\n            \"enabled\": false\n        },\n        \"firebaseAndroid\": {\n            \"enabled\": false\n        },\n        \"firebaseIos\": {\n            \"enabled\": false\n        },\n        \"localNotifications\": {\n            \"enabled\": false\n        },\n        \"appCenterOTA\": {\n            \"enabled\": false\n        }\n    }\n}\n\n```\n\n----------------------------------------\n\nTITLE: Styling Signature Widget with JavaScript\nDESCRIPTION: This JavaScript code snippet defines the styling options for the Signature widget in a Mendix native mobile application. It includes properties for customizing the container, buttons, and text elements, with specific settings for pen color, ripple color, active opacity, and underlay color.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_40\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_signature_Signature = {\n  container: {\n    // This has all ViewStyle properties. \n    penColor: null, // This will change the color of the stroke.\n  },\n  buttonWrapper: {\n    // This has all ViewStyle properties. \n  },\n  buttonClearContainer: {\n    // This has all ViewStyle properties. \n    rippleColor: null, // This will change the color of the ripple on Android.\n    activeOpacity: null, // This will change the opacity when touch is active on iOS.\n    underlayColor: null, // This will change the underlay color when touch is active on iOS.\n  },\n  buttonClearCaption: {\n    // This has all TextStyle properties. \n  },\n  buttonSaveContainer: {\n    // This has all ViewStyle properties.\n  },\n  buttonSaveContainer: {\n    // This has all ViewStyle properties. \n    rippleColor: null, // This will change the color of the ripple on Android.\n    activeOpacity: null, // This will change the opacity when touch is active on iOS.\n    underlayColor: null, // This will change the underlay color when touch is active on iOS.\n  }, \n  buttonSaveCaption: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Export Popup Menu Styling Object in Mendix JavaScript\nDESCRIPTION: The snippet defines the styling for a Popup Menu widget in Mendix. It includes configurations for basic and custom item styles, as well as the overall container styles using JavaScript objects encapsulating styles. The purpose is to define visual presentations, such as ellipsizing text and ripple effects for tap feedback.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nexport const com_mendix_widget_native_popupmenu_PopupMenu = {\n  basic: {\n  // BasicItemStyle. Styles basic items.\n    containerStyle: {\n      // This has all ViewStyle properties. Styles the wrapper container around a basic item. \n    },\n    itemStyle: {\n      ellipsizeMode: null, // 'head', 'middle', 'tail', or 'clip'. Styles how the text will be clipped if its too long.\n      rippleColor: null, // Styles the color of touch feedback when item is tapped. Works for both iOS and Android platforms.\n      defaultStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `default` style selected.\n      },\n      primaryStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `primary` style selected.\n      },\n      dangerStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `danger` style selected.\n      },\n      customStyle: {\n        // This has all TextStyle properties. Styles all basic menu items which have the `custom` style selected.\n      },\n    },\n    dividerColor: null, // Styles the divider color. \n  },\n\n  custom: {\n    // CustomItemStyle. Styles custom items.\n    // This has the same properties as BasicItemStyle.\n  },\n\n  buttonContainer: {\n    // This has all ViewStyle properties. Styles the wrapper view of triggerer since there could be multiple elements, and it has to be wrapped in a view. \n  },\n  container: {\n    // This has all ViewStyle properties. Styles the wrapper view around the whole menu.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Synchronous Return in JavaScript Action\nDESCRIPTION: This snippet demonstrates how to create a synchronous return in a JavaScript action to add two Big numbers. It defines the function parameters and details the expected return type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {Big} valueA\n * @param {Big} valueB\n * @param {Big}\n */\nfunction AddValue(valueA, valueB) {\n    // BEGIN USER CODE\n    return valueA.plus(valueB)\n    // END USER CODE\n}\n\n```\n\n----------------------------------------\n\nTITLE: Steps for Committing Queued Actions\nDESCRIPTION: This snippet lists the steps required to handle queued actions effectively in bulk, ensuring that the operations are performed correctly and efficiently.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/process-queue.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nWhen dealing with a large amount of actions in a short period of time, the following steps should be performed:\n\n1. Create QueuedAction (no commit).\n2. Add to list.\n3. Append to queue.\n\nTo commit a list of queued actions that is inferior, the following steps should be performed:\n\n1. Create QueuedAction (commit).\n2. Append to queue.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating OQL Arithmetic Operators in SQL\nDESCRIPTION: Examples of basic arithmetic operations in OQL, including addition, subtraction, multiplication, division, and modulo.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\n6 + 4\n6 - 4\n6 * 4\n8 : 4\n8 % 3\n```\n\n----------------------------------------\n\nTITLE: Creating a Microflow to Call a Web Service\nDESCRIPTION: This snippet provides detailed steps on creating a microflow within Mendix to call a web service, specifically converting temperatures from Celsius to Fahrenheit. It outlines the necessary activities, variable creations, and settings adjustments needed for the web service call.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/consume-a-simple-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n1. Right-click your module in the **Project Explorer** and select **Add microflow** from the menu:\n2. Enter a name for the new microflow (for example, *ConvertCelsiusToFahrenheit*) and click **OK**.\n3. An empty microflow will be displayed:\n4. Open the **Toolbox** and drag a **Create variable** activity to the line between the start and end event.\n5. Double-click the new activity to open the **Create Variable** properties editor.\n6. For the **Data Type**, select **Integer/Long** and enter *100* as the value. For the **Output Variable Name** enter *TemperatureInCelsius*:\n7. Click **OK.** The microflow will look like this:\n8. Drag a **Call web service** activity from the toolbox and add it to the microflow just before the end event.\n9. Double-click this activity to open the **Call Web Service** properties editor. For the **Operation** of your consumed web service, click **Select**. Expand the **TemperatureConverter** web service and under **TempConvert** click **CelsiusToFahrenheit** and click **Select**:\n10. In the **Location** section for this operation, check the **Override location** box to override the location and use the secure location of the web service.\n11. Click **Edit** and change `http` to `https` for the URL in the **Location** editor and click **OK**.\n12. In the **SOAP Request Body** tab of the **Call Web Service** properties editor, double-click the **Celsius (optional)** input parameter and enter `toString($TemperatureInCelsius)` for the expression. The web service operation expects a string value, which is why you need to use the `toString` function. Then click **OK**.\n13. In the **SOAP Response** tab, select **Yes** for the **Store in variable** option. Enter *TemperatureInFahrenheit* for the **Variable name**:\n14. Click **OK**. The microflow will look like this:\n15. Drag a **Show message** activity from the **Toolbox** to the line before the end event.\n16. Double-click the new activity to open the **Show Message** dialog box.\n17. Select **Information** as the **Type**, and enter *The temperature in Fahrenheit is: {1}* for the **Template**. The *{1}* functions as a placeholder for the parameters.\n18. Create a new parameter and enter `$TemperatureInFahrenheit` for the expression (this is the return value of the web service operation) and click **OK**:\n19. Click **OK** again to save the show message activity values. The microflow now looks like this:\n20. Create a menu item that triggers this microflow. For details on how to create a menu item, see [How to Set Up the Navigation Structure](/howto8/general/setting-up-the-navigation-structure/).\n21. Deploy the application and trigger the microflow to call the web service operation. You should see a message with the converted temperature.\n```\n\n----------------------------------------\n\nTITLE: Create Kubernetes Resources for Help Me Feature\nDESCRIPTION: This script creates Kubernetes resources (ServiceAccount, ClusterRole, and ClusterRoleBinding) to enable the \"Help Me\" feature. It grants permissions to access namespaces, deployments, pods, logs, events, storage plans, and Mendix apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n# create ServiceAccount, ClusterRole, and ClusterRoleBinding\nkubectl apply -f << EOF -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n  annotations:\n    kubernetes.io/service-account.name: mxplatform-cicd\ntype: kubernetes.io/service-account-token\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n    name: mxplatform-cicd\nrules:\n- apiGroups:\n    - \"\"\n    resources:\n    - namespaces\n    verbs:\n    - list\n- apiGroups:\n    - \"\"\n    resources:\n    - deployments\n    verbs:\n    - get\n    - list\n    - watch\n- apiGroups:\n    - \"\"\n    resources:\n    - pods\n    verbs:\n    - get\n    - list\n- apiGroups:\n    - \"\"\n    resources:\n    - pods/log\n    verbs:\n    - get\n- apiGroups:\n    - \"\"\n    resources:\n    - events\n    verbs:\n    - get\n    - list\n- apiGroups:\n    - privatecloud.mendix.com\n    resources:\n    - storageplans\n    verbs:\n    - list\n- apiGroups:\n    - privatecloud.mendix.com\n    resources:\n    - mendixapps\n    verbs:\n    - '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n    name: mxplatform-cicd\nsubjects:\n- kind: ServiceAccount\n    name: mxplatform-cicd\n    namespace: kube-system\nroleRef:\n    kind: ClusterRole\n    name: mxplatform-cicd\n    apiGroup: rbac.authorization.k8s.io\nEOF\n\n# get service account token:\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.data.token}'|base64 -d\n# for openshift cluster\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.metadata.annotations.openshift\\.io/token-secret\\.value}'\n```\n\n----------------------------------------\n\nTITLE: Implementing XSRF Token and Gateway Session Handling in JavaScript\nDESCRIPTION: This script adds the x-xsrf-token header to each request and handles gateway session expiration. It includes functions to display a session expired popup and override fetch and XMLHttpRequest to include the XSRF token.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\n\t// Insights Hub specific part-1: We have to use the XSRF-TOKEN on fetch requests.\n\t// This script should placed before \"mxui.js\" as this script makes the fetch requests\n\t(function () {\n        const sessionExpiredReloadAppPopup = function () {\n            // get localized texts for popup from sessionstorage. In case of error use fallbackText.\n            const getTextFromSessionStorage = () => {\n                const fallbackText = {\n                    title: \"Session expired\",\n                    message: \"The session is expired. Please reload the app.\",\n                    button: \"Reload app\",\n                }\n                try {\n                    const text = JSON.parse(sessionStorage.getItem('sessionExpired'));\n                    if (text.hasOwnProperty(\"title\") && text.hasOwnProperty(\"message\") && text.hasOwnProperty(\"button\")) {\n                        return text;\n                    }\n                    return fallbackText;\n                } catch (error) {\n                    return fallbackText;\n                }\n            }\n            const text = getTextFromSessionStorage();\n            // div structure is copied from the \"SessionExpired\" page in the module SiemensInsightsHubWebContent\n            // As we can not load the page dynamically due to expiration of the gateway session.\n            // When user click the button location.reload() is triggered - which initiates an new session with gateway\n            const sessionExpiredPopup = `\n            <div role=\"dialog\" class=\"modal-dialog mx-window  mx-window-active utx-session-expired\"\n                style=\"opacity: 1; z-index: 1002; top: calc(50% - 141px); left: calc(50% - 300px);\" data-focus-capturing=\"modal\">\n                <div class=\"modal-content mx-window-content\">\n                    <div class=\"modal-header mx-window-header\" style=\"user-select: none; cursor: auto;\">\n                        <h4>${text.title}</h4>\n                    </div>\n                    <div data-focusindex=\"0\" class=\"modal-body mx-window-body\">\n                        <div class=\"mx-scrollcontainer mx-scrollcontainer-horizontal mx-scrollcontainer-fixed\"\n                            style=\"\">\n                            <div class=\"mx-placeholder\">\n                                <div class=\"\" id=\"mxui_widget_Wrapper_21\" style=\"display: contents !important;\">\n                                    <div class=\"mx-name-layoutGrid1 mx-layoutgrid mx-layoutgrid-fluid container-fluid\">\n                                        <h1 class=\"mx-title mx-name-pageTitle1\">\n                                            ${text.title}\n                                        </h1>\n                                        <div>\n                                            ${text.message}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer mx-dialog-footer\">\n                        <button type=\"button\" class=\"btn mx-button mx-name-actionButton1 pull-right btn-primary\"\n                            title=\"\" data-button-id=\"2.SiemensInsightsHubWebContent.SessionExpired.actionButton1\"\n                            data-disabled=\"false\" onClick=\"location.reload()\">${text.button}</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mx-underlay\" id=\"mxui_widget_Underlay_0\" widgetid=\"mxui_widget_Underlay_0\" style=\"z-index: 101;\"></div>`\n            const body = document.getElementsByTagName('body')[0];\n            body.insertAdjacentHTML('afterbegin', sessionExpiredPopup);\n        };\n\n        // Read cookie below\n        function getCookie(name) {\n            match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n            if (match) return match[2];\n            else return '';\n        }\n        var xrsfToken = getCookie('XSRF-TOKEN');\n        if (window.fetch) {\n            var originalFetch = window.fetch;\n            window.fetch = function (url, init) {\n                if (!init) {\n                    init = {};\n                }\n                if (!init.headers) {\n                    init.headers = new Headers();\n                }\n                var tokenAvailable =\n                    typeof init.headers.get === 'function'\n                        ? init.headers.get('x-xsrf-token')\n                        : init.headers.hasOwnProperty('x-xsrf-token');\n                if (!tokenAvailable) {\n                    if (typeof init.headers.set === 'function') {\n                        init.headers.set('x-xsrf-token', xrsfToken);\n                    } else {\n                        init.headers['x-xsrf-token'] = xrsfToken;\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    // Change default redirect mode from \"error\" to \"manual\"\n                    // And handle \"opaqueredirect\" response type.\n                    init.redirect = \"manual\";\n                    originalFetch(url, init)\n                        .then(response => {\n                            if (response.type === \"opaqueredirect\") {\n                                sessionExpiredReloadAppPopup();\n                            } else {\n                                return resolve(response);\n                            }\n                        })\n                        .catch(e => {\n                            reject(e);\n                        });\n                })\n            };\n        }\n        if (!window.fetch || (window.fetch && /Edge/.test(navigator.userAgent))) {\n            var originalXMLHttpRequest = window.XMLHttpRequest;\n            window.XMLHttpRequest = function () {\n                var result = new originalXMLHttpRequest(arguments);\n                // overwrite setRequestHeader function to make sure to set the x-xsrf-token only once\n                result.setRequestHeader = function (header, value) {\n                    if (header) {\n                        if (header.toLowerCase().indexOf('x-xsrf-token') !== -1) {\n                            if (this.xsfrTokenSet === true) {\n                                // token is already in place -> so do nothing\n                                return;\n                            }\n                            this.xsfrTokenSet = true;\n                        }\n                    }\n                    originalXMLHttpRequest.prototype.setRequestHeader.apply(this, arguments);\n                };\n                // overwrite open function to make sure to set the x-xsrf-token at least once\n                result.open = function () {\n                    originalXMLHttpRequest.prototype.open.apply(this, arguments);\n                    this.setRequestHeader('x-xsrf-token', xrsfToken);\n                };\n                return result;\n            };\n        }\n    })();\n    // Insights Hub specific part-1: ends\n</script>\n```\n\n----------------------------------------\n\nTITLE: Styling Line Chart Widget - JavaScript\nDESCRIPTION: This JavaScript object defines the styling properties for the Line Chart widget in Mendix native applications. It includes properties for the container, error message, chart, grid, x-axis, y-axis, legend, and lines, allowing developers to customize the appearance of the chart components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_41\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_linechart_LineChart = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  errorMessage: {\n    // This has all TextStyle properties. \n  },\n  chart: {\n    // This has all ViewStyle properties. \n  },\n  grid: {\n    backgroundColor: null, // Applies a color to the grid background (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the grid lines (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty).\n    lineColor: null, // Applies a color to the grid lines (string).\n    lineWidth: null, // Applies a width to the grid lines (number).\n    padding: null, // Applies padding to all sides of the grid (number). Use it to make axis value labels visible.\n    paddingBottom: null, // Applies padding to the bottom side of the grid (number). Use it to make axis value labels visible.\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the grid (number). Use it to make axis value labels visible.\n    paddingLeft: null, // Applies padding to the left side of the grid (number). Use it to make axis value labels visible.\n    paddingRight: null, // Applies padding to the right side of the grid (number). Use it to make axis value labels visible.\n    paddingTop: null, // Applies padding to the top side of the grid (number). Use it to make axis value labels visible.\n    paddingVertical: null, // Applies padding to the vertical sides of the grid (number). Use it to make axis value labels visible.\n  },\n  xAxis: {\n    color: null, // Applies a color to the axis value labels (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the axis line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    fontFamily: null, // Applies fonts to the axis value labels (string).\n    fontSize: null, // Applies a size to the axis value labels (number).\n    fontStyle: null, // Applies a font style to the axis value labels (\"normal\" or \"italic\").\n    fontWeight: null, // Applies a font weight to the axis value labels (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n    lineColor: null, // Applies a color to the axis line (string).\n    lineWidth: null, // Applies a width to the axis line (number).\n    label: { \n      // All TextStyle properties.\n      relativePositionGrid: null, // Positions the axis label at the bottom or right side of the grid (\"bottom\" or \"right\").\n    },\n  },\n  yAxis: {\n    // All `xAxis` element styles.\n  },\n  legend: {\n    container: {\n      // All ViewStyle properties.\n    },\n    item: {\n      // All ViewStyle properties. \n    },\n    indicator: {\n      // All ViewStyle properties. \n    },\n    label: {\n      // All ViewStyle properties. \n    }\n  },\n  lines: {\n    lineColorPalette: null, // Provides colors to lines that do not have a line color configured (string with list of colors separated by ';').\n    customLineStyles: {\n      any_custom_line_style_name: {\n        line: {\n          dashArray: null, // Applies a pattern of dashes and gaps to the graph line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n          ending: null, // Applies a flat or rounded line end to the graph line (\"flat\" or \"round\").\n          lineColor: null, // Applies a color to the graph line (string).\n          lineWidth: null, // Applies a width to the graph line (number).\n        },\n        markers: {\n          backgroundColor: null, // Applies a background color to the markers of the graph line (string).\n          borderColor: null, // Applies a border color to the markers of the graph line (string).\n          borderWidth: null, // Applies a border width to the markers of the graph line (string).\n          display: null, // Influences whether markers are displayed. When displayed, it positions the markers of the graph line on top or underneath the line (\"false\" or \"underneath\" or \"onTop\").\n          size: null, // Applies a size to the markers of the graph line (number).\n          symbol: null, // Applies a symbol to the markers of the graph line (\"circle\" or \"diamond\" or \"plus\" or \"minus\" or \"square\" or \"star\" or \"triangleDown\" or \"triangleUp\").\n        }\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Markdown Include Snippet\nDESCRIPTION: A markdown include directive that references a snippet file for basic widget functions documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide8/performing-basic-functions-widgets.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Define Environment Template IAM Policy for S3 and RDS Access\nDESCRIPTION: This JSON snippet defines an IAM policy that grants access to an S3 bucket and an RDS database. It allows listing objects in the bucket, performing actions on objects within a specific prefix (based on IAM role tags), and connecting to the database. The policy uses conditions to restrict access based on tags associated with the IAM role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowListingOfUserFolder\",\n            \"Action\": [\n                \"s3:ListBucket\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>\"\n            ],\n            \"Condition\": {\n                \"StringLike\": {\n                    \"s3:prefix\": [\n                        \"${aws:PrincipalTag/privatecloud.mendix.com/s3-prefix}/*\",\n                        \"${aws:PrincipalTag/privatecloud.mendix.com/s3-prefix}\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"AllowAllS3ActionsInUserFolder\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>/${aws:PrincipalTag/privatecloud.mendix.com/s3-prefix}/*\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowConnectionToDatabase\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"rds-db:connect\",\n            \"Resource\": \"arn:aws:rds-db:<aws_region>:<account_id>:dbuser:<database_id>/${aws:PrincipalTag/privatecloud.mendix.com/database-user}\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using minutes-from-dateTime With Specified Timezone\nDESCRIPTION: Example query that returns all log entries where the minutes part of DateAttribute equals 30 in the New York timezone. This demonstrates using the optional timezone parameter with an IANA timezone identifier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-minutes-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[minutes-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Creating Custom CSS Class with JavaScript\nDESCRIPTION: This snippet illustrates how to create a custom CSS class named `className` within the *custom.js* file.  It defines styling properties for the container, icon, and caption of a widget, allowing for granular control over its appearance. This is a template for creating custom styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-styling/how-to-use-native-styling.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n    export const className = {\n        container: {\n            <ViewStyle properties>\n        },\n        icon: {\n        },\n        caption: {\n            <TextStyle properties>\n        }\n    }\n```\n\n----------------------------------------\n\nTITLE: Label Section Configuration for Drop-Down\nDESCRIPTION: This snippet points to the label configuration for the drop-down widget, emphasizing how to effectively label options for clarity and user guidance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Debugging with ADB Logcat for Android\nDESCRIPTION: This snippet outlines the steps needed to capture logs from an Android device using the ADB Logcat command. This is useful for developers to diagnose app crashes or errors by accessing detailed log outputs directly from their device.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-debug.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nadb start-server\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nadb logcat > output.txt\n```\n\n----------------------------------------\n\nTITLE: Filtering logs by day of month using XPath day-from-dateTime function in Java\nDESCRIPTION: This query demonstrates how to use the day-from-dateTime() function to return all logs where the DateAttribute has a day value of 30. The function extracts the day component from a Date and time attribute for comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[day-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Updated Import Statement for the Renamed Group Box Component\nDESCRIPTION: This code updates the import statement in the container component to use the renamed GroupBox component instead of HelloWorldSample.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nimport { HelloWorldSample } from \"./components/HelloWorldSample\"\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { GroupBox as WrappedGroupBox } from \"./components/GroupBox\"\n```\n\n----------------------------------------\n\nTITLE: Action Parameters Definition Table\nDESCRIPTION: Table showing common action parameters used in ATS custom actions, including their descriptions, requirement status, and data types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-general/guidelines-custom-action.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Action parameter | Description | Required, Optional, or Both | Data Type |\n| :--- | :--- | :--- | :--- |\n| Widget Name | The mx-name of the widget. | Required | String |\n| Value | The value that needs to be set or found inside a widget. | Both | String |\n| Search Context | Provides the element in which ATS will look for the widget. | Optional | Web Element |\n| Index | The index of the widget/item to find. | Optional | Integer |\n| Column Name | The name of the column. | Both | String |\n| Row Name | The name of the row. | Both | String |\n| Widget | Returns the widget. | Required | Web Element |\n```\n\n----------------------------------------\n\nTITLE: Styling List View Swipe Widget Structure in XML\nDESCRIPTION: XML structure for styling list view swipe widget with left and right swipe actions and container elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_32\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<leftAction>\n\t\t{Left background}\n\t</leftAction>\n\t{Foreground}\n\t<rightAction>\n\t\t{Right background}\n\t</rightAction>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Defining Marker Mode and Line Styles in JSON\nDESCRIPTION: This snippet defines various modes and line styles for chart series, specifying visual representations such as 'markers', 'lines', and customizable line properties like 'dash' and 'width'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[{\"mode\": \"markers\"},{\"mode\": \"lines+markers\"},{\"mode\": \"lines\"},{\"mode\": \"lines\", \"line\": {\"dash\": \"dashdot\"}},{\"mode\": \"lines\", \"line\": {\"dash\": \"dot\"}},{\"mode\": \"lines\", \"line\": {\"dash\": \"longdash\"}},{\"mode\": \"lines\", \"line\": {\"width\": 5}}]\n```\n\n----------------------------------------\n\nTITLE: Plotly REST API JSON Request Template\nDESCRIPTION: JSON request structure for generating plot images via Plotly REST API, specifying figure data, layout, format, and encoding options\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/charts-plotly-images-rest.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"figure\": {\n        \"data\": [{\"y\": [10, 10, 2, 20]}],\n        \"layout\": {\"width\": 700}\n    },\n    \"format\": \"png\",\n    \"encoded\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Admin Role Interface in Mendix\nDESCRIPTION: This XML code embeds an image showing the admin role interface for managing users in Mendix workflows. It includes attributes for the image source, alternative text, and CSS class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/admin-role.png\" alt=\"Admin Role\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Installing Grafana Loki Stack with Helm\nDESCRIPTION: Helm command to install the complete Grafana Loki stack, including Grafana, Prometheus, Loki, and Promtail. This configures persistent storage, security contexts, and retention periods for metrics and logs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nPROJECT={project}\nGRAFANA_UID={uid}\nhelm upgrade --install loki grafana/loki-stack --version='^2.8.0' --namespace=${PROJECT} --set grafana.enabled=true,grafana.persistence.enabled=true,grafana.persistence.size=1Gi,grafana.initChownData.enabled=false,grafana.admin.existingSecret=grafana-admin \\\n--set prometheus.enabled=true,prometheus.server.persistentVolume.enabled=true,prometheus.server.persistentVolume.size=50Gi,prometheus.server.retention=7d \\\n--set loki.persistence.enabled=true,loki.persistence.size=10Gi,loki.config.chunk_store_config.max_look_back_period=168h,loki.config.table_manager.retention_deletes_enabled=true,loki.config.table_manager.retention_period=168h \\\n--set promtail.enabled=true,promtail.containerSecurityContext.privileged=true,promtail.containerSecurityContext.allowPrivilegeEscalation=true \\\n--set prometheus.nodeExporter.enabled=false,prometheus.alertmanager.enabled=false,prometheus.pushgateway.enabled=false \\\n--set grafana.securityContext.runAsUser=${GRAFANA_UID},grafana.securityContext.runAsGroup=0,grafana.securityContext.fsGroup=${GRAFANA_UID} \\\n--set prometheus.server.securityContext.runAsUser=${GRAFANA_UID},prometheus.server.securityContext.runAsGroup=0,prometheus.server.securityContext.fsGroup=${GRAFANA_UID} \\\n--set prometheus.kube-state-metrics.securityContext.runAsUser=${GRAFANA_UID},prometheus.kube-state-metrics.securityContext.runAsGroup=0,prometheus.kube-state-metrics.securityContext.fsGroup=${GRAFANA_UID} \\\n--set loki.securityContext.runAsUser=${GRAFANA_UID},loki.securityContext.runAsGroup=0,loki.securityContext.fsGroup=${GRAFANA_UID}\n```\n\n----------------------------------------\n\nTITLE: Checking String Prefix\nDESCRIPTION: Verifies if a string begins with a specified substring, returning a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nstartsWith('thisismystring', 'this')\n```\n\n----------------------------------------\n\nTITLE: Updating the render method in GroupBox.tsx\nDESCRIPTION: This TypeScript code snippet updates the render method to utilize the new `headerCaption` prop. The previous property assignment for `sampleText` is replaced with an assignment of the `headerCaption` prop.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\n`headerCaption={this.props.headerCaption}`\n```\n\n----------------------------------------\n\nTITLE: Offline Synchronization Auto-Committed Objects Warning Log\nDESCRIPTION: Detailed warning log generated when auto-committed objects are detected and deleted during offline synchronization. Provides information about deleted objects, user, and count of objects per entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nThe offline synchronization detected {count} auto-committed objects during synchronization executed by {user}. Auto committed objects are not supported during offline synchronization. The Mendix runtime has deleted the following objects:\n- {Entity1}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\n- {Entity2}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\n...\n- {EntityN}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\n\nPlease refer to the documentation to learn more about this issue and how to solve it:\nhttps://docs.mendix.com/refguide/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects/\n```\n\n----------------------------------------\n\nTITLE: Converting Mendix App using mx convert\nDESCRIPTION: This command converts Mendix app files (.mpk) to the Studio Pro version associated with the mx tool. Input can be a single file, a directory, or multiple files.  The converted app can either replace the current app or be placed in the given output directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n\"mx convert [OPTIONS] INPUT... OUTPUT\"\n```\n\n----------------------------------------\n\nTITLE: Adding Base64 Icon to GroupBox Widget - XML\nDESCRIPTION: This XML snippet demonstrates how to include a Base64 encoded image string as an icon for the Mendix group box widget. The data string is directly placed within the <icon> element of the XML configuration, allowing the widget to display the specified image.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_41\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon>iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAAHdbkFIAAAAAXNSR0IArs4c6QAA ArVJREFUeAHtWk12gjAQBl4X9Q72PsVFnxufN+ihegOfG18XtfeRO9gVNBMZDPlx gIAQGDcxmczMN99MQohGkc9nt9sVCWVgChNiAAloKbBuOaU9hTBJDPGjKI7HYyyJ 2u/3aZ7nP24y7BIw8AIiUIZO+v2XFnlhGPrdrmqOYC4i80oVGJLY0JodqH0UdUgW 7er30fEN3LGM9c0njZlI45sEjilpEwXqyEpExffT1Vj7AmJ23q6kp1Lp7lko1gxg yaJBva0qTxFUBhCSImv+tYsy6oxfiYwgirw56KeQmpfcBGfetnUBDEv7WRhxYVc5 QMcowH7frR6oAQAdpqfrRWxua+xTrb6VCUcXoVPpuwJzAsBNlHLskguHt+3eNaEc NwDoFBH63mIDgIsqb0+lAT1A753EFxgDYAaYAXUfyMSSWuvr1HeZsf7kGVAPJLXH 55DIkyTZHA6HM/hQl2H17B7SOdhWrwXUVSD9Lu5paDCA9Lc5ksVJvDl/vMqcor56 JFNzjnJs1RrAMdm2OQ9GefFVU751qpoSObfJ5SwnA/oh0+Lg4VDTWnIy8NB6j0KD gWc/C6bHQNPcdc2CzvDoDDAAZoAZYAaYAWaAGVjsiSjreqBhPWZgbgxU9yMYmPpO i2Mzams/HUNctgdB9U49o8AxFCM24zmAM7Ed+j0R/QzV6u+huh9bBehzZt0nK0CP vs29ma5L9dW/e7jmEnuUscZddnC8fQUk8ScARQN9tdKmsE3ZE5eNMMfmPytllIma vHUFlDehjX4PrnnqqVPervfmv30F9BTIVMyQFUDtolMJpCsOrgCKOT4HUAwFLl/8 EmACAq9gb/hcAd4UBm6AKyDwBHrD5wrwpjBwA1wBgSfQGz5XgDeFgRtYfAXwjZBe wfAXTzFmu3XVp4bWh1tjiI0/zIDCwD+0qr6OmQMSvQAAAABJRU5ErkJggg==</icon>\n    <properties>\n        <propertyGroup caption=\"General\">\n            <propertyGroup caption=\"General\">\n                <property key=\"content\" type=\"widgets\" required=\"false\">\n                    <caption>Content</caption>\n                    <description>Widgets to place inside.</description>\n                </property>\n                <property key=\"collapsible\" type=\"enumeration\" defaultValue=\"no\">\n                    <caption>Collapsible</caption>\n                    <description />\n                    <enumerationValues>\n                        <enumerationValue key=\"no\">No</enumerationValue>\n                        <enumerationValue key=\"yesStartExpanded\">Yes (start expanded)</enumerationValue>\n                        <enumerationValue key=\"yesStartCollapsed\">Yes (start collapsed)</enumerationValue>\n                    </enumerationValues>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Header\">\n                <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                    <caption>Caption</caption>\n                    <description />\n                </property>\n                <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                    <caption>Expand icon</caption>\n                    <description>Icon used to indicate that the group box can be expanded.</description>\n                </property>\n                <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                    <caption>Collapse icon</caption>\n                    <description>Icon used to indicate that the group box can be collapsed.</description>\n                </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Common\">\n                <systemProperty key=\"Name\" />\n                <systemProperty key=\"Visibility\" />\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Creating Certificate Signing Request (CSR) for iOS App\nDESCRIPTION: This command generates a Certificate Signing Request (CSR) using the previously created private key. The CSR is saved as 'ios.csr' and will be used to obtain a signed certificate from Apple.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" req -new -key \"C:\\private.key\" -out \"C:\\ios.csr\"\n```\n\n----------------------------------------\n\nTITLE: Running Events on Last Day of Month Expression\nDESCRIPTION: This expression determines if the current date is the last day of the month by comparing the current day with the day number of the end of the current month. It's useful for scheduling month-end processes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/scheduled-events.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime([%CurrentDateTime%], 'dd') = formatDateTime([%EndOfCurrentMonth%], 'dd')\n```\n\n----------------------------------------\n\nTITLE: Debugging JavaScript Actions with Browser Developer Tools\nDESCRIPTION: Techniques for debugging JavaScript actions using browser developer tools, including setting breakpoints and using the debugger statement\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Adding debugger statement to pause execution\ndebugger;\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Configuration Paths - Command Line\nDESCRIPTION: Execute the Native Mobile Toolkit with a specified configuration file path. This allows users to provide a custom path to their configuration files when running the tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nnative-mobile-toolkit configure --config-path='./<name of the configuration>.json' --verbose\n```\n\n----------------------------------------\n\nTITLE: Formatting Current DateTime in Java\nDESCRIPTION: This snippet demonstrates how to use the SimpleDateFormat class in Java to format the current date and time. It requires specifying a format string as input and returns a formatted string representation of the current datetime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/ats-core-actions/rg-one-get-current-datetime-string.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nSimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\nString currentDateTime = formatter.format(new Date());\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Minutes in Java\nDESCRIPTION: This function trims a date to minutes by rounding off all (milli)seconds to zero. It takes a Date and time input and returns the same date rounded down to minutes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntrimToMinutes($myDate)\n```\n\nLANGUAGE: java\nCODE:\n```\n'Sun Jun 08 10:12:00 CEST 2008'\n```\n\n----------------------------------------\n\nTITLE: Setting Infrastructure Type in Developer Cockpit\nDESCRIPTION: Configuration value for setting the infrastructure type when registering a mobile app in the Developer Cockpit.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-mobile-native.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nType = Mobile\nInfrastructure = none\n```\n\n----------------------------------------\n\nTITLE: Updating CSS Focus Selectors for Mendix 8\nDESCRIPTION: Example showing how to update CSS selectors from using mx-focus class to using :focus pseudo-class\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.mx-listview-item.mx-focus {\n\t/* your styling */\n}\n```\n\nLANGUAGE: css\nCODE:\n```\n.mx-listview-item:focus {\n\t/* your styling */\n}\n```\n\n----------------------------------------\n\nTITLE: Block Quotes Markdown Example\nDESCRIPTION: This snippet provides an example of using block quotes within Markdown documents. It facilitates the display of quoted text in a styled manner suitable for emphasis or noting important information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n>A block of text\n```\n\n----------------------------------------\n\nTITLE: Running Events on First Day of Month Expression\nDESCRIPTION: This expression can be used in a microflow decision to determine if the current date is the first day of the month. It's useful for creating more precise monthly scheduled events when exact monthly timing is critical.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/scheduled-events.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nparseInteger( formatDateTime( [%CurrentDateTime%], 'dd') ) = 1\n```\n\n----------------------------------------\n\nTITLE: Setting SOAP Request Parameters\nDESCRIPTION: This snippet modifies the values of the 'Offset' and 'PageSize' fields in a SOAP request to define pagination for retrieving customers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/testing-web-services-using-soapui.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n<Offset>0</Offset>\n<PageSize>10</PageSize>\n```\n\n----------------------------------------\n\nTITLE: String Concatenation in Mendix Expressions\nDESCRIPTION: The + operator concatenates two strings or a string and a number. At least one parameter must be a string. It returns a new string that is the literal concatenation of the two input parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_13\n\nLANGUAGE: java\nCODE:\n```\n'foo' + 'bar'\n```\n\nLANGUAGE: java\nCODE:\n```\n4.73 + ' kilometers'\n```\n\nLANGUAGE: java\nCODE:\n```\n'http://google.com/search?q=' + urlEncode($myQuery)\n```\n\n----------------------------------------\n\nTITLE: Custom Chart Settings (JSON)\nDESCRIPTION: This JSON snippet demonstrates custom settings for a chart, specifically focusing on font properties like family, size, and color. These settings can be applied to individual charts or globally through a theme configuration. This can be added in the Toggle Editor, under the Layout section, as Custom settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-theme.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n    {\n      \"font\": {\n        \"family\": \"Open Sans\",\n        \"size\": 14,\n        \"color\": \"#555\"\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Defining Default Styling Class for Mendix Pluggable Widgets\nDESCRIPTION: Illustrates how to define the default styling class for a pluggable widget by translating its ID with underscores and setting TextStyle properties such as color. This practice is critical for maintaining consistent styles across customized widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_badge_Badge = (Badge = {\n  caption: {\n    color: \"#00FF00\",\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Setting JDBC URL Options for SAP HANA in Mendix\nDESCRIPTION: Shows how to set JDBC URL options to configure data source properties for SAP HANA connections in Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_5\n\nLANGUAGE: Plain Text\nCODE:\n```\nhttp.client.CleanupAfterSeconds=355\n```\n\n----------------------------------------\n\nTITLE: Creating Session-Linked Object Dialog\nDESCRIPTION: Demonstrates the dialog configuration for linking an object to the current session when creating it in a microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/minimize-number.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide9/runtime/minimize-number/create_object_dialog.png\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Database Function\nDESCRIPTION: Reference to DATEDIFF function that was fixed in HSQLDB to handle timezone offsets correctly\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.18.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nDATEDIFF()\n```\n\n----------------------------------------\n\nTITLE: Checking if Object is Synced in Mendix Java\nDESCRIPTION: This snippet explains how to check if an object’s changes have been synchronized to the runtime database. Key usage includes ensuring web profiles without offline support return 'true'. It is only applicable to expressions evaluated on the client-side, such as conditional properties or nanoflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nisSynced($currentObject)\n```\n\n----------------------------------------\n\nTITLE: Runtime Response with Retrieved Objects\nDESCRIPTION: JSON response from the Mendix Runtime Server to the Client after executing a microflow to retrieve objects. It includes the object data and their attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"actionResult\": {\n        \"type\": \"ObjectReferenceSet\",\n        \"value\": [\n            \"11540474045137130\",\n            \"11540474045137256\",\n            \"11540474045150458\"\n        ]\n    },\n    \"changes\": {},\n    \"commits\": [],\n    \"committedObjectsOmitted\": false,\n    \"deletes\": [],\n    \"newpersistable\": [],\n    \"objects\": [\n        {\n            \"objectType\": \"MyFirstModule.Employee\",\n            \"guid\": \"11540474045137130\",\n            \"attributes\": {\n                \"Department\": {\n                    \"value\": \"Sales\"\n                },\n                \"Jobtitle\": {\n                    \"value\": \"Sales Executive\"\n                },\n                \"Firstname\": {\n                    \"value\": \"Peter\"\n                },\n                \"Lastname\": {\n                    \"value\": \"Jones\"\n                },\n                \"DateOfBirth\": {\n                    \"value\": 867189600000\n                }\n            }\n        },\n        {\n            \"objectType\": \"MyFirstModule.Employee\",\n            \"guid\": \"11540474045137256\",\n            \"attributes\": {\n                \"Department\": {\n                    \"value\": \"Finance\"\n                },\n                \"Jobtitle\": {\n                    \"value\": \"Accountant\"\n                },\n                \"Firstname\": {\n                    \"value\": \"Ellie\"\n                },\n                \"Lastname\": {\n                    \"value\": \"Walkers\"\n                },\n                \"DateOfBirth\": {\n                    \"value\": 454629600000\n                }\n            }\n        }\n    ],\n    \"resets\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Generating iOS Certificate Signing Request with OpenSSL\nDESCRIPTION: Create a private key and certificate signing request for iOS app distribution using OpenSSL command-line utility, required for Apple Developer Account\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" genrsa -out \"C:\\private.key\" 2048\n```\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" req -new -key \"C:\\private.key\" -out \"C:\\ios.csr\"\n```\n\n----------------------------------------\n\nTITLE: Embedding Swagger UI for Project API in YAML\nDESCRIPTION: This code snippet embeds a Swagger UI component to display the OpenAPI specification for the Private Mendix Platform Project API. The specification is sourced from a YAML file located at '/openapi-spec/openapi-project.yaml'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/private-mendix-platform/project-api.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n{{< swaggerui src=\"/openapi-spec/openapi-project.yaml\"  >}}\n```\n\n----------------------------------------\n\nTITLE: Design Properties Include Syntax\nDESCRIPTION: Markdown syntax for including the design properties section documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Background Colors in Mendix\nDESCRIPTION: CSS classes for applying theme-based or layout-specific background colors to elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\nbackground-primary\nbackground-info\nbackground-success\nbackground-warning\nbackground-danger\nbg-primary\nbg-info\nbg-success\nbg-warning\nbg-danger\nbackground-layout\nbackground-layout-secondary\nbackground-default\nbackground-default-dark\nbackground-default-darker\nbackground-default-light\nbackground-default-lighter\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Operation Result - List Reference\nDESCRIPTION: Defines the JSON schema for an operation result that returns a list of objects based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"type\": \"array\",\n  \"items\": [{ \"$ref\": \"#/definitions/#definition_name#\"}]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tab Container Structure in XML\nDESCRIPTION: Shows the XML structure for a tab container widget. Tab containers are used to display categorized information across multiple tab pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<tabBar>\n\t\t<tab>\n\t\t\t<activeLabel>PAGE 1</activeLabel>\n\t\t\t<badgeContainer><badgeCaption /></badgeContainer>\n\t\t</tab>\n\t\t<tab>\n\t\t\t<label>PAGE 2</label>\n\t\t</tab>\n\t\t<indicator>\n\t<tabBar>\n\tcontent\n</container>\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Host and Port Directly\nDESCRIPTION: This snippet demonstrates how to set proxy server parameters directly when calling Java applications, such as from Eclipse. It configures the http.proxyHost and http.proxyPort system properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-web-services/using-a-proxy-to-call-a-webservice.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-Dhttp.proxyHost=myproxyserver.com  -Dhttp.proxyPort=3128\n```\n\n----------------------------------------\n\nTITLE: XML SOAP Response Structure for GetCustomers\nDESCRIPTION: Example of a complete SOAP response envelope containing customer data with names, addresses, zip codes, and cities returned from the GetCustomers web service operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.example.com/\">\n    <soap:Body>\n        <tns:GetCustomersResponse>\n            <Customer>\n                <Name>Jessica D. Rogers</Name>\n                <Address>2118 Collins Street</Address>\n                <ZipCode>PA 16646</ZipCode>\n                <City>Hastings</City>\n            </Customer>\n            <Customer>\n                <Name>Jamie S. Wentz</Name>\n                <Address>3269 Village View Drive</Address>\n                <ZipCode>MD 20872</ZipCode>\n                <City>Damascus</City>\n            </Customer>\n            <Customer>\n                <Name>Blake G. Race</Name>\n                <Address>4437 Sunny Glen Lane</Address>\n                <ZipCode>OH 44115</ZipCode>\n                <City>Cleveland</City>\n            </Customer>\n            <Customer>\n                <Name>Angela L. Dolly</Name>\n                <Address>3718 Alpha Avenue</Address>\n                <ZipCode>TX 75439</ZipCode>\n                <City>Ector</City>\n            </Customer>\n        </tns:GetCustomersResponse>\n    </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom TLS Certificate File for Mendix Private Cloud\nDESCRIPTION: Example format for creating a custom.crt file containing public keys from private Certificate Authorities that should be trusted by Mendix for Private Cloud. The file concatenates multiple CA certificates with line breaks and optional comments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-standard-operator.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n# Private CA 1\n-----BEGIN CERTIFICATE-----\n[...]\n-----END CERTIFICATE-----\n# Private CA 2\n-----BEGIN CERTIFICATE-----\n[...]\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Displaying Workflow Admin Center in Mendix\nDESCRIPTION: This XML snippet embeds an image of the Workflow Admin Center interface in Mendix. It includes attributes for the image source, alternative text, and CSS class for proper rendering in the documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/workflow-admin-center.png\" alt=\"Workflow Admin Center\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Implementing a Web Server Extension for Static Content\nDESCRIPTION: This content server class implements WebServerExtension to provide static HTML content for the modal web view. It defines an HTML page with JavaScript functions for message handling between the web view and Studio Pro. The web server adds a route named 'index' that serves this HTML content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-modal-web-view.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nnamespace MyCompany.MyProject.MendixExtension;\n\n[Export(typeof(WebServerExtension))]\nclass ContentServer : WebServerExtension\n{\n    private const string Content = \"\"\"\n<html>\n   <head>\n       <script>\n           function sendMessage(message, data) {\n               if (window.chrome?.webview) {\n                   window.chrome.webview.postMessage({ message, data })\n               } else if (window.webkit?.messageHandlers.studioPro) {\n                   window.webkit.messageHandlers.studioPro.postMessage(JSON.stringify({ message, data }))\n               }\n           }\n           function registerMessageListener(eventHandler) {\n               if (window.chrome?.webview) {\n                   window.chrome.webview.addEventListener(\"message\", (event) => eventHandler(event.data))\n                   sendMessage(\"MessageListenerRegistered\")\n               } else if (window.webkit?.messageHandlers.studioPro) {\n                   window.WKPostMessage = (json) => {\n                       const wkMessage = JSON.parse(json)\n                       eventHandler(wkMessage)\n                   }\n                   sendMessage(\"MessageListenerRegistered\")\n               }\n           }\n           function init() {\n               registerMessageListener(msgHandler);\n           }\n           function msgHandler(event) {\n               console.log('message sent to JS: '+event.data);\n           }\n           function create() {\n               sendMessage(document.getElementById(\"entity_name\").value, null);\n           }\n       </script>\n   </head>\n   <body onload=\"init()\">\n       <div>\n           <p>Entity Name</p>\n           <input type=\"text\" style=\"width: 150px\" id=\"entity_name\"/>\n           <p><button onclick=\"create();\">Create Entity</button></p>\n       </div>\n   </body>\n</html>\n\"\"\";\n\n    public override void InitializeWebServer(IWebServer webServer)\n    {\n        webServer.AddRoute(\"index\", async (_, response, _) =>\n        {\n            response.ContentType = \"text/html\";\n            response.StatusCode = 200;\n            var content = Encoding.ASCII.GetBytes(Content);\n            response.ContentLength64 = content.Length;\n            await response.OutputStream.WriteAsync(content, CancellationToken.None);\n        });\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Domain Model in Mendix\nDESCRIPTION: Defines the data structure for Orders and OrderItems with an association between entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nDomain model with Order and OrderItem entities\n```\n\n----------------------------------------\n\nTITLE: Rounding with Precision in Mendix\nDESCRIPTION: Rounds a number to a specified number of decimal places. The second parameter determines the precision of the rounding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nround(88.725,2)\n```\n\n----------------------------------------\n\nTITLE: Constructing OData Query in JavaScript\nDESCRIPTION: This JavaScript code snippet shows how to construct an OData query using string concatenation. It combines the service root, collection name, and query parameters to form a complete OData query string, which is used to specify data retrieval from the SAP OData service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n\"@SERVICEROOT + '/' + toString(COLLECTIONNAME) + '?' + 'QUERYPARAMETERS'\"\n```\n\n----------------------------------------\n\nTITLE: Creating Customer Data Table in Databricks SQL Editor\nDESCRIPTION: SQL script to create a customer data table and populate it with sample customer records. This creates a table called 'customerData' with fields for name, address, postal code, and gender.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/databricks-edc.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE customerData (\n    name varchar(64),\n    address varchar(64),\n    postal_code varchar(6),\n    gender varchar(64)\n); \n\nINSERT INTO customerData (name, address, postal_code, gender) VALUES \n    ('Henk de Vries', 'Klaprooslaan 5, Bloemenstad', '1234AB', 'Male'),\n    ('Sanne Verbeek', 'Molendam 8, Waterveen', '2345CD', 'Female'),\n    ('Jan-Willem Bos', 'Zonstraat 22, Zomerhoven', '3456EF', 'Male'),\n    ('Marieke de Groot', 'Windmolenweg 33, Korenveld', '4567GH', 'Female'),\n    ('Bert van Dijk', 'Vlinderplein 15, Lenteveen', '5678JK', 'Male'),\n    ('Lotte van Dam', 'Regenboogpad 10, Kleurenburg', '6789LM', 'Female'),\n    ('Koen Smits', 'Eikenlaan 2, Bosrijk', '7890NO', 'Male'),\n    ('Emma Visser', 'Druppelweg 45, Regenstad', '8901QP', 'Female'),\n    ('Thomas Mulder', 'Sterrenhof 7, Hemelrijk', '9012RS', 'Male'),\n    ('Sophie Jansen', 'Kersenstraat 12, Fruitdorp', '0123TU', 'Female');\n\n```\n\n----------------------------------------\n\nTITLE: Implementing WebSocket Endpoint in Java for Mendix Runtime\nDESCRIPTION: A complete implementation of a WebSocket endpoint extending javax.websocket.Endpoint class. The endpoint handles connection opening, message processing, and connection closing. It demonstrates session management, message handling, and interaction with Mendix Core session.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/websockets-in-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport javax.websocket.CloseReason;\nimport javax.websocket.Endpoint;\nimport javax.websocket.EndpointConfig;\nimport javax.websocket.MessageHandler;\nimport javax.websocket.Session;\nimport java.io.IOException;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.UUID;\n\nimport com.mendix.core.Core;\n\npublic class TestEndpoint extends Endpoint {\n  Set<Session> sessions = new HashSet<>();\n\n  @Override\n  public void onOpen(Session session, EndpointConfig config) {\n    String sessionId = (String) config.getUserProperties().get(\"mxSessionId\");\n    ISession mxSession = Core.getSessionById(UUID.fromString(sessionId));\n    String username = mxSession.getUserName();\n    sessions.add(session);\n    session.addMessageHandler(new MessageHandler.Whole<String>() {\n      @Override\n      public void onMessage(String message) {\n        if (\"test message\".equals(message)) {\n          try {\n            session.getBasicRemote().sendText(\"test response:\" + username);\n            session.close();\n          } catch (IOException e) {\n            e.printStackTrace();\n          }\n        }\n      }\n    });\n\n    try {\n      session.getBasicRemote().sendText(\"socket opened\");\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }\n\n  @Override\n  public void onClose(Session session, CloseReason closeReason) {\n    System.out.println(\"Received onClose call with reason: \" + closeReason);\n    sessions.remove(session);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Java Security Policy Parameters Configuration\nDESCRIPTION: JVM parameters needed to configure Java security policy for APD in Mendix. These parameters specify the security policy files and framework to use.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-one/ig-one-prerequisites/ig-one-java-security-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nDjava.security.policy==\"<project-folder>\\resources\\apmtool\\mx5\\apm_cloud_security_all.policy\"\nDorg.osgi.framework.security=osgi\nDcom.mendix.policy.file=\"**<new file from step 2.>**\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Button Helper Styles in SCSS\nDESCRIPTION: This snippet demonstrates how to disable helper styles for the button widget in Mendix by setting the `$exclude-button-helpers` variable to `true` in the *exclusion-variables.scss* file.  This allows you to selectively remove additional styling applied to buttons, providing more control over their appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_11\n\nLANGUAGE: scss\nCODE:\n```\n\"$exclude-button-helpers: true;\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Required Message Property in TextBox XML\nDESCRIPTION: XML configuration for adding a required message property to a TextBox widget. Defines a textTemplate property that supports translatable validation messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"requiredMessage\" type=\"textTemplate\" required=\"false\">\n    <caption>Required message</caption>\n    <description/>\n    <translations>\n        <translation lang=\"en_US\">An input text is required</translation>\n    </translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Logging Request State Statistics in Mendix\nDESCRIPTION: This code snippet provides a sample log message in JSON format that contains request state statistics when `TRACE` level logging is enabled for the `RequestStatistics` log node. It includes details about session ID, action type, and the number of objects per entity type in the request state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/runtime-java/transient-objects-garbage-collecting.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTRACE: Request-State statistics: {\n  session: \"fd0771fe-8c12-49cf-8667-921058b116a3\",\n  action: \"execute-action\",\n  total: 5,\n  details: {\n    \"MyModule.MyEntity\": 3,\n    \"AnotherModule.SomeEntity\": 2\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting Common Section Link\nDESCRIPTION: This snippet provides a link to the common properties section for table widgets. It is useful for referencing shared attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/table.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Variable in Mendix Expression\nDESCRIPTION: Example showing how to create a $Discount variable and assign it a value of 0.5 (50%) in a Mendix expression. This variable can then be used in subsequent activities to calculate values like customer prices.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/variable-activities/create-variable.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\n0.5\n```\n\n----------------------------------------\n\nTITLE: Drop-down Input Control Structure in HTML\nDESCRIPTION: Shows the HTML structure for a drop-down input control, with 'form-control' class applied to the select element and multiple option elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<select class=\"form-control\">\n\t<option value=\"\"></option>\n\t<option value=\"a1\">a1</option>\n\t<option value=\"a2\">a2</option>\n\t<option value=\"a3\">a3</option>\n</select>\n```\n\n----------------------------------------\n\nTITLE: DATEPART Function Syntax in OQL\nDESCRIPTION: The DATEPART function retrieves a specified element from date/time values as an integer. It takes a datepart, a date expression, and an optional timezone parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-datepart.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nDATEPART ( datepart , date_expression [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Extracting Seconds in Java Query\nDESCRIPTION: This snippet utilizes the `seconds-from-dateTime()` function in a Java context to obtain logs where the seconds portion of the DateAttribute is 30.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n//Logging.Log[seconds-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Applying Upgrade for Custom Resource Definitions\nDESCRIPTION: This command applies the Custom Resource Definitions (CRDs) needed for the Mendix Operator upgrade.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-upgrade-guide.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nkubectl apply -f crds.manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: JavaScript Module Export\nDESCRIPTION: Imports the `companyHeader` object from *company-header.js* and exports it as a module property in *main.js*. This makes the `companyHeader` style accessible for use in native mobile app styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n import {companyHeader} from “./company-header”;\n module.exports = {companyHeader};\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with XPath month-from-dateTime() Function in Java\nDESCRIPTION: This XPath query retrieves all logs where the month value of the DateAttribute is 12 (December). The function extracts just the month component from a datetime field to allow for month-specific filtering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[month-from-dateTime(DateAttribute) = 12]\n```\n\n----------------------------------------\n\nTITLE: Setting Up URL Rewrite Rules in IIS for Mendix App - XML\nDESCRIPTION: This XML configuration outlines the URL rewrite rules for various request handlers in a Mendix application. It specifies how URLs matching certain patterns are redirected to the local server. Each rule is structured to rewrite the URL to ensure proper handling of requests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n    <system.webServer>\n        <rewrite>\n            <rules>\n                <rule name=\"add x-forwarded-proto header\">\n                    <match url=\".*\" />\n                    <conditions logicalGrouping=\"MatchAll\" trackAllCaptures=\"false\" />  <serverVariables>\n                        <set name=\"HTTP_X_FORWARDED_PROTO\" value=\"https\" />\n                    </serverVariables>\n                    <action type=\"None\" />\n                </rule>\n                <rule name=\"xas\" stopProcessing=\"true\">\n                    <match url=\"^(xas/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"ws\" stopProcessing=\"true\">\n                    <match url=\"^(ws/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"ws-doc\" stopProcessing=\"true\">\n                    <match url=\"^(ws-doc/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"file\" stopProcessing=\"true\">\n                    <match url=\"^(file)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"link\" stopProcessing=\"true\">\n                    <match url=\"^(link/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"rest\" stopProcessing=\"true\">\n                    <match url=\"^(rest/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"rest-doc\" stopProcessing=\"true\">\n                    <match url=\"^(rest-doc/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"debugger\" stopProcessing=\"true\">\n                    <match url=\"^(debugger/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"oauth\" stopProcessing=\"true\">\n                    <match url=\"^(oauth/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n                <rule name=\"p\" stopProcessing=\"true\">\n                    <match url=\"^(p/)(.*)\" />\n                    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n                </rule>\n            </rules>\n        </rewrite>\n        <staticContent>\n            <mimeMap fileExtension=\".mxf\" mimeType=\"text/xml\" />\n            <clientCache cacheControlMode=\"DisableCache\" />\n        </staticContent>\n    </system.webServer>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Defining Position Attributes in JSON\nDESCRIPTION: This snippet outlines the structure for position attributes within a domain model in JSON. It includes definitions for latitude and longitude attributes, specifying types, default values, and access rights. These attributes are non-persistable and associated with the module role 'NanoflowCommons.User'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$Type\": \"DomainModels$Entity\",\n  \"attributes\": [\n    {\n      \"$ID\": \"96308176-77a3-4153-918d-eca357b7a3c6\",\n      \"$Type\": \"DomainModels$Attribute\",\n      \"$QualifiedName\": \"NanoflowCommons.Position.Latitude\",\n      \"type\": {\n        \"$ID\": \"48a212ff-4770-41de-8bfe-60ce6fc71142\",\n        \"$Type\": \"DomainModels$StringAttributeType\",\n        \"length\": 200\n      },\n      \"value\": {\n        \"$ID\": \"080d35f8-c985-49d5-80d3-97b62804dd0c\",\n        \"$Type\": \"DomainModels$StoredValue\",\n        \"defaultValue\": \"\"\n      },\n      \"name\": \"Latitude\",\n      \"documentation\": \"\",\n      \"exportLevel\": \"Hidden\"\n    },\n    {\n      \"$ID\": \"f99022e0-c5c1-49bf-a224-a15ae8cfab09\",\n      \"$Type\": \"DomainModels$Attribute\",\n      \"$QualifiedName\": \"NanoflowCommons.Position.Longitude\",\n      \"type\": {\n        \"$ID\": \"2325a944-8fc0-4410-b05a-df0636f9b672\",\n        \"$Type\": \"DomainModels$StringAttributeType\",\n        \"length\": 200\n      },\n      \"value\": {\n        \"$ID\": \"1d9026de-518a-4016-9638-41d2ef195669\",\n        \"$Type\": \"DomainModels$StoredValue\",\n        \"defaultValue\": \"\"\n      },\n      \"name\": \"Longitude\",\n      \"documentation\": \"\",\n      \"exportLevel\": \"Hidden\"\n    }\n  ],\n  \"accessRules\": [\n    {\n      \"$ID\": \"37a564c4-175b-460a-a312-615dbdb4784b\",\n      \"$Type\": \"DomainModels$AccessRule\",\n      \"memberAccesses\": [\n        {\n          \"$ID\": \"45ec89e2-000b-454c-9eb7-a264fa506409\",\n          \"$Type\": \"DomainModels$MemberAccess\",\n          \"attribute\": \"NanoflowCommons.Position.Latitude\",\n          \"association\": \"\",\n          \"accessRights\": \"ReadWrite\"\n        }\n      ],\n      \"moduleRoles\": [\n        \"NanoflowCommons.User\"\n      ],\n      \"allowCreate\": true,\n      \"allowDelete\": true,\n      \"defaultMemberAccessRights\": \"ReadWrite\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Define IAM Policy for Storage Provisioner Admin Role in AWS\nDESCRIPTION: This IAM policy grants the Storage Provisioner admin role the necessary permissions to create and manage IAM roles, attach and detach policies, manage S3 buckets, and connect to RDS databases. Replace the placeholders for policy ARN, bucket name, AWS region, account ID, and database ID with appropriate values.  This policy is crucial for the Mendix Operator to provision resources for new environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"LimitedAttachmentPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:AttachRolePolicy\",\n                \"iam:DetachRolePolicy\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"ArnEquals\": {\n                    \"iam:PolicyArn\": [\n                        \"<policy_arn>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"ManageRoles\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateRole\",\n                \"iam:TagRole\",\n                \"iam:DeleteRole\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:role/mendix-*\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowFileCleanup\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\",\n                \"s3:ListBucket\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowCreateRDSTenants\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"rds-db:connect\"\n            ],\n            \"Resource\": [\n                \"arn:aws:rds-db:<aws_region>:<account_id>:dbuser:<database_id>/<database_user>\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Enhancing Header to Handle Taps for State Toggling\nDESCRIPTION: Modifies the renderHeader method to execute the toggleCollapsed method when the header is tapped, and it dynamically changes its symbol based on the collapsed state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_31\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = () => {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    const view = (\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        <View style={this.styles.header}>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n            <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n            <Text style={this.styles.headerContent}>{this.state.collapsed ? \"+\" : \"-\"}</Text>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        </View>\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    );\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n};\n```\n\n----------------------------------------\n\nTITLE: Constructing XPath Query in Studio Pro\nDESCRIPTION: In Mendix Studio Pro, a simple XPath constraint is constructed by selecting the entity and writing the constraint directly in the editor. This example filters for the customer named 'Jansen'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n[Name='Jansen']\n```\n\n----------------------------------------\n\nTITLE: Defining Workflow States in Mendix\nDESCRIPTION: This code snippet defines the various states a workflow can have in Mendix, including In Progress, Paused, Incompatible, Failed, Completed, and Aborted. It also describes the allowed actions for each state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-engine.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| State        | Description                                                  | Allowed actions                                              |\n| ------------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| In Progress   | The state of the workflow instance when it starts. This state indicates that the workflow instance can be executed. | <ul><li>Abort&nbsp;workflow</li><li>Restart&nbsp;workflow</li><li>Generate&nbsp;jump&#8209;to&nbsp;options</li><li>Apply&nbsp;jump&#8209;to&nbsp;option</li><li>Pause&nbsp;workflow</li></ul> |\n| Paused       | This state prevents the workflow from being executed.        | <ul><li>Abort&nbsp;workflow</li><li>Restart&nbsp;workflow</li><li>Generate&nbsp;jump&#8209;to&nbsp;options</li><li>Apply&nbsp;jump&#8209;to&nbsp;option</li><li>Unpause&nbsp;workflow</li></ul> |\n| Incompatible | This state indicates that this workflow instance is not compatible with the current workflow in the model.<br><br>The attribute **CanBeRestarted** indicates whether the workflow can be restarted, the attribute **CanBeContinued** indicates whether the workflow can be marked as resolved, the **CanApplyJumpTo** attribute indicates whether a jump-to option can be applied to the workflow.<br><br>Resolving the Incompatible state puts the workflow in either **In Progress** or **Paused** state depending on its previous state before it became Incompatible. | <ul><li>Abort&nbsp;workflow</li><li>Restart&nbsp;workflow</li><li>Generate&nbsp;jump&#8209;to&nbsp;options</li><li>Apply&nbsp;jump&#8209;to&nbsp;option</li><li>Mark&nbsp;as&nbsp;resolved</li></ul> |\n| Failed       | This state indicates that an exception has occurred during execution of the workflow or the workflow-initiated microflow. The exception details can be found in the **Reason** attribute.<br><br>{{% alert color=\"info\" %}}Failed workflows should be either retried/restarted to fix the problem or aborted to clean up user tasks that are part of the failed workflows.{{% /alert %}} | <ul><li>Abort&nbsp;workflow</li><li>Restart&nbsp;workflow</li><li>Generate&nbsp;jump&#8209;to&nbsp;options</li><li>Apply&nbsp;jump&#8209;to&nbsp;option</li><li>Retry&nbsp;workflow</li></ul> |\n| Completed    | This state indicates that the workflow has successfully completed. |                                                              |\n| Aborted      | This state indicates that this workflow instance has been aborted by a user. The reason is stored in the **Reason** member. |                                                              |\n```\n\n----------------------------------------\n\nTITLE: URL-Encoded Branch Name in Request\nDESCRIPTION: HTTP GET request demonstrating how to retrieve a branch with a name containing slashes by using URL encoding in the path parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_8\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/repositories/c0af1725-edae-4345-aea7-2f94f7760e33/branches/branches%2Fdevelopment HTTP/1.1\nHost: repository.api.mendix.com\nAccept: */*\nAuthorization: MxToken hZUPhAV4ELPrRm7U7JAKf5BnxJk6q7dcsvFdw6ZR4wRYdv7egHjwHEYBwXY4RkSZrAWde3XqVAQkxZNPysvHcpquA9sK9bsKmcTN\n```\n\n----------------------------------------\n\nTITLE: Alert Notification Markup for Sidebar Toggle\nDESCRIPTION: Markup code showing an alert notification about sidebar toggle limitations in native mobile pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/layout/sidebar-toggle-button.md#2025-04-21_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n{{% alert color=\"info\" %}}Sidebar toggles are not supported on native mobile pages, as scroll container regions are not supported.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Complete Loaded Method with Dockable Pane Registration\nDESCRIPTION: The complete implementation of the loaded method showing how the dockable pane is registered alongside other extension menu items. The highlighted lines show the newly added dockable pane registration code.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nasync loaded() {\n    // Add a menu item to the Extensions menu\n    await studioPro.ui.extensionsMenu.add({\n        menuId: \"myextension.MainMenu\",\n        caption: \"MyExtension Menu\",\n        subMenus: [\n            { menuId: \"myextension.ShowTabMenuItem\", caption: \"Show tab\" },\n        ],\n    });\n\n    const paneHandle = await studioPro.ui.panes.register(\n        {\n            title: \"My Extension Pane\",\n            initialPosition: \"right\",\n        },\n        {\n            componentName: \"extension/myextension\",\n            uiEntrypoint: \"dockablepane\",\n        });\n\n    // Open a tab when the menu item is clicked\n    studioPro.ui.extensionsMenu.addEventListener(\n        \"menuItemActivated\",\n        (args) => {\n            if (args.menuId === \"myextension.ShowTabMenuItem\") {\n                studioPro.ui.tabs.open(\n                    {\n                        title: \"My Extension Tab\",\n                    },\n                    {\n                        componentName: \"extension/myextension\",\n                        uiEntrypoint: \"tab\",\n                    }\n                );\n            }\n        }\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Polar Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a polar area chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"type\": \"scatterpolar\",\n  \"r\": [ 34, 11, 39, 37, 34 ],\n  \"theta\": [ \"A\", \"B\", \"C\", \"D\", \"A\" ],\n  \"fill\": \"toself\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Generating RSA Private Key with OpenSSL for iOS App Signing\nDESCRIPTION: This command uses OpenSSL to generate a 2048-bit RSA private key for iOS app signing. The private key is saved to a file named 'private.key' in the root directory of the C: drive.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" genrsa -out \"C:\\private.key\" 2048\n```\n\n----------------------------------------\n\nTITLE: Configuring Bubble Map in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a bubble map with colored markers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"lon\": [ 100, 400 ],\n  \"lat\": [ 0, 0 ],\n  \"type\": \"scattergeo\",\n  \"marker\": {\n    \"color\": [ \"red\", \"blue\" ],\n    \"size\": [ 20, 50 ]\n  },\n  \"mode\": \"marker\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Using OQL RANGEBEGIN Function in SQL\nDESCRIPTION: The `RANGEBEGIN` function in OQL is used to extract the initial value of a range parameter. It is typically used within datasets when generating reports in Mendix. The function takes a range parameter and is used to filter data based on its beginning value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangebegin.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nRANGEBEGIN ( $range )\n```\n\n----------------------------------------\n\nTITLE: Debugging Authorization Error Response Example (Log)\nDESCRIPTION: Example log output showing an authorization error where the authorization code is missing, with a status code 200 and error indicating the user is not assigned to the client application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_11\n\nLANGUAGE: log\nCODE:\n```\nhandleAuthorization: Authorization code missing\nStatusCode = 200\nerror = access_denied\nerror_description = user is not assigned to the client application.\n```\n\n----------------------------------------\n\nTITLE: Creating Resource with Validation Error in HTTP\nDESCRIPTION: Illustrates a POST request that fails due to validation rules, resulting in a 422 status code.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_9\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST http://localhost:8080/odata/CustomerApi/v1/Customers\n\n{\n    \"FirstName\": \"Jimmy\",\n    \"Title\": \"Engineer\",\n    \"CompanyName\": \"CustKo\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Runtime Licenses in PCLM\nDESCRIPTION: Command to list all Mendix Runtime (application) licenses installed in the PCLM server, showing license IDs, type, expiration date, creation date, and product type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli license runtime list \\\n   -s <pclm-http-url> \\\n   -u <admin-user> \\\n   -p <admin-password> \\\n   -t <custom-ca-cert-path>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cordova for Video Player\nDESCRIPTION: This XML snippet shows the necessary Cordova configuration lines required to enable access to various video providers like YouTube, Vimeo, Dailymotion, and MP4 files in hybrid mobile apps built with Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/video-player.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<allow-navigation href=\"*://*youtube.com/*\" />\n<allow-navigation href=\"*://*youtu.be/*\" />\n<allow-navigation href=\"*://*ytimg.com/*\" />\n<allow-navigation href=\"*://*dailymotion.com/*\" />\n<allow-navigation href=\"*://*vimeo.com/*\" />\n<allow-navigation href=\"*://*noembed.com/*\" />\n<allow-navigation href=\"*://*.mp4\" />\n```\n\n----------------------------------------\n\nTITLE: Displaying Attached Images in a List in Mendix\nDESCRIPTION: This snippet demonstrates how to configure a list view in Mendix to display dynamically uploaded images, allowing users to manage their attachments by viewing and deleting them as necessary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/attach-images.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **New Report** page.\n\n2. Open **Toolbox**, search for *list view* and drag it under the **Attach Images** button (*inside* the data view).\n\n3. Open the **Properties** pane of the list view and do the following:\n\n    1. Click the **Entity (path)** property.\n    2. In the **Select Entity** dialog box, choose the **Receipt** entity over **Receipt_Report** association, and click **Select**:\n\n4. Choose **Yes** for the question to fill in the contents of the widget.\n\n5. Open **Toolbox**, search for **Layout grid** and drag it to the list view.\n\n6. Choose **4,4,4** for the layout grid:\n\n7. In the list view, drag the dynamic image widget into the first column and **Name** into the second.\n\n8. Delete other widgets that were added automatically.\n\n9. Open **Toolbox**, search for **Delete button** and drag it into the third column:\n\n10. Open **Properties** pane of the button and in the **Button style** property, change **Default** to **Danger**.\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Properties in Mendix Widget\nDESCRIPTION: Defines properties in the Group Box widget XML to allow the use of custom icons for indicating expand and collapse actions. Dependencies include Mendix environment for widget creation, and key properties are 'expandIcon' and 'collapseIcon' of type 'icon'. Expected output is a widget configuration that supports custom icons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_33\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\\n<widget id=\\\"com.mendix.widget.native.groupbox.GroupBox\\\" pluginWidget=\\\"true\\\" offlineCapable=\\\"true\\\" supportedPlatform=\\\"Native\\\"\\n    xmlns=\\\"http://www.mendix.com/widget/1.0/\\\"\\n    xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\\\">\\n    <name>Group box</name>\\n    <description />\\n    <icon />\\n    <properties>\\n        <propertyGroup caption=\\\"General\\\">\\n            <property key=\\\"content\\\" type=\\\"widgets\\\" required=\\\"false\\\">\\n                <caption>Content</caption>\\n                <description>Widgets to place inside.</description>\\n            </property>\\n            <property key=\\\"headerCaption\\\" type=\\\"string\\\" required=\\\"false\\\">\\n                <caption>Header caption</caption>\\n                <description />\\n            </property>\\n            <property key=\\\"expandIcon\\\" type=\\\"icon\\\" required=\\\"false\\\">\\n                <caption>Expand icon</caption>\\n                <description>Icon used to indicate that the group box can be expanded.</description>\\n            </property>\\n            <property key=\\\"collapseIcon\\\" type=\\\"icon\\\" required=\\\"false\\\">\\n                <caption>Collapse icon</caption>\\n                <description>Icon used to indicate that the group box can be collapsed.</description>\\n            </property>\\n        </propertyGroup>\\n    </properties>\\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section Snippet\nDESCRIPTION: This snippet includes the design properties for buttons, referenced from an external markdown file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/button-widgets/button-properties.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Histogram in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a basic histogram.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 0, 2, 1, 3, 4, 2 ],\n  \"type\": \"histogram\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: SQL Insert Query for New Employee\nDESCRIPTION: SQL query to insert a new Employee record into the database\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\n INSERT INTO \"myfirstmodule$employee\" (\"id\",\n \"firstname\",\n \"dateofbirth\",\n \"jobtitle\",\n \"department\",\n \"lastname\")\n VALUES (?,\n ?,\n ?,\n ?,\n ?,\n ?)\n```\n\n----------------------------------------\n\nTITLE: TypeScript Configuration\nDESCRIPTION: TypeScript compiler configuration settings in tsconfig.json.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"compilerOptions\" : {\n\t\t\"module\" : \"commonjs\",\n\t\t\"target\" : \"es2020\",\n        \"strict\": true\n\t},\n\t\"files\" : [\n\t\t\"script.ts\"\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Entity Path for Template Grid in Mendix 8\nDESCRIPTION: Specifies how to set up the entity path for a template grid, determining which objects will be displayed. For top-level grids, objects are passed from the calling microflow. Nested grids can use an entity path or a microflow to retrieve objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/template-grid-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nEntity (Path): [Select entity or entity path]\n```\n\n----------------------------------------\n\nTITLE: Adding Years to a Date in Java\nDESCRIPTION: Example of using the addYears function to add 11 years to a date. This function adds a specified number of years to a date and time value using the server's calendar.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\naddYears(dateTime(2007, 1, 1, 1, 1, 1), 11)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:01 CET 2018\"\n```\n\n----------------------------------------\n\nTITLE: Theme Configuration Code Example\nDESCRIPTION: Example code snippet showing the file management steps required for theme configuration in the app's theme folder. This involves renaming and moving theme variable files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-ui-resources/sap-native-resources-module.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// 1. Rename /theme/custom-variable.js to custom-variable-old.js\n// 2. Move horizon-custom-variable.js from /themesource/sap_native_resources/native to /theme\n// 3. Rename horizon-custom-variable.js to custom-variable.js\n```\n\n----------------------------------------\n\nTITLE: Converting Chart Type to Line Series\nDESCRIPTION: JSON configuration to change a chart series type to a line chart\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-advanced-tuning.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \"type\": \"line\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Nillable XML Attribute in Mendix OData\nDESCRIPTION: This XML snippet shows the configuration for making an attribute nillable in a Mendix OData service. Nillable attributes can have empty values encoded as explicit nulls in the response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/published-odata-entity.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<attribute name=\"MyAttribute\" nillable=\"true\" />\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for List Parameter in Request Body\nDESCRIPTION: Defines a JSON schema for an operation request body when the parameter is a list of objects. Each item in the list refers to a specific definition name based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{ \\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": [{ \\\"$ref\\\": \\\"#/definitions/#definition_name#\\\"}]\\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Font Styling\nDESCRIPTION: This CSS code demonstrates an anti-pattern for font styling in React Native for Mendix native apps. It attempts to define font weight directly, which can lead to inconsistencies across Android and iOS. Using specific font family names for each weight is recommended.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n\"export const bold = {\\n    fontFamily: \\\"Times New Roman\\\",\\n    fontWeight: \\\"bold\\\" | \\\"500\\\"\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Defining Default Glyph Constants in Container Component\nDESCRIPTION: Constants that define the default glyphs to use when no custom icons are provided. These reference Mendix's built-in glyphicon set for minus and plus symbols.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_35\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultCollapseIconGlyph = \"glyphicon-minus\";\nconst defaultExpandIconGlyph = \"glyphicon-plus\";\n```\n\n----------------------------------------\n\nTITLE: Setting Up Microflow Call Activity in Mendix Studio Pro with C#\nDESCRIPTION: Demonstrates how to create a microflow call activity, which enables one microflow to call another. It sets up the necessary objects and properties for the call.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nvar microflowCallActivity = currentApp.Create<IActionActivity>();\nvar microflowCallAction = currentApp.Create<IMicroflowCallAction>();\nmicroflowCallAction.MicroflowCall = currentApp.Create<IMicroflowCall>();\nmicroflowCallAction.MicroflowCall.Microflow = calledMicroflow.QualifiedName;\nmicroflowCallActivity.Action = microflowCallAction;\n\nmicroflowCallAction.OutputVariableName = outputVariableName;\n```\n\n----------------------------------------\n\nTITLE: Style Property Example CSS\nDESCRIPTION: Example CSS styling that demonstrates how to apply background color and text color to a widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/common-widget-properties.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\nbackground-color:lightblue; color:red;\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Greater than Operator\nDESCRIPTION: Explains the greater than operator in OQL, which checks if one value exceeds another.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n| `>` | Greater than | `Price > 9.80` returns true if price is 9.90, false if price is 9.80. |\n```\n\n----------------------------------------\n\nTITLE: Automatic Retry Behavior for Queued Actions\nDESCRIPTION: This snippet explains the automatic retry mechanism for queued actions, detailing the exponential backoff strategy for retry delays, up to a maximum of 11 retries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/process-queue.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nThe module will keep retrying exponentially for up to 11 retries. Initial retry will have a delay of 1 second (2^0), the second retry will take (2^1) seconds and the nth retry (2^n-1) seconds for a maximum of 2^10 = 1024 seconds.\n```\n\n----------------------------------------\n\nTITLE: Example Logs for Triggering Issues\nDESCRIPTION: The JSON logs show typical information messages related to trigger processing within Tekton. These logs help in diagnosing why triggers might not process as expected, though they may represent non-critical issues caused by configuration checks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\"level\":\"info\",\"ts\":\"2022-08-10T09:46:54.300Z\",\"logger\":\"eventlistener\",\"caller\":\"sink/sink.go:229\",\"msg\":\"interceptor stopped trigger processing: rpc error: code = FailedPrecondition desc = expression header.match('Event', 'configure-app') did not return true\",\"knative.dev/controller\":\"eventlistener\",\"eventlistener\":\"mx-pipeline-listener-generic\",\"namespace\":\"mxpipeline\",\"eventlistenerUID\":\"fcf84b8f-bcb1-46f1-bcd0-ae4b21d85f06\",\"/triggers-eventid\":\"627c82d7-1d9e-4dda-99c7-14166c86b385\",\"/trigger\":\"mx-pipline-configure-app-trigger-generic\"}\n```\n\n----------------------------------------\n\nTITLE: Common Section Properties for Drop-Down\nDESCRIPTION: This snippet references the common section properties for the drop-down widget, outlining standard attributes that apply broadly to all drop-down configurations. It serves as a foundation for understanding how to utilize these properties effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Building a Private Svix Server - Dockerfile Preparation\nDESCRIPTION: This snippet describes the creation of a Dockerfile to build a custom Svix server image that includes customer certificates. The Dockerfile specifies the base image and includes commands for updating the certificate trust chain.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n# Base build\nFROM svix/svix-server:v1.25.0\n# Add customer certification into system cert trust chain\nCOPY ./customer.crt /usr/local/share/ca-certificates/\nUSER root\nRUN update-ca-certificates\n# Start svix service\nUSER appuser\nCMD \\\n    set -ex ; \\\n    if [ ! -z \"$WAIT_FOR\" ]; then \\\n        WAIT_FOR_ARG=\"--wait-for 15\"; \\\n    fi ; \\\n    exec svix-server --run-migrations $WAIT_FOR_ARG\n```\n\n----------------------------------------\n\nTITLE: Installing CSI Secret Store Driver with Helm\nDESCRIPTION: This snippet demonstrates how to install the CSI Secret Store Driver using Helm on a Google Kubernetes Engine cluster. It requires Helm to be set up and running. The command adds the necessary Helm repo and installs the driver with an enabled syncSecret option to store secrets securely.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_25\n\nLANGUAGE: shell\nCODE:\n```\nhelm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts\nhelm -n kube-system install csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver \\\n--set syncSecret.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Retrieving CSRF Token in JavaScript\nDESCRIPTION: Method to acquire a session token for preventing cross-site request forgery (CSRF/XSRF) in Mendix applications using client-side JavaScript\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/best-practices-security.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmx.session.getConfig(\"csrftoken\")\n```\n\n----------------------------------------\n\nTITLE: Basic Widget Functions Snippet Include\nDESCRIPTION: Markdown snippet include statement for basic widget functions documentation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide8/performing-basic-functions-widgets.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: SQL UPPER Function Syntax\nDESCRIPTION: Syntax example for the UPPER function which converts string to uppercase.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_37\n\nLANGUAGE: sql\nCODE:\n```\nUPPER ( expression )\n```\n\n----------------------------------------\n\nTITLE: Initializing Doughnut Chart Configuration in JSON\nDESCRIPTION: This snippet showcases how to set up a doughnut chart in JSON format, indicating values, labels, and a central hole size. The expected output is a doughnut chart based on the specified parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"values\": [ 10, 20, 30 ],\n  \"labels\": [ \"Uganda\", \"Netherlands\", \"US\" ],\n  \"hole\": 0.4,\n  \"type\": \"pie\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Deprecating Mendix Internal M2EE API Classes and Interfaces\nDESCRIPTION: These classes and interfaces are deprecated in the Mendix internal M2EE API library. Developers relying on these internal components should be aware that these may be removed or changed in future releases, potentially breaking existing integrations. The deprecated elements include `com.mendix.m2ee.api.AdminAction`, `com.mendix.m2ee.api.AdminException`, `com.mendix.m2ee.api.IAppContainer`, `com.mendix.m2ee.api.IMxRuntime`, `com.mendix.m2ee.api.IMxRuntimeRequest.getContext` and `com.mendix.core.conf.Configuration.checkConfig`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.m2ee.api.AdminAction\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.m2ee.api.AdminException\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.m2ee.api.IAppContainer\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.m2ee.api.IMxRuntime\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.m2ee.api.IMxRuntimeRequest.getContext\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.core.conf.Configuration.checkConfig\"\n```\n\n----------------------------------------\n\nTITLE: Branch svn:ignore Property Value\nDESCRIPTION: Example of the svn:ignore property value from a branch in a merge conflict scenario, showing different ignored files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nmodeler-merge-marker\n.mendix-cache\nResolveIgnoreConflict.mpr.lock\n*.launch\nResolveIgnoreConflict.mpr.bak\n.project\n.classpath\ndeployment\n```\n\n----------------------------------------\n\nTITLE: Displaying Text Widget Example in Markdown\nDESCRIPTION: This snippet shows how to include an image of a Text widget example using Markdown syntax in Hugo.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/text-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/pages/text-widgets/text-widget-example.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Getting Mendix App URL in Minikube\nDESCRIPTION: This command retrieves the URL for accessing the Mendix application running in Minikube, allowing users to access the app in their browser.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nminikube service mendix-app-service --url\n```\n```\n\n----------------------------------------\n\nTITLE: Defining File Property in XML for Mendix Pluggable Widget\nDESCRIPTION: XML snippet showing how to define a file property for a pluggable widget in Mendix. It specifies a non-required file property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_17\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"file\" type=\"file\" required=\"false\">\n\t<caption>File</caption>\n\t<description>Sample text file</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Uploading Package with cURL\nDESCRIPTION: cURL command to upload a deployment package to the Mendix Deploy API, including authentication headers and file upload.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\ncurl -v -F \"file=@%USERPROFILE%/Documents/Mendix/calc-main/releases/calc_1.0.0.45.mda\"  -X POST -H \"Mendix-Username: richard.ford51@example.com\" -H \"Mendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\" \"https://deploy.mendix.com/api/1/apps/calc/packages/upload?name=calc_1.0.0.45.mda\"\n```\n\n----------------------------------------\n\nTITLE: Handling SAML Authentication in Mendix Hybrid Apps\nDESCRIPTION: This JavaScript snippet demonstrates how to handle SAML authentication in a Mendix hybrid mobile app. It uses Cordova's InAppBrowser to manage redirects to and from the IdP for authentication purposes. The script listens for specific URL changes to determine when authentication is complete and then caches the authentication token locally. Key dependencies include the Cordova InAppBrowser plugin and the Mendix JavaScript API. Inputs include configuration details, while outputs include navigation changes and token storage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/implement-sso-on-a-hybrid-app-with-mendix-and-saml.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nMxApp.onConfigReady(function(config) {\n    var samlLogin = function() {\n        var samlWindow = cordova.InAppBrowser.open(config.unmodifiedRemoteUrl + \"SSO/\", \"_blank\", \"location=no,toolbar=no\");\n\n        var exitFn = function() {\n            navigator.app.exitApp();\n        };\n\n        samlWindow.addEventListener(\"exit\", exitFn);\n\n        var loop = setInterval(function() {\n            samlWindow.executeScript({\n                code: \"window.location.href;\"\n            }, function(href) {\n                if (href[0].toLowerCase().indexOf(config.unmodifiedRemoteUrl.toLowerCase()) == 0 && href[0].indexOf(\"SSO\") == -1) {\n                    samlWindow.executeScript({\n                        code: \"document.cookie;\"\n                    }, function(values) {\n                        samlWindow.removeEventListener(\"exit\", exitFn);\n\n                        var authPromise = new Promise(function(resolve, reject) {\n                            var token = new RegExp('AUTH_TOKEN=([^;]+)', 'g').exec(values[0]);\n                            if (token && token.length > 1) {\n                                mx.session.tokenStore.set(token[1]).then(resolve);\n                            } else {\n                                resolve();\n                            }\n                        });\n\n                        var closeWindow = function() {\n                            samlWindow.close();\n\n                            if (window.mx.afterLoginAction) {\n                                window.mx.afterLoginAction();\n                            }\n                        };\n\n                        authPromise.then(closeWindow);\n                    });\n                };\n            });\n        }, 1000);\n    }\n\n    config.ui.customLoginFn = samlLogin;\n});\n```\n\n----------------------------------------\n\nTITLE: Registering Application in Catalog via API\nDESCRIPTION: Details the process of registering a Mendix application to the Catalog using a Personal Access Token and application details\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/automate-registration.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nRequirements:\n* Personal Access Token\n* Application Name\n\nFollow Registration API steps to complete application registration\n```\n\n----------------------------------------\n\nTITLE: Creating OpenShift Route with Custom Certificate\nDESCRIPTION: Command to create an OpenShift edge route for the PCLM server with a custom certificate, key, and CA certificate. This enables secure HTTPS access to the PCLM server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\noc -n <namespace> create route edge --service=mx-privatecloud-license-manager \\\n    --cert=server.crt \\\n    --key=server.key \\\n    --ca-cert=ca.crt \\\n    --hostname=<hostname>\n```\n\n----------------------------------------\n\nTITLE: Refreshing Data Grid in Mendix Client\nDESCRIPTION: JSON request from the Mendix Client to refresh the data grid after an object has been deleted. It includes pagination and sorting options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"runtimeOperation\",\n    \"operationId\": \"d7OowNqyCU+2ZqE2+Fv6rg\",\n    \"params\": {},\n    \"options\": {\n        \"offset\": 0,\n        \"amount\": 20,\n        \"sort\": [],\n        \"wantCount\": true,\n        \"extraXpath\": \"\"\n    },\n    \"changes\": {},\n    \"objects\": [],\n    \"profiledata\": {\n        \"1714641974355-33\": 158\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: JVM SSL Renegotiation Parameter Configuration\nDESCRIPTION: JVM parameter to address SSL renegotiation compatibility issues in Java 6 update 21 and above. Allows unsafe renegotiation but introduces potential security vulnerabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/project-explorer/project/project-settings/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n-Dsun.security.ssl.allowUnsafeRenegotiation=true\n```\n\n----------------------------------------\n\nTITLE: Label Section Include Syntax\nDESCRIPTION: Markdown syntax for including the label section documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Executing Microflow with JSON in Mendix\nDESCRIPTION: This JSON payload triggers the execution of a Mendix microflow.  It specifies the \"executeaction\" action and the name of the microflow to execute (\"MyFirstModule.GetAllEmployees\").  The \"applyto\" parameter is set to \"none\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"executeaction\",\n   \"params\":{\n      \"actionname\":\"MyFirstModule.GetAllEmployees\",\n      \"applyto\":\"none\"\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204f418ba05e7c0\":55\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Custom Variables\nDESCRIPTION: Instructions to migrate custom variable modifications from Atlas 2 to Atlas 3 by selecting appropriate SCSS file options based on app level or reusable module creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme_atlas2/styles/web/sass/app/_custom-variables.scss\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme/web/custom-variables.scss\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nthemesource/your-module/web/custom-variables.scss\n```\n\n----------------------------------------\n\nTITLE: X.509 Certificate PEM Encoding\nDESCRIPTION: This code snippet represents the certificate in PEM (Privacy Enhanced Mail) format, which is a base64-encoded representation of the certificate enclosed in BEGIN CERTIFICATE and END CERTIFICATE markers. This format is commonly used for storing and exchanging certificates.\nSOURCE: https://github.com/mendix/docs/blob/development/static/attachments/releasenotes/deployment/mendix-cloud/mendixcloud.com-2019-09-12.crt.txt#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\\nMIIGPzCCBSegAwIBAgIQBXPPIKJXmEpyFIr+66Pw6TANBgkqhkiG9w0BAQsFADBg\\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\\nd3cuZGlnaWNlcnQuY29tMR8wHQYDVQQDExZSYXBpZFNTTCBUTFMgUlNBIENBIEcx\\nMB4XDTE5MDkxMjAwMDAwMFoXDTIxMTExMDEyMDAwMFowHDEaMBgGA1UEAwwRKi5t\\nZW5kaXhjbG91ZC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCr\\n4xkAGIRtEpr8r1KLhx31lLuV7QWpqdBmMivcz7kba5cqNX7M5acCO36WB9TaIeKy\\n6cWpJXoOIjE3je2ObHzPguRQazPNFlj8DmLYiSwFOCaPUjsVVLDB2KJlAtIK67pn\\nPfGv+FvHArMUejDOSppDglIMbZRIItu+eCHkyB8fTXJDVdkgkusbTt7uiFwrN0aR\\n/C4k+MbOeE/V4hJWlrgagicIxoxu2gLuSQHDz0/ApdZwIXg7JAmKUYiXeg2GwFim\\ndnuL3JQxvZB7p+AA/SUiMNfylhck0TYhr5pWy3vhtGKsNKyNGK98kL9CFs2xmUwa\\MRTz8HPelXQXhRRsCWBbAgMBAAGjggM3MIIDMzAfBgNVHSMEGDAWgBQM22yCSQ9K\\nZwq4FO56xEhSiOtWODAdBgNVHQ4EFgQUYl/fWfuUb7hF8kLfIyVx8068WHAwLQYD\\nVR0RBCYwJIIRKi5tZW5kaXhjbG91ZC5jb22CD21lbmRpeGNsb3VkLmNvbTAOBgNV\\nHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMD8GA1Ud\\nHwQ4MDYwNKAyoDCGLmh0dHA6Ly9jZHAucmFwaWRzc2wuY29tL1JhcGlkU1NMVExT\\nUlNBQ0FHMS5jcmwwTAYDVR0gBEUwQzA3BglghkgBhv1sAQIwKjAoBggrBgEFBQcC\\nARYcaHR0cHM6Ly93d3cuZGlnaWNlcnQuY29tL0NQUzAIBgZngQwBAgEwdgYIKwYB\\nBQUHAQEEajBoMCYGCCsGAQUFBzABhhpodHRwOi8vc3RhdHVzLnJhcGlkc3NsLmNv\\nbTA+BggrBgEFBQcwAoYyaHR0cDovL2NhY2VydHMucmFwaWRzc3lsLmNvbS9SYXBp\\nZFNMVExTUlNBQ0FHMS5jcnQwCQYDVR0TBAIwADCCAX8GCisGAQQB1nkCBAIEggFv\\nBIIBawFpAHcA7ku9t3XOYLrhQmkfq+GeZqMPfl+wctiDAMR7iXqo/csAAAFtJcD/\\nqwAABAMASDBGAiEAlm1+2YhAK1Rbe2mqz0LUoYzx+zldjrxPRfx5q/H7zhoCIQDb\\nSGDuaJxS+OyMcba+sTeywRtCEJPMmiI7pFYYS90PhQB2AId1v+dZfPiMQ5lfvfNu\\n/1aNR1Y2/0q1YMG06v9eoIMPAAABbSXBACgAAAQDAEcwRQIhAPECXQMNGX7M4iqV\\naNBze7zEV47Dp2J8VO7HO6esj5+xAiAOdbfc3RrfMqGo3zlbsYKY6GldSIaP1yhf\\nUXUDQQXERAB2AESUZS6w7s6vxEAH2Kj+KMDa5oK+2MsxtT/TM5a1toGoAAABbSXA\\n/zEAAAQDAEcwRQIhAMGUtqGuZmkmnHPtxDuwZBqOUhoYgW6ZFjqvv4Dh+4hGAiAW\\n0+w24JJtBB0rSG9kMUdkNHIIZ7wg5Sw2AyEC99w6bTANBgkqhkiG9w0BAQsFAAOC\\nAQEAP/rDeX26SWI9tSA4tLFIldydV+4oLxCSkYxu/drCWmAl6/UMBEBfaO4QUwuf\\nP0oi6BFn+7ADnAgxlSEXvf/mn1z8ALfle9fz/3+/F6H9sug10cUJiVzKdGS9uiAA\\nWvR6GBmv8bDr+aUD+s7Q32+K3a1/LCXxLm3FFeR9kmdTZMSbBOjujJMenytDq0ZO\\nZz4q2fKOdnYw24HF1f5z49F3pufaKGEm0lmrfyQphRZtPwtZVVGhpnB2a0i1j7/Y\\nJjRMWY0PrOVv9QxBbe+sGQVnYW21JYjHRV37bTj8rdNqn7xiloP7/AmkA3NhmrHT\\n8WLDsNIeyl9bwY/GCNxG9MjYTw==\\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Local Deployment Event Broker Configuration\nDESCRIPTION: Constants configuration for local deployment of the event broker service. Includes different server URL settings based on operating system environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/business-events.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nChannelName: local\nServerUrl:\n  Windows: localhost:9092\n  MacOS+Parallels: 10.211.55.2:9094\n  Linux+VirtualBox/KVM: <IP ADDRESS>:9094\nSummaryLogIntervalSeconds: 120\n```\n\n----------------------------------------\n\nTITLE: XML Properties Definition for TextBox Widget - XML\nDESCRIPTION: This XML snippet defines the properties section for the TextBox widget, including setting up property groups that enhance organizing and clarity for the widget properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n    <propertyGroup caption=\"General\">\n        <propertyGroup caption=\"Data source\">\n            <property key=\"textAttribute\" type=\"attribute\" onChange=\"onChangeAction\" >\n                <caption>Attribute (path)</caption>\n                <description/>\n                <attributeTypes>\n                    <attributeType name=\"String\"/>\n                </attributeTypes>\n            </property>\n        </propertyGroup>\n        <propertyGroup caption=\"Label\">\n            <systemProperty key=\"Label\" />\n        </propertyGroup>\n        <propertyGroup caption=\"Editability\">\n            <systemProperty key=\"Editability\"/>\n        </propertyGroup>\n        <propertyGroup caption=\"Visibility\">\n            <systemProperty key=\"Visibility\"/>\n        </propertyGroup>\n        <propertyGroup caption=\"Validation\">\n            <property key=\"requiredMessage\" type=\"textTemplate\" required=\"false\">\n                <caption>Required message</caption>\n                <description/>\n                <translations>\n                    <translation lang=\"en_US\">A input text is required</translation>\n                </translations>\n            </property>\n        </propertyGroup>\n    </propertyGroup>\n    <propertyGroup caption=\"Common\">\n        <systemProperty key=\"Name\"/>\n        <systemProperty key=\"TabIndex\"/>\n    </propertyGroup>\n    <propertyGroup caption=\"Events\">\n        <propertyGroup caption=\"Events\">\n            <property key=\"onChangeAction\" type=\"action\" required=\"false\">\n                <caption>On change</caption>\n                <description/>\n            </property>\n        </propertyGroup>\n    </propertyGroup>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Disabling Native Mobile Widget Styles in JavaScript\nDESCRIPTION: Configuration for disabling default Atlas UI styles for native mobile widgets by setting exclusion variables in exclusionVariables.js\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nexport const excludeButtonsHelpers = true;\n```\n\nLANGUAGE: javascript\nCODE:\n```\nexport const excludeButtons = true;\nexport const excludeButtonsHelpers = true;\n```\n\nLANGUAGE: javascript\nCODE:\n```\nexport const excludeButtons = true;\nexport const excludeButtonsHelpers = false;\n```\n\n----------------------------------------\n\nTITLE: Validating Input String Text in JavaScript Actions\nDESCRIPTION: This code snippet demonstrates how to validate input string text within a Mendix JavaScript action. It checks for undefined or empty string values and rejects the promise if validation fails, ensuring the action receives valid input. This function takes a string parameter 'text'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {string} text\n */\nfunction TextToSpeech(text) {\n    // BEGIN USER CODE    \n    if (text === undefined) {\n        // Reject when the parameter is set to 'empty' the value will be undefined \n        return Promise.reject(\"The Text parameter is required\");\n    }\n    if (text.trim() === \"\") {\n        // Reject when the text is an empty string \"\"\n        return Promise.reject(\"The Text parameter can not be empty\");\n    }\n    /* implementation */\n    // END USER CODE\n  }\n```\n\n----------------------------------------\n\nTITLE: Incorrect CSS Styling Example\nDESCRIPTION: This CSS snippet shows an incorrect way to style text in Mendix native mobile apps, particularly on Android. Using `fontWeight` with numerical values (e.g., 550) or string values (e.g., 'bold') might lead to inconsistent results across platforms.  It's recommended to use postscript names instead.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n\"{ \\n    fontWeight: 550\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Deploy-time SSO Constants\nDESCRIPTION: Configuration of OIDC SSO module using app constants with security best practices for Identity Provider setup\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Constants\nCODE:\n```\n// Mandatory Constants\nClientID: \"your_client_id\"\nClientAlias: \"your_client_alias\"\nClientSecret: \"your_client_secret\"\nAutomaticConfigurationURL: \"https://your-idp/.well-known/openid-configuration\"\n\n// Optional Constants\nClientAuthenticationMethod: \"client_secret_basic\"\nCallbackResponseMode: \"Query\"\nSelectedScope: \"openid profile email\"\n```\n\n----------------------------------------\n\nTITLE: Defining XPath Query Operators in Mendix\nDESCRIPTION: This snippet describes various XPath operators available for use in query constraints in Mendix applications. These include comparison and logical operators which can be utilized within Studio Pro. The operators have associated example usage and their return values, which help in understanding the expected behavior during query evaluations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n| Operator | Description | Example | Return value |\n| --- | --- | --- | --- |\n| `=` | Equal to | `price = 9.80` | true if price is 9.80, false if price is 9.90 |\n| `!=` | Not equal to | `price != 9.80` | true if price is 9.90, false if price is 9.80 |\n| `<` | Less than | `price < 9.80` | true if price is 9.70, false if price is 9.80 |\n| `<=` | Less than or equal to | `price <= 9.80` | true if price is 9.80, false if price is 9.90 |\n| `>` | Greater than | `price > 9.80` | true if price is 9.90, false if price is 9.80 |\n| `>=` | Greater than or equal to | `price >= 9.80` | true if price is 9.80, false if price is 9.70 |\n| `or` | Or | `price = 9.80 or price = 9.70` | true if price is 9.80, false if price is 9.60 |\n| `and` | And | `price = 9.80 and amount = 1` | true if price is 9.80 and amount is 1, false if price is 9.70 and amount is 1, false if price is 9.80 and amount is 2, false if price is 9.70 and amount is 2 |\n```\n\n----------------------------------------\n\nTITLE: Downloading Package via HTTP GET (Deprecated)\nDESCRIPTION: Deprecated endpoint for downloading a specific deployment package. Use Retrieve Package with url=true instead.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_5\n\nLANGUAGE: http\nCODE:\n```\nGET /api/1/apps/calc/packages/b3d14e53-2654-4534-b374-9179a69ef3cf/download HTTP/1.1\nHost: deploy.mendix.com\nAccept: */*\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Deploying Mendix Project Model to Cloud\nDESCRIPTION: The deployment process involves converting a Mendix project model (MPK) to a runtime-compatible MDA format through MX Build, using a Buildpack to manage environment configuration and service bindings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/runtime-deployment.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Deployment Process\n- Convert MPK to MDA\n- Configure Cloud Foundry environment\n- Push application using Buildpack\n```\n\n----------------------------------------\n\nTITLE: Example: Creating Project with Custom Name and Location\nDESCRIPTION: Example command showing creation of a new Mendix project with specified name and output directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mx-command-line-tool.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmx create-project --app-name \"MyFirstApp\" --output-dir \"C:/Projects/MyFirstApp\"\n```\n\n----------------------------------------\n\nTITLE: Defining Table Structure for Database Query Types in Markdown\nDESCRIPTION: This code snippet defines a markdown table structure explaining different types of database queries executed by the Mendix application, including inserts, transactions, updates, selects, and deletes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/metrics.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Type             | Explanation                                                                                                     |\n|------------------|-----------------------------------------------------------------------------------------------------------------|\n| **inserts**      | Number of SQL `INSERT INTO` statements per second. These add new rows of data to a table in the database.       |\n| **transactions** | Number of SQL transactions per second. A transaction is a unit of work that is performed against a database.    |\n| **update**       | Number of SQL `UPDATE` statements per second. The SQL `UPDATE` query modifies the existing records in a table.  |\n| **select**       | Number of SQL `SELECT` statements per second. The SQL `SELECT` statement fetches data from a database table that returns this data in the form of a result table. |\n| **delete**       | Number of SQL `DELETE` statements per second. The SQL `DELETE` query deletes the existing records from a table. |\n```\n\n----------------------------------------\n\nTITLE: OQL ORDER BY Syntax\nDESCRIPTION: This code snippet shows the general syntax of the ORDER BY clause in OQL. It includes the `order_by_expression`, which specifies the attribute or alias to sort on, and the optional `ASC` or `DESC` keywords to specify ascending or descending order, respectively. ASC is the default if neither is specified.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-order-by-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n\"ORDER BY\\n{\\n\t\torder_by_expression [ ASC | DESC ]\\n\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Pie/Doughnut Chart Widget Styles in JavaScript\nDESCRIPTION: Defines a JavaScript object to style a Pie/Doughnut Chart widget in Mendix Native apps. Styles include color, font, and padding customizations for slices. Requires 'ViewStyle' properties for full customization and offers a color palette for slices without a specific color configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_piedoughnutchart_PieDoughnutChart = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  slices: {\n    customStyles: {\n      any_custom_key: {\n        slice: {\n          color: null, // Applies a color to the slice (string). If labels are configured to be shown, each label will be the same color as its corresponding slice.\n          fontFamily: null, // Applies a font type to the slice label (string).\n          fontSize: null, //  Applies a size to the slice label (number).\n          fontStyle: null, // Applies a font style to the slice label (**normal** or **italic**).\n          fontWeight: null, // Applies a font weight to the slice label (\"normal\" or \"bold\" or \"100\"-\"900\" ascending by increments of 100).\n        },\n      },\n    },\n    colorPalette: null, // Provides colors to slices that do not have a slice color configured (string with list of colors separated by a ';').\n    innerRadius: null, //  Applies an inner radius to the chart when in doughnut presentation mode (number).\n    padding: null, // Applies padding to all sides of the chart (number).\n    paddingBottom: null, // Applies padding to the bottom side of the chart (number).\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the chart (number).\n    paddingLeft: null, // Applies padding to the left side of the chart (number).\n    paddingRight: null, // Applies padding to the right side of the chart (number).\n    paddingTop: null, // Applies padding to the top side of the chart (number).\n    paddingVertical: null, // Applies padding to the vertical sides of the chart (number).\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Expanded Kubernetes Cluster Role for Help Me Feature\nDESCRIPTION: Shell script to create a more comprehensive service account, cluster role, and cluster role binding with additional permissions for monitoring and troubleshooting Kubernetes resources\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-azure.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# create ServiceAccount, ClusterRole, and ClusterRoleBinding\nkubectl apply -f << EOF -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n  annotations:\n    kubernetes.io/service-account.name: mxplatform-cicd\ntype: kubernetes.io/service-account-token\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n    name: mxplatform-cicd\nrules:\n- apiGroups:\n    - \"\"\n    resources:\n    - namespaces\n    verbs:\n    - list\n- apiGroups:\n    - \"\"\n    resources:\n    - deployments\n    verbs:\n    - get\n    - list\n    - watch\n- apiGroups:\n    - \"\"\n    resources:\n    - pods\n    verbs:\n    - get\n    - list\n- apiGroups:\n    - \"\"\n    resources:\n    - pods/log\n    verbs:\n    - get\n- apiGroups:\n    - \"\"\n    resources:\n    - events\n    verbs:\n    - get\n    - list\n- apiGroups:\n    - privatecloud.mendix.com\n    resources:\n    - storageplans\n    verbs:\n    - list\n- apiGroups:\n    - privatecloud.mendix.com\n    resources:\n    - mendixapps\n    verbs:\n    - '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n    name: mxplatform-cicd\nsubjects:\n- kind: ServiceAccount\n    name: mxplatform-cicd\n    namespace: kube-system\nroleRef:\n    kind: ClusterRole\n    name: mxplatform-cicd\n    apiGroup: rbac.authorization.k8s.io\nEOF\n\n# get service account token:\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.data.token}'|base64 -d\n# for openshift cluster\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.metadata.annotations.openshift\\.io/token-secret\\.value}'\n```\n\n----------------------------------------\n\nTITLE: Automatic Client Registration - Authorization Code and Refresh Token\nDESCRIPTION: JSON payload for registering a client with authorization code and refresh token grant types, including redirect URIs and scopes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/oidc-provider.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"client_id\" : \"ClientID\",\n    \"client_name\" : \"ClientName\",\n    \"client_secret\" : \"ClientSecret\",\n    \"redirect_uris\" : [ \"http://localhost:8081/oauth/v2/callback\" ],\n    \"post_logout_redirect_uris\" : [\"http://localhost:8081/logout\"],\n    \"grant_types\": [ \"authorization_code\" , \"refresh_token\"],\n    \"scope\": \"openid offline_access\" \n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query with not() in Studio Pro\nDESCRIPTION: This query retrieves customers whose names are not equal to 'Jansen'. It demonstrates the basic usage of the `not()` function to negate a condition within an XPath expression in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[not(Name = 'Jansen')]\n```\n\n----------------------------------------\n\nTITLE: Customizing DTAP Endpoint with NPM Parameter\nDESCRIPTION: Configure target environment for hybrid mobile app using environment parameter in NPM package command\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/build-hybrid-apps/build-hybrid-locally.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run package -- --env target=test\n```\n\n----------------------------------------\n\nTITLE: Importing Style Arrays from Snazzy Maps\nDESCRIPTION: This JSON snippet represents a style array from the Snazzy Maps website, which can be adopted for application in the Google Maps widget. By copying and pasting this style array into the widget, users can quickly apply pre-defined aesthetic tweaks to their maps. Dependency includes access to the Snazzy Maps website and an operational Google Maps widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/style-google-maps.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n[{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":13}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#144b53\"},{\"lightness\":14},{\"weight\":1.4}]},{\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#08304b\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#0c4152\"},{\"lightness\":5}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#0b434f\"},{\"lightness\":25}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#0b3d51\"},{\"lightness\":16}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"transit\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#146474\"}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#021019\"}]}]\n```\n\n----------------------------------------\n\nTITLE: Opening Visual Studio Code\nDESCRIPTION: Command to open Visual Studio Code in the current directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ code .\n```\n\n----------------------------------------\n\nTITLE: Mendix Access Logs API Response Format\nDESCRIPTION: Example JSON response from the access logs API endpoint. Returns environment ID, date timestamp, and a signed download URL for accessing the logs. The download URL includes an expiration timestamp and signature for security.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_38\n\nLANGUAGE: text\nCODE:\n```\n{\n    \"Environment\": \"38471410-861f-47e5-8efc-2f4b16f04005\",\n    \"Date\": 1536451200000,\n    \"DownloadUrl\": \"https://logsapi-prod-2-eu-central-1.mendix.com/v1/rtr-logs/38471410-861f-47e5-8efc-2f4b16f04005/2021-06-12?expire=20210616105139&signature=0D5D1D81153BD12634AB03DD388259A416AE55479E8A8983CB9E3BD524183A041767262B9A9355BB48407ABFC98FD42094DDAB61005E558F0DA0441F4C0DFA3DAB38D03A9CF8F713C2187040669709848795BD5B32715F6917523BF08CA1DFD79479D5B2ADD8EDC116BAFB7AE952BB6FF0F68276AF349B9FA9B7D2CE9AE7BB6BA220BF50FD6ED93BFC1073BCF641FF0FCE48B75DFD74E2FC6C856495B1285348C1EA38EF9BB04E0BFEF60DFA32C1C856446B8ED2E9BF87C4EC1C7950CC97FDB38659603431E90FCCF6F1F977C3E668784AC03395E02088FFF15ABA056C03F0262D84D1ECC9D287B3B7020F7DA68AEC74D1360BF906101F2D727C19AD0D9C77EC\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Measurement and Dimension Styles\nDESCRIPTION: This JSON snippet outlines the styles and behaviors for measurements in a modeling application. It describes how to customize dimensions, text colors, highlight materials, and other aesthetic aspects of measurements for better visualization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"dimension\": {\n        \"text\": {\n            \"color\": 0,\n            \"flatToScreen\": true,\n            \"font\": 1,\n            \"lineGapFactor\": 0.25,\n            \"lineFactor\": 0.25,\n            \"hasBorder\": false,\n            \"isHollow\": false,\n            \"backgroundColor\": 39321,\n            \"labelTextColor\": 16777215,\n            \"textSelectionColor\": 16777215,\n            \"textHighlightColor\": 16777215,\n            \"selectionBackgroundColor\": 39321,\n            \"highlightBackgroundColor\": 6151645,\n            \"height\": 12,\n            \"fontFamily\": \"Arial\"\n        },\n        \"associationMaterial\": {\n            \"diffuse\": 18761,\n            \"linewidth\": 3\n        },\n        \"associationHighlightMaterial\": {\n            \"diffuse\": 6151645,\n            \"specular\": 0,\n            \"shininess\": 1,\n            \"linewidth\": 3\n        },\n        \"pointOnTopColor\": {\n            \"diffuse\": 14226709\n        },\n        \"arrowLine\": {\n            \"color\": 8886442\n        },\n        \"extensionLine\": {\n            \"color\": 8886442\n        },\n        \"selectionColor\": 39321,\n        \"highlightColor\": 6151645,\n        \"widelineHighlightColor\": {\n            \"linewidth\": 3,\n            \"diffuse\": 14226709\n        },\n        \"meshHighlightColor\": 14226709,\n        \"overwrite\": true\n    },\n    \"measurement\": {\n        \"autoPosition\": false,\n        \"highlightColor\": {\n            \"diffuse\": 14226709,\n            \"specular\": 1,\n            \"shininess\": 1\n        },\n        \"pickingMaterial\": {\n            \"diffuse\": 12156222,\n            \"specular\": 0,\n            \"shininess\": 0\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Inline Count with OData $inlinecount\nDESCRIPTION: Shows how to include an inline count of returned items in the query result using the $inlinecount option set to 'allpages'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_4\n\nLANGUAGE: OData\nCODE:\n```\n?$inlinecount=allpages\n```\n\n----------------------------------------\n\nTITLE: Conditional Header Rendering in GroupBox\nDESCRIPTION: Dynamic header rendering method that supports collapsibility and optional header captions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_45\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = (): ReactNode => {\n    const { collapsible, headerCaption } = this.props;\n\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>{headerCaption}</Text>\n            {this.renderIcon()}\n        </View>\n    );\n\n    if (collapsible) {\n        const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n        return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n    } else if (headerCaption) {\n        return view;\n    }\n\n    return null;\n};\n```\n\n----------------------------------------\n\nTITLE: Loop Type Properties\nDESCRIPTION: Logging property names for microflow action loop types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.17.md#2025-04-21_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\nListLoop\\nWhileLoop\n```\n\n----------------------------------------\n\nTITLE: End of Year Date Calculation in Java\nDESCRIPTION: Calculates the end of the year (23:59 on December 31) for a given date using the endOfYear function. Takes a Date and time parameter and returns a Date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nendOfYear(dateTime(2007, 2, 7, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Anonymous Users Properties Table\nDESCRIPTION: Markdown table describing the configuration properties for anonymous users in Mendix, including the allow/disallow setting and user role assignment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/security/app-security/anonymous-users.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Property              | Description                                                  |\n| --------------------- | ------------------------------------------------------------ |\n| Allow anonymous users | When **Yes** is selected, anonymous users are allowed. End-users do not have to sign in to access the application. <br />When **No** is selected, anonymous users are not allowed. End-users have to sign in to access the application. |\n| Anonymous user role   | The user role that end-users of your application have when they are not signed in. This tells the application which role should be automatically applied to anonymous users who access the app. The **Allow anonymous users** property should be set to **Yes** to select an anonymous user role. |\n```\n\n----------------------------------------\n\nTITLE: Running npm Configure for Mendix Native App\nDESCRIPTION: This shell command ensures that the configuration for the Mendix native app is up to date. Must be run after npm install to finalize setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run configure\n```\n\n----------------------------------------\n\nTITLE: Mendix Operator License Manager Configuration\nDESCRIPTION: YAML specification for configuring license manager with credentials and server URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  licenseManager:\n    credentialsSecretName: <secret-name>\n    serverURL: http://<pclm-http-url>\n```\n\n----------------------------------------\n\nTITLE: Debugging Token Endpoint Error Response Example (Log)\nDESCRIPTION: Example log output showing a 401 Unauthorized error when attempting to retrieve an access token, typically caused by incorrect client credentials.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_12\n\nLANGUAGE: log\nCODE:\n```\n401: Unauthorized\n    at OIDC.handleAuthorizationCode (CallRest : 'Call REST (POST)')\n    at OIDC.webCallback (SubMicroflow : 'handleAuthorizationCode')\nAdvanced stacktrace:\n    at com.mendix.integration.actions.microflow.RestCaIIAction.execute(RestCaIIAction.scala : 79)\n\nlatestHttpResponse:\nStatusCode - 401\nReasonPhrase - Unauthorized\nContent - {\"error\":\"invalid_client\",\"error_description\":\"client authentication failed\"}\n```\n\n----------------------------------------\n\nTITLE: On-Receive Notification Nanoflow in Mendix\nDESCRIPTION: Implements a nanoflow triggered when a local notification is received, demonstrating custom handling of notification events within the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-schedule-cancel.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nNanoflow: ON_ReceiveNotification\n- Log message: \"I triggered on receive notification\"\n```\n\n----------------------------------------\n\nTITLE: Changing Technical Contact Request Body in JSON\nDESCRIPTION: JSON structure for the request body when changing the Technical Contact of an app, specifying the new contact's user ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-4.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"technicalContact\": {\n    \"userId\": \"jane.doe@domain.tld\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Activating a License on Kubernetes - Bash\nDESCRIPTION: This command outlines how to set the License ID and License Key as environment variables when deploying a Mendix app on Kubernetes. The necessary steps to supply these keys using a Secrets file are also highlighted in the associated documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/licensing-apps-outside-mxcloud.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nAdd environment variables in your deployment command for Kubernetes.\n```\n\n----------------------------------------\n\nTITLE: Less Than Comparison in Mendix\nDESCRIPTION: This snippet demonstrates a less than comparison in Mendix. It compares two integer values and returns a boolean value based on whether the first value is less than the second.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\"4<3\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Platform SDK in TypeScript\nDESCRIPTION: Shows how to change Platform SDK configurations, including setting a custom token and customizing logging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nsetPlatformConfig({\n    mendixToken: fs.readFileSync(\"mendix-token.txt\", {encoding: \"utf8\"})\n});\n```\n\nLANGUAGE: typescript\nCODE:\n```\ndisableLogger()          // Disables all logging\nenableLogger()           // Enable logging through the console\nsetLogger(customLogger); // Override the logger object\n```\n\n----------------------------------------\n\nTITLE: Table Configuration Column Weights Specification\nDESCRIPTION: Demonstrates how to specify column weights for a table layout using semicolon-separated percentages that must total 100%\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/table-document-template/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nweights: \"25;25;50\"\n```\n\n----------------------------------------\n\nTITLE: Adding Quarters in Java UTC\nDESCRIPTION: The `addQuarters` function adds a specified number of quarters to a date. It takes the initial date and the quarter count to be added. It returns the updated date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\naddQuarters(dateTime(2007, 1, 1, 1, 1, 1), 1)\n```\n\nLANGUAGE: java\nCODE:\n```\nMon Apr 01 01:01:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Defining Bordered Button Style with JavaScript\nDESCRIPTION: This snippet defines a custom CSS class called `btnBordered` with a transparent background. The other properties are removed and the `const` is changed to `btnBordered`. This custom style can then be applied to a button widget to make its background transparent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-styling/how-to-use-native-styling.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n    export const btnBordered = {\n        container: {\n            backgroundColor: \"transparent\"\n        },\n    }\n```\n\n----------------------------------------\n\nTITLE: NPM Package Installation for Older NPM Versions\nDESCRIPTION: Special installation flag for NPM version 7 and higher to resolve peer dependency conflicts\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Dynamic Data Widgets in Document Templates\nDESCRIPTION: Dynamic data widgets enable rendering of variable data within document templates, including dynamic labels and images that can display attribute values from entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Dynamic Label\n\nA dynamic label is used for the same attribute types as a text box in the page editor. It can be used to display a text value.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Dynamic Image\n\nA dynamic image can be used to show a System.Image. If the image is not available it will show the preset default image.\n```\n\n----------------------------------------\n\nTITLE: Docker Pull Commands for Selenoid Images\nDESCRIPTION: Bash commands for pulling required Docker images for Selenoid setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenoid-hub.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker pull selenoid/chrome:65.0\nsudo docker pull selenoid/firefox:58.0\nsudo docker pull selenoid/video-recorder\nsudo docker pull aerokube/selenoid\n```\n\n----------------------------------------\n\nTITLE: Running React Developer Tools\nDESCRIPTION: This command starts the React Developer Tools GUI after it has been installed globally. It opens a separate window where you can inspect and debug React components and their styles within a running application, especially when used with the Make It Native app in developer mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_6\n\nLANGUAGE: NPM\nCODE:\n```\n\"react-devtools\"\n```\n\n----------------------------------------\n\nTITLE: Implementing RowLayout with Grow Column Size in TypeScript\nDESCRIPTION: This example shows how to use the RowLayout type with columnSize set to \"grow\". It demonstrates how different grow factors affect the distribution of space among children.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"RowLayout\",\n        columnSize: \"grow\",\n        children: [\n            {\n                type: \"Container\",\n                grow: 0,\n                borders: true,\n                backgroundColor: \"#F4FFB0\",\n                children: [{ type: \"Text\", content: \"Grow 0\", fontSize: 20 }]\n            },\n            {\n                type: \"Container\",\n                borders: true,\n                backgroundColor: \"#E6FFB0\",\n                children: [{ type: \"Text\", content: \"Grow 1\", fontSize: 20 }]\n            },\n            {\n                type: \"Container\",\n                grow: 2,\n                borders: true,\n                backgroundColor: \"#B0C0FF\",\n                children: [{ type: \"Text\", content: \"Grow 2\", fontSize: 20 }]\n            }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Correct Font Style Usage\nDESCRIPTION: This CSS snippet shows the correct way to apply a specific font style using the previously defined font family object. By referencing a specific style from the `timesNewRomanFontFamily` object (e.g., `timesNewRomanFontFamily.bold`), this example guarantees that the text will render with the intended font weight and style consistently across different platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_7\n\nLANGUAGE: css\nCODE:\n```\nexport const boldText = { \n    fontFamily: timesNewRomanFontFamily.bold,\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Import Statements for Container Component\nDESCRIPTION: Import statements required for the container component to use Mendix-specific components like DynamicValue, NativeIcon, and Icon. Also imports the wrapped GroupBox component from local files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_36\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DynamicValue, NativeIcon, ValueStatus } from \"mendix\";\nimport { Icon } from \"mendix/components/native/Icon\";\nimport {\n    GroupBox as WrappedGroupBox,\n    GroupBoxProps as WrappedGroupBoxProps\n} from \"./components/GroupBox\";\n```\n\n----------------------------------------\n\nTITLE: Widget XML Property Definition Example\nDESCRIPTION: This XML example demonstrates how to define widget properties in the widget XML file, including property groups, basic properties, and complex object properties with nested property structures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n    <propertyGroup caption=\"General\">\n    <property key=\"caption\" type=\"string\">\n        <caption>Graph caption</caption>\n        <description>The caption of this graph</description>\n    </property>\n    </propertyGroup>\n    <propertyGroup caption=\"Data\">\n    <property key=\"dataCaption\" type=\"string\">\n        <caption>Data caption</caption>\n        <description>The caption of the data set</description>\n    </property>\n    <property key=\"dataPoints\" type=\"object\" isList=\"true\">\n        <caption>Data points</caption>\n        <description></description>\n        <objects>\n        <properties>\n            <propertyGroup caption=\"Data\">\n            <property key=\"x\" type=\"integer\" defaultValue=\"0\">\n                <caption>X value</caption>\n                <description></description>\n            </property>\n            <property key=\"y\" type=\"integer\" defaultValue=\"0\">\n                <caption>Y value</caption>\n                <description></description>\n            </property>\n            </propertyGroup>\n        </properties>\n        </objects>\n    </property>\n    </propertyGroup>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Configuring REST Call HTTP Headers in Mendix\nDESCRIPTION: Sets up the HTTP headers for a REST call using the SAP Destination Service. These headers authenticate the app and user, specify the SSC location, and request JSON response format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/sap-btp/sap-destination-with-rest.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nSAP-Connectivity-Authentication: $DestinationObject/SapConnectivityAuthentication\nSAP-Connectivity-SCC-Location_ID: $DestinationObject/SapConnectivitySccLocationId\nProxy-Authorization: 'Bearer ' + $DestinationObject/SapConnectivityProxyCredentials\nAccept: 'application/json'\n```\n\n----------------------------------------\n\nTITLE: Object Creation Event Flow\nDESCRIPTION: Details the sequence of events and actions that occur during object initialization in Mendix, highlighting before-create and after-create event handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/create-object.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Object Creation Flow\nCODE:\n```\n1. Execute before-create events\n2. Validate event conditions\n3. Potential exception handling\n4. Create object instance\n5. Execute after-create events\n6. Apply changes to client\n```\n\n----------------------------------------\n\nTITLE: Environment Registration Response Example\nDESCRIPTION: This is the JSON response returned after successfully registering an environment. It includes the environment details (name, UUID, location, type) and the associated application information. Both UUIDs are needed for registering services.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"name\":\"My-Environment\",\n\t\"uuid\":\"c3acf1e6-8ed3-472c-8c9f-d93cf3a53b9b\",\n\t\"location\":\"https://my-deployed-application-url.com\",\n\t\"type\":\"Production\",\n\t\"application\": {\n\t\t\"name\":\"My-Application\",\n\t\t\"uuid\":\"0301800d-b104-417f-8a64-a8f3ba3450c3\",\n\t\t\"type\":\"Other\",\n\t\t\"icon\":\"https://catalog.mendix.com/resources/logos/other_icon.png\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Object Property in XML for Mendix Pluggable Widget\nDESCRIPTION: This XML snippet defines an object property for a Mendix pluggable widget. It specifies the property key, type, isList attribute, caption, description, and nested properties within a property group.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_17\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myObject\" type=\"object\" isList=\"true\">\n\t<caption>My object list</caption>\n\t<description/>\n\t<properties>\n\t\t<propertyGroup caption=\"Object list group\">\n\t\t\t<property key=\"myObjectBool\" type=\"boolean\" defaultValue=\"true\">\n\t\t\t\t<caption>My boolean</caption>\n\t\t\t\t<description>My boolean setting</description>\n\t\t\t</property>\n\t\t\t<property key=\"myObjectAction\" type=\"action\">\n\t\t\t\t<caption>My action</caption>\n\t\t\t\t<description>My action setting</description>\n\t\t\t</property>\n\t\t</propertyGroup>\n\t</properties>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Preparing iOS App with NPM Commands\nDESCRIPTION: NPM commands to install dependencies, package Cordova app, and add iOS platform for hybrid mobile development\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/build-hybrid-apps/build-hybrid-locally.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i && npm run package && npm run platform:ios\n```\n\n----------------------------------------\n\nTITLE: Creating SOAP Request for CreateCustomer in XML\nDESCRIPTION: This XML snippet defines a SOAP request for creating a customer using the CustomerWebServiceSoap service. It assumes the existence of the specified namespaces and SOAP infrastructure. The key parameters include the customer's name, address, city, and zip code. This request is intended to be used within a test case to verify the CreateCustomer operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\\\"1.0\\\"?>\\n<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:exam=\\\"http://www.example.com/\\\">\\n   <soapenv:Header/>\\n   <soapenv:Body>\\n      <exam:CreateCustomer>\\n         <Name>Donald A. Hylton</Name>\\n         <Address>784 Better Street</Address>\\n         <City>Kansas City</City>\\n         <ZipCode>KS 66102</ZipCode>\\n      </exam:CreateCustomer>\\n   </soapenv:Body>\\n</soapenv:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Example Response for Unit Test Status - JSON\nDESCRIPTION: This snippet shows the expected JSON response format when polling for the status of a unit test run, detailing the number of tested and failed tests, the runtime, and whether the test run has completed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/unit-testing.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"failures\": 1,\n    \"tests\": 10,\n    \"runtime\": -1,\n    \"failed_tests\": [{\n        \"error\": \"This exception is doopery nice\",\n        \"name\": \"MyFirstModule.Test_ThisTestIsSupposedToFailToCheckExceptionRendering\",\n        \"step\": \"Starting microflow test 'MyFirstModule.Test_ThisTestIsSupposedToFailToCheckExceptionRendering'\"\n    }),\n    \"completed\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the SAP Modules documentation page, defining metadata like title, URL, description, weight and aliases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"SAP Modules\"\nurl: /appstore/sap-modules/\ndescription: \"Presents details on the SAP-specific modules available in the Mendix Marketplace.\"\nweight: 40\nno_list: false\ndescription_list: true\naliases:\n    - /appstore/sap-connectors/\n---\n```\n\n----------------------------------------\n\nTITLE: Renaming a Folder with Model API in C#\nDESCRIPTION: This snippet demonstrates how to rename an existing folder in the Mendix model using a transaction. It creates a transaction with a descriptive name, changes the folder name, and commits the changes to the model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/interact-with-model-api.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing (var transaction = model.StartTransaction(\"rename folder\"))\n{\n    folder.Name = \"New_Name\";\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Link for Navigation List Item\nDESCRIPTION: This snippet includes the common properties section for navigation list items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/navigation-list.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Event Listener for Opening Dockable Pane\nDESCRIPTION: Event listener implementation that handles menu item activation, opening either a tab or the dockable pane depending on which menu item was selected.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// Open a tab when the menu item is clicked\nstudioPro.ui.extensionsMenu.addEventListener(\n    \"menuItemActivated\",\n    (args) => {\n        if (args.menuId === \"myextension.ShowTabMenuItem\") {\n            studioPro.ui.tabs.open(\n                {\n                    title: \"My Extension Tab\",\n                },\n                {\n                    componentName: \"extension/myextension\",\n                    uiEntrypoint: \"tab\",\n                }\n            );\n        }\n        else if (args.menuId === \"myextension.ShowDockMenuItem\") {\n            studioPro.ui.panes.open(paneHandle);\n        }\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Using Parentheses to Modify Precedence in WHERE Clause - OQL\nDESCRIPTION: This example shows how parentheses can be used in a WHERE clause to modify operator precedence. The query retrieves records for customers named 'Doe' or those who do not have the name 'Doe' while ensuring that the Number is below 0. It emphasizes the significance of using parentheses in logical conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_28\n\nLANGUAGE: sql\nCODE:\n```\nSELECT CustomerName, Number\nFROM Sales.Request\nWHERE\n\t(\n\t\tCustomerName = 'Doe'\n\t\tOR\n\t\tCustomerName != 'Doe'\n\t)\n\tAND\n\tNumber < 0\n```\n\n----------------------------------------\n\nTITLE: Creating a Specialization of System.Image in Mendix\nDESCRIPTION: This snippet illustrates the steps to create a new entity that specializes the System.Image entity to allow image upload capabilities within a Mendix project. Be sure to establish the appropriate associations with other entities like Report.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/attach-images.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open your domain model > **Toolbox** and drag a new entity in a working area.\n\n2. Double-click the new entity to open its properties.\n\n3. Set the **Name** property to *Receipt*.\n\n4. In the **Generalization** property, click **Select**, choose the **Image** entity under **System**, and confirm your choice:\n\n5. Now you need to create an association from the **Receipt** entity to the **Report** entity. In the **Properties** dialog box, open the **Associations** tab and click **New**.\n\n6. In the **Select Entity** dialog box, select **Report** and confirm your choice:\n\n7. Click **OK** to close the **Properties** dialog box.\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix Resources in Kubernetes\nDESCRIPTION: Commands to verify that environments and their storage have been successfully deleted in a Kubernetes cluster.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nkubectl get mendixapp -n {namespace}\nkubectl get storageinstance -n {namespace}\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Database Migration in SAP BTP\nDESCRIPTION: Commands to set runtime environment variables in the SAP HANA environment using the Cloud Foundry command line. These variables define the source PostgreSQL database connection details necessary for migration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncf set-env {application-name} MXRUNTIME_SourceDatabaseType POSTGRESQL\ncf set-env {application-name}  MXRUNTIME_SourceDatabaseHost {hostname}:{port}\ncf set-env {application-name} MXRUNTIME_SourceDatabaseName {dbname}\ncf set-env {application-name}  MXRUNTIME_SourceDatabaseUserName {username}\ncf set-env {application-name}  MXRUNTIME_SourceDatabasePassword {password}\n```\n\n----------------------------------------\n\nTITLE: Base Installation for Mendix Private Cloud CLI\nDESCRIPTION: This command performs the base installation for Mendix Private Cloud. It requires specifying the namespace, cluster mode, cluster type, and optionally the namespace ID and secret for connected mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-cli base-install --namespace <namespace> -i <namespace-id> -s <namespace-secret> --clusterMode <cluster-mode> --clusterType <cluster-type>\n```\n\n----------------------------------------\n\nTITLE: Adding Entity to Domain Model\nDESCRIPTION: Loads the default domain model and creates a new entity with a timestamp-based name and specific location coordinates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-creating-your-first-script.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst domainModel = await loadDomainModel(workingCopy);\nconst entity = domainmodels.Entity.createIn(domainModel);\nentity.name = `NewEntity_${Date.now()}`;\nentity.location = { x: 100, y: 100 };\n```\n\n----------------------------------------\n\nTITLE: Inserting Basic Icon in Markdown\nDESCRIPTION: This snippet demonstrates how to insert a basic icon from the Mendix Icon Set into Markdown documentation using shortcode syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/static/mx-icons/_readme.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% icon name=\"{icon-name}\" %}}\n```\n\n----------------------------------------\n\nTITLE: Introducing New Properties in ODataPublish and Navigation Modules\nDESCRIPTION: This snippet outlines new properties and elements added to the EntitySet, PublishedMicroflow, PublishedContract, NavigationProfile, and NotFoundHomePage elements in the Mendix SDK Metamodel 10.13.0.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.13.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 10.13.0\n\n### ODataPublish\n\n#### EntitySet (Element)\n\n* We introduced the `alternativeExposedName` property. \n\n#### PublishedMicroflow (Element)\n\n* We introduced the `alternativeExposedName` property. \n\n#### PublishedContract (Element)\n\n* We introduced the `graphQL` property. \n\n### Navigation\n\n#### NavigationProfile (Element)\n\n* We introduced the `notFoundHomepage` property. \n\n#### NotFoundHomePage (Element)\n\n* We introduced this element.\n```\n\n----------------------------------------\n\nTITLE: Defining File Property in Mendix Pluggable Widget\nDESCRIPTION: This code snippet demonstrates how to define a file property in a Mendix pluggable widget XML configuration. The property allows uploading a sample text file and is marked as optional.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"file\" type=\"file\" required=\"false\">\n\t<caption>File</caption>\n\t<description>Sample text file</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Describing Return Value of Get Current Page Title Action in Markdown\nDESCRIPTION: This snippet defines a markdown table that describes the return value of the 'Get Current Page Title' action. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-system/rg-one-get-current-page-title.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n--- | --- | ---\nPage Title | String | Title of the current page.\n```\n\n----------------------------------------\n\nTITLE: Stopping Notifications in Mendix\nDESCRIPTION: This snippet explains the action required to stop receiving notifications from monitored items in the Mendix application, specifically using the `Delete MonitoredItem(s)` action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/opc-ua-connector.md#2025-04-21_snippet_5\n\nLANGUAGE: Mendix\nCODE:\n```\nTo stop receiving notifications, call the `Delete MonitoredItem(s)` action from the Toolbox.\n```\n\n----------------------------------------\n\nTITLE: Knowledge Base Retrieval Operations\nDESCRIPTION: Operations for retrieving and associating knowledge base data with Mendix objects, including pagination and filtering capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/mendix-cloud-genai/Mx GenAI Connector.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. `Retrieve` - retrieves chunks with pagination and filtering\n2. `Retrieve & Associate` - retrieves and links chunks to Mendix objects\n3. `Embed & Retrieve Nearest Neighbors` - finds most similar chunks via vector similarity\n4. `Embed & Retrieve Nearest Neighbors & Associate` - combines retrieval and association\n```\n\n----------------------------------------\n\nTITLE: Defining SCSS Variables\nDESCRIPTION: This SCSS code defines a set of color variables for use in a Mendix web application's theme. These variables can be customized to change the look and feel of the application. They include a primary gray color and brand colors for default, primary, success, warning, and danger states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_7\n\nLANGUAGE: scss\nCODE:\n```\n\"$gray-primary: #e7e7e9;\n\n$brand-default: $gray-primary;\n$brand-primary: #264ae5;\n$brand-success: #3cb33d;\n$brand-warning: #eca51c;\n$brand-danger: #e33f4e;\"\n```\n\n----------------------------------------\n\nTITLE: Converting Sort Attribute to Lowercase in Mendix Expression\nDESCRIPTION: Expression that converts the selected sort attribute to lowercase before passing it as a parameter to the REST service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_3\n\nLANGUAGE: expression\nCODE:\n```\ntoLowerCase($Paging/SortAttribute)\n```\n\n----------------------------------------\n\nTITLE: Complete iOS Icons Configuration Example in JSON\nDESCRIPTION: A comprehensive example showing all required icon configurations for iOS apps. This includes different sizes and scales for iPhone, iPad, and App Store icons as required by Apple.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"images\": [\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@1x.png\"\n        },\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@2x.png\"\n        },\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@2x.png\"\n        },\n        {\n            \"size\": \"20x20\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"notification@3x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@1x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@2x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@2x.png\"\n        },\n        {\n            \"size\": \"29x29\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"settings@3x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@1x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@2x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@2x.png\"\n        },\n        {\n            \"size\": \"40x40\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"spotlight@3x.png\"\n        },\n        {\n            \"size\": \"60x60\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"app@2x.png\"\n        },\n        {\n            \"size\": \"60x60\",\n            \"idiom\": \"iphone\",\n            \"scale\": \"3x\",\n            \"type\": \"icon\",\n            \"filename\": \"app@3x.png\"\n        },\n        {\n            \"size\": \"76x76\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"ipadapp@1x.png\"\n        },\n        {\n            \"size\": \"76x76\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"ipadapp@2x.png\"\n        },\n        {\n            \"size\": \"83.5x83.5\",\n            \"idiom\": \"ipad\",\n            \"scale\": \"2x\",\n            \"type\": \"icon\",\n            \"filename\": \"ipadproapp@2x.png\"\n        },\n        {\n            \"size\": \"1024x1024\",\n            \"idiom\": \"ios-marketing\",\n            \"scale\": \"1x\",\n            \"type\": \"icon\",\n            \"filename\": \"appstore@1x.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Using ADB to Retrieve Android Log Files\nDESCRIPTION: Instructions for capturing log files from an Android device using ADB (Android Debug Bridge) through the command line. This process involves setting up the device for debugging, executing logcat commands, and saving the output to a text file for further analysis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n1. adb start-server\n2. adb logcat > output.txt\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Styling Class in JavaScript\nDESCRIPTION: Defines a custom styling class for a widget, using JavaScript objects to apply ViewStyle and TextStyle properties. This allows developers to create reusable styles within the Mendix framework.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// A custom styling class\nexport const customClassName = {\n  container: {\n    // ViewStyle properties\n    paddingTop: 5\n  },\n  text: {\n    // TextStyle properties\n    fontWeight: \"bold\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Equals Helper for Filtering in TypeScript\nDESCRIPTION: Demonstrates how to use the equals helper to create a filter condition that keeps items where a value equals a specific literal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrA = attribute(this.props.myAttributeA.id);\nconst name = literal(\"Bob\");\n\n// filter keeps items where value equals \"Bob\"\nconst filterCondition = equals(attrA, name);\n```\n\n----------------------------------------\n\nTITLE: Runtime License Configuration\nDESCRIPTION: YAML configuration showing runtime license specification with ID and encoded license key.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  resources:\n    runtimeLicense:\n      id: c823eeb1-7eb2-471c-a818-7be132c9cdb1\n      key: <base64-encoded-license-key>\n      type: offline\n```\n\n----------------------------------------\n\nTITLE: Exclusion Variables for Web in SCSS\nDESCRIPTION: This snippet lists all supported exclusion variables for web widgets in Mendix, which can be used in the *exclusion-variables.scss* file to disable default styling. These variables allow developers to selectively remove styling from various widgets and components, offering fine-grained control over the app's visual appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_14\n\nLANGUAGE: scss\nCODE:\n```\n\"$exclude-background-helpers\n$exclude-badge\n$exclude-badge-button\n$exclude-badge-button-helpers\n$exclude-button\n$exclude-button-helpers\n$exclude-check-box\n$exclude-custom-dijit-widget\n$exclude-custom-switch\n$exclude-data-grid\n$exclude-data-grid-helpers\n$exclude-data-view\n$exclude-data-picker\n$exclude-glyphicon\n$exclude-grid\n$exclude-group-box\n$exclude-group-box-helpers\n$exclude-header\n$exclude-helper-classes\n$exclude-input\n$exclude-image-helpers\n$exclude-label\n$exclude-label-helpers\n$exclude-layout-grid\n$exclude-list-view\n$exclude-list-view-helpers\n$exclude-modal\n$exclude-navigation-bar\n$exclude-navigation-bar-helpers\n$exclude-navigation-list\n$exclude-navigation-tree\n$exclude-navigation-tree-helpers\n$exclude-pagination\n$exclude-pop-up-menu\n$exclude-progress\n$exclude-progress-bar\n$exclude-progress-bar-helpers\n$exclude-progress-circle\n$exclude-progress-circle-helpers\n$exclude-radio-button\n$exclude-range-slider\n$exclude-range-slider-helpers\n$exclude-rating\n$exclude-rating-helpers\n$exclude-simple-menu-bar\n$exclude-simple-menu-bar-helpers\n$exclude-slider\n$exclude-slider-helpers\n$exclude-table\n$exclude-table-helpers\n$exclude-tab-container\n$exclude-tab-container-helpers\n$exclude-template-grid\n$exclude-template-grid-helpers\n$exclude-timeline\n$exclude-typography\n$exclude-typography-helpers\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Mendix Marketplace Button in Markdown\nDESCRIPTION: This snippet shows how to create a button in Markdown that links to the Mendix Marketplace for downloading Studio Pro 10.6.0.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"info\" href=\"https://marketplace.mendix.com/link/studiopro/10.6.0\" text=\"Go to Marketplace\" title=\"Download version 10.6.0 from the Marketplace\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Migration Settings in Studio Pro\nDESCRIPTION: Configuration for setting up custom database migration parameters in Mendix Studio Pro, defining source and target database connection details\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nSourceDatabaseType: POSTGRESQL\nSourceDatabaseHost: localhost\nSourceDatabaseName: my_database\nSourceDatabaseUserName: admin\nSourceDatabasePassword: password\n```\n\n----------------------------------------\n\nTITLE: Defining and Using ListActionValue Interface\nDESCRIPTION: This snippet provides a definition of the `ListActionValue` interface for executing actions on items in a list, assuming widget properties are configured with a `ListValue` and `ListActionValue`. It is dependent on the definition of `ActionValue` and needs a configured component with item actions. An example is provided demonstrating how to execute an action on the first item of a list.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_16\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ListActionValue {\\n    get: (item: ObjectItem) => ActionValue;\\n}\\n\\ninterface MyListWidgetsProps {\\n    myDataSource: ListValue;\\n    myListAction: ListActionValue;\\n}\\n\\nconst actionOnFirstItem = this.props.myListAction.get(this.props.myDataSource.item[0]);\\n\\nactionOnFirstItem.execute();\n```\n\n----------------------------------------\n\nTITLE: Create Non-Persistable Entity Reference in Mendix\nDESCRIPTION: Shows how to create a reference between a non-persistable entity and the System.Session entity in Mendix domain model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/minimize-number.md#2025-04-21_snippet_0\n\nLANGUAGE: diagram\nCODE:\n```\n[Domain Model showing reference between NPE and Session entity]\n```\n\n----------------------------------------\n\nTITLE: XML Schema Validation Fix\nDESCRIPTION: Resolution for XML schema validation when handling schema import elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.18.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\nXML schema import element\n```\n\n----------------------------------------\n\nTITLE: System Table Reference\nDESCRIPTION: Reference to the WorkflowUserTaskDefinition system table that experienced duplicate entries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.17.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nWorkflowUserTaskDefinition\n```\n\n----------------------------------------\n\nTITLE: Implementing Conditional Search Parameter in Mendix Microflow\nDESCRIPTION: This expression is used in a Mendix microflow to implement a conditional search parameter. It returns an empty string if the 'Name' attribute of the 'Paging' entity is empty, otherwise it returns the value of 'Name'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nif $Paging/Name = empty then '' else $Paging/Name\n```\n\n----------------------------------------\n\nTITLE: Installing CSI Secret Store Driver\nDESCRIPTION: Helm commands to install the secrets store CSI driver with sync secret enabled\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nhelm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts\nhelm -n <{ns}> install csi secrets-store-csi-driver/secrets-store-csi-driver \\\n--set syncSecret.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Creating a New OpenShift Project for Grafana\nDESCRIPTION: Command to create a new OpenShift project where Grafana and Prometheus will be installed. Replace {project} with your preferred project name, such as 'grafana'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\noc new-project {project}\n```\n\n----------------------------------------\n\nTITLE: Example SBOM JSON Output\nDESCRIPTION: This JSON snippet represents a partial Software Bill of Materials (SBOM) output, demonstrating the structure and fields required according to the CycloneDX 1.4 JSON format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/sbom-generation.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"bomFormat\": \"CycloneDX\",\n  \"specVersion\": \"1.4\",\n  \"serialNumber\": \"urn:uuid:d1a93219-d2fb-4282-9cc8-b591f85e0551\",\n  \"version\": 1,\n  \"metadata\": { },\n  \"components\": \n    {\n      \"type\": \"framework\",\n      \"bom-ref\": \"urn:uuid:5371eb81-0997-48a0-ad0a-1a3012bf87cb\",\n      \"author\": \"\",\n      \"publisher\": \"\",\n      \"name\": \"Mendix-Runtime\",\n      \"version\": \"10.10.0.34429\",\n      \"licenses\": [],\n      \"copyright\": \"\",\n      \"purl\": \"pkg:mendix/Mendix-Runtime@10.10.0.34429?type=framework\",\n      \"components\": []\n    },\n    {\n      \"type\": \"library\",\n      \"bom-ref\": \"pkg:maven/com.google.guava/guava@32.0.1-jre?type=jar\",\n      \"group\": \"com.google.guava\",\n      \"name\": \"guava\",\n      \"version\": \"32.0.1-jre\",\n      \"description\": \"Guava is a suite of core and expanded libraries that include utility classes, Google's collections, I/O classes, and much more.\",\n      \"licenses\": [\n        {\n          \"license\": {\n            \"id\": \"Apache-2.0\"\n          }\n        }\n      ],\n      \"purl\": \"pkg:maven/com.google.guava/guava@32.0.1-jre?type=jar\",\n      \"modified\": false\n    },\n  \n  \"externalReferences\": [],\n  \"dependencies\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Getting PostgreSQL Service Details with kubectl in Bash\nDESCRIPTION: This kubectl command retrieves the details of the `postgres-service`.  The returned information includes the cluster IP and port which can be used to connect to the database from within the Kubernetes cluster.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n\"kubectl get service postgres-service\"\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Milliseconds Example\nDESCRIPTION: Shows the output of subtracting 1000 milliseconds from January 1, 2007, 01:01:01. The result is January 1, 2007, 01:01:00 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:01:00 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Rendering List Items Based on Status\nDESCRIPTION: Demonstrates conditional rendering of list items based on their current status, handling loading, unavailable, and available states\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_15\n\nLANGUAGE: tsx\nCODE:\n```\nif (this.props.listValue.status === ValueStatus.Available) {\n    return (\n        <div>\n            ...\n        </div>\n    );\n} else if (this.props.listValue.status === ValueStatus.Loading) {\n    return <p>Loading... Please, wait...</p>;\n} else if (this.props.listValue.status === ValueStatus.Unavailable) {\n    return <p>There are no available items to show.</p>;\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration for Documentation\nDESCRIPTION: Markdown front matter and configuration for documenting Mendix native mobile app update process, including metadata and alerts\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/overtheair-updates.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Updating Native Apps\"\nurl: /refguide/mobile/distributing-mobile-apps/overtheair-updates/\nweight: 30\ndescription: \"Describes enabling over the air updates using built-in functionality.\"\naliases:\n    - /howto/mobile/how-to-ota/\n    - /howto/mobile/how-to-ota-appcenter/\n---\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nCurrently OTA does not update your app while the app is open or minimized.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Deprecating getClonedContext Methods\nDESCRIPTION: The `getClonedContext` methods in `CoreActionHandler` and `InternalCoreAction` are deprecated. The exact reason is not specified but it likely involves promoting better context management practices or simplifying the core action handling process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n\"getClonedContext\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"CoreActionHandler\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"InternalCoreAction\"\n```\n\n----------------------------------------\n\nTITLE: Calculating Seconds Between Dates in Java\nDESCRIPTION: Example of using secondsBetween function to calculate the difference between two dates in seconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nsecondsBetween(dateTime(2007, 1, 1, 1, 1, 1), dateTime(2007,1,1,1,2,3))\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Get Validation Message Function in Markdown\nDESCRIPTION: This code snippet defines a markdown table describing the return value of the 'Get Validation Message' function. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-get-validation-message.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n--- | --- | ---\nValidation Message | String | The text of the validation message.\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Dependencies for Native Mobile App\nDESCRIPTION: Install required dependencies using npm install. For NPM v7 and above, use the --legacy-peer-deps flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally-manually.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Link for Navigation List Item\nDESCRIPTION: This snippet includes the visibility section for navigation list items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/navigation-list.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Template Parameter Usage Example\nDESCRIPTION: Example demonstrating how to reference parameters in task descriptions using index notation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/user-task.md#2025-04-21_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n{1}\n```\n\n----------------------------------------\n\nTITLE: Info Alert Box\nDESCRIPTION: Markdown shortcode for displaying an information alert box indicating activity usage restrictions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/complete-task.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThis activity can only be used in microflows.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Auto-Generate Caption in Mendix Microflows\nDESCRIPTION: This snippet shows the options for the Auto-generate caption property in Mendix microflows. It specifies whether the caption is automatically generated based on the type of activity or manually set by the user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/microflow-element-common-properties.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Option | Description |\n| --- | --- |\n| Yes  *(default)* | The caption of the activity is generated by Studio Pro. |\n| No | The value in the **Caption** property, which you can edit yourself, is used. |\n```\n\n----------------------------------------\n\nTITLE: Database Connection Error Log\nDESCRIPTION: This is an example of an error message that appears when the application fails to obtain a database connection from the pool. It indicates a timeout while waiting for an idle connection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n\"ERROR - ConnectionBus: Opening JDBC connection to 1.2.3.4:5432 failed with SQLState: null Error code: 0 Message: Cannot get a connection, pool error Timeout waiting for idle object Retrying...(1/4)\"\n```\n\n----------------------------------------\n\nTITLE: Improvements and Bug Fixes in Mendix Studio Pro 8.11.0 - Markdown\nDESCRIPTION: This snippet showcases various improvements and bug fixes introduced in Mendix Studio Pro 8.11.0, including support for the SameSite property, enhancements to HTTP cookie management, and JDBC driver updates. It is essential for users upgrading from previous versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.11.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* We now support the `SameSite` property in HTTP cookies. It is set to `None` by default, but this can be changed in the custom settings.\n* The XPath `contains`, `starts-with`, and `ends-with` string functions are now case-insensitive in [SAP HANA](/refguide8/saphana/).\n* We upgraded the following JDBC drivers:\n    * HSQLDB to version 2.5.0\n    * PostgreSQL to version 42.2.14\n    * Microsoft SQL Server to version 8.2.2\n    * Oracle to version 19.6\n    * MariaDB to version 2.6.0\n* Helpful information is now shown when a query timeout occurs during a cluster leader action.\n```\n\n----------------------------------------\n\nTITLE: Basic XPath minutes-from-dateTime Syntax\nDESCRIPTION: Demonstrates the syntax for the minutes-from-dateTime function which extracts the minutes value from a Date and time attribute. The function accepts a mandatory attribute parameter and an optional timezone parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-minutes-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nminutes-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Setting SAP HANA Environment Variables\nDESCRIPTION: This set of commands configures runtime properties for the SAP HANA environment, referencing values from the PostgreSQL instance. This process is pivotal before starting the migrated application, ensuring SAP HANA uses accurate PostgreSQL credentials and details. It requires application name, hostname, port, dbname, username, and password as inputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncf set-env {application-name} MXRUNTIME_SourceDatabaseType POSTGRESQL\ncf set-env {application-name}  MXRUNTIME_SourceDatabaseHost {hostname}:{port}\ncf set-env {application-name} MXRUNTIME_SourceDatabaseName {dbname}\ncf set-env {application-name}  MXRUNTIME_SourceDatabaseUserName {username}\ncf set-env {application-name}  MXRUNTIME_SourceDatabasePassword {password}\n```\n\n----------------------------------------\n\nTITLE: Exporting Data from Mendix Environment to a Backup File\nDESCRIPTION: Shell commands for exporting data from a Mendix environment to a backup file. The commands create necessary resources, copy the data migration tool to the pod, execute the backup process, and copy the resulting backup file to the local machine.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nNAMESPACE={namespace}\nENVIRONMENT={environment}\n# Create the resources required for the backup operation\nkubectl -n $NAMESPACE apply -f /tmp/mendix-backup-restore.yaml\n# Copy the Linux version of the data migration tool into the Pod\nkubectl -n $NAMESPACE cp mxpc-data-migration mendix-backup-restore:/tmp/mxpc-data-migration\n# Run the backup process\nkubectl -n $NAMESPACE exec -it mendix-backup-restore -- /tmp/mxpc-data-migration backup -e $ENVIRONMENT -f /tmp/backup.tar.gz -n $NAMESPACE\n# Copy the backup file from the Pod to a local file\nkubectl -n $NAMESPACE cp mendix-backup-restore:/tmp/backup.tar.gz backup.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Nanoflow Object Commit Behavior\nDESCRIPTION: Demonstrates the commit behavior in a Mendix nanoflow, highlighting differences in event handling and synchronization for online and offline apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/committing-objects.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nCommitObjects(\n    ObjectList: $MyEntityList,\n    // Nanoflows always refresh in client\n    // Events handled during synchronization in offline mode\n)\n```\n\n----------------------------------------\n\nTITLE: Initial TestNG Suite Configuration\nDESCRIPTION: Basic TestNG XML suite configuration for single browser testing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suite name=\"MyFirstTestSuite\">\n\t<test name=\"Test1\">\n\t\t<classes>\n\t\t\t<class\n\t\t\t\tname=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n</suite>\n```\n\n----------------------------------------\n\nTITLE: Displaying Multiple X Axes Data Properties in JSON\nDESCRIPTION: This snippet configures the display of two different X axes on a chart, which is useful for displaying different datasets with distinct time scales or categories.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n[{\"name\": \"xaxis data\", \"xaxis\": \"x\", \"type\": \"scatter\"},{\"name\": \"xaxis2 data\", \"xaxis\": \"x2\", \"type\": \"scatter\"}]\n```\n\n----------------------------------------\n\nTITLE: Finding iOS Bundle Identifier in config.xcconfig (Native Mobile App)\nDESCRIPTION: This snippet explains how to find the iOS bundle identifier in the *ios/Config/config.xcconfig* file of a generated native mobile app. The BUNDLE_IDENTIFIER property holds the unique identifier for the iOS app.  This ID is required when adding the iOS app to the Firebase project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_1\n\nLANGUAGE: xcconfig\nCODE:\n```\n\"ios/Config/config.xcconfig\" and consult **BUNDLE_IDENTIFIER** to find your ID\n```\n\n----------------------------------------\n\nTITLE: Repository Info Endpoint Request\nDESCRIPTION: HTTP GET request for retrieving repository information for a Mendix app, including headers and authorization token.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/repositories/c0af1725-edae-4345-aea7-2f94f7760e33/info HTTP/1.1\nHost: repository.api.mendix.com\nAccept: */*\nAuthorization: MxToken hZUPhAV4ELPrRm7U7JAKf5BnxJk6q7dcsvFdw6ZR4wRYdv7egHjwHEYBwXY4RkSZrAWde3XqVAQkxZNPysvHcpquA9sK9bsKmcTN\n```\n\n----------------------------------------\n\nTITLE: Scheduling a Notification with JavaScript\nDESCRIPTION: This snippet details the steps to replace a notification display action with a scheduling action in Mendix using JavaScript. It configures the notification properties like date, title, body, and sound, ensuring it is scheduled correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-schedule-cancel.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n1. Navigate to your **ACT_CreateAndSendNotification** nanoflow. \n2. Replace your **Display notification** JavaScript action with a new **Schedule notification** action: \n3. Double-click your new **Schedule notification activity**.\n4. Set the **Date** to **EndOfCurrentMinute**.\n5. Change the **body**, **title**, and **subtitle** to the variables that you created.\n6. Set **Play sound** to **true**.\n7. For now, set **Notification id** to **empty**.\n8. Set **Action name** and **Action guid** to **empty**.\n9. Click **OK**.\n10. Start and load the app on your mobile device.\n11. Tap the **Send notification** button, then quickly minimize your app.\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Request Handler in Mendix Java API\nDESCRIPTION: Example of adding a custom request handler using the Mendix Core API. This allows extending the default request handling capabilities with custom implementations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/request-handlers.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom.mendix.core.Core#addRequestHandler({name of the request handler})\n```\n\n----------------------------------------\n\nTITLE: Describing Custom Action Types\nDESCRIPTION: No explicit code snippets are present in the text. The content primarily consists of descriptive text and guidelines for creating different types of custom actions in the Mendix Application Test Suite, supported by images showing examples in the UI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-general/custom-action-definitions.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Job Status API Response JSON\nDESCRIPTION: JSON response structure returned when checking a job status, containing the current status of the job which can be Queued, Running, Completed, or Failed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Status\": \"<status>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Basic SVG Rectangle Example\nDESCRIPTION: Demonstrates a simple SVG implementation with a rectangle element using stroke property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-svg.md#2025-04-21_snippet_0\n\nLANGUAGE: svg\nCODE:\n```\n<svg viewBox=\"0 0 100 100\">\n    <rect x=\"10\" y=\"10\" width=\"80\" height=\"80\" stroke=\"blue\"/>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Setting Administrator Default Credentials in Mendix\nDESCRIPTION: Default credentials used for Administrator access in Mendix applications. Username defaults to 'MxAdmin' and password defaults to '1'. These should be changed for security purposes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/security/app-security/administrator.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUsername: MxAdmin\nPassword: 1\nRole: Administrator\n```\n\n----------------------------------------\n\nTITLE: Creating a Temporary Working Copy with Platform SDK in TypeScript\nDESCRIPTION: Demonstrates how to create a temporary working copy of a Team Server branch for making changes to an app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst workingCopy = await app.createTemporaryWorkingCopy(\"main\");\n\nconsole.log(`Working ID: ${workingCopy.workingCopyId}`);\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Get Item/Row Index Action\nDESCRIPTION: Markdown table detailing the input parameters for the 'Get Item/Row Index' action. It specifies the parameter name, datatype, whether it's required, and a description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-multiviews/rg-one-get-itemrow-index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required| Description\n--- | --- | --- | ---\nItem/Row | WebElement |yes| The DataGrid row or TemplateGrid/ListView Item\n```\n\n----------------------------------------\n\nTITLE: Custom SQL Concatenation Query\nDESCRIPTION: Example of a custom SQL query to concatenate first name and last name columns into a full name field. Uses the database-specific concatenation operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-replication.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n[%startobject%].firstname || ' ' || [%startobject%].lastname\n```\n\n----------------------------------------\n\nTITLE: Initializing 3D Viewer Service with Java Action\nDESCRIPTION: This snippet details how to initialize the 3D Viewer service in a Mendix application by executing a microflow at app startup. The Java action 'VisServerAction' from the 3D Viewer is invoked to enable the service functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n1. Create a **Startup** microflow and add the **Viewer3D/USE_ME/VisServerAction** Java action to it.\n2. Set the return type of the microflow to **Boolean** with a **Value** of **true**.\n3. Set this microflow as the **After startup** step via **App Settings** > **Runtime** > [After startup](/refguide/app-settings/#after-startup).\n```\n\n----------------------------------------\n\nTITLE: Example Regular Expression for Dutch Postal Code\nDESCRIPTION: A regular expression pattern that validates Dutch postal codes, which consist of four digits followed by an optional space and two letters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/regular-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\n[1-9][0-9][0-9][0-9] ?[A-Za-z][A-Za-z]\n```\n\n----------------------------------------\n\nTITLE: Creating a Dataset Microflow for Populating the Knowledge Base\nDESCRIPTION: A microflow that checks if data exists and imports JSON demo data if needed. This creates the initial dataset that will be used to ground the LLM.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/how-to/ground_your_llm_in_data.md#2025-04-21_snippet_1\n\nLANGUAGE: microflow\nCODE:\n```\nTickets_CreateDataset\n- Retrieve (From database, MyFirstModule.Ticket, First, Ticket)\n- Decision (Tickets?, Expression, $Ticket = empty)\n  - false: End event\n  - true: \n    - Create Variable (String, TicketJSON)\n    - Import With Mapping (TicketJSON, <mapping>, All, Yes without events, No)\n```\n\n----------------------------------------\n\nTITLE: Cancelling Scheduled Notifications in Mendix\nDESCRIPTION: This snippet provides the procedures to cancel scheduled notifications using two JavaScript actions: Cancel Scheduled Notification and Cancel All Scheduled Notifications. It guides the user on how to implement both methods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-schedule-cancel.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n1. Create a nanoflow named  *ACT_CancelAllScheduledNotifications*.\n2. Drag a JavaScript action named **Cancel all scheduled notifications** into your nanoflow:\n3. Double-click your new cancel notification action.\n4. Select  **Use return value** > **No**.\n5. Click **OK**.\n6. Drag this nanoflow onto your home screen and name its button *Cancel all*.\n```\n\n----------------------------------------\n\nTITLE: Applying YAML manifests for Tekton installation on Kubernetes\nDESCRIPTION: This snippet applies YAML manifests to install Tekton Pipeline and Tekton Triggers on a Kubernetes cluster.  It uses `kubectl apply` command to create the necessary resources from the provided URLs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/previous/v0.41.1/release.yaml\nkubectl apply --filename https://storage.googleapis.com/tekton-releases/triggers/previous/v0.22.1/release.yaml\nkubectl apply --filename https://storage.googleapis.com/tekton-releases/triggers/previous/v0.22.1/interceptors.yaml\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Free App Environment\nDESCRIPTION: API request to create a new Free App environment for a specified project ID. This request requires the project ID that should be linked to the new Free App.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps\nHost: deploy.mendix.com\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"ProjectId\" :  \"f5129445-b638-42f4-8108-5f370c85dc57\"\n}\n```\n\n----------------------------------------\n\nTITLE: Runtime Resolution for Data Grid Refresh\nDESCRIPTION: JSON representation of how the data grid refresh operation is resolved in the Mendix Runtime. It specifies the operation type as 'retrieve' and includes constants and parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {\n        \"UsedAttributes\": [\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Firstname\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Lastname\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Jobtitle\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Department\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.DateOfBirth\"\n        ],\n        \"XPath\": \"//MyFirstModule.Employee\",\n        \"UsedAssociations\": [],\n        \"PageName\": \"MyFirstModule.Employee_Overview\",\n        \"WidgetName\": \"MyFirstModule.Employee_Overview.dataGrid2_1\"\n    },\n    \"id\": \"d7OowNqyCU+2ZqE2+Fv6rg\",\n    \"parameters\": {},\n    \"type\": \"retrieve\"\n}\n```\n\n----------------------------------------\n\nTITLE: Quick Installation of Mendix SDK Dependencies\nDESCRIPTION: Bash commands to create a new Node.js project and install required Mendix SDK dependencies and TypeScript\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir my-app-generator\n$ cd my-app-generator\n$ npm init --yes\n$ npm install -g typescript\n$ npm install mendixmodelsdk mendixplatformsdk when @types/when --save\n$ tsc --init --target es2018\n```\n\n----------------------------------------\n\nTITLE: Implementing Todo List Client Logic in JavaScript\nDESCRIPTION: Handles client-side functionality including message passing with Studio Pro, todo item management, and UI updates. Implements event listeners and API communication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nfunction postMessage(message, data) {\n  window.chrome.webview.postMessage({ message, data });\n}\n\n// Register message handler.\nwindow.chrome.webview.addEventListener(\"message\", handleMessage);\n// Indicate that you are ready to receive messages.\npostMessage(\"MessageListenerRegistered\");\n\nasync function handleMessage(event) {\n  const { message, data } = event.data;\n  if (message === \"RefreshToDos\") {\n      await refreshToDos();\n  }\n}\n\nasync function refreshToDos() {\n    let todosResponse = await fetch(\"./todos\");\n    let todos = await todosResponse.json();\n\n    let todoDiv = document.getElementById(\"todo\");\n    let doneDiv = document.getElementById(\"done\");\n\n    let todoItems = [];\n    let doneItems = [];\n\n    for (const todo of todos.ToDos) {\n        let item = document.createElement(\"div\");\n\n        let checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.id = `todo-${todo.Id}`;\n        checkbox.checked = todo.IsDone;\n        checkbox.addEventListener(\"click\", () => {\n           postMessage(\"ChangeToDoStatus\", { id: todo.Id, isDone: !todo.IsDone });\n        });\n\n        let label = document.createElement(\"label\");\n        label.htmlFor = checkbox.id;\n        label.innerText = todo.Text;\n\n        item.replaceChildren(checkbox, label);\n\n        if (todo.IsDone) {\n            doneItems.push(item);\n        } else {\n            todoItems.push(item);\n        }\n    }\n\n    todoDiv.replaceChildren(...todoItems);\n    doneDiv.replaceChildren(...doneItems);\n}\n\nasync function addToDo(){\n    let addToDoInput = document.getElementById(\"addToDoInput\");\n    const toDoText = addToDoInput.value;\n    postMessage(\"AddToDo\", { toDoText });\n    addToDoInput.value = \"\";\n}\n\ndocument.getElementById(\"addToDoButton\").addEventListener(\"click\", addToDo);\ndocument.getElementById(\"clearDoneButton\").addEventListener(\"click\", () => {\n    postMessage(\"ClearDone\");\n});\n\nawait refreshToDos();\n```\n\n----------------------------------------\n\nTITLE: Implementing Read-Only Functionality in TypeScript\nDESCRIPTION: This snippet replaces the default React component in the TextBox widget to enable read-only functionality based on user permissions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n    const value = props.textAttribute.value || \"\";\n    return <TextInput\n        value={value}\n        onChange={props.textAttribute.setValue}\n        tabIndex={props.tabIndex}\n        disabled={props.textAttribute.readOnly}\n    />;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Web View Model for Dockable Pane in C#\nDESCRIPTION: This code implements a WebViewDockablePaneViewModel that displays web content within the dockable pane. It overrides the InitWebView method to set the web address to be displayed in the pane.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-dockable-pane.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing Mendix.StudioPro.ExtensionsAPI.UI.DockablePane;\nusing Mendix.StudioPro.ExtensionsAPI.UI.WebView;\n\nnamespace MyCompany.MyProject.MendixExtension;\n\npublic class MyDockablePaneExtensionWebViewModel(string homePage) : WebViewDockablePaneViewModel\n{\n    public override void InitWebView(IWebView webView) => webView.Address = new Uri(homePage);\n}\n```\n\n----------------------------------------\n\nTITLE: Request State Statistics Logging in Mendix\nDESCRIPTION: Example of JSON-formatted log output showing request state statistics including session details and entity counts. This is generated when TRACE level logging is enabled on the RequestStatistics log node.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/runtime-java/transient-objects-garbage-collecting.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTRACE: Request-State statistics: {\n  session: \"fd0771fe-8c12-49cf-8667-921058b116a3\",\n  action: \"execute-action\",\n  total: 5,\n  details: {\n    \"MyModule.MyEntity\": 3,\n    \"AnotherModule.SomeEntity\": 2\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Delete Object SQL Query\nDESCRIPTION: SQL delete statement to remove an employee record.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nDELETE FROM \"myfirstmodule$employee\"\nWHERE \"id\" = ?\n```\n\n----------------------------------------\n\nTITLE: Committing Employee Object Changes to Database in Mendix\nDESCRIPTION: JSON request to commit the changes to an Employee object to the database. This finalizes the create/update operation and persists the data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"commit\",\n   \"params\":{\n      \"guid\":\"281474976710757\"\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee6e9b5eddc0\":25\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Account Active Status API Endpoint\nDESCRIPTION: HTTP endpoint specification for activating or deactivating a user account in a company. This API allows Company Managers and Member Managers to control user access to the Mendix Platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_5\n\nLANGUAGE: http\nCODE:\n```\n HTTP Method: PUT\n URL: https://usermanagement.mendix.com/legacy-api/1/users/<openId>\n```\n\n----------------------------------------\n\nTITLE: Greater Than Result Example in Java\nDESCRIPTION: Shows the Boolean output of a greater than comparison, returning True.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nTrue\n```\n\n----------------------------------------\n\nTITLE: Using themecss Token in HTML Index Pages\nDESCRIPTION: This HTML snippet demonstrates the use of the {{themecss}} token in the head section of index pages. This token ensures the same styling configured in settings.json is loaded in the client browser, maintaining consistency between development and production environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/configuring-your-theme.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<head>\n    {{themecss}}\n</head>\n```\n\n----------------------------------------\n\nTITLE: Basic Authentication Header Encoding\nDESCRIPTION: Demonstrates the format for creating a Basic authentication HTTP header with base64 encoded userid and password\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/best-practices-security.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\n\"Authorization\": \"Basic userid:password\"\n```\n\n----------------------------------------\n\nTITLE: Adding Custom SCSS Variable in Web Environment\nDESCRIPTION: Defines a custom SCSS variable in the theme's custom-variables file that can be used throughout the web application styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\n$company-header-text-size: 30px;\n```\n\n----------------------------------------\n\nTITLE: Including Editability Section in Drop-Downs\nDESCRIPTION: This snippet includes the editability properties for drop-down widgets which defines the allowed interactions that end-users can perform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Selection Property in Mendix Pluggable Widget\nDESCRIPTION: This code snippet demonstrates how to define a selection property in a Mendix pluggable widget. The property links to a datasource and supports None, Single, and Multi selection types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_22\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"selection\" type=\"selection\" dataSource=\"datasource\">\n  <caption>Selection</caption>\n  <description />\n  <selectionTypes>\n    <selectionType name=\"None\" />\n    <selectionType name=\"Single\" />\n    <selectionType name=\"Multi\" />\n  </selectionTypes>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Adding Dockable Pane to View Menu in C#\nDESCRIPTION: This code snippet shows how to override the ViewMenuCaption property to add the dockable pane directly to Studio Pro's View menu without creating a separate menu extension.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-dockable-pane.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\npublic override string? ViewMenuCaption => \"My pane without custom menu\";\n```\n\n----------------------------------------\n\nTITLE: URL Encoding in Java\nDESCRIPTION: Demonstrates urlEncode() function that converts a string to be safely used in URLs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_14\n\nLANGUAGE: java\nCODE:\n```\nurlEncode('Hello, world!')\n```\n\n----------------------------------------\n\nTITLE: Customizing Page Explorer Caption in TypeScript\nDESCRIPTION: This function allows customization of the widget caption in the Page Explorer. It receives the widget values and platform type and should return a string to be used as the caption.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getCustomCaption(values: ValuesAPI, platform: \"desktop\" | \"web\"): string\n```\n\n----------------------------------------\n\nTITLE: Admin Policy for Shared Bucket Management\nDESCRIPTION: IAM policy for admin user to manage shared bucket environments. Allows creation and deletion of IAM users and policies with mendix- prefix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"iamPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:DeleteAccessKey\",\n                \"iam:PutUserPolicy\",\n                \"iam:DeleteUserPolicy\",\n                \"iam:DeleteUser\",\n                \"iam:CreateUser\",\n                \"iam:CreateAccessKey\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:user/mendix-*\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ResNet50 Pre-processor in Java\nDESCRIPTION: Java implementation of image pre-processing for ResNet50 model including OpenCV initialization, image resizing, normalization and conversion to base64 format. Requires OpenCV library and handles 224x224 image dimensions with specific normalization parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nstatic {\n  nu.pattern.OpenCV.loadShared(); //OpenCV initialization\n}\n\n@java.lang.Override\npublic IMendixObject executeAction() throws Exception\n{\n  this.RawImage = this.__RawImage == null ? null : resnet50.proxies.ResNet.initialize(getContext(), __RawImage);\n\n  // BEGIN USER CODE\n  ByteArrayOutputStream bos = new ByteArrayOutputStream();\n  this.RawImage.getContents(getContext(), bos);\n  byte[] binaryImage = bos.toByteArray();\n  Mat img = Imgcodecs.imdecode(new MatOfByte(binaryImage), Imgcodecs.IMREAD_COLOR);\n\n  // 1. resize image\n  Mat rim = new Mat();\n  Size sz = new Size(224, 224);\n  Imgproc.resize(img, rim, sz);\n\n  // 2. normalize image\n  float[] mean = new float[] {0.485f, 0.456f, 0.406f};\n  float[] std = new float[] {0.229f, 0.224f, 0.225f};\n  float[][][][] inputArray = new float[1][3][224][224];\n  for(int i = 0; i < 224; i++) {\n    for(int j = 0; j < 224; j++) {\n      for(int k = 0; k <= 2; k++) {\n        double[] rawValue = rim.get(i, j);\n        float normalizedValue = (((float) (rawValue[Math.abs(k - 2)] / 255) - mean[k]) / std[k]);\n        inputArray[0][k][i][j] = normalizedValue;\n      }\n    }\n  }    \n  InputStream is = MLKit.toInputStream(inputArray);\n  String base64 = MLKit.toBase64(is);\n  IMendixObject outputObject = Core.instantiate(getContext(), \"ResNet50.ML_Input_Entity_ResNet50ModelMapping\");\n  outputObject.setValue(getContext(), \"Data\", base64);\n  return outputObject;\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Template with CSP Meta Tag\nDESCRIPTION: HTML template showing the implementation of CSP meta tag and required script references for local testing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/csp.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<html>\n    <head>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self';\">\n    </head>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Navigating to Native Builder Directory in PowerShell\nDESCRIPTION: Navigate to the directory containing the Native Builder executable file to prepare for running commands. Replace `{path to Native Builder executable file}` with the actual path to the file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-ota-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\ncd {path to Native Builder executable file}`\n```\n\n----------------------------------------\n\nTITLE: Cache Busting for Mendix React Client - HTML\nDESCRIPTION: This snippet shows the cache busting implementation for the Mendix React Client where the cache busting parameter is included in the JavaScript load script, necessary for proper cache invalidation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_21\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"dist/index.js?{{cachebust}}\" type=\"module\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Uploaded Model Entity Attributes\nDESCRIPTION: Creating attributes for the UploadedModel entity to store model upload information for 3D model visualization\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<figure src=\"/attachments/partners/siemens/3d-viewer/uploader-uploadedmodelinfo.jpg\" alt=\"uploader-uploadedmodelinfo\" class=\"no-border\">\n```\n\n----------------------------------------\n\nTITLE: Fixing NoClassDefFoundError in Java REST Call\nDESCRIPTION: This snippet addresses an issue where a REST call caused a java.lang.NoClassDefFoundError exception related to the SLF4J LoggerFactory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.20.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\njava.lang.NoClassDefFoundError: org/slf4j/LoggerFactory\n```\n\n----------------------------------------\n\nTITLE: Switching Between Document Tabs Using Keyboard Shortcuts\nDESCRIPTION: Keyboard shortcuts were added to switch between open document tabs in Studio Pro. Ctrl+Page Up/Down switches between consecutive tabs, and Ctrl+1-0 switches to a specific tab position.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.12.md#2025-04-21_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\nCtrl + Page Up: Switch to previous tab\nCtrl + Page Down: Switch to next tab\nCtrl + 1-0: Switch to tab in positions 1-10\n```\n\n----------------------------------------\n\nTITLE: End of Month Date Calculation in Java\nDESCRIPTION: Calculates the end of the month (23:59 on last day) for a given date using the endOfMonth function. Takes a Date and time parameter and returns a Date and time value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nendOfMonth(dateTime(2007, 2, 7, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Querying with hours-from-dateTime and Timezone in Studio Pro\nDESCRIPTION: This query retrieves all objects where the hours part of `DateAttribute` is 8, specifically in the 'America/New_York' time zone. This demonstrates how to use the optional timezone parameter to specify the time zone for hour extraction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [hours-from-dateTime(DateAttribute, 'America/New_York') = 8]\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Word Character \\w\nDESCRIPTION: This example demonstrates the use of `\\w` in regular expressions, which represents a word character (a letter, digit, or underscore). It's an abbreviation for `[A-Za-z0-9_]`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: regex\nCODE:\n```\n\"\\w\"\n```\n\n----------------------------------------\n\nTITLE: Creating Vault Policy\nDESCRIPTION: Commands to create a Vault policy with read capabilities for specific secrets\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nvault policy write <{env-policy}> - <<EOF\npath \"secret/data/<{env-db-secret}>\" {\n    capabilities = [\"read\"]\n}\npath \"secret/data/<{env-file-secret}>\" {\n    capabilities = [\"read\"]\n}\npath \"secret/data/<{env-configuration-secret}>\" {\n    capabilities = [\"read\"]\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Calling Core.http().executeHttpRequest(...) in Java action\nDESCRIPTION: This fix addresses an issue where a custom Java action calling `Core.http().executeHttpRequest(...)` did not use the configured certificate when also calling a host for which a certificate was configured. It ensures that the certificate is properly used in the HTTP request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.8.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"Core.http().executeHttpRequest(...)\"\n```\n\n----------------------------------------\n\nTITLE: Content Security Policy Configuration\nDESCRIPTION: This text provides a starting point for configuring a Content Security Policy (CSP) for a basic Mendix application. The CSP defines trusted sources for resources, enhancing application security. The policy includes directives for default sources, scripts, connections, fonts, images, styles, base URI, form actions, objects, and frame ancestors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/environments-details.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ndefault-src 'self' ; script-src 'self' 'unsafe-inline' 'unsafe-eval' ; connect-src 'self' ; font-src 'self' https://fonts.gstatic.com data: ; img-src 'self' data: ; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com ; base-uri 'self' ; form-action 'self' ; object-src 'none' ; frame-ancestors 'self' ;\n```\n\n----------------------------------------\n\nTITLE: Editing OperatorConfiguration in OpenShift\nDESCRIPTION: Command to edit the OperatorConfiguration custom resource in OpenShift. Replace {namespace} with the namespace where the operator is installed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} edit operatorconfiguration mendix-operator-configuration\n```\n\n----------------------------------------\n\nTITLE: Studio Pro to Model SDK API Reference Tables\nDESCRIPTION: Reference tables mapping Mendix Studio Pro microflow features to their Model SDK API equivalents, covering retrieval actions, web client activities, service calls, and variable operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-refguide/understanding-the-metamodel/microflows-metamodel.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Studio Pro Guide | Model SDK API docs |\n| --- | --- |\n| [Retrieve](/refguide/retrieve/) |[RetrieveSource](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/microflows.retrievesource.html) |\n| [XPath](/refguide/xpath/) constraints |[AssociationRetrieveSource](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/microflows.associationretrievesource.html) |\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Sanitization in DOMPurify\nDESCRIPTION: An example JSON configuration for DOMPurify sanitization that disallows all style tags. This demonstrates how to customize HTML sanitization settings for the HTML Element widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/htmlelement.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"FORBID_TAGS\": [\n    \"style\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Frontmatter for Strategic Partners Page\nDESCRIPTION: YAML frontmatter configuration block that defines the page metadata, URL, weight, content type and version settings for the Strategic Partners documentation page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Strategic Partners\"\nurl: /partners/\ndescription: \"Documentation for AWS, SAP, Siemens, and Snowflake widgets written and maintained by Mendix\"\nweight: 50\nno_list: false\ndescription_list: true\ncascade:\n    - content_type: \"Strategic Partners\"\n    - mendix_version: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Get Security Group Response Example\nDESCRIPTION: Example JSON response showing the structure of a security group object containing UUID and URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"uuid\": \"a552a41b-5b30-41000-bab7-ad102eacd653\",\n    \"getUrl\" : \"https://usermanagement.mendix.com/legacy-api/1/groups/a552a41b-5b30-41000-bab7-ad102eacd653\"\n}\n```\n\n----------------------------------------\n\nTITLE: Range Mode Configuration - Tozero (JSON)\nDESCRIPTION: This snippet configures the y-axis range mode to \"tozero\", which is the default range mode. It sets both positive and negative ranges for the axes to start from the zero mark. This ensures that the zero value is always visible on the axis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"rangemode\": \"tozero\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Modifying Brand Primary Color with JavaScript\nDESCRIPTION: This snippet shows how to modify the `brand.primary` color variable in the *custom-variables.js* file to change the default color of primary UI elements. This modification directly impacts the appearance of elements styled with the primary brand color. The color is changed from '#0595DB' to 'rosybrown'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-styling/how-to-use-native-styling.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n    //Brand Style\n    export const brand = {\n        primary: \"rosybrown\",\n        success: \"#76CA02\",\n        warning: \"#f99b1d\",\n        danger: \"#ed1c24\",\n    };\n```\n\n----------------------------------------\n\nTITLE: Indent Between List Items and Code Block in Markdown\nDESCRIPTION: This snippet explains how to properly indent list items before a code block in Markdown, emphasizing that indents must use spaces instead of tabs. It also notes issues that may arise with special characters or line starting with certain symbols.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n1. First list item\n2. Second list item\n\n    ```\n    Code blocks do NOT need trailing spaces to be indented.\n    Indents must be spaces, not tabs, otherwise a bug shows in rendering an extra '`' symbol.\n    It does not matter if a code block contains special characters, like {{}} or if a line starts with a hyphen.\n    ```\n```\n\n----------------------------------------\n\nTITLE: Styling Mendix Native Maps Widget\nDESCRIPTION: Style properties for maps widget including container, loading overlay, loading indicator and location markers. Includes customization for colors and opacity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_maps_Maps = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  loadingOverlay: {\n    // This has all ViewStyle properties.\n  },\n  loadingIndicator: {\n    color: null, // This is the color of the loading indicator.\n  },\n  marker: {\n    color: null, // This is the color of the location marker.\n    opacity: null, // This is the opacity of the location marker.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Stopping Mendix Operator and Agent in Kubernetes\nDESCRIPTION: Commands to scale down the Mendix Operator and Mendix agent deployments to 0 replicas before creating a Velero backup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-velero.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl scale deployment mendix-agent --replicas=0\nkubectl scale deployment mendix-operator --replicas=0\n```\n\n----------------------------------------\n\nTITLE: Nanoflow Object Commit in Online App\nDESCRIPTION: Illustrates committing objects in a nanoflow for an online Mendix application, which automatically sends commit requests to the Mendix Runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/committing-objects.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\nCommit object(s)\n    Object: $Customer\n    (Automatically runs events and refreshes client)\n```\n\n----------------------------------------\n\nTITLE: Defining a Domain Model Structure in Mendix Project JSON\nDESCRIPTION: This JSON snippet defines a domain model container with properties for entities, annotations, associations, and cross-associations. The domain model appears to be empty as all collection properties are initialized as empty arrays.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n        },\n        {\n            \"$ID\": \"6d17d485-2170-462e-8652-cdbf00f65d8e\",\n            \"$Type\": \"DomainModels$DomainModel\",\n            \"$ContainerID\": \"7b78a151-2c00-4bb8-996d-0e87200f14a9\",\n            \"$ContainerProperty\": \"domainModel\",\n            \"entities\": [],\n            \"annotations\": [],\n            \"associations\": [],\n            \"crossAssociations\": [],\n            \"documentation\": \"\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Image Include\nDESCRIPTION: Markdown shortcode for including an image showing Complete Task Properties with specified attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/complete-task.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/complete-task/complete-task-properties.jpg\" alt=\"Complete Task Properties\" max-width=100% >}}\n```\n\n----------------------------------------\n\nTITLE: Granting Execute Permission on SQL Server\nDESCRIPTION: This SQL command grants execute permission on the `usp_nextsequencevalue` object to a specified database user. This permission is required for the Mendix runtime to read and write the contents of all tables when the `db_owner` role is not assigned.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/setting-up-the-database-user.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n\"GRANT EXECUTE ON OBJECT::usp_nextsequencevalue TO <YourDatabaseUser>\"\n```\n\n----------------------------------------\n\nTITLE: SQL INSERT Query for Employee Creation in Mendix\nDESCRIPTION: SQL INSERT statement generated by the Mendix Runtime Server to persist a new Employee object in the database after a commit action is received from the client.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\n INSERT INTO \"myfirstmodule$employee\" (\"id\",\n \"firstname\",\n \"dateofbirth\",\n \"jobtitle\",\n \"department\",\n \"lastname\")\n VALUES (?,\n ?,\n ?,\n ?,\n ?,\n ?)\n```\n\n----------------------------------------\n\nTITLE: Control Bar Properties Example - Date Export Format\nDESCRIPTION: Property configuration for date export format in Excel export button functionality. Controls how dates are formatted when exporting grid data to Excel.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/grids/control-bar.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* \"Date value\" *(default)* – date values are exported as real dates, so that it is possible to use Excel date functions like sorting\n* \"Text\" – date values are exported exactly as shown in the data grid\n```\n\n----------------------------------------\n\nTITLE: Defining ROUND Function Syntax in SQL\nDESCRIPTION: The ROUND function is defined to round a numeric expression to a specified number of decimal places. It requires a numeric_expression for the value to round and a length for the number of decimals.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-round.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nROUND ( numeric_expression , length )\n```\n\n----------------------------------------\n\nTITLE: Configuring JMX Options in YAML\nDESCRIPTION: YAML configuration showing the Java options required to enable JMX monitoring for Mendix Runtime, including port settings, authentication, and SSL configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/monitoring-mendix-using-jmx.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njavaopts: [\n\"-Dfile.encoding=UTF-8\", \"-Xmx128M\", \"-Xms128M\",\n\"-Djava.io.tmpdir=/tmp\",\n\"-Dcom.sun.management.jmxremote\",\n\"-Dcom.sun.management.jmxremote.port=7845\",\n\"-Dcom.sun.management.jmxremote.local.only=false\",\n\"-Dcom.sun.management.jmxremote.authenticate=false\",\n\"-Dcom.sun.management.jmxremote.ssl=false\",\n\"-Djava.rmi.server.hostname=192.168.1.70\",\n]\n```\n\n----------------------------------------\n\nTITLE: Modifying settings.json for PhoneGap\nDESCRIPTION: This JSON snippet demonstrates the settings.json file used in PhoneGap applications. It contains configuration properties such as the application URL, hybrid profiles for tablets and phones, offline capability, and PIN requirement. The key step is to change the `url` property to point to the IP address of the local machine where the Mendix app is running, typically using port 8080.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/debug-a-mobile-app.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"url\": \"http://10.140.149.92:8080\",\n  \"hybridTabletProfile\": \"\",\n  \"hybridPhoneProfile\":  \"\",\n  \"enableOffline\": false,\n  \"requirePin\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Using EndsWith String Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the endsWith helper to filter items where an attribute value ends with a specified substring. Works with String, Integer, Long, and Decimal attributes and String literals for both text and numeric comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_38\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrStr = attribute(this.props.myAttributeA.id); // string attribute\nconst subStr = literal(\"secret\");\n\n// filter keeps items where value ends with substring \"secret\"\n// like \"top secret\", but not \"my secret password\" or \"secret file\"\nconst filterCondition1 = startsWith(attrStr, subStr);\n\n// also works with numeric attributes\nconst attrNum = attribute(this.props.myAttributeB.id); // integer attribute\nconst subNum = literal(\"1337\");\n\n// filter keeps items where value ends with sequence of numbers \"1337\"\n// like \"1231337\", but not \"133700\" or \"913379\"\nconst filterCondition2 = startsWith(attrNum, substrNum);\n```\n\n----------------------------------------\n\nTITLE: Runtime Resolution for Object Delete Operation\nDESCRIPTION: JSON representation of how the delete operation is resolved in the Mendix Runtime. It specifies the operation type as 'delete' and includes the operation ID and parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {},\n    \"id\": \"FrPcy03Wm0u/u3QdXKqw6Q\",\n    \"parameters\": {\n        \"Objects\": [\n            \"[MyFirstModule.Employee]\"\n        ]\n    },\n    \"type\": \"delete\"\n}\n```\n\n----------------------------------------\n\nTITLE: Label Section Link\nDESCRIPTION: Links to the label section of the text area properties documentation, explaining how to manage labels for the text area.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Employee Data with XPath Query\nDESCRIPTION: Simple XPath query to retrieve all employee objects from the MyFirstModule. This query gets translated through OQL to SQL before execution against the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_23\n\nLANGUAGE: xpath\nCODE:\n```\n//MyFirstModule.Employee\n```\n\n----------------------------------------\n\nTITLE: Automatic Client Registration - Client Credentials\nDESCRIPTION: JSON payload for registering a client with client credentials grant type and minimal scope\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/oidc-provider.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"client_id\" : \"DemoClient\",\n    \"client_name\" : \"DemoClient\",\n    \"client_secret\" : \"c46591bd-8fae-4f90-9efb-b5973bea04df\",\n    \"grant_types\": [ \"client_credentials\" ],\n    \"scope\": \"openid\" \n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the ATS documentation page, defining metadata like title, URL, description and aliases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"ATS\"\nurl: /appstore/partner-solutions/ats/\ndescription: \"Presents an overview of documents about the Mendix Application Test Suite, which is built by CLEVR in Mendix on top of Selenium.\"\nno_list: false\ndescription_list: true\naliases:\n    - /addons/ats-addon/\n    - /addons/ats-addon/index.html\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Uploader Properties\nDESCRIPTION: Configuration options for Image Uploader widget, including maximum file size, allowed extensions, and thumbnail dimensions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/image-uploader.md#2025-04-21_snippet_1\n\nLANGUAGE: configuration\nCODE:\n```\nMaximum file size: 5 MB\nAllowed Extensions: jpeg;png\nThumbnail Width: [pixel value]\nThumbnail Height: [pixel value]\n```\n\n----------------------------------------\n\nTITLE: Adding Minutes to Date in Java\nDESCRIPTION: Demonstrates adding 3 minutes to a date using addMinutes function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\naddMinutes(dateTime(2007, 1, 1, 1, 1, 1), 3)\n```\n\n----------------------------------------\n\nTITLE: Domain Model Configuration for Reference Selector Constraints\nDESCRIPTION: Example of a domain model structure enabling constrained reference selectors with associations between order line, category, and product entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/input-widgets/reference-selector.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nOrderLine\n  - Association to Category\n  - Association to Product\nProduct\n  - Association to Category\n```\n\n----------------------------------------\n\nTITLE: Module Types Specification Table\nDESCRIPTION: Markdown table defining different types of modules in a Mendix solution, their contents, implementation details, and team responsibilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/create-solutions/sol-adapt/sol-architecting.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Type | Contains | Implementation | Responsibility |\n| --- | --- | --- | --- |\n| [Solution modules] | Immutable common core with intellectual property and core logic | Hidden | Build team |\n| [(Open) application modules] | Adaptable parts of the app | Visible, can be changed | Shared between build and implementation teams | \n| [UI modules] | Contains theming | Shown, can be changed | Shared between build and implementation teams |\n| Customer-specific modules | Customer-specific additions | Visible | Implementation team |\n```\n\n----------------------------------------\n\nTITLE: Extended OQL Query for Product Overview with Entity IDs\nDESCRIPTION: Enhanced SQL query that includes CategoryId and SupplierId in addition to other product attributes, enabling the application to update associations between Product, Supplier, and Category entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  p.ProductId as ProductId,\n  p.ProductName as ProductName,\n  p.QuantityPerUnit as QuantityPerUnit,\n  p.Discontinued as Discontinued,\n  s.CompanyName as Supplier,\n  c.CategoryName as Category,\n  s.SupplierId as SupplierId,\n  c.CategoryId as CategoryId\nFROM Shop.Product as p\n  JOIN p/Shop.Product_Supplier/Shop.Supplier as s\n  JOIN p/Shop.Product_Category/Shop.Category as c\n```\n\n----------------------------------------\n\nTITLE: Font Configuration (JSON)\nDESCRIPTION: This snippet demonstrates how to configure fonts for various chart elements, including global font settings and specific font settings for legend, title, hover label, x-axis, and y-axis elements. This allows you to customize the font family, size, and color for the entire chart or specific elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"font\": {\n    \"family\": \"Open Sans,verdana, arial, sans-serif\",\n    \"size\": 12,\n    \"color\": \"black\"\n  },\n  \"legend\": {\n    \"font\": {}\n  },\n  \"titlefont\": {},\n  \"hoverlabel\": {\n    \"font\": {}\n  },\n  \"xaxis\": {\n    \"titlefont\": {},\n    \"tickfont\": {}\n  },\n  \"yaxis\": {\n    \"titlefont\": {},\n    \"tickfont\": {}\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Scaling Environments Example Output in JSON\nDESCRIPTION: Example response output for scaling a Mendix environment. The response includes the updated environment configuration with the new instances and memory allocation, along with other environment details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_28\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Status\": \"Running\",\n    \"Instances\": 2,\n    \"Mode\": \"Acceptance\",\n    \"Production\": false,\n    \"MemoryPerInstance\": 2048,\n    \"TotalMemory\": 8192,\n    \"ModelVersion\": \"1.1.0.253\",\n    \"MendixVersion\": \"7.5.0\",\n    \"Url\": \"https://calc.mendixcloud.com\"\n}\n```\n\n----------------------------------------\n\nTITLE: Backup Archive File Listing Example\nDESCRIPTION: Shell command representation of a typical backup archive file structure, showing metadata and file tree contents\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/backups/restore-backup.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n.metadata\ndb/db.backup\ntree/0d/3e/0d3e301f-5551-46f8-ad44-8de2be084c95\ntree/1f/bd/1fbdf930-67f9-47ee-b30e-e84c4c983e85\ntree/22/70/22708b5d-3e9e-40ba-95e3-4a2ef1a02db3\ntree/28/02/280283d7-0807-44e3-b80e-f699cee91ffa\ntree/37/8c/378c70d9-605b-4cb4-a223-26e718cec733\ntree/46/9c/469c9c80-34d3-4810-8494-86b63eb37214\ntree/4d/8f/4d8ffd66-7ad3-4f5c-a992-985cf360581b\n```\n\n----------------------------------------\n\nTITLE: Replacing Text in Validation Messages\nDESCRIPTION: This microflow replaces the text in validation messages, accepting the translated text, a variable to append, and token numbers for position indication within the message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/refguide/modeling/menus/translatable-texts/translatable-validation-messages/model4.jpg\" class=\"no-border\" width=\"800\" >}}\n```\n\n----------------------------------------\n\nTITLE: Input Widget Structure Without Label in HTML\nDESCRIPTION: Illustrates the HTML structure for an input widget in either horizontal or vertical data view, with 'Show label' set to 'No', including input control and optional validation message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-group mx-name-textBox4 [...]\" [...]>\n\t<!-- A form group without a label is still a form-group -->\n    \n\t<INPUT-CONTROL/>\n\t<!-- OR for readonly style text -->\n\t<div class=\"form-control-static\">value</div>\n    \n\t<!-- optional: validation message -->\n\t<div class=\"alert alert-danger mx-validation-message\">checkboom</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Styling Barcode Scanner in JavaScript\nDESCRIPTION: Provides style settings for a barcode scanner widget in a Mendix app via JavaScript. Includes properties for customizing the container and mask attributes like color, size, and background. Requires familiarity with ViewStyle properties and widget functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_barcodescanner_BarcodeScanner = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  mask: {\n    color: '#62B1F6', // Property to set the color of the mask border indicators.\n    width: null, // Property to set the width of the barcode reader.\n    height: null, // Property to set the height of the barcode reader.\n    backgroundColor: 'rgba(0, 0, 0, 0.6)' // Property to set the background color of the mask.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Background Color of a Chart in JSON\nDESCRIPTION: Configures the background color of the chart area using the paper_bgcolor property for visual aesthetics.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"paper_bgcolor\": \"#FFF\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Search Parameter to REST Template in Mendix\nDESCRIPTION: This snippet shows how to add a search parameter to the REST template in a Mendix microflow. It appends a name_like parameter to the existing template.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/server-side-paging.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n```\n&name_like={4}\n```\n```\n\n----------------------------------------\n\nTITLE: Restoring a Snapshot in Mendix\nDESCRIPTION: This Bash script demonstrates how to trigger a restore operation of a Mendix snapshot with a POST request. Required parameters include the project and environment identifiers, the source snapshot ID, and optionally a db_only flag for database-only restoration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/v2/apps/b5f19af7-7453-465e-b9a1-d7556f524c1e/environments/d436e0cd-6200-4ac5-b858-849a6ddbb56a/restores?source_snapshot_id=5f8ace23-19df-4134-bd67-c338142a6097\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Activating a License on Docker - Bash\nDESCRIPTION: This snippet shows how to run a Mendix app in a Docker container while passing environment variables for the License ID and License Key. This is essential for activating the license during the startup of the Docker container.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/licensing-apps-outside-mxcloud.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it \n  … \n  -e LICENSE_ID=<LicenseId> \n  -e LICENSE_KEY=<LICENSE_KEY> \n  mendix/mendix-buildpack:…\n```\n\n----------------------------------------\n\nTITLE: Complete Microflow Call Activity Creation Method\nDESCRIPTION: Complete method for creating a microflow call activity with parameter mappings. Handles creation of the activity, action, and parameter configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_9\n\nLANGUAGE: csharp\nCODE:\n```\nvoid CreateMicroflowCallActivity(IModel currentApp,\n    IMicroflow microflowThatCalls,\n    IMicroflow calledMicroflow,\n    string outputVariableName,\n    params (string parameterName, string expression)[] parameters)\n{\n    var microflowCallActivity = currentApp.Create<IActionActivity>();\n    var microflowCallAction = currentApp.Create<IMicroflowCallAction>();\n    microflowCallAction.MicroflowCall = currentApp.Create<IMicroflowCall>();\n    microflowCallAction.MicroflowCall.Microflow = calledMicroflow.QualifiedName;\n    microflowCallActivity.Action = microflowCallAction;\n    microflowCallAction.OutputVariableName = outputVariableName;\n\n    foreach (var (parameterName, expression) in parameters)\n    {\n        var parameterInCalledMicroflow = microflowService.GetParameters(calledMicroflow).Single(p => p.Name == parameterName);\n        var parameterMapping = currentApp.Create<IMicroflowCallParameterMapping>();\n        parameterMapping.Argument = microflowExpressionService.CreateFromString(expression);\n        parameterMapping.Parameter = parameterInCalledMicroflow.QualifiedName;\n        microflowCallAction.MicroflowCall.AddParameterMapping(parameterMapping);\n    }\n\n    microflowService.TryInsertAfterStart(microflowThatCalls, microflowCallActivity);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Microflow Timer Widget in Mendix Studio Pro\nDESCRIPTION: Configuration steps for setting up a Microflow Timer widget with options for interval, execution mode, and timing behavior\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/microflow-timer.md#2025-04-21_snippet_0\n\nLANGUAGE: configuration\nCODE:\n```\n1. Place Microflow Timer widget inside Data View or Template Grid\n2. Set entity as Data source\n3. Configure properties:\n   - Interval (in ms)\n   - Execute once\n   - Start at once\n   - Microflow/Nanoflow selection\n```\n\n----------------------------------------\n\nTITLE: Including Events Section for Radio Buttons\nDESCRIPTION: This snippet includes properties related to events for the radio buttons widget, detailing actions tied to user interactions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_4\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Generating XML for Person with Pets Associations in XML\nDESCRIPTION: This XML snippet demonstrates how tag associations are represented with and without including association tags in XML. The first example shows a person's pets without association tags, and the second one illustrates the same data with the tags included. This setting can affect how third-party applications interact with the XML.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-web-services/published-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Person name=\\\"John\\\">\\n  <Dog name=\\\"Max\\\" />\\n  <Dog name=\\\"Rex\\\" />\\n  <Cat name=\\\"Chester\\\" />\\n</Person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Person name=\\\"John\\\">\\n  <Person_Dog>\\n    <Dog name=\\\"Max\\\" />\\n    <Dog name=\\\"Rex\\\" />\\n  </Person_Dog>\\n  <Person_Cat>\\n    <Cat name=\\\"Chester\\\" />\\n  </Person_Cat> \\n</Person>\n```\n\n----------------------------------------\n\nTITLE: Querying within Current Week in Java\nDESCRIPTION: This XPath query retrieves all customer objects from the 'Sales' module where the 'DateRegistered' attribute falls within the current week (from the beginning to the end). This Java-compatible version is suitable for use in Mendix Java actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[DateRegistered >= '[%BeginOfCurrentWeek%]' and DateRegistered < '[%EndOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Label Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet points to the label properties section of the Checkbox widget documentation, explaining how to manage the widget label.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Options in JSON\nDESCRIPTION: This snippet outlines global configuration options for all charts, including display settings, button removals, and localization for specific regions, enhancing user experience and adaptability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\"displayModeBar\": true, \"displaylogo\": false, \"modeBarButtonsToRemove\": [\"sendDataToCloud\", \"lasso2d\", \"select2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"toggleSpikelines\"], \"locale\": \"nl\", \"locales\": {\"nl\": {\"dictionary\": {\"Download plot as a png\": \"Opslaan als PNG\"},\"format\": {\"days\": [\"zondag\",\"maandag\",\"dinsdag\",\"woensdag\",\"donderdag\",\"vrijdag\",\"zaterdag\"],\"shortDays\": [\"zon\",\"maa\",\"din\",\"woe\",\"don\",\"vri\",\"zat\"],\"months\": [\"januari\",\"februari\",\"maart\",\"april\",\"mei\",\"juni\",\"juli\",\"augustus\",\"september\",\"oktober\",\"november\",\"december\"],\"shortMonths\": [\"jan\",\"feb\",\"maa\",\"apr\",\"mei\",\"jun\",\"jul\",\"aug\",\"sep\",\"okt\",\"nov\",\"dec\"],\"date\": \"%d-%m-%Y\",\"datetime\": \"%d-%m-%Y %H:%M\",\"year\": \"%Y\",\"month\": \"%b %Y\",\"dayMonth\": \"%d %b\",\"dayMonthYear\": \"%d %b %Y\"}}}}\n```\n\n----------------------------------------\n\nTITLE: Design Properties Section for Page Title Widget\nDESCRIPTION: This snippet supplies a reference link to the design properties section, detailing the layout and visual adjustments that can be applied to the Page Title widget in Mendix. This is key for customizing the widget's appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/text-widgets/page-title.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Base64 Encoded SSL Certificate for *.mendixcloud.com\nDESCRIPTION: This code snippet contains the Base64 encoded representation of the SSL certificate for *.mendixcloud.com. It is enclosed in the standard PEM format with BEGIN CERTIFICATE and END CERTIFICATE delimiters.\nSOURCE: https://github.com/mendix/docs/blob/development/static/attachments/releasenotes/developer-portal/mendixcloud.com-2021-10-29.crt.txt#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n-----BEGIN CERTIFICATE-----\nMIIGPDCCBSSgAwIBAgIRAMpgdmrpYGqLjNio01JnweQwDQYJKoZIhvcNAQELBQAw\ngY8xCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO\nBgNVBAcTB1NhbGZvcmQxGDAWBgNVBAoTD1NlY3RpZ28gTGltaXRlZDE3MDUGA1UE\nAxMuU2VjdGlnbyBSU0EgRG9tYWluIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBD\nQTAeFw0yMTEwMjkwMDAwMDBaFw0yMjEwMjkyMzU5NTlaMBwxGjAYBgNVBAMMESou\nbWVuZGl4Y2xvdWQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nxiSxsqaYgSZrMS008UNJKPZw4I5rMOvy9EWa135k7sgtaA69GAZoskxKNbaO8TTa\nrpnpBAciV9i04pygMG3Y2dL4NGkICZbYZkO3wnSOYnPma1sRuOid5Ya2VGGN1M7J\nTM7ZOXEjj6jYKtZENVSeGyJoCosqn1v6ng1L3RB3zWv8D4M4FhVZCJiMIF2iA31S\neoztwLHALrLcVAFe6UsMy8iPr8K02l1FrZamyMjCulBrNS6HXsx0GWcraoD1paga\nT04RQHjfPe8HYLyKtYHJqKa/UWnvh9YIWpEZCPmkZDCGYJbEOCLCI47Cb9GO6sLR\n5dMTWQuCyUK7DHY5H9sPEwIDAQABo4IDAzCCAv8wHwYDVR0jBBgwFoAUjYxexFSt\niuF36Zv5mwXhuAGNYeEwHQYDVR0OBBYEFNWsqkFAw8nQMAuCOMputpGbBHBPMA4G\nA1UdDwEB/wQEAwIFoDAMBgNVHRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMB\nBggrBgEFBQcDAjBJBgNVHSAEQjBAMDQGCysGAQQBsjEBAgIHMCUwIwYIKwYBBQUH\nAgEWF2h0dHBzOi8vc2VjdGlnby5jb20vQ1BTMAgGBmeBDAECATCBhAYIKwYBBQUH\nAQEEeDB2ME8GCCsGAQUFBzAChkNodHRwOi8vY3J0LnNlY3RpZ28uY29tL1NlY3Rp\nZ29SU0FEb21haW5WYWxpZGF0aW9uU2VjdXJlU2VydmVyQ0EuY3J0MCMGCCsGAQUF\nBzABhhdodHRwOi8vb2NzcC5zZWN0aWdvLmNvbTAtBgNVHREEJjAkghEqLm1lbmRp\neGNsb3VkLmNvbYIPbWVuZGl4Y2xvdWQuY29tMIIBfQYKKwYBBAHWeQIEAgSCAW0E\nggFpAWcAdwBGpVXrdfqRIDC1oolp9PN9ESxBdL79SbiFq/L8cP5tRwAAAXzL1aRs\nAAAEAwBIMEYCIQDasAeyjtFKEhnP2Kts6antOkQ1aaiLGlPXPFQPJ16ebQIhALTk\nBonyazjSZkh5DaVEMuEJCs/WbHLG/N9X0E92O1JQAHUAQcjKsd8iRkoQxqE6CUKH\nXk4xixsD6+tLx2jwkGKWBvYAAAF8y9WkNQAABAMARjBEAiArpkFjUmv/M0W/5UaQ\nDMShq9/tVxDReFBz7eMPfox7rQIgDAxXt1KZTMx51i4YarcctC/axCo+AoZNAYa0\nL+SOx3EAdQApeb7wnjk5IfBWc59jpXflvld9nGAK+PlNXSZcJV3HhAAAAXzL1aQP\nAAAEAwBGMEQCIH4t7AixMxgVoX6t73BwiKn17gMkE1gF8VWUiwqYyaEqAiBspH+H\nXyaThEa7f5grCjLtXIoBBGkjcm8oOzWQrZp+aTANBgkqhkiG9w0BAQsFAAOCAQEA\niT5+v6tcf3ycBx9yhjmssp0XLGkxsLka2zgYpapOvXZh/vsHi5oFZSXEu/hm9/J5\nlqjz5IJOrENqBu1xcPja/5606aYug55Vz1H8SUK67JCFMFdpC2vh+U6JYYRjAniT\nNs2jVCVC4HlF7v0XekJP0JyuzjF5SnzJchjZubg/d9PDQZ5cv6NdW2t5Ugs45yOM\niiaY99TLKdlHREypyiwMxF6DzYRYoj5nDQv8tJAZX8GyF4gF4LzvJWHC/4GUnj21\nNfO3XkbybM+giejcapPhOppetVKzR/3Vv5s63h5N98mCs0pq2fgYu2LSYHce4sEn\nKoLdf85oHR9xO5t5UjSPYw==\n-----END CERTIFICATE-----\n```\n\n----------------------------------------\n\nTITLE: Enhanced TextInput Component Implementation\nDESCRIPTION: Complete implementation of the TextInput component with disabled property support and event handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_2\n\nLANGUAGE: TSX\nCODE:\n```\nimport { CSSProperties, ChangeEvent, Component, ReactNode, createElement } from \"react\";\nimport classNames from \"classnames\";\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    onUpdate?: (value: string) => void;\n    disabled?: boolean;\n}\nexport class TextInput extends Component<InputProps> {\n    private readonly handleChange = this.onChange.bind(this);\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.props.value}\n            tabIndex={this.props.tabIndex}\n            onChange={this.handleChange}\n            disabled={this.props.disabled}\n        />;\n    }\n    private onChange(event: ChangeEvent<HTMLInputElement>) {\n        if (this.props.onUpdate) {\n            this.props.onUpdate(event.target.value);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Mendix Native Feedback Widget\nDESCRIPTION: Style properties for the feedback widget including floating button, dialog, text area input, switch controls, and buttons. Includes properties for colors, borders, and behavior customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_feedback_Feedback = {\n  floatingButton: {\n    // This has all ViewStyle properties.\n  },\n  dialog: {\n    // This has all ViewStyle properties.\n  },\n  title: {\n    // This has all TextStyle properties.\n  },\n  textAreaInput: {\n    // This has all TextStyle properties.\n    placeholderTextColor: null, // This is the text color of the placeholder string.\n    selectionColor: null, // This is the highlight and cursor color of the text input.\n    underlineColorAndroid: null, // This is the underline color for Android devices.\n    numberOfLines: null, // This is the height of the text area is based on this number of text lines.\n  },\n  switchLabel: {\n    // This has all TextStyle properties.\n  },\n  switchInput: {\n    // This has all TextStyle properties.\n    trackColorOn: null, // This is the custom color for the switch track when turned on.\n    trackColorOff: null, // This is the custom color for the switch track when turned off.\n    thumbColorOn: null, // This is the color of the foreground switch grip when turned on. If this is set on iOS, the switch grip will lose its drop shadow.\n    thumbColorOff: null, // This is the color of the foreground switch grip when turned off. If this is set on iOS, the switch grip will lose its drop shadow.\n  },\n  button: {\n    borderColor: null, // This is the color of dialog button borders.\n    borderWidth: null, // This is the width of dialog button borders.\n    color: null, // This is the color of dialog button text.\n  },\n  buttonDisabled: {\n    color: null, // This is the color of dialog button text when disabled.\n  },\n  activityIndicator: {\n    color: null, // This is the color of the activity indicator that is shown while feedback is being submitted.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing SSO Redirection in JavaScript\nDESCRIPTION: This JavaScript snippet is used to implement SSO (Single Sign-On) redirection on a login page. Dependencies include a properly configured login page, and the script must be embedded within an HTML file. This code captures the return URL and applies automatic or manual redirection based on user interaction. The code ensures that users are redirected to the appropriate SSO login page for authentication, and then to the desired URL after successful login.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar returnURL = window.location.hash.substring(1) + window.location.search;\n```\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.location.href = 'sso/login' + (returnURL ? '?cont=link' + encodeURIComponent(returnURL) : '');\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section in Drop-Downs\nDESCRIPTION: This snippet covers the design properties section for drop-downs which details how to customize the visual presentation of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving XPath Data with Multiple Sort Directions in Java\nDESCRIPTION: Shows the issue fixed in Studio Pro 8.0.0 beta where using multiple sort directions in an XPathBasicQuery was causing sorting problems. This functionality allows developers to sort data retrieved via XPath in multiple directions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.0.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nXPathBasicQuery\n```\n\n----------------------------------------\n\nTITLE: Introducing usingAddressing property in ServiceInfo Element\nDESCRIPTION: This snippet highlights the addition of the `usingAddressing` property for addressing in WebServices, providing more control in service interactions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.16.md#2025-04-21_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n* We introduced the `usingAddressing` property for `WebServices` addressing.\n```\n\n----------------------------------------\n\nTITLE: Name Property Definition\nDESCRIPTION: Includes a snippet that defines the common properties for the dynamic label's name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/dynamic-label-document-template.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/name-property.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Attaching an Inline IAM Policy in JSON\nDESCRIPTION: This snippet defines an inline IAM policy in JSON format to allow database connection actions. It should be attached to the IAM role of the Mendix environment. The policy specifies permissions for connecting to RDS resources, and placeholders need to be replaced with specific AWS region, account ID, resource ID, and database username information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"rds-db:connect\"\n      ],\n      \"Resource\": [\n        \"arn:aws:rds-db:<db-region>:<account-id>:dbuser:<db-resource-id>/<database-username>\"\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Java Exception Snippet\nDESCRIPTION: Example of a Java exception that was fixed where REST calls caused a LoggerFactory class not found error\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.18.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\njava.lang.NoClassDefFoundError: org/slf4j/LoggerFactory\n```\n\n----------------------------------------\n\nTITLE: Calling REST Service in Microflow\nDESCRIPTION: Microflow snippet showing a Call REST service activity without storing the result in a variable, which had an issue fixed in version 9.12.6.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.12.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<callRest>\n  <restService>MyRestService</restService>\n  <storeInVariable>false</storeInVariable>\n</callRest>\n```\n\n----------------------------------------\n\nTITLE: SQL Server JDBC Driver Update\nDESCRIPTION: Upgrade of Microsoft SQL Server JDBC driver to version 12.6.3 affecting integrated security connections in modules like Database Connector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.12.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Including Events Section Snippet\nDESCRIPTION: This snippet includes the events that buttons can respond to, referenced from an external markdown file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/button-widgets/button-properties.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Figure Reference in Markdown\nDESCRIPTION: Defines an image reference using Hugo shortcode syntax for displaying UI screenshots\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/teamcenter-extension.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/appstore/platform-supported-content/modules/teamcenter-extension/menu-tab.png\" >}}\n```\n\n----------------------------------------\n\nTITLE: Context Error Code CE1568\nDESCRIPTION: Error occurs when a page expects an object of a particular type that isn't available. Fix by ensuring the required object is passed to the page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nCE1568: The selected page {Name of the page} expects an object of type {type of object}, which is not available here.\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Light Button\nDESCRIPTION: This snippet illustrates creating a Bootstrap button with the 'light' color scheme. As with the previous examples, it links to the official button documentation and supports parameterization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"light\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Light\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Contour Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a contour plot.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"z\": [ [ 2, 2, 4, 11 ], [ 5, 14, 8, 11 ] ],\n  \"type\": \"contour\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Parameter Table for Dropdown Div Converter\nDESCRIPTION: Table defining the required input parameter for clicking a dropdown div converter split button. Contains parameter name, data type, requirement flag and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/dropdown-div-converter/split-button.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the drop-down `div` converter widget.\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Table for Widget-Get Functions\nDESCRIPTION: This snippet defines a markdown table listing Widget-Get functions in ATS, including function names, supported widgets, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-function-reference.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Function         | Supported Widgets | Description                              |\n| ---------------- | ----------------- | ---------------------------------------- |\n| Get Active Tab Caption  | TabContainer                       | Returns the caption of the active tab page. |\n| Get BooleanSlider Value | BooleanSlider                      | ⚠ Deprecated in favor of **Get Value**.<br /> Returns the current value of the BooleanSlider as a string. |\n| Get BootstrapRTE Value | BootstrapRTE | ⚠ Deprecated in favor of **Get Value**.<br /> Returns the current BootstrapRTE value as an HTML string. |\n| Get Checkbox Set Selector Value | Checkbox Set Selector | Finds the checkbox by column caption and cell value and returns its value. |\n| Get Checkbox Set Selector Value (all) | Checkbox Set Selector | Returns the **Select all** checkbox value. |\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ServiceAccount\nDESCRIPTION: Commands to create and annotate a Kubernetes ServiceAccount for the environment\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n <{env-namespace}> create serviceaccount <{env-serviceaccount}>\nkubectl -n <{env-namespace}> annotate serviceaccount <{env-serviceaccount}> privatecloud.mendix.com/environment-account=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Container Component Props\nDESCRIPTION: Mapping container component props to display component with support for collapsibility options\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_46\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const { collapsible, collapseIcon, expandIcon, content, headerCaption, style } = this.props;\n\n    const isCollapsible = collapsible !== \"no\";\n\n    const props: WrappedGroupBoxProps = {\n        collapsible: isCollapsible,\n        headerCaption,\n        collapseIcon: this.renderIcon(collapseIcon, defaultCollapseIconGlyph),\n        expandIcon: this.renderIcon(expandIcon, defaultExpandIconGlyph),\n        style\n    };\n\n    if (collapsible) {\n        props.startCollapsed = collapsible === \"yesStartCollapsed\";\n    }\n\n    return <WrappedGroupBox {...props}>{content}</WrappedGroupBox>;\n}\n```\n\n----------------------------------------\n\nTITLE: Executing npm Command for Bundle Management\nDESCRIPTION: Uses npm to start a development server that watches and bundles source files for the Mendix widget. It facilitates real-time updates during development by rebundling on file changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Example of setting profile via query string\nDESCRIPTION: This snippet shows how to force a Mendix client to use a specific profile by adding a profile query string parameter to the URL. It uses the 'profile' parameter with values like 'Responsive', 'Tablet', or 'Phone'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-explorer/app/navigation/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: TEXT\nCODE:\n```\n\"https://myapp.mendixcloud.com/index.html?profile=Responsive\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Scheduled Events and Tasks Cleanup Batch Size\nDESCRIPTION: Runtime settings to configure the batch size for periodic cleanup of ScheduledEventInformation and ProcessedTasks, allowing for more controlled cleanup operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_5\n\nLANGUAGE: properties\nCODE:\n```\ncom.mendix.core.ScheduledEventsCleanupBatchSize\ncom.mendix.core.ProcessedTasksCleanupBatchSize\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Assert Value Function in Markdown\nDESCRIPTION: This code snippet defines a markdown table listing the input parameters for the Assert Value function. It includes the parameter names, datatypes, whether they are required, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-input/rg-one-assert-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget\nValue | String | yes | The value you want to assert\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Configuring Mendix Web Client Settings\nDESCRIPTION: Configuration properties for controlling Mendix web client behavior including session management, device detection, and performance thresholds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: properties\nCODE:\n```\nEnableKeepAlive=true\nPhoneUserAgentRegEx=Android,Mobile (iPhone, iPod, BlackBerry)\nTabletUserAgentRegEx=Android,iPad\ncom.mendix.webui.HybridAppLoginTimeOut=\ncom.mendix.webui.FeedbackSizeWarningThreshold=5000\ncom.mendix.webui.StateSizeWarningThreshold=100\ncom.mendix.webui.CommittedObjectsThreshold=100\nMaxRetrieveSize=1000\n```\n\n----------------------------------------\n\nTITLE: Configuring Build Versions in Gradle\nDESCRIPTION: Before releasing the module, the developer must update the *build.gradle* file with the correct target version and the current version of the Push Notifications Connector. This ensures the module is correctly versioned for deployment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/push-notifications.md#2025-04-21_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\nPNC_VERSION = '4.0.6'\nMXBUILD_VERSION = '7.23.8.58888'\n```\n\n----------------------------------------\n\nTITLE: Run Menu Options Table in Markdown\nDESCRIPTION: A markdown table documenting the Run menu items, their descriptions, and associated shortcut keys for Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/run-menu/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Menu Item | Description | Shortcut Key |\n| --- | --- | --- |\n| **Run Locally** | Runs the app locally so you can view the app. | <kbd>F5</kbd> |\n| **Stop** | Stops the currently running app. | <kbd>Shift</kbd> + <kbd>F5</kbd> |\n| **Configuration**               | Sets the configuration level (**Default**).                  |                                                    |\n| **Default Log Level** | Allows setting the default log level before running the app locally. The options are **Trace**, **Debug**, **Info** (default), **Warning**, **Error**, **Critical**. |  |\n| **Publish** | Deploys the app to cloud. The **Console** pane is activated and this shows the output of the server that runs the app. |  |\n| **Run on Cloud Foundry**        | Opens the **Edit Cloud Foundry Settings** dialog box so you can run your app on Cloud Foundry. |  |\n| **Edit Cloud Foundry Settings** | Opens the **Edit Cloud Foundry Settings** dialog box so you can edit your Cloud Foundry settings. | |\n| **Debug** | Allows you to connect the [Debugger]. | |\n| **Responsive Web** | Shows the web client for the currently running app in the browser. | <kbd>F9</kbd> |\n| **Tablet Web** | Shows the tablet mobile client for the currently running app in the browser. | <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>F9</kbd> |\n| **Phone Web** | Shows the mobile client for the currently running app in the browser. | <kbd>Ctrl</kbd> + <kbd>F9</kbd> |\n| **View on your device** | Provides a link to allow you to view the app. | |\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for iOS - Shell\nDESCRIPTION: This command installs the required node module dependencies and iOS dependencies through Cocoapods. Make sure to run this command after navigating into the iOS directory of your project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/how-to-devapps-cli.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm i && cd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Restarting Mendix Operator for Network Resource Changes in OpenShift\nDESCRIPTION: This shell script guides how to restart the Mendix Operator when changing between ingress and OpenShift routes in an OpenShift environment. The script requires replacing `{namespace}` with the appropriate namespace name, allowing the operator to monitor the correct network resource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_34\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} scale deployment mendix-operator --replicas=0\noc -n {namespace} scale deployment mendix-operator --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Exporting Data to Excel Using JavaScript\nDESCRIPTION: This snippet shows how to configure the Export_To_Excel action to export data from a data grid in Mendix. The action takes several inputs, such as Datagrid name, File name, Sheet name, Include column names, and Chunk size. It also suggests a recommended chunk size for optimal performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/data-widgets/data-grid-2.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"// Example of calling the Export_To_Excel action\\nExport_To_Excel({\\n    datagridName: 'YourDataGridName',\\n    fileName: 'YourFileName',\\n    sheetName: 'YourSheetName',\\n    includeColumnNames: true,\\n    chunkSize: 200\\n});\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Employee Objects with XPath in Mendix\nDESCRIPTION: This XPath expression is used to retrieve all employee objects from the MyFirstModule. It demonstrates how Mendix simplifies data retrieval using domain-specific queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_16\n\nLANGUAGE: xpath\nCODE:\n```\n//MyFirstModule.Employee\n```\n\n----------------------------------------\n\nTITLE: XML Representation of Many-to-Many Association\nDESCRIPTION: This snippet shows the XML representation of a many-to-many association between Customer and Group entities in Mendix. The association is stored in the Customer element, referencing the IDs of multiple Group elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<Customer id=\"201\">\n\t<fullname>Apple Inc.</name>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n\t<Customer_Group>id_301 id_302</Customer_Group>\n</Customer>\n\n<Group id=\"301\">\n\t<name>Multinational corporations</name>\n</Group>\n\n<Group id=\"302\">\n\t<name>Hardware suppliers</name>\n</Group>\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Java Action to Reverse Asset Name in Mendix\nDESCRIPTION: This snippet illustrates the implementation of the 'executeAction' method within a Java action. It prepares the input asset and provides a template for users to insert their custom code for reversing the asset name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/extending-your-application-with-custom-java.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n    @java.lang.Override\n    public java.lang.String executeAction() throws Exception\n    {\n        this.inputAssets = __inputAssets == null ? null : assetmanager.proxies.Asset.initialize(getContext(), __inputAssets);\n\n        // BEGIN USER CODE\n        throw new com.mendix.systemideinterfaces.MendixRuntimeException(\"Java action was not implemented\");\n        // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Cloud Foundry Client - System\nDESCRIPTION: Reference to the Cloud Foundry client utility used for deploying Mendix applications to Cloud Foundry from Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.9.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmx-cf-client\n```\n\n----------------------------------------\n\nTITLE: Installing Grafana Loki Stack\nDESCRIPTION: This Helm command installs the Grafana Loki stack, including Grafana, Prometheus, Loki, and Promtail, with specific configuration options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nNAMESPACE={namespace}\nhelm upgrade --install loki grafana/loki-stack --version='^2.8.0' --namespace=${NAMESPACE} --set grafana.enabled=true,grafana.persistence.enabled=true,grafana.persistence.size=1Gi,grafana.initChownData.enabled=false,grafana.admin.existingSecret=grafana-admin \\\n--set prometheus.enabled=true,prometheus.server.persistentVolume.enabled=true,prometheus.server.persistentVolume.size=50Gi,prometheus.server.retention=7d \\\n--set loki.persistence.enabled=true,loki.persistence.size=10Gi,loki.config.chunk_store_config.max_look_back_period=168h,loki.config.table_manager.retention_deletes_enabled=true,loki.config.table_manager.retention_period=168h \\\n--set promtail.enabled=true,promtail.containerSecurityContext.privileged=true,promtail.containerSecurityContext.allowPrivilegeEscalation=true \\\n--set prometheus.nodeExporter.enabled=false,prometheus.alertmanager.enabled=false,prometheus.pushgateway.enabled=false\n```\n\n----------------------------------------\n\nTITLE: Creating a Line Chart with Plotly.js JSON Configuration\nDESCRIPTION: The purpose of this snippet is to demonstrate a basic JSON configuration for rendering a line chart using the Plotly.js library within the Any Chart widget. This chart uses a scatter plot type with predefined x and y coordinates to illustrate data points. Users need to copy this JSON into the Any Chart widget's Data property under the Static field. The output is a line chart rendered in the application interface. Ensure Mendix Studio Pro and the Any Chart module are set up before implementation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/charts-any-usage.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[ { \"x\": [ 1, 2 ], \"y\": [ 1, 2 ], \"type\": \"scatter\" } ]\n```\n\n----------------------------------------\n\nTITLE: Filter Helper Examples in TypeScript\nDESCRIPTION: Examples of using attribute and literal helpers for constructing filter conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\nconst attrA = attribute(this.props.myAttributeA.id);\nconst filterCondition = equals(attrA, literal(\"Bob\"));\n```\n\n----------------------------------------\n\nTITLE: Executing MPR Dump Command\nDESCRIPTION: Basic command to export a Mendix project model to JSON. Requires specifying the target .mpr project file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmx dump-mpr [TARGET-FILE].mpr\n```\n\n----------------------------------------\n\nTITLE: Formatting Decimal Values in Microflows - Java\nDESCRIPTION: The formatDecimal function converts a decimal value to a string formatted according to the specified pattern for microflows. It takes input parameters including the decimal value, a format string, and an optional locale. The output is a string representation of the decimal formatted as specified.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"formatDecimal(1234.56, '#,###.#')\" returns (depending on language settings) \"'1,234.5' or '1.234,5'\"\n\"formatDecimal(1234.56, '¤ #,##0.00')\" returns (depending on language settings) \"'€ 1.234,50' or '$ 1,234.50'\"\n\"formatDecimal(0.56, '% ##0')\" returns \"% 56\"\n```\n\n----------------------------------------\n\nTITLE: Tab CSS Classes in Mendix\nDESCRIPTION: CSS class for mobile-optimized tab styling in Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_8\n\nLANGUAGE: CSS\nCODE:\n```\n/* Tab styling */\n.tab-mobile { /* makes the tab full width and stick to the header */ }\n```\n\n----------------------------------------\n\nTITLE: Defining MyListWidgetsProps Interface with Widgets in TypeScript\nDESCRIPTION: Defines an interface for widget properties including a data source and widgets tied to that data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    myWidgets: (i: ObjectItem) => ReactNode;\n}\n```\n\n----------------------------------------\n\nTITLE: Hash Algorithm Configuration\nDESCRIPTION: Configuration options for hash algorithms used in password hashing. Includes BCrypt (default) and SSHA256 options with performance metrics for different operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/app/app-settings/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBCrypt (default): Resistant to brute-force search attacks\nSSHA256: Salted Secure Hash Algorithm 2, digest length 256 bits\n```\n\n----------------------------------------\n\nTITLE: Combining CSS Classes and Variables in Design Properties\nDESCRIPTION: Example of a design property configuration that uses both CSS classes and variables for border radius options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"Border radius\",\n    \"type\": \"Dropdown\",\n    \"description\": \"Description of My Dropdown Design Property\",\n    \"property\": \"border-radius\",\n    \"options\": [\n        {\n            \"name\": \"Small\",\n            \"class\": \"borderRadiusSmall\"\n        },\n        {\n            \"name\": \"Large\",\n            \"variable\": \"--radius-large\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Link Object to Current Session in Mendix Microflow\nDESCRIPTION: Demonstrates how to link a non-persistable object to the current session when creating it in a Mendix microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/minimize-number.md#2025-04-21_snippet_1\n\nLANGUAGE: diagram\nCODE:\n```\n[Create Object dialog showing session linking configuration]\n```\n\n----------------------------------------\n\nTITLE: Using the ceil Function in Mendix\nDESCRIPTION: Rounds a number up to the nearest integer. Returns the smallest integer that is greater than or equal to the input value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nceil(3.2)\n```\n\nLANGUAGE: java\nCODE:\n```\nceil(-1.9)\n```\n\n----------------------------------------\n\nTITLE: Basic Module Exclusion Structure in JSON\nDESCRIPTION: The basic structure for excluding UI elements from a specific module using the excludes property in the settings.json file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"MODULE_NAME\": {\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders List Using Search Bar in Mendix\nDESCRIPTION: This snippet outlines the steps for adding search fields to filter the orders list based on order status and minimum price using the search bar functionality in a Mendix application. It provides instructions on how to create search fields and leverage them to filter data displayed on the overview page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n// Step 1: Add search field for Order Status\n// Step 2: Add search field for Minimum Total Price\n// Step 3: Apply filters based on user input\n```\n\n----------------------------------------\n\nTITLE: Applying EXISTS Operator for Subquery Existence Check in OQL\nDESCRIPTION: Shows how to use the EXISTS operator to test for the existence of rows returned by a subquery in OQL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: SQL\nCODE:\n```\nEXISTS (SELECT ID FROM City WHERE City = 'Losdun')\n```\n\n----------------------------------------\n\nTITLE: Sequential Filter Processing Example\nDESCRIPTION: Example showing how filter order affects which metrics are accepted or denied by the registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": { \"protocol\": \"TCP\" },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"accept\", \"values\" : [\"app.\"] },\n      { \"type\" : \"nameStartsWith\", \"result\" : \"deny\", \"values\" : [\"app.others.\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Drop-Down Widget Styling in JavaScript for Mendix Native Mobile\nDESCRIPTION: This code snippet defines the styling properties for a Drop-Down widget in Mendix native mobile applications. It includes properties for container styling, item appearance, label configuration, iOS picker specifics, and validation message styling. The snippet also includes the useUniformDesign property introduced in Studio Pro 8.11.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nexport const DropDown = {\n  container: {\n    // All ViewStyle properties   \n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the text box is non-editable.   \n  },\n  iconStyle: {\n    // This has all TextStyle properties. Styles the arrow down icon next to the value (with Studio Pro v8.15).\n  },  \n  item: {\n    // This has all TextStyle properties. Styles all the items in dropdown menu including selected item (with Studio Pro v8.11)\n  }, \n  itemContainer: {\n    // This has all ViewStyle properties. Styles all the item containers in dropdown menu including selected item container (with Studio Pro v8.11).\n  },   \n  label: {\n    // This has all TextStyle properties.\n    numberOfLines: 1 // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis.  \n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the drop-down is non-editable.\n  },\n  menuWrapper: {\n    // This has all ViewStyle properties. Styles the wrapper view surrounding all the menu items (with Studio Pro v8.11).\n  }, \n  pickerIOS: {\n    // This has all ViewStyle properties.\n  },\n  pickerBackdropIOS: {\n    // This has all ViewStyle properties.\n  },\n  pickerTopIOS: {\n    // This has all ViewStyle properties.\n  },\n  selectedItem: {\n    // This has all TextStyle properties. Styles the selected item in dropdown menu (with Studio Pro v8.11).\n  }, \n  selectedItemContainer: {\n    // This has all ViewStyle properties. Styles the selected item's container in dropdown menu (with Studio Pro v8.11).\n  }, \n  useUniformDesign: null, // Enables new uniformDesign (with Studio Pro v8.11).\n  validationMessage: {\n    // This has all TextStyle properties. Styles the validation message (with Studio Pro v8.11).\n  },\n  value: {\n    // This has all TextStyle properties. Styles the value button which toggle's dropdown and PickerIOS items. If placeholder is selected, placeholderTextColor will be applied\n    placeholderTextColor: null, // If placeholder is selected, placeholderTextColor will be applied (with Studio Pro v8.11).\n  },\n  valueFocused: {\n    // Same properties as `value`. Overrides `value` styles if the dropdown box is focused. (with Studio Pro v8.15).\n  },  \n  valueContainer: {\n    // This has all ViewStyle properties and rippleColor. Styles the value button's container (with Studio Pro v8.11).\n  },  \n  valueContainerFocused: {\n    // Same properties as `valueContainer`. Overrides `valueContainer` styles if the dropdown box is focused (with Studio Pro v8.15).\n  },  \n  valueContainerError: {\n    // Same properties as `valueContainer`. Overrides `valueContainer` styles if the dropdown has a validation error (with Studio Pro v9.19.0).\n  }, \n};\n\n```\n\n----------------------------------------\n\nTITLE: Creating and Modifying SOAP Requests with Java and XML\nDESCRIPTION: This code snippet demonstrates how to modify SOAP request parameters in SoapUI for testing purposes. The code specifies offset and page size for customer retrieval. Key parameters include 'Offset' and 'PageSize', which determine the data slice retrieved from the service. The target input is a SOAP envelope with specific pagination properties, while the expected output is a modified request to test customer retrieval functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"<Offset>?<\\/Offset>\\n<PageSize>?<\\/PageSize>\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"<Offset>0<\\/Offset>\\n<PageSize>10<\\/PageSize>\"\n```\n\n----------------------------------------\n\nTITLE: Configuring ImageNameTemplate in OperatorConfiguration - YAML\nDESCRIPTION: This snippet configures the imageNameTemplate within an OperatorConfiguration manifest for a Mendix setup. Dependencies: OpenShift or another compatible platform. Key parameters include the imageNameTemplate, which dictates how image names are structured using variables like {{.Name}}, {{.Version}}, and {{.UnixTimestamp}}. Inputs: Registry configuration settings. Outputs: Customized image names according to specified template constraints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-registry.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n    # …\nspec:\n  registry:\n    imageNameTemplate: 'my-registry/{{.Name}}-{{.Version}}-{{.UnixTimestamp}}'\n    pullURL: 'image-registry.openshift-image-registry.svc:5000'\n    pushURL: 'image-registry.openshift-image-registry.svc:5000'\n    type: openshift\n  # …\n```\n\n----------------------------------------\n\nTITLE: Initializing Heatmap Configuration in JSON\nDESCRIPTION: This snippet defines the structure for a heatmap using JSON format, specifying the matrix values that represent intensity levels. The expected output is a heatmap visualization according to the z values provided.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"z\": [ [ 1, 2 ], [ 3, 4 ] ],\n  \"type\": \"heatmap\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Exporting Namespace with kubectl Command in Text\nDESCRIPTION: This snippet demonstrates how to export a namespace and retrieve its details using the kubectl command. It is useful for checking configurations and annotations related to user ID ranges in an OpenShift cluster. The namespace is set to 'default' before retrieving YAML details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nexport NAMESPACE=default\nkubectl get ns $NAMESPACE -oyaml\n```\n\n----------------------------------------\n\nTITLE: List Action Value Type Definition in TypeScript\nDESCRIPTION: Defines the ListActionValue type for representing actions that can be applied to items from a ListValue. This function type accepts an ObjectItem and returns an ActionValue.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ListActionValue = (item: ObjectItem) => ActionValue;\n```\n\n----------------------------------------\n\nTITLE: Implementing Preview Mode for TextBox Widget in TypeScript\nDESCRIPTION: This snippet facilitates preview mode for the TextBox widget in Mendix Studio Pro, using a separate TSX file. It leverages the existing TextInput component for rendering and imports necessary styles. This preview mode does not attach event handlers, simplifying development debugging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Component, createElement, ReactNode } from \"react\";\nimport { TextBoxPreviewProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\ndeclare function require(name: string): string;\n\nexport class preview extends Component<TextBoxPreviewProps> {\n    render(): ReactNode {\n        const value = `[${this.props.textAttribute}]`;\n        return <TextInput value={value} />;\n    }\n}\n\nexport function getPreviewCss(): string {\n    return require(\"./ui/TextBox.css\");\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Orders\nDESCRIPTION: This snippet retrieves all customers who have placed at least one order using the exist-expression. It's an effective way to check for associations in XPath.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order]\n```\n\n----------------------------------------\n\nTITLE: Set App Version Command Usage\nDESCRIPTION: Command to set the version of a Mendix solution. Version must be in SemVer format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nmx set-app-version MPR-FILE VERSION\n```\n\n----------------------------------------\n\nTITLE: Context Availability Consistency Errors\nDESCRIPTION: Documents errors occurring when a page expects a context that is not available, including type mismatches and missing object references\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Error Code | Message in the Error Pane | Cause of the Error | Way to Fix |\n| ---------- | ------------------------- | ------------------ | ---------- |\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders by Customer City Using XPath - Mendix\nDESCRIPTION: This snippet illustrates how to apply an XPath constraint in a Mendix microflow to filter a list of orders based on the city of associated customers. The focus is on setting a status for orders from customers located in Rotterdam. It requires configuring an XPath constraint over the association to customer data within the retrieve activity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/working-with-lists-in-a-microflow.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n3. Add an **XPath constraint** over the association to customer, \n   constraining on the city (Rotterdam) of this customer.\n```\n\n----------------------------------------\n\nTITLE: Creating Native Mobile List View\nDESCRIPTION: Configure a list view for displaying pictures from the database in a native mobile app using Mendix Studio Pro\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/native-mobile-app.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\n1. Delete existing page content\n2. Add List View widget\n3. Select 'Picture' entity as data source\n4. Add Image building block\n5. Convert static image to dynamic image\n6. Configure labels with dynamic parameters\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables for Mendix Platform Compatibility\nDESCRIPTION: Compatibility matrix showing supported Mendix versions for different ATS versions, including tested versions and a note about asynchronous microflow limitations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ov/ov-compatibility.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| ATS version | Supported Mendix Versions | Tested |\n| --- | --- | --- |\n| 1.5 | 5.14.1 - 6.6.0 | 5.17.0, 5.21.1, 6.4.1, 6.6.0 |\n| 1.6 | 5.14.1 - 6.7.1 | 5.17.0, 5.21.1, 6.4.1, 6.6.0, 6.7.1 |\n| 1.7 | 5.14.1 - 6.9.0 | 5.17.0, 5.21.1, 6.4.1, 6.6.0, 6.7.1, 6.9.0 |\n| 1.8 | 5.14.1 - 7.5.0 | 5.17.0, 5.21.1, 6.4.1, 6.6.0, 6.7.1, 6.9.0, 6.10.0, 7.0.1, 7.2.0 |\n| 2.x | 5.14.1 - 9.0.5&sup1; | 5.17.0, 5.21.1, 6.4.1, 6.7.1, 6.9.0, 6.10.0, 7.0.1, 7.2.0, 7.6.0, 7.8.0, 7.10.0, 7.12.0, 7.13.1, 7.14.1, 7.15.1, 7.16.0, 7.17.2, 7.22.2, 7.23.1, 8.0.0, 8.1.0, 8.2.0, 8.3.0, 8.4.0, 8.5.0, 8.6.0, 8.7.0, 8.8.0, 8.9.0, 8.10.0, 8.11.0, 8.12.0, 8.13.0, 9.0.5, 9.10.0 |\n```\n\n----------------------------------------\n\nTITLE: XPath Logical Operators\nDESCRIPTION: Logical operators for combining multiple conditions in XPath queries. Examples demonstrate price and amount comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\nprice = 9.80 or price = 9.70\nprice = 9.80 and amount = 1\n```\n\n----------------------------------------\n\nTITLE: Defining Attribute Property in XML for Mendix Pluggable Widget\nDESCRIPTION: This XML snippet defines an attribute property for a Mendix pluggable widget. It specifies the property key, type, onChange action, caption, description, and allowed attribute types (Decimal and Integer).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_15\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"percentage\" type=\"attribute\" onChange=\"onPercentageChange\">\n\t<caption>Percentage</caption>\n\t<description>Progress percentage</description>\n\t<attributeTypes>\n\t\t<attributeType name=\"Decimal\"/>\n\t\t<attributeType name=\"Integer\"/>\n\t</attributeTypes>\n</property>\n    \n<property key=\"onPercentageChange\" type=\"action\">\n\t<caption>On change</caption>\n\t<description/>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Highlighting Today's Date in Date Picker\nDESCRIPTION: CSS class implementation for highlighting the current date in the Mendix date picker calendar widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.6.md#2025-04-21_snippet_0\n\nLANGUAGE: css\nCODE:\n```\nmx-calendar-day-today\n```\n\n----------------------------------------\n\nTITLE: Creating a New Branch for Contribution - Git\nDESCRIPTION: This snippet demonstrates how to create a new branch in Git for making changes based on the production branch. It emphasizes avoiding direct modifications to the production branch and sets the stage for making logical commits.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/contribute-to-a-github-repository.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b fix/production/my_contribution production\n```\n\n----------------------------------------\n\nTITLE: Configuring Android USB Port Tunneling with ADB\nDESCRIPTION: Commands to tunnel localhost ports from desktop to Android device via USB using Android Debug Bridge (ADB). Requires Android Studio to be installed. Tunnels port 8080 and 8083 for Mendix development.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/getting-started-with-mobile/prerequisites.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nadb reverse tcp:8080 tcp:8080\nadb reverse tcp:8083 tcp:8083\n```\n\n----------------------------------------\n\nTITLE: Implementing a JavaScript Action in Mendix Studio Pro\nDESCRIPTION: This code snippet demonstrates the structure of a JavaScript action in Mendix Studio Pro. It includes import statements, extra code, and the main action function. The action shows an alert message to the user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// This file was generated by Mendix Studio Pro.\n//\n// WARNING: Only the following code will be retained when actions are regenerated:\n// - the import list\n// - the code between BEGIN USER CODE and END USER CODE\n// - the code between BEGIN EXTRA CODE and END EXTRA CODE\n// Other code you write will be lost the next time you deploy the project.\nimport { Big } from \"big.js\";\n\n// BEGIN EXTRA CODE\n function sayHello(message) {\n     window.alert(\"Hello: \" + message);\n }\n// END EXTRA CODE\n\n/**\n * Show an alert message to an user.\n * @param {string} message - Message shown to the user.\n * @returns {Promise.<void>}\n */\nexport async function Hello(message) {\n\t// BEGIN USER CODE\n\tsayHello(message);\n\treturn Promise.resolve();\n\t// END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Setting JVM Parameters for New Relic in Development\nDESCRIPTION: Java agent configuration parameter to be added in the Extra JVM parameters field within Mendix Studio Pro for development mode monitoring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/manage-app-performance/manage-app-performance-with-new-relic.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-javaagent:<path-to-javaagent>javaagent.jar\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Configuration Secret\nDESCRIPTION: Command to create an environment configuration secret in Vault\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nvault kv put secret/<{env-configuration-secret}> mx-admin-password=\"Welc0me!\" mx-debugger-password=\"Welc0me!\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Text Component in TypeScript\nDESCRIPTION: This example demonstrates how to use the Text component in a widget preview. It shows how to set the content dynamically using a widget property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"Text\",\n        content: values.myTextProp, // set displayed text to the value of myTextProp\n    });\n```\n\n----------------------------------------\n\nTITLE: Database Operation for SQL Server\nDESCRIPTION: Implementation of bulk copy functionality for SQL Server database migrations to improve performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.18.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSQL Server bulk copy\n```\n\n----------------------------------------\n\nTITLE: Updating Java Servlet API dependencies in Mendix Java Actions\nDESCRIPTION: This code snippet shows the replacement of the servlet and web socket API dependencies for Java actions in Mendix. `javax.servlet.servlet-api.jar` is replaced with `org.eclipse.jetty.toolchain.jetty-servlet-api.jar`, and `javax.websocket.websocket-api.jar` is replaced with `org.eclipse.jetty.toolchain.jetty-javax-websocket-api.jar`. This change might require updates in custom Java actions to align with the new dependencies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.5.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"We changed the servlet and web socket API dependencies for Java actions. We replaced `javax.servlet.servlet-api.jar` with `org.eclipse.jetty.toolchain.jetty-servlet-api.jar`, and we replaced `javax.websocket.websocket-api.jar` with `org.eclipse.jetty.toolchain.jetty-javax-websocket-api.jar`.\"\n```\n\n----------------------------------------\n\nTITLE: Creating Data Source Nanoflow in Mendix\nDESCRIPTION: This snippet illustrates a nanoflow named DSS_CreateLoginContext that creates and returns an empty Login object to serve as a data source for the sign-in page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/authenticating-users.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n// Nanoflow: DSS_CreateLoginContext\nCreate Login object\nReturn Login object\n```\n\n----------------------------------------\n\nTITLE: Example HTTP Request for Getting Security Group Members\nDESCRIPTION: HTTP request example showing how to retrieve users belonging to a specific security group with a limit of 10 results. The request includes required authentication headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_16\n\nLANGUAGE: http\nCODE:\n```\nGET /legacy-api/1/groups/86a2558b-b63b-4c76-a056-018d9eb8f1b9/users?limit=10 HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: Installing React Native NFC Manager Package\nDESCRIPTION: This command installs the react-native-nfc-manager package as a dependency to the project using NPM. The version 1.2.2 is specified to be compatible with Mendix Studio Pro 8.6, which is based on React Native 0.59.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n\"npm install --save react-native-nfc-manager@1.2.2\"\n```\n\n----------------------------------------\n\nTITLE: Uploading iOS IPA to App Store using xcrun\nDESCRIPTION: Command to upload a signed iOS IPA file to the Apple App Store using the xcrun command line tool. Requires Xcode to be installed with command line tools set up.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/deploying-native-app.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxcrun altool --upload-app --type ios --file \"path/to/application.ipa\" \n--username \"YOUR_APPSTORE_USER_EMAIL\" --password \"YOUR_APPSTORE_PASSWORD\"\n```\n\n----------------------------------------\n\nTITLE: JSON Code Block Example\nDESCRIPTION: This JSON snippet demonstrates a sample JSON structure with fields such as Status, EnvironmentId, Mode, Url, ModelVersion, MendixVersion, and Production. It serves as an example of how to format and display JSON data within Mendix documentation using code blocks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\n```json\n{\n     \"Status\" :  \"Stopped\",\n     \"EnvironmentId\" :  \"cd5fc610-edb0-43c5-a374-0439a6411ace\",\n     \"Mode\" :  \"Acceptance\",\n     \"Url\" :  \"https://calc-accp.mendixcloud.com\",\n     \"ModelVersion\" :  \"1.1.0.253\",\n     \"MendixVersion\" :  \"6.10.10\",\n     \"Production\" :  false\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Microflow Timer Configuration Options\nDESCRIPTION: Detailed breakdown of configuration properties for controlling widget execution behavior\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/microflow-timer.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"interval\": 30000,\n  \"executeOnce\": false,\n  \"startAtOnce\": true,\n  \"microflow\": \"MyMicroflow\",\n  \"nanoflow\": \"MyNanoflow\"\n}\n```\n\n----------------------------------------\n\nTITLE: Cancel Dialog Parameter Table\nDESCRIPTION: Table defining the input parameters for the Cancel Dialog action, including parameter names, datatypes, requirements and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-dialog/rg-one-cancel-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nDialog Title | String | no | The title of the dialog you want to cancel\nDialog Type | Enumeration | no | The type of the dialog you want to cancel\n```\n\n----------------------------------------\n\nTITLE: Multiple Native Dependencies Declaration Example in JSON\nDESCRIPTION: Demonstrates how to declare multiple native dependencies with their exact versions. This example includes two React Native dependencies with their corresponding specific version numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-native-dependencies-9.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nativeDependencies\": {\n        \"@react-native-community/netinfo\": \"5.9.10\",\n        \"react-native-image-picker\": \"3.1.4\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Latest Pluggable Widgets Tools Package in Node.js\nDESCRIPTION: Command to update the Pluggable Widgets Tools package to the latest version. This npm command should be run at the root of the widget's directory to update dependencies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/update-pluggable-widgets-tools.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @mendix/pluggable-widgets-tools@latest\n```\n\n----------------------------------------\n\nTITLE: Setting Configuration Options for Model Viewer in JSON\nDESCRIPTION: This code snippet demonstrates how to configure various settings for the Mendix model viewer, such as enabling caching and section manipulation features. It allows developers to customize user experience and performance settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"enableCache\": true,\n    \"enableSectionManipulator\": true,\n    \"enableBboxSurfaceScanner\": true,\n    \"bboxSurfaceScanner\": {\n        \"showBBoxes\": false,\n    },\n    \"pmiPreference\": {\n        \"ignoredPMI\": [\"DIMENSION\",\"NOTE\"], \n        \"ignoreModelView\": true, \n        \"ignoreDesignGroup\": true, \n        \"onlyShowAssemblyLevelPMI\": false\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing GitLab Webhook Tekton Pipeline Trigger\nDESCRIPTION: Command to install a GitLab webhook trigger for Tekton pipelines. This creates a trigger that works with GitLab and configures environment-specific parameters during installation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd $PATH_TO_DOWNLOADED_FOLDERS && cd helm/charts\nhelm template mx-tekton-pipeline-trigger ./triggers -f triggers/values.yaml \\\n    --set name=$SOME_UNIQUE_NAME \\\n    --set triggerType=gitlabwebhook \\\n    --set buildPipelineName=build-pipeline \\\n    --set gitlabwebhook.operatorNamespace=namespace-with-operator \\\n    --set gitlabwebhook.mendixEnvironmentInternalName=mx-environment-internal-name \\\n    --set gitlabwebhook.protocol=ssh \\\n    --set gitlabwebhook.scheduledEventsMode=auto \\\n    --set gitlabwebhook.constantsMode=auto | kubectl apply -f - -n $NAMESPACE_WITH_PIPELINES\n```\n\n----------------------------------------\n\nTITLE: Microflow Flow Elements\nDESCRIPTION: Visual notation examples showing sequence flows and annotation flows used to connect elements in microflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: BPMN\nCODE:\n```\nSequence Flow: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/sequence-flow.png\" >}}\nAnnotation Flow: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/annotation-flow.png\" >}}\n```\n\n----------------------------------------\n\nTITLE: HTML Footnote Example\nDESCRIPTION: This HTML snippet uses Unicode superscript characters and the `<small>` tag to create a footnote that provides additional information about long numbers in Excel when importing an OData source.  This shows how to add additional context or disclaimers to content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<small>¹ When using Excel to import an OData source, long numbers may seem cut off. This is due to a restriction in the data type Microsoft uses. For more information, see [Last digits are changed to zeroes when you type long numbers in cells of Excel](https://support.microsoft.com/en-us/kb/269370).</small>\n```\n\n----------------------------------------\n\nTITLE: FULL OUTER JOIN in OQL\nDESCRIPTION: This example demonstrates a FULL OUTER JOIN in OQL, which returns all rows when there is a match in either the left or right entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_24\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nFULL OUTER JOIN Sales.Request Req ON Cust.LastName = Req.CustomerName\n```\n\n----------------------------------------\n\nTITLE: Azure OpenID Configuration URL Format\nDESCRIPTION: URL template for Azure OpenID configuration endpoint that includes tenant ID placeholder\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/snowflake-sso.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://login.microsoftonline.com/<yourTenantID>/v2.0/.well-known/openid-configuration\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Gradle\nDESCRIPTION: The snippet demonstrates using Gradle to prepare and install dependency *.jar* files for the Push Notifications module. Prior to running the command, Gradle and additional dependencies like Mono (on MacOS) must be installed. This command clears existing content in the `test/userlib` directory and requires re-downloading certain modules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/push-notifications.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ gradle prepareDeps\n```\n\n----------------------------------------\n\nTITLE: Configuring Scheduled Events Cleanup Batch Size in Mendix Runtime\nDESCRIPTION: This snippet shows how to configure the batch size for the periodic cleanup of `ScheduledEventInformation` and `ProcessedTasks` using runtime settings. It uses `com.mendix.core.ScheduledEventsCleanupBatchSize` and `com.mendix.core.ProcessedTasksCleanupBatchSize` runtime settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.24.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"com.mendix.core.ScheduledEventsCleanupBatchSize\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"com.mendix.core.ProcessedTasksCleanupBatchSize\"\n```\n\n----------------------------------------\n\nTITLE: Microflow Example for Decrypted Token Retrieval\nDESCRIPTION: This snippet demonstrates how to create a new microflow to retrieve the decrypted token in MendixSSO 3, as DS_GetCurrentIdToken is deprecated. It involves placing SUB_GetDecryptedTokenByTypeForCurrentSession in a new microflow and utilizing it in MendixSS authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mendix-feedback.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Configuring Offline Runtime License in Mendix App using YAML\nDESCRIPTION: Defines an offline runtime license configuration for a Mendix app. Necessary dependencies include the appropriate license id and key provided by Mendix Support. The configuration modifies the runtime section to include offline license specifics, impacting how the app is licensed within a standalone cluster.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  runtime:\n    # add this section to the existing runtime configuration\n    runtimeLicense: # Mendix Runtime License configuration\n      type: offline # Set to offline\n      id: LicenseId # Offline LicenseId (UUID) value provided by Mendix Support\n      key: LicenseKey # Offline LicenseKey value provided by Mendix Support\n```\n\n----------------------------------------\n\nTITLE: Configuring Read Committed Snapshot in SQL Server\nDESCRIPTION: SQL query to enable Read Committed Snapshot configuration for a Mendix database, requiring db_ddladmin role. This setting must be enabled for each new Mendix database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/troubleshooting-sql-server.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nALTER DATABASE [YourDatabase] SET READ_COMMITTED_SNAPSHOT ON;\nCREATE ASSEMBLY [Mendix.SqlServerExtensions] FROM [a dll file] WITH PERMISSION_SET = SAFE;\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Assert Checkbox Value in Markdown\nDESCRIPTION: A markdown table listing the input parameters for the 'Assert Checkbox Value' action, including their names, datatypes, requirements, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-input/rg-one-assert-checkbox-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget\nValue | Boolean | yes | The value you want to assert (true or false)\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: OData Metadata XML Fix\nDESCRIPTION: Fix for OData metadata XML generation where the Name property in EntityContainer section cannot contain a forward slash character.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.9.md#2025-04-21_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\nEntityContainer Name=\"[^/]+\"\n```\n\n----------------------------------------\n\nTITLE: Common Section Markdown Snippet\nDESCRIPTION: Link to the documentation of common properties section relevant to the simple menu bar widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/menu-widgets/simple-menu-bar.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Importing Icon Data CSV Format\nDESCRIPTION: Demonstrates the required format for importing icon data, including character code, name, and optional search tags\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/page-resources/icon-collection.md#2025-04-21_snippet_0\n\nLANGUAGE: csv\nCODE:\n```\nF01C9;ab-testing;UX, Research\nF16E0;abacus;Calculation\nF1328;abjad-arabic;Alphabet, Language\n```\n\n----------------------------------------\n\nTITLE: Editability Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet references the editability properties section for the Checkbox widget, which describes how and when the widget can be edited by users.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Installing Yeoman Command Line Tool\nDESCRIPTION: Global installation of Yeoman package manager to facilitate widget generation in Mendix development workflow\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install -g yo\n```\n\n----------------------------------------\n\nTITLE: Commit Employee Changes Request\nDESCRIPTION: JSON request to commit changes made to an Employee object to the database\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"runtimeOperation\",\n    \"operationId\": \"EjuFdBJ7EUC93YSYtlb7Mg\",\n    \"params\": {\n        \"Objects\": {\n            \"guids\": [\n                \"11540474045150458\"\n            ]\n        }\n    },\n    \"changes\": {\n        \"11540474045150458\": {\n            \"Firstname\": {\n                \"value\": \"Peter\"\n            },\n            \"Lastname\": {\n                \"value\": \"Jones\"\n            },\n            \"Jobtitle\": {\n                \"value\": \"Sales Executive\"\n            },\n            \"Department\": {\n                \"value\": \"Sales\"\n            },\n            \"DateOfBirth\": {\n                \"value\": 674863200000\n            }\n        }\n    },\n    \"objects\": [\n        {\n            \"objectType\": \"MyFirstModule.Employee\",\n            \"guid\": \"11540474045150458\",\n            \"attributes\": {\n                \"Department\": {\n                    \"value\": null\n                },\n                \"Jobtitle\": {\n                    \"value\": null\n                },\n                \"Firstname\": {\n                    \"value\": null\n                },\n                \"Lastname\": {\n                    \"value\": null\n                },\n                \"DateOfBirth\": {\n                    \"value\": null\n                }\n            },\n            \"hash\": \"r6PDyFGEXK98NSmSniNLQBzuyodENJpD4x/6Y/QCoy4=\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Icon Glyphs for Group Box\nDESCRIPTION: Defines constants for default glyphs to use as icons when none are provided by the user, maintaining consistent UI in Mendix applications. These constants integrate into the Group Box component rendering logic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_37\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst defaultCollapseIconGlyph = \\\"glyphicon-minus\\\";\\nconst defaultExpandIconGlyph = \\\"glyphicon-plus\\\";\n```\n\n----------------------------------------\n\nTITLE: Alert Snippet Security Warning\nDESCRIPTION: Markdown alert snippet about file extension security limitations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/file-widgets/file-manager.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\\nThe feature to allow extensions is not meant as a security feature, as the file manager widget does not check the contents of a file to see if they match the provided extension. For more information, see the [Scanning Uploaded Files for Malicious Content](/howto8/security/best-practices-security/#scanning-for-malicious-content) section of *How to Implement Best Practices for App Security*.\\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Events Section Link for On Enter\nDESCRIPTION: Links to the events section of the text area properties documentation, focusing on the 'on enter' event.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Editability for Mendix Pluggable Widget\nDESCRIPTION: This XML code demonstrates how to implement the Editability system property for a Mendix pluggable widget. The Editability property allows widgets to have editable configurations similar to core input widgets, affecting the readOnly state of editable values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_28\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Editability\"/>\n```\n\n----------------------------------------\n\nTITLE: Styling Native Video Player Widget in Mendix (JavaScript)\nDESCRIPTION: JavaScript code for styling a Video Player widget in Mendix native mobile apps. Includes properties for container styling, loading indicator, video appearance, error messages, and Android-specific fullscreen options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_videoplayer_VideoPlayer = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  indicator: {\n    color: null, // The loading indicator color.\n  },\n  video: {\n    // This has all ViewStyle properties.\n  },\n  errorMessage: {\n    // This has all TextStyle properties.\n  },\n  fullScreenVideoPlayer: {\n    // This has all ViewStyle properties. Android only.\n  },\n  controlBtnContainerStyle: {\n    // This has all ViewStyle properties. Android only.\n  },\n  fullScreenVideoStyle: {\n    // This has all ViewStyle properties. Android only. \n  },\n  fullScreenActivityIndicatorStyle: {\n    // This has all ViewStyle properties. Android only.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Change Variable Properties Configuration in Mendix\nDESCRIPTION: This snippet shows the visual representation of the Change Variable properties dialog in Mendix. It displays both the dialog box and the properties pane that developers use to configure variable changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/variable-activities/change-variable.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide8/modeling/application-logic/activities/variable-activities/change-variable/change-variable-properties.png\" alt=\"Change Variable Properties\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Building Native Mobile App with Native Builder CLI\nDESCRIPTION: This snippet illustrates the `build` command used with the Native Builder CLI to initiate the build process of a Mendix native mobile app.  The command requires the `project-name` and `build-number` parameters, and optionally accepts the `app-version` parameter. This command generates a JavaScript deployment bundle, images, creates a new build branch on GitHub, and starts a build process on App Center.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/deploying-native-app-cli.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"native-builder.exe build --project-name CoolApp --build-number 1 --app-version 0.1.0\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Files with Mendix Studio Pro API\nDESCRIPTION: An async function that deletes 'HelloWorld.txt' using the studioPro.app.files.deleteFile API and displays a confirmation message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/local-app-files-api.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst deleteFile = async () => {\n  await studioPro.app.files.deleteFile(\"HelloWorld.txt\");\n  studioPro.ui.messageBoxes.show(\"info\", \"Deleted HelloWorld.txt\");\n};\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Widgets Property\nDESCRIPTION: Defines the TypeScript type for the Widgets property, which includes a count of child widgets and a React component for rendering them in the preview.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype WidgetsProperty = {\n    widgetCount: number;\n    renderer: React.Component\n}\n```\n\n----------------------------------------\n\nTITLE: Example XPath Constraint for Dropdown\nDESCRIPTION: This snippet demonstrates how to apply an XPath constraint to a Drop-down search field that connects to an associated entity in order to limit the objects displayed based on their attributes. It provides a specific example related to filtering shops by country.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/grids/search-bar.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`[MyWebshop.Bicycle_Shop/MyWebshop.Shop/Country='Netherlands']`\n```\n\n----------------------------------------\n\nTITLE: Generating OData URL for Get Entry in JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to construct the URL required to retrieve a specific product entry using the SAP OData Connector's Get Entry operation. The URL uses the service root, the entity set name (ProductSet), and the product ID (HT-1000) to uniquely identify the desired product. This URL is then used in the Get Entry operation to fetch the product details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n\"@GWSAMPLE_BASIC.GWSAMPLE_BASIC + '/' + toString(GWSAMPLE_BASIC.EntitySetNames.ProductSet) + '(''HT-1000'')'\"\n```\n\n----------------------------------------\n\nTITLE: Using ATS Custom Selectors for Element Selection\nDESCRIPTION: ATS provides custom selectors that extend standard CSS selector functionality. These selectors help target specific elements based on visibility, text content, and input values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-selectors.md#2025-04-21_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\n:clickable\n:containsExact(*text*)\n:containsExactCase(*text*)\n:containsRegex(*regex*)\n:containsText(*text*)\n:val(*text*)\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ServiceAccount and ClusterRole for Mendix Platform CI/CD\nDESCRIPTION: Shell script to create a service account, secret, cluster role, and cluster role binding for enabling CI/CD operations in a Kubernetes cluster with specific permissions for Mendix Platform\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-azure.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# create ServiceAccount, ClusterRole, and ClusterRoleBinding\nkubectl apply -f << EOF -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n  annotations:\n    kubernetes.io/service-account.name: mxplatform-cicd\ntype: kubernetes.io/service-account-token\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: mxplatform-cicd\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  verbs:\n  - list\n- apiGroups:\n  - privatecloud.mendix.com\n  resources:\n  - storageplans\n  verbs:\n  - list\n- apiGroups:\n  - privatecloud.mendix.com\n  resources:\n  - mendixapps\n  verbs:\n  - '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: mxplatform-cicd\nsubjects:\n- kind: ServiceAccount\n  name: mxplatform-cicd\n  namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: mxplatform-cicd\n  apiGroup: rbac.authorization.k8s.io\nEOF\n\n# get service account token:\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.data.token}'|base64 -d\n# for openshift cluster\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.metadata.annotations.openshift\\.io/token-secret\\.value}'\n```\n\n----------------------------------------\n\nTITLE: Defining GroupBoxProps Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the props for the GroupBox component, including the optional headerCaption string and required style array.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface GroupBoxProps {\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n```\n\n----------------------------------------\n\nTITLE: Admin User Policy for Environment Management\nDESCRIPTION: IAM policy for admin user that manages environment creation and deletion. Grants permissions to create/delete IAM users with mendix- prefix and manage S3 buckets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"LimitedAttachmentPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:AttachUserPolicy\",\n                \"iam:DetachUserPolicy\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"ArnEquals\": {\n                    \"iam:PolicyArn\": [\n                        \"<policy_arn>\"\n                    ]\n                }\n            }\n        },\n        {\n            \"Sid\": \"iamPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:DeleteAccessKey\",\n                \"iam:DeleteUser\",\n                \"iam:CreateUser\",\n                \"iam:CreateAccessKey\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:user/mendix-*\"\n            ]\n        },\n        {\n            \"Sid\": \"bucketPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:CreateBucket\",\n                \"s3:DeleteBucket\"\n            ],\n            \"Resource\": \"arn:aws:s3:::mendix-*\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Snowflake RestSQL OAuth Configuration Parameters\nDESCRIPTION: Required configuration parameters for setting up Snowflake RestSQL connector with OAuth authentication, including connection name, account URL, identifier, and resource path\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/snowflake-sso.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nConnection Name - A descriptive name for this connection\nSnowflake Account URL - The URL for your Snowflake account\nSnowflake Account Identifier - Your Snowflake Account Identifier\nResource Path - Default or custom resource path\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Operation Example for Type Handling in OQL v2\nDESCRIPTION: Example query demonstrating how OQL v2 handles the result types from arithmetic operations differently than OQL v1, using type precedence instead of taking the type of the first attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Attribute1 + Attribute2 AS SumAttr\nFROM Module.Entity\n```\n\n----------------------------------------\n\nTITLE: Verifying Velero Backup Completion\nDESCRIPTION: Command to check the status and details of the created Velero backup named 'mendix-velero-bkp'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-velero.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvelero backup describe mendix-velero-bkp\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Ingress for Tekton Triggers\nDESCRIPTION: Example YAML configuration for creating a Kubernetes Ingress resource to expose the Tekton trigger service. This makes the trigger accessible through a domain name via HTTP.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: triggers-ingress\nspec:\n  rules:\n    - host: pipeline.trigger.yourdomain.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: el-mx-pipeline-listener-someUniqueName\n                port:\n                  number: 8080\n```\n\n----------------------------------------\n\nTITLE: Encoding Features with Java Actions\nDESCRIPTION: This Java action retrieves float values from an Iris entity, converts them to an InputStream, encodes it as a Base64 string, and returns the encoded string. This pre-processing step prepares the input data to be injected into a machine learning model. It depends on the MLKit library for conversion to InputStream and Base64 encoding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n    @java.lang.Override\n    public IMendixObject executeAction() throws Exception\n    {\n      this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.Iris.initialize(getContext(), __Parameter);\n    \n      // BEGIN USER CODE\n      // 1. convert entity object to float array\n      float[] inputFeature = new float[4];\n      inputFeature[0] = Parameter.getsepalLength().floatValue();\n      inputFeature[1] = Parameter.getsepalWidth().floatValue();\n      inputFeature[2] = Parameter.getpetalLength().floatValue();\n      inputFeature[3] = Parameter.getpetalWidth().floatValue();\n      // 2. convert input feature array to base 64\n      InputStream is = MLKit.toInputStream(inputFeature);\n      String base64 = MLKit.toBase64(is);\n      // 3. create output entity object\n      IMendixObject outputObject = Core.instantiate(getContext(), \"Iris_RandomForest.ML_Input_Entity_Iris_RF_ML_Model\");\n      outputObject.setValue(getContext(), \"Float_input\", base64);\n      return outputObject;\n      // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Mendix vs Core Actions Comparison Table\nDESCRIPTION: Table explaining the reasons to use Mendix actions over other options, including automatic context handling and platform compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-general/guidelines-custom-action.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Reason | Description |\n| :--- | :--- |\n| Automatic context | A Mendix action will automatically adjust to the Mendix Platform, ensuring that it will work correctly. |\n| Visibility checks | A Mendix action only searches for elements that are *visible*. |\n| Browser support | A Mendix action always works in the supported browser. |\n| Mendix support | A Mendix action always works on the latest version of Mendix. |\n| Waiting for background processes | A Mendix action waits until the Mendix app is finished rendering. This aspect is also covered by the [Mendix Wait] action.<br> |\n```\n\n----------------------------------------\n\nTITLE: Custom User Provisioning Microflow in Mendix\nDESCRIPTION: This describes the requirements for a custom microflow used for user provisioning in Mendix when using the SCIM module. The microflow should begin with `UC_CustomProvisioning` and requires two specific parameters, `UserInfoParameter` and `User`, and must return a `System.User` object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/scim.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\n\"The custom microflow name must begin with the string `UC_CustomProvisioning` and requires the following parameters:\\n\\n1. **UserInfoParameter(UserCommons.UserInfoParam)**: A Mendix object containing user claims information through its associated objects. You can use this  parameter to retrieve user provisioning configuration information.\\n2. **User(System.User)**: A Mendix object representing the user to be provisioned. Ensure that the selected microflow matches this parameter signature.\\n\\n The microflow must return a **System.User** object to ensure proper user provisioning and updates. It will be executed after user creation or update of user. However, starting from version 2.0.0 of the UserCommons module, this is no longer mandatory. If you have added a new microflow, you need to refresh the module containing your microflow as described in the [Mx Model Reflection](/appstore/modules/model-reflection/).\"\n```\n\n----------------------------------------\n\nTITLE: Text Box Input Control Structure in HTML\nDESCRIPTION: Demonstrates the HTML structure for a text box input control, with 'form-control' class applied to the input element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<input class=\"form-control\" type=\"text\" id=\"123_abc\" />\n```\n\n----------------------------------------\n\nTITLE: Visibility Section Link\nDESCRIPTION: Links to the visibility section of the text area properties documentation, discussing how to control the visibility of the text area.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Domain Model Entities in Mendix\nDESCRIPTION: Define two entities: a persistable Product entity with Name and Stock attributes, and a non-persistable PublishedProduct entity with identical attributes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/publish-data-to-other-mendix-apps-using-an-app-service.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Domain Model\nCODE:\n```\nEntity Product (persistable)\n- Name: String\n- Stock: Integer\n\nEntity PublishedProduct (non-persistable)\n- Name: String\n- Stock: Integer\n```\n\n----------------------------------------\n\nTITLE: Integer Property Type Definition\nDESCRIPTION: Shows how to define an integer property type with a default value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myInteger\" type=\"integer\" defaultValue=\"1000\">\n\t<caption>My integer</caption>\n\t<description>My integer setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Integrating Git in a Build Pipeline\nDESCRIPTION: This snippet demonstrates how to set up a shallow clone in Git to integrate efficiently into a build pipeline. The procedure minimizes the amount of data fetched from the repository by downloading only the required commit, thereby improving performance by reducing the load on the version control server. This approach is suitable for retrieving a specific commit or branch state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n# make a new blank repository in the current directory\ngit init\n\n# add a remote\ngit remote add origin url://to/source/repository\n\n# fetch a commit (or branch or tag) of interest with limited history\ngit fetch --depth 1 origin <sha1-of-commit-of-interest>\n\n# reset this repository's master branch to the commit of interest\ngit reset --hard FETCH_HEAD\n```\n\n----------------------------------------\n\nTITLE: Generating Android Keystore for App Signing\nDESCRIPTION: This command uses the Java keytool to generate a keystore for signing Android apps. It creates a keystore file with a specified alias, password, and validity period.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkeytool -genkey -v -keystore file.keystore -alias YOUR_ALIAS_NAME -storepass YOUR_ALIAS_PWD -keypass YOUR_ALIAS_PWD -keyalg RSA -validity 36500\n```\n\n----------------------------------------\n\nTITLE: Inserting Alert Box in Markdown\nDESCRIPTION: Markdown snippet for inserting an info alert box about using the Mendix for Private Cloud Deploy API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nYou can also create clusters and namespaces using the [Mendix for Private Cloud Deploy API](/apidocs-mxsdk/apidocs/private-cloud-deploy-api/).\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Success Tip Alert in Markdown\nDESCRIPTION: A Markdown alert block providing a tip about dialog box positioning.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/batch-replace.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"success\" %}}\nTip: move the dialog box to one side to get a better look at the document.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Get Active Tab Caption in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Get Active Tab Caption' function using a markdown table. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-tab/rg-one-get-active-tab-caption.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n--- | --- | ---\nActive Tab Caption | String | Caption of the currently active tab.\n```\n\n----------------------------------------\n\nTITLE: Updating Android Icons in config.xml.mustache\nDESCRIPTION: This snippet shows how to update the `config.xml.mustache` file for Android projects using the \"do it yourself\" workflow. It corrects the configuration of Android icons and splash screens.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/hybrid-app.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n\"<{{{tag}}} src=\\\"{{{filename}}}\\\" qualifier=\\\"{{{qualifier}}}\\\"/>\"\n```\n\nLANGUAGE: xml\nCODE:\n```\n\"<{{{tag}}} src=\\\"{{{filename}}}\\\" density=\\\"{{{qualifier}}}\\\"/>\"\n```\n\n----------------------------------------\n\nTITLE: LDAP Search Filter Syntax\nDESCRIPTION: Example of an Active Directory search filter used to locate user accounts during authentication. The filter combines the user object class check with the sAMAccountName attribute matching.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/ldap.md#2025-04-21_snippet_0\n\nLANGUAGE: LDAP\nCODE:\n```\n(&(objectclass=user)(sAMAccountName=\"[%Username%]\"))\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Get Checkbox Value Action in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Get Checkbox Value' action using a markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-input/rg-one-get-checkbox-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Creating PowerShell Configuration File for .NET 4 Compatibility\nDESCRIPTION: This XML configuration helps PowerShell use .NET version 4 while maintaining compatibility with its previously used version. The file should be placed in the folder containing powershell.exe.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_12\n\nLANGUAGE: text\nCODE:\n```\n<?xml version=\"1.0\"?> \n<configuration> \n<startup useLegacyV2RuntimeActivationPolicy=\"true\"> \n    <supportedRuntime version=\"{<Latest build of .NET version 4, for example, v4.0.30319>}\"/> \n    <supportedRuntime version=\"{<.NET version currently used by PowerShell, for example, v2.0.50727>}\"/> \n</startup> \n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Adding a New Dependency in Mendix App\nDESCRIPTION: Add new dependencies to the Mendix Native Template by updating the main package.json. Supports auto-linking if dependency is configured to do so.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnpm i -s <dependency name>\n```\n\n----------------------------------------\n\nTITLE: Referencing Security Documentation in Mendix\nDESCRIPTION: This snippet shows how to create a link to the security documentation in Mendix. It uses Markdown syntax to create a hyperlink to the security how-to guide.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/dev-best-practices.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[security](/howto/security/)\n```\n\n----------------------------------------\n\nTITLE: Excluding Building Blocks in JSON\nDESCRIPTION: Example JSON configuration that excludes building blocks from the Atlas_Web_Content module, hiding them from the page editor toolbox.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Web_Content\": {\n            \"buildingBlocks\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Git Attributes - mpr merge\nDESCRIPTION: This code snippet configures Git to use the custom merge driver defined earlier specifically for *.mpr files. By adding this to the *.gitattributes* file, any merge operation involving *.mpr* files will automatically invoke the mx.exe merge tool to handle the binary file merging process correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n\"*.mpr merge=custom\"\n```\n\n----------------------------------------\n\nTITLE: Defining Additional Valid Elements for Sanitization in Editor\nDESCRIPTION: This snippet specifies additional valid HTML elements and their attributes for sanitization in the editor's context. It ensures that only the defined elements are allowed in the user's input to maintain security and content integrity. The configuration uses a defined text format to declare valid elements and their attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/richtext/rich-text-v3.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nimg[class|src|border=0|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name]\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL JDBC Connection String Format\nDESCRIPTION: Standard JDBC URL format for connecting to PostgreSQL databases, where {endpoint} represents the server hostname and {vectorDatabaseName} is the target database name. Uses default PostgreSQL port 5432.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/pg-vector-knowledge-base/vector-database-setup.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\njdbc:postgresql://{endpoint}:5432/{vectorDatabaseName}\n```\n\n----------------------------------------\n\nTITLE: Referencing Common Section Link in Header Styling\nDESCRIPTION: This snippet includes a repeated reference link in the documentation for the common properties section of the header styling. It serves as a reminder and quick access point for users to study the common styling options that can be applied to headers within Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/page-resources/layout/header.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Runtime Operation Registry Entry\nDESCRIPTION: JSON configuration stored in operations.json defining the retrieve operation parameters and constants\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {\n        \"UsedAttributes\": [\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Firstname\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Lastname\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Jobtitle\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.Department\",\n            \"MyFirstModule.Employee/MyFirstModule.Employee.DateOfBirth\"\n        ],\n        \"XPath\": \"//MyFirstModule.Employee\",\n        \"UsedAssociations\": [],\n        \"PageName\": \"MyFirstModule.Employee_Overview\",\n        \"WidgetName\": \"MyFirstModule.Employee_Overview.dataGrid2_1\"\n    },\n    \"id\": \"reyg/iaSXkaXmyztuaHbsA\",\n    \"parameters\": {},\n    \"type\": \"retrieve\"\n}\n```\n\n----------------------------------------\n\nTITLE: Editing OperatorConfiguration in Kubernetes\nDESCRIPTION: Command to edit the OperatorConfiguration custom resource in Kubernetes. Replace {namespace} with the namespace where the operator is installed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit operatorconfiguration mendix-operator-configuration\n```\n\n----------------------------------------\n\nTITLE: Including Designer Properties in Markdown\nDESCRIPTION: Markdown snippet inclusion for designer properties using Hugo shortcode syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/page-templates.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/designer-properties.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Locating Mendix Widget Elements Using CSS Classes\nDESCRIPTION: Demonstrates how to find unique CSS selectors for Mendix widgets by using the `mx-name-` prefix and widget names. This technique helps create stable Selenium IDE test scripts by using consistent element identification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/testing-mendix-applications-using-selenium-ide.md#2025-04-21_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\n.mx-name-[WidgetName]\n```\n\n----------------------------------------\n\nTITLE: License Token Configuration in Mendix Cloud Portal\nDESCRIPTION: Configuring the license token for 3D Viewer deployment in Mendix Cloud environment\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<figure src=\"/attachments/partners/siemens/3d-viewer/licensetoken-cloudportal.jpg\" alt=\"licensetoken-cloudportal\" class=\"no-border\">\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Base Image in OperatorConfiguration\nDESCRIPTION: YAML configuration for specifying the base OS image tag template in the OperatorConfiguration. This allows setting the Java version for the runtime base image.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  baseOSImageTagTemplate: 'ubi9-1-jre{{.JavaVersion}}-entrypoint'\n```\n\n----------------------------------------\n\nTITLE: Example Output for Snapshot Restore\nDESCRIPTION: This JSON example outlines the final structure returned by a successful snapshot restore operation in Mendix, showing identification and status details. It expects a proper input of related Mendix identifiers for successful parsing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":null,\n   \"restore_id\":\"11076b79-9df4-45d8-ac4b-dd79617138f5\",\n   \"source_snapshot_id\":\"5f8ace23-19df-4134-bd67-c338142a6097\",\n   \"finished_at\":null,\n   \"updated_at\":null,\n   \"target_environment_id\":\"d436e0cd-6200-4ac5-b858-849a6ddbb56a\",\n   \"created_at\":\"2020-02-18T16:46:26.000Z\",\n   \"state\":\"queued\",\n   \"source_environment_id\":\"d436e0cd-6200-4ac5-b858-849a6ddbb56a\"\n}\n```\n\n----------------------------------------\n\nTITLE: Database Not Synchronized Error When Restarting a Mendix App\nDESCRIPTION: Error message displayed when trying to restart a Mendix app without using the SynchronizeDatabase parameter, which is required to ensure the database matches the application model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_17\n\nLANGUAGE: text\nCODE:\n```\nStart-MxApp : Unable to start the app. Reason: The database is not synchronized with the model.\nAt line:1 char:1\n+ Start-MxApp MyFirstApp\n+ ~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidOperation: (MyFirstApp:String) [Start-MxApp], Exception\n    + FullyQualifiedErrorId : AppProcessError,Mendix.Service.Commands.StartAppCommand\n```\n\n----------------------------------------\n\nTITLE: Deleting Object with SQL in Mendix\nDESCRIPTION: This SQL query deletes a record from the \"myfirstmodule$employee\" table where the ID matches the specified value. This is the actual deletion operation performed on the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nDELETE FROM \"myfirstmodule$employee\"\nWHERE \"id\" = ?\n```\n\n----------------------------------------\n\nTITLE: XML Representation of Many-to-Many Association with Default Ownership\nDESCRIPTION: Demonstrates how a many-to-many association between Customer and Group entities is represented in XML. The association is stored only in the Customer element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/associations/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<Customer id=\"201\">\n\t<fullname>Apple Inc.</name>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n\t<Customer_Group>id_301 id_302</Customer_Group>\n</Customer>\n\n<Group id=\"301\">\n\t<name>Multinational corporations</name>\n</Group>\n\n<Group id=\"302\">\n\t<name>Hardware suppliers</name>\n</Group>\n```\n\n----------------------------------------\n\nTITLE: DL_ShowUrlDetails Nanoflow Configuration\nDESCRIPTION: This snippet describes the setup of the DL_ShowUrlDetails nanoflow that processes incoming URLs. It includes adding parameters and configuring activities to handle URL parsing and error management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/deep-links.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\n// Step to configure the DL_ShowUrlDetails nanoflow\n// 1. Drag parameter for URL\n// 2. Double-click parameter, name it 'URL' (case sensitive)\n// 3. Add Parse URL to Object activity\n// 4. Configure Show message activity with template...\n```\n\n----------------------------------------\n\nTITLE: Invalid Duplicate Aliases in Joined Subqueries\nDESCRIPTION: Example of a query that remains invalid in OQL v2 (as it was in v1) because it uses the same alias 'N' for different columns in joined subqueries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM (SELECT LastName AS N FROM Module.Person) P\nJOIN (SELECT Name AS N FROM Module.City) C\nON P/Residence = C/Name\n```\n\n----------------------------------------\n\nTITLE: Adding Deep Link Changes to Git Repository in Shell\nDESCRIPTION: Shell commands to add, commit, and push deep link handling changes to your Git repository. This step is necessary to persist your changes before rebuilding the native mobile app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-deep-link.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit add .\ngit commit -m \"Add deeplink handling\"\ngit push\n```\n\n----------------------------------------\n\nTITLE: Properties Image Display Syntax\nDESCRIPTION: Markdown syntax for displaying the Password Text Box properties image with specific width.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/pages/authentication-widgets/password-text-box/password-text-box-properties.png\"   width=\"250\"  class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Data Source Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet references the data source properties section for the Checkbox widget. It is used to explain how the checkbox widget should source its data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Secret in Google Secret Manager using gcloud CLI\nDESCRIPTION: This snippet shows how to create a secret in Google Secret Manager using the gcloud CLI tool. It demonstrates how to set up a secret with PostgreSQL as an example value, specifying namespaces and environment names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_27\n\nLANGUAGE: shell\nCODE:\n```\nNAMESPACE=<{Kubernetes namespace}>\nENVIRONMENT_NAME=<{Mendix App CR name}>\n# Example: set the database-type to PostgreSQL\nprintf \"PostgreSQL\" | gcloud secrets create ${NAMESPACE}-${ENVIRONMENT_NAME}-database-type --data-file=- --replication-policy=automatic\n```\n\n----------------------------------------\n\nTITLE: Default Properties Configuration Example\nDESCRIPTION: JavaScript array representing the default properties configuration for a widget based on its XML definition. Shows the structure with property groups, properties, and nested objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n[\n    {\n        caption: \"General\",\n        properties: [\n            {\n                key: \"caption\",\n                caption: \"Graph caption\",\n                description: \"The caption of this graph\"\n            }\n        ]\n    },\n    {\n        caption: \"Data\",\n        properties: [\n            {\n                key: \"dataCaption\",\n                caption: \"Data caption\",\n                description: \"The caption of the data set\"\n            },\n            {\n                key: \"dataPoints\",\n                caption: \"Data points\",\n                description: \"\",\n                objects: [\n                    {\n                        properties: [\n                            {\n                                caption: \"Data Point\",\n                                properties: [\n                                    { key: \"x\", caption: \"X value\", description: \"\" },\n                                    { key: \"y\", caption: \"Y value\", description: \"\" }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        properties: [\n                            {\n                                caption: \"Data Point\",\n                                properties: [\n                                    { key: \"x\", caption: \"X value\", description: \"\" },\n                                    { key: \"y\", caption: \"Y value\", description: \"\" }\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        properties: [\n                            {\n                                caption: \"Data Point\",\n                                properties: [\n                                    { key: \"x\", caption: \"X value\", description: \"\" },\n                                    { key: \"y\", caption: \"Y value\", description: \"\" }\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: XML Representation of Many-to-Many Association\nDESCRIPTION: XML example demonstrating how a many-to-many association between Customer and Group entities is stored. With default ownership, the association references are stored in the Customer element as a space-separated list of IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/associations/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<Customer id=\"201\">\n\t<fullname>Apple Inc.</name>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n\t<Customer_Group>id_301 id_302</Customer_Group>\n</Customer>\n\n<Group id=\"301\">\n\t<name>Multinational corporations</name>\n</Group>\n\n<Group id=\"302\">\n\t<name>Hardware suppliers</name>\n</Group>\n```\n\n----------------------------------------\n\nTITLE: Defining Image Property in Pluggable Widget XML\nDESCRIPTION: XML configuration for defining an image property named 'bgImage' in a Mendix pluggable widget. This allows users to configure a background image that will be shown blurred.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"bgImage\" type=\"image\" required=\"false\">\n\t<caption>Background Image</caption>\n\t<description>Image shown blurred in a background</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Removing Auto-Linked Dependency (v4.0.0+)\nDESCRIPTION: Removes a dependency that supports auto-linking from the package.json file and updates the node_modules by running the npm install command. This ensures the removal of the library and its associated files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Checking String Suffix\nDESCRIPTION: Determines if a string ends with a specified substring, returning a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nendsWith('thisismystring', 'ring')\n```\n\n----------------------------------------\n\nTITLE: Starting Chrome and Firefox Nodes Command\nDESCRIPTION: Command to start Selenium nodes with Chrome and Firefox browsers. Configures 3 instances each of Chrome and Firefox browsers connected to the local hub.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\njava -Dwebdriver.chrome.driver=C:\\Selenium\\chromedriver.exe  -Dwebdriver.firefox.driver=C:\\Selenium\\geckodriver.exe -jar selenium-    server-standalone-3.8.1.jar -role node -hub http://localhost:4444/grid/register -browser \"browserName=firefox, maxInstances=3\"  -browser \"browserName=chrome, maxInstances=3\"\n```\n\n----------------------------------------\n\nTITLE: Using parseDecimal Function Examples in Mendix\nDESCRIPTION: Examples of parseDecimal function calls in Mendix that convert string values to decimal types with various formats and default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('3.45')\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('noDecimal', 5.05)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('noDecimal', empty)\n```\n\nLANGUAGE: java\nCODE:\n```\nparseDecimal('3,241.98', '#,###.##')\n```\n\n----------------------------------------\n\nTITLE: Rerunning Failed Tests with Mendix ATS API (XML)\nDESCRIPTION: An XML SOAP request example for the RerunNotPassed endpoint that reruns all failed or not-executed test cases from a previous job. The request includes authentication headers and parameters for the app token, app ID, and finished job ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Header>\n    <tns:authentication>\n      <username>ATSAPIUser</username>\n      <password>ATSAPIUser</password>\n    </tns:authentication>\n  </soap:Header>\n  <soap:Body>\n    <tns:RerunNotPassed>\n      <RerunNotPassed>\n        <AppAPIToken>exampleString</AppAPIToken>\n        <AppID>exampleString</AppID>\n        <FinishedJobID>exampleString</FinishedJobID>\n      </RerunNotPassed>\n    </tns:RerunNotPassed>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Configuring StatsD Registry\nDESCRIPTION: JSON configuration examples for setting up StatsD metrics registry in Mendix. These examples show how to configure the host, port, protocol, and flavor of the StatsD registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": {\n      \"host\": \"mx.datadog.com\",\n      \"port\": \"8181\",\n      \"protocol\": \"TCP\",\n      \"flavor\": \"TELEGRAF\"\n    }\n  }\n]\n```\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": {\n      \"flavor\": \"SYSDIG\",\n      \"step\": \"3m\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Keyboard Shortcut in Markdown\nDESCRIPTION: Shows how to format a keyboard shortcut using HTML tags within Markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nPressing <kbd>Enter</kbd> saves the currently selected value\n```\n\n----------------------------------------\n\nTITLE: Implementing Validation Entity Model in Mendix\nDESCRIPTION: Domain model structure for handling validation messages with translation support. Includes entity definition for storing validation rules and messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Creating Alert Component with ID\nDESCRIPTION: This React component defines an Alert section, which can display different styles of alerts based on the provided props. It depends on the 'classnames' library and requires an id and alertStyle to customize the alert appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nimport { FunctionComponent, createElement, PropsWithChildren } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface AlertProps {\n    id?: string;\n    alertStyle?: \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\";\n    className?: string;\n}\n\nexport const Alert: FunctionComponent<PropsWithChildren<AlertProps>> = ({ alertStyle, className, children, id }) =>\n    children ? (\n        <div id={id} className={classNames(`alert alert-${alertStyle} mx-validation-message`, className)}>\n            {children}\n        </div>\n    ) : null;\n\nAlert.displayName = \"Alert\";\nAlert.defaultProps = { alertStyle: \"danger\" };\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Division Operator\nDESCRIPTION: Describes the division operator in OQL, which divides one number by another.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| `:` | Division | `8 : 4` returns 2. |\n```\n\n----------------------------------------\n\nTITLE: Including On Enter Event for Checkbox\nDESCRIPTION: This snippet specifies an action to be executed when the checkbox widget is entered, enhancing user interaction monitoring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Label Template Parameter Example\nDESCRIPTION: Shows how to use numbered parameters in label templates for widgets placed in an entity context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/common-widget-properties.md#2025-04-21_snippet_3\n\nLANGUAGE: template\nCODE:\n```\n{1}\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Load Balancer Ingress Annotations in YAML\nDESCRIPTION: Example YAML configuration for adding AWS Load Balancer specific annotations to the Ingress section of the OperatorConfiguration object. This includes settings for public internet access, target type, subnets, TLS, and HTTP to HTTPS redirection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-ingress.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  # Endpoint (Network) configuration\n  endpoint:\n    type: ingress\n    ingress:\n      annotations:\n        # Allow access from the public internet\n        alb.ingress.kubernetes.io/scheme: internet-facing\n        # 'ip' mode will route traffic directly to the pod IP\n        alb.ingress.kubernetes.io/target-type: ip\n        # List all subnets which the EKS cluster is attached to\n        alb.ingress.kubernetes.io/subnets: subnet-value1, subnet-value2\n        # To enable TLS, specify the certificate ARN here\n        alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:1111111111:certificate/111aaaaa-1111-1aa1-11a1-111aaaa1b1a1\n        # Add this to automatically redirect HTTP traffic to HTTPS\n        alb.ingress.kubernetes.io/ssl-redirect: \"443\"\n        # Listen on standard HTTP and HTTPS ports\n        alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}, {\"HTTPS\": 443}]'\n      # The following parameters are already configured by mxpc-cli\n      domain: mendix.example.com\n      enableTLS: false\n      ingressClassName: alb\n      path: \"/*\"\n      pathType: ImplementationSpecific\n# ...\n# omitted lines for brevity\n# ...\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Block\nDESCRIPTION: Standard Mendix documentation alert block in markdown format showing information about the Mendix Portal and its components\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/support/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThe Mendix Portal is the online platform of Mendix. It includes [Apps](/developerportal/), [Marketplace](/appstore/), [Control Center](/control-center/), [Community](/community-tools/), [Catalog](/catalog/), and Mendix Support.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Markdown Arrow Symbol\nDESCRIPTION: Escaped markdown arrow symbol for showing terminology changes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n--&gt;\n```\n\n----------------------------------------\n\nTITLE: DateTime Comparison Expression in Mendix\nDESCRIPTION: Example of comparing localized and non-localized date attributes in a Mendix microflow expression\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/date-and-time-handling/datetime-handling-faq.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix-expression\nCODE:\n```\n$entity/localizeddate > $entity/nonlocalizeddate\n```\n\n----------------------------------------\n\nTITLE: Event Handler Configuration in Markdown/YAML Frontmatter\nDESCRIPTION: Defines metadata and configuration for a documentation page about event handlers in Mendix\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/entities/event-handlers.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: \"Event Handlers\"\nurl: /refguide9/event-handlers/\nweight: 50\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Theming with JSON in Mendix\nDESCRIPTION: This JSON file configures the global chart theming for a Mendix application.  It allows setting shared layout and configuration options for all charts, as well as specific settings for individual chart types like LineChart, AreaChart, BubbleChart, TimeSeries, ColumnChart, BarChart, PieChart, and HeatMap. Place this file in the theme folder named *com.mendix.charts.json*.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-any-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"layout\": {\n    // Add shared layout options here (for all charts)\n  },\n  \"configuration\": {\n    // Add shared configuration options here (for all charts)\n  },\n  \"charts\": {\n    \"LineChart\": {\n      \"layout\": {\n        // Add line chart only layout options here\n      },\n      \"data\": {\n        // Add line chart only data options here\n      },\n      \"configuration\": {\n          // Add line chart only configuration options here\n      }\n    },\n    \"AreaChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BubbleChart\": {\n      // Same arrangement as the line chart\n    },\n    \"TimeSeries\": {\n      // Same arrangement as the line chart\n    },\n    \"ColumnChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BarChart\": {\n      // Same arrangement as the line chart\n    },\n    \"PieChart\": {\n      // Same arrangement as the line chart\n    },\n    \"HeatMap\": {\n      // Same arrangement as the line chart\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using 'and' Operator in Java\nDESCRIPTION: This snippet demonstrates the use of the 'and' operator to combine two Boolean expressions and return true only if both are true. No specific dependencies are required. It evaluates expressions involving comparisons (e.g., greater than or equal) and equality. Expected input is two Boolean conditions, and the output is a Boolean value denoting the evaluation of those conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n(6 > 4) and (3 < 5)\n```\n\nLANGUAGE: java\nCODE:\n```\n('hello' = 'hallo') and (3 < 5)\n```\n\n----------------------------------------\n\nTITLE: JavaScript Snippet for Activity Indicator Style\nDESCRIPTION: This JavaScript-based structure defines style properties for the activity indicator widget in Mendix, allowing customization of the 'container' and 'indicator' elements. This involves configuring the color and size of the loading circle. Prerequisites include understanding of JavaScript and Mendix widget styling conventions, impacting loading indication in mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n<container>\n\t<indicator/>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Retrieving App Environments\nDESCRIPTION: API request to list all environments associated with a specific app. This endpoint returns information about environments such as test, acceptance, and production.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: AWS IAM Policy for Database and S3 Access\nDESCRIPTION: JSON policy configuration that grants the necessary permissions for accessing AWS RDS databases and S3 storage. It includes permissions for database connections via rds-db:connect and S3 operations including upload, download, and delete functions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"rds-db:connect\"\n            ],\n            \"Resource\": [\n                \"arn:aws:rds-db:<aws_region>:<account_id>:dbuser:<database_id>/*\"\n            ]\n        },\n        {\n            \"Sid\": \"AllowAllS3ActionsInUserFolder\",\n            \"Effect\": \"Allow\",\n            \"Resource\": [\n                \"arn:aws:s3:::<bucket_name>/*\"\n            ],\n            \"Action\": [\n                \"s3:AbortMultipartUpload\",\n                \"s3:DeleteObject\",\n                \"s3:GetObject\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:PutObject\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Client State Object Structure Example - JSON\nDESCRIPTION: Example structure of client state data as displayed in browser console when using Ctrl + Alt + G. Shows object instances with their IDs, change status, subscribed widgets, and references.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-client-state.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"MyEntity\": {\n    \"12345\": {\n      \"new\": true,\n      \"changed\": false,\n      \"changes\": {\n        \"attribute1\": \"newValue\"\n      },\n      \"subscribedWidgets\": [\n        \"MyFirstModule.Entity_NewEdit.dataView1\"\n      ],\n      \"referencedBy\": []\n    }\n  },\n  \"AnotherEntity[NPE]\": {\n    \"67890\": {\n      \"new\": false,\n      \"changed\": true,\n      \"changes\": {\n        \"attribute2\": \"updatedValue\"\n      },\n      \"subscribedWidgets\": [],\n      \"referencedBy\": [],\n      \"status\": \"Going to be garbage collected\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Customer Data Structure\nDESCRIPTION: Sample data structure showing how customer data should be organized within the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/create-a-secure-app.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto9/security/create-a-secure-app/18581374.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Removing Auto-Linked Dependencies\nDESCRIPTION: To remove a dependency that is auto-linked, delete its entry from the package.json file and run npm install to apply changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_8\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Fixing Android 9 Contacts Plugin Compatibility\nDESCRIPTION: Custom Cordova plugin snippet to replace the standard contacts plugin with a version that addresses permission structure changes in Android 9, preventing app crashes when saving contacts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/hybrid-mobile-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n<plugin name=\"cordova-plugin-contacts\" spec=\"https://github.com/mendixlabs/cordova-plugin-contacts.git#3.0.2\" />\n```\n\n----------------------------------------\n\nTITLE: Creating String Variable from Numeric Excel Value in Microflow\nDESCRIPTION: A microflow expression that removes decimal places from numeric values imported from Excel as strings. This handles the issue where Excel stores all numeric values as floats with decimal places, even when displayed as integers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/excel-importer.md#2025-04-21_snippet_0\n\nLANGUAGE: microflow\nCODE:\n```\nsubstring( $InputVariable, 0, find($InputVariable, '.'))\n```\n\n----------------------------------------\n\nTITLE: Structured Prompt with XML-like Tags Example\nDESCRIPTION: This example uses XML-like tags to give more structure to a longer prompt. By structuring the prompt with tags like `<instructions>`, `<article>`, `<input>`, and `<output_formatting>`, the model can better interpret different sections and their roles in the prompt.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n\"<instructions>\nAnswer the question from the user.\nBase the answer on the articles provided.\nProvide a reference to the articles where relevant.\n</instructions>\n<article>{article 1}</article>\n<article>{article 2}</article>\n<input>{user input}</input>\n<output_formatting>\nWrite in a lively tone of voice.\nDo not exceed 200 words.\nSkip the preamble.\n</output_formatting>\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Snapshot Details with Mendix API\nDESCRIPTION: Example request to get details of a specific snapshot. This request requires the ProjectId, EnvironmentId, and SnapshotId as path parameters, along with authentication credentials.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots/51dc7872-771e-4c3e-853b-352359444db6\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: List View Error Code CE0488\nDESCRIPTION: Error occurs when Database/XPath/Association is selected as data source but no entity is specified for a list view. Fix by selecting an entity or changing the data source type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCE0488: No entity configured for the data source of this list view. Select an entity or change the data source.\n```\n\n----------------------------------------\n\nTITLE: Checking Attribute Type\nDESCRIPTION: Demonstrates type checking for attributes to handle different data types dynamically\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_20\n\nLANGUAGE: ts\nCODE:\n```\nif (this.props.myAttributeOnDatasource.type === \"String\") {\n    console.log(\"String attribute\");\n} else if (this.props.myAttributeOnDatasource.type === \"Integer\") {\n    console.log(\"Integer attribute\");\n} else {\n    console.log(\"Not a String/Integer attribute\");\n}\n```\n\n----------------------------------------\n\nTITLE: Proxy Configuration - No Proxy List Format\nDESCRIPTION: Explains the format for specifying hosts that should be excluded from proxying.  It details how to use IP addresses, CIDR notation, domain names (with and without leading dots), and port numbers in the comma-separated list.  It also mentions the special DNS label (*) for indicating no exceptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-standard-operator.md#2025-04-21_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n\"A string containing comma-separated values, where each value is one of the following:\n    * An IP address prefix (`1.2.3.4`)\n    * An IP address prefix in CIDR notation (`1.2.3.4/8`)\n    * A domain name\n    * If you use the special DNS label (`*`) this indicates that there are no exceptions and everything will be proxied\n* Each IP address prefix or domain name can also include a literal port number (`1.2.3.4:80`)\n* A domain name matches that name and all subdomains\n* A domain name with a leading \".\" matches subdomains only\n\n    For example, \\\"foo.com\\\" matches \\\"foo.com\\\" and \\\"bar.foo.com\\\"; \\\".y.com\\\" matches \\\"x.y.com\\\" but not \\\"y.com\\\".\"\n```\n\n----------------------------------------\n\nTITLE: Working with ATS Data Import in XML Format\nDESCRIPTION: To import data into ATS, users must upload an XML file containing test assets. The import process can either create new data or update existing data, with conflicts being resolved by overwriting existing properties with imported ones.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/rg-one-data-management.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<!-- Example XML structure for ATS data import -->\n<ats>\n  <!-- Data elements for import -->\n</ats>\n```\n\n----------------------------------------\n\nTITLE: Generating Random Decimal with random Function\nDESCRIPTION: Generates a random decimal number between 0.0 and 1.0 (exclusive of 1.0). Useful for scenarios requiring random number generation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nrandom()\n```\n\n----------------------------------------\n\nTITLE: Mobile SSO Module Role Mapping Table in Markdown\nDESCRIPTION: A table showing the mapping between user roles and Mobile SSO module roles that need to be configured in the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mobile-sso.md#2025-04-21_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n| **User Role** | **Mobile SSO Module Role** |\n| --- | --- |\n| Anonymous | MobileSSO.Anonymous |\n| User| MobileSSO.User |\n```\n\n----------------------------------------\n\nTITLE: Removing Storage Instance Finalizers\nDESCRIPTION: Commands to remove finalizers from storage instances that need cleanup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_30\n\nLANGUAGE: shell\nCODE:\n```\noc patch -n {namespace} storageinstance {name} --type json -p='[{\"op\": \"remove\", \"path\": \"/metadata/finalizers\"}]'\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl patch -n {namespace} storageinstance {name} --type json -p='[{\"op\": \"remove\", \"path\": \"/metadata/finalizers\"}]'\n```\n\n----------------------------------------\n\nTITLE: Creating External Links\nDESCRIPTION: This snippet illustrates how to create external links, allowing users to navigate to outside domains. It includes instructions for linking using absolute paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n[External com Link](https://bbc.com)\n```\n\n----------------------------------------\n\nTITLE: Events Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet refers to the events section for the Checkbox widget, which defines actions triggered by user interactions with the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Editability Section for Drop-Down\nDESCRIPTION: This snippet refers to the editability properties of the drop-down widget, which determine whether users can modify the selected value or only view it. Understanding editability is key to controlling user interactions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Limited Results with $top Parameter in OData URL\nDESCRIPTION: This example shows how to limit the number of records returned by adding the $top query parameter to the OData URL. The parameter $top=2 restricts the result to only the first two records.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/Expenses/Expenses?$top=2\n```\n\n----------------------------------------\n\nTITLE: Advanced Constraint Expression\nDESCRIPTION: Example of an advanced constraint expression using logical operators to combine multiple constraints in a database query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-replication.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n[&7&] OR ([&1&] AND [&2&])\n```\n\n----------------------------------------\n\nTITLE: Creating Conversational Chat Context in Mendix\nDESCRIPTION: Uses New Chat for Prompt operation to initialize a chat context based on a prompt. Sets system prompt for entire conversation thread.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/conversational-ui/prompt-management.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nNew Chat for Prompt\n```\n\n----------------------------------------\n\nTITLE: Styling Introduction Screen Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the introduction screen widget in Mendix native mobile applications. It includes styles for various elements such as containers, pagination, buttons, and icons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_animation_Animation = {\n  fullscreenContainer: {\n    // This has all ViewStyle properties.\n  },\n  popupContainer: {\n    // This has all ViewStyle properties.\n  },\n  paginationContainer: {\n    // This has all ViewStyle properties.\n  },\n  paginationText: {\n    // This has all TextStyle properties.\n  },\n  dotStyle: {\n    // This has all ViewStyle properties.\n  },\n  activeDotStyle: {\n    // This has all ViewStyle properties.\n  },\n  buttonsContainer: {\n    // This has all ViewStyle properties.\n  },\n  container: {\n    // This has all ViewStyle properties. Meant for buttonSkip, buttonDone, buttonPrevious, and buttonNext.\n  },\n  caption: {\n    // This has all ViewStyle properties.\n  },\n  icon: {\n    size: null, // The size of the icon.\n    color: null, // The color of the icon.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Attribute Type Mapping Table\nDESCRIPTION: Provides a mapping between OData attribute types and corresponding Mendix attribute types\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/consumed-odata-services/consumed-odata-service-requirements.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| OData Type                     | Mendix Type                           |\n| ---                            | ---                                   |\n| Binary                         | Binary (but see 3.4) |\n| Boolean                        | Boolean ¹ |\n| Byte, SByte, Int16, Int32      | Integer |\n| DateTime, DateTimeOffset, Time | Date/time |\n| Decimal, Double, Single        | Decimal ² |\n| Enumeration                    | Enumeration |\n| Int64                          | Long |\n| String, Guid                   | String |\n| (Other)                        | (Ignored) |\n```\n\n----------------------------------------\n\nTITLE: Events Section for Drop-Down\nDESCRIPTION: This snippet links to the events section of the drop-down widget, detailing the actions triggered under specific conditions such as on change, on enter, and on leave events. These events enhance interactivity and responsiveness of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Parsing JSON Data Object in JavaScript\nDESCRIPTION: This JavaScript snippet illustrates the structure of a JSON object representing a person, including nested objects for address. It serves as an example for mapping JSON data in REST services, with keys such as name, age, and address details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n{\n\t\"name\": \"John Smith\",\n\t\"age\": 23,\n\t\"address\": \n\t{\n\t\t\"street\": \"Dopeylane 14\",\n\t\t\"city\": \"Worchestire\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: GET Request for Backup Restore Status - Bash\nDESCRIPTION: Example GET request to retrieve the status of a backup restore operation. Requires project ID, environment ID and restore ID as path parameters. Authentication is done via Mendix username and API key in headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/v2/apps/b5f19af7-7453-465e-b9a1-d7556f524c1e/environments/d436e0cd-6200-4ac5-b858-849a6ddbb56a/restores/11076b79-9df4-45d8-ac4b-dd79617138f5\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Home Page Naming Pattern\nDESCRIPTION: Pattern for naming device and role-specific home pages\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/dev-best-practices.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\nHome_Desktop_{Userrole}\n```\n\n----------------------------------------\n\nTITLE: Configuring Expression Property with String Return Type in Mendix Pluggable Widgets\nDESCRIPTION: Example showing how to configure an expression property with a fixed String return type and default value. This is used for color configuration in the example.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"progressBarColor\" type=\"expression\" defaultValue=\"'red'\">\n\t<caption>Color</caption>\n\t<description>Progress bar CSS color</description>\n\t<returnType type=\"String\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Setting XSUAA Configuration JSON\nDESCRIPTION: The JSON configuration required for the XSUAA service binding. This needs to be uploaded to configure XSUAA service for SSO integration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-xsuaa-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xsappname\": \"generated-automatically\",\n  \"tenant-mode\": \"dedicated\",\n  \"scopes\": [],\n  \"role-templates\": [],\n  \"role-collections\": [],\n  \"attributes\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Container Component Render Method in TypeScript\nDESCRIPTION: This TypeScript snippet updates the render method of the container component to pass collapsible properties to the display component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_50\n\nLANGUAGE: TypeScript\nCODE:\n```\nrender(): ReactNode {\n    const { collapsible, collapseIcon, expandIcon, content, headerCaption, style } = this.props;\n\n    // Rest of the render method implementation\n}\n```\n\n----------------------------------------\n\nTITLE: Property Configuration Type Definitions in TypeScript\nDESCRIPTION: These TypeScript type definitions describe the structure expected for widget property configurations, including property groups, properties, and object properties with their related fields and hierarchies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype Properties = PropertyGroup[];\n\ntype PropertyGroup = {\n    caption: string;\n    propertyGroups?: PropertyGroup[];\n    properties?: Property[];\n}\n\ntype Property = {\n    key: string;\n    caption: string;\n    description?: string;\n    objectHeaders?: string[]; // used for customizing object grids\n    objects?: ObjectProperties[];\n}\n\ntype ObjectProperties = {\n    properties: PropertyGroup[];\n    captions?: string[]; // used for customizing object grids\n}\n```\n\n----------------------------------------\n\nTITLE: Decimal Data Type Examples\nDESCRIPTION: Represents high-precision fractional numbers suitable for financial calculations, supporting up to 20 digits before and 8 digits after the decimal point.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/data-types.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n3.14\n738000000000.00000001\n```\n\n----------------------------------------\n\nTITLE: Configuring Dojo with CSP Support in JavaScript\nDESCRIPTION: Configuration script for Dojo framework with CSP compatibility settings, including debug flags, base URL configuration, and cookie handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/csp.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.dojoConfig = {\n    // Default Dojo config\n\tisDebug: false,\n\tuseCustomLogger: true,\n\tasync: true,\n\tbaseUrl: \"mxclientsystem/dojo/\",\n\tcacheBust: \"{{cachebust}}\",\n\trtlDirect: \"index-rtl.html\",\n\n    // CSP Dojo config\n\thas: {\n        \"csp-restrictions\": true\n    },\n\tblankGif: \"mxclientsystem/dojo/resources/blank.gif\"\n};\n\nif (!document.cookie || !document.cookie.match(/(^|;) *originURI=/gi))\n\tdocument.cookie = \"originURI=/login.html\" + (window.location.protocol === \"https:\" ? \";SameSite=None;Secure\" : \"\");\n```\n\n----------------------------------------\n\nTITLE: CSS3 Selectors for Element Targeting in ATS\nDESCRIPTION: Standard CSS3 selectors that can be used to target elements in the DOM based on class, ID, attributes, and position in the document hierarchy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-selectors.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n.myClass\n#myID\nE[foo=\"bar\"]\n:nth-child(n)\n:first-child\n:last-child\n:checked\nE > F\n```\n\n----------------------------------------\n\nTITLE: UNION ALL Query\nDESCRIPTION: Shows how to combine results including duplicates using UNION ALL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_46\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nUNION ALL\nSELECT FirstName, LastName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: ORDER BY in Subquery Without LIMIT (No Longer Allowed)\nDESCRIPTION: Example of a query that was allowed in OQL v1 but is invalid in OQL v2 because it uses ORDER BY in a subquery without LIMIT or OFFSET, which doesn't guarantee preserved ordering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM (\n    SELECT Name\n    FROM Module.Person\n    ORDER BY Name\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Order Data Structure\nDESCRIPTION: Sample data structure showing how order data should be organized within the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/security/create-a-secure-app.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto9/security/create-a-secure-app/18581373.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Basic OQL Query with SELECT and FROM Clauses\nDESCRIPTION: Demonstrates the most basic OQL query structure with SELECT and FROM clauses, retrieving LastName and Address from the Sales.Customer entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Address\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Initializing 3D Surface Chart Configuration in JSON\nDESCRIPTION: This snippet outlines the configuration for a 3D surface chart in JSON format, detailing the z values that define the surface structure and color scale. The expected output is a 3D visual representation of the specified z data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"colorscale\": \"Viridis\",\n  \"z\": [ [ 3, 5, 7, 9 ], [ 21, 13, 8, 5 ] ],\n  \"type\": \"surface\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Configuring TextBox XML Properties for OnChange Action\nDESCRIPTION: Adds an onChangeAction property to the TextBox widget XML configuration, enabling dynamic action selection and attribute change tracking\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Data source\">\n    <property key=\"textAttribute\" type=\"attribute\" onChange=\"onChangeAction\">\n        <caption>Attribute (path)</caption>\n        <description/>\n        <attributeTypes>\n            <attributeType name=\"String\"/>\n        </attributeTypes>\n    </property>\n</propertyGroup>\n<!-- ... -->\n<propertyGroup caption=\"Events\">\n    <property key=\"onChangeAction\" type=\"action\" required=\"false\">\n        <caption>On change</caption>\n        <description/>\n    </property>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associated Objects in OData v4\nDESCRIPTION: Demonstrates how to retrieve associated objects using the $expand query parameter in OData v4. This example retrieves Employee objects along with their associated Cars and Address, including the City associated with the Address.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_0\n\nLANGUAGE: odata\nCODE:\n```\n/odata/myservice/v1/Employees?$expand=Cars,Address($expand=City)\n```\n\n----------------------------------------\n\nTITLE: Adding Accessibility Props to TextBox Component - TypeScript\nDESCRIPTION: This code snippet enhances the TextBox component by adding accessibility-related properties such as `id`, `required`, and `hasError` to improve screen reader support.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n    const value = props.textAttribute.value || \"\";\n    const validationFeedback = props.textAttribute.validation;\n    const required = !!(props.requiredMessage && props.requiredMessage.value);\n    \n    useEffect(() => {\n        props.textAttribute.setValidator((value?: string): string | undefined => {\n            if (!value) {\n                return props.requiredMessage?.value ?? \"\";\n            }\n        });\n    }, []);\n    \n    function onLeave(value: string, isChanged: boolean): void {\n        if (!isChanged) {\n            return;\n        }\n        props.textAttribute.setValue(value);\n    }\n    \n    return (\n        <Fragment>\n            <TextInput\n                id={props.id}\n                value={value}\n                onLeave={onLeave}\n                tabIndex={props.tabIndex}\n                disabled={props.textAttribute.readOnly}\n                required={required}\n                hasError={!!validationFeedback}\n            />\n            <Alert id={props.id}>{validationFeedback}</Alert>\n        </Fragment>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TextBox Widget in XML - Mendix\nDESCRIPTION: This XML snippet defines the structure of the TextBox widget, including its properties such as 'textAttribute', which allows the widget to fetch a string attribute from the Mendix domain model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"mendix.textbox.TextBox\" pluginWidget=\"true\" needsEntityContext=\"true\" supportedPlatform=\"Web\" offlineCapable=\"true\" xmlns=\"http://www.mendix.com/widget/1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../xsd/widget.xsd\">\n    <name>Text Box</name>\n    <description>Edit text input</description>\n    <icon/>\n    <properties>\n        <propertyGroup caption=\"Data source\">\n            <property key=\"textAttribute\" type=\"attribute\">\n                <caption>Attribute (path)</caption>\n                <description/>\n                <attributeTypes>\n                    <attributeType name=\"String\"/>\n                </attributeTypes>\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Sample Script - Create a Windows Service for Mendix App - PowerShell\nDESCRIPTION: This snippet demonstrates how to register a new Windows service for a Mendix application, allowing it to run in the background as a standard Windows service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_10\n\nLANGUAGE: PowerShell\nCODE:\n```\n$appName = 'Name of Mendix app'\n\n# Create new Windows service\nInstall-MxService $appName\n```\n\n----------------------------------------\n\nTITLE: Calculating Maximum Value with max Function\nDESCRIPTION: Returns the largest value from specified numeric arguments or date and time values. Supports multiple input types and preserves the most precise data type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmax(5, 1, 5, 6.7)\n```\n\n----------------------------------------\n\nTITLE: Running the Batch File\nDESCRIPTION: PowerShell command to execute the automated setup batch file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nstart.bat\n```\n\n----------------------------------------\n\nTITLE: Setting originURI Cookie with SameSite Attribute in JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to set the `originURI` cookie with the `SameSite=None` and `Secure` attributes when your Mendix app runs within an iframe. This ensures the cookie is properly set for custom sign-in pages when using iframes. It checks if the connection is secure (HTTPS) before adding the `SameSite` and `Secure` attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/environments-details.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.cookie = \"originURI=/login.html\" + (window.location.protocol === \"https:\" ? \";SameSite=None;Secure\" : \"\")\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Warning Button\nDESCRIPTION: This snippet describes the creation of an outlined button with a 'warning' color scheme. The button is initialized similarly to prior examples.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"outline-warning\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Warning\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Output Example of getKey Function in Mendix (Java)\nDESCRIPTION: Shows the potential output of the getKey function, returning the technical name of the enumeration value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nGolden\n```\n\n----------------------------------------\n\nTITLE: Executing ATS Tests in Jenkins CI/CD Pipeline\nDESCRIPTION: This Bash script demonstrates how to execute ATS tests as part of a Jenkins CI/CD pipeline on a Linux server. It uses curl to make API calls to ATS and xmllint to parse the responses. The script runs an ATS job template and checks its status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-ats-and-ci-cd.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n# Shell script example for Jenkins (linux). You must have curl and xmllint installed.\n#set -x\n\n# Set your CI/CD variables\nUSERNAME=ATSAPIUser\nPASSWORD=ATSAPIUser\nAPPAPITOKEN=<put AppAPIToken>\nAPPID=<put AppID>\nJOBTEMPLATEID=<put JobTemplateID>\nURL2=<put ATS URL>\n\n\necho _\"ATS Testing will start...\"\necho \"\"\n#Call ATS API\n\nJOBID=$(curl -s -H 'Content-Type: text/xml' -d \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:men=\\\"http://www.mendix.com/\\\"><soapenv:Header><men:authentication><username>$USERNAME</username><password>$PASSWORD</password></men:authentication></soapenv:Header><soapenv:Body><men:RunJob><TestRun><AppAPIToken>$APPAPITOKEN</AppAPIToken><AppID>$APPID</AppID><JobTemplateID>$JOBTEMPLATEID</JobTemplateID></TestRun></men:RunJob></soapenv:Body></soapenv:Envelope>\" ${URL2}/ws/RunJob -X POST |xmllint --xpath \"string(//JobID)\" -)\n\nsleep 5\n\nSTATUS=$(curl -s -H 'Content-Type: text/xml' -d \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:men=\\\"http://www.mendix.com/\\\"><soapenv:Header><men:authentication><username>$USERNAME</username><password>$PASSWORD</password></men:authentication></soapenv:Header><soapenv:Body><men:GetTestRun><TestRun><AppAPIToken>$APPAPITOKEN</AppAPIToken><JobID>$JOBID</JobID><AppID>$APPID</AppID></TestRun></men:GetTestRun></soapenv:Body></soapenv:Envelope>\" ${URL2}/ws/GetJobStatus -X POST |xmllint --xpath \"string(//ExecutionStatus)\" -)\n```\n\n----------------------------------------\n\nTITLE: Test Case Data Fields Example\nDESCRIPTION: Shows the field structure for recorded events and action mapping in ATS test cases\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/ht-one-getting-started.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nField | Description\n--- | ---\n**Recorded event** | All the registered clicks/entering text will show up here in the sequence where they were done. Select an event to open the **Action mapping** menu of that particular event. The ATS Recorder selects the actions for you.\n**Action mapping** | This shows all the available actions for this event. Click  **Select** if you want to choose a different action.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Information - Mendix API - JSON\nDESCRIPTION: This JSON snippet shows the expected output of retrieving the environment status in Mendix, including properties like Status, EnvironmentId, Mode, and URLs for accessing the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"Status\" :  \"Stopped\" ,\n        \"EnvironmentId\" :  \"cd5fc610-edb0-43c5-a374-0439a6411ace\",\n        \"Mode\" :  \"Acceptance\",\n        \"Url\" :  \"https://calc-accp.mendixcloud.com\",\n        \"ModelVersion\" :  \"1.1.0.253\",\n        \"MendixVersion\" :  \"6.10.10\",\n        \"Production\" :  false\n\n    },\n    {\n        \"Status\" :  \"Stopped\" ,\n        \"EnvironmentId\" :  \"867c9f56-84ec-438b-b1ae-9f9c50377cba\",\n        \"Mode\" :  \"Production\",\n        \"Url\" :  \"https://calc.mendixcloud.com\",\n        \"ModelVersion\" :  \"175.0.0.3702\",\n        \"MendixVersion\" :  \"6.10.12\",\n        \"Production\" :  false\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Debugging Session Setup with Make It Native App\nDESCRIPTION: This snippet outlines the step-by-step process to initiate a debugging session for native mobile apps using the Make It Native app and Mendix Studio Pro. This includes enabling developer mode, scanning a QR code, and accessing the debugging interface in Chrome. Key dependencies include the Make It Native app and a Mendix application running locally.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Run your Mendix app locally on your desktop.\n2. Start the Make It Native app.\n3. Select **Enable dev mode** in the Make It Native app.\n4. Start your app on your mobile device in Mendix Studio Pro by clicking **View App** > **View on your device**.\n5. With your mobile device, tap **Scan QR code**, then scan the QR code on your desktop.\n```\n\n----------------------------------------\n\nTITLE: Widget XML Properties Definition Example\nDESCRIPTION: Example XML snippet showing how to define properties for a widget including property groups, simple properties, and object-type properties with nested property groups.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n    <propertyGroup caption=\"General\">\n    <property key=\"caption\" type=\"string\">\n        <caption>Graph caption</caption>\n        <description>The caption of this graph</description>\n    </property>\n    </propertyGroup>\n    <propertyGroup caption=\"Data\">\n    <property key=\"dataCaption\" type=\"string\">\n        <caption>Data caption</caption>\n        <description>The caption of the data set</description>\n    </property>\n    <property key=\"dataPoints\" type=\"object\" isList=\"true\">\n        <caption>Data points</caption>\n        <description></description>\n        <objects>\n        <properties>\n            <propertyGroup caption=\"Data\">\n            <property key=\"x\" type=\"integer\" defaultValue=\"0\">\n                <caption>X value</caption>\n                <description></description>\n            </property>\n            <property key=\"y\" type=\"integer\" defaultValue=\"0\">\n                <caption>Y value</caption>\n                <description></description>\n            </property>\n            </propertyGroup>\n        </properties>\n        </objects>\n    </property>\n    </propertyGroup>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Selecting Android Project Entry Point in Android Studio\nDESCRIPTION: Opening the Android project in Android Studio using the Native Template directory as the entry point. This setup is part of preparing the Mendix native mobile app for building and testing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<Native Template root>/android\n```\n\n----------------------------------------\n\nTITLE: Export Carousel Styling Object in Mendix JavaScript\nDESCRIPTION: The code snippet defines and exports a carousel styling object in Mendix. It provides configurations for container, card, and full-width layouts for the Carousel widget. Parameters include properties for slide items, pagination, and indicators, which guide the visual styling of carousels in applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\nexport const com_mendix_widget_native_carousel_Carousel = {\n  container: {\n    // This has all ViewStyle properties. Styles the view surrounding the carousel widget. For best results, make sure to give a fixed `height`\n  },\n  cardLayout: {\n    // Styles the carousel when the layout is set to card.     \n    slideItem: {\n      // This has all ViewStyle properties. Styles the view surrounding each slide, including inactive slides.\n    },\n    inactiveSlideItem: {\n      opacity: null, // Allows inactive slides to become more smaller and faded.   \n      scale: null, // Allows inactive slides to become more smaller and faded.   \n    },\n    indicator: {\n      color: null, // Styles the loading indicator which will be shown while the carousel is loading.\n    },\n    pagination: {\n      container: {\n        // This has all ViewStyle properties. Styles the main view around pagination, regardless of text or dot.\n      },\n      dotStyle: {\n        // This has all ViewStyle properties. Styles all the pagination dots.   \n        color: null, \n      },\n      inactiveDotStyle: {\n        // This has all ViewStyle properties. Additional styles for inactive dots. Will be merged with `dotStyle`.\n        opacity: null,\n        scale: null,\n        color: null,\n      },\n      dotContainerStyle: {\n        // This has all ViewStyle properties. Styles the view around individual pagination dots.  \n      },\n      text: {\n        // This has all TextStyle properties. Will be applied when there are more than five elements in carousel, in which case pagination buttons become text like **1/5**.\n      },\n    },\n  },\n\n  fullWidthLayout: {\n    // Styles the carousel when the layout is set to full width.\n    // Same properties as cardLayout.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Secret for Custom CA Certificates in OpenShift\nDESCRIPTION: Shell command for creating a Kubernetes secret in OpenShift that contains custom CA certificates. The command creates a generic secret in the specified namespace using the contents of the custom.crt file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-standard-operator.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} create secret generic {secret} --from-file=custom.crt=custom.crt\n```\n\n----------------------------------------\n\nTITLE: Espresso Build Configuration for Android\nDESCRIPTION: JSON configuration required to resolve package conflicts and lifecycle errors when using the Espresso driver with Mendix Android apps. Adjusts Android test dependencies and tool versions for compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\"additionalAndroidTestDependencies\": [\"androidx.lifecycle:lifecycle-common:2.2.0\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring General Chart Options with Localization\nDESCRIPTION: JSON configuration for general chart options including display mode bar, logo settings, and locale configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"displayModeBar\": true,\n  \"displaylogo\": false,\n  \"modeBarButtonsToRemove\": [ \"sendDataToCloud\", \"lasso2d\", \"select2d\", \"hoverClosestCartesian\", \"hoverCompareCartesian\", \"toggleSpikelines\" ],\n  \"locale\": \"nl\",\n  \"locales\": {\n\t\t\"nl\": {\n\t\t\t\"dictionary\": {\n\t\t\t\t\"Download plot as a png\": \"Opslaan als PNG\"\n\t\t\t},\n\t\t\t\"format\": {\n\t\t\t\t\"days\": [\"zondag\",\n\t\t\t\t\"maandag\",\n\t\t\t\t\"dinsdag\",\n\t\t\t\t\"woensdag\",\n\t\t\t\t\"donderdag\",\n\t\t\t\t\"vrijdag\",\n\t\t\t\t\"zaterdag\"],\n\t\t\t\t\"shortDays\": [\"zon\",\n\t\t\t\t\"maa\",\n\t\t\t\t\"din\",\n\t\t\t\t\"woe\",\n\t\t\t\t\"don\",\n\t\t\t\t\"vri\",\n\t\t\t\t\"zat\"],\n\t\t\t\t\"months\": [\"januari\",\n\t\t\t\t\"februari\",\n\t\t\t\t\"maart\",\n\t\t\t\t\"april\",\n\t\t\t\t\"mei\",\n\t\t\t\t\"juni\",\n\t\t\t\t\"juli\",\n\t\t\t\t\"augustus\",\n\t\t\t\t\"september\",\n\t\t\t\t\"oktober\",\n\t\t\t\t\"november\",\n\t\t\t\t\"december\"],\n\t\t\t\t\"shortMonths\": [\"jan\",\n\t\t\t\t\"feb\",\n\t\t\t\t\"maa\",\n\t\t\t\t\"apr\",\n\t\t\t\t\"mei\",\n\t\t\t\t\"jun\",\n\t\t\t\t\"jul\",\n\t\t\t\t\"aug\",\n\t\t\t\t\"sep\",\n\t\t\t\t\"okt\",\n\t\t\t\t\"nov\",\n\t\t\t\t\"dec\"],\n\t\t\t\t\"date\": \"%d-%m-%Y\",\n\t\t\t\t\"datetime\": \"%d-%m-%Y %H:%M\",\n\t\t\t\t\"year\": \"%Y\",\n\t\t\t\t\"month\": \"%b %Y\",\n\t\t\t\t\"dayMonth\": \"%d %b\",\n\t\t\t\t\"dayMonthYear\": \"%d %b %Y\"\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customer Data from Databricks\nDESCRIPTION: Simple SQL query to retrieve all customer data from the Databricks database. This query retrieves all records from the customerData table and can be used in the Mendix External Database connector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/databricks-edc.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM customerData\n```\n\n----------------------------------------\n\nTITLE: Handling IMendixObject in Java Actions (Deprecated)\nDESCRIPTION: This snippet describes how to access the underlying `IMendixObject` when dealing with Entity or List of Entity parameters within Java actions in Mendix. The `__[FieldName]` field is deprecated, and the `getMendixObject()` method should be used instead to retrieve the `IMendixObject`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.0.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\"getMendixObject()\"\n```\n\n----------------------------------------\n\nTITLE: Adding NFC Dependency in Android App Gradle\nDESCRIPTION: Include NFC manager library as a project dependency in the Android app's build configuration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_8\n\nLANGUAGE: gradle\nCODE:\n```\nimplementation project(\":react-native-nfc-manager\")\n```\n\n----------------------------------------\n\nTITLE: Installing Auto-Linkable Dependencies Command\nDESCRIPTION: Command to install a new dependency that supports auto-linking in the Native Template's package.json file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -s <dependency name>\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration for Release Notes Page\nDESCRIPTION: YAML frontmatter configuration defining the page metadata, URL, weight and other settings for the Control Center release notes documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/control-center/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Control Center Release Notes\"\nlinktitle: \"Control Center\"\nurl: /releasenotes/control-center/\ndescription: \"Release notes for Control Center\"\nweight: 30\nnumberless_headings: true\n#This document is mapped to the landing page, update the link there if renaming or moving the doc file.\n---\n```\n\n----------------------------------------\n\nTITLE: Mendix ATS API RerunNotPassed Endpoint URL (Text)\nDESCRIPTION: The URL endpoint for the RerunNotPassed API method that allows rerunning failed or not-executed test cases for a finished job.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nhttps://ats100.mendixcloud.com/ws/RerunNotPassed\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Current User Retrieval in Mendix\nDESCRIPTION: XPath constraint used in a Retrieve activity to get the currently logged-in user. This query matches the current user's ID with the system variable $currentUser.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/retrieving-current-user-with-a-microflow.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[id = $currentUser]\n```\n\n----------------------------------------\n\nTITLE: Defining Bold Font Style for Consistent Usage in Mendix Native Mobile App\nDESCRIPTION: This snippet defines a constant containing PostScript names for various weights and styles of Times New Roman, which can be utilized across the app to ensure consistent styling across platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-custom-fonts.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport const timesNewRomanFontFamily = {\n    regular: \"TimesNewRomanPSMT\",\n    boldItalic: \"TimesNewRomanPS-BoldItalicMT\",\n    bold: \"TimesNewRomanPS-BoldMT\",\n    italic: \"TimesNewRomanPS-ItalicMT\",\n};\n```\n\n----------------------------------------\n\nTITLE: Return Value Table for Get Item/Row Index Action\nDESCRIPTION: Markdown table describing the return value of the 'Get Item/Row Index' action. It includes the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-multiviews/rg-one-get-itemrow-index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n--- | --- | ---\nIndex | Integer | The index of the supplied Row/Item. Starts with 0 for the first Row/Item.\n```\n\n----------------------------------------\n\nTITLE: Autocomplete Property Configuration\nDESCRIPTION: Explanation of the autocomplete property for improving browser input and accessibility\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-box.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nSpecifies if a text box should have autocomplete enabled\n```\n\n----------------------------------------\n\nTITLE: Markdown alert block for Report Button requirement\nDESCRIPTION: Markdown code block showing an alert message about Report Button widget requirement\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/report-date-parameter/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nIf you have a report date parameter widget on the page, you must also add a [Report Button](/refguide8/report-button/) widget so that it is possible for the end-user to regenerate the report after specifying the parameter.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Java Dependency File Naming Convention\nDESCRIPTION: Example showing the naming convention for Java dependency files in the userlib folder. The .jar file should include version number and have a corresponding blank RequiredLib file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/create-modules/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\norg.apache.commons.io-2.3.0.jar\norg.apache.commons.io-2.3.0.jar.MyModule.RequiredLib\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Template Property with Translations in Mendix Pluggable Widgets\nDESCRIPTION: Example of a text template property configuration with translations for multiple languages. Text templates allow users to configure translatable text similar to captions in text widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myBlockTitle\" type=\"textTemplate\">\n\t<caption>Input title</caption>\n\t<description>Title for the color input</description>\n\t<translations>\n\t\t<translation lang=\"en_US\">Color</translation>\n\t\t<translation lang=\"nl_NL\">Kleur</translation>\n\t\t<translation lang=\"uk_UA\">Колір</translation>\n\t</translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Standard Mendix Components JSON Configuration\nDESCRIPTION: Default configuration of components.json file that specifies the basic CSS and JavaScript files required for Mendix hybrid mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/hybrid-mobile/customizing-hybrid-mobile-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"files\": {\n        \"css\": [\"styles/web/css/main.css\"],\n        \"js\": [\"mxclientsystem/mxui/mxui.js\"]\n    },\n    \"cachebust\": \"{{cachebust}}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Snippet in Mendix Documentation\nDESCRIPTION: A snippet inclusion tag that references the standard visibility section documentation for Mendix components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/reference-set-selector.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring PCLM Namespace with Credentials\nDESCRIPTION: Command to configure namespace with PCLM server details and admin credentials. Used to set up operator access to the PCLM server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli config-namespace -n <operator-ns> \\\n   -s <pclm-http-url> \\\n   -u <admin-user> \\\n   -p <admin-password>\n```\n\n----------------------------------------\n\nTITLE: Viewing Storage Instance Logs\nDESCRIPTION: Commands to view logs of storage instances in case of failures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_29\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} log {storageinstance-name}\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} log {storageinstance-name}\n```\n\n----------------------------------------\n\nTITLE: Converting Decimal to String in Java\nDESCRIPTION: This snippet demonstrates how to use the toString function to convert a decimal value to a string in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntoString(1.4)\n```\n\n----------------------------------------\n\nTITLE: Configuring Resource Limits and Requests\nDESCRIPTION: This YAML snippet demonstrates how to configure resource limits and requests for sidecar, metricsSidecar, build, and runtime containers within a Mendix application deployment. These settings control the CPU, memory, and ephemeral storage allocated to each container.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_12\n\nLANGUAGE: YAML\nCODE:\n```\n\"spec:\\n  sidecarResources:\\n    limits:\\n      cpu: 250m\\n      memory: 32Mi\\n      ephemeral-storage: 4Mi\\n    requests:\\n      cpu: 100m\\n      memory: 16Mi\\n      ephemeral-storage: 4Mi\\n  metricsSidecarResources:\\n    limits:\\n      cpu: 100m\\n      memory: 32Mi\\n      ephemeral-storage: 4Mi\\n    requests:\\n      cpu: 100m\\n      memory: 16Mi\\n      ephemeral-storage: 4Mi\\n  buildResources:\\n    limits:\\n      cpu: '1'\\n      memory: 256Mi\\n      ephemeral-storage: 2Gi\\n    requests:\\n      cpu: 250m\\n      memory: 64Mi\\n      ephemeral-storage: 2Gi\\n  runtimeResources:\\n    limits:\\n      cpu: 1000m\\n      memory: 512Mi\\n      ephemeral-storage: 256Mi\\n    requests:\\n      cpu: 100m\\n      memory: 512Mi\\n      ephemeral-storage: 256Mi\\n  runtimeLivenessProbe:\\n    initialDelaySeconds: 60\\n    periodSeconds: 15\\n  runtimeReadinessProbe:\\n    initialDelaySeconds: 5\\n    periodSeconds: 1\\n  # startup probes are deprecated in Mendix Operator 2.15.0\\n  runtimeStartupProbe:\\n    failureThreshold: 30\\n    periodSeconds: 10\\n  runtimeTerminationGracePeriodSeconds: 300\"\n```\n\n----------------------------------------\n\nTITLE: Defining Dropdown Component Styling in JavaScript\nDESCRIPTION: Comprehensive styling configuration object for the Mendix native mobile dropdown component. Includes properties for container, items, labels, pickers, and validation states. Supports uniform design across platforms since Studio Pro 8.11.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nexport const DropDown = {\n  container: {\n    // All ViewStyle properties   \n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the text box is non-editable.   \n  },\n  iconStyle: {\n    // This has all TextStyle properties. Styles the arrow down icon next to the value (with Studio Pro v8.15).\n  },  \n  item: {\n    // This has all TextStyle properties. Styles all the items in dropdown menu including selected item (with Studio Pro v8.11)\n  }, \n  itemContainer: {\n    // This has all ViewStyle properties. Styles all the item containers in dropdown menu including selected item container (with Studio Pro v8.11).\n  },   \n  label: {\n    // This has all TextStyle properties.\n    numberOfLines: 1 // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis.  \n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the drop-down is non-editable.\n  },\n  menuWrapper: {\n    // This has all ViewStyle properties. Styles the wrapper view surrounding all the menu items (with Studio Pro v8.11).\n  }, \n  pickerIOS: {\n    // This has all ViewStyle properties.\n  },\n  pickerBackdropIOS: {\n    // This has all ViewStyle properties.\n  },\n  pickerTopIOS: {\n    // This has all ViewStyle properties.\n  },\n  selectedItem: {\n    // This has all TextStyle properties. Styles the selected item in dropdown menu (with Studio Pro v8.11).\n  }, \n  selectedItemContainer: {\n    // This has all ViewStyle properties. Styles the selected item's container in dropdown menu (with Studio Pro v8.11).\n  }, \n  useUniformDesign: null, // Enables new uniformDesign (with Studio Pro v8.11).\n  validationMessage: {\n    // This has all TextStyle properties. Styles the validation message (with Studio Pro v8.11).\n  },\n  value: {\n    // This has all TextStyle properties. Styles the value button which toggle's dropdown and PickerIOS items. If placeholder is selected, placeholderTextColor will be applied\n    placeholderTextColor: null, // If placeholder is selected, placeholderTextColor will be applied (with Studio Pro v8.11).\n  },\n  valueFocused: {\n    // Same properties as `value`. Overrides `value` styles if the dropdown box is focused. (with Studio Pro v8.15).\n  },  \n  valueContainer: {\n    // This has all ViewStyle properties and rippleColor. Styles the value button's container (with Studio Pro v8.11).\n  },  \n  valueContainerFocused: {\n    // Same properties as `valueContainer`. Overrides `valueContainer` styles if the dropdown box is focused (with Studio Pro v8.15).\n  },  \n  valueContainerError: {\n    // Same properties as `valueContainer`. Overrides `valueContainer` styles if the dropdown has a validation error (with Studio Pro v9.19.0).\n  }, \n};\n```\n\n----------------------------------------\n\nTITLE: Building Private Svix Server - Docker Build Command\nDESCRIPTION: This snippet provides the command to build the Docker image for the private Svix server using a specified image registry URL and the custom Dockerfile developed in the previous step.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\ndocker build -t {customer-private-image-registry-url}/svix/svix-server:v1.25.tls\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Link in Mendix Documentation\nDESCRIPTION: This snippet includes a reference to common microflow properties through a file inclusion. It links to the standard microflow common section documentation that applies to most Mendix activities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/variable-activities/change-variable.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/microflow-common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Selenium Hub Parameters Table\nDESCRIPTION: Markdown table defining the configuration parameters for setting up a Selenium hub in ATS, including name, URL, parallel sessions, proxy URL, and custom capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/rg-one-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nField | Description\n--- | ---\nName | The name of the Selenium hub.\nURL | The URL of the Selenium server.\nParallel Sessions | The number of tests that can run in parallel on the Selenium hub.\nProxy URL | The URL of an optional proxy server. Normally there should be no need to use a proxy server\nCustom Capabilities | Set the Selenium DesiredCapabilities (for more information, see the Selenium documentation).\n```\n\n----------------------------------------\n\nTITLE: Layout Property Code Snipped\nDESCRIPTION: Code snippet demonstrating how to include a common Mendix file section reference in markdown\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/layout/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide8/common-section-link.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Declaring Native Dependencies for JavaScript Actions\nDESCRIPTION: This JSON snippet defines the native dependencies required for the NFC functionality in the Mendix app. It specifies the version of the `react-native-nfc-manager` library that the app needs to function correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nativeDependencies\": {\n        \"react-native-nfc-manager\": \"1.2.2\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers with false() in Java Queries - Mendix - Java\nDESCRIPTION: This snippet illustrates the use of the false() function within a Java query in the Mendix environment to retrieve customers who are not classified as gold customers. The function does not require additional dependencies but operates within the context of the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-false.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n//Sales.Customer[IsGoldCustomer = false()]\n```\n\n----------------------------------------\n\nTITLE: Recognized Media Types for XML and JSON in Mendix REST Services\nDESCRIPTION: This table shows the recognized media types for XML and JSON outputs in Mendix REST services. It specifies which Content-Type headers are interpreted as XML or JSON.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-operation.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Media Type                   | Recognized As |\n| ---                          | --- |\n| *application/xml*            | XML |\n| *text/xml*                   | XML |\n| anything ending with *+xml*  | XML |\n| *application/json*           | JSON |\n| anything ending with *+json* | JSON |\n```\n\n----------------------------------------\n\nTITLE: Adding Background Color in Sass\nDESCRIPTION: This code snippet demonstrates a quick test to see if everything is working. Adding this code in *theme/styles/sass/custom/_custom-variables.scss* will change the background color to red. This verifies that Gulp is correctly processing the Sass files and applying the styling changes to the Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/style-with-gulp-and-sass.md#2025-04-21_snippet_3\n\nLANGUAGE: scss\nCODE:\n```\n\"body{ background-color: red; }\"\n```\n\n----------------------------------------\n\nTITLE: Generating and Modifying Domain Model in New App\nDESCRIPTION: A script that creates a new Mendix app and modifies its domain model using a generated JavaScript code generator function\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/generating-code-from-the-model.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { domainmodels, IModel } from \"mendixmodelsdk\";\nimport { MendixPlatformClient } from \"mendixplatformsdk\";\n\nasync function main() {\n    const client = new MendixPlatformClient();\n\n    const app = await client.createNewApp(`NewApp-${Date.now()}`, {\n        repositoryType: \"git\"\n    });\n\n    const workingCopy = await app.createTemporaryWorkingCopy(\"main\");\n    const model = await workingCopy.openModel();\n\n    const domainModelInterface = model.allDomainModels().filter(dm => dm.containerAsModule.name === \"MyFirstModule\")[0];\n    const domainModel = await domainModelInterface.load();\n\n    generate(domainModel, model);\n\n    await model.flushChanges();\n\n    await workingCopy.commitToRepository(\"main\");\n}\n\nmain().catch(console.error);\n\n//The generated code\nfunction generate(domainModel1: domainmodels.DomainModel, model: IModel) {\n    // Domain model generation code\n}\n```\n\n----------------------------------------\n\nTITLE: XAS Request Error Message\nDESCRIPTION: Error message thrown when retrieve_by_ids request exceeds MaxRetrieveSize limit\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nretrieve_by_ids action tried to retrieve more objects than allowed by the `MaxRetrieveSize`. Amount of guids requested: (...), max amount of objects allowed: (...)\n```\n\n----------------------------------------\n\nTITLE: TypeScript Version Check Command\nDESCRIPTION: Bash command to verify the installed TypeScript compiler version\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ tsc --version\nVersion 3.6.2 (or higher)\n```\n\n----------------------------------------\n\nTITLE: Defining a Progress Bar Color Property in XML\nDESCRIPTION: This XML snippet defines an expression property for configuring the CSS color of a progress bar. It includes a default value and specifies the expected return type, enhancing the component's flexibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"progressBarColor\" type=\"expression\" defaultValue=\"'red'\">\n\t<caption>Color</caption>\n\t<description>Progress bar CSS color</description>\n\t<returnType type=\"String\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Liveness Probe\nDESCRIPTION: This YAML snippet configures a liveness probe for a Mendix application deployment. The probe uses an HTTP GET request to check the health of the application and specifies parameters such as the path, port, initial delay, period, timeouts, and thresholds for determining the application's health status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\n\"livenessProbe:\\n  failureThreshold: 3\\n  httpGet:\\n    path: /m2ee-sidecar/v1/healthz\\n    port: 8800\\n    scheme: HTTP\\n  initialDelaySeconds: 60\\n  periodSeconds: 15\\n  successThreshold: 1\\n  timeoutSeconds: 1\"\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Mendix Docs\nDESCRIPTION: YAML front matter block defining metadata for the documentation page including title, URL, weight, listing options and description settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"General Info\"\nurl: /refguide8/general/\nweight: 10\nno_list: false\ndescription_list: true \n---\n```\n\n----------------------------------------\n\nTITLE: SOAP Response Handling\nDESCRIPTION: Methods for processing web service call responses in a Mendix application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_3\n\nLANGUAGE: Response Processing\nCODE:\n```\n- XML-to-domain mapping for complex structures\n- Store primitive return in variable\n- Ignore return if not needed\n```\n\n----------------------------------------\n\nTITLE: Deleting a Plan in Kubernetes or OpenShift\nDESCRIPTION: This snippet contains commands for deleting a storage plan in both Kubernetes and OpenShift environments. It is essential to use these commands only when the plan is not being utilized by any environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_32\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} get storageplan\noc -n {namespace} delete storageplan {StoragePlanName}\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} get storageplan\nkubectl -n {namespace} delete storageplan {StoragePlanName}\n```\n\n----------------------------------------\n\nTITLE: Deprecating getMember Method in IMendixObject Interface\nDESCRIPTION: The `IMendixObjectMember<?> getMember(IContext context, String memberName)` method in the IMendixObject interface is deprecated. Developers should use `IMendixObjectMember<?> getMember(String memberName)` instead. The deprecation removes the need to pass an IContext object, making the method easier to use and more efficient in some cases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n\"IMendixObjectMember<?> getMember(IContext context, String memberName)\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"IMendixObjectMember<?> getMember(String memberName)\"\n```\n\n----------------------------------------\n\nTITLE: Employee Domain Model Entity\nDESCRIPTION: Create an Employee entity with Name and Level attributes in the domain model\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/testing-microflows-using-the-unittesting-module.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Domain Model\nCODE:\n```\nEntity: Employee\nAttributes:\n- Name (String)\n- Level (Enumeration: Level)\n```\n\n----------------------------------------\n\nTITLE: OQL Query Selecting Customers After Range End\nDESCRIPTION: Example query using RANGEEND to select customers born after the end of last week's range in a Sales.Customer dataset\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangeend.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nselect FirstName as First, LastName as Last, Name as Name, Birthday as BDay, CustomerType as Type from Sales.Customer\nwhere Birthday > RANGEEND($rangeLastWeek)\n```\n\n----------------------------------------\n\nTITLE: Inequality Comparison in Mendix\nDESCRIPTION: This snippet demonstrates an inequality comparison in Mendix. It compares two string values and returns a boolean value based on whether the two strings are not equal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\n\"\\\"mystring\\\" != \\\"mystring\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Y Axes\nDESCRIPTION: JSON configuration for charts with multiple Y axes, showing how to assign data series to different axes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"yaxis2 data\",\n    \"yaxis\": \"y2\",\n    \"type\": \"scatter\"\n  },\n  {\n    \"name\": \"yaxis data\",\n    \"type\": \"scatter\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Carousel Widget Styling Structure in XML\nDESCRIPTION: XML structure for styling the Carousel widget. The structure includes container, cardLayout, and fullWidthLayout objects with their respective sub-components for styling slides, indicators, and pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_35\n\nLANGUAGE: xml\nCODE:\n```\n</container>\n<cardLayout>\n    </slideItem>\n    </inactiveSlideItem>\n    </indicator>\n    <pagination>\n        </container>\n        </dotStyle>\n        </inactiveDotStyle>\n        </dotContainerStyle>\n        </text>\n    </pagination>\n</cardLayout>\n<fullWidthLayout>\n    </slideItem>\n    </inactiveSlideItem>\n    </indicator>\n    <pagination>\n        </container>\n        </dotStyle>\n        </inactiveDotStyle>\n        </dotContainerStyle>\n        </text>\n    </pagination>\n</fullWidthLayout>\n```\n\n----------------------------------------\n\nTITLE: Main Render Method\nDESCRIPTION: Component's main render method combining header and content\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_19\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n        return (\n            <View style={this.styles.container}>\n                {this.renderHeader()}\n                {this.renderContent()}\n            </View>\n        );\n    }\n```\n\n----------------------------------------\n\nTITLE: Parsing OrderStatus Enumeration Return Value\nDESCRIPTION: Microflow expression that converts text values from Excel ('open', 'processing', 'complete') to OrderStatus enumeration values. Falls back to Complete status if no match is found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/importing-excel-documents/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: pseudo-code\nCODE:\n```\nif $Unformatted = 'open' then MyFirstModule.OrderStatus.Open\nelse if $Unformatted = 'processing' then MyFirstModule.OrderStatus.Processing\nelse if $Unformatted = 'complete' then MyFirstModule.OrderStatus.Complete\nelse MyFirstModule.OrderStatus.Complete\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers in Rotterdam or Losdun\nDESCRIPTION: Demonstrates querying for customers based in either Rotterdam or Losdun by leveraging a single path and applying an 'or' condition within it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: StudioPro\nCODE:\n```\n[Sales.Customer_Address/Sales.Address[City = 'Rotterdam' or City = 'Losdun']]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address[City = 'Rotterdam' or City = 'Losdun']]\n```\n\n----------------------------------------\n\nTITLE: Displaying Architecture Diagram in Markdown\nDESCRIPTION: Markdown snippet for inserting an image of the Mendix for Private Cloud architecture diagram.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/deployment/private-cloud/private-cloud-cluster/mx4pc-architecture.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Updating Multiple Objects by Iterating over a List in Mendix\nDESCRIPTION: This snippet outlines how to iterate over a retrieved list of orders in a microflow to update their status to 'Complete'. It includes specific steps for configuring loop and change object activities within the microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **IVK_SetOrderToComplete** microflow that you created in the previous section.\n2. Drag a **Loop** activity from the **Toolbox**, and place it between the **OrderProcessingList** activity and the end event of the microflow.\n3. Double-click the **Loop** activity.\n4. In the **Iterate over** list, select **OrderList**, and then click **OK**.\n5. Drag a **Change object** activity into the **Loop** activity.\n6. Double-click the **Change object** activity.\n7. In the **Object** list, select **IteratorOrder**, and then click **New**.\n8. In the **Edit Change Item** dialog box, configure the following settings:\n    * **Member** – select **OrderStatus**\n    * **Value** – enter *MyFirstModule.OrderStatus.Complete*\n9. Click **OK**, and then click **OK** again.\n10. Drag a **Commit** activity from the **Toolbox** and place it after the **Loop** activity.\n11. Double-click the **Commit** activity.\n12. In the **Commit Object(s)** dialog box, configure the following settings:\n    * **Object or List** – select **OrderList**\n    * **Refresh in Client** – set to **Yes**; this settings refreshes your list in the client so that your changes are visible\n13. Click **OK**, and then save the microflow.\n```\n\n----------------------------------------\n\nTITLE: Deprecating isValid Method in MendixEnum\nDESCRIPTION: The `Boolean isValid(IContext context, String identifier)` method in `com.mendix.core.objectmanagement.member.MendixEnum` is deprecated. An alternative version is provided that does not require the `IContext` parameter. This simplifies the validation process by removing the unnecessary context dependency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n\"Boolean isValid(IContext context, String identifier)\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.core.objectmanagement.member.MendixEnum\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"IContext\"\n```\n\n----------------------------------------\n\nTITLE: Opening Application URL Test Method\nDESCRIPTION: Test method to navigate to the application URL with priority 1\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=1)\npublic void openApp() {\ndriver.get(\"http://localhost:8080/index.html\");\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Data from a Backup File to a Mendix Environment\nDESCRIPTION: Shell commands for importing data from a backup file into a Mendix environment. The commands set up the required resources, copy the data migration tool to the pod, transfer the backup file, and execute the restore process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nNAMESPACE={namespace}\nENVIRONMENT={environment}\n# Create the resources required for the restore operation\nkubectl -n $NAMESPACE apply -f /tmp/mendix-backup-restore.yaml\n# Copy the Linux version of the data migration tool into the Pod\nkubectl -n $NAMESPACE cp mxpc-data-migration mendix-backup-restore:/tmp/mxpc-data-migration\n# Copy the backup file to be restored into the Pod;\n# replace files_and_database.tar.gz with the path to the backup file\nkubectl -n $NAMESPACE cp files_and_database.tar.gz mendix-backup-restore:/tmp/restore.tar.gz\n# Run the restore process\nkubectl -n $NAMESPACE exec -it mendix-backup-restore -- /tmp/mxpc-data-migration restore -e $ENVIRONMENT -f /tmp/restore.tar.gz -n $NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Creating Validation Entity for Translatable Messages\nDESCRIPTION: Prepare a validation entity in the Mendix domain model to manage translatable validation messages efficiently. This setup allows for centralized management of validation messages across different languages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/refguide/modeling/menus/translatable-texts/translatable-validation-messages/validation-entity.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Handling Scheduled Event Intervals in Java\nDESCRIPTION: This Java code snippet demonstrates how scheduled event intervals are determined based on the type (e.g., SECOND, MINUTE, HOUR). The code switches between different interval types to assign a corresponding time unit and interval value, allowing for the proper scheduling of events over time. Key dependency: TimeUnit from the java.util.concurrent package, and a defined scheduledEvent object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/scheduled-events/scheduled-events-legacy.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nswitch(scheduledEvent.getIntervalType())\n{\n    case SECOND:\n        timeUnit = TimeUnit.SECONDS;\n        interval = scheduledEvent.getInterval();\n        break;\n    case MINUTE:\n        timeUnit = TimeUnit.MINUTES;\n        interval = scheduledEvent.getInterval();\n        break;\n    case HOUR:\n        timeUnit = TimeUnit.HOURS;\n        interval = scheduledEvent.getInterval();\n        break;\n    case DAY:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval();\n        break;\n    case WEEK:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval()*7;\n        break;\n    case MONTH:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval()*31;\n        break;\n    case YEAR:\n        timeUnit = TimeUnit.DAYS;\n        interval = scheduledEvent.getInterval()*365;\n        break;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Module Roles in Mendix\nDESCRIPTION: Process of defining module roles such as Administrator and User within a Mendix application, including role configuration and access management\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/security/create-a-secure-app.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nModule Role: Administrator\nModule Role: User\n```\n\n----------------------------------------\n\nTITLE: Querying with OFFSET in SQL\nDESCRIPTION: This query retrieves all customers, except for the first ten, sorted by their last name using the OFFSET clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nORDER BY LastName\nOFFSET 10\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Custom Error Page in HTML\nDESCRIPTION: An example HTML template for creating custom offline, 404, or 403 error pages in Mendix. This basic structure includes references to external CSS and JavaScript files that should be placed in the error_page directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/custom-error-page.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/error_page/style.css\">\n    <script src=\"/error_page/script.js\"></script>\n  </head>\n  <body>\n    This application is currently offline.\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Cancelling a Specific Scheduled Notification\nDESCRIPTION: This snippet demonstrates how to specifically cancel a scheduled notification by providing its identifier. It includes steps to edit the notification ID parameter in the scheduling action before triggering the cancel action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-schedule-cancel.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n1. Navigate to **ACT_CreateAndSendNotification**.\n2. Double-click your **Schedule notification** activity.\n3. Click **Notification id** > **Edit**. \n4. Type *'testID'* into the argument field and click **OK**:\n5. Click **OK** once more to close the dialog box.\n6. Create a nanoflow named *ACT_CancelScheduledNotifications*.\n7. Drag a JavaScript Action named **Cancel scheduled notification** into your nanoflow:\n```\n\n----------------------------------------\n\nTITLE: Querying Customers without Orders\nDESCRIPTION: This snippet retrieves all customers who have not placed any orders using the not() function. It demonstrates how to negate an existence check in XPath.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: Defining Properties with setLabel Attribute in Mendix Pluggable Widget\nDESCRIPTION: This code snippet demonstrates how to define properties with the setLabel attribute, which allows automatically setting the Label property value when these properties are configured.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_24\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myAttribute\" setLabel=\"true\" type=\"attribute\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n    <attributeTypes>\n        <attributeType name=\"String\" />\n        <attributeType name=\"Boolean\" />\n    </attributeTypes>\n</property>\n<property key=\"myAssociation\" setLabel=\"true\" type=\"association\" selectableObjects=\"objectsDatasource\">\n    <caption>Reference</caption>\n    <description>Reference</description>\n    <associationTypes>\n        <associationType name=\"Reference\"/>\n        <associationType name=\"ReferenceSet\"/>\n    </associationTypes>\n</property>\n<property key=\"objectsDatasource\" type=\"datasource\" isList=\"true\">\n    <caption>Selectable objects</caption>\n    <description/>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Example of Configured Mendix Native App in JSON\nDESCRIPTION: A sample JSON configuration for a Mendix native app using the Native Template. It includes app details, device targets, orientation settings, permissions, and various capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"configVersion\": 2,\n    \"appIdentifier\": \"com.mendix.mobile\",\n    \"appName\": \"Mendix App\",\n    \"appVersion\": \"1.0.0\",\n    \"buildNumber\": 1,\n    \"runtimeUrl\": \"http://localhost:8080\",\n    \"bundleName\": {\n        \"main\": \"MendixApp\",\n        \"dev\": \"MendixAppDev\"\n    },\n    \"deviceTarget\": {\n        \"phone\": true,\n        \"tablet\": false\n    },\n    \"orientation\": {\n        \"portrait\": true,\n        \"landscape\": true\n    },\n    \"permissions\": [\n        {\n            \"title\": \"Internet\",\n            \"name\": \"android.permission.INTERNET\",\n            \"platform\": \"android\",\n            \"required\": true\n        },\n        {\n            \"title\": \"Location - Always Usage\",\n            \"name\": \"NSLocationAlwaysUsageDescription\",\n            \"purpose\": \"To use that feature, the app needs access to your location.\",\n            \"platform\": \"ios\",\n            \"required\": true\n        }\n    ],\n    \"capabilities\": {\n        \"deepLink\": {\n            \"value\": \"\",\n            \"enabled\": false\n        },\n        \"maps\": {\n            \"value\": \"a12dkdadhqow12123123radqwe\",\n            \"enabled\": true\n        },\n        \"mapsIos\": {\n            \"enabled\": false\n        },\n        \"pushNotifications\": {\n            \"enabled\": false\n        },\n        \"crashlytics\": {\n            \"enabled\": false\n        },\n        \"firebaseAndroid\": {\n            \"enabled\": false\n        },\n        \"firebaseIos\": {\n            \"enabled\": false\n        },\n        \"localNotifications\": {\n            \"enabled\": false\n        },\n        \"appCenterOTA\": {\n            \"enabled\": false\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Mendix App using Kubectl\nDESCRIPTION: Shows the shell command for deploying a Mendix application on a Kubernetes platform using kubectl. Requires a predefined YAML configuration file and the target namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-operator.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl apply -f {File containing the CR} -n {namespace where app is being deployed}\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Proxy Settings in net.properties\nDESCRIPTION: This snippet shows how to configure HTTP and HTTPS proxy settings in the `net.properties` file for Java. It requires replacing placeholder values for proxy IP address and port with the actual values.  After a system reboot, Gradle will utilize these settings to connect to external repositories through the specified proxy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/managed-dependencies.md#2025-04-21_snippet_4\n\nLANGUAGE: txt\nCODE:\n```\n\"http.proxyHost=your.proxy.ip.address\nhttp.proxyPort=your.proxy.port\nhttps.proxyHost=your.proxy.ip.address\nhttps.proxyPort=your.proxy.port\"\n```\n\n----------------------------------------\n\nTITLE: Including Data Source Section Properties in Drop-Downs\nDESCRIPTION: This snippet includes the data source properties section for drop-down widgets, which specifies how to link the widget to the underlying data model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Adding Configuration to Entry.js in Mendix Hybrid App\nDESCRIPTION: This code snippet demonstrates how to add JavaScript code under the `MxApp.onConfigReady(function(config) {` hook in the Entry.js file for a Mendix hybrid app. This is crucial for initializing the SSO functionality using the SAML module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/implement-sso-on-a-hybrid-app-with-mendix-and-saml.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nMxApp.onConfigReady(function(config) {\n    // Add your SSO configuration here\n});\n```\n\n----------------------------------------\n\nTITLE: Basic XML Structure Example in Web Services\nDESCRIPTION: This example demonstrates a simple XML structure representing a person object with name, age, and address attributes. The XML format is used for data serialization and de-serialization when consuming or publishing web services.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-web-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<person>\n\t<name>John Smith</name>\n\t<age>23</age>\n\t<address>\n\t\t<street>Dopeylane 14</street>\n\t\t<city>Worchestire</city>\n\t</address>\n</person>\n```\n\n----------------------------------------\n\nTITLE: XML Representation of Many-to-Many Association with Dual Ownership\nDESCRIPTION: Shows how a many-to-many association with dual ownership between Accountant and Group entities is represented in XML. The association is stored in both the Accountant and Group elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/associations/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<Accountant id=\"501\">\n\t<idnumber>1</idnumber>\n\t<name>Earl Grey</name>\n\t<telephonenumber>1-800-EARL-GREY</telephonenumber>\n\t<Accountant_Group>id_301 id_302</Accountant_Group>\n</Accountant>\n\n<Accountant id=\"502\">\n\t<idnumber>2</idnumber>\n\t<name>Scrooge McDuck</name>\n\t<telephonenumber>1-800-SCROOGE-MCDUCK</telephonenumber>\n\t<Accountant_Group>id_301 id_302</Accountant_Group>\n</Accountant>\n\n<Group id=\"301\">\n\t<name>Multinational corporations</name>\n\t<Accountant_Group>id_501 id_502</Accountant_Group>\n</Group>\n\n<Group id=\"302\">\n\t<name>Hardware suppliers</name>\n\t<Accountant_Group>id_501 id_502</Accountant_Group>\n</Group>\n```\n\n----------------------------------------\n\nTITLE: Tools Version Configuration for Espresso\nDESCRIPTION: This JSON snippet configures the tools Versions to resolve package conflicts, tailoring the compileSdk version among other settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\"toolsVersions\": {\n    \"compileSdk\": \"30\"\n    ...\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering UI with File Operation Buttons in React\nDESCRIPTION: JSX code that renders a React component with three buttons for saving, loading, and deleting a file, each connected to their respective callback functions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/local-app-files-api.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\ncreateRoot(document.getElementById(\"root\")!).render(\n  <StrictMode>\n    <h1>Mendix Studio Pro Extension</h1>\n    <p>Hello from an extension!</p>\n    <p>\n      <button onClick={saveFile}>Save Hello world File</button>\n      <button onClick={loadFile}>Load Hello world File</button>\n      <button onClick={deleteFile}>Delete Hello world File</button>\n    </p>\n  </StrictMode>\n);\n```\n\n----------------------------------------\n\nTITLE: Division Precision Example in Java\nDESCRIPTION: Example showing division with recurring decimal result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n3 : 7\n```\n\n----------------------------------------\n\nTITLE: Creating a Notification Widget with Page Navigation\nDESCRIPTION: Set up a Notifications widget in a Mendix native mobile app with an action to show a specific page when the notification is opened.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-action.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix-widget-configuration\nCODE:\n```\nNotifications Widget\n- Action Name: show_page\n- On Open: Show Page (NotifPage)\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Files in settings.json for Atlas UI v1\nDESCRIPTION: Default CSS file configuration in Atlas UI version 1 settings.json, which includes lib.css and custom.css files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-atlas.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"cssFiles\": [\n    \"styles/css/lib/lib.css\",\n    \"styles/css/custom/custom.css\"\n],\n```\n\n----------------------------------------\n\nTITLE: Adding Search Parameter to REST Template in Mendix\nDESCRIPTION: Adds a search parameter to the REST service call template in a Mendix microflow. This allows for server-side searching of data grid results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_7\n\nLANGUAGE: Expression\nCODE:\n```\n&name_like={4}\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Files in settings.json - JSON\nDESCRIPTION: This snippet shows how to configure the `cssFiles` property in the `settings.json` file to load a specific CSS file when viewing a page in Studio Pro. It is essential for maintaining consistent styling across the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/configuring-your-theme.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"cssFiles\": [ \"styles/web/css/main.css\" ]\n}\n```\n\n----------------------------------------\n\nTITLE: Design Properties Section Markdown Snippet\nDESCRIPTION: Link to the documentation of design properties section relevant to the simple menu bar widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/menu-widgets/simple-menu-bar.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Archive Status Response in Mendix API\nDESCRIPTION: Example JSON response when checking archive creation status. When complete, the URL field contains a direct link to download the archive, which is valid for eight hours after completion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":\"Done preparing download archive\",\n   \"finished_at\":\"2020-02-18T17:01:57.000Z\",\n   \"updated_at\":\"2020-02-18T17:01:57.000Z\",\n   \"snapshot_id\":\"5f8ace23-19df-4134-bd67-c338142a6097\",\n   \"data_type\":\"database_only\",\n   \"created_at\":\"2020-02-18T17:01:56.000Z\",\n   \"state\":\"completed\",\n   \"archive_id\":\"a6f519aa-a68e-4054-9341-2cfec72ea184\",\n   \"url\":\"https://…\"\n}\n```\n\n----------------------------------------\n\nTITLE: IconValue Type Definitions for Mendix Pluggable Widgets\nDESCRIPTION: Defines the various icon types that can be used in Mendix pluggable widgets, including glyph icons, web image icons, native image icons, and the common IconValue type that encompasses all variations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ninterface GlyphIcon {\n    readonly type: \"glyph\";\n    readonly iconClass: string;\n}\n    \ninterface WebImageIcon {\n    readonly type: \"image\";\n    readonly iconUrl: string;\n}\n\ninterface Icon {\n    readonly type: \"icon\";\n    readonly iconClass: string;\n}\n    \ninterface NativeImageIcon {\n    readonly type: \"image\";\n    readonly iconUrl: Readonly<ImageURISource>;\n}\n    \nexport type WebIcon = GlyphIcon | WebImageIcon | Icon | undefined;\nexport type NativeIcon = GlyphIcon | NativeImageIcon | undefined;\nexport type IconValue = WebIcon | NativeIcon;\n```\n\n----------------------------------------\n\nTITLE: Defining ListReferenceValue and ListReferenceSetValue\nDESCRIPTION: Defines interfaces for handling reference and reference set associations in list items\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_21\n\nLANGUAGE: ts\nCODE:\n```\nexport type ListReferenceValue = ListAssociationValue<ObjectItem> & { type: \"Reference\" };\n\nexport type ListReferenceSetValue = ListAssociationValue<ObjectItem[]> & { type: \"ReferenceSet\" };\n\nexport interface ListAssociationValue<T extends ObjectItem | ObjectItem[]> {\n  get: (item: ObjectItem) => DynamicValue<T>;\n  id: ListAssociationId;\n  filterable: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Connected Architecture Diagram in Markdown\nDESCRIPTION: Shows how to include an image of the connected architecture diagram using Markdown syntax. The image displays the components and communication flow for a connected Mendix for Private Cloud setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/deployment/private-cloud/mx4pc-architecture.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Implementation Options Configuration Table\nDESCRIPTION: Markdown table showing different implementation options for Mendix solutions and their configurations across various parameters like cloud node usage and access levels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/create-solutions/sol-adapt/sol-architecting.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Options | Dedicated App | Cloud Node per Customer | Customer Access to Mendix Portal¹ | Model Access for Customer¹ |\n| --- | --- | --- | --- | --- |\n| ISV builds, no design-time adaptation needed | No | Optional | No | No |\n| ISV builds and adapts for customer as managed service | Yes | Yes | Optional for collaboration with [Feedback] and [Epics] | No |\n| Customized by customer or implementation partner | Yes | Yes | Yes, including access to the customer model | Yes |\n```\n\n----------------------------------------\n\nTITLE: Setting JCIFS DFS Property in Shell Command\nDESCRIPTION: Shell command example showing how to configure the JCIFS library to enable DFS support. This property needs to be set before initializing any JCIFS classes when connecting using server names instead of IP addresses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/access-a-samba-share-from-the-mxcloud.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\njcifs.Config.setProperty(\"jcifs.smb.client.dfs.disabled\",\"false\");\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Constraints in XPath Query\nDESCRIPTION: This snippet illustrates the addition of multiple constraints to retrieve customers named Jansen residing in Rotterdam. It shows how constraints are articulated in a single query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen'][Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Adding APD After Startup Microflow Path\nDESCRIPTION: Microflow path reference that needs to be added to the application's After startup microflow for APD initialization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-three.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nUSE_ME/APDAfterStartup\n```\n\n----------------------------------------\n\nTITLE: Defining PhoneGap CLI Version in config.xml\nDESCRIPTION: Example of specifying the PhoneGap CLI version in the config.xml file. This is used to determine compatibility with installed PhoneGap versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/hybrid-app.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<preference name=\"phonegap-version\" value=\"8.1.1\" />\n```\n\n----------------------------------------\n\nTITLE: Alternative Dutch Postal Code Regular Expression Using Quantifiers\nDESCRIPTION: An alternative way to write the Dutch postal code validation pattern using explicit quantifiers to specify the number of occurrences for each character group.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/regular-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: regex\nCODE:\n```\n[1-9][0-9]{3} ?[A-Za-z]{2}\n```\n\n----------------------------------------\n\nTITLE: Defining Default Styles for Container Component\nDESCRIPTION: Constant defining default styles for the GroupBox container component. This ensures appropriate text colors and sizes for header content, which applies to the icon components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_39\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {},\n    header: {},\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16\n    },\n    content: {}\n};\n```\n\n----------------------------------------\n\nTITLE: Targeting Cloud Foundry Organization and Space\nDESCRIPTION: Command for selecting the appropriate organization and space within Cloud Foundry for application deployment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncf target –o {org_name} -s {space_name}\n```\n\n----------------------------------------\n\nTITLE: Restoring a Database in SQL Server\nDESCRIPTION: This snippet provides a step-by-step guide on how to restore a database using the SQL Server Management Studio. It details actions like selecting the appropriate database instance, specifying backup source and destination, and configuring restore options. No specific code is included as this is primarily an instructional guide.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/restoring-a-sql-server-database.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Creating a Menu Extension for Microflow Creation in C#\nDESCRIPTION: This code snippet demonstrates how to create a menu extension in Mendix Studio Pro using C#. It defines a class `CreateMicroflowsMenu` that adds a menu item to Studio Pro. When clicked, the menu item triggers the creation of microflows using the `CalculationsMicroflowCreator` class, which is injected via constructor dependency injection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing Mendix.StudioPro.ExtensionsAPI.UI.Menu;\nusing System.ComponentModel.Composition;\n\nnamespace MicroflowTutorial;\n\n[Export(typeof(MenuExtension))]\n[method: ImportingConstructor]\nclass CreateMicroflowsMenu(CalculationsMicroflowCreator microflowCreator) : MenuExtension\n{\n    public override IEnumerable<MenuViewModel> GetMenus()\n    {\n        yield return new MenuViewModel(\"Create microflows\", () =>\n            {\n                if (CurrentApp == null)\n                    return;\n\n                microflowCreator.CreateMicroflows(CurrentApp);\n            }\n        );\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: iOS Bundle Folder Structure\nDESCRIPTION: Illustrates the file system structure for iOS bundles after MxBuild.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_13\n\nLANGUAGE: text\nCODE:\n```\n\"- iOS \n    - assets\n        - List of all images namespaced\n        - index.ios.bundle\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Microflow Example in Mendix Workflow\nDESCRIPTION: This XML snippet shows how to include a figure that displays an example of a microflow in the Mendix workflow documentation. It demonstrates the structure for embedding an image with specific attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/microflow-example.png\" alt=\"Microflow Example\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Defining ListExpressionValue Interface in TypeScript\nDESCRIPTION: Defines the ListExpressionValue interface representing an expression or text template property linked to a data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ListExpressionValue<T extends AttributeValue> {\n    get: (item: ObjectItem) => DynamicValue<T>;\n};\n```\n\n----------------------------------------\n\nTITLE: Account Configuration Fields for ATS\nDESCRIPTION: Table showing the field descriptions for creating user and administrator accounts in ATS, including details about user permissions and settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/rg-one-administration.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nField | Description\n--- | ---\nFull Name | The full name of the user.\nName | The name the user logs in with.\nEmail | The email address of the user.\nBlocked | Mark the account as unblocked/blocked.\nActive | Set the account to active/inactive.\nTime Zone | Set the time zone the user works in.\nTester | Adds the tester user role.\nTenant Administrator | Adds the tenant administrator role.\nPassword | The initial password of the user (which should be changed by the user when logging in).\n```\n\n----------------------------------------\n\nTITLE: Styling Navigation Components in Mendix Native Mobile\nDESCRIPTION: JavaScript style object for customizing the bottom bar and progress overlay in Mendix native mobile applications. Includes properties for container styles, labels, icons, and loading indicators.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nexport const navigationStyle = {\n  bottomBar: {\n    container: {\n      // This has all ViewStyle properties.\n    },\n    label: {\n      // This has all TextStyle properties.\n    },\n    selectedLabel: {\n      // This has all TextStyle properties.\n    },\n    icon: {\n      // This has all TextStyle properties.\n    },\n    selectedIcon: {\n      // This has all ViewStyle properties.\n    }\n  },\n  progressOverlay: {\n    background: {\n      // This has all ViewStyle properties.\n    },\n    container: {\n      // This has all ViewStyle properties.\n    },\n    activityIndicator: {\n      // This is the same as the `activity indicator` widget.\n    },\n    text: {\n      // This has all TextStyle properties.\n    }\n  },    \n};\n```\n\n----------------------------------------\n\nTITLE: Configuring 3D Line Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a 3D line chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 9, 8, 5, 1 ],\n  \"y\": [ 1, 2, 4, 8 ],\n  \"z\": [ 11, 8, 15, 3 ],\n  \"mode\": \"lines\",\n  \"type\": \"scatter3d\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: InputReferenceSelector Parameters Table\nDESCRIPTION: Table showing the required input parameters for setting InputReferenceSelector values, including widget name and value to be set\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/input-reference-selector/set-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nValue | String | Yes | The value you want to set.\n```\n\n----------------------------------------\n\nTITLE: Additional Information Alert Markup\nDESCRIPTION: Markup code showing alert notification about sidebar toggle usage restrictions within scroll containers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/layout/sidebar-toggle-button.md#2025-04-21_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n{{% alert color=\"info\" %}}You can only have one sidebar toggle in a scroll container, and the behavior of the sidebar toggle is configured in the [scroll container region](/refguide8/scroll-container/#region) properties.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom CA Secret in OpenShift\nDESCRIPTION: Command to create a generic secret in OpenShift containing a custom CA certificate, needed for deployments using self-signed certificates with the PCLM server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\noc -n <namespace> create secret generic custom-ca-secret --from-file=custom.crt=<path of ca.crt>\n```\n\n----------------------------------------\n\nTITLE: Importing Custom Font Constants in JavaScript\nDESCRIPTION: Example showing how to import and use custom font constants in a Mendix native mobile app's styling file. This enables using custom fonts across the application's text elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nexport const customFontVariables = {\n    \"customFontFamily1\": \"TimesNewRomanPSMT\",\n    \"customFontFamilyBold1\": \"TimesNewRomanPS-BoldMT\"\n};\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Backup Resources After Operation\nDESCRIPTION: Shell commands for cleaning up the resources created for backup or restore operations. The commands delete the pod and its service account after the data transfer operation is complete.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nNAMESPACE={namespace}\n# Delete the Pod and its Service account\nkubectl -n $NAMESPACE delete -f /tmp/mendix-backup-restore.yaml\nrm /tmp/mendix-backup-restore.yaml\n```\n\n----------------------------------------\n\nTITLE: Finding Reference Selector Child Element Using jQuery\nDESCRIPTION: jQuery selector code to locate the select element within a reference selector widget using mx-name attribute. This helps verify if ATS can find the target element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-05-reference-selector.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$( '.mx-name-referenceSelector1 select' )\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Plugin Version Upgrades\nDESCRIPTION: Extensive table listing plugin upgrades, including old versions, new versions, and comments for each plugin.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/hybrid-app.md#2025-04-21_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name                                                        | Old Version          | New Version          | Comments                                                     |\n| ----------------------------------------------------------- | -------------------- | -------------------- | ------------------------------------------------------------ |\n| `com.crosswalk.cookies`                                     | No version specified | No version specified |                                                              |\n| `com.darktalker.cordova.screenshot`                         | 0.1.6                | 0.1.6                |                                                              |\n| `com.telerik.plugins.nativepagetransitions`                | 0.6.5                | 0.6.5                |                                                              |\n| `cordova-build-architecture`                                | 1.0.3                | 1.0.4                |                                                              |\n| `cordova-plugin-actionsheet`                                | 2.3.3                | 2.3.3                |                                                              |\n| `cordova-plugin-android-permissions`                        | 0.10.0               | 0.11.0               |                                                              |\n| `cordova-android-support-gradle-release`                    | 1.2.0                | Removed              |                                                              |\n| `cordova-plugin-app-version`                                | 0.1.8                | 0.1.9                |                                                              |\n| `cordova-plugin-battery-status`                             | 1.1.2                | 2.0.2                |                                                              |\n| `cordova-plugin-calendar`                                   | 4.5.5                | 5.1.2                |                                                              |\n| `cordova-plugin-camera`                                     | 2.4.0                | 4.0.3                |                                                              |\n| `cordova-plugin-contacts`                                   | 1.4.2                | 3.0.2                |                                                              |\n| `cordova-plugin-cookieemperor`                              | No version specified | No version specified |                                                              |\n| `cordova-plugin-crosswalk-webview`                          | 2.3.0                | 2.4.0                |                                                              |\n| `cordova-plugin-device`                                     | 1.1.2                | 2.0.2                |                                                              |\n| `cordova-plugin-device-motion`                              | 1.2.1                | 2.0.1                |                                                              |\n| `cordova-plugin-device-orientation`                         | 1.0.3                | 2.0.1                |                                                              |\n| `cordova-plugin-dialogs`                                    | 1.2.1                | 2.0.1                |                                                              |\n| `cordova-plugin-file`                                       | 4.2.0                | 6.0.1                |                                                              |\n| `cordova-plugin-file-opener2`                               | 2.0.19               | 2.0.19               |                                                              |\n| `cordova-plugin-file-transfer` | 1.5.1                | 1.7.1                |                                                              |\n| `cordova-plugin-geolocation`                                | 2.2.0                | 4.0.1              |                                                              |\n| `cordova-plugin-globalization`                              | 1.0.3                | 1.11.0               |                                                              |\n| `cordova-plugin-inappbrowser`                               | 3.0.0                | 3.0.0                |                                                              |\n| `cordova-plugin-media`                                      | 2.3.0                | 5.0.2                |                                                              |\n| `cordova-plugin-media-capture`                              | 1.4.2                | 3.0.2                |                                                              |\n| `cordova-plugin-network-information`                        | 1.2.1                | 2.0.1                |                                                              |\n| `cordova-plugin-secure-storage`                             | 2.4.0                | 2.6.8                |                                                              |\n| `cordova-plugin-spinner`                                    | 1.1.0                | 1.1.0                |                                                              |\n| `cordova-plugin-splashscreen`                               | 4.1.0                | 5.0.2                |                                                              |\n| `cordova-plugin-statusbar`                                  | 2.3.0                | 2.4.2                |                                                              |\n| `cordova-plugin-vibration`                                  | 2.1.1                | 3.1.0                |                                                              |\n| `cordova-plugin-x-socialsharing`                            | 5.0.11               | 5.4.0                |                                                              |\n| `cordova-plugin-zip`                                        | 3.1.0                | 3.1.0                |                                                              |\n| `cordova-plugin-whitelist`                                  | 1.2.2                | 1.3.3                |                                                              |\n| `cordova-plugin-wkwebview-engine-mx`                        | 1.1.0                | 1.0.1-mx.1.2.0       | Old version number was incorrect                             |\n| `@mendix/cordova-sqlite-storage`                            | No version specified | 2.0.4-mx.1.1.0       | Renamed from `cordova-sqlite-storage-pgb`                    |\n| `@mendix/phonegap-plugin-push`                              | 1.5.3                | 1.11.1-mx.1.0.0      | Renamed from `phonegap-plugin-push`                          |\n| `@mendix/uk.co.workingedge.phonegap.plugin.launchnavigator` | 2.9.11               | 4.2.2-mx.1.0.0       | Renamed from `uk.co.workingedge.phonegap.plugin.launchnavigator` |\n```\n\n----------------------------------------\n\nTITLE: Counting Objects with OData $count\nDESCRIPTION: Demonstrates how to count the number of objects using the $count query option. This query returns the total count of objects for the specified resource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\n/odata/myservice/myresource/$count\n```\n\n----------------------------------------\n\nTITLE: Defining Style Property for Document Template Cells in Markdown\nDESCRIPTION: This snippet shows how to reference the Style property documentation for cells in Mendix document templates. It uses a Markdown link to point to the detailed style guide.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/table-document-template/row-document-template/cell-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nFor details, see [Style](/refguide8/style/).\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders by Price in SQL\nDESCRIPTION: Shows how to use the less than operator to filter orders with a price less than 5.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Number, Price FROM Sales.Order WHERE Price < 5\n```\n\n----------------------------------------\n\nTITLE: Displaying Dangling Reference Error Message in Mendix Synchronization\nDESCRIPTION: This snippet shows an example error message that occurs when synchronizing an object with dangling references. It explains the nature of the error and suggests a solution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/building-efficient-mobile-apps/offlinefirst-data/synchronization.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nSynchronizing an object of type City with GUID {123} has failed due to a modelling error. The object has a reference to other objects (City_Country) that have not been synchronized to the runtime yet. This breaks referential integrity of the object because it references a non-existing object in the runtime database. Please make sure that you synchronize the referenced object together with the City or before synchronizing the City.\n```\n\n----------------------------------------\n\nTITLE: Adding a Label Property Group in XML\nDESCRIPTION: This XML snippet adds a property group named \"Label\" to the widget's XML definition. This allows users to configure the label of the input element directly within the Mendix Modeler's widget properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Label\">\n    <systemProperty key=\"Label\" />\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Initialization in iOS Developer AppDelegate\nDESCRIPTION: This snippet demonstrates where to add custom initialization code for iOS developer apps. Due to a breaking change in version 6.1.6, custom initialization must be duplicated in the developer AppDelegate file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-9-parent/nt-6-rn.md#2025-04-21_snippet_1\n\nLANGUAGE: Objective-C\nCODE:\n```\n// Dev/AppDelegate.m\n\n// Add your custom initialization code here\n// This is required for testing with custom developer apps\n// from version 6.1.6 and higher\n```\n\n----------------------------------------\n\nTITLE: Library Import Update for Masked View\nDESCRIPTION: Breaking change in library import statement, replacing @react-native-community/masked-view with @react-native-masked-view/masked-view\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-10-parent/nt-10-rn.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n@react-native-masked-view/masked-view\n```\n\n----------------------------------------\n\nTITLE: VNC-Enabled Browsers Configuration\nDESCRIPTION: JSON configuration for browsers with VNC support enabling live view functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenoid-hub.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n       \"firefox\": {\n               \"default\": \"58.0\",\n               \"versions\": {\n                       \"58.0\": {\n                               \"image\": \"selenoid/vnc:firefox_58.0\",\n                               \"port\": \"4444\",\n                               \"path\": \"/wd/hub\",\n                               \"tmpfs\": {\"/tmp\":\"size=512m\"}\n                       }\n               }\n       },\n       \"chrome\": {\n               \"default\": \"65.0\",\n               \"versions\": {\n                       \"65.0\": {\n                               \"image\": \"selenoid/vnc:chrome_65.0\",\n                               \"port\": \"4444\",\n                               \"tmpfs\": {\"/tmp\":\"size=512m\"},\n                               \"shmSize\" : 1073741824\n                       }\n               }\n       }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HttpResponse Object for Not Found Error in Mendix Microflow\nDESCRIPTION: This code creates an HttpResponse object in a Mendix microflow to handle cases where no Order is found for a given OrderID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/publish-rest-service.md#2025-04-21_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<member>\\n    <name>StatusCode</name>\\n    <value>404</value>\\n</member>\\n<member>\\n    <name>Content</name>\\n    <value>'[\"Error\": \"No Order available for ID:'+$OrderID+'\"]'</value>\\n</member>\\n<member>\\n    <name>HttpVersion</name>\\n    <value>'HTTP/1.1'</value>\\n</member>\n```\n\n----------------------------------------\n\nTITLE: Implementing XSUAA SSO Login Button\nDESCRIPTION: HTML code for adding the standard XSUAA SSO login button to the application login page. The button includes a logo and custom text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-xsuaa-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a id=\"ssoButton\" href=\"/xsauaalogin/\" class=\"btn btn-default btn-lg\">\n    <img src=\"logo.png\" />\n    <span class=\"loginpage-signin\">Sign in using XSUAA</span>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Frontend Documentation\nDESCRIPTION: YAML frontmatter configuration for the frontend documentation section, specifying the title, URL, weight, and listing preferences.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Front End\"\nurl: /howto8/front-end/\nweight: 30\nno_list: false\ndescription_list: true \n---\n```\n\n----------------------------------------\n\nTITLE: Working with Mendix Data in Excel\nDESCRIPTION: This section describes how to connect Excel for Office 365 to a published OData service from a Mendix application. It involves retrieving the OData service URL from Studio Pro, entering it into Excel's 'Get Data' feature, and loading the desired entity data into an Excel sheet.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Replace First Occurrence Using Regex in Java\nDESCRIPTION: Shows usage of replaceFirst() function that replaces only the first match of a regular expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_12\n\nLANGUAGE: java\nCODE:\n```\nreplaceFirst('this is a string with 75 some numbers 234 thrown in', '([0-9])', 'NUMBER')\n```\n\n----------------------------------------\n\nTITLE: Implementing Cross-Platform NFC Tag Reading in Mendix JavaScript Action\nDESCRIPTION: A comprehensive NFC tag reading function that handles platform-specific scenarios, checks device NFC capabilities, manages session lifecycle, and provides error handling for Android and iOS\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function ReadNFCTag() {\n    if (!NativeModules.NfcManager) {\n        throw new Error(\"The NfcManager module is not available in your app.\");\n    }\n    if (Platform.OS === \"android\") {\n        const enabled = await NfcManager.isEnabled();\n        if (!enabled) {\n            throw new Error(\"NFC is not enabled\");\n        }\n    }\n\n    return new Promise(async(resolve, reject) => {\n        let success = false;\n        await NfcManager.start({\n            onSessionClosedIOS: () => {\n                if (!success) {\n                    reject(new Error(\"NFC session closed\"));\n                }\n            }\n        });\n        if (Platform.OS === \"android\") {\n            BackHandler.addEventListener(\"hardwareBackPress\", async () => {\n                await NfcManager.unregisterTagEvent();\n                await NfcManager.stop();\n                return reject(new Error(\"NFC was canceled by the user\"));\n            });\n            NfcManager.onStateChanged(\n                async event => {\n                    if (event.state === \"off\" || event.state === \"turning_off\") {\n                        await NfcManager.unregisterTagEvent();\n                        await NfcManager.stop();\n                        return reject(new Error(\"NFC was disabled by the user\"));\n                    }\n                }\n            )\n        }\n        NfcManager.registerTagEvent(async tag => {\n            success = true;\n            await NfcManager.unregisterTagEvent();\n            await NfcManager.stop();\n            const text = Ndef.text.decodePayload(tag.ndefMessage[0].payload);\n            resolve(text);\n        }, \"Read NFC\");\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: String Concatenation with a Single Expression in Mendix (Java)\nDESCRIPTION: This code snippet demonstrates string concatenation using a single, potentially complex expression. It checks for empty or blank values in the ContactPerson entity's attributes (Firstname, Middlename, Lastname, Suffix) and adds them to the resulting string with a space in between, then trims any leading or trailing spaces. The `getCaption` function is used to retrieve the caption of the Suffix attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/string-concatenation.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\"trim(\n( if $ContactPerson/Firstname != empty and $ContactPerson/Firstname != ''\nthen $ContactPerson/Firstname + ' ' else '' ) +\n( if  $ContactPerson/Middlename != empty  and $ContactPerson/Middlename != ''\nthen  $ContactPerson/Middlename + ' ' else  '' ) +\n( if  $ContactPerson/Lastname != empty  and $ContactPerson/Lastname != ''\nthen  $ContactPerson/Lastname + ' ' else  '' ) +\n( if  $ContactPerson/Suffix !=  empty  \nthen  getCaption( $ContactPerson/Suffix )\nelse '')\n)\"\n```\n\n----------------------------------------\n\nTITLE: Calculating Absolute Values in Mendix\nDESCRIPTION: Returns the absolute (non-negative) value of a number. For positive inputs, returns the same value; for negative inputs, returns the positive equivalent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nabs(-5)\n```\n\nLANGUAGE: java\nCODE:\n```\nabs(5)\n```\n\n----------------------------------------\n\nTITLE: Styling Animation Widget Structure in XML\nDESCRIPTION: XML structure for styling animation widget container that can animate contained content with various effects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_30\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t{content}\n</container>\n```\n\n----------------------------------------\n\nTITLE: Using Colored Icon in Markdown Sentence\nDESCRIPTION: This example demonstrates how to use a colored icon within a Markdown sentence, specifically for a delete action with a red alert icon.\nSOURCE: https://github.com/mendix/docs/blob/development/static/mx-icons/_readme.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nClick **Delete** ({{% icon name=\"alert-circle\" color=\"red\" %}}).\n```\n\n----------------------------------------\n\nTITLE: Defining OQL OR Operator\nDESCRIPTION: Describes the OR operator, which returns true if either or both of the conditions in its surrounding expressions are true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n| `OR` | Returns true if one or both expressions around this operator return true.  | `price = 9.80 OR price = 9.70` returns true if price is 9.80, false if price is 9.60. |\n```\n\n----------------------------------------\n\nTITLE: DateTime Equality Comparison in Java\nDESCRIPTION: Demonstrates a datetime equality comparison in Java that returns a Boolean true when comparing two identical datetime values from 2007.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_12\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007) = dateTime(2007)\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section Link\nDESCRIPTION: This snippet links to the design properties section of the container documentation in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/structure-widgets/container.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Get Checkbox Value Action in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Get Checkbox Value' action using a markdown table. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-input/rg-one-get-checkbox-value.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n--- | --- | ---\nValue | Boolean | Value of the checkbox. True if checked, otherwise false.\n```\n\n----------------------------------------\n\nTITLE: Displaying Standalone Architecture Diagram in Markdown\nDESCRIPTION: Shows how to include an image of the standalone architecture diagram using Markdown syntax. The image illustrates the components and communication flow for a standalone Mendix for Private Cloud setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/deployment/private-cloud/mx4pc-standalone-architecture.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Run Job SOAP Response Example\nDESCRIPTION: XML structure of the response from the RunJob service. The response includes information about whether the job started successfully, any error messages, and the generated job ID for tracking.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Body>\n    <tns:RunJobResponse>\n      <RunJob>\n        <Started>false</Started>\n        <ErrorMessage>exampleString</ErrorMessage>\n        <JobID>exampleString</JobID>\n      </RunJob>\n    </tns:RunJobResponse>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Markdown alert block for Report Date Parameter\nDESCRIPTION: Markdown code block showing an alert message about adding fields to report date parameter widget\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/report-date-parameter/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nYou can add more fields to a report date parameter widget to make it easier for an end-user to select a date range. See [Additional Report Date Parameter Fields](#additional-fields), below, for more information.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Assert CKEditor Value Action in Markdown\nDESCRIPTION: This snippet defines a markdown table that lists the input parameters required for the 'Assert CKEditor Value' action. It includes the parameter names, datatypes, whether they are required, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/ckeditor/rg-one-assert-ckeditor-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nValue | String | Yes | The value you want to assert.\n```\n\n----------------------------------------\n\nTITLE: MarkDown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter defining the page title and URL for the documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Finding the Action You Need\"\nurl: /appstore/partner-solutions/ats/bp-two-finding-the-action-you-need/\n---\n```\n\n----------------------------------------\n\nTITLE: ATS Run Configuration Settings Table\nDESCRIPTION: Markdown table describing the configuration fields for running ATS tests including environment and Selenium hub settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-getting-started.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Description |\n| --- | --- |\n| **Environment** | Select the app you want to test. |\n| **Selenium Hub** | Select the Selenium hub you want to use to execute the test case. |\n| **Browser** | Select the browser that the Selenium hub uses to execute the test case. Please note that these are the supported browsers. |\n```\n\n----------------------------------------\n\nTITLE: Markdown Inline Code Example\nDESCRIPTION: This Markdown snippet shows how to use backticks (`) to display inline code within a sentence. Double backticks are used when you need to render a backtick within the code snippet, demonstrating how to escape special characters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\nFor inline code that is integrated into a sentence, use backticks (`` ` ``) to enclose the code: `cacheBust`. As demonstrated here, you can use double backticks if you need to render a backtick within a code snippet.\n```\n\n----------------------------------------\n\nTITLE: Setting Up Model Search and Query\nDESCRIPTION: Creating nanoflows for searching Teamcenter models and handling custom BOMLine queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/3d-viewer-for-teamcenter.md#2025-04-21_snippet_2\n\nLANGUAGE: Nanoflow\nCODE:\n```\ncreateSearchCriteriaObject\nSearchTC\nShowBOMLineQueryPopUp\nGetModelDocumentByTCItemRevision\n```\n\n----------------------------------------\n\nTITLE: Main Line svn:ignore Property Value\nDESCRIPTION: Example of the svn:ignore property value from the main line in a merge conflict scenario.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nmodeler-merge-marker\n.mendix-cache\nResolveIgnoreConflict.mpr.lock\n*.launch\nResolveIgnoreConflict.mpr.bak\nnode_modules\n```\n\n----------------------------------------\n\nTITLE: Configuring Object List Property in Mendix Pluggable Widget\nDESCRIPTION: Example of defining an object list property with boolean and action configurations in a Mendix widget XML.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_19\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myObject\" type=\"object\" isList=\"true\">\n\t<caption>My object list</caption>\n\t<description/>\n\t<properties>\n\t\t<propertyGroup caption=\"Object list group\">\n\t\t\t<property key=\"myObjectBool\" type=\"boolean\" defaultValue=\"true\">\n\t\t\t\t<caption>My boolean</caption>\n\t\t\t\t<description>My boolean setting</description>\n\t\t\t</property>\n\t\t\t<property key=\"myObjectAction\" type=\"action\">\n\t\t\t\t<caption>My action</caption>\n\t\t\t\t<description>My action setting</description>\n\t\t\t</property>\n\t\t</propertyGroup>\n\t</properties>\n</property>\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Document Templates Documentation\nDESCRIPTION: Defines metadata for the documentation page, including title, URL, weight, and aliases for redirection\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/document-templates/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: \"Document Templates\"\nurl: /refguide/document-templates/\nweight: 90\naliases:\n    - /refguide/Document+Templates.html\n    - /refguide/Document+Templates\n```\n\n----------------------------------------\n\nTITLE: Styling Activity Indicator Widget in Mendix Native Mobile\nDESCRIPTION: JavaScript style object for customizing the circular loading indicator widget in Mendix native applications. Includes container styling and properties for color and size customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_activityindicator_ActivityIndicator = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  indicator: {\n    color: 'gray', // This is the color of the indicator.\n    size: 'large' // Possible values for indicator are `large` and `small`.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Checking PostgreSQL Logs with kubectl in Bash\nDESCRIPTION: This kubectl command retrieves the logs from the PostgreSQL pod. It uses `kubectl get pods` to find the pod name based on the label `app=postgres` and then pipes the name to `kubectl logs` to display the logs. The output helps in verifying the database installation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n\"kubectl logs $(kubectl get pods -lapp=postgres -o name)\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter block defining the page title, URL, and weight properties for the documentation page\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/atlas-ui/create-company-atlas-ui-resources.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\\ntitle: \"Create Company Atlas UI Resources\"\\nurl: /howto8/front-end/create-company-atlas-ui-resources/\\nweight: 30\\n---\n```\n\n----------------------------------------\n\nTITLE: Database Does Not Exist Error When Starting a Mendix App\nDESCRIPTION: Error message shown when attempting to start a Mendix app via PowerShell before the app database has been created through manual deployment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_16\n\nLANGUAGE: text\nCODE:\n```\nStart-MxApp : Unable to start the app. Reason: The database does not exist. \nAt line:1 char:1 \n+ Start-MxApp MyFirstApp -synchronizedatabase \n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n+ CategoryInfo : InvalidOperation: (MyFirstApp:String) [Start-MxApp], Exception \n+ FullyQualifiedErrorId : AppProcessError,Mendix.Service.Commands.StartAppCommand\n```\n\n----------------------------------------\n\nTITLE: Including Page Break Property Snippet in Markdown\nDESCRIPTION: This code references a snippet file to include the standard name property documentation for the page break element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/page-break-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/name-property.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Binding Vault Role to Kubernetes Service\nDESCRIPTION: Command to bind Vault role to Kubernetes service with specific policies\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nvault write auth/kubernetes/role/<{env-role}> \\\n  bound_service_account_names=<{env-serviceaccount}> \\\n  bound_service_account_namespaces=<{env-namespace}> \\\n  policies=<{env-policy}>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Application Logs in Kubernetes for Mendix Private Cloud\nDESCRIPTION: Command to view logs for a Mendix application running in a Kubernetes pod. This retrieves logs specifically from the Mendix container within the pod, which is useful for debugging applications deployed to Private Cloud environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs <pod-name> -c mendix\n```\n\n----------------------------------------\n\nTITLE: Defining Bar Chart Styles in JavaScript\nDESCRIPTION: This code snippet defines a JavaScript object for styling the Bar Chart widget in Mendix. It includes properties for the container, error message, chart, grid, axes, legend, and bars, each of which can be customized with various style options. Required dependencies include React Native's ViewStyle and TextStyle properties for proper styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_barchart_BarChart = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  errorMessage: {\n    // This has all TextStyle properties. \n  },\n  chart: {\n    // This has all ViewStyle properties. \n  },\n  grid: {\n    backgroundcolor: null, // Applies a color to the grid background (string).\n    dashArray: null, //  Applies a pattern of dashes and gaps to the grid lines (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    lineColor: null, // Applies a color to the grid lines (string).\n    width: null, // Applies a width to the grid lines (number).\n    padding: null, // Applies padding to all sides of the grid (number). This makes axis value labels visible.\n    paddingBottom: null, // Applies padding to the bottom side of the grid (number). This makes axis value labels visible.\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the grid (number). This makes axis value labels visible.\n    paddingLeft: null, // Applies padding to the left side of the grid (number). This makes axis value labels visible.\n    paddingRight: null, // Applies padding to the right side of the grid (number). This makes axis value labels visible.\n    paddingTop: null, // Applies padding to the top side of the grid (number). This makes axis value labels visible.\n    paddingVertical: null, // Applies padding to the vertical sides of the grid (number). This makes axis value labels visible.\n  },\n  xAxis: {\n    color: null, // Applies a color to the grid background (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the axis line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    fontFamily: null, // Applies a font type to the axis value labels (string).\n    fontSize: null, // Applies a size to the axis value labels (number).\n    fontStyle: null, // Applies a font style to the axis value labels (\"normal\" or \"italic\").\n    fontWeight: null, // Applies a font weight to the axis value labels (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n    lineColor: null, // Applies a color to the axis line (string).\n    width: null, // Applies a width to the axis line (number).\n    label: {\n      // All TextStyle properties.\n      relativePositionGrid: null, // Positions the axis label at the **bottom** or **right** side of the grid.\n    }\n  },\n  yAxis: {\n    // All `xAxis` element styles.\n  },\n  legend: {\n    container: {\n      // All ViewStyle properties.\n    },\n    item: {\n      // All ViewStyle properties.\n    },\n    indicator: {\n      // All ViewStyle properties.\n    },\n    label: {\n      // All TextStyle properties.\n    }\n  },\n  domain: {\n    padding: {\n      x: null, // Applies a number of pixels of padding to add the beginning and end of the X axis domain (number).\n      y: null, // Applies a number of pixels of padding to add the beginning and end of the Y axis domain (number).\n    },\n  },\n  bars: {\n    barColorPalette: null, // Provides colors to bars that do not have a bar color configured (string with list of colors separated by ';', one color for each series).\n    barsoffset: null, // Determines the number of pixels each bar in a group should be offset from its original position on the Y axis (number). This is only applicable when presentation mode is **Grouped**.\n    customBarStyles: {\n      any_custom_bar_style_name: {\n        bar: {\n          ending: null, // Specifies a radius to apply to each bar.\n          barcolor: null, // Applies a color to the bar (string). If bars are configured to have labels, the labels will be the same color as the bar.\n          width: null, // Applies a width to the bar (number).\n        },\n        label: {\n          fontFamily: null, // Applies a font type to the bar label (string).\n          fontSize: null, // Applies a size to the bar label (number).\n          fontStyle: null, // Applies a font style to the bar label (**normal** or **italic**).\n          fontWeight: null, // Applies a font weight to the bar label (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n        }\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint for Path to User in Mendix\nDESCRIPTION: An XPath constraint example showing how to limit access to orders so that customers can only view their own orders. This constraint uses a path to a User entity (or specialization) that is associated with the current object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\n[Module.Order_Customer = '[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: HTTP Method and URL for Job Status API\nDESCRIPTION: Defines the HTTP method and URL format for checking the status of a job in Mendix Cloud, used to monitor the progress of previously initiated operations like package uploads.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: GET\nURL: https://deploy.mendix.com/api/v2/apps/<AppId>/jobs/<JobId>\n```\n\n----------------------------------------\n\nTITLE: Displaying Alert Message for Mobile Limitations\nDESCRIPTION: Shows a warning alert message using Markdown syntax to explain the limitations of this action in offline, native, or hybrid mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/show-home-page.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nThis action is ignored and does not work when a microflow is called from an offline, native, or hybrid app. For more information, see the [Microflows](/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/best-practices/#microflows) section of *Offline-First Data*.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Link in Markdown\nDESCRIPTION: Markdown snippet inclusion for common section link using Hugo shortcode syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/page-templates.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Introducing queue property in MicroflowCall Element\nDESCRIPTION: This snippet addresses the introduction of the `queue` property within the MicroflowCall element, enhancing its functionality by allowing for queuing of microflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.16.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* We introduced the `queue` property.\n```\n\n----------------------------------------\n\nTITLE: Updated Link Button HTML Structure\nDESCRIPTION: New DOM structure for link buttons showing more consistent markup with other button types\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"mx-link mx-name-actionButton1\">\n\t<span class=\"glyphicon glyphicon-euro\"></span>\n\tLink button\n</a>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Mendix Branch Information - JSON Response Example\nDESCRIPTION: This example shows the JSON structure returned by the Mendix Repository API when retrieving branch information, including the branch name, latest commit details, author information, and related stories.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"trunk\",\n  \"latestCommit\": {\n    \"id\": \"42\",\n    \"author\": {\n      \"name\": \"john.doe@example.com\",\n      \"email\": \"john.doe@example.com\"\n    },\n    \"date\": \"2021-05-31T15:00:00.000Z\",\n    \"message\": \"My commit message\",\n    \"mendixVersion\": \"8.18.5.18651\",\n    \"relatedStories\": [{ \"id\": \"1234567\" }, { \"id\": \"2345678\" }]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting the Preserve Host Header in IIS - Batch\nDESCRIPTION: This batch command configures IIS to preserve the original host header from client requests for correct application URL handling in web services. It allows the application to correctly identify its root URL during operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\ncd %windir%\\system32\\inetsrv\nappcmd.exe set config -section:system.webServer/proxy /preserveHostHeader:\"True\" /commit:apphost\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Set Checkbox Value Function in Markdown\nDESCRIPTION: A markdown table listing the input parameters for the Set Checkbox Value function, including their names, datatypes, requirements, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-input/rg-one-set-checkbox-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget\nValue | Boolean | yes | The value you want to set (un-/checked)\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Implementing Editor Preview Component\nDESCRIPTION: Preview component implementation for Studio Pro's preview mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nexport class preview extends Component<TextBoxPreviewProps> {\n\n    render(): ReactNode {\n        return <TextInput value={this.props.textAttribute} />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Database Connection Pool Settings\nDESCRIPTION: Core configuration settings for database connection pooling that control the number of active and idle connections\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nConnectionPoolingMaxActive=50\nConnectionPoolingMaxIdle=50\nConnectionPoolingMinIdle=0\n```\n\n----------------------------------------\n\nTITLE: Using Long Type Values with Date Functions in Java\nDESCRIPTION: Example of passing a Long type value to the addSeconds function. This demonstrates handling large integer values when manipulating dates, specifically adding seconds beyond the Integer.MAX_VALUE.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\naddSeconds(dateTime(1970, 1, 1, 0, 0, 0), (long)(2147483647 + 100))\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Tue Jan 19 04:15:47 CET 2038\"\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix Operator with CLI\nDESCRIPTION: Command for installing and configuring the Mendix operator in a namespace using the mxpc-cli tool. It requires the namespace ID and secret from the namespace manifest.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/private-cloud-deploy-api.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./mxpc-cli installer -n new-operator -i {namespaceID} -s {secret}\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting Push Notification Configuration Table\nDESCRIPTION: A markdown table detailing common push notification issues, their causes, and recommended solutions for Mendix mobile applications\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/notif-send-test.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Issue | Cause | Solution |\n|-----|----|-----|\n| Sending a message causes a **SenderId mismatch** error or **403: Forbidden**. | Your native mobile app registered the device within your Mendix applications, but not with Firebase. | Follow the [Build Native App](/refguide/mobile/using-mobile-capabilities/push-notifications/notif-implement-native/#build-native-app) section, and make sure you add the *google-services.json* file. |\n```\n\n----------------------------------------\n\nTITLE: Java Action Creation and Integration\nDESCRIPTION: Method for creating a microflow with a Java action call. Demonstrates how to create and configure Java action activities within a transaction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_11\n\nLANGUAGE: csharp\nCODE:\n```\npublic void CreateMicroflowAndJavaAction(IModule module, IModel currentApp)\n{\n    using var transaction = currentApp.StartTransaction(\"Create microflows\");\n\n    var microflow = microflowService.CreateMicroflow(currentApp, module, \"Microflow\");\n\n    var javaActionActivity = currentApp.Create<IActionActivity>();\n    var javaCallAction = currentApp.Create<IJavaActionCallAction>();\n    var javaAction = currentApp.Create<IJavaAction>();\n    javaAction.Name = \"java_action\";\n\n    // must add Java action file to module before using its qualified name\n    module.AddDocument(javaAction);\n\n    javaCallAction.JavaAction = javaAction.QualifiedName;\n    javaActionActivity.Action = javaCallAction;\n\n    microflowService.TryInsertAfterStart(microflow, javaActionActivity);\n\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Specific App\nDESCRIPTION: API request to retrieve details of a specific app by its AppId. This endpoint returns information about a single app that the user has access to.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc\nHost: deploy.mendix.com\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey: 26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Validating Mendix Input Object for Audio Files\nDESCRIPTION: This code snippet validates input parameters for audio files by checking if the audioFile parameter inherits from System.FileDocument and contains valid content. It also verifies if the filename has an appropriate extension such as mp3, wav, or ogg. These checks ensure that the input is correctly formatted and meets the function's requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nasync function PlayAudio(audioFile) {\n    if (!audioFile) {\n        throw new Error(\"The 'Audio file' parameter can not be empty\");\n    }\n    if (!audioFile.isA(\"System.FileDocument\") && !audioFile.inheritsFrom(\"System.FileDocument\")) {\n        throw new Error(\"The 'Audio file' parameter should inherit from System.FileDocument\");\n    }\n    if (!audioFile.get(\"HasContents\")) {\n        throw new Error(\"The 'Audio file' parameter does not have any content\");\n    }\n    const allowedExtensions = [\"mp3\", \"wav\", \"ogg\"]\n    const fileName = audioFile.get(\"Name\");\n    const dotIndex = fileName.lastIndexOf(\".\");\n    const extension = fileName.substring(dotIndex + 1).toLowerCase();\n    if (dotIndex === -1 || allowedExtensions.indexOf(extension) === -1) {\n        throw new Error(\"The 'Audio file' parameter only supports files with extension .mp3, .wav or .ogg\");\n    }\n    /* implementation */\n}\n```\n\n----------------------------------------\n\nTITLE: Setting MIME Type for Images in Mendix REST Service\nDESCRIPTION: Code snippet showing how to embed a PDF from a REST endpoint using the HTML/JavaScript Snippet widget in Mendix. The embed tag specifies the source URL pointing to the REST endpoint and sets the display dimensions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/rest-binary.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<embed src=\"http://localhost:8080/rest/cmsapi/v1/myfile/1\" width=\"400px\" height=\"400px\">\n```\n\n----------------------------------------\n\nTITLE: Calculating Minutes Between Dates in Java\nDESCRIPTION: Example of using minutesBetween function to calculate the difference between two dates in minutes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nminutesBetween(dateTime(2007, 1, 1, 1, 2, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Registered This Week in Java\nDESCRIPTION: This XPath query returns only customers who have registered this week by using both BeginOfCurrentWeek and EndOfCurrentWeek system variables.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[DateRegistered >= '[%BeginOfCurrentWeek%]' and DateRegistered < '[%EndOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Creating a Picture Entity in Mendix Domain Model\nDESCRIPTION: Demonstrates how to create a new entity in the Mendix domain model with inherited properties from System entities. The entity will store images with title and description attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/responsive-web-app.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Domain Model\nCODE:\n```\nEntity: Picture\nGeneralization: System.Image\nAttributes:\n- Title (String)\n- Description (String, Unlimited Length)\n```\n\n----------------------------------------\n\nTITLE: Adding Font Variations to FOP Configuration (XML)\nDESCRIPTION: This XML snippet expands on the previous example by showing how to add bold, italic, and bold-italic variations of a custom font to the fop.xconf file. Each variation is linked to its respective font file and style/weight combination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/style.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<font kerning=\"yes\" embed-url=\"mycustomfontinbold.ttf\">\n   <font-triplet name=\"myfont\" style=\"normal\" weight=\"bold\"/>\n</font>\n\n<font kerning=\"yes\" embed-url=\"mycustomfontinitalic.ttf\">\n   <font-triplet name=\"myfont\" style=\"italic\" weight=\"normal\"/>\n</font>\n\n<font kerning=\"yes\" embed-url=\"mycustomfontinboldanditalic.ttf\">\n   <font-triplet name=\"myfont\" style=\"italic\" weight=\"bold\"/>\n</font>\n```\n\n----------------------------------------\n\nTITLE: Styling Action Button in Mendix Native Mobile\nDESCRIPTION: Defines styles for the action button widget, including container, caption, icon, and their disabled states. It includes properties for customizing the appearance of the button and its behavior when pressed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ActionButton = {\n  container: {\n    // All ViewStyle properties\n    rippleColor: 'rgba(0, 0, 0, 0.2)', // This is the color of the ripple on Android, and will be applied only when the container has an on click action set, otherwise it will be ignored.\n    underlayColor: null, // This is the color while pressing the container on iOS, and will be applied only when the container has an on click action set, otherwise it will be ignored and defaulted to opacity only.\n  },\n  containerDisabled: {\n    // Same properties as `container`. Overrides `container` styles if the button has on click action set and it cannot be executed or is set with `Disable during action`.\n  },\n\n  caption: {\n    // This has all TextStyle properties.\n  },\n  captionDisabled: {\n    // Same properties as `caption`. Overrides `caption` styles if the button has on click action set and it cannot be executed or is set with `Disable during action`.\n  },\n  icon: {\n    // This has all ViewStyle properties.\n    size: 12, // This is the size of the button icon.\n    color: null, // This is the color of the button icon.\n  },\n  iconDisabled: {\n    // Same properties as `icon`. Overrides `icon` styles if the button has on click action set and it cannot be executed or is set with `Disable during action`.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Advanced Filtering with Logical Operators in Mendix\nDESCRIPTION: Complex filtering example using 'and' and 'or' operators to combine multiple conditions. This allows for sophisticated filtering logic including attribute and association conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nimport { attribute, association, literal, startsWith, equals, notEquals, greaterThan, and, or } from \"mendix/filters/builders\";\n\n// in the widget code\nif (/* check that all properties are filterable */) {\n    const filterCond = or(\n        and(\n            startsWith(attribute(this.props.myAttributeString.id), literal(\"B\")),\n            equals(attribute(this.props.myAttributeBoolean.id), literal(true))\n        ),\n        and(\n            greaterThan(attribute(this.props.myAttributeNumber.id), literal(10)),\n            notEquals(association(this.props.myAssociationReference.id), empty()),\n            equals(association(this.props.myAssociationReferenceSet.id), empty())\n        )\n    );\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Some attribute is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Object Result in Operation\nDESCRIPTION: Schema for an operation result when a microflow returns an object. It uses a reference to a specific definition name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{ \\\"$ref\\\": \\\"#/definitions/#definition_name#\\\"}\n```\n\n----------------------------------------\n\nTITLE: Initial Firefox Driver Setup in TestNG\nDESCRIPTION: Basic WebDriver initialization for Firefox browser in TestNG's @BeforeTest method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n@BeforeTest\npublic void beforeTest() {\n\tdriver = new FirefoxDriver();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating SOAP Request XML in SoapUI\nDESCRIPTION: This XML snippet represents a SOAP request used to create a customer. It includes the necessary envelope, header, and body elements with sample customer data like name, address, city, and zip code. This request is sent to the `CustomerWebServiceSoap` service to create a new customer entry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/testing-web-services-using-soapui.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n\"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:exam=\\\"http://www.example.com/\\\">\\n   <soapenv:Header/>\\n   <soapenv:Body>\\n      <exam:CreateCustomer>\\n         <Name>Donald A. Hylton</Name>\\n         <Address>784 Better Street</Address>\\n         <City>Kansas City</City>\\n         <ZipCode>KS 66102</ZipCode>\\n      </exam:CreateCustomer>\\n   </soapenv:Body>\\n</soapenv:Envelope>\"\n```\n\n----------------------------------------\n\nTITLE: Importing Required React Components in TextBox - TypeScript\nDESCRIPTION: This code snippet adds necessary imports to the TextBox component, including React components and custom components such as Alert. It ensures that the functionality for displaying validation feedback is available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Component, ReactNode, Fragment, createElement } from \"react\";\nimport { Alert } from \"./components/Alert\";\n```\n\n----------------------------------------\n\nTITLE: Strict Allow-List Filter Configuration\nDESCRIPTION: Example showing how to create an allow-list configuration that only accepts specific metrics and denies all others. This is done by adding a catch-all deny filter at the end.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/metrics.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"statsd\",\n    \"settings\": { \"protocol\": \"TCP\" },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"accept\", \"values\" : [\"app.\"] },\n      { \"type\" : \"nameStartsWith\", \"result\" : \"deny\", \"values\" : [\"\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring JMX for Mendix Runtime using Java Options\nDESCRIPTION: This YAML snippet configures the Java options required to enable JMX monitoring on a Mendix Runtime instance. Dependencies include access to the m2ee.yaml configuration file for altering Java options, and proper network settings allowing connections to the defined JMX port and hostname.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/monitoring-mendix-using-jmx.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\njavaopts: [\n\n\"-Dfile.encoding=UTF-8\", \"-Xmx128M\", \"-Xms128M\",\n\n\"-Djava.io.tmpdir=/tmp\",\n\n\"-Dcom.sun.management.jmxremote\",\n\n\"-Dcom.sun.management.jmxremote.port=7845\",\n\n\"-Dcom.sun.management.jmxremote.local.only=false\",\n\n\"-Dcom.sun.management.jmxremote.authenticate=false\",\n\n\"-Dcom.sun.management.jmxremote.ssl=false\",\n\n\"-Djava.rmi.server.hostname=192.168.1.70\",\n\n]\n```\n\n----------------------------------------\n\nTITLE: Java Exception Error Message\nDESCRIPTION: Error message shown when encountering a cookie encryption issue with invalid IV length\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-10-parent/nt-8-rn.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\njava.security.InvalidAlgorithmParameterException Unsupported IV length: 16 bytes. Only 12 bytes long IV supported\n```\n\n----------------------------------------\n\nTITLE: Calculating Modulo in Mendix - Java\nDESCRIPTION: The snippet demonstrates how to calculate the remainder of two numbers using the 'mod' operator in Mendix with a Java example. Inputs of type Integer/Long result in the same type output unless either is Decimal, in which case the output is Decimal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n23 mod 5\n```\n\n----------------------------------------\n\nTITLE: Adding XML Element Tags in Excel\nDESCRIPTION: This snippet shows how to add XML tags to Excel columns to facilitate data import into XSD format. It involves placing XML element start and end tags around country names in an Excel sheet. No additional dependencies are required.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<xs:element type=\"xs:string\" name=\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"/>\n```\n\n----------------------------------------\n\nTITLE: ATS Search Terms Table\nDESCRIPTION: Markdown table showing the recommended search terms for different testing tasks when standard actions are not available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-two/bp-two-finding-the-action-you-need.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nTask                             | Search Term |\n----------------------------------|:------:|\nFinding a widget                 | \"Find\" in combination with the name of the widget |\nClicking a widget                | \"Click\" in combination with the name of the widget |\nCover an input widget            | \"Set\" in combination with the name of the widget |\nRetrieving a value from a widget | \"Get\" in combination with the name of the widget |\nAsserting values/information     | \"Assert\" in combination with the name of the widget |\nGenerating values/information    | See 6 Generating Values/Information for more information |\n```\n\n----------------------------------------\n\nTITLE: Begin of Day Comparison in Mendix\nDESCRIPTION: Expression comparing the beginning of current day in local time zone versus UTC\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/date-and-time-handling/datetime-handling-faq.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix-expression\nCODE:\n```\n[%BeginOfCurrentDay%] > [%BeginOfCurrentDayUTC%]\n```\n\n----------------------------------------\n\nTITLE: Registering a Dockable Pane in TypeScript\nDESCRIPTION: Code to register a dockable pane handle with the Studio Pro API, defining its title and initial position. This is added to the extension's loaded method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst paneHandle = await studioPro.ui.panes.register(\n    {\n        title: \"My Extension Pane\",\n        initialPosition: \"right\",\n    },\n    {\n        componentName: \"extension/myextension\",\n        uiEntrypoint: \"dockablepane\",\n    });\n```\n\n----------------------------------------\n\nTITLE: ATS Platform Settings Table\nDESCRIPTION: Markdown table defining the platform configuration options for BrowserStack integration in ATS\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-getting-started.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Description |\n| --- | --- |\n| **Platform** | Select the platform you want to test on. |\n| **Resolution** | Select the resolution of the session screen. |\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Layout in JSON\nDESCRIPTION: This snippet defines the basic layout for a chart, including font properties, title, hover mode, legend, and margin settings. Replace comments with specific properties for actual implementation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"font\": {\n    // font properties\n  },\n  \"title\": \"CHART TITLE\",\n  \"titlefont\": {\n    // title font properties\n  },\n  \"hovermode\": \"closest\",\n  \"showlegend\": true,\n  \"legend\": {\n    // legend properties\n  },\n  \"hoverlabel\": {\n    // hover label properties\n  },\n  \"margin\": {\n    // margin properties\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Page Frontmatter Configuration in Markdown\nDESCRIPTION: YAML frontmatter configuration for the documentation page, defining title, URL, weight, and description metadata for the Make It Native apps documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/make-it-native-parent/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Make It Native Apps\"\nurl: /releasenotes/mobile/make-it-native-parent/\nweight: 7\ndescription: \"Information on various Make It Native apps by platform and version.\"\n---\n```\n\n----------------------------------------\n\nTITLE: Modulo Operation in Java\nDESCRIPTION: Example of modulo operation to find remainder.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n23 mod 5\n```\n\n----------------------------------------\n\nTITLE: Configuring Accessibility Properties in XML for Mendix Widgets\nDESCRIPTION: This XML snippet defines the accessibility properties for a Mendix widget, including options for setting accessibility roles and hints. The properties include 'accessible,' 'screenReaderCaption,' and 'screenReaderHint,' which enhance the accessibility features of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/mobile-accessibility.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Accessibility\">\n    <property key=\"accessible\" type=\"boolean\" defaultValue=\"true\">\n        <caption>Accessible</caption>\n        <description />\n    </property>\n    <property key=\"screenReaderCaption\" type=\"textTemplate\" required=\"false\">\n        <caption>Screen reader caption</caption>\n        <description />\n    </property>\n    <property key=\"screenReaderHint\" type=\"textTemplate\" required=\"false\">\n        <caption>Screen reader hint</caption>\n        <description />\n    </property>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Accessing Child Elements of a Model Element in C#\nDESCRIPTION: This code snippet provides methods for accessing child elements of a model, such as microflow actions and domain model entities. It demonstrates the use of methods to analyze model properties for custom functionalities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/untyped-model-api.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nclass Sample4(IUntypedModelAccessService untypedModelAccessService, IModel currentApp)\n{\n    public IReadOnlyList<IModelElement> GetMicroflowActionActivities() =>\n        untypedModelAccessService.GetUntypedModel(currentApp)\n            .GetUnitsOfType(\"Projects$Module\")\n            .Single(unit => unit.Name == \"MyFirstModule\")\n            .GetUnitsOfType(\"Microflows$Microflow\")\n            .Single(unit => unit.Name == \"MyFirstLogic\")\n            .GetElementsOfType(\"Microflows$ActionActivity\");\n\n    public IReadOnlyList<IModelElement> GetDomainModelEntities() =>\n        untypedModelAccessService.GetUntypedModel(currentApp)\n            .GetUnitsOfType(\"Projects$Module\")\n            .Single(unit => unit.Name == \"MyFirstModule\")\n            .GetUnitsOfType(\"DomainModels$DomainModel\").Single()\n            .GetElementsOfType(\"DomainModels$Entity\");\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration for History Documentation\nDESCRIPTION: YAML front matter configuration block defining the page title, URL, and weight for the History dialog documentation page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/version-control-menu/history-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"History\"\nurl: /refguide9/history-dialog/\nweight: 50\n---\n```\n\n----------------------------------------\n\nTITLE: Including On Leave Event Snippet\nDESCRIPTION: This snippet describes the on-leave property event for the text area widget, covering behavior when leaving the widget context, regardless of value change.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Initializing Collapsed State in GroupBox\nDESCRIPTION: State initialization for the GroupBox component, supporting an optional initial collapsed state\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_44\n\nLANGUAGE: tsx\nCODE:\n```\nreadonly state: GroupBoxState = {\n    collapsed: !!this.props.startCollapsed\n};\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Native Mobile App\nDESCRIPTION: Command to install project dependencies using npm, with special handling for npm version 7 and above\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Adding mx-name to Widget Class in Mendix Studio Pro\nDESCRIPTION: Illustrates how to add an mx-name to a widget's class in Mendix Studio Pro, enabling ATS Helper to interact with widgets that lack a native mx-name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-increase-recorder-helper-coverage.md#2025-04-21_snippet_3\n\nLANGUAGE: mendix\nCODE:\n```\nClass: \"mx-name-option1\"\n```\n\n----------------------------------------\n\nTITLE: Adding forceFullObjects Property to DataSource Element in Pages\nDESCRIPTION: The DataSource element in Pages now includes a new 'forceFullObjects' property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.8.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### Pages\n\n#### DataSource (Element)\n\n* We introduced the `forceFullObjects` property.\n```\n\n----------------------------------------\n\nTITLE: Setting New Workflow Context Object in Java\nDESCRIPTION: Java action example that replaces a workflow context object when the context entity has been changed. It uses the Workflow interface to set a new object as the workflow context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-versioning.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport com.mendix.workflows.Workflow;   // add this import to the top\n\n// BEGIN USER CODE\ntry {\n  var workflow = com.mendix.core.Core.workflows().getWorkflow(getContext(), __WorkflowInput); // get the Workflow interface object\n  workflow.setWorkflowContext(__ContextReplacement); // replace the current context object with the new one\n  return true;\n} catch (Exception e) {\n  return false;\n}\n// END USER CODE\n```\n\n----------------------------------------\n\nTITLE: Date Formatting in Mendix with Java Migration\nDESCRIPTION: This section describes changes in the output of date formatting microflow expressions when migrating from Java 11 to Java 17 and then to Java 21. It highlights the differences in date and time formats under different locale settings (nl_BE and nl_NL) and the use of non-breaking spaces in formatting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/java-programming/java-version-migration.md#2025-04-21_snippet_0\n\nLANGUAGE: Microflow\nCODE:\n```\nformatDate(dateTime(2006, 5, 4))\n```\n\nLANGUAGE: Microflow\nCODE:\n```\nformatDateTime(dateTime(2006, 5, 4, 3, 2, 1))\n```\n\nLANGUAGE: Microflow\nCODE:\n```\n'8:24' + urlDecode('%E2%80%AF') + 'AM'\n```\n\n----------------------------------------\n\nTITLE: Authenticating with PAT in HTTP Request for Mendix Projects API\nDESCRIPTION: Example of an HTTP GET request to the Mendix Projects API using a Personal Access Token (PAT) for authentication. The request includes an Authorization header with the MxToken prefix followed by the generated PAT.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/projects-api-v2.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /projects HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Name Property\nDESCRIPTION: This snippet defines the common property 'Name' for Mendix widgets. It is a reference to an external file containing the markdown definition for the name property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/document-templates/data-view-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n\"{% snippet file=\\\"/static/_includes/refguide/name-property.md\\\" %}\"\n```\n\n----------------------------------------\n\nTITLE: Basic Mendix Data View with Context Source\nDESCRIPTION: Example of YAML frontmatter configuration for the Context Source documentation page, defining title, URL and weight parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/data-sources/context-source.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Context Source\"\nurl: /refguide8/context-source/\nweight: 30\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Bar Chart Styles in Mendix Native\nDESCRIPTION: This code snippet defines the styling options for a bar chart widget in Mendix native applications. It includes properties for container, error messages, chart, grid, axes, legend, domain, and bars. Each property allows for detailed customization of the chart's appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_42\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_barchart_BarChart = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  errorMessage: {\n    // This has all TextStyle properties. \n  },\n  chart: {\n    // This has all ViewStyle properties. \n  },\n  grid: {\n    backgroundcolor: null, // Applies a color to the grid background (string).\n    dashArray: null, //  Applies a pattern of dashes and gaps to the grid lines (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    lineColor: null, // Applies a color to the grid lines (string).\n    width: null, // Applies a width to the grid lines (number).\n    padding: null, // Applies padding to all sides of the grid (number). This makes axis value labels visible.\n    paddingBottom: null, // Applies padding to the bottom side of the grid (number). This makes axis value labels visible.\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the grid (number). This makes axis value labels visible.\n    paddingLeft: null, // Applies padding to the left side of the grid (number). This makes axis value labels visible.\n    paddingRight: null, // Applies padding to the right side of the grid (number). This makes axis value labels visible.\n    paddingTop: null, // Applies padding to the top side of the grid (number). This makes axis value labels visible.\n    paddingVertical: null, // Applies padding to the vertical sides of the grid (number). This makes axis value labels visible.\n  },\n  xAxis: {\n    color: null, // Applies a color to the grid background (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the axis line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    fontFamily: null, // Applies a font type to the axis value labels (string).\n    fontSize: null, // Applies a size to the axis value labels (number).\n    fontStyle: null, // Applies a font style to the axis value labels (\"normal\" or \"italic\").\n    fontWeight: null, // Applies a font weight to the axis value labels (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n    lineColor: null, // Applies a color to the axis line (string).\n    width: null, // Applies a width to the axis line (number).\n    label: {\n      // All TextStyle properties.\n      relativePositionGrid: null, // Positions the axis label at the **bottom** or **right** side of the grid.\n    }\n  },\n  yAxis: {\n    // All `xAxis` element styles.\n  },\n  legend: {\n    container: {\n      // All ViewStyle properties.\n    },\n    item: {\n      // All ViewStyle properties.\n    },\n    indicator: {\n      // All ViewStyle properties.\n    },\n    label: {\n      // All TextStyle properties.\n    }\n  },\n  domain: {\n    padding: {\n      x: null, // Applies a number of pixels of padding to add the beginning and end of the X axis domain (number).\n      y: null, // Applies a number of pixels of padding to add the beginning and end of the y axis domain (number).\n    },\n  },\n  bars: {\n    barColorPalette: null, // Provides colors to bars that do not have a bar color configured (string with list of colors separated by ';', one color for each series).\n    barsoffset: null, // Determines the number of pixels each bar in a group should be offset from its original position on the Y axis (number). This is only applicable when presentation mode is **Grouped**.\n    customBarStyles: {\n      any_custom_bar_style_name: {\n        bar: {\n          ending: null, // Specifies a radius to apply to each bar.\n          barcolor: null, // Applies a color to the bar (string). If bars are configured to have labels, the labels will be the same color as the bar.\n          width: null, // Applies a width to the bar (number).\n        },\n        label: {\n          fontFamily: null, // Applies a font type to the bar label (string).\n          fontSize: null, // Applies a size to the bar label (number).\n          fontStyle: null, // Applies a font style to the bar label (**normal** or **italic**).\n          fontWeight: null, // Applies a font weight to the bar label (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n        }\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Returning Current Execution Data from Mendix Runtime\nDESCRIPTION: The response snippet displays detailed execution data, including request duration, execution type, user, and action stack details for each active request in Mendix Runtime. It outputs a structured JSON with results, where each execution reports on user actions like microflows and database retrievals by XPath queries. No specific constraints but understanding of Mendix Runtime's request structure is necessary to interpret the data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"202de1e51639ae0\":{\n      \"request_duration\":106175,\n      \"type\":\"CLIENT\",\n      \"user\":\"Anonymous_2ce7c971-f077-4aca-83c5-f3898443ed01\",\n      \"action_stack\":[\n      {\n        \"xpath\":\"//MyFirstModule.Entity\",\n        \"amount\":1,\n        \"depth\":0,\n        \"offset\":-1,\n        \"sort\":{},\n        \"type\":\"RetrieveXPathAction\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"Retrieve Entity from database\",\n          \"type\":\"RetrieveByXPath\"\n        },\n        \"name\":\"MyFirstModule.LoopNested\",\n        \"type\":\"Microflow\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"LoopNested\",\n          \"type\":\"SubMicroflow\"\n        },\n        \"name\":\"MyFirstModule.Loop\",\n        \"type\":\"Microflow\"\n      }\n    ]},\n    \"bcbb5508-0293-4f12-b290-ee109962811e\":{\n      \"request_duration\":104776,\n      \"type\":\"CLIENT_ASYNC_MONITORED\",\n      \"user\":\"Anonymous_2ce7c971-f077-4aca-83c5-f3898443ed01\",\n      \"action_stack\":[\n      {\n        \"current_activity\":{\n          \"caption\":\"Retrieve Entity from database\",\n          \"type\":\"RetrieveByXPath\"\n        },\n        \"name\":\"MyFirstModule.LoopNested\",\n        \"type\":\"Microflow\"\n      },\n      {\n        \"current_activity\":{\n          \"caption\":\"LoopNested\",\n          \"type\":\"SubMicroflow\"\n        },\n        \"name\":\"MyFirstModule.Loop\",\n        \"type\":\"Microflow\"\n      }\n    ]}\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Building Developer App with Native Builder CLI\nDESCRIPTION: This command builds a native developer app using the Native Builder CLI. The project name parameter should match the project name used in the `prepare` command. The built app will be available in the *C:\\native-builder\\builds* folder.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n\"native-builder.exe build dev-app --project-name \\\"Native NFC App\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Executing NFC Read Command in Shell\nDESCRIPTION: This command uses the native-builder to rebuild the NFC-enabled Mendix app. It specifies the project name and builds a development version of the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nnative-builder.exe build dev-app --project-name \"Native NFC App\"\n```\n\n----------------------------------------\n\nTITLE: Aggregating Product Names into a List\nDESCRIPTION: Uses STRING_AGG to combine all product names into a single comma-separated string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nSELECT STRING_AGG(Name, ',') as ProductNames FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Building Native Mobile App with Native Builder CLI\nDESCRIPTION: Example command showing the simplified build syntax introduced in version 3.0.0 for building a Mendix native mobile app with specific version and build number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-builder.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbuild --project-name \"My Mendix Project\" --app-version \"1.0.0\" --build-number 1\n```\n\n----------------------------------------\n\nTITLE: Example Configuration YAML for Mendix Private Cloud\nDESCRIPTION: This YAML file provides an example configuration for a Mendix Private Cloud namespace. It includes settings for the namespace, cluster mode, database plan, storage plan, ingress, and registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nnamespace: my-namespace\ncluster_mode: connected\nmask:\n  database_plan: true\n  storage_plan: true\n  ingress: true\n  registry: true\n  proxy: false\n  custom_tls: false\ndatabase_plan:\n  name: ephemeral-database\n  type: ephemeral\nstorage_plan:\n  name: ephemeral-storage\n  type: ephemeral\ningress:\n  type: openshift-route\n  enable_tls: false\n  k8s_ingress: null\n  service: null\nregistry:\n  type: openshift4\n```\n\n----------------------------------------\n\nTITLE: Known Issues in Mendix Studio Pro 8.11 - Markdown\nDESCRIPTION: This snippet lists the known issues identified in Mendix Studio Pro 8.11, including vulnerability concerns related to user roles and Cookie compliance. It serves as a warning and guidance for users experiencing these issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.11.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* Users with non-administrative [user roles](/refguide/user-roles/) with the permission to manage users are able to escalate their privileges. For more information on this vulnerability, see [SSA-875726 Privilege Escalation Vulnerability in Mendix](https://new.siemens.com/global/en/products/services/cert.html#SecurityPublications).\n    * Fixed in [8.12.5](/releasenotes/studio-pro/8.12/#875726).\n* Cookies set by the client do not fully comply with the new requirements with regards to the `SameSite` attribute, which are being rolled out by Google Chrome (for more information on SameSite cookies, see [SameSite cookies explained](https://web.dev/samesite-cookies-explained/)).\n```\n\n----------------------------------------\n\nTITLE: Attribute Property Configuration\nDESCRIPTION: Demonstrates how to configure an attribute property type with entity relationship and allowed attribute types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"backgroundColor\" type=\"attribute\" entityProperty=\"color\">\n <caption>Background Color</caption>\n <category>Data source</category>\n <description></description>\n <attributeTypes>\n   <attributeType name=\"String\" />\n </attributeTypes>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Exporting Data with JSON Mapping Configuration\nDESCRIPTION: Microflow activity that exports the Order object to JSON using an export mapping, storing the result in a string variable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/MFExportWithMapping.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Entity and Attribute with Model API in C#\nDESCRIPTION: This snippet shows how to add a new entity with an attribute to the Mendix model. It creates a transaction, instantiates entity and attribute objects, sets their names, adds the attribute to the entity, and then commits the transaction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/interact-with-model-api.md#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing (var transaction = model.StartTransaction(\"add entity\"))\n{\n    var entity = CurrentApp.Create<IEntity>();\n    var attr = CurrentApp.Create<IAttribute>();\n    entity.Name = \"testEntity\";\n    attr.Name = \"testAttribute\";\n    entity.AddAttribute(attr);\n    var copyEntity = CurrentApp.Copy(entity);\n    transaction.Commit();\n}\n```\n\n----------------------------------------\n\nTITLE: Illustrating OQL Comparison Operators in SQL\nDESCRIPTION: Demonstrates the usage of comparison operators in OQL, such as equal to, not equal to, less than, less than or equal to, greater than, and greater than or equal to.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nPrice = 9.80\nPrice != 9.80\nPrice < 9.80\nPrice <= 9.80\nPrice > 9.80\nPrice >= 9.80\n```\n\n----------------------------------------\n\nTITLE: Defining User Task States in Mendix Workflows\nDESCRIPTION: This code snippet defines the various states a user task can have in Mendix workflows, including Created, In Progress, Paused, Completed, Aborted, and Failed. It provides descriptions for each state and their transitions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-engine.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| State      | Description                                                  |\n| ---------- | ------------------------------------------------------------ |\n| Created    | This is the initial state after creation. User tasks have this state until users have been targeted and the on-created event (when specified) has been successfully completed. User tasks in this state are not visible in the Task Inbox yet. |\n| In Progress | User tasks in this state are visible in the Task Inbox of targeted or assigned users and can be completed. |\n| Paused     | When a workflow instance is paused, the user tasks of the workflow instance are also paused. The user tasks are not visible in the Task Inbox. |\n| Completed  | When a user task is completed, it gets the **Completed** state. After execution of the state-change microflow, this user task instance is deleted. |\n| Aborted    | When a workflow gets aborted or a user task activity gets aborted (for example, because the workflow gets restarted or the **Apply jump-to option** is used to change the workflow to another activity), a user task gets the **Aborted** state. After execution of the state-change microflow, the user task instance is deleted. |\n| Failed     | When user targeting fails or the on-created event or on-state-change event fails, the user task gets the **Failed** state. This state also triggers an on-state-change microflow. |\n```\n\n----------------------------------------\n\nTITLE: X-Ray Mode Configuration\nDESCRIPTION: A beta feature in Design mode that allows users to view structural page elements with special borders and resize capabilities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.9.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### X-Ray Mode (Beta)\n\nX-Ray mode allows you to see certain structural elements of your page while still in **Design mode**.\n```\n\n----------------------------------------\n\nTITLE: Viewing Failed Pipeline Logs in Kubernetes\nDESCRIPTION: After identifying a failed pipelinerun, use these commands to view detailed logs for debugging. This assists in pinpointing the exact cause of the pipeline failure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get po -n $NAMESPACE_WITH_PIPELINES | grep mx-pipeline-app-create-run-generic-zzt8h\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs mx-pipeline-app-create-run-generic-zzt8h-create-app-cr-2g-hjkx2 -n $NAMESPACE_WITH_PIPELINES\n```\n\n----------------------------------------\n\nTITLE: Finding Android App ID in build.gradle (Native Mobile App)\nDESCRIPTION: This snippet describes how to locate the Android application ID within the *android/app/build.gradle* file of a generated native mobile app.  The applicationId property specifies the unique identifier for the Android app. This ID is required when adding the Android app to the Firebase project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\n\"android/app/build.gradle\" and consult **applicationId** to find your ID\n```\n\n----------------------------------------\n\nTITLE: Using XPath ends-with() Function to Filter Customer Names\nDESCRIPTION: This XPath query returns all customers whose Name attribute ends with the substring 'sen'. The search is case-insensitive, so it will match names like 'Jansen' or 'Isaacsen'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-ends-with.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[ends-with(Name, 'sen')]\n```\n\n----------------------------------------\n\nTITLE: ATS Field Descriptions Table\nDESCRIPTION: Markdown table defining the recorder event fields and their descriptions for ATS test recording functionality\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-getting-started.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field | Description |\n| :--- | :--- |\n| **Recorded event** | All the registered clicks/entering text will show up here in the sequence where they were done. Select an event to open the **Action mapping** menu of that particular event. The ATS Recorder selects the actions for you. |\n| **Action mapping** | This shows all the available actions for this event. Click **Select** if you want to choose a different action.|\n```\n\n----------------------------------------\n\nTITLE: Removing Implementation Entry from build.gradle\nDESCRIPTION: Removes the implementation entry of a dependency from the android/app/build.gradle file. This removes the dependency from the app's build process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_6\n\nLANGUAGE: gradle\nCODE:\n```\nimplementation project(\":react-native-firebase\")\n```\n\n----------------------------------------\n\nTITLE: Using XPath Constraints in Mendix Data Widgets\nDESCRIPTION: This XPath constraint is used in Mendix data widgets to enforce tenant-based access control by matching the current user's tenant with the entity's tenant ID. It requires familiarity with Mendix UI components and XPath expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-development-considerations.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n[SiemensInsightsHubSingleSignOn.TenantObject_Tenant/SiemensInsightsHubSingleSignOn.Tenant/SiemensInsightsHubSingleSignOn.Account_Tenant='[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Styling Container Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the Container widget in Mendix native mobile applications. It includes styles for the container itself and a disabled state. The rippleColor and underlayColor properties are specific to Android and iOS respectively, and are only applied when the container has an onClick action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Container = {\n  container: {\n    // All ViewStyle properties\n    rippleColor: 'rgba(0, 0, 0, 0.2)', // This is the color of the ripple on Android, and will be applied only when the container has an on click action set, otherwise it will be ignored.\n    underlayColor: null, // This is the color while pressing the container on iOS, and will be applied only when the container has an on click action set, otherwise it will be ignored and defaulted to opacity only.      \n  },\n  containerDisabled: {\n    // Same properties as `container`. This overrides `container` styles if the there is an on click action set and the action cannot be executed or is disabled during action.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Large State Warning Log in Mendix\nDESCRIPTION: Example of warning log message generated when request state size exceeds the configured threshold. Shows detailed breakdown of object counts by entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/runtime-java/transient-objects-garbage-collecting.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nWARNING: Request state size of 551 objects exceeds the threshold of 500 objects. Request details: type `execute-action` in session `fd0771fe-8c12-49cf-8667-921058b116a3`. State consists of:\n * MyModule.MyEntity: 421 objects\n * AnotherModule.SomeEntity: 130 objects\n```\n\n----------------------------------------\n\nTITLE: Configuring Close Page Activity Properties in Mendix\nDESCRIPTION: This code snippet shows the properties configuration for the Close Page activity in Mendix. It includes options for the number of pages to close and common properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/close-page.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nThe **Close page** activity properties consists of the following sections:\n\n* [Action](#action) \n\n* [Common](#common)  \n\n{{< figure src=\"/attachments/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/close-page/close-page-properties.png\" alt=\"Close Page Properties\" class=\"no-border\" >}}\n\n## Action Section {#action}\n\nThe **Action** section of the properties pane shows the action associated with this activity.\n\n### Number of Pages\n\nThis property allows you to control how many pages should be closed.\n\n| Value | Description |\n| --- | --- |\n| Single | Close one page (default behavior). |\n| Multiple | Close multiple pages in the current stack at once, showing only a single animation. This number can be configured using an expression. |\n| All | Close all pages in the current stack at once, except for the first page in the stack, showing only a single animation. |\n```\n\n----------------------------------------\n\nTITLE: Library Import Update for Async Storage\nDESCRIPTION: Breaking change in library import statement, replacing @react-native-community/async-storage with @react-native-async-storage/async-storage\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-10-parent/nt-10-rn.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@react-native-async-storage/async-storage\n```\n\n----------------------------------------\n\nTITLE: Showing App Version - Mendix Command-Line Tool - Plaintext\nDESCRIPTION: The `mx show-version` command retrieves the last opened version of a Mendix app from its MPR file. It is crucial that the input MPR file matches the MX version for accuracy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nmx show-version [OPTIONS] INPUT\n```\n\n----------------------------------------\n\nTITLE: Displaying Sequence Flow Image in Markdown\nDESCRIPTION: This code snippet embeds an image of a sequence flow using Markdown syntax. It demonstrates how to include a figure with a specific source and CSS class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/sequence-flow.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide8/modeling/application-logic/sequence-flow/sequence-flow.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Menu Extension for Todo List in C#\nDESCRIPTION: Implements a menu extension to add Todo list functionality to Studio Pro's main menu. Uses docking window service to manage UI pane visibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Collections.Generic;\n\nusing System.ComponentModel.Composition;\nusing Mendix.StudioPro.ExtensionsAPI.UI.DockablePane;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Menu;\nusing Mendix.StudioPro.ExtensionsAPI.UI.Services;\n\nnamespace Mendix.ToDoExtension;\n\n[Export(typeof(Mendix.StudioPro.ExtensionsAPI.UI.Menu.MenuExtension))]\npublic class ToDoListMenuBarExtension : MenuExtension\n{\n    private readonly IDockingWindowService _dockingWindowService;\n\n    [ImportingConstructor]\n    public ToDoListMenuBarExtension(IDockingWindowService dockingWindowService)\n    {\n        _dockingWindowService = dockingWindowService;\n    }\n\n    public override IEnumerable<MenuViewModel> GetMenus()\n    {\n        yield return new MenuViewModel(\"To Do List\", () => _dockingWindowService.OpenPane(ToDoListDockablePaneExtension.PaneId));\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: CSS Classes for Conversational UI Components\nDESCRIPTION: CSS class definitions for styling and modifying various chat interface components including buttons, containers, messages, and input elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/conversational-ui/conversational-ui.md#2025-04-21_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\n.btn-chat-popup: floating button for pop-up chat\n.chat-container: container for chat including input box and messages\n.messages-container: container for messages inside chat-container\n.send-btn: button in user chat input box\n.chat-btn-suggested-prompt: clickable suggested prompt\n.chat-input-wrapper: container for user chat input box\n.user-input-instructions: information text below input box\n.message--assistant: assistant message style\n.chat-bubble-wrapper--assistant: assistant pop-up message style\n.message--user: user message style\n.chat-bubble-wrapper--user: user pop-up message style\n```\n\n----------------------------------------\n\nTITLE: Fixing a Bug in a Microflow - Mendix\nDESCRIPTION: This snippet outlines the steps required to fix a bug in the GetPet microflow of a REST service by creating a new patch version. It details folder creation, duplication of services and microflows, and updating the operation to resolve the error messages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/version-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Create a new folder called **PetStore_1_0_1**.\n2. Duplicate the PetStore service. Call it **PetStore_1_0_1** and move it to the **PetStore_1_0_1** folder.\n3. Duplicate the GetPet microflow. Call it **GetPet_1_0_1** and move it to the **PetStore_1_0_1** folder.\n4. Update the **PetStore_1_0_1** service, making the GET operation refer to **GetPet_1_0_1**.\n5. Change the **GetPet_1_0_1** microflow to fix the behavior.\n```\n\n----------------------------------------\n\nTITLE: Defining a TranslatableString Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define a `translatableString` property within a Mendix widget.  Unlike a standard string property, `translatableString` allows for localized versions of the default value for different languages. The `translations` element contains a list of `<translation>` elements, each specifying a localized value for a given language using the `lang` attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"translatableMessage\" type=\"translatableString\">\n  <caption>Message</caption>\n  <category>Data source</category>\n  <description>A hardcoded message</description>\n  <translations>\n   <translation lang=\"en_US\">Add your message here.</translation>\n   <translation lang=\"nl_NL\">Vul hier je bericht in.</translation>\n  </translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Starting Widget Development Server After Update\nDESCRIPTION: Command to run after installing the updated package to start the development server. This might prompt about handling old dependencies which should be accepted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/update-pluggable-widgets-tools.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: XPath Query Engine Updates\nDESCRIPTION: Explains improvements to consistency and behavior in Studio Pro 10 regarding XPath query engine, handling ranges that are collections of ranges, behavior of long paths in outer joins, and handling of operators in binary expressions with collections or ranges. It clarifies changes made since Studio Pro 9 and highlights potential exceptions to be aware of.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/installation/upgrading-from-9-to-10.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Configuring Public Key URL for Insights Hub\nDESCRIPTION: The snippet specifies the format for the Public Key URL used in the Insights Hub configuration. It shows the default value for the AWS region and instructs users to adjust the region as necessary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nhttps://core.piam.{Region}.eu1.mindsphere.io/token_keys\nhttps://core.piam.eu1.mindsphere.io/token_keys\n```\n\n----------------------------------------\n\nTITLE: Deleting App Pipeline - Bash\nDESCRIPTION: This script sends a request to delete a Mendix App Custom Resource (CR), which consequently triggers the deletion of the corresponding environment. It requires cURL and appropriate permissions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST \\\n  http://pipeline.trigger.yourdomain.com/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Event: delete-app' \\\n  -H 'X-GitLab-Token: SomeLongSecureToken42' \\\n  -d '{\\n    \"namespace\":\"namespace-with-operator\",\\n    \"env-internal-name\":\"mx-environment-internal-name\"\\n}'\n```\n\n----------------------------------------\n\nTITLE: SCSS Import Statement\nDESCRIPTION: Imports the *company-header.scss* file into *main.scss*.  This ensures that the styles defined in *company-header.scss* are included in the compiled CSS for the web application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_2\n\nLANGUAGE: scss\nCODE:\n```\n @import “company-header”; \n```\n\n----------------------------------------\n\nTITLE: Deleting Object from Database in Mendix\nDESCRIPTION: SQL query to delete the object from the database after all validations and business logic have been executed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nDELETE FROM \"myfirstmodule$employee\"\nWHERE \"id\" = ?\n```\n\n----------------------------------------\n\nTITLE: Editing Horizontal Pod Autoscaling in Shell\nDESCRIPTION: This shell snippet provides a command to edit existing horizontal pod autoscaler settings for a specified environment in Kubernetes. To use it, replace '{namespace}' and '{envname}' with actual namespace and environment names. This adjustment helps tailor the scaling behavior to specific workload needs and resource policies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit horizontalpodautoscaler {envname}\n```\n\n----------------------------------------\n\nTITLE: Binary List Operations in Mendix\nDESCRIPTION: Shows different binary list operations like Union, Intersect, and Subtract that work with two lists of the same entity type and return a new list\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/list-operation.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nList Operations:\n1. Union: Combine List1 and List2 without duplicates\n2. Intersect: Find common elements between List1 and List2\n3. Subtract: Remove elements of List2 from List1\n```\n\n----------------------------------------\n\nTITLE: Deleting Object in Mendix Runtime\nDESCRIPTION: JSON request to delete an object in the Mendix Runtime Server. It includes the action type, operation ID, and the GUID of the object to be deleted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"runtimeOperation\",\n    \"operationId\": \"FrPcy03Wm0u/u3QdXKqw6Q\",\n    \"params\": {\n        \"Objects\": {\n            \"guids\": [\n                \"11540474045149887\"\n            ]\n        }\n    },\n    \"changes\": {},\n    \"objects\": [],\n}\n```\n\n----------------------------------------\n\nTITLE: Adding useOQLVersion2 Property to RuntimeSettings (Markdown)\nDESCRIPTION: Introduces a new 'useOQLVersion2' property to the RuntimeSettings element in the Settings module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.11.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n#### RuntimeSettings (Element)\n\n* We introduced the `useOQLVersion2` property.\n```\n\n----------------------------------------\n\nTITLE: Example Markdown Alert Block\nDESCRIPTION: A conditional warning alert block in markdown syntax for Mac users\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nIf you are using Studio Pro on a Mac with Parallels, see [this update](https://kb.parallels.com/112091#section7) for improving the loading time of Marketplace in Studio Pro.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Error Message for Dangling Reference in Mendix Synchronization\nDESCRIPTION: This example shows the error message that appears when a synchronization fails due to a dangling reference. The error indicates that a City object cannot be synchronized because it references a Country object that hasn't yet been synchronized to the runtime.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/synchronization.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nSynchronizing an object of type City with GUID {123} has failed due to a modelling error. The object has a reference to other objects (City_Country) that have not been synchronized to the runtime yet. This breaks referential integrity of the object because it references a non-existing object in the runtime database. Please make sure that you synchronize the referenced object together with the City or before synchronizing the City.\n```\n\n----------------------------------------\n\nTITLE: Creating New Business Event Service in Studio Pro 9.24+\nDESCRIPTION: Illustrates the method for creating a new business event service centrally for a specific use case in recent versions of Studio Pro\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/business-event-services/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nRight-click on module > Add other > Business event service > Create a new business event service\n```\n\n----------------------------------------\n\nTITLE: Importing Required Modules for NFC Support\nDESCRIPTION: This snippet imports necessary modules for NFC functionality in a Mendix JavaScript action, including Big.js for numerical precision, NativeModules from React Native to check module availability, and NfcManager for NFC operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Big } from \"big.js\";\nimport { NativeModules } from \"react-native\";\nimport NfcManager from \"react-native-nfc-manager\";\n```\n\n----------------------------------------\n\nTITLE: Building a Deployment Package on Windows using MxBuild\nDESCRIPTION: This snippet shows the command to create a deployment package (.mda) from a Mendix app on Windows using MxBuild. It requires specifying the Java home directory and Java executable path, and optionally accepts additional options for package creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mxbuild.md#2025-04-21_snippet_0\n\nLANGUAGE: bat\nCODE:\n```\nmxbuild --target=package --java-home=\"C:\\Program Files\\Java\\jdk1.8.0_144\" --java-exe-path=\"C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe\" \"C:\\Users\\username\\Documents\\Mendix\\MyApp\\MyApp.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Creating SecretProviderClass Configuration\nDESCRIPTION: YAML configuration for SecretProviderClass CR with Vault integration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: <{MendixApp CR name}>\n  namespace: <Namespace name>\n  annotations:\n    privatecloud.mendix.com/environment-class: \"true\"\nspec:\n  provider: vault\n  parameters:\n    vaultAddress: \"http://vault.{<Vault-namespace>}.svc.cluster.local:8200\"\n    roleName: \"<{env-role}>\"\n    objects: |\n      - secretKey: \"database-type\"\n        objectName: \"database-type\"\n        secretPath: \"secret/data/<{env-db-secret}>\"\n      - secretKey: \"database-jdbc-url\"\n        objectName: \"database-jdbc-url\"\n        secretPath: \"secret/data/<{env-db-secret}>\"\n      - secretKey: \"database-username\"\n        objectName: \"database-username\"\n        secretPath: \"secret/data/<{env-db-secret}>\"\n      - secretKey: \"database-password\"\n        objectName: \"database-password\"\n        secretPath: \"secret/data/<{env-db-secret}>\"\n      - secretKey: \"database-host\"\n        objectName: \"database-host\"\n        secretPath: \"secret/data/<{env-db-secret}>\"\n      - secretKey: \"database-name\"\n        objectName: \"database-name\"\n        secretPath: \"secret/data/<{env-db-secret}>\"\n      - secretKey: \"storage-service-name\"\n        objectName: \"storage-service-name\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"storage-endpoint\"\n        objectName: \"storage-endpoint\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"storage-access-key-id\"\n        objectName: \"storage-access-key-id\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"storage-secret-access-key\"\n        objectName: \"storage-secret-access-key\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"storage-bucket-name\"\n        objectName: \"storage-bucket-name\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"storage-perform-delete\"\n        objectName: \"storage-perform-delete\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"storage-use-ca-certificates\"\n        objectName: \"storage-use-ca-certificates\"\n        secretPath: \"secret/data/<{env-file-secret}>\"\n      - secretKey: \"mx-admin-password\"\n        objectName: \"mx-admin-password\"\n        secretPath: \"secret/data/<{env-configuration-secret}>\"\n      - secretKey: \"mx-debugger-password\"\n        objectName: \"mx-debugger-password\"\n        secretPath: \"secret/data/<{env-configuration-secret}>\"\n```\n\n----------------------------------------\n\nTITLE: Calling Microflow with Entity Parameter in OData POST Request (JSON)\nDESCRIPTION: Example of calling a microflow with an entity parameter using a POST request in OData. It demonstrates passing an existing object using @id syntax and updating its attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"OffboardingDate\": \"20231231T00:00:00.000Z\",  \n  \"Employee\": {\n    \"@id\": \"Employees(1783)\",\n    \"Email\": \"john.doe.personal@gmail.com\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Input Changes in TextInput Component (TSX)\nDESCRIPTION: This TypeScript code defines a `TextInput` component that handles changes to the input value and passes the updated value to the `onUpdate` function provided by the parent component. It utilizes React's `ChangeEvent` to capture the new value from the input field and propagates it to the parent component for further processing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nimport { CSSProperties, ChangeEvent, Component, ReactNode, createElement } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    onUpdate?: (value: string) => void;\n}\n\nexport class TextInput extends Component<InputProps> {\\n\n    private readonly handleChange = this.onChange.bind(this);\n\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.props.value}\n            tabIndex={this.props.tabIndex}\n            onChange={this.handleChange}\n        />;\n    }\n\n    private onChange(event: ChangeEvent<HTMLInputElement>): void {\n        if (this.props.onUpdate) {\n            this.props.onUpdate(event.target.value);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Configuration YAML for Global Operator Managed Namespace\nDESCRIPTION: This YAML file provides an example configuration for a managed namespace in a Global Operator setup for Mendix Private Cloud. It includes additional global_operator settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nnamespace: managedNamespace\ncluster_mode: connected\nmask:\n  database_plan: true\n  storage_plan: true\n  ingress: true\n  registry: true\n  proxy: false\n  custom_tls: false\ndatabase_plan:\n  name: ephemeral-database\n  type: ephemeral\nstorage_plan:\n  name: ephemeral-storage\n  type: ephemeral\ningress:\n  type: openshift-route\n  enable_tls: false\n  k8s_ingress: null\n  service: null\nregistry:\n  type: openshift4\nglobal_operator:\n  operator_namespace: <globalOperatorMainNamespace>\n```\n\n----------------------------------------\n\nTITLE: Folder Structure for Module Creation\nDESCRIPTION: Screenshot showing how to add a new module in Mendix Studio Pro through the App Explorer context menu.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/create-connectors/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/appstore/create-content/create-connectors/add-module.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Example OData Query in JavaScript\nDESCRIPTION: This JavaScript code snippet shows an example of a fully constructed OData query. The query filters products by category and requests an inline count of the results. The snippet demonstrates the structure and URL encoding required for OData queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n\"@GWSAMPLE_BASIC.GWSAMPLE_BASIC + '/' + toString(GWSAMPLE_BASIC.EntitySetNames.ProductSet) + '?' + '$filter=Category%20eq%20''Notebooks''' + '&' + '$inlinecount=allpages'\"\n```\n\n----------------------------------------\n\nTITLE: Migrate Mendix Private Platform images to a private registry\nDESCRIPTION: This command migrates Mendix Private Platform related images to a specified private registry. It requires the registry URL, username, and repository name as input parameters.  The user is prompted for the password to the private registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\n~/mpp-binary-linux$ ./installer init migrate   -r [registry] -u  user -e [repositoryName]\nPlease enter user passwordn\nConfirm passwordnthe config checksum is empty\nThe image destination[REDACTED] svix-server:v0.75.0\nThe image destiation [REDACTED] mendix-private-platform:1.4.0.80d447b1\nthe config checksum is empty\nThe image destiation [REDACTED] mxpc-test:1.0\nthe config checksum is empty\nThe image destiation [REDACTED] privatecloud-license-manager:0.3.0\nsvix-server_v0.75.0 => [REDACTED] svix-server:v0.75.0 - ok\nmendix-private-platform_1.4.0.80d447b1 => [REDACTED] mendix-private-platform:1.4.0.80d447b1 - ok\nmxpc-test_1.0 => [REDACTED] mxpc-test:1.0 - ok\nprivatecloud-license-manager_0.3.0 => [REDACTED] privatecloud-license-manager:0.3.0 - ok\n\n```\n\n----------------------------------------\n\nTITLE: SOAP Response for Customer Retrieval in XML\nDESCRIPTION: This XML snippet represents a typical SOAP response returned by a Mendix web service upon retrieving customer data. Essential output fields include customer details like name, address, zip code, and city. The response structure showcases data formatting and schema use following SOAP protocol standards with expected elements for data representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n\"<soap:Envelope xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:soap=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:tns=\\\"http://www.example.com/\\\">\\n    <soap:Body>\\n        <tns:GetCustomersResponse>\\n            <Customer>\\n                <Name>Jessica D. Rogers<\\/Name>\\n                <Address>2118 Collins Street<\\/Address>\\n                <ZipCode>PA 16646<\\/ZipCode>\\n                <City>Hastings<\\/City>\\n            <\\/Customer>\\n            <Customer>\\n                <Name>Jamie S. Wentz<\\/Name>\\n                <Address>3269 Village View Drive<\\/Address>\\n                <ZipCode>MD 20872<\\/ZipCode>\\n                <City>Damascus<\\/City>\\n            <\\/Customer>\\n            <Customer>\\n                <Name>Blake G. Race<\\/Name>\\n                <Address>4437 Sunny Glen Lane<\\/Address>\\n                <ZipCode>OH 44115<\\/ZipCode>\\n                <City>Cleveland<\\/City>\\n            <\\/Customer>\\n            <Customer>\\n                <Name>Angela L. Dolly<\\/Name>\\n                <Address>3718 Alpha Avenue<\\/Address>\\n                <ZipCode>TX 75439<\\/ZipCode>\\n                <City>Ector<\\/City>\\n            <\\/Customer>\\n        <\\/tns:GetCustomersResponse>\\n    <\\/soap:Body>\\n<\\/soap:Envelope>\"\n```\n\n----------------------------------------\n\nTITLE: Response Format for Retrieving Apps\nDESCRIPTION: Example JSON response from the Retrieve Apps endpoint showing the list of apps with their names, URLs, project IDs, and app IDs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[{\n    \"Name\": \"Calculation App\",\n    \"Url\": \"https://calc.mendixcloud.com\",\n    \"ProjectId\": \"fae5de74-69c2-4488-a4de-abf89daac63e\",\n    \"AppId\": \"calc\"\n},{\n    \"Name\": \"Tic Tac Toc\",\n    \"Url\": \"https://tictactoc.mendixcloud.com\",\n    \"ProjectId\": \"f5129445-b638-42f4-8108-5f370c85dc57\",\n    \"AppId\": \"tictactoc\"\n}]\n```\n\n----------------------------------------\n\nTITLE: Adding Style to Google Maps Widget - JSON Configuration\nDESCRIPTION: This snippet demonstrates how to configure styles for the Google Maps widget. It outlines the JSON structure required to customize the visual presentation of the map elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/google-maps.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[{\"featureType\":\"all\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#abce83\"}]},{\"featureType\":\"landscape\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"poi\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"visibility\":\"simplified\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#5B5B3F\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#ABCE83\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#EBF4A4\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road.local\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"transit\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#aee2e0\"}]}]\n```\n\nLANGUAGE: json\nCODE:\n```\n[{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#000000\"},{\"lightness\":13}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#144b53\",\"lightness\":14,\"weight\":1.4}]},{\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#08304b\"}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#0c4152\",\"lightness\":5}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#0b434f\",\"lightness\":25}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#0b3d51\",\"lightness\":16}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#000000\"}]},{\"featureType\":\"transit\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#146474\"}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#021019\"}]}]\n```\n\n----------------------------------------\n\nTITLE: Alert Snippet XLS Extension Warning\nDESCRIPTION: Markdown alert snippet warning about XLS file extension behavior.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/file-widgets/file-manager.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\\nAlthough it is **not** in the list of approved file extensions, File Manager erroneously allows the *.xls* extension. This happens when the *.xlsx* extension is in the accepted list and an *.xls* file is selected from the **All files** option. This is due to your operating system's way of handling the **All files** option, and it cannot be changed.\\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Editing Mendix Operator Deployment in OpenShift\nDESCRIPTION: Command to edit the Mendix Operator deployment in OpenShift to adjust resource settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_15\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} edit deployment mendix-operator\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year, Month, and Day Parameters\nDESCRIPTION: Creates a datetime object using year, month, and day parameters. Returns date set to midnight of specified date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: Including Label Section Snippet\nDESCRIPTION: This snippet includes the label section of the text area widget documentation, which discusses the labeling properties and their importance for user interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Out of Memory Error Generation - Java\nDESCRIPTION: Example demonstrating how to trigger a Java OutOfMemoryError by creating a large number of objects in rapid succession. The code creates Account objects continuously until memory is exhausted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/runtime-java/runtime-java-errors.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nLoop {\n    CreateObject(Account)\n}\n```\n\n----------------------------------------\n\nTITLE: Authorization Example with Personal Access Token in HTTP Request\nDESCRIPTION: Example of an HTTP GET request to the Feedback API endpoint with proper authorization using a Personal Access Token (PAT). The token is passed in the Authorization header with the 'MxToken' prefix followed by the generated PAT value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/feedback-api-v2.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /feedback-api.mendix.com/v2/feedback-items HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Database Connector Statement Entity Structure\nDESCRIPTION: Represents the entity structure for defining database statements when executing callable statements. This non-persistable entity contains the SQL content and can be associated with parameter definitions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nDatabaseConnector.Statement\n```\n\n----------------------------------------\n\nTITLE: Defining XML Schema for a Customer Element\nDESCRIPTION: This XML schema defines a 'customer' element with a complex type containing two child elements: 'name' and 'shoesize'. The 'shoesize' element has an additional 'country' attribute, extending the simple integer type. Mendix uses such schemas to map XML data to domain models.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/xml-schemas/xml-schema-support.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<xs:schema targetNamespace=\"http://www.example.com/\" elementFormDefault=\"qualified\" xmlns:tns=\"http://www.example.com/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xs:element name=\"customer\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"name\" type=\"xs:string\"/>\n        <xs:element name=\"shoesize\" type=\"tns:shoesizeType\"/>\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n  <xs:complexType name=\"shoesizeType\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:integer\">\n        <xs:attribute name=\"country\" type=\"xs:string\"/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:schema>\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Schema for File Parameter in Mendix REST Operation\nDESCRIPTION: This snippet presents the JSON schema for a file parameter in a Mendix REST operation request body when there's no import mapping or the mapping is not based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{ \"type\": \"file\" }\n```\n\n----------------------------------------\n\nTITLE: Implementing ResNet50 Post-processor in Java\nDESCRIPTION: Java implementation of post-processing for ResNet50 model output, including class mapping and probability calculation. Handles 1000 output classes and includes file-based class label loading.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/design-patterns/pre-post-processor-patterns.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nfinal Map<Integer, String> classes = new java.util.HashMap<>();\n{\n  try {\n    File basePath = new File(Core.getConfiguration().getBasePath(), \"ml\");\n    File filePath = Paths.get(\"resnet50\", \"imagenet_classes.txt\").toFile();\n    File classesFile = new File(basePath, filePath.getPath());\n    Scanner reader = new Scanner(classesFile);\n    while (reader.hasNextLine()) {\n      String line = reader.nextLine();\n      String[] split = line.split(\":\");\n      Integer id = Integer.valueOf(split[0].trim());\n      String cls = split[1].trim();\n      classes.put(id, cls);\n    }\n    reader.close();\n  } catch (Exception e) {\n    e.printStackTrace();\n  }\n}\n\n@java.lang.Override\npublic java.lang.String executeAction() throws Exception\n{\n  this.ResnetCategory = this.__ResnetCategory == null ? null : resnet50.proxies.ML_Output_Entity_ResNet50ModelMapping.initialize(getContext(), __ResnetCategory);\n\n  float[] outputScores = new float[1000];\n  final InputStream is = MLKit.fromBase64(ResnetCategory.getResnetv17_dense0_fwd());\n  MLKit.toArray(is, outputScores);\n  float max = Integer.MIN_VALUE;\n  int index = 0;\n  for(int i = 0; i < outputScores.length; i++) {\n    if(outputScores[i] > max) {\n      max = outputScores[i];\n      index = i;\n    }\n  }\n  String result = classes.get(index);\n  return result;\n}\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Months in Java\nDESCRIPTION: This function trims a date to months by rounding off all days to zero. It uses the user's time zone. The function takes a Date and time input and returns the same date rounded down to months.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ntrimToMonths($myDate)\n```\n\nLANGUAGE: java\nCODE:\n```\n'Sun Jun 01 00:00:00 CEST 2008'\n```\n\n----------------------------------------\n\nTITLE: Adding Label Property to TextBox Widget in XML\nDESCRIPTION: This XML snippet adds a label property to the TextBox widget. It includes a propertyGroup for the label with a systemProperty key.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<propertyGroup caption=\"Label\">\n    <systemProperty key=\"Label\" />\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: URL Decoding in Java\nDESCRIPTION: Shows usage of urlDecode() function that converts an encoded URL string back to its original form.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_15\n\nLANGUAGE: java\nCODE:\n```\nurlDecode('Hello%2C+world%21')\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Selenoid\nDESCRIPTION: YAML configuration for setting up Selenoid container with volume mounts and port mappings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenoid-hub.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n selenoid:\n   network_mode: bridge\n   image: aerokube/selenoid\n   volumes:\n     - \"/docker:/etc/selenoid\"\n     - \"/var/run/docker.sock:/var/run/docker.sock\"\n     - \"/docker/video:/opt/selenoid/video\"\n   environment:\n     - OVERRIDE_VIDEO_OUTPUT_DIR=/opt/selenium/video\n     - TZ=Europe/Amsterdam\n   command: [\"-conf\", \"/etc/selenoid/browsers.json\", \"-video-output-dir\", \"/opt/selenoid/video\"]\n   ports:\n     - \"4444:4444\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Document Template Title Component\nDESCRIPTION: Defines the configuration options for a title in a document template, including caption and style settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/title-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Appearance Properties\n\n### Caption\n\nThis is the value you wish to display in the document.\n\n### Style\n\nFor details, see [Style](/refguide9/style/)\n```\n\n----------------------------------------\n\nTITLE: OQL String Concatenation in WHERE Clause\nDESCRIPTION: Query showing how to use the addition operator for string concatenation to compare a full name (FirstName + LastName) against a string literal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName FROM Sales.Customer WHERE (FirstName + LastName) = 'JaneMoose'\n```\n\n----------------------------------------\n\nTITLE: Indented Text Code Block Example\nDESCRIPTION: This snippet demonstrates a code block that is indented to be within a list. The code is simple text intended to showcase how to format a code block inside of a numbered list.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n    ```text\n    Code block indented four spaces\n    ```\n```\n\n----------------------------------------\n\nTITLE: JSON Snippet Example for Mendix Structure\nDESCRIPTION: An example of a simple JSON object containing a name property with the value 'John'. This snippet demonstrates the basic structure that would be used in a Mendix JSON structure document.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/json-structures.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"John\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Toggle BooleanSlider Value Action in Markdown\nDESCRIPTION: This code snippet defines the input parameters for the Toggle BooleanSlider Value action in a markdown table format. It specifies the name, datatype, requirement, and description of the Widget Name parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/booleanslider/rg-one-toggle-booleanslider-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\n```\n\n----------------------------------------\n\nTITLE: Authenticating to Team Server - Git Credentials\nDESCRIPTION: Instructions for connecting to Mendix Team Server via Git using a personal access token (PAT)\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n* **URL** - `https://git.api.mendix.com/<your AppID>.git`\n* **Username** - your Mendix account username (alternatively, you can use the word *pat* as your username)\n* **Password** - the personal access token that you created\n```\n\n----------------------------------------\n\nTITLE: Triggering Incremental Synchronization Nanoflow - Mendix\nDESCRIPTION: This nanoflow orchestrates the incremental synchronization process by initializing the SyncHelper, calling the corresponding microflow, and updating the last synchronization date based on the latest changed data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/best-practices/incremental-synchronization.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Call the initialization nanoflow above to retrieve the SyncHelper.\n1. Call the synchronization microflow above with the parameter **SyncHelper/LastSyncDate** to trigger the synchronization.\n1. Retrieve the object with the latest **changedDate** from the database (retrieve the first object and sort by **changedDate descending**).\n1. Change and commit the SyncHelper to update **SyncHelper/LastSyncDate** to the **changedDate** of the retrieved object.\n1. Optionally, show a progress bar:\n```\n\n----------------------------------------\n\nTITLE: Markdown URL Link\nDESCRIPTION: Simple markdown link to the ATS application URL\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n[https://ats.mendix.com](https://ats.mendix.com)\n```\n\n----------------------------------------\n\nTITLE: Creating Model Elements - Old Approach\nDESCRIPTION: Legacy method of creating model elements using constructors before version 1.0.0. Shows how entities were previously instantiated and added to a domain model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/model-sdk/model-sdk-1.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction newEntity(domainModel: domainmodels.DomainModel, name: string) {\n\tvar entity = new domainmodels.Entity();\n\tdomainModel.entities.push(entity);\n\tentity.name = name;\n\n\treturn entity;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Get Checkbox Set Selector Value in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Get Checkbox Set Selector Value' function using a markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/get-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String | Yes | The column caption of the desired checkbox.\nValue | String | Yes | The cell value of the desired checkbox.\n```\n\n----------------------------------------\n\nTITLE: MinIO TLS Configuration Alert\nDESCRIPTION: Markdown alert block explaining TLS configuration options for MinIO storage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nTo use TLS, specify the MinIO URL with an `https` schema, for example `https://minio.local:9000`. If MinIO has a self-signed certificate, you will also need to configure custom TLS so that the self-signed certificate is accepted.\n\nIf the MinIO URL is specified with an `http` schema, TLS will not be used.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Installing Tekton on Air-Gapped OpenShift\nDESCRIPTION: Commands to install Tekton, Tekton triggers, and interceptors on an air-gapped OpenShift cluster, including setting up necessary permissions and projects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/private-cloud-tekton-airgap.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\noc new-project tekton-pipelines\noc adm policy add-scc-to-user anyuid -z tekton-pipelines-controller\noc adm policy add-scc-to-user anyuid -z tekton-pipelines-webhook\n    \ncat tekton.yaml | aip inject-manifest | kubectl apply -f -\n\ncat tekton-triggers.yaml | aip inject-manifest | kubectl apply -f -\ncat interceptors.yaml | aip inject-manifest | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Configuring QR Code Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the QR Code widget including container and QR code specific styles like size, color and background color.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_qrcode_QRCode = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  qrcode: {\n    size: null, // The size of the QR code.\n    color: null, // The color of the QR code. \n    borderColor: null, // The background color behind the QR code.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Creating a TabSpec Helper Method in TypeScript\nDESCRIPTION: A helper method for creating tab specifications with a title and UI configuration. This method is used to reduce code duplication when creating multiple tabs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/tab-api.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncreateTabSpec(tab: string, title: string): { info: TabInfo, ui: UISpec} {\n        const info: TabInfo = { title };\n        const ui: UISpec = {\n            componentName: \"extension/myextension\",\n            uiEntrypoint: tab,\n        };\n\n        return {info, ui};\n    }\n```\n\n----------------------------------------\n\nTITLE: Calculated Attribute Microflow Pattern\nDESCRIPTION: Pattern for naming microflows that calculate attribute values\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/dev-best-practices.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\nCAL_{Entity name}_{Attribute name}\n```\n\n----------------------------------------\n\nTITLE: SAP Documentation Header Definition\nDESCRIPTION: YAML frontmatter defining the title, URL, weight and description for the SAP BTP release notes documentation page\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/sap-cloud-platform.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"SAP BTP Release Notes\"\nlinktitle: \"SAP BTP\"\nurl: /releasenotes/developer-portal/sap-cloud-platform/\nweight: 30\ndescription: \"Release notes for deployment to SAP Business Technology Platform\"\n---\n```\n\n----------------------------------------\n\nTITLE: Running MxBuild for Bundling Your Mendix App\nDESCRIPTION: This snippet shows how to execute the MxBuild command to bundle a Mendix app in preparation for building a native mobile app. It details the necessary parameters including paths for the JDK and project file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally-manually.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmxbuild.exe --java-home=\"JDKDirectory\" --java-exe-path=\"javaExecutable\" --target=deploy --native-packager --loose-version-check [path-to-project-mpr-file]\n```\n\n----------------------------------------\n\nTITLE: OIDC Callback URL Configuration\nDESCRIPTION: URL patterns that need to be registered with the Identity Provider for OAuth/OIDC callback handling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nhttps://<your-app-url>/oauth/v2/callback\nmakeitnative://<your-app-url>/oauth/callback\n```\n\n----------------------------------------\n\nTITLE: Adding Content Security Policy Header\nDESCRIPTION: Adds a Content Security Policy header to allow image blob sources for resolving file upload image display issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mendix-feedback.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nimg-src: blob:;\n```\n\n----------------------------------------\n\nTITLE: Deleting Model Units in JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to delete model units, such as pages, by using the 'splice' method on the container of a model unit. It requires knowledge of the model structure where the page resides and its parent container. The snippet identifies the index of the page within its container and removes it by splicing. Input: container of a model unit; Output: modified container with the specified model unit removed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/model-sdk/model-sdk-3.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst deleteIndex = page.container.documents.indexOf(page);\npage.container.documents.splice(deleteIndex, 1);\n```\n\n----------------------------------------\n\nTITLE: Fixing New Line Character Issue in REST Service Calls - Mendix 8.9\nDESCRIPTION: This snippet highlights an issue fix in the call REST service action where a new line character was incorrectly inserted before the boundary in a multipart/form-data request. The fix involved upgrading the httpclient JAR files from version 4.5.10 to 4.5.12.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.9.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\n\nCloseableHttpClient client = HttpClients.createDefault();\n```\n\n----------------------------------------\n\nTITLE: Parameter Expression Example in Mendix\nDESCRIPTION: Example showing how to use a parameter expression to display the due date in a task description\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/user-task.md#2025-04-21_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\naddDays([%CurrentDateTime%], 1)\n```\n\n----------------------------------------\n\nTITLE: Changing the Type of an Attribute - Mendix\nDESCRIPTION: This snippet explains the steps for changing the attribute type of a REST service, which is considered a breaking change. It includes creating a new version, duplicating message definitions, and updating the export mapping.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/version-rest-service.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. Add a new attribute **DateOfBirth** to the **Pet** entity.\n2. Create a new folder called **PetStore_2_0_0**.\n3. Duplicate the new message definitions. Call it **PetStoreMessages_2_0_0** and move it to the **PetStore_2_0_0** folder. Remove any message definitions that you do not want to change.\n4. Create a new export mapping called **ExportPet_2_0_0** in the **PetStore_2_0_0** folder. Base it on the **Pet** entity, selecting the same attributes as before, but choosing **DateOfBirth** instead of **YearOfBirth**.\n5. Duplicate the **PetStore** service. Call it **PetStore_2_0_0** and move it to the **PetStore_2_0_0** folder.\n6. Update the **GET /pet** operation in the **PetStore_2_0_0** service, choosing the **ExportPet_2_0_0** export mapping.\n```\n\n----------------------------------------\n\nTITLE: Defining the getPreviewCss Function\nDESCRIPTION: This function returns a string containing CSS styles required for the render of the preview component in Mendix. It specifically defines the background color for the preview container.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nexport function getPreviewCss() {\n    return `\n.my-pw-container {\n    background-color: #C0FFEE;\n}\n`;\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Safe Area View Structure\nDESCRIPTION: XML structure showing the container element for styling a safe area view widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_27\n\nLANGUAGE: XML\nCODE:\n```\n<container>content</container>\n```\n\n----------------------------------------\n\nTITLE: Configuring Microflow Data Source for Dynamic Product Filtering\nDESCRIPTION: A microflow that dynamically retrieves products based on order type by filtering motorized status, demonstrating flexible data retrieval in Mendix\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/data-widgets/data-sources/microflow-source.md#2025-04-21_snippet_0\n\nLANGUAGE: Microflow Logic\nCODE:\n```\nSplit Order on OrderType\n- If OrderType == Cars: Retrieve Motorized Products (true)\n- If OrderType == Bicycles: Retrieve Non-Motorized Products (false)\n- If OrderType is empty: Return empty list\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Administrator Users\nDESCRIPTION: Query that returns users with the Administrator role using the UserRole system variable\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//System.User[System.UserRoles = '[%UserRole_Administrator%]']\n```\n\n----------------------------------------\n\nTITLE: Implementing WebSocket Endpoint in Mendix Runtime using Java\nDESCRIPTION: A complete implementation of a WebSocket endpoint extending javax.websocket.Endpoint class. The endpoint handles connection opening, message processing, and connection closing. It demonstrates session management, message handling, and integration with Mendix Core functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/websockets-in-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport javax.websocket.CloseReason;\nimport javax.websocket.Endpoint;\nimport javax.websocket.EndpointConfig;\nimport javax.websocket.MessageHandler;\nimport javax.websocket.Session;\nimport java.io.IOException;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.UUID;\n\nimport com.mendix.core.Core;\n\npublic class TestEndpoint extends Endpoint {\n  Set<Session> sessions = new HashSet<>();\n\n  @Override\n  public void onOpen(Session session, EndpointConfig config) {\n    String sessionId = (String) config.getUserProperties().get(\"mxSessionId\");\n    ISession mxSession = Core.getSessionById(UUID.fromString(sessionId));\n    String username = mxSession.getUserName();\n    sessions.add(session);\n    session.addMessageHandler(new MessageHandler.Whole<String>() {\n      @Override\n      public void onMessage(String message) {\n        if (\"test message\".equals(message)) {\n          try {\n            session.getBasicRemote().sendText(\"test response:\" + username);\n            session.close();\n          } catch (IOException e) {\n            e.printStackTrace();\n          }\n        }\n      }\n    });\n\n    try {\n      session.getBasicRemote().sendText(\"socket opened\");\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }\n\n  @Override\n  public void onClose(Session session, CloseReason closeReason) {\n    System.out.println(\"Received onClose call with reason: \" + closeReason);\n    sessions.remove(session);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Page in TypeScript\nDESCRIPTION: This snippet shows how to load a specific page named 'Home_Web' from the domain model of the module 'MyFirstModule'. The loadAll function is used with a filtering condition to fetch the desired page unit.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/model-api.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst [page] = await pages.loadAll((info: Primitives.UnitInfo) => info.moduleName === 'MyFirstModule' && info.name === 'Home_Web')\n```\n\n----------------------------------------\n\nTITLE: Starting weinre for Mendix Mobile App Debugging\nDESCRIPTION: This command starts weinre with specific parameters for debugging a Mendix mobile application. It sets the bound host to the local IP address and specifies the HTTP port to use.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-a-hybrid-mobile-application.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nweinre --boundHost 1.2.3.4 --httpPort 9090\n```\n\n----------------------------------------\n\nTITLE: Installing React Developer Tools with NPM\nDESCRIPTION: This snippet demonstrates how to install a specific version of React Developer Tools using NPX (an executable runner for NPM). The @^3 ensures compatibility with Mendix's React Native version. This command is executed in a command-line interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_0\n\nLANGUAGE: NPM\nCODE:\n```\n\"npx react-devtools@^3\"\n```\n\n----------------------------------------\n\nTITLE: Using formatDecimal in Mendix Microflows\nDESCRIPTION: The formatDecimal function in microflows converts decimal values to formatted strings with customizable format patterns. Examples demonstrate number formatting with different regional settings and currency symbols.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nformatDecimal(1234.56, '#,###.#')\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDecimal(1234.56, '¤ #,##0.00')\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDecimal(0.56, '% ##0')\n```\n\n----------------------------------------\n\nTITLE: Legend Configuration in JSON\nDESCRIPTION: Provides detailed configuration options for customizing chart legend appearance, positioning, font, and visibility\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"legend\": {\n    \"showlegend\": true,\n    \"legend\": {\n      \"bgcolor\": \"#fff\",\n      \"bordercolor\": \"#444\",\n      \"borderwidth\": 0,\n      \"font\":{\n        \"family\": \"Open Sans, verdana, arial, sans-serif\",\n        \"size\": 12,\n        \"color\": \"black\"\n      },\n      \"orientation\": \"v\",\n      \"traceorder\": \"normal\",\n      \"tracegroupgap\": 10,\n      \"x\": -0.1,\n      \"xanchor\": \"right\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing MBean for Mendix Statistics\nDESCRIPTION: This Java class, `MxStats.java`, implements the `MxStatsMBean` interface and provides the implementation for retrieving Mendix statistics. It uses the `com.mendix.core.Core` class from the Mendix Runtime API to access the various statistics and return them. This class allows exposing Mendix statistics through JMX.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/monitoring-mendix-using-jmx.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n\"package jmx.actions;\\n\\nimport com.mendix.core.Core;\\n\\n public class MxStats implements MxStatsMBean {\\n\\n public int getMaximumNumberConcurrentUsers() throws Exception {\\n\\n return Core.getMaximumNumberConcurrentUsers();\\n\\n }\\n\\n public int getActionQueueSize(){\n\\n return Core.getActionQueueSize();\\n\\n }\\n\\n public int getActiveActionCount(){\n\\n return Core.getActiveActionCount();\\n\\n }\\n\\n public int getScheduledActionCount(){\n\\n return Core.getScheduledActionCount();\\n\\n }\\n\\n public long getNumberConcurrentSessions(){\n\\n return Core.getNumberConcurrentSessions();\\n\\n }\\n\\n public long getCurrentUserCount(){\n\\n return Core.getConcurrentUserCount(true);\\n\\n }\\n\\n public long getCompletedActionCount(){\n\\n return Core.getCompletedActionCount();\\n\\n }\\n\\n public long getNamedUserCount(){\n\\n return Core.getNamedUserCount();\\n\\n }\\n}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Key-Pair Authentication in Snowflake\nDESCRIPTION: Steps required for configuring RSA key-pair authentication in Snowflake, including generating private and public keys and assigning them to a Snowflake user. This enables secure authentication between Mendix and Snowflake.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-rest-sql.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Alert Snippet Warning\nDESCRIPTION: Markdown alert snippet indicating File Manager widget is not supported on native mobile pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/file-widgets/file-manager.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}The file manager widget is not supported on native mobile pages.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Knowledge Base Retrieval Settings\nDESCRIPTION: Database retrieval configuration for accessing the MxCloudKnowledgeBase entity in the chat context microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/how-to/ground_your_llm_in_data.md#2025-04-21_snippet_3\n\nLANGUAGE: mendix\nCODE:\n```\nSource: From database\nEntity: MxGenAIConnector.MxCloudKnowledgeBase\nRange: First\nObject name: MxCloudKnowledgeBase\n```\n\n----------------------------------------\n\nTITLE: Configuring Postgres User for Managed Identity\nDESCRIPTION: SQL commands to set up managed identity authentication for a Postgres database user and remove password\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_23\n\nLANGUAGE: sql\nCODE:\n```\nSECURITY LABEL for \"pgaadauth\" on role \"<database-user>\" is 'aadauth,oid=<managed-identity-uuid>,type=service';\nALTER ROLE <database-user> WITH PASSWORD NULL;\n```\n\n----------------------------------------\n\nTITLE: Error Message for Dangling References in Mendix Synchronization\nDESCRIPTION: An example error message that occurs when synchronizing an object that has references to objects not yet synchronized to the runtime, breaking referential integrity in the Mendix database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/offline-first.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nSynchronizing an object of type City with GUID {123} has failed due to a modelling error. The object has a reference to other objects (City_Country) that have not been synchronized to the runtime yet. This breaks referential integrity of the object because it references a non-existing object in the runtime database. Please make sure that you synchronize the referenced object together with the City or before synchronizing the City.\n```\n\n----------------------------------------\n\nTITLE: Querying Customer Data in SQL\nDESCRIPTION: This SQL snippet shows the structure of the 'module$customer' table in the database, representing the Customer entity. It includes system attributes and a custom 'fullname' attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n| id | createddate | changeddate | system$owner | system$changedby | fullname |\n| --- | --- | --- | --- | --- | --- |\n| 1 | 2006-10-24 08:10:45.053 | 2009-11-27 09:56:45.099 | 66 | 29 | Steve Jobs |\n| 3 | 2007-09-30 09:56:45.099 | 2008-04-01 08:10:45.053 | 66 | 34 | Bill Gates |\n```\n\n----------------------------------------\n\nTITLE: Message Template with Parameter (Mendix Expression)\nDESCRIPTION: Expression used in Show Message activity to display the calculated total price by converting decimal to string\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_3\n\nLANGUAGE: mendix\nCODE:\n```\ntoString($CalculatedTotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Custom Settings Configuration Example\nDESCRIPTION: Example showing the configuration format for ClientCertificateUsages setting in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: ini\nCODE:\n```\n{\n\"Module.MyFirstModule.MyFirstImportedWS\" : \"D:\\\\App\\\\Mx1.pfx\",\n\"Server2.company.com\" : \"D:\\\\App\\\\Mx2.pfx\",\n\"Module.MySecondModule.MySecondImportedWS\": \"D:\\\\App\\\\Mx3.pfx\"\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Safe Area View Widget in JavaScript\nDESCRIPTION: Defines the style properties for the Safe Area View widget. This widget is specifically for iOS apps and prevents content from rendering in unwanted areas of the screen. The styling only applies to the `container`. The default class name to style all safe area views is `com_mendix_widget_native_safeareaview_SafeAreaView`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_safeareaview_SafeAreaView = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Status Validation Logic in Mendix Microflow\nDESCRIPTION: A condition check to validate ticket status values in a Mendix microflow. The code compares the input status string with enumeration values by checking both caption and key representations using case-insensitive comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/how-to/create-single-agent.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ntoLowerCase(trim($TicketStatus)) = toLowerCase(getCaption(MyFirstModule.ENUM_Ticket_Status.Closed))\nor toLowerCase(trim($TicketStatus)) = toLowerCase(getKey(MyFirstModule.ENUM_Ticket_Status.Closed))\n```\n\n----------------------------------------\n\nTITLE: Java Action for Retrieving Specialization Associations\nDESCRIPTION: This Java code snippet defines a custom action that retrieves a list of generalizations associated with a specialization. It leverages the Mendix Java API and requires importing the Core class. The action uses Reverse and Specialization parameters to direct the retrieval path logically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/query-over.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\npublic class RetrieveAsAssociatedWithB extends CustomJavaAction<java.util.List<IMendixObject>>\n{\n\tprivate IMendixObject __B;\n\tprivate main.proxies.Specialization B;\n\tprivate java.lang.Boolean Reverse;\n\n\tpublic RetrieveAsAssociatedWithB(IContext context, IMendixObject B, java.lang.Boolean Reverse)\n\t{\n\t\tsuper(context);\n\t\tthis.__B = B;\n\t\tthis.Reverse = Reverse;\n\t}\n\n\t@java.lang.Override\n\tpublic java.util.List<IMendixObject> executeAction() throws Exception\n\t{\n\t\tthis.B = __B == null ? null : main.proxies.Specialization.initialize(getContext(), __B);\n \n\t\t// BEGIN USER CODE\n\t\treturn Core.retrieveByPath(getContext(), __B, \"Main.Generalization_Specialization\", Reverse);\n\t\t// END USER CODE\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Security Group API Endpoint\nDESCRIPTION: HTTP endpoint for creating a new security group in a company. This operation is restricted to Company Managers only.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_18\n\nLANGUAGE: http\nCODE:\n```\n HTTP Method: POST\n URL: https://usermanagement.mendix.com/legacy-api/1/groups\n```\n\n----------------------------------------\n\nTITLE: Disabling Base and Helper Styles - JavaScript\nDESCRIPTION: This snippet demonstrates how to set both `excludeButtons` and `excludeButtonsHelpers` to `true` to remove all default button styles from native mobile widgets in Mendix, ensuring a fully customized look.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nexport const excludeButtons = true;\nexport const excludeButtonsHelpers = true;\n```\n\n----------------------------------------\n\nTITLE: Common Section Include Syntax\nDESCRIPTION: Markdown syntax for including the common section documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Executing psql Commands via Kubernetes Pod\nDESCRIPTION: This shell script uses `kubectl` to run a temporary PostgreSQL client pod. It then sets environment variables for database connection and uses `psql` to execute SQL commands for granting `rds_iam` permissions.  The script also removes the pod after execution. Replace `<database-username>` with the username specified in `database-username` and `<database-host>` with the database host\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_18\n\nLANGUAGE: shell\nCODE:\n```\nkubectl run postgrestools docker.io/bitnami/postgresql:14 -ti --restart=Never --rm=true -- /bin/sh\nexport PGDATABASE=postgres\nexport PGUSER=<database-username>\nexport PGHOST=<database-host>\nexport PGPASSWORD=\"\"\npsql    \nGRANT rds_iam TO <database-username>;\nALTER ROLE <database-username> WITH PASSWORD NULL;\n```\n\n----------------------------------------\n\nTITLE: Delete Object JSON Request\nDESCRIPTION: JSON request to delete an object from the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"delete\",\n   \"params\":{\n      \"guids\":[\"281474976710757\"]\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204eeae128284c0\":323\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Image Widget in Mendix Native Mobile\nDESCRIPTION: Defines styles for the image widget, including container, image, and backdrop properties. This can be used to customize the appearance of static or dynamic images on pages, layouts, or snippets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_image_Image = {\n  container: {\n    // All ViewStyle properties\n  },\n  image: {\n    // This has all ImageStyle properties.\n  },\n  backdrop: {\n    // All ViewStyle properties\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Databricks JDBC URL for Apache Arrow Compatibility\nDESCRIPTION: JDBC URL parameter to disable Apache Arrow serialization and resolve compatibility issues with JDK 16+\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/database-connector-mx10.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nEnableArrow=0\n```\n\n----------------------------------------\n\nTITLE: Implementing Validation Handler in TextBox Component\nDESCRIPTION: TypeScript React component implementation adding custom validation to the TextBox widget. Uses useEffect hook to set up a validator that checks for empty input values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n    const value = props.textAttribute.value || \"\";\n    const validationFeedback = props.textAttribute.validation;\n    \n    useEffect(() => {\n        props.textAttribute.setValidator((value?: string): string | undefined => {\n            if (!value) {\n                return props.requiredMessage?.value ?? \"\";\n            }\n        });\n    }, []);\n    \n    return (\n        <Fragment>\n            <TextInput\n                value={value}\n                onChange={props.textAttribute.setValue}\n                tabIndex={props.tabIndex}\n                disabled={props.textAttribute.readOnly}\n            />\n            <Alert>{validationFeedback}</Alert>\n        </Fragment>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Properties to NativeNavigationProfile (Markdown)\nDESCRIPTION: Introduces several new properties to the NativeNavigationProfile element in the Navigation module, including screen and popup navigation transitions, and Hermes enablement.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.11.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n#### NativeNavigationProfile (Element)\n\n* We introduced the `screenNavigationTransition` property. \n* We introduced the `popupNavigationTransition` property. \n* We introduced the `applyScreenTransition` property. \n* We introduced the `hermesEnabled` property.\n```\n\n----------------------------------------\n\nTITLE: XPath contains in Studio Pro\nDESCRIPTION: This snippet demonstrates how to use the `contains()` function in Mendix Studio Pro to retrieve all customers where the `Name` attribute contains the substring 'an'. It uses XPath syntax specific to Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-contains.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[contains(Name, 'an')]\n```\n\n----------------------------------------\n\nTITLE: Defining Widgets Property in XML for Mendix Pluggable Widgets\nDESCRIPTION: XML configuration for defining a widgets property that allows placing multiple widgets inside a pluggable widget. This example shows configuration without a dataSource attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\">\n\t<caption>Content</caption>\n\t<description>Content of a box</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pagination for Pluggable Widgets\nDESCRIPTION: Pagination in pluggable widgets is achieved using the setOffset and setLimit methods on the ListValue object, allowing for rich data presentation with paging capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.3.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nsetOffset and setLimit\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Mendix Annotation\nDESCRIPTION: Markdown formatted documentation showing front matter configuration and describing annotation usage in Mendix flows\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/annotation.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Annotation\"\nurl: /refguide/annotation/\nweight: 60\naliases:\n    - /refguide/annotation-flow.html\n    - /refguide/annotation-flow\n#If moving or renaming this doc file, implement a temporary redirect and let the respective team know they should update the URL in the product. See Mapping to Products for more details.\n---\n```\n\n----------------------------------------\n\nTITLE: User Provisioning Constants Configuration\nDESCRIPTION: Configure user provisioning settings for automated end-user onboarding using deploy-time constants\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix Constants\nCODE:\n```\nCustomUserEntity: \"Administration.Account\"\nPrincipalEntityAttribute: \"Name\"\nPrincipalIdPAttribute: \"sub\"\nAllowcreateUsers: \"True\"\nUserrole: \"User\"\nUserType: \"Internal\"\nCustomUserProvisioning: \"Mymodule.UC_CustomProvisioning\"\n```\n\n----------------------------------------\n\nTITLE: Adding Language Settings Configuration\nDESCRIPTION: Configuration snippet showing how to add and configure additional languages in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/translate-your-app-content.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto8/collaboration-requirements-management/translate-your-app-content/language-settings.png\" alt=\"Language settings tab in the project settings dialog\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Updating Data Grid CSS Selectors\nDESCRIPTION: Examples showing how to update CSS selectors for data grids to work with the new DOM structure\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.mx-datagrid .mx-datagrid-head-table {\n\t// your styling\n}\n.mx-datagrid .mx-datagrid-body-table .mx-datagrid-body tr td {\n\t// your styling\n}\n```\n\nLANGUAGE: css\nCODE:\n```\n.mx-datagrid thead {\n\t// your styling\n}\n\n.mx-datagrid tbody tr td {\n\t// your styling\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Spacing Design Property with CSS Classes in JavaScript\nDESCRIPTION: This snippet demonstrates how to define a Spacing design property using CSS classes for margin and padding options. It includes small (S) and medium (M) sizes for all four directions (top, right, bottom, left).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"Spacing\",\n    \"type\": \"Spacing\",\n    \"description\": \"Spacing control\",\n    \"margin\": [\n        {\n            \"name\": \"S\",\n            \"top\": {\n                \"class\": \"margin-top-s\"\n            },\n            \"right\": {\n                \"class\": \"margin-right-s\"\n            },\n            \"bottom\": {\n                \"class\": \"margin-bottom-s\"\n            },\n            \"left\": {\n                \"class\": \"margin-left-s\"\n            }\n        },\n        {\n            \"name\": \"M\",\n            \"top\": {\n                \"class\": \"margin-top-m\"\n            },\n            \"right\": {\n                \"class\": \"margin-right-m\"\n            },\n            \"bottom\": {\n                \"class\": \"margin-bottom-m\"\n            },\n            \"left\": {\n                \"class\": \"margin-left-m\"\n            }\n        }\n    ],\n    \"padding\": [\n        {\n            \"name\": \"S\",\n            \"top\": {\n                \"class\": \"padding-top-s\"\n            },\n            \"right\": {\n                \"class\": \"padding-right-s\"\n            },\n            \"bottom\": {\n                \"class\": \"padding-bottom-s\"\n            },\n            \"left\": {\n                \"class\": \"padding-left-s\"\n            }\n        },\n        {\n            \"name\": \"M\",\n            \"top\": {\n                \"class\": \"padding-top-m\"\n            },\n            \"right\": {\n                \"class\": \"padding-right-m\"\n            },\n            \"bottom\": {\n                \"class\": \"padding-bottom-m\"\n            },\n            \"left\": {\n                \"class\": \"padding-left-m\"\n            }\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Including Label Section for Radio Buttons\nDESCRIPTION: This snippet includes the label properties defining how the labels are displayed for radio button options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_5\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Set BooleanSlider Value Action\nDESCRIPTION: A markdown table detailing the input parameters required for the 'Set BooleanSlider Value' action. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/booleanslider/rg-one-set-booleanslider-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nValue | String | Yes | The value you want to mark as active.\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenShift Routes for Mendix Private Cloud\nDESCRIPTION: YAML configuration for setting up OpenShift Routes as network endpoints for Mendix applications. Includes options for domain configuration, TLS settings, and custom annotations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # Endpoint (Network) configuration\n  endpoint:\n    # Endpoint type: ingress, openshiftRoute, or service\n    type: openshiftRoute\n    # OpenShift Route configuration: used only when type is set to openshiftRoute\n    openshiftRoute:\n      # Optional, can be omitted: annotations which should be applied to all Ingress Resources\n      annotations:\n        # example: use HSTS headers\n        haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload\n      # Optional: App URLs will be generated for subdomains of this domain, unless an app is using a custom appURL\n      domain: mendix.example.com\n      # Enable or disable TLS\n      enableTLS: true\n      # Optional: name of a kubernetes.io/tls secret containing the TLS certificate\n      # This example is the name of an existing secret, which should be a wildcard matching subdomains of the domain name\n      tlsSecretName: 'mendixapps-tls'\n```\n\n----------------------------------------\n\nTITLE: Defining a Message Definition Schema in JSON\nDESCRIPTION: Shows the JSON schema structure for a message definition in Mendix published REST services. The schema defines an object with properties that represent the message's attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"#definition_name#\": { \n  \"type\": \"object\",\n  \"properties\": [\n     #attribute_name#: #attribute_schema#\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Extending Logging in Mendix Apps Using JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to add a custom log listener in Mendix native applications. The function `addLogListener` from the Mendix logging library is used to intercept all log messages for custom processing, such as integration with Google Crashlytics. The returned function is used to remove the listener when it is no longer needed. Prerequisites include Mendix Studio Pro and access to a JavaScript environment in the mobile client.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/logging.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { addLogListener } from \"mendix/logging\";\n\n// Start handling logs\nconst removeListener = addLogListener((logLevel, logNode, ...args) => {\n    const message = args.map(arg => arg instanceof Error ? arg.message : String(arg)).join(\", \");\n    alert(`Incoming ${logLevel} log from ${logNode}: ${message}`);\n});\n\n// To remove the listener, call the returned function\nremoveListener();\n```\n\n----------------------------------------\n\nTITLE: DB2 SQL Error for Insufficient Page Size\nDESCRIPTION: Shows the exception thrown when an index is too large for the configured page size in DB2. This error occurs with SQL code -614 when the combined length of columns in an index exceeds the maximum key length.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/db2.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\ncom.ibm.db2.jcc.am.SqlException: DB2 SQL Error: SQLCODE=-614, SQLSTATE=54008, SQLERRMC=some_index_name\n```\n\n----------------------------------------\n\nTITLE: Workaround for Improper SAML Window Closure\nDESCRIPTION: This JavaScript snippet addresses an issue where the authentication window might fail to close automatically after a successful login. It listens for the 'loadstart' event in the InAppBrowser and closes the window if navigated back to a specific URL. This code complements the main SAML authentication script and should be inserted after a specified line for corrective actions. Dependencies are the same as those for the main script.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/implement-sso-on-a-hybrid-app-with-mendix-and-saml.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n    samlWindow.addEventListener('loadstart', (param)=>{\n        if(param.url == config.unmodifiedRemoteUrl + 'index.html'){\n            samlWindow.close();\n            window.mx.afterLoginAction && window.mx.afterLoginAction();\n        }\n    });\n```\n\n----------------------------------------\n\nTITLE: Defining bboxSurfaceScanner Configuration Options\nDESCRIPTION: This JSON snippet specifies configuration options for the bboxSurfaceScanner, such as default values for scanning parameters including opacity, detail level, and auto-scanning settings. The main purpose is to customize the behavior of bbox surface scanning in 3D modeling environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"useDefault\": true,\n    \"detailLevel\": 35.8,\n    \"positions\": {\n        \"enableAllScannerPositions\": false,\n        \"positions\": {\n            \"front\": true\n        },\n        \"fitAllPositions\": {\n            \"left\": false,\n            \"right\": false,\n            \"top\": false,\n            \"bottom\": false,\n            \"front\": false,\n            \"rear\": false\n        }\n    },\n    \"bboxOpacity\": 35,\n    \"showBBoxes\": true,\n    \"useMovingFrameCulling\": true,\n    \"movingFrameCullingBoundary\": 2,\n    \"movingFrameSleepMS\": 200,\n    \"autoScanning\": true,\n    \"autoScanDelayMS\": 2000,\n    \"cameraSensitivity\": 0.1,\n    \"reevaluateAfterRotation\": true,\n    \"drawWhileLoading\": false,\n    \"renderBBoxesOnMovingFrames\": false,\n    \"sleepBetweenAutoDrawsMS\": 750\n}\n```\n\n----------------------------------------\n\nTITLE: Post-Analysis Log Sample\nDESCRIPTION: This sample output indicates a Mendix application creation error due to an existing environment. It provides detailed command usage and options required to troubleshoot efficiently.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nError: mendixapps.privatecloud.mendix.com \"mxapp\" already exists\nUsage:\n  mxpc-pipeline-tools-cli app-cr-create [-n namespace] [--dry-run] -d database-name -s storage-name -m dtap-mode env-internal-name [flags]\n\nFlags:\n  -d, --database-name string        Database plan name\n      --dry-run                     Prints manifest to stdout\n  -m, --dtap-mode string            Mode for running the Mendix application.\n                                    Available options:\n                                      P - production\n                                      D - Development\n                                    Always set this to P in production environments. (default \"D\")\n  -h, --help                        help for app-cr-create\n      --mx-runtime-version string   Version of mendix runtime, which will be used during the building of oci-image based on .mda file (default \"9.6.6.34474\")\n  -n, --namespace string            Cluster namespace\n  -u, --source-url string           Source URL. .mda file url or oci-image url\n  -s, --storage-name string         Storage plan name\n\n2022/08/01 16:28:35 err: mendixapps.privatecloud.mendix.com \"mxapp\" already exists\n```\n\n----------------------------------------\n\nTITLE: Splitting JSON Data into Static and Dynamic Parts\nDESCRIPTION: This snippet illustrates how to separate chart data into static and dynamic components for use with the Any Chart widget. Static parts define constant properties like the type of chart, while dynamic parts include data points defined as JSON arrays. This approach allows for generating chart data from a domain model within a Mendix application. Users must add these snippets to the corresponding properties and ensure dynamic values are generated from backend data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/charts-any-usage.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[ { \"type\": \"scatter\" } ]\n```\n\nLANGUAGE: json\nCODE:\n```\n[ { \"x\": [ 1, 2 ], \"y\": [ 1, 2 ] } ]\n```\n\n----------------------------------------\n\nTITLE: Basic Native Dependencies Declaration Format in JSON\nDESCRIPTION: Shows the basic format for declaring native dependencies in a JSON file. The file consists of a single object with a 'nativeDependencies' key that contains dependency names and their specific versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-native-dependencies-9.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nativeDependencies\": {\n        \"dependency-name\": \"1.2.3\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OData Service Settings in Mendix Studio Pro\nDESCRIPTION: XML snippet showing the recommended OData service settings in Mendix Studio Pro. It specifies to expose associations 'As an associated id' for compatibility with Excel and Tableau.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Settings>\n  <Associations>As an associated id</Associations>\n</Settings>\n```\n\n----------------------------------------\n\nTITLE: Data Source Section Link\nDESCRIPTION: Links to the data source section of the text area properties documentation, which discusses how to manage the data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Compose Process Status\nDESCRIPTION: This bash command checks the status of the Docker Compose processes for the Selenium hub and nodes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-docker-selenium-hub.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker-compose ps\n```\n\n----------------------------------------\n\nTITLE: Defining Enumeration Values in XML for Mendix Pluggable Widgets\nDESCRIPTION: Example of how to define a single enumeration value within the enumerationValues element. This shows the basic structure with a key attribute and caption text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<enumerationValue key=\"myEnumOption\">My enum option caption</enumerationValue>\n```\n\n----------------------------------------\n\nTITLE: Finding Last Occurrence of Substring in Mendix - Java\nDESCRIPTION: The `findLast` function discovers the last position of a substring within a string. Inputs include the main string, the substring to search, and an optional search limit defining the trailing boundary for the search. Fails with -1 when a substring is absent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nfindLast('thisismystring', 't')\n```\n\n----------------------------------------\n\nTITLE: Markdown Navigation Links\nDESCRIPTION: A list of navigation links for InputReferenceSelector documentation sections written in markdown format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/input-reference-selector/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* [Assert InputReferenceSelector Value](/appstore/partner-solutions/ats/rg-one-assert-inputreferenceselector-value/)\n* [Get InputReferenceSelector Value](/appstore/partner-solutions/ats/rg-one-get-inputreferenceselector-value/)\n* [Set InputReferenceSelector Value](/appstore/partner-solutions/ats/rg-one-set-inputreferenceselector-value/)\n```\n\n----------------------------------------\n\nTITLE: Common Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet references the common properties section for the Checkbox widget in Mendix documentation. It is intended to provide detailed information about the common properties applicable across different widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Introducing lineType Property in Flow Element (Microflows)\nDESCRIPTION: A new property 'lineType' has been added to the Flow element in Microflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.8.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Microflows\n\n#### Flow (Element)\n\n* We introduced the `lineType` property.\n```\n\n----------------------------------------\n\nTITLE: OData Service Compatibility Matrix\nDESCRIPTION: Defines supported OData versions and service characteristics for Mendix external entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/consumed-odata-services/consumed-odata-service-requirements.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* The OData service must be either an OData v3 service returning Atom XML, or an OData v4 service returning either Atom XML or JSON\n* It should support queries on the OData feed, including `$filter`, `$orderby`, `$top`, `$skip`, `$expand`, and `$count` (or `$inlinecount`)\n```\n\n----------------------------------------\n\nTITLE: Text Color CSS Classes in Mendix\nDESCRIPTION: Pre-defined CSS classes for changing text colors in Mendix applications. Includes theme-based colors and standard color options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n/* Theme-based text colors */\n.text-default { /* default text color */ }\n.text-primary { /* primary brand color */ }\n.text-info { /* info brand color */ }\n.text-success { /* success brand color */ }\n.text-warning { /* warning brand color */ }\n.text-danger { /* danger brand color */ }\n\n/* Standard text colors */\n.text-white { /* white text */ }\n.text-black { /* black text */ }\n.text-gray-primary { /* primary gray text */ }\n.text-gray { /* gray text */ }\n.text-gray-dark { /* dark gray text */ }\n.text-gray-darker { /* darker gray text */ }\n.text-gray-light { /* light gray text */ }\n.text-gray-lighter { /* lighter gray text */ }\n```\n\n----------------------------------------\n\nTITLE: Introducing New Properties in ExternalActionParameterMapping (Markdown)\nDESCRIPTION: Adds a new 'includedAssociations' property to the ExternalActionParameterMapping element in the Microflows module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.11.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### ExternalActionParameterMapping (Element)\n\n* We introduced the `includedAssociations` property.\n```\n\n----------------------------------------\n\nTITLE: Configuring HERE Maps CSP\nDESCRIPTION: This code snippet details the Content Security Policy requirements for integrating HERE Maps into a Mendix application. It specifies the allowed sources for scripts and images needed to properly use the map widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/map.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nscript-src 'self';\nimg-src 'self' https://*.base.maps.cit.api.here.com data:;\n```\n\n----------------------------------------\n\nTITLE: Excluding Layouts and Page Templates in JSON\nDESCRIPTION: Example JSON configuration that excludes layouts and page templates from the Atlas_Core module, preventing developers from using them to create new pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Core\": {\n            \"layouts\": true,\n            \"pageTemplates\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Badge Number in JavaScript Action for Local Notifications\nDESCRIPTION: This snippet outlines the process of creating a variable for the badge number in a Mendix app, setting its value, and assigning it to a JavaScript action to display notifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-badges.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n1. Open **ACT_CreateAndSendNotification**.\n2. Drag a **Create variable** activity to the right of the three string variables you made:\n\n3. Double-click the variable activity and select **Data type** > **Integer/Long**.\n4. Type *1* into the expression value field.\n5. Type *badge_number* into the **variable name** field:\n\n6. Click **OK**.\n7. Drag a **Set badge number** JavaScript action to the right of your merge activity:\n\n8. Double-click the badge number activity.\n9. Set the value of **Badge number** to **$badge_number**\n\n10. Click **OK**.\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Dependencies for Mendix Native Mobile App\nDESCRIPTION: Command to install project dependencies using npm, with specific instructions for NPM v7 and above to handle peer dependencies\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Searching Mendix Catalog API with cURL\nDESCRIPTION: Makes a GET request to search the Mendix Catalog API using a personal access token for authentication. The example searches for 'Customer' related entries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/search-api.md#2025-04-21_snippet_0\n\nLANGUAGE: curl\nCODE:\n```\ncurl --location --request GET 'https://catalog.mendix.com/rest/search/v5/data?query=Customer' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: MxToken <your_Personal_Access_Token>'\n```\n\n----------------------------------------\n\nTITLE: Range Mode Configuration - Normal (JSON)\nDESCRIPTION: This snippet configures the y-axis range mode to \"normal\", which sets the range based on the plotted values, adjusting to fit them. This ensures that all data points are visible within the chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_18\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"rangemode\": \"normal\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Object Type Decision Properties in Mendix\nDESCRIPTION: XML snippet showing the structure of Object Type Decision properties in Mendix, including common and input sections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/decisions/object-type-decision.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n    <common>\n        <caption></caption>\n    </common>\n    <input>\n        <object></object>\n    </input>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Querying Logs by Week Number in Java\nDESCRIPTION: This Java query retrieves all logs where the `DateAttribute` falls within the second week of the year, using the local time zone.  The `week-from-dateTime()` function extracts the week number from the attribute, and the query filters for records where the week number equals 2.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[week-from-dateTime(DateAttribute) = 2]\n```\n\n----------------------------------------\n\nTITLE: Object Flow Diagram Markup\nDESCRIPTION: Shows the XML markup for displaying a diagram illustrating the flow of objects between Mendix Client and Server.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/minimize-number.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide9/runtime/minimize-number/object_flow.png\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Defining Widgets Property in Pluggable Widget XML\nDESCRIPTION: XML configuration for defining a widgets property that allows placing multiple widgets inside a pluggable widget, similar to a container widget's content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\">\n\t<caption>Content</caption>\n\t<description>Content of a box</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Project UID Range Information\nDESCRIPTION: Command to retrieve the allowed UID range for containers in the OpenShift project. This information is needed to set proper security contexts for the monitoring components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\noc describe project {project}\n```\n\n----------------------------------------\n\nTITLE: Importing NFC JavaScript Modules\nDESCRIPTION: Import necessary modules for NFC functionality in JavaScript actions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Big } from \"big.js\";\nimport { NativeModules } from \"react-native\";\nimport NfcManager from \"react-native-nfc-manager\";\n```\n\n----------------------------------------\n\nTITLE: Filtering a List of Orders Using the Search Bar - Mendix\nDESCRIPTION: This snippet outlines the steps to add search fields to a search bar in Mendix's overview page for filtering orders by order status and minimum price. Initial setup involves modifying the order overview to include new search fields and defining their attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/filtering-data-on-an-overview-page.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Open your **orders overview** and right click the (empty) section above the **Search** button.\n\n2. Right click the search bar section and select **Add search field** > **Drop-down**.\n3. Add the **OrderStatus** attribute to the search field and define the name.\n\n4. Redeploy your application and click the **Search** button on your orders overview.\n\n5. Use the **Order status** search field to filter your list on a specific order status and click the 'Search' button on the right side.\n\n6. To filter on a minimum price, add another search field by selecting **Add search field** > **Comparison**.\n7. Select the **TotalPrice** attribute, name the search field **Minimum total price** and change the **Comparison** from **Contains** to **Greater or equal.**\n\n8. Redeploy your application and enter 50 in your newly added search field.\n```\n\n----------------------------------------\n\nTITLE: Cloning Mendix Native Template using Git\nDESCRIPTION: This command clones a specific release of the Mendix Native Template. Customize the branch name to match the desired release version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --single-branch --branch release/<major-version-number> <repo-url>\n```\n\n----------------------------------------\n\nTITLE: Reloading the Mendix Page with JavaScript\nDESCRIPTION: This code snippet demonstrates how to use JavaScript within a Mendix application to reload the page with the current state. The functionality is implemented to enforce immediate changes in the user’s display language. For this to work, the platform-supported HTML/JavaScript widget must be added to your Mendix app. Key parameters include creating a pop-up page and placing the HTMLSnippet widget within this page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/menus/translatable-texts/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nmx.reloadWithState();\n```\n\n----------------------------------------\n\nTITLE: Saving DML Queries\nDESCRIPTION: This SQL snippet demonstrates an INSERT operation to add data into the productlines table in the classicmodels database. It uses parameterized input values in SQL queries specified within curly braces to enable dynamic data adjustment based on runtime inputs. Suitable for any database supporting SQL, this snippet effectively inserts new product requirements into a specific column, demonstrating how modifications in DML Queries roll back in the Mendix Design phase.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-external-database-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nINSERT INTO classicmodels.productlines(productLine, requestedProductRequirement)VALUES({productLine}, {requestedProductRequirement})\n```\n\n----------------------------------------\n\nTITLE: Custom Claim Object Structure in JSON\nDESCRIPTION: Example JSON structure for a custom claim object returned by a microflow. The object name becomes the claim name, with attributes as nested key-value pairs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/oidc-provider.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"MyObjectName\": {\n    \"MyObjectAttribute1Name\" : \"MyObjectAttribute1Value\",\n    \"MyObjectAttribute2Name\" : \"MyObjectAttribute2Value\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Order Data in SQL\nDESCRIPTION: This SQL snippet shows the structure of the 'module$order' table in the database, representing the Order entity. It includes custom attributes 'number' and 'date', with system attributes disabled.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n| id | number | date |\n| --- | --- | --- |\n| 5 | 5 | 2009-11-27 09:56:45.099 |\n| 8 | 8 | 2008-04-01 08:10:45.053 |\n```\n\n----------------------------------------\n\nTITLE: Defining an Object Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define an object property in a Mendix widget. The `object` type allows packaging sub-properties, and the `isList` attribute, when set to \"true\", signifies that multiple instances of this object can be passed to the widget.  This example shows an object property containing an integer and a string property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"collection\" type=\"object\" isList=\"true\">\n  <caption>Collection</caption>\n  <category>Appearance</category>\n  <description>Add the properties to show in your collection</description>\n  <properties>\n\t<!-- Define the sub-properties here -->\n\t<property key=\"number\" type=\"integer\" defaultValue=\"1\">\n     <caption>Number</caption>\n     <category>Data source</category>\n     <description>Give us a number</description>\n    </property>\n    <property key=\"text\" type=\"string\">\n     <caption>Text</caption>\n     <category>Data source</category>\n     <description>And a text!</description>\n    </property>\n </properties>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Initializing Bubble Chart Configuration in JSON\nDESCRIPTION: This snippet outlines the configuration for a bubble chart in JSON format, defining the x and y coordinates along with marker attributes such as color and size. The output is a bubble chart visualized according to the specified parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"marker\": {\n    \"color\": [ \"red\", \"blue\", \"green\" ],\n    \"size\": [ 20, 50, 80 ]\n  },\n  \"mode\": \"markers\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS Signature Authorization in Postman\nDESCRIPTION: Configures AWS Signature authorization in Postman to make authenticated API requests to AWS services. Includes setting access key, secret key, region, and service name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/aws-create-new.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"awsv4\",\n  \"accessKey\": \"YOUR_ACCESS_KEY\",\n  \"secretKey\": \"YOUR_SECRET_KEY\",\n  \"region\": \"us-east-1\",\n  \"service\": \"polly\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Service Call Microflow\nDESCRIPTION: Steps to create a microflow and configure a web service call with various mapping and authentication options\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: Microflow Configuration\nCODE:\n```\n1. Create microflow\n2. Add \"Call web service\" activity\n3. Select web service operation\n4. Configure SOAP request body\n5. Set HTTP authentication (optional)\n6. Handle SOAP response\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix Tekton pipeline using Helm\nDESCRIPTION: This snippet installs the Mendix Tekton pipeline using Helm. It sets the `images.imagePushURL` parameter to specify the URL of the private image repository where the pipeline will store the built images. The installation is performed in a specific namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"cd $PATH_TO_DOWNLOADED_FOLDERS && cd helm/charts\nhelm install -n $NAMESPACE_WITH_PIPELINES mx-tekton-pipeline ./pipeline/ \\\n  -f ./pipeline/values.yaml \\\n  --set images.imagePushURL=$URL_TO_YOUR_REPO_WITHOUT_TAG\"\n```\n\n----------------------------------------\n\nTITLE: Rich Text CSP Configuration (Version 3.0+)\nDESCRIPTION: CSP directive for enabling style sources for Rich Text widget versions 3.0 and higher\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/security/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nstyle-src 'self' 'unsafe-inline';\n```\n\n----------------------------------------\n\nTITLE: Referencing Common Section Link in Header Properties\nDESCRIPTION: This snippet includes a reference link in the documentation for the common properties section of the header. It serves as a navigational aid within the documentation, allowing users to access detailed information about common properties used in header configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/page-resources/layout/header.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Adding urlPrefix Property to WebUIProjectSettingsPart Element\nDESCRIPTION: The WebUIProjectSettingsPart element in the Settings module now includes a new 'urlPrefix' property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.5.md#2025-04-21_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n#### WebUIProjectSettingsPart (Element)\n\n* We introduced the `urlPrefix` property.\n```\n\n----------------------------------------\n\nTITLE: YouTube Video Embed Example in Markdown\nDESCRIPTION: Shows how to embed a YouTube video in Markdown documentation using the YouTube shortcode, specifically for demonstrating the AWS Authentication connector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/aws-authentication.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< youtube b3uQONB3yoY >}}\n```\n\n----------------------------------------\n\nTITLE: Customizing Login Page for SAML SSO in HTML\nDESCRIPTION: Steps to customize the login page for using both Mendix local login and SSO login. Involves renaming HTML files and updating the SSO button link.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/advanced_configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/SSO\" class=\"btn btn-primary\">Login with SSO</a>\n```\n\n----------------------------------------\n\nTITLE: Modifying Existing Data with PATCH in HTTP\nDESCRIPTION: Demonstrates how to update an existing customer resource using a PATCH request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_7\n\nLANGUAGE: HTTP\nCODE:\n```\nPATCH http://localhost:8080/odata/CustomerApi/v1/Customers(5)\n\n{\n    \"FirstName\": \"Jimmy2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Developer Tools via NPX\nDESCRIPTION: This snippet provides a command to install React Developer Tools using NPX, ensuring compatibility with the specific version of React Native used in Mendix projects. This tool aids in inspecting and debugging React components during native app development.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-debug.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnpx react-devtools@^3\n```\n\n----------------------------------------\n\nTITLE: Git Clone Command\nDESCRIPTION: This command demonstrates how to clone a Git-enabled Mendix app repository using the command line, including the user's Personal Access Token (PAT) for authentication. The `{USERPAT}` placeholder should be replaced with the actual PAT value, and `{APPID}` with the application ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/developerportal/general/team-server/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: git\nCODE:\n```\n\"git clone https://pat:{USERPAT}@git.api.mendix.com/{APPID}.git\"\n```\n\n----------------------------------------\n\nTITLE: Handling Input Changes in TextInput Component\nDESCRIPTION: This TypeScript code in components/TextInput.tsx implements change handling for the input element. It adds an onChange event handler and calls the onUpdate function with the new value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { CSSProperties, ChangeEvent, Component, ReactNode, createElement } from \"react\";\nimport classNames from \"classnames\";\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n    onUpdate?: (value: string) => void;\n}\nexport class TextInput extends Component<InputProps> {\n    private readonly handleChange = this.onChange.bind(this);\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.props.value}\n            tabIndex={this.props.tabIndex}\n            onChange={this.handleChange}\n        />;\n    }\n    private onChange(event: ChangeEvent<HTMLInputElement>): void {\n        if (this.props.onUpdate) {\n            this.props.onUpdate(event.target.value);\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using day-of-year-from-dateTime() in XPath Queries\nDESCRIPTION: This XPath query returns all Log entities where the day in the year of the DateAttribute equals 30. The function extracts the day number (between 1-366) from datetime values, allowing for filtering based on this criterion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[day-of-year-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Triggering Microflow from Nanoflow\nDESCRIPTION: This snippet describes the nanoflow that triggers the microflow designed to apply changes. It ensures synchronization of all request objects before and after calling the microflow, maintaining data integrity and consistency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/best-practices/request-object.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n---\n// Nanoflow to synchronize request object\n// Ensure all request objects are synchronized\n// Trigger Microflow to apply changes\n---\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Close Dialog Action in Markdown\nDESCRIPTION: This snippet defines a markdown table listing the input parameters for the Close Dialog action. It includes the parameter names, datatypes, whether they are required, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-dialog/rg-one-close-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nDialog Title | String | no | The title of the dialog you want to cancel\nDialog Type | Enumeration | no | The type of the dialog you want to cancel\n```\n\n----------------------------------------\n\nTITLE: Defining ListWidgetValue in TypeScript\nDESCRIPTION: This TypeScript snippet defines ListWidgetValue, a function type used to render child widgets with data source items in Mendix pluggable widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport type ListWidgetValue = (item: ObjectItem) => ReactNode;\n```\n\n----------------------------------------\n\nTITLE: Adding Pod Annotations in MendixApp CR - YAML\nDESCRIPTION: This YAML configuration snippet is used to enable Prometheus scraping by adding specific annotations to the `MendixApp` Custom Resource (CR) in Mendix environments running in Standalone Mode. It specifies the path, port, and scrape configurations for Prometheus. No additional dependencies are required apart from having the Mendix environment properly set up. The expected output is enabled Prometheus scraping for the given environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: example-mendixapp\nspec:\n  # Existing configuration\n  # ...\n  runtimeDeploymentPodAnnotations:\n    # Existing annotations\n    # ...\n    # Add these new annotations:\n    prometheus.io/path: /metrics\n    prometheus.io/port: '8900'\n    prometheus.io/scrape: 'true'\n\n```\n\n----------------------------------------\n\nTITLE: Organizing Property Groups in TextBox XML\nDESCRIPTION: This XML snippet refines the organization of property groups for the TextBox widget, enabling better visibility and alignment with core text box properties. It includes group definitions for various attributes and system properties, integrating with Mendix's property management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<properties>\n    <propertyGroup caption=\"General\">\n        <propertyGroup caption=\"Data source\">\n            <property key=\"textAttribute\" type=\"attribute\" onChange=\"onChangeAction\" >\n                <caption>Attribute (path)</caption>\n                <description/>\n                <attributeTypes>\n                    <attributeType name=\"String\"/>\n                </attributeTypes>\n            </property>\n        </propertyGroup>\n        <propertyGroup caption=\"Label\">\n            <systemProperty key=\"Label\" />\n        </propertyGroup>\n        <propertyGroup caption=\"Editability\">\n            <systemProperty key=\"Editability\"/>\n        </propertyGroup>\n        <propertyGroup caption=\"Visibility\">\n            <systemProperty key=\"Visibility\"/>\n        </propertyGroup>\n        <propertyGroup caption=\"Validation\">\n            <property key=\"requiredMessage\" type=\"textTemplate\" required=\"false\">\n                <caption>Required message</caption>\n                <description/>\n                <translations>\n                    <translation lang=\"en_US\">A input text is required</translation>\n                </translations>\n            </property>\n        </propertyGroup>\n    </propertyGroup>\n    <propertyGroup caption=\"Common\">\n        <systemProperty key=\"Name\"/>\n        <systemProperty key=\"TabIndex\"/>\n    </propertyGroup>\n    <propertyGroup caption=\"Events\">\n        <propertyGroup caption=\"Events\">\n            <property key=\"onChangeAction\" type=\"action\" required=\"false\">\n                <caption>On change</caption>\n                <description/>\n            </property>\n        </propertyGroup>\n    </propertyGroup>\n</properties>\n```\n\n----------------------------------------\n\nTITLE: Configuring Document Generation Options in Mendix 9 Microflows\nDESCRIPTION: This code snippet outlines the various configuration options for the Generate Document activity in Mendix 9 microflows, including file output, language selection, document type, and template arguments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/generate-document.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### File\n\nThe name of the file document that will contain the generated document. It should be an object of entity *System.FileDocument* or its specialization.\n\n### Language\n\nThe language in which the titles and labels of the document should appear is described in the table below:\n\n| Option | Description |\n| --- | --- |\n| Current user *(default)*  | Use the language of the current user. |\n| Project default | Use the default language that is specified in the [App Settings](/refguide9/app-settings/). |\n| Variable | Use the language stored in the selected object, which must be of type *System.Language*. |\n\n### Document Type{#document-type}\n\nThe document type specifies the type of the generated document.\n\n| Option | Description |\n| --- | --- |\n| HTML | Generate a document in HTML format. |\n| PDF | Generate a document in PDF format. |\n| Word 2007 | Generate a document in Word 2007 format. |\n| Word 2003 | Generate a document in Word 2003 format. |\n| Rich-text format | Generate a document in Rich-text format. |\n| ODT | Generate a document in Open Office (ODT) format. |\n```\n\n----------------------------------------\n\nTITLE: Adding Closing XML Element Tag in Excel\nDESCRIPTION: Excel text string that adds the closing part of an XML element tag to country names. This string is placed in column C and copied down for all countries to prepare for XSD file creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"/>\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Date Calculation\nDESCRIPTION: Query that filters customers who registered in the past three years using YearLength calculation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[DateRegistered > '[%BeginOfCurrentDay%] - 3 * [%YearLength%]']\n```\n\n----------------------------------------\n\nTITLE: Linking to Desktop Recorder Documentation in Markdown\nDESCRIPTION: This snippet demonstrates how to create a link to the Desktop Recorder documentation using Markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n[Desktop Recorder](/appstore/partner-solutions/ats/rg-two-recorder/)\n```\n\n----------------------------------------\n\nTITLE: Installing npm Packages for Mendix Documentation\nDESCRIPTION: Command to install required Node.js packages for the local documentation repository\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Visibility Section Configuration for Drop-Down\nDESCRIPTION: This snippet links to the visibility properties for the drop-down widget, detailing how to control user access to certain options based on various visibility factors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Connecting Studio Pro Debugger to Cloud Environment\nDESCRIPTION: Detailed steps for connecting Mendix Studio Pro debugger to a remote cloud application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-microflows/debug-microflows-remotely.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\nStudio Pro > Run Menu > Connect Debugger > Select 'An app running in Mendix Cloud' > Enter URL and Password\n```\n\n----------------------------------------\n\nTITLE: Removing StorageInstance Finalizers in Kubernetes\nDESCRIPTION: Command to force remove a StorageInstance by patching its finalizers in Kubernetes, used when storage deprovisioning fails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nkubectl patch -n {namespace} storageinstance {name} --type json -p='[{\"op\": \"remove\", \"path\": \"/metadata/finalizers\"}]'\n```\n\n----------------------------------------\n\nTITLE: Preparing Project Configuration with Native Builder CLI\nDESCRIPTION: This snippet demonstrates the `prepare` command used with the Native Builder CLI to configure a Mendix native mobile app project. It includes parameters for project name, Java home, project path, mxbuild path, GitHub access token, App Center API token, App Center organization, runtime URL, app name, app identifier, and Mendix version.  The command sets up the GitHub repository and App Center projects for building the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/use-cli-docs/deploying-native-app-cli.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"native-builder.exe prepare --project-name CoolApp --java-home \\\"C:\\\\Program Files\\\\Java\\\\jdk-11.0.3\\\" --project-path \\\"Y:\\\\Documents\\\\Mendix\\\\CoolApp\\\\CoolApp.mpr\\\" --mxbuild-path \\\"C:\\\\Program Files\\\\Mendix\\\\8.6.0.715\\\\modeler\\\\mxbuild.exe\\\" --github-access-token b609183aa226a8c2d962700be7a387bd7776e986 --appcenter-api-token 440725eb1311ddfced62894a4d23fc90843370c7 --appcenter-organization \\\"cool-organization\\\" --runtime-url \\\"https://coolapp.mendixcloud.com\\\" --app-name \\\"My Cool App\\\" --app-identifier \\\"com.mendix.coolapp\\\" --mendix-version \\\"8.6.0\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing MPR Files with mx Command-Line Tool - Plaintext\nDESCRIPTION: Using the mx analyze-mpr command, users can extract detailed information about MPR files. This includes the ability to identify document types contributing significantly to file size. Options such as --big-string-threshold and --big-blob-threshold allow customization of what qualifies as 'big' data. The command requires mx.exe available from Studio Pro 10.17.0, and supports files from older versions of Studio Pro, like 9.24.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/analyze-mpr.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmx analyze-mpr TARGET-FILE [OPTIONS]\n```\n\n----------------------------------------\n\nTITLE: Fixing SameSite Cookie Policy in Mendix Studio Pro 8.11.1 - Markdown\nDESCRIPTION: This snippet details the changes made to the SameSite cookie policy in Mendix Studio Pro 8.11.1, correcting how the SameSite attribute is set based on the security of the connection. Its dependencies include adherence to recent browser cookie policies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.11.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* We fixed an issue regarding the `SameSite` cookie policy. Now if `addCookie` is called on `IMxRuntimeResponse`, the `SameSite` attribute is only set if the cookie is created with the attribute `Secure`.\n* <a id=\"104100\"></a> Besides any cookies coming from the Runtime, the client manages two particular cookies: `originURI` and a test cookie that is used to reliably determine whether cookies are enabled in the browser. In line with the stricter default value for the `SameSite` cookie attribute (as enforced by the latest versions of Google Chrome and upcoming versions of Mozilla Firefox), we now set the `SameSite` attribute to `None` and the `Secure` attribute to `true`, in case the app is being served over https. For apps served over http, there are no changes.\n```\n\n----------------------------------------\n\nTITLE: JSON Body for Updating Mendix Webhook\nDESCRIPTION: Example JSON request body for updating a webhook. It includes fields for name, URL, event types, active status, validation secret, and custom headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/webhooks-api.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"string\",\n  \"url\": \"https://some.domain.com/webhooks\",\n  \"eventTypes\": [\n    \"teamserver.push\"\n  ],\n  \"isActive\": true,\n  \"validationSecret\": \"PMJhiGo1nTL6wlNyZVFh5v9rLZdcLsG2O\",\n  \"headers\": [\n    {\n      \"key\": \"Authorization\",\n      \"value\": \"Beaerer DG4R4GT6R43\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Registering and Transforming Service Contracts Using Mendix API\nDESCRIPTION: This section covers manually registering OData contract metadata files by creating an .mda package, transforming dependencies, and using the Registration API. It requires Mendix Team Server for the initial package creation and transformation specs for the transformation operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/without-mendix-cloud.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Create an `.mda` package to deploy. To do this, go to the **Environments** page in the **Mendix Portal** and click **Create Package From Teamserver**. The `.mda` package contains a `dependencies.json` file that lists all published and consumed OData services.\n2. Use the [Transform](/apidocs-mxsdk/apidocs/registration-api/#transform-api) operation to transform the contents of `dependencies.json` into payloads for other operations (see the [Transform operation specs](http://datahub-spec.s3-website.eu-central-1.amazonaws.com/registration_v5.html#/Endpoints/post_transform_dependenciesjson)).\n3. Use the [Registration API](/apidocs-mxsdk/apidocs/registration-api/) to register the service.\n```\n\n----------------------------------------\n\nTITLE: Greater Than Comparison in Mendix\nDESCRIPTION: This snippet demonstrates the greater than relational expression in Mendix, which compares two numeric values and returns a Boolean value indicating whether the first value is greater than the second value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n```java\n4>3\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nTrue\n```\n```\n\n----------------------------------------\n\nTITLE: Executing Microflows in Java - Java\nDESCRIPTION: This snippet demonstrates how to execute a microflow named 'FormatString' from the 'MyFirstModule' using its proxy in a Java action. It also shows how to store the returned formatted string in an object's attribute and commit the object. It relies on importing the proxy for cleaner code.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/java-programming/java-api-tutorial.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nmyfirstmodule.proxies.microflows.Microflows.formatString(getContext(), \"this is an unformatted string\");\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport static myfirstmodule.proxies.microflows.Microflows.formatString;\n…\npublic class …\n…\nString formattedString = formatString(getContext(), \"this is an unformatted string\");\n…\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport static myfirstmodule.proxies.microflows.Microflows.formatString;\n…\npublic class …\n…\n// BEGIN USER CODE\nString formattedString = formatString(getContext(), \"this is an unformatted string\");\ntestObject.setTestString(context, formattedString);\nCore.commit(context, testObject.getMendixObject());\n// END USER CODE\n…\n```\n\n----------------------------------------\n\nTITLE: Trimming Whitespace from String in Java\nDESCRIPTION: Demonstrates the trim() function that removes spaces from beginning and end of a string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\ntrim(' this is my string     ')\n```\n\n----------------------------------------\n\nTITLE: OpenAI Deployed Model Configuration Fields Table\nDESCRIPTION: Table showing the required fields for configuring OpenAI deployed models in Mendix, including display name, deployment name, output/input modalities, and Azure API version specifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field      | Description                                                        |\n| -------------- | ------------------------------------------------------------ |\n| Display name | This is the reference to the model for app users in case they have to select which one is to be used. |\n| Deployment name / Model name | This is the technical reference for the model. For OpenAI this is equal to the [model aliases](https://platform.openai.com/docs/models#current-model-aliases). For Azure OpenAI this is the deployment name from the [Azure Portal](https://oai.azure.com/resource/deployments).\n| Output modality| Describes what the output of the model is. This connector currently supports Text, Embedding, and Image.\n| Input modality| Describes what input modalities are accepted by the model. This connector currently supports Text and Image.\n| Azure API version    | Azure OpenAI only. This is the API version to use for this operation. It follows the `yyyy-MM-dd` format. For supported versions, see [Azure OpenAI documentation](https://learn.microsoft.com/en-us/azure/ai-services/openai/reference). The supported versions can vary depending on the type of model, so make sure to look for the right section (such as Chat Completions, Image Generation, or Embeddings) on that page. |\n```\n\n----------------------------------------\n\nTITLE: Combining Paths for Efficient Querying in Mendix\nDESCRIPTION: Demonstrates avoiding path redundancy by efficiently combining paths in a query. Filters customers living in Rotterdam or Losdun, but should be optimized to avoid performance issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: StudioPro\nCODE:\n```\n[Sales.Customer_Address/Sales.Address/City = 'Rotterdam' or Sales.Customer_Address/Sales.Address/City = 'Losdun']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address/City = 'Rotterdam' or Sales.Customer_Address/Sales.Address/City = 'Losdun']\n```\n\n----------------------------------------\n\nTITLE: Git Configuration - custom merge driver\nDESCRIPTION: This code configures Git to use a custom merge driver for specific files. It modifies the .gitconfig file to specify a merge driver named \"custom\" that calls mx.exe to handle the merging process. This is useful for merging *.mpr files in Mendix projects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"[core]\n  attributesfile = ~/.gitattributes\n[merge \\\"custom\\\"]\n  name = custom merge driver for specific files\n  driver = [MX.EXE_PATH] merge %O %A %B\"\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for File Storage in Mendix Backups\nDESCRIPTION: This snippet illustrates the tree structure used for storing files in Mendix backups. Files are organized in a two-level directory structure based on the first four characters of their UUID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/backups/restore-backup.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n/tree\n   |---/[xx]\n          |---/[yy]\n                 |---/file\n```\n\n----------------------------------------\n\nTITLE: Promote Microflow Design\nDESCRIPTION: A microflow for handling employee promotions based on current level\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/testing-microflows-using-the-unittesting-module.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Microflow Design\nCODE:\n```\nMicroflow: Promote\nInputs: None\nOutput: Boolean\nSteps:\n- Create/Change employee\n- Change employee level\n- Validate promotion logic\n```\n\n----------------------------------------\n\nTITLE: Removing StorageInstance Finalizers in OpenShift\nDESCRIPTION: Command to force remove a StorageInstance by patching its finalizers in OpenShift, used when storage deprovisioning fails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\noc patch -n {namespace} storageinstance {name} --type json -p='[{\"op\": \"remove\", \"path\": \"/metadata/finalizers\"}]'\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Using XPath in Mendix\nDESCRIPTION: This XPath query retrieves all customers from the Customers entity. The '//' token indicates the start of an XPath query, followed by the entity name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n//Customers\n```\n\n----------------------------------------\n\nTITLE: Structuring Scroll Container in XML\nDESCRIPTION: Demonstrates the XML structure for a scroll container widget. Scroll containers enable scrolling for a specific part of a page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\tscrollable content\n</container>\n```\n\n----------------------------------------\n\nTITLE: Adding Dialog Cordova Plugin\nDESCRIPTION: This XML snippet configures the Cordova plugin for native dialog box functionality in the Mendix mobile app. It defines the plugin name (`cordova-plugin-dialogs`), source (`npm`), and version (`1.2.1`). This plugin is essential for the dialog feature of the Mobile Features widget to display info, warning, and error messages using native dialog boxes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/mobile-features.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<gap:plugin name=\"cordova-plugin-dialogs\" source=\"npm\" version=\"1.2.1\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Dependencies with Auto-Linking\nDESCRIPTION: To add a React Native dependency which supports auto-linking, add it to your package.json and run npm install. This mechanism links necessary native modules to the Android and iOS apps automatically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_7\n\nLANGUAGE: Bash\nCODE:\n```\nnpm i -s <dependency name>\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Markdown Image Configuration YAML Frontmatter\nDESCRIPTION: Defines metadata and routing information for the static image documentation page, including title, URL aliases, and documentation guidelines\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/static-image-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Static Image (Document Template)\"\nurl: /refguide8/static-image-document-template/\naliases:\n    - /refguide8/Static+Image+(document+template).html\n    - /refguide8/static-image-(document-template).html\n    - /refguide8/Static+Image+(document+template)\n    - /refguide8/static-image-(document-template)\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Find Checkbox Set Selector in Markdown\nDESCRIPTION: This code snippet defines the input parameters for the Find Checkbox Set Selector function using a markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/find-checkbox.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | -------- | ---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String  | Yes | The caption of the desired checkbox column.\nValue | String | Yes | The cell value of the checkbox row.\n```\n\n----------------------------------------\n\nTITLE: Database Query Functions Update - XPath and OQL\nDESCRIPTION: Changes to the weekday-from-dateTime XPath function and DATEPART(WEEKDAY) OQL function to return standardized values where 1 = Sunday and 7 = Saturday across all supported databases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.0.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\nweekday-from-dateTime\n```\n\nLANGUAGE: sql\nCODE:\n```\nDATEPART(WEEKDAY, ...)\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Building Apps on Windows\nDESCRIPTION: This snippet instructs how to install required dependencies for a Mendix native mobile app on a Windows machine, including a command to run npm install for setting up the project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally-manually.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Running Mendix Configuration Tool in Registry Migration Mode\nDESCRIPTION: Command to start the Mendix Configuration Tool in registry migration mode for exporting or importing Mendix components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-migrating.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmxpc-cli registry-migration\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for ATS Best Practices Page\nDESCRIPTION: YAML configuration block defining metadata for the ATS Best Practices documentation page including title, URL, weight, list settings and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"ATS Best Practices\"\nurl: /appstore/partner-solutions/ats/bp/\nweight: 4\nno_list: false\ndescription_list: true\ndescription: \"Presents ATS best practices for each ATS version.\"\n---\n```\n\n----------------------------------------\n\nTITLE: Querying Seconds from DateTime in XPath\nDESCRIPTION: This code snippet demonstrates how to utilize the seconds-from-dateTime() function to extract and evaluate the seconds portion of a Date and time attribute within a query. It specifically retrieves log entries that match a condition based on the seconds extracted from a DateAttribute. No external dependencies are required for this XPath function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[seconds-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Describing Teamserver Push Event Payload\nDESCRIPTION: This JSON snippet details the payload structure sent during a push event to the Mendix Git Team Server. The dependency is a configured webhook endpoint to process the payload. Key parameters include 'after', 'before', 'branchName', and 'commits', which record commit details and branch information. Inputs are the Git commit data, and outputs are in the form of process logs or follow-up API calls using this data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/webhooks.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"after\": \"4b76061182bf183281b5107cd753c6071ed00040\",\n  \"before\": \"0b9cb7a3e9a5ccfffa6c79435441999543ccb8c9\",\n  \"branchName\": \"main\",\n  \"commits\": [\n    {\n      \"authorDate\": \"2022-12-08T16:15:52+01:00\",\n      \"authorEmail\": \"uria.abrams@example.com\",\n      \"authorName\": \"Uria Abrams\",\n      \"id\": \"4b76061182bf183281b5107cd753c6071ed00040\",\n      \"mendixVersion\": \"9.20.2.1234\",\n      \"message\": \"Commit the changes\",\n      \"relatedStories\": [\n        {\n          \"id\": \"MS-1234\"\n        }\n      ]\n    }\n  ],\n  \"eventType\": \"teamserver.push\",\n  \"projectId\": \"9bcd62a6-9c19-4c7f-a5ae-49182c67f80f\",\n  \"repositoryType\": \"git\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Cloud Foundry Environment Variables for Mendix Constants in Bash\nDESCRIPTION: Example of how to set a Mendix constant value using Cloud Foundry environment variables via the CF CLI. The command shows the proper syntax for overriding a constant named 'MyConstant' in module 'MyModule' for an app named 'MyApp'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-development-considerations.md#2025-04-21_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ncf set-env MyApp MX_MyModule_MyConstant \"ABC123\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Objects Using Dataset OQL in Java\nDESCRIPTION: Java implementation for retrieving Mendix objects using OQL queries specified in a Dataset. Uses Core.createOQLTextGetRequestFromDataSet to get the OQL query and processes the results into Mendix objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic java.util.List<IMendixObject> executeAction() throws Exception\n{\n\t// BEGIN USER CODE\n\tILogNode logger = Core.getLogger(\"RetrieveDatasetOql\");\n\tList<IMendixObject> resultList = new ArrayList<IMendixObject>();\n\tIOQLTextGetRequest oqlGetRequest = Core.createOQLTextGetRequestFromDataSet(this.DataSetName);\n\tString oqlQuery = oqlGetRequest.getQuery();\n\tlogger.info(\"OQL: \" + oqlQuery);\n\tIDataTable resultDT = Core.retrieveOQLDataTable(getContext(), oqlQuery);\n\tint colCount = resultDT.getSchema().getColumnCount();\n\tresultDT.forEach(row -> {\n\t\tlogger.info(\"Row: \" + row.getValue(getContext(), 0));\n\t\tIMendixObject obj = Core.instantiate(getContext(), this.ResultEntity);\n\t\tfor (int i = 0; i < colCount; i++) {\n\t\t\tString colName = resultDT.getSchema().getColumnSchema(i).getName();\n\t\t\tObject colValue = row.getValue(getContext(), i);\n\t\t\tif (obj.hasMember(colName)) {\n\t\t\t\tobj.setValue(getContext(), colName, colValue);\n\t\t\t} else {\n\t\t\t\tlogger.info(String.format(\"Target entity %s does not have attribute named %s\", this.ResultEntity, colName));\n\t\t\t}\n\t\t}\n\t\tresultList.add(obj);\n\t});\n\treturn resultList;\n\t// END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Preparing Native Mobile App Configuration\nDESCRIPTION: Example command demonstrating how to update configuration parameters for a Mendix native mobile app build using the prepare command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-builder.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nprepare --project-name \"My Mendix Project\" --github-api-token \"\" <the arguments to update with new values>\n```\n\n----------------------------------------\n\nTITLE: Introducing xPathConstraintCaption Property in AccessRule Element\nDESCRIPTION: A new property 'xPathConstraintCaption' has been added to the AccessRule element in the DomainModels module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.5.md#2025-04-21_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n#### AccessRule (Element)\n\n* We introduced the `xPathConstraintCaption` property.\n```\n\n----------------------------------------\n\nTITLE: Pre-processing Java Action for Random Forest ML Model\nDESCRIPTION: A Java Action that converts Iris dataset input to a Base64 encoded float array for ML model input, handling data type conversion and encoding\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/using-ml-kit/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@java.lang.Override\n    public IMendixObject executeAction() throws Exception \n    {\n      this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.Iris.initialize(getContext(), __Parameter);\n    \n      // BEGIN USER CODE\n      // 1. convert entity object to float array\n      float[] inputFeature = new float[4];\n      inputFeature[0] = Parameter.getsepalLength().floatValue();\n      inputFeature[1] = Parameter.getsepalWidth().floatValue();\n      inputFeature[2] = Parameter.getpetalLength().floatValue();\n      inputFeature[3] = Parameter.getpetalWidth().floatValue();\n      // 2. convert input feature array to base 64\n      InputStream is = MLKit.toInputStream(inputFeature);\n      String base64 = MLKit.toBase64(is);\n      // 3. create output entity object\n      IMendixObject outputObject = Core.instantiate(getContext(), \"Iris_RandomForest.ML_Input_Entity_Iris_RF_ML_Model\");\n      outputObject.setValue(getContext(), \"Float_input\", base64);\n      return outputObject;\n      // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Defining Design Property in settings-native.json\nDESCRIPTION: This JSON snippet defines a design property named \"Group box style\" for the `com.mendix.widget.native.groupbox.GroupBox` widget. It allows developers to select a pre-defined style (Success, Warning, or Danger) from a dropdown menu in Studio Pro. The selected style applies a specific class to the group box widget, influencing its appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_50\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"Group box style\",\n    \"type\": \"Dropdown\",\n    \"description\": \"Style of the group box.\",\n    \"options\": [\n        {\n            \"name\": \"Success\",\n            \"class\": \"groupBoxSuccess\"\n        },\n        {\n            \"name\": \"Warning\",\n            \"class\": \"groupBoxWarning\"\n        },\n        {\n            \"name\": \"Danger\",\n            \"class\": \"groupBoxDanger\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Access Rules for Geolocation Attributes in JSON\nDESCRIPTION: This snippet defines the access rules for various geolocation attributes using a JSON structure. It specifies 'ReadWrite' access for attributes like Timestamp, Latitude, Longitude, and more. The entities are linked to a module role 'NanoflowCommons.User'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"accessRules\": [\n    {\n      \"$ID\": \"99a614ef-2400-43ad-976d-b709f348aae2\",\n      \"$Type\": \"DomainModels$AccessRule\",\n      \"memberAccesses\": [\n        {\n          \"$ID\": \"ce874fbc-8682-461f-a403-a5595d4f1072\",\n          \"$Type\": \"DomainModels$MemberAccess\",\n          \"attribute\": \"NanoflowCommons.Geolocation.Timestamp\",\n          \"association\": \"\",\n          \"accessRights\": \"ReadWrite\"\n        }\n        // Other attributes follow the same pattern\n      ],\n      \"moduleRoles\": [\n        \"NanoflowCommons.User\"\n      ],\n      \"allowCreate\": true,\n      \"allowDelete\": true,\n      \"defaultMemberAccessRights\": \"ReadWrite\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Copying FileDocuments Between GenericObjects in Java\nDESCRIPTION: This Java snippet describes how to copy `Attachments` from one `GenericObject` to another using the Mendix Runtime. The method `getAttachments` retrieves a list of `IMendixObjects` associated with a `GenericObject`, allowing for the copying of each attachment using an InputStream and storing it in a newly created `Attachment` linked to the destination object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/java-api-tutorial.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic static List<IMendixObject> getAttachments(GenericObject object, IContext context) throws CoreException\n{\n\tString attachmentEntityName = Attachment.entityName;\n\tString relationName = Attachment.MemberNames.Attachment_GenericObject.toString();\n\tString currentObjectID = object.getGUID();\n\tString query = String.format(\"//%s[%s=$currentid]\", attachmentEntityName, relationName);\n\treturn Core.createXPathQuery(query)\n\t\t.setVariable(\"currentid\", currentObjectID)\n\t\t.execute(context);\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nAttachment newAttachment;\nInputStream inputStream;\nfor (IMendixObject iMendixObject: getAttachments(sourceObject, context))\n{\n\tinputStream = Core.getFileDocumentContent(iMendixObject);\n\tnewAttachment = Attachment.create(context);\n\tnewAttachment.setAttachment_GenericObject(destinationObject);\n\tCore.storeFileDocumentContent(context, newAttachment.getMendixObject(), (String) iMendixObject.getValue(system.proxies.Document.MemberNames.Name.toString()),  inputStream);\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing OQL Query Execution in Java\nDESCRIPTION: Java code that executes an OQL query, creates objects of specified entity type, and maps query results to object attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic java.util.List<IMendixObject> executeAction() throws Exception\n{\n// BEGIN USER CODE\n    List<IMendixObject> resultList = new ArrayList<IMendixObject>();\n    IDataTable resultDT = Core.retrieveOQLDataTable(getContext(), this.OqlQuery);\n    int colCount = resultDT.getSchema().getColumnCount();\n    // Loop through records, add to mendix object list\n    resultDT.forEach(row -> {\n        // instantiate mendix object as specified by ResultEnitity parameter\n        IMendixObject obj = Core.instantiate(getContext(), this.ResultEntity);\n        for (int i = 0; i < colCount; i++) {\n            // get column name\n            String colName = resultDT.getSchema().getColumnSchema(i).getName();\n            // get column value\n            Object colValue = row.getValue(getContext(), i);\n            if(obj.hasMember(colName)) {\n                // set result object value\n                obj.setValue(getContext(), colName, colValue);\n            } else {\n                logger.info(String.format(\"Target entity does not have attribute named %s\",colName));\n            }\n        }\n        resultList.add(obj);\n    });\n    return resultList;\n// END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Email Notifications in Snowflake SQL\nDESCRIPTION: SQL template for setting up email notifications for failed task executions using Snowflake's notification integration and alert system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/mendix-data-loader.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nCREATE DATABASE IF NOT EXISTS <db name>;\n\nCREATE SCHEMA IF NOT <schema name>;\n\nUSE SCHEMA <schema name>;\n\nCREATE OR REPLACE NOTIFICATION INTEGRATION <NOTIFICATION INTEGRATION name>\n  TYPE = EMAIL\n  ENABLED = TRUE\n  ALLOWED_RECIPIENTS = ('<mail1@company.com>', '<mail2@company.com>', ...);\n\nCREATE OR REPLACE ALERT <ALERT name>\n  WAREHOUSE = <warehouse name>\n  SCHEDULE = '<integer> MINUTE' -- Or use CRON e.g. 15 * * * * UTC\n  IF (\n    EXISTS (\n      SELECT 1\n      FROM SNOWFLAKE.ACCOUNT_USAGE.TASK_HISTORY\n      WHERE (STATE = 'FAILED' OR STATE = 'FAILED_AND_AUTO_SUSPENDED') AND NAME = '<task name>'\n        AND SCHEDULED_TIME >= CONVERT_TIMEZONE('UTC',DATEADD(MINUTE, -<integer>, CURRENT_TIMESTAMP()))\n    )\n  )\n  THEN CALL SYSTEM$SEND_EMAIL(\n    '<NOTIFICATION INTEGRATION name>',\n    ('<mail1@company.com>', '<mail5@company.com>', ...) --Subset of ALLOWED_RECIPIENTS in NOTIFICATION INTEGRATION. \n    '<Mail subject>',\n    '<Mail Body>.'\n  );\n\nALTER ALERT <ALERT name> RESUME; -- The ALERT has STATE Suspended when created and is started by this statement\n\nSHOW ALERTS;\n```\n\n----------------------------------------\n\nTITLE: Multiple Y Axes Configuration (JSON)\nDESCRIPTION: This snippet demonstrates how to configure multiple Y axes in a chart. It allows you to define separate titles, colors, grid settings, and line visibility for each Y axis. The `overlaying` property is used to overlay the second Y axis on the first, and the `side` property determines its position.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"title\": \"Y-axis 1\",\n    \"zeroline\": true,\n    \"color\": \"#4682B4\",\n    \"showgrid\": true,\n    \"showline\": true\n  },\n  \"yaxis2\": {\n    \"title\": \"Y-axis 2\",\n    \"color\": \"#FF8C00\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"zeroline\": true,\n    \"overlaying\": \"y\",\n    \"side\": \"right\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing mx show-app-version Command in Shell\nDESCRIPTION: The `mx show-app-version` command displays the version information of a solution from both the publisher and consumer-side perspectives. It requires an MPR-FILE as input and supports options like `--based-on` for additional details. The command relies on exit codes to indicate success or specific errors, dependent on parameters like the solution's distribution status and version format. Ensure the MPR-FILE is correctly specified and use options as needed for detailed output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/adaptable.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmx show-app-version MPR-FILE [OPTIONS]\n```\n\nLANGUAGE: shell\nCODE:\n```\nmx show-app-version C:\\MyApp\\MyApp.mpr\n```\n\nLANGUAGE: shell\nCODE:\n```\nmx show-app-version C:\\MyApp\\MyApp.mpr -b\n```\n\n----------------------------------------\n\nTITLE: Parsing and Structuring JSON Output from 'mx dump-mpr'\nDESCRIPTION: The sample JSON output exemplifies the structured result of an 'mx dump-mpr' execution with a unit type filter on domain models. It includes units with detailed attributes such as ID, type, and storage information. This representation is crucial for understanding the metadata and structure within a Mendix project. The sample assumes familiarity with JSON handling and Mendix domain concepts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"units\": [        \n        {\n    \"$ID\": \"c67c5271-da7d-45f1-81df-ceb6946b8abe\",\n    \"$Type\": \"DomainModels$DomainModel\",\n    \"$ContainerID\": \"ff1f3392-a281-4fb9-b7a8-9cc9c5267a37\",\n    \"$ContainerProperty\": \"domainModel\",\n    \"entities\": [\n        {\n            \"$ID\": \"dd8d5828-d9a2-42b3-b48c-3641e2d72a45\",\n            \"$Type\": \"DomainModels$Entity\",\n            \"$QualifiedName\": \"NanoflowCommons.Geolocation\",\n            \"generalization\": {\n                \"$ID\": \"f3c8d2bc-d02f-4fc6-a726-a17dc89bf8d5\",\n                \"$Type\": \"DomainModels$NoGeneralization\",\n                \"hasChangedDate\": false,\n                \"hasCreatedDate\": false,\n                \"hasOwner\": false,\n                \"hasChangedBy\": false,\n                \"persistable\": false\n            },\n            \"attributes\": [\n                {\n                    \"$ID\": \"76c41318-8e4f-4619-b4de-c99b8371086e\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Timestamp\",\n                    \"type\": {\n                        \"$ID\": \"74563b78-b6bc-4cc3-8a67-ad284654be72\",\n                        \"$Type\": \"DomainModels$DateTimeAttributeType\",\n                        \"localizeDate\": true\n                    },\n                    \"value\": {\n                        \"$ID\": \"d73b03ba-72c2-4fbd-bda3-e89e3a7c6699\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Timestamp\",\n                    \"dataStorageGuid\": \"2b1e641a-3313-4bf3-9c4a-19e5437d3409\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"492dc560-1bc8-436d-b4c0-3e344f1d384c\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Latitude\",\n                    \"type\": {\n                        \"$ID\": \"7407521a-9479-4c38-b6d3-28cb7298303a\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"eb9e1f21-dfb9-4772-925e-07bb3335823c\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Latitude\",\n                    \"dataStorageGuid\": \"be684b6d-d0d6-42df-a4e4-3117ace70c97\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"2517de87-2a92-4189-98cd-ea5a9ea4161a\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Longitude\",\n                    \"type\": {\n                        \"$ID\": \"039b1e07-1024-4543-aa0d-7c84d5320172\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"7c79894f-b2bb-48b6-88c8-4de78f2d61f1\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Longitude\",\n                    \"dataStorageGuid\": \"3a2391ec-6607-4f2a-84af-f36b34e3435b\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"7f31f59e-a02f-4fa7-b715-739bcd513821\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Altitude\",\n                    \"type\": {\n                        \"$ID\": \"5dbe0124-143a-45e3-bf54-f2aa088a07f5\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"1470981a-42fe-41d8-96e8-bd0f98e003bd\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Altitude\",\n                    \"dataStorageGuid\": \"8bc8ac7e-9413-4be8-8512-30825bf60058\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"6aa5d61c-64b7-4342-a548-36fb2f72424c\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Accuracy\",\n                    \"type\": {\n                        \"$ID\": \"102b81b7-6d07-48e9-ba4d-9078c6a0ab82\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"a9d43190-bd39-45cc-8af2-c1b42d208fbd\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Accuracy\",\n                    \"dataStorageGuid\": \"c74a4d63-4b25-4fa4-b26b-46275a72a575\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"c758d8e2-e02d-49c2-85a5-9b72f85856cd\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.AltitudeAccuracy\",\n                    \"type\": {\n                        \"$ID\": \"c1facf7b-007c-4285-802e-ca9d276c18c9\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"8baea155-12f3-47fe-9020-a38c68e7be71\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"AltitudeAccuracy\",\n                    \"dataStorageGuid\": \"7b261047-8ca4-4cfa-b15f-0ea536236b69\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"f8f015d2-8283-43ac-acd7-0e29f7232a88\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Heading\",\n                    \"type\": {\n                        \"$ID\": \"14b984c9-f616-4388-9c4e-4977119250f2\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"ff34b2c7-8b40-4bd7-9b6c-ab310dc34dcd\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Heading\",\n                    \"dataStorageGuid\": \"582cf720-77eb-433e-8a00-dc8bcf948a35\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                },\n                {\n                    \"$ID\": \"57a6ac27-c094-4e5c-8d54-2d0542f97d60\",\n                    \"$Type\": \"DomainModels$Attribute\",\n                    \"$QualifiedName\": \"NanoflowCommons.Geolocation.Speed\",\n                    \"type\": {\n                        \"$ID\": \"f7f16635-0414-4bc5-b9a1-dd56391ab2b3\",\n                        \"$Type\": \"DomainModels$StringAttributeType\",\n                        \"length\": 200\n                    },\n                    \"value\": {\n                        \"$ID\": \"a9c60765-0a11-430f-b6be-f261a92b9373\",\n                        \"$Type\": \"DomainModels$StoredValue\",\n                        \"defaultValue\": \"\"\n                    },\n                    \"name\": \"Speed\",\n                    \"dataStorageGuid\": \"028e79f2-5dbe-4563-b4bc-100d771f2550\",\n                    \"documentation\": \"\",\n                    \"exportLevel\": \"Hidden\"\n                }\n            ],\n\n```\n\n----------------------------------------\n\nTITLE: Test Case Dependency Example - Create and Delete Expense\nDESCRIPTION: Shows a scenario where one test case creates an expense with random values and another test case attempts to delete it, demonstrating an undesirable test case dependency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-two/bp-two-test-case-dependencies.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTC.01 - Create New Expense:\n- Creates new expense\n- Uses random number for Amount\n- Uses random string for Description\n\nTC.02 - Delete Expense:\n- Attempts to delete expense\n- Requires Description value from TC.01\n```\n\n----------------------------------------\n\nTITLE: Setting OData-Version Header in Published OData 4 Services\nDESCRIPTION: A missing OData-Version header was added to the response of calls to the metadata document and service document of published OData 4 services. This resolved an error when importing the OData feed into SAP.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.12.md#2025-04-21_snippet_3\n\nLANGUAGE: HTTP\nCODE:\n```\nOData-Version: 4.0\n```\n\n----------------------------------------\n\nTITLE: Combining Constraints Using XPath in Mendix\nDESCRIPTION: This snippet illustrates how to combine multiple XPath constraints using logical operators 'AND' and 'OR' to filter orders based on their status and minimum total price simultaneously. It provides the required XPath expressions for each case of combination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_3\n\nLANGUAGE: XPath\nCODE:\n```\n[OrderStatus = 'Open'] or [TotalPrice >= 50]\n```\n\nLANGUAGE: XPath\nCODE:\n```\n[OrderStatus = 'Open'] and [TotalPrice >= 50]\n```\n\n----------------------------------------\n\nTITLE: Customizing Discovery Handler for Multiple IdPs in Java\nDESCRIPTION: Instructions for customizing the DiscoveryHandler.java file to support multiple Identity Providers (IdPs) in a SAML SSO setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/advanced_configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Find the template saml2-discovery-binding.vm and add your customization\n```\n\n----------------------------------------\n\nTITLE: Adding Status Bar Cordova Plugin\nDESCRIPTION: This XML snippet configures the Cordova plugin for customizing the status bar in the Mendix mobile app. It specifies the plugin name (`cordova-plugin-statusbar`), source (`npm`), and version (`2.1.3`). This plugin allows setting the text color and background of the status bar for a native mobile experience.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/mobile-features.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<gap:plugin name=\"cordova-plugin-statusbar\" source=\"npm\" version=\"2.1.3\" />\n```\n\n----------------------------------------\n\nTITLE: Customizing List Views in Mendix\nDESCRIPTION: CSS classes for styling list view widgets with different borders, striping, and spacing options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_5\n\nLANGUAGE: CSS\nCODE:\n```\nlistview-lined\nlistview-striped\nlistview-seperated\nlistview-stylingless\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets with kubectl\nDESCRIPTION: This command creates the Kubernetes secrets from the `mendix-app-secrets.yaml` file, making the sensitive information available to the application deployed in the cluster.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nkubectl create -f mendix-app-secrets.yaml\n```\n```\n\n----------------------------------------\n\nTITLE: Using XPath length() function to filter data in Mendix\nDESCRIPTION: This query uses the length() function to filter customers based on the length of their FirstName attribute. It returns all customers whose FirstName contains 5 or more characters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-length.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[length(FirstName) >= 5]\n```\n\n----------------------------------------\n\nTITLE: Adding Security Context Constraints for Promtail\nDESCRIPTION: Command to create a SecurityContextConstraints resource allowing Promtail to access container logs. This grants the necessary privileges for Promtail to read logs from all containers on OpenShift nodes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\nPROJECT={project}\ncat <<EOF | oc apply -f -\napiVersion: security.openshift.io/v1\nkind: SecurityContextConstraints\nmetadata:\n  name: loki-promtail\nallowHostDirVolumePlugin: true\nallowHostIPC: false\nallowHostNetwork: false\nallowHostPID: false\nallowHostPorts: false\nallowPrivilegeEscalation: true\nallowPrivilegedContainer: true\nallowedCapabilities: []\ndefaultAddCapabilities: []\nfsGroup:\n  type: RunAsAny\ngroups: []\npriority: null\nreadOnlyRootFilesystem: true\nrequiredDropCapabilities: \n- ALL\nrunAsUser:\n  type: RunAsAny\nseLinuxContext:\n  type: MustRunAs\nsupplementalGroups:\n  type: RunAsAny\nforbiddenSysctls:\n- '*'\nusers:\n- system:serviceaccount:${PROJECT}:loki-promtail\nvolumes:\n- 'configMap'\n- 'secret'\n- 'hostPath'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Starting Weinre Debugger with Command Line Parameters\nDESCRIPTION: Command to start the weinre debugger with specific host and port parameters. The boundHost should be set to your local IP address, and httpPort should be set to avoid conflicts with the application port (typically 8080).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/debug-a-hybrid-mobile-application.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nweinre --boundHost 1.2.3.4 --httpPort 9090\n```\n\n----------------------------------------\n\nTITLE: Initializing Firebase in index.html - HTML\nDESCRIPTION: This snippet initializes Firebase in the `index.html` file. It includes the necessary Firebase scripts and configuration. The `firebaseConfig` object needs to be replaced with your actual Firebase project configuration details, obtained from the Firebase console. This initialization is crucial for the PWA to interact with Firebase for push notifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/notif-implement-pwa.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n\"<script src=\\\"https://www.gstatic.com/firebasejs/10.11.0/firebase-app-compat.js\\\"></script>\\n<script src=\\\"https://www.gstatic.com/firebasejs/10.11.0/firebase-messaging-compat.js\\\"></script>\\n<script>\\nconst firebaseConfig = {\\n  apiKey: \\\"...\\\",\\n  authDomain: \\\"...\\\",\\n  projectId: \\\"...\\\",\\n  storageBucket: \\\"...\\\",\\n  messagingSenderId: \\\"...\\\",\\n  appId: \\\"...\\\"\\n};\\nfirebase.initializeApp(firebaseConfig);\\n</script>\"\n```\n\n----------------------------------------\n\nTITLE: Layout Platform Selection Configuration\nDESCRIPTION: Snippet demonstrating layout platform selection options in Mendix, including Web and Native platforms\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/page-resources/layout/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nPlatform:\n* Web *(default)* – browser or hybrid mobile app\n* Native – native mobile app pages\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Dependencies\nDESCRIPTION: This command installs all dependencies listed in the package.json file of the project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Finding AutoComplete Input Element with jQuery\nDESCRIPTION: This code snippet uses jQuery to locate the input element within the AutoComplete widget's dropdown container. It demonstrates how to construct a selector for finding the desired element in the DOM.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-10-autocomplete.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n$( '.select2-container .select2-search input' )\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Module Role Visibility Settings\nDESCRIPTION: A markdown table detailing the different visibility options available for module roles in Mendix widgets. It describes three visibility settings: Applicable roles, All roles, and Selected roles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| Value             | Description                                                  |\n| ----------------- | ------------------------------------------------------------ |\n| Applicable roles  | The widget is visible if access rules allow it (for example if the user that is signed in has a role for which the target is set to be visible/accessible). |\n| All roles         | The widget is always visible. |\n| Selected roles    | This setting will render the widget as invisible to all users that are not linked to one of the selected user roles. |\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Quantifier Example {m,n}\nDESCRIPTION: This example showcases the use of the `{m,n}` quantifier in regular expressions. It specifies that the preceding element should occur at least *m* times and not more than *n* times. In this case, 'a{3,5}' matches 'aaa', 'aaaa', and 'aaaaa'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: regex\nCODE:\n```\n\"a{3,5}\"\n```\n\n----------------------------------------\n\nTITLE: Running Configuration Tool with Custom Registry\nDESCRIPTION: Command to run the Mendix Configuration Tool with a custom registry URL and repository for creating a new Mendix for Private Cloud cluster and namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-migrating.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmxpc-cli --registry {registry_url}/{repository}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Toggle Grid Selector Checkbox Value in Markdown\nDESCRIPTION: This snippet defines a table of input parameters for the 'Toggle Grid Selector Checkbox Value' action. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/grid-selector/rg-one-toggle-grid-selector-checkbox-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | -------- | ---------------\nWidget Name | String | Yes | The name of the Grid Selector widget.\nColumn Caption | String | Yes | The column caption of the checkbox cell you want to toggle.\nRow Caption | String | Yes | The row caption of the checkbox cell you want to toggle.\n```\n\n----------------------------------------\n\nTITLE: Writing an NFC Tag with NFC Tools\nDESCRIPTION: This snippet describes the process to write text to an NFC tag using NFC Tools app, including necessary preconditions and step-by-step instructions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Install the NFC Tools app on your device.\n1. Open the NFC Tools app.\n1. Scan your tag. The **Technologies available** section should state it supports *Ndef*. The **Writeable** section should show **Yes**.\n1. Tap **WRITE**, tap **Add a record**, and tap **Text**.\n1. Enter the text *Hello Mendix Developer!* and tap **OK**.\n1. Tap **Write / 30 Bytes**.\n1. Scan your tag. You will see a **Write complete** dialog box.\n```\n\n----------------------------------------\n\nTITLE: Configuring Before Commit Event Handler in Mendix\nDESCRIPTION: Example configuration for setting up a Before Commit (BCo) event handler in Mendix to create audit snapshots. This configuration shows how to properly set up the event handler with parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/advanced-audit-trail/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/appstore/platform-supported-content/modules/advanced-audit-trail/example.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Image Entity in Domain Model\nDESCRIPTION: Steps to create a custom image entity by inheriting from System.Image, enabling image upload functionality in a Mendix application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/image-uploader.md#2025-04-21_snippet_0\n\nLANGUAGE: domain-model\nCODE:\n```\n1. Create new entity\n2. Open entity properties\n3. Select System.Image as Generalization\n4. Set data view data source to new image entity\n5. Add Image Uploader widget inside data view\n```\n\n----------------------------------------\n\nTITLE: Styling Checkbox Widget in JavaScript for Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for a checkbox widget in Mendix native mobile apps. It includes properties for both switch and checkbox render modes, allowing customization of container, label, input, and validation message styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Checkbox = {\n  container: {\n    // All ViewStyle properties\n  },\n  containerDisabled: {\n    // All ViewStyle properties. Same properties as `container`. Overrides `container` styles if the text box is non-editable.\n  },\n  label: {\n    // This has all TextStyle properties.\n    numberOfLines: 1 // The maximum number of lines to wrap the label text. If the text is any longer it will be cut off with an ellipsis.\n  },\n  labelDisabled: {\n    // Same properties as `label`. Overrides `label` styles if the checkbox is non-editable.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n\n  // The following properties are only used for the render mode: Switch\n  input: {\n    // All ViewStyle properties.\n    trackColorOn: null, // Custom color for the switch track when turned on.\n    trackColorOff: null, // Custom color for the switch track when turned off.\n    thumbColorOn: null, // Color of the foreground switch grip when turned on. If this is set on iOS, the switch grip will lose its drop shadow.\n    thumbColorOff: null, // Color of the foreground switch grip when turned off. If this is set on iOS, the switch grip will lose its drop shadow.\n  },\n  inputError: {\n    // This has the same properties as `input`. Overrides `input` styles if there are validation errors.\n  },\n  inputDisabled: {\n    // This has the same properties as `input`. Overrides `input` styles if the checkbox is non-editable.\n  },\n  \n  // The following properties are only used for the render mode: Checkbox\n  checkboxInput: {\n    // This has all ViewStyle properties.\n    // Render mode: Checkbox.\n    color: null, // Custom color for the tick icon.\n    size: null, // Custom size for the tick icon.\n  },\n  checkboxInputDisabled: {\n    // This has the same properties as `checkboxInput`. Overrides `checkboxInput` styles if the checkbox is non-editable.\n  },\n  checkboxInputError: {\n    // This has the same properties as `checkboxInput`. Overrides `input` styles if there are validation errors.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Obtaining Debugger Credentials in Private Cloud\nDESCRIPTION: Steps to enable and retrieve debugger credentials for Mendix applications deployed in Private Cloud\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-microflows/debug-microflows-remotely.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nOpen Apps > Environments > Details > Debugger Tab > Enable Debugger\n```\n\n----------------------------------------\n\nTITLE: ATS Data Types Reference Table\nDESCRIPTION: Markdown table showing different data types supported in ATS, including text, number, boolean, and deprecated types like Date/Time, Float, and Currency. Each type is described with examples.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/custom-action-general/guidelines-custom-action.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Data Type | Description | Examples |\n| :--- | :--- | :--- |\n| Text | A piece of text that can contain letters, numbers, spaces, and other characters. | \"ATS123\", \"Helloworld!\" |\n| Number | A whole number. | 123, 4423 |\n| Boolean | A truth value. | true, false |\n| Date/Time | ⚠ The Date/Time type is deprecated and should not be used. | N/A |\n| Page Element | Represents a DOM element. | (See the image below this table.)|\n| Any | Lets the user choose the data type. | Choose String for \"Helloworld!\" |\n| Drop-Down | One of the values of the given drop-down menu. | Red, Green, Blue; Todo, Running, Done |\n| Float | ⚠ The Float type is deprecated and should not be used. | N/A |\n| Currency | ⚠ The Currency type is deprecated and should not be used. | N/A |\n```\n\n----------------------------------------\n\nTITLE: Downloading and Configuring Mendix Pipeline Package\nDESCRIPTION: Commands to download the Mendix pipeline package, add specific Mendix versions and runtime images, and push them to the private registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/private-cloud-tekton-airgap.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmkdir pipeline && cd pipeline\naip init https://cdn.mendix.com/mendix-for-private-cloud/airgapped-image-package/packages/pipeline-package-v1.0.5.json\naip pull\n\naip addimage mxbuild8.18.11 private-cloud.registry.mendix.com/mxbuild:8.18.11.27969\naip addimage runtime8.18.11 private-cloud.registry.mendix.com/app-building-blocks:runtime-8.18.11.27969\naip addimage ubi8-1-java11 private-cloud.registry.mendix.com/app-building-blocks:ubi8-1-jre11-entrypoint\n\naip addimagesquery private-cloud.registry.mendix.com/mxbuild '^8.18.*'\naip addimagesquery private-cloud.registry.mendix.com/app-building-blocks '^runtime-8.18.*$'\n\naip addimagesquery private-cloud.registry.mendix.com/app-building-blocks '^ubi\\d+-\\d-jre\\d+-entrypoint$'\n\naip pull\n\naip set-base-destination myprivate.registry.com\n\naip login -u user -p mypassword myprivate.registry.com\naip push\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Merge Driver in config File\nDESCRIPTION: This INI snippet configures a custom merge driver named \"custommpr\" for Mendix project files (*.mpr). It defines the driver command using `mx.exe` and specifies parameters for base, mine, theirs, base commit, mine commit, and theirs commit revisions. Replace `[MX.EXE_PATH]` with the actual path to your *mx.exe* file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_7\n\nLANGUAGE: INI\nCODE:\n```\n[merge \"custommpr\"]\n    name = custom merge driver for MPR files\n    driver = [MX.EXE_PATH] git-merge %O %A %B %S %X %Y\n```\n\n----------------------------------------\n\nTITLE: Basic XPath Entity Query\nDESCRIPTION: Demonstrates the basic query syntax to retrieve all customers using double forward slashes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n//Customers\n```\n\n----------------------------------------\n\nTITLE: Running npm install for Hybrid App Dependencies\nDESCRIPTION: Command to install dependencies for the hybrid app, which also checks the globally installed PhoneGap version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/hybrid-app.md#2025-04-21_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Defining ListWidgetValue Interface in TypeScript\nDESCRIPTION: Defines the ListWidgetValue interface representing a widget property linked to a data source, allowing rendering of child widgets with items from a ListValue.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ListWidgetValue {\n    get: (item: ObjectItem) => ReactNode;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Alert Component with Accessibility in TypeScript\nDESCRIPTION: This code snippet defines an Alert component that supports different alert styles and includes an 'id' property for accessibility. Dependencies include React and classNames. This component can be used to display validation messages tied to input fields.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nimport { FunctionComponent, createElement } from \"react\";\nimport classNames from \"classnames\";\nexport interface AlertProps {\n    id?: string;\n    alertStyle?: \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\";\n    className?: string;\n}\nexport const Alert: FunctionComponent<AlertProps> = ({ alertStyle, className, children, id }) =>\n    children ? (\n        <div id={id} className={classNames(`alert alert-${alertStyle} mx-validation-message`, className)}>\n            {children}\n        </div>\n    ) : null;\nAlert.displayName = \"Alert\";\nAlert.defaultProps = { alertStyle: \"danger\" };\n```\n\n----------------------------------------\n\nTITLE: Sample Script - Update the Mendix Runtime - PowerShell\nDESCRIPTION: This script updates the Mendix Runtime version for the application by downloading the specified version and extracting it into the server distribution folder. It clarifies that the existing app can remain running during this update process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_7\n\nLANGUAGE: PowerShell\nCODE:\n```\n# download Mendix Runtime\nwget https://cdn.mendix.com/runtime/mendix-{<major>.<minor>.<patch>.<build>}.tar.gz -OutFile {<target folder for the downloaded file>}\\mendix-{<major>.<minor>.<patch>.<build>}.gz\n\n# extract Mendix Platform into the distribution folder\nInstall-MxServer -LiteralPath {<target folder for the downloaded file>}\\mendix-{<major>.<minor>.<patch>.<build>}.gz\n```\n\n----------------------------------------\n\nTITLE: Creating Additional Style Classes for Group Box Widget\nDESCRIPTION: This JavaScript snippet defines three additional style classes (success, warning, danger) for the Group Box widget based on brand colors. Each style class customizes container border color, header background color, and text color.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nexport const groupBoxSuccess = {\n    container: {\n        borderColor: brand.success\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.success)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n\nexport const groupBoxWarning = {\n    container: {\n        borderColor: brand.warning\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.warning)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n\nexport const groupBoxDanger = {\n    container: {\n        borderColor: brand.danger\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.danger)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Client Certificate Configuration in HttpConfiguration\nDESCRIPTION: Introduces a new property to specify a client certificate identifier for HTTP configurations in Mendix SDK 8.18\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.18.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nclientCertificate: <certificate_identifier>\n```\n\n----------------------------------------\n\nTITLE: Password Text Box Alert Syntax\nDESCRIPTION: Markdown syntax for displaying a warning alert about Password Text Box widget compatibility with native mobile pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}The **Password text box** widget is not supported on native mobile pages.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Update Mendix Operator Configuration with Custom CA\nDESCRIPTION: This snippet updates the Mendix Operator configuration with the custom CA certificate. It creates a Kubernetes secret named `mendix-custom-ca` from the `custom.crt` file, then patches the `mendix-operator-configuration` to trust the custom CA.  It requires the `kubectl` command-line tool and assumes that you have the necessary permissions to modify Kubernetes resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# update operator configuration\n# please switch kubeconfig file if PMP cluster is different with app cluster.\nexport namespace=YOUR_PMP_NAMESPACE\nkubectl -n ${namespace} create secret generic mendix-custom-ca --from-file=custom.crt=custom.crt\necho -e \"spec:\\n trust:\\n    customCASecretName: mendix-custom-ca\" > patchfile\nkubectl -n ${namespace} patch operatorconfiguration mendix-operator-configuration --type merge --patch-file patchfile\n```\n\n----------------------------------------\n\nTITLE: Batch File for Automated Selenium Grid Setup\nDESCRIPTION: Windows batch script to automate the startup of both Selenium Hub and Node with proper configurations and timing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nstart /B java -jar C:\\Selenium\\selenium-server-standalone-3.8.1.jar -role hub -hubConfig C:\\Selenium \\gridHubConfig.json\ntimeout /t 10\nstart /B java -Dwebdriver.chrome.driver=C:\\Selenium\\chromedriver.exe -Dwebdriver.firefox.driver=C:\\Selenium\\geckodriver.exe -jar C:\\Selenium\\selenium-server-standalone-3.8.1.jar -role node -nodeConfig C:\\Selenium\\node.json\nexit\n```\n\n----------------------------------------\n\nTITLE: Runtime Server Response with Employee Data\nDESCRIPTION: JSON response containing retrieved employee records with their attributes and metadata\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"changes\": {},\n    \"commits\": [],\n    \"committedObjectsOmitted\": false,\n    \"count\": 2,\n    \"deletes\": [],\n    \"extraGuids\": [],\n    \"hasMoreItems\": false,\n    \"newpersistable\": [],\n    \"objects\": [],\n    \"partialObjects\": [\n        {\n            \"objectType\": \"MyFirstModule.Employee\",\n            \"guid\": \"11540474045137130\",\n            \"attributes\": {\n                \"Department\": {\n                    \"value\": \"Sales\"\n                },\n                \"Jobtitle\": {\n                    \"value\": \"Sales Executive\"\n                },\n                \"Firstname\": {\n                    \"value\": \"Peter\"\n                },\n                \"Lastname\": {\n                    \"value\": \"Jones\"\n                },\n                \"DateOfBirth\": {\n                    \"value\": 867189600000\n                }\n            }\n        },\n        {\n            \"objectType\": \"MyFirstModule.Employee\",\n            \"guid\": \"11540474045137256\",\n            \"attributes\": {\n                \"Department\": {\n                    \"value\": \"Finance\"\n                },\n                \"Jobtitle\": {\n                    \"value\": \"Accountant\"\n                },\n                \"Firstname\": {\n                    \"value\": \"Elisa\"\n                },\n                \"Lastname\": {\n                    \"value\": \"Walkers\"\n                },\n                \"DateOfBirth\": {\n                    \"value\": 454629600000\n                }\n            }\n        }\n    ],\n    \"resets\": {},\n    \"resultGuids\": [\n        \"11540474045137130\",\n        \"11540474045137256\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Firebase Messaging Service Worker - JavaScript\nDESCRIPTION: This JavaScript code defines the service worker for handling Firebase Cloud Messaging (FCM) in the progressive web app.  It imports necessary Firebase libraries, initializes the Firebase app with the provided configuration, and retrieves the messaging instance. The `firebaseConfig` object needs to be replaced with your actual Firebase project configuration details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/notif-implement-pwa.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"importScripts('https://www.gstatic.com/firebasejs/10.11.0/firebase-app-compat.js');\\nimportScripts('https://www.gstatic.com/firebasejs/10.11.0/firebase-messaging-compat.js');\\nconst firebaseConfig = {\\n  apiKey: \\\"...\\\",\\n  authDomain: \\\"...\\\",\\n  projectId: \\\"...\\\",\\n  storageBucket: \\\"...\\\",\\n  messagingSenderId: \\\"...\\\",\\n  appId: \\\"...\\\"\\n};\\nfirebase.initializeApp(firebaseConfig);\\nconst messaging = firebase.messaging();\"\n```\n\n----------------------------------------\n\nTITLE: Defining IAM Policy for S3 Bucket and User Creation in JSON\nDESCRIPTION: This JSON defines an IAM policy for an admin user account that allows creation and management of S3 buckets and IAM users for Mendix environments. It grants permissions to create/delete buckets and manage IAM users with specific naming patterns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"bucketPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:CreateBucket\",\n                \"s3:DeleteBucket\"\n            ],\n            \"Resource\": \"arn:aws:s3:::mendix-*\"\n        },\n        {\n            \"Sid\": \"iamPermissions\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:DeleteAccessKey\",\n                \"iam:PutUserPolicy\",\n                \"iam:DeleteUserPolicy\",\n                \"iam:DeleteUser\",\n                \"iam:CreateUser\",\n                \"iam:CreateAccessKey\"\n            ],\n            \"Resource\": [\n                \"arn:aws:iam::<account_id>:user/mendix-*\"\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Background Gradient Styles in JavaScript\nDESCRIPTION: This snippet details the configuration for the Background Gradient widget in Mendix. It defines properties including color options, direction angle, and opacity level, allowing for visually appealing background transitions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_backgroundgradient_BackgroundGradient = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  colorList: {\n    color: null, // Colors can be passed in different formats. Valid color value formats are #d0d0d0, rgb(115,155,155), or rgba(195,226,226,0.5)\n    offset: null, // A color-stop's value, followed by one or more optional stop positions (should be between 0.0 and 1.0)\n  },\n  angle: null, // Line of direction. Takes a value from `0` to `360`. A value of 0 is equivalent to top; increasing values rotate the design clockwise.\n  opacity: null, // Takes a value from `0` to `100`. The lower the value, the more transparent.\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving Test Run Results with Execution Breakdown in Mendix ATS API (XML)\nDESCRIPTION: An XML SOAP response example from the GetTestRunResponse endpoint that includes test execution status, result, error message, and numerical breakdown of passed, failed, and not-executed test cases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Body>\n    <tns:GetTestRunResponse>\n      <TestRun>\n        <ExecutionStatus>[key]</ExecutionStatus>\n        <ExecutionResult>[key]</ExecutionResult>\n        <ErrorMessage>exampleString</ErrorMessage>\n        <ExecutionResultBreakdown>\n            <ResultBreakdown>\n                <CountPassed>5</CountPassed>\n                <CountNotExecuted>1</CountNotExecuted>\n                <CountFailed>1</CountFailed>\n            </ResultBreakdown>\n        </ExecutionResultBreakdown>\n      </TestRun>\n    </tns:GetTestRunResponse>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Creating Solution Package - Mendix Command-Line Tool\nDESCRIPTION: This command exports the app as a solution package, with options to include snapshots and define the output directory. The input must include the target .mpr app file for export.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/export.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmx create-solution-package [OPTIONS] TARGET-FILE\n\nOPTIONS:\n  -s, --include-snapshot     Includes a snapshot in the app package.\n  -d, --package-dir          Exports the package to the directory.\n  --help                     Displays the help screen.\n\nTARGET-FILE: Specify the *.mpr* app you want to export.\n```\n\n----------------------------------------\n\nTITLE: Updating Enumeration Attributes with PATCH Request in JSON\nDESCRIPTION: This snippet demonstrates how to update an enumeration attribute using a PATCH request with a JSON body in an OData service. The enumeration value must be specified by its exposed name, not its numeric value or fully qualified name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/published-odata-services/odata-query-options.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Country\": \"Brazil\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Association Radio Button List in Mendix\nDESCRIPTION: Shows configuration for a radio button list based on an association between Employee and CompanyDepartment entities\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/radio-button-list.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nDataSource:\n  EntityToList: CompanyDepartment\n  LabelAttribute: Name\n  Association: Employee_CompanyDepartment\n  SortOrder: Ascending\n```\n\n----------------------------------------\n\nTITLE: WebSQL Replacement with SQLite Database\nDESCRIPTION: Introduced alternative to WebSQL that automatically upgrades to a SQLite-based database when opening offline PWA in browsers with a Secure Context\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nWe introduced an alternative for WebSQL with this release. After upgrading to this release, opening your offline PWA in your browsers automatically upgrades your WebSQL database to a new SQLite-based database.\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting - Could Not Load File or Assembly - PowerShell\nDESCRIPTION: This section discusses a common error encountered when the PowerShell version does not match the required .NET version needed for the Mendix cmdlets. It emphasizes the importance of ensuring that PowerShell is using .NET version 4.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_11\n\nLANGUAGE: PowerShell\nCODE:\n```\nCould not load file or assembly, Version=3.3.0.0, Culture=neutral, PublicKeyToken= {token number}' or one of its dependencies. The system cannot find the file specified.\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret in Vault\nDESCRIPTION: Command to create a database secret in Vault with PostgreSQL configuration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nvault kv put secret/<{env-db-secret}> database-type=\"PostgreSQL\" database-jdbc-url=\"jdbc:postgresql://pg.example.com:5432/my-app-1?sslmode=prefer\" database-host=\"pg.example.com:5432\" database-name=\"my-app-1\" database-username=\"my-app-user-1\" database-password=\"Welc0me!\"\n```\n\n----------------------------------------\n\nTITLE: Removing Firebase Implementation from Android App Gradle\nDESCRIPTION: Remove the Firebase implementation line from the Android app's build.gradle file when removing the dependency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally-manually.md#2025-04-21_snippet_5\n\nLANGUAGE: gradle\nCODE:\n```\nimplementation project(\":react-native-firebase\")\n```\n\n----------------------------------------\n\nTITLE: Setting Up Multiple X Axes in JSON\nDESCRIPTION: Provides a configuration example for multiple X axes with titles and specific graphical properties, ensuring clarity when overlaying multiple data series.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"title\": \"X-axis 1\",\n    \"color\": \"#4682B4\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"zeroline\": true\n  },\n  \"xaxis2\": {\n    \"title\": \"X-axis 2\",\n    \"titlefont\": {\n      \"color\": \"#FF8C00\"\n    },\n    \"tickfont\": {\n      \"color\": \"#FF8C00\"\n    },\n    \"zeroline\": true,\n    \"color\": \"#FF8C00\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"overlaying\": \"x\",\n    \"side\": \"top\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Choropleth Map Data Configuration in JSON\nDESCRIPTION: This snippet defines the configuration for a choropleth map in JSON format, setting locations and corresponding data values for visualization. The expected output is a geographic map colored based on the specified values associated with locations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n[ {\n    \"type\": \"choropleth\",\n    \"locations\": [\"AZ\", \"CA\", \"VT\"],\n    \"locationmode\": \"USA-states\",\n    \"z\": [10,20,40],\n    \"name\": \"Choropleth data\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Cloud Foundry Login with SSO\nDESCRIPTION: Command for logging into Cloud Foundry using single sign-on (SSO) with a one-time authentication code, specifically configured for Insights Hub.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncf login -a https://api.cf.{Region}.{mindsphere-domain} --sso\n```\n\n----------------------------------------\n\nTITLE: Alert Block in Markdown\nDESCRIPTION: Demonstrates the syntax for creating an info alert block in Markdown using Mendix-specific shortcodes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-basics.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}Use the ATS naming convention{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom SCSS Class with Variable Reference\nDESCRIPTION: Creates a custom SCSS class that references the previously defined variable, establishing reusable styling for company headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\n.company-header { font-size: $company-header-text-size; }\n```\n\n----------------------------------------\n\nTITLE: Exporting PostgreSQL Database with pg_dump\nDESCRIPTION: Command to export a PostgreSQL database using pg_dump with options to exclude owner (-O) and privilege (-x) information and create a custom-format archive (-Fc).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npg_dump -O -x -Fc\n```\n\n----------------------------------------\n\nTITLE: Configuring Synchronize to Device Activity in Mendix Microflow\nDESCRIPTION: This snippet shows the configuration options for the Synchronize to Device activity in a Mendix microflow. It includes setting the object or list to be synchronized and common properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/synchronize-to-device.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nAction:\n  Object or List: [variable referring to object or list]\n\nCommon:\n  [Common microflow activity properties]\n```\n\n----------------------------------------\n\nTITLE: NOT Operator Example in Java\nDESCRIPTION: Demonstrates the use of the 'not' operator to negate boolean expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nnot('hello' = 'hallo')\n```\n\nLANGUAGE: java\nCODE:\n```\nnot(true)\n```\n\n----------------------------------------\n\nTITLE: OQL DATEPART Function Syntax\nDESCRIPTION: Retrieves a specified integer element from a date/time value using the DATEPART function. The function takes two parameters: the date part to extract and the date expression to extract from.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-datepart.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nDATEPART ( datepart , date_expression )\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Customers without Orders in Studio Pro\nDESCRIPTION: This Studio Pro query returns all customers who have not placed any orders. It utilizes the `not()` function to check for the absence of associated `Sales.Order` objects through the `Sales.Customer_Order` association.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_4\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: SOAP URL for RunJob Service\nDESCRIPTION: The endpoint URL for the RunJob service in the ATS CI/CD API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://ats100.mendixcloud.com/ws/RunJob\n```\n\n----------------------------------------\n\nTITLE: Creating User Task to Ship Devices for Home Office\nDESCRIPTION: This snippet describes the steps for configuring a user task assigned to the Facilities role to ship devices to a new hire who will work from home. It includes task naming and page settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_5\n\nLANGUAGE: Mendix\nCODE:\n```\n9. Open the **Toolbox**, drag a **User task** activity to the **true** path, and name it **Ship_Devices**.\n10. Set its title to **Facilities: Ship Devices**.\n11. Configure to assign the task to the Facilities role using XPath: `[System.UserRoles = '[%UserRole_Facilities%]']`.\n```\n\n----------------------------------------\n\nTITLE: Subtracting Hours using Java\nDESCRIPTION: This function subtracts a specified number of hours from a given date and time value. It requires an initial date in the 'Date and time' format and an integer value representing hours to be subtracted. The output is a date and time adjusted by the subtracted hours.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nsubtractHours(dateTime(2007, 1, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Creating a Nanoflow to Take a New Picture - Mendix JavaScript\nDESCRIPTION: This nanoflow allows users to take a new picture within a Mendix mobile application. It creates a new Picture object, captures the image from the camera, and sets up a new page for viewing and editing the captured picture. User must configure necessary actions and page settings properly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/native-mobile-app.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Create object action to initialize a new Picture object\ncreateObject(\"Picture\")\n\n// Take Picture action configuration\nlet pictureTaken = takePicture({\n    picture: \"$NewPicture\",\n    source: \"camera\",\n    quality: \"original\",\n    maxWidth: \"\",\n    maxHeight: \"\",\n    useReturnValue: true,\n    variableName: \"PictureTaken\"\n});\n\n// Show page action to display the new picture editing page\nshowPage({\n    objectToPass: \"$NewPicture entity\",\n    pageName: \"Picture_NewEdit_Native\",\n    profileType: \"Native mobile\",\n    template: \"Edit with Data View\"\n});\n```\n\n----------------------------------------\n\nTITLE: Example XML Schema Definition in XML\nDESCRIPTION: A sample XML schema that defines a 'customer' element with a complex type containing 'name' and 'shoesize' elements. The schema demonstrates simple and complex types with the 'shoesize' element extending an integer type with a 'country' attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/mapping-documents/xml-documents/xml-schemas.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<xs:schema targetNamespace=\"http://www.example.com/\" elementFormDefault=\"qualified\" xmlns:tns=\"http://www.example.com/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xs:element name=\"customer\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"name\" type=\"xs:string\"/>\n        <xs:element name=\"shoesize\" type=\"tns:shoesizeType\"/>\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n  <xs:complexType name=\"shoesizeType\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:integer\">\n        <xs:attribute name=\"country\" type=\"xs:string\"/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:schema>\n\n```\n\n----------------------------------------\n\nTITLE: Implementing TextBox Component with OnLeave Handler\nDESCRIPTION: TypeScript implementation of the TextBox component with onLeave functionality replacing onUpdate. Includes validation handling and state management for the text input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nexport class TextBox extends Component<TextBoxContainerProps> {\n\n    private readonly onLeaveHandle = this.onLeave.bind(this);\n\n    componentDidMount(): void {\n        this.props.textAttribute.setValidator(this.validator.bind(this));\n    }\n\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        const validationFeedback = this.props.textAttribute.validation;\n        return <Fragment>\n            <TextInput\n                value={value}\n                tabIndex={this.props.tabIndex}\n                disabled={this.isReadOnly()}\n                onLeave={this.onLeaveHandle}\n            />\n            <Alert>{validationFeedback}</Alert>\n        </Fragment>;\n    }\n\n    private isReadOnly(): boolean {\n        return this.props.textAttribute.readOnly;\n    }\n\n    private onLeave(value: string, isChanged: boolean): void {\n        if (!isChanged) {\n            return;\n        }\n        this.props.textAttribute.setValue(value);\n    }\n\n    private validator(value: string | undefined): string | undefined {\n        const { requiredMessage } = this.props;\n        if (requiredMessage && requiredMessage.value && !value) {\n            return requiredMessage.value;\n        }\n        return;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: GetJobStatus SOAP Request with Result Breakdown\nDESCRIPTION: XML structure for making a GetJobStatus request that includes execution result breakdown. This request adds the IncludeExecutionResultBreakdown parameter to get counts of passed, failed, and not run test cases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Header>\n    <tns:authentication>\n      <username>exampleUser</username>\n      <password>examplePassword</password>\n    </tns:authentication>\n  </soap:Header>\n  <soap:Body>\n    <tns:GetTestRun>\n      <TestRun>\n        <AppAPIToken>exampleString</AppAPIToken>\n        <JobID>exampleString</JobID>\n        <AppID>exampleString</AppID>\n        <IncludeExecutionResultBreakdown>true</IncludeExecutionResultBreakdown>\n      </TestRun>\n    </tns:GetTestRun>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Example JSON Object for App Errors\nDESCRIPTION: This JSON object example illustrates the format of errors output by MxBuild when deployment issues occur. It contains a 'problems' array detailing each error, warning, or deprecation, along with their respective locations within the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mxbuild.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"problems\": [\n    {\n      \"name\": null,\n      \"severity\": \"Error\",\n      \"message\": \"Start event cannot be the last object of a flow.\",\n      \"locations\": [\n        {\n          \"elementId\": \"252e1008-d795-4e49-b3e3-2ba38eb0a56d\",\n          \"unitId\": \"1a8a3593-6f01-43a3-bc22-bd22f9244983\",\n          \"element\": \"Start event\",\n          \"document\": \"Microflow 'MyMicroflow'\",\n          \"module\": \"MyModule\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Building and executing XPath query in Java\nDESCRIPTION: This code constructs an XPath query using format strings and proxy classes to retrieve a list of products based on name, category, and availability. It then executes the query using the Mendix Core API, setting the 'Category' variable and retrieving the results within the context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/extending-your-application-with-custom-java.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//create the xpath\n\tString xpath = String.format(\"//%s[%s/%s[%s = true()]][%s = $Category][%s = '%s']\",\n\t\t\tProduct.entityName,\n\t\t\tProduct.MemberNames.Product_ProductState, ProductState.entityName,\n\t\t\tProductState.MemberNames.Available,\n\t\t\tProduct.MemberNames.Product_Category, \n\t\t\tProduct.MemberNames.Name, name\n\t        );\n    //execute the xpath and return the list of products found\n\treturn Core.createXPathQuery(xpath)\n\t\t\t.setVariable(\"Category\", __category)\n\t\t\t.execute(getContext());\n```\n\n----------------------------------------\n\nTITLE: Customizing System Prompt in Microflow for GenAI Chatbot\nDESCRIPTION: Example system prompts for customizing the chatbot's behavior and personality in the ACT_FullScreenChat_Open microflow. These prompts define the chatbot's role as either a customer service assistant, travel advisor, or general assistant.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/how-to/start_from_blank_app.md#2025-04-21_snippet_0\n\nLANGUAGE: microflow\nCODE:\n```\n'You are a helpful customer service assistant providing answers to common product questions.'\n'You are a travel advisor assistant providing travel tips and destination information.'\n'You are an assistant.'\n```\n\n----------------------------------------\n\nTITLE: Styling Bottom Sheet Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the bottom sheet widget in Mendix native mobile applications. It includes styles for the container, modal, and various text styles for different item types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_bottomsheet_BottomSheet = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  containerWhenExpandedFullscreen: {\n    // This has all ViewStyle properties. This has all ViewStyle properties. Only available if `Expading` and `Enable full screen` are enabled.\n  },\n  modal: {\n    // This has all ViewStyle properties. \n  },\n  defaultStyle: {\n    // This has all TextStyle properties. Available when `Default` is selected as style for basic items.\n  },\n  primaryStyle: {\n    // This has all TextStyle properties. Available when `Primary` is selected as style for basic items.\n  },\n  dangerStyle: {\n    // This has all TextStyle properties. Available when `Danger` is selected as style for basic items.\n  },\n  customStyle: {\n    // This has all TextStyle properties. Available when `Custom` is selected as style for basic items.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Legend Configuration - None (JSON)\nDESCRIPTION: This snippet hides the chart legend by setting the `showlegend` property to `false`. This is useful when the legend is not needed or when the series are self-explanatory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Setting SAP Fiori Theme in HTML\nDESCRIPTION: Example of how to set the SAP Fiori theme class in the HTML file to control the application's appearance. Available themes include horizon-morning, horizon-evening, quartz-light, and quartz-dark.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-ui-resources/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<html class=\"theme-horizon-morning\">\n```\n\n----------------------------------------\n\nTITLE: Extracting Day from DateTime in Local Time Zone\nDESCRIPTION: XPath query to filter logs based on the day of the month using the day-from-dateTime() function in the local time zone. Returns logs where the date is on the 30th day of the month.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n//Logging.Log[day-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Updating iOS Podfile with Required Permissions\nDESCRIPTION: This snippet demonstrates how to configure the necessary permissions in the iOS Podfile for a Mendix native application. It involves uncommenting the relevant lines to specify which permissions are needed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/generic-permission-action.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n\"# ⬇️ uncomment the permissions you need\\nsetup_permissions([\\n  # 'AppTrackingTransparency',\\n  # 'Bluetooth',\\n  # 'Calendars',\\n  # 'CalendarsWriteOnly',\\n  # 'Camera',\\n  # 'Contacts',\\n  # 'FaceID',\\n  # 'LocationAccuracy',\\n  # 'LocationAlways',\\n  # 'LocationWhenInUse',\\n  # 'MediaLibrary',\\n  # 'Microphone',\\n  # 'Motion',\\n  # 'Notifications',\\n  # 'PhotoLibrary',\\n  # 'PhotoLibraryAddOnly',\\n  # 'Reminders',\\n  # 'Siri',\\n  # 'SpeechRecognition',\\n  # 'StoreKit',\\n])\"\n```\n\n----------------------------------------\n\nTITLE: Using DISTINCT to Remove Duplicate Rows\nDESCRIPTION: Shows how to use the DISTINCT keyword to eliminate duplicate rows from the result set, applied to specific columns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT DISTINCT LastName LName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Applying String Attribute Filter in Mendix\nDESCRIPTION: Code that checks if a string attribute is filterable, then applies a filter condition to show only items starting with 'B'. Uses the 'startsWith' filter builder from Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { attribute, literal, startsWith } from \"mendix/filters/builders\";\n\n// in the widget code\nif (this.props.myAttributeString.filterable) {\n    const filterCond = startsWith(attribute(this.props.myAttributeString.id), literal(\"B\"));\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Attribute is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Preparing Android App with NPM Commands\nDESCRIPTION: NPM commands to install dependencies, package Cordova app, and add Android platform for hybrid mobile development\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/build-hybrid-apps/build-hybrid-locally.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm i && npm run package && npm run platform:android\n```\n\n----------------------------------------\n\nTITLE: Enabling Rate and Count Database Metrics\nDESCRIPTION: This snippet shows how to enable rate and count metrics for the database using the `DATADOG_DATABASE_RATE_COUNT_METRICS` custom environment variable. By setting its value to `true`, these additional metrics, suffixed by `_rate` and `_count`, will be sent to Datadog. The default value is `false`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/datadog-metrics.md#2025-04-21_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n`DATADOG_DATABASE_RATE_COUNT_METRICS` custom environment variable and setting its value to `true`\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using year-from-dateTime with Specific Timezone\nDESCRIPTION: Example query that retrieves logs where the year component of DateAttribute equals 2011 using the New York timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-year-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[year-from-dateTime(DateAttribute, 'America/New_York') = 2011]\n```\n\n----------------------------------------\n\nTITLE: Applying Typography Classes in Mendix\nDESCRIPTION: CSS classes for text formatting, including weight, spacing, alignment, and case transformation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\ntext-normal\ntext-bold\ntext-spacing\ntext-lined\ntext-break\ntext-uppercase\ntext-lowercase\ntext-capitalize\ntext-right\ntext-center\ntext-left\nnowrap\n```\n\n----------------------------------------\n\nTITLE: Updating Android Native Permissions in AndroidManifest.xml\nDESCRIPTION: This code snippet demonstrates how to configure various Android permissions in the AndroidManifest.xml file. Developers should keep only the permissions that are actually required by their application's functionality, removing unused ones for better security practices.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/generic-permission-action.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  package=\"com.myawesomeapp\">\n\n  <!-- Keep only the permissions used in your app -->\n\n  <uses-permission android:name=\"android.permission.ACCEPT_HANDOVER\" />\n  <uses-permission android:name=\"android.permission.ACCESS_BACKGROUND_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACCESS_MEDIA_LOCATION\" />\n  <uses-permission android:name=\"android.permission.ACTIVITY_RECOGNITION\" />\n  <uses-permission android:name=\"com.android.voicemail.permission.ADD_VOICEMAIL\" />\n  <uses-permission android:name=\"android.permission.ANSWER_PHONE_CALLS\" />\n  <uses-permission android:name=\"android.permission.BLUETOOTH_ADVERTISE\" />\n  <uses-permission android:name=\"android.permission.BLUETOOTH_CONNECT\" />\n  <uses-permission android:name=\"android.permission.BLUETOOTH_SCAN\" />\n  <uses-permission android:name=\"android.permission.BODY_SENSORS\" />\n  <uses-permission android:name=\"android.permission.BODY_SENSORS_BACKGROUND\" />\n  <uses-permission android:name=\"android.permission.CALL_PHONE\" />\n  <uses-permission android:name=\"android.permission.CAMERA\" />\n  <uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\n  <uses-permission android:name=\"android.permission.NEARBY_WIFI_DEVICES\" />\n  <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" />\n  <uses-permission android:name=\"android.permission.PROCESS_OUTGOING_CALLS\" />\n  <uses-permission android:name=\"android.permission.READ_CALENDAR\" />\n  <uses-permission android:name=\"android.permission.READ_CALL_LOG\" />\n  <uses-permission android:name=\"android.permission.READ_CONTACTS\" />\n  <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_AUDIO\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\n  <uses-permission android:name=\"android.permission.READ_MEDIA_VIDEO\" />\n  <uses-permission android:name=\"android.permission.READ_PHONE_NUMBERS\" />\n  <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\n  <uses-permission android:name=\"android.permission.READ_SMS\" />\n  <uses-permission android:name=\"android.permission.RECEIVE_MMS\" />\n  <uses-permission android:name=\"android.permission.RECEIVE_SMS\" />\n  <uses-permission android:name=\"android.permission.RECEIVE_WAP_PUSH\" />\n  <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\n  <uses-permission android:name=\"android.permission.SEND_SMS\" />\n  <uses-permission android:name=\"android.permission.USE_SIP\" />\n  <uses-permission android:name=\"android.permission.UWB_RANGING\" />\n  <uses-permission android:name=\"android.permission.WRITE_CALENDAR\" />\n  <uses-permission android:name=\"android.permission.WRITE_CALL_LOG\" />\n  <uses-permission android:name=\"android.permission.WRITE_CONTACTS\" />\n  <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n  <uses-permission android:name=\"android.permission.SCHEDULE_EXACT_ALARM\" />\n    \n\n  <!-- … -->\n\n</manifest>\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Image Download Limit\nDESCRIPTION: Command to change the default limit on the number of images that will be downloaded during the export process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-migrating.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmxpc-cli registry-migration --max-images=50\n```\n\n----------------------------------------\n\nTITLE: Clearing Badge Number in JavaScript for Mobile App\nDESCRIPTION: This snippet outlines the steps to clear badge notifications when the user opens the app. It demonstrates how to implement a nanoflow that sets the badge number to zero and logs a message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n1. Drop an **App events** widget onto **Home_Native** (you have this widget because it is included in the [Blank Native Mobile App](https://marketplace.mendix.com/link/component/109511/)):\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/app-events.png\" alt=\"app event widget\" class=\"no-border\" >}}\n\n2. Double-click your **App events** widget.\n3. Select **On load** > **Call a nanoflow**.\n4. Click **New** and make a new nanoflow: *ACT_ClearBadge*.\n5. Go to **ACT_ClearBadge**.\n6. Drag a **Set badge number** activity into your nanoflow:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/clear-set-badge.png\" alt=\"set badge activity\" class=\"no-border\" >}}\n\n7. Double-click your **Set badge number** activity.\n8. Click **Badge number** > **Edit**.\n9. Type *0* and click **OK**.\n10. Set **Use Return Value** to **No**:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/clear-badge-settings.png\" alt=\"return value\"   width=\"400\"  class=\"no-border\" >}}\n\n11. Drag a **Log message** activity into your microflow.\n12. Double-click your **Log message** activity, write *Your notification has been cleared* into **Template**, and click **OK**:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/clear-text-log.png\" alt=\"clear text\"   width=\"500\"  class=\"no-border\" >}}\n\n13. Go back to your **Home_Native** page and double-click your **App events** activity.\n14. Make sure **Page load** > **On load** is set to **Call a nanoflow**, and specify that nanoflow as **ACT_ClearBadge**. This will make sure your badge clears on page load.\n15. Set **App resume** > **On resume** is set to **Call a nanoflow**, and specify that nanoflow as **ACT_ClearBadge**. This will make sure your badge clears when your app is resumed:\n\n    {{< figure src=\"/attachments/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-badges/app-event-final-settings.png\" alt=\"app event final settings\"   width=\"300\"  class=\"no-border\" >}}\n\n16. Click **OK** and save your changes.\n```\n\n----------------------------------------\n\nTITLE: Adjusting renderIcon Method with Styles (TSX)\nDESCRIPTION: This TypeScript snippet updates the `renderIcon` method in the container component (`GroupBox.tsx`) to apply the correct color and size to the `Icon` component. It retrieves the color and size values from the `styles` attribute, which is the result of merging the default styles and custom styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_37\n\nLANGUAGE: typescript\nCODE:\n```\nprivate renderIcon = (toBeRenderedIcon: DynamicValue<NativeIcon> | undefined, glyph: string) => {\n    const nativeIcon: NativeIcon = \n        toBeRenderedIcon && toBeRenderedIcon.status === ValueStatus.Available\n            ? toBeRenderedIcon.value\n            : { type: \"glyph\", iconClass: glyph };\n\n    return (\n        <Icon color={this.styles.headerContent.color} icon={nativeIcon} size={this.styles.headerContent.fontSize} />\n    );\n};\n\n```\n\n----------------------------------------\n\nTITLE: Creating Image Specialization Entity in Mendix Domain Model\nDESCRIPTION: Defines a specialized Receipt entity that inherits from System.Image and creates an association with the Report entity to enable image attachments\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/image-and-file-widgets/attach-images.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Domain Model\nCODE:\n```\nEntity: Receipt\nGeneralization: System.Image\nAssociation: Receipt_Report to Report entity\n```\n\n----------------------------------------\n\nTITLE: Existence Check Query\nDESCRIPTION: Query to find customers who have placed at least one order using exist-expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order]\n```\n\n----------------------------------------\n\nTITLE: Display help information for the migrate command\nDESCRIPTION: This command displays help information for the `migrate` subcommand of the `installer init` command. It provides details on how to migrate Mendix Private Platform related images to a private registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\n~/mpp-binary-linux$ ./installer init  migrate --help\nMigrate Mendix Private Platform related image to your own registry\n\nUsage:\ninstaller init migrate [flags]\nFlags:\n    -h, --help                 help for migrate\n    -r, --registryurl string   registry url (required)\n    -e, --repo string          Repository name\n    -u, --username string      Username (required) for your private registry\n\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing SQL Query\nDESCRIPTION: This SQL snippet modifies an existing query to now retrieve details such as productLine, textDescription, and htmlDescription from the productLines table, where the productLine matches a specified parameter. This example shows how existing queries can be updated to expand their data retrieval capabilities, emphasizing adaptability in querying with required consideration of SQL syntax and schema structures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-external-database-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nSelect productLine, textDescription, htmlDescription from productlines where productLine = {productLine}\n```\n\n----------------------------------------\n\nTITLE: Data Source Section Properties for Drop-Down\nDESCRIPTION: This snippet provides a link to the properties related to the data source for the drop-down widget, essential for specifying the source of the enumeration values used in the drop-down. Understanding data sources is crucial for dynamic value display.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating ToDo Item Data Model in C#\nDESCRIPTION: This code defines a data model for individual ToDo items that will be stored by the extension. It includes properties for the unique ID, text content, and completion status, with constructors for creating new or existing ToDo items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System.Text.Json.Serialization;\n\nnamespace Mendix.ToDoExtension;\n\npublic record ToDoModel\n{\n    [JsonConstructor]\n    public ToDoModel(string id, string text, bool isDone)\n    {\n        Id = id;\n        Text = text;\n        IsDone = isDone;\n    }\n\n    public ToDoModel(string text, bool isDone)\n        : this(Guid.NewGuid().ToString(), text, isDone)\n    {\n    }\n\n    public string Id { get; set; }\n    public string Text { get; set; }\n    public bool IsDone { get; set; }\n}\n```\n\n----------------------------------------\n\nTITLE: Error Handling for REST Call Timeout in Mendix\nDESCRIPTION: This snippet outlines the common SocketException error that can occur due to a connection reset, detailing potential resolutions including adjusting the HTTP cleanup settings and implementing a retry mechanism in a microflow to gracefully handle errors from failed service calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Alter the value of the `http.client.CleanupAfterSeconds` [runtime setting](/refguide9/custom-settings/) to be less than the connection timeout. This will ensure that the your app client will create a new HTTP client for the request.\n2. Handle the error in your microflow and retry a number of times before returning the error. Your flow might look similar to the one below.\n```\n\n----------------------------------------\n\nTITLE: Final Cleaned-up Default Style for GroupBox Widget\nDESCRIPTION: The optimized style definition after removing the unused label property. This style provides the complete visual appearance for the GroupBox widget with container, header, header content, and content area styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_10\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: Platform.OS === \"ios\" ? 4 : 0,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Enhanced Default Style Definition for GroupBox Widget\nDESCRIPTION: Comprehensive styling for the GroupBox widget, defining styles for the container, header, header content, and content area. This styling gives the widget a bordered appearance with a black header and white text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: 4,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    label: {\n        color: \"#F6BB42\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example\nDESCRIPTION: An XPath constraint query example showing flag object reference syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.6.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n[$object/flag]\n```\n\n----------------------------------------\n\nTITLE: Summing Order Prices per City Using GROUP BY in OQL\nDESCRIPTION: Example query that calculates the sum of all order prices grouped by city. It joins multiple entities to connect orders with address information, then groups by city to get the total order value per city.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT SUM(Sales.Order/TotalPrice)\nFROM Sales.Order\nINNER JOIN Sales.Order/Sales.Customer_Order/Sales.Customer/Sales.Customer_Address/Sales.Address\nGROUP BY Sales.Address/City\n```\n\n----------------------------------------\n\nTITLE: Styling Video Player Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the video player widget in Mendix native mobile applications. It includes styles for the container, loading indicator, video element, error message, and fullscreen mode (Android only).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_videoplayer_VideoPlayer = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  indicator: {\n    color: null, // The loading indicator color.\n  },\n  video: {\n    // This has all ViewStyle properties.\n  },\n  errorMessage: {\n    // This has all TextStyle properties.\n  },\n  fullScreenVideoPlayer: {\n    // This has all ViewStyle properties. Android only.\n  },\n  controlBtnContainerStyle: {\n    // This has all ViewStyle properties. Android only.\n  },\n  fullScreenVideoStyle: {\n    // This has all ViewStyle properties. Android only. \n  },\n  fullScreenActivityIndicatorStyle: {\n    // This has all ViewStyle properties. Android only.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Sample Script - Determine Mendix Runtime Version - PowerShell\nDESCRIPTION: This script retrieves the required Mendix Runtime version from a deployment package's metadata and automatically downloads that version. It demonstrates the use of file manipulation and JSON handling in PowerShell.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_6\n\nLANGUAGE: PowerShell\nCODE:\n```\nCopy-Item -Path 'C:\\Mendix\\Some_Deployment.mda'-Destination C:\\Temp\\temp.zip\nExpand-Archive -LiteralPath 'C:\\Temp\\temp.zip' -DestinationPath C:\\temp\\MxApp\n$mxJson = Get-Content \"C:\\temp\\MxApp\\model\\metadata.json\" | ConvertFrom-Json\nRemove-Item C:\\Temp\\temp.zip\nRemove-Item C:\\Temp\\MxApp\\ -Recurse\n\n# determine the Mendix Runtime version\n$mxJson.RuntimeVersion\n\n# download the Mendix Runtime version\n$targetURL = 'https://cdn.mendix.com/runtime/mendix-' + $mxJson.RuntimeVersion + \".tar.gz\"\n$targetFile = 'C:\\Mendix\\runtimes\\mendix-' + $mxJson.RuntimeVersion + '.tar.gz'\nwget $targetURL -OutFile $targetFile\n```\n\n----------------------------------------\n\nTITLE: Creating SOAP Request for DeleteCustomer in XML\nDESCRIPTION: This XML snippet defines a SOAP request for deleting an existing customer using the CustomerWebServiceSoap service. The necessary namespaces and SOAP infrastructure need to be set up prior to using this request. The main parameter is the name of the customer to delete, which should match the name used in previous operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\\\"1.0\\\"?>\\n<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:exam=\\\"http://www.example.com/\\\">\\n   <soapenv:Header/>\\n   <soapenv:Body>\\n      <exam:DeleteCustomer>\\n         <Name>Donald A. Hylton</Name>\\n      </exam:DeleteCustomer>\\n   </soapenv:Body>\\n</soapenv:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Branch Ignored Files Example\nDESCRIPTION: This snippet shows an example list of files to ignore when working with a branch in Subversion. Additional files like '.project', '.classpath', and 'deployment' are included compared to the main line. These configurations ensure that unnecessary files are not uploaded to the Team Server, preventing clutter and potential conflicts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/troubleshoot-version-control-issues.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nmodeler-merge-marker\n.mendix-cache\nResolveIgnoreConflict.mpr.lock\n*.launch\nResolveIgnoreConflict.mpr.bak\n.project\n.classpath\ndeployment\n\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with XPath in Java\nDESCRIPTION: This Java snippet demonstrates using the XPath starts-with function to filter customer records in a Mendix application. The query retrieves all customers whose names begin with the substring 'Jans'. No additional dependencies are required beyond standard XPath syntax. Expected input is a string and output is a filtered list of customers. There is an implicit constraint that the attribute 'Name' is a string type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-starts-with.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[starts-with(Name, 'Jans')]\n```\n\n----------------------------------------\n\nTITLE: Defining Widgets Property with DataSource in XML for Mendix Pluggable Widgets\nDESCRIPTION: XML configuration for defining a widgets property with a dataSource attribute. This connects the widgets property to a datasource property defined elsewhere in the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\" dataSource=\"myDataSource\">\n\t<caption>Content</caption>\n\t<description>Widgets using data source</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using NULL Keyword\nDESCRIPTION: Query that returns all customers whose name is not known (NULL) in the system\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = NULL]\n```\n\n----------------------------------------\n\nTITLE: Configuring Widget Definition XML\nDESCRIPTION: XML configuration for the TextBox widget defining its properties and capabilities in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"mendix.textbox.TextBox\" pluginWidget=\"true\" needsEntityContext=\"true\" supportedPlatform=\"Web\" offlineCapable=\"true\" xmlns=\"http://www.mendix.com/widget/1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../xsd/widget.xsd\">\n    <name>Text Box</name>\n    <description>Edit text input</description>\n    <icon/>\n    <properties>\n        <propertyGroup caption=\"Data source\">\n            <property key=\"textAttribute\" type=\"attribute\">\n                <caption>Attribute (path)</caption>\n                <description/>\n                <attributeTypes>\n                    <attributeType name=\"String\"/>\n                </attributeTypes>\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Less Than or Equal To Comparison in Mendix\nDESCRIPTION: This snippet demonstrates the less than or equal to relational expression in Mendix, which compares two numeric values and returns a Boolean value indicating whether the first value is less than or equal to the second value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n```java\n6<=3\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nFalse\n```\n```\n\n----------------------------------------\n\nTITLE: Entity Property Configuration\nDESCRIPTION: Illustrates the setup for an entity property type with path and persistence settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"color\" type=\"entity\" isPath=\"optional\" allowNonPersistableEntities=\"true\" pathType=\"reference\">\n <caption>Color</caption>\n <category>Data source</category>\n <description>The Color entity to use.</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: iOS Dependencies Installation with CocoaPods\nDESCRIPTION: Commands to change directory and install iOS-specific dependencies using CocoaPods package manager\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Creating SOAP Request (Delete Customer)\nDESCRIPTION: This text snippet represents the SOAP request used to delete a customer. It includes the necessary envelope, header, and body elements with the customer's name to be deleted. It's designed for use with the CustomerWebServiceSoap -> DeleteCustomer operation in SoapUI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/testing-web-services-using-soapui.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:exam=\\\"http://www.example.com/\\\">\\n   <soapenv:Header/>\\n   <soapenv:Body>\\n      <exam:DeleteCustomer>\\n         <Name>Donald A. Hylton</Name>\\n      </exam:DeleteCustomer>\\n   </soapenv:Body>\\n</soapenv:Envelope>\"\n```\n\n----------------------------------------\n\nTITLE: SQL ROUND Function Syntax Example\nDESCRIPTION: Example showing the basic syntax of the ROUND function which takes an expression and length parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_33\n\nLANGUAGE: sql\nCODE:\n```\nROUND ( expression , length )\n```\n\n----------------------------------------\n\nTITLE: SVN Checkout Command\nDESCRIPTION: This command shows how to checkout an SVN-enabled Mendix app repository using the command line, including the username and Personal Access Token (PAT) for authentication. Placeholders like `{REVISION}`, `{USERNAME}`, `{USERPAT}`, `{APPID}`, and `{BRANCH}` should be replaced with their actual values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/developerportal/general/team-server/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: svn\nCODE:\n```\n\"svn checkout --revision \\\"{REVISION}\\\" --username \\\"{USERNAME}\\\" --password \\\"{USERPAT}\\\" https://svn.home.mendix.com/{APPID}/branches/{BRANCH}\"\n```\n\n----------------------------------------\n\nTITLE: Formatting a Message with Total Price in Mendix Microflow\nDESCRIPTION: Expression used in a Show Message activity to format the calculated total price as a string for display to the user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix\nCODE:\n```\ntoString($CalculatedTotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Defining Text Widget Styles in JavaScript\nDESCRIPTION: Provides style definitions for the Text widget used in Mendix applications, utilizing both ViewStyle and TextStyle properties. The 'numberOfLines' parameter controls text wrapping behavior, preventing overflow issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Text = {\n  container: {\n  },\n  text: {\n    numberOfLines: 0\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Defining HttpResponse Attributes in Mendix\nDESCRIPTION: This snippet outlines the attributes of the HttpResponse entity, including inherited attributes. It details the attribute names, types, default values, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/http-request-and-response-entities.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|  Attribute  |  Type  |  Default Value | Description  |\n|  ---  |  ---  |  ---  |  ---  |\n|  `HttpVersion` (inherited from `HttpMessage`)  |  String  | HTTP/1.1 | The protocol version. You can almost always ignore this value. |\n|  `StatusCode`  |  Integer  | 200 | The HTTP status code returned by the server.  |\n|  `ReasonPhrase`  |  String  |  OK | A textual representation of the `StatusCode`.  |\n|  `Content`  |  String  | empty | The body of the response. |\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Files in settings.json for Mendix Studio Pro\nDESCRIPTION: This JSON configuration in settings.json specifies which CSS files should be loaded when viewing pages in Studio Pro. It points to a main.scss file in the theme/web/css directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/configuring-your-theme.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"cssFiles\": [ \"theme/web/css/main.scss\" ]\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Log Handler - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to add a custom log handler that listens for log messages, including errors, in a Mendix mobile app. It utilizes the 'addLogListener' function from the Mendix logging module to handle logs, which can then alert the user with the log details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/building-efficient-mobile-apps/logging.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { addLogListener } from \"mendix/logging\";\n\n// Start handling logs\nconst removeListener = addLogListener((logLevel, logNode, ...args) => {\n    const message = args.map(arg => arg instanceof Error ? arg.message : String(arg)).join(\", \");\n    alert(`Incoming ${logLevel} log from ${logNode}: ${message}`);\n});\n\n// To remove the listener, call the returned function\nremoveListener();\n```\n\n----------------------------------------\n\nTITLE: Ignoring PMI Entities and Filtering Options\nDESCRIPTION: This JSON structure defines the types of PMI entities that can be ignored and filtering options for model and design groups, enhancing user customizability in a modeling environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"string\",\n    \"enum\": [\n      \"BALLOON_NOTE\",\n      \"CALLOUT_DIMENSION_TYPE\",\n      \"CENTRELINE\",\n      \"CHAMFER_DIMENSION_TYPE\",\n      \"COORDINATE_SYSTEM\",\n      \"DATUM_TARGET\",\n      \"DIMENSION\",\n      \"FEATURE_CONTROL_FRAME\",\n      \"FEATURE_DATUM_TYPE\",\n      \"FEATURE_DISCRETE_JOIN_TYPE\",\n      \"LINE_WELD\",\n      \"MATERIAL_SPECIFICATION\",\n      \"MEASUREMENT_LOCATOR\",\n      \"MEASUREMENT_POINT\",\n      \"NOTE\",\n      \"ORGANIZATION\",\n      \"PART_SPECIFICATION\",\n      \"PMI_TABLE_TYPE\",\n      \"PROCESS_SPECIFICATION\",\n      \"REFERENCE_AXIS\",\n      \"REFERENCE_GEOMETRY\",\n      \"REFERENCE_PLANE\",\n      \"REFERENCE_POINT\",\n      \"SECTION\",\n      \"SPOT_WELD\",\n      \"SURFACE_FINISH\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Theme-Based Advanced Configuration for Mendix Charts in JSON\nDESCRIPTION: This JSON snippet provides a template for setting global layout, data, and configuration options across various charts in a Mendix application, structured by chart type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"layout\": {\n    // Add shared layout options here (for all charts)\n  },\n  \"configuration\": {\n    // Add shared configuration options here (for all charts)\n  },\n  \"charts\": {\n    \"LineChart\": {\n      \"layout\": {\n        // Add line chart only layout options here\n      },\n      \"data\": {\n        // Add line chart only data options here\n      },\n      \"configuration\": {\n          // Add line chart only configuration options here\n      }\n    },\n    \"AreaChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BubbleChart\": {\n      // Same arrangement as the line chart\n    },\n    \"TimeSeries\": {\n      // Same arrangement as the line chart\n    },\n    \"ColumnChart\": {\n      // Same arrangement as the line chart\n    },\n    \"BarChart\": {\n      // Same arrangement as the line chart\n    },\n    \"PieChart\": {\n      // Same arrangement as the line chart\n    },\n    \"HeatMap\": {\n      // Same arrangement as the line chart\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Substring Position\nDESCRIPTION: Locates the first occurrence of a substring within a string, returning its starting index or -1 if not found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nfind('thisismystring', 'my')\n```\n\nLANGUAGE: java\nCODE:\n```\nfind('thisismystring', 'i', 5)\n```\n\n----------------------------------------\n\nTITLE: Add Custom Pod Labels to Mendix Operator\nDESCRIPTION: This example shows how to add a custom pod label to the Mendix Operator configuration. This label is crucial for enabling Private Mendix Platform to retrieve build artifacts from Azure Storage Blob.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_9\n\nLANGUAGE: text\nCODE:\n```\nkind: OperatorConfiguration\nmetadata:\n  name: mendix-operator-configuration\n  namespace: {pmp-namespace}\nspec:\n  customPodLabels:\n    general:\n        azure.workload.identity/use: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Indenting with Tabs and a Line Break – DO NOT USE TABS Markdown\nDESCRIPTION: This snippet demonstrates the pitfalls of using tabs along with line breaks in Markdown list items. It highlights that while tabs may appear to work for generic list items, they can break the formatting of more complex elements like code blocks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* unordered list\n\t1. ordered list\n\t\t* unordered list\n\nParagraph text here.\n\n1. First list item\n1. Second list item\n\t* Unordered sub-list\n1. Third list item\n\t1. Ordered sub-list\n3. And another item.\n\n\tIndenting with a tab and a line break works for generic list items, but not elements like code blocks. Tabs get treated as four spaces, regardless of tab settings within an editor.\n```\n\n----------------------------------------\n\nTITLE: Sending a SOAP Request to Delete a Customer in XML\nDESCRIPTION: This XML code illustrates how to construct a SOAP request for deleting a customer using a Mendix web service. It requires the customer name as the primary input to identify which customer to delete. The resulting SOAP envelope is used to execute the 'DeleteCustomer' operation, expecting an appropriate response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n\"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:exam=\\\"http://www.example.com/\\\">\\n   <soapenv:Header/>\\n   <soapenv:Body>\\n      <exam:DeleteCustomer>\\n         <Name>Donald A. Hylton<\\/Name>\\n      <\\/exam:DeleteCustomer>\\n   <\\/soapenv:Body>\\n<\\/soapenv:Envelope>\"\n```\n\n----------------------------------------\n\nTITLE: Tool Usage Instructions Example\nDESCRIPTION: This example shows how to instruct the model to correctly use a provided tool for function calling. By explaining what the tool does and how it should be used, you guide the LLM to call the functions at the right moment and use the response correctly, leading to a proper interaction with the tool and more effective task execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\n\"Do not make assumptions about the Ticket Identifier.\nAsk for clarification if you do not know this.\nOnly use the ticket information from the GetTicketInformationForIdentifier function for answering questions on ticket information.\"\n```\n\n----------------------------------------\n\nTITLE: Defining OQL CASE Operator\nDESCRIPTION: Illustrates the CASE operator, which evaluates multiple conditions and returns a corresponding result based on the conditions met.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n| `CASE` | Evaluates one or more conditions and returns a possible expression. | See [this page](/refguide8/oql-case-expression/). |\n```\n\n----------------------------------------\n\nTITLE: Parsing Decimal Values in Microflows - Java\nDESCRIPTION: The parseDecimal function converts a string value to a decimal value according to a specified format, tailored for microflows. It accepts input parameters such as the string to parse, the format based on Java's DecimalFormat, and an optional default value. The output is a decimal value, returning a specified default if parsing fails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"parseDecimal('3.45')\" returns \"3.45\"\n\"parseDecimal('noDecimal', 5.05)\" returns \"5.05\"\n\"parseDecimal('noDecimal', empty)\" returns \"empty\"\n\"parseDecimal($StringVariable)\" will throw an error\n\"parseDecimal($StringVariable, empty)\" returns \"empty\"\n\"parseDecimal($StringVariable, 0)\" returns \"0\"\n\"parseDecimal('3,241.98', '#,###.##')\" returns \"3241.98\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Default Web Widget Styling in Mendix SCSS\nDESCRIPTION: Demonstrates how to disable default styling for web widgets using exclusion variables in SCSS. By setting specific exclusion variables to true, such as $exclude-button and $exclude-button-helpers, you can control which styles are applied. Dependencies include an existing Mendix application with a theme module. Inputs are SCSS variables, and the output is the applied style changes in the application UI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_13\n\nLANGUAGE: SCSS\nCODE:\n```\n$exclude-button-helpers: true;\n```\n\nLANGUAGE: SCSS\nCODE:\n```\n$exclude-button: true;\n$exclude-button-helpers: true;\n```\n\nLANGUAGE: SCSS\nCODE:\n```\n$exclude-button: true;\n$exclude-button-helpers: false;\n```\n\n----------------------------------------\n\nTITLE: Environment Variable - System\nDESCRIPTION: Environment variable setting to mitigate Log4j vulnerability in versions 2.10-2.15. This is a security mitigation measure for customers who cannot update to newer versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.9.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nLOG4J_FORMAT_MSG_NO_LOOKUPS=\"true\"\n```\n\n----------------------------------------\n\nTITLE: Implementing renderIcon Method in Display Component\nDESCRIPTION: TypeScript React method that determines which icon to render based on the GroupBox's collapsed state. If custom icons are provided via props, they'll be used; otherwise, default text indicators '+' and '-' are shown.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_33\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderIcon = (): ReactNode => {\n    const { collapseIcon, expandIcon } = this.props;\n\n    if (this.state.collapsed) {\n        return expandIcon ? expandIcon : <Text style={this.styles.headerContent}>+</Text>;\n    }\n\n    return collapseIcon ? collapseIcon : <Text style={this.styles.headerContent}>-</Text>;\n};\n```\n\n----------------------------------------\n\nTITLE: Importing OData Contracts from a URL\nDESCRIPTION: This snippet provides steps to import a published OData service URL directly into Studio Pro. The process involves copying the URL from the published service settings and adding it to the consuming application as a Consumed OData Service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/without-mendix-cloud.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n1. Copy the OData service URL.\n\n   To find the published OData service URL from Mendix apps, go to the **Settings** tab of the **Published OData Service** document, and copy the entire link in the **Metadata** field.\n\n2. Add a **Consumed OData service** to your consuming app.\n\n   Right-click the **App Explorer** in the module where you would like to add the service, then click **Add other** > **Consumed OData Service**.\n\n3. In the **Add Consumed OData Service** dialog box, make sure **From URL** is selected, and paste the copied URL into the field.\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Order Price Using Loop - Mendix\nDESCRIPTION: This code snippet demonstrates how to calculate the total order price by iterating over a list of orders using a loop in a Mendix microflow. The process involves creating a variable to accumulate the total and updating it as each order's price is added. Dependencies include the customer order data structure and data access via a Mendix microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/working-with-lists-in-a-microflow.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Add a new microflow button to your order data grid...{...}\n6. Double-click the **Change variable** activity to open its **Properties**\n   - For **Variable** select **CalculatedTotalPrice**.\n   - For **Value** enter `$CalculatedTotalPrice + $IteratorOrder/TotalPrice`.\n```\n\n----------------------------------------\n\nTITLE: Customize Brand Colors in Mendix Mobile App\nDESCRIPTION: This snippet demonstrates how to customize the primary brand color of a mobile app in Mendix by modifying the brand object in the `custom-variables.js` file. It changes the primary color from the default to rosybrown, and updates other branding elements as well. The prerequisite is access to the `theme/native/custom-variables.js` file and a development environment setup for Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n//Brand Style\nexport const brand = {\n    primary: \"rosybrown\",\n    success: \"#76CA02\",\n    warning: \"#f99b1d\",\n    danger: \"#ed1c24\",\n};\n```\n\n----------------------------------------\n\nTITLE: Java Code Block Example with Highlighting\nDESCRIPTION: This Java code snippet demonstrates the use of the hl_lines parameter to highlight specific lines in a code block.  Specifically, lines 1 and 4-6 are highlighted to draw attention to certain parts of the code. The code throws a MendixRuntimeException.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n\n```java {hl_lines=[1,\"4-6\"]}\n@java.lang.Override\npublic java.lang.String executeAction() throws Exception\n{\n    // BEGIN USER CODE\n    throw new com.mendix.systemwideinterfaces.MendixRuntimeException(\"Java action was not implemented\");\n    // END USER CODE\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Date with dateTime function and four parameters\nDESCRIPTION: This snippet demonstrates how to create a date using the `dateTime` function with year, month, day, and hour parameters. The `dateTime` function utilizes the session's calendar, whereas `dateTimeUTC` uses UTC. It returns a date object with the year set to 2007, the month set to January, the day set to 1, the hour set to 1, and the minutes and seconds set to the default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:00:00 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Fetching Object Before Deletion with SQL in Mendix\nDESCRIPTION: This SQL query retrieves an employee object from the database based on its ID before deleting it. It selects the ID, firstname, dateofbirth, jobtitle, department, and lastname. This is done to execute business logic, rules, and events associated with the entity before actual deletion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n WHERE \"myfirstmodule$employee\".\"id\" = (281474976710857)\n```\n\n----------------------------------------\n\nTITLE: SVG Example\nDESCRIPTION: This SVG code defines a simple rectangle with a blue stroke.  It serves as an example for demonstrating how styling properties like 'fill' can be applied to change the appearance of SVG elements in Mendix native mobile apps. The viewBox attribute defines the coordinate system for the SVG.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_0\n\nLANGUAGE: svg\nCODE:\n```\n<svg viewBox=\"0 0 100 100\">\n    <rect x=\"10\" y=\"10\" width=\"80\" height=\"80\" stroke=\"blue\"/>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Warning Log for Large Request State in Mendix\nDESCRIPTION: Example of WARNING level logging output when request state size exceeds configured threshold, showing object counts by entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/runtime-java/transient-objects-garbage-collecting.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nWARNING: Request state size of 551 objects exceeds the threshold of 500 objects. Request details: type `execute-action` in session `fd0771fe-8c12-49cf-8667-921058b116a3`. State consists of:\n * MyModule.MyEntity: 421 objects\n * AnotherModule.SomeEntity: 130 objects\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple MicroflowReturnValue in C#\nDESCRIPTION: Demonstrates how to create a basic MicroflowReturnValue using the IMicroflowExpressionService. This example creates a boolean return value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nnew MicroflowReturnValue(DataType.Boolean, microflowExpressionService.CreateFromString(\"true or false\"));\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with at Least One Order Using XPath\nDESCRIPTION: This query retrieves all the customers who have placed at least one order using an exist-expression in an XPath query. The example is provided for both Mendix Studio Pro and Java Query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_11\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Sales.Customer_Order/Sales.Order]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[Sales.Customer_Order/Sales.Order]\n```\n\n----------------------------------------\n\nTITLE: Defining a TestNG Suite with Parameters in XML\nDESCRIPTION: This XML snippet sets up a TestNG test suite named `MyFirstTestSuite` that runs tests across Chrome, Internet Explorer, and Firefox using specific browser parameters. The suite specifies the browser type as a parameter, facilitating multi-browser executions for the given test class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suite name=\"MyFirstTestSuite\">\n\t<test name=\"ChromeTest\">\n\t\t<parameter name=\"browser\" value=\"chrome\" />\n\t\t<classes>\n\t\t\t<class name=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n\t<test name=\"IETest\">\n\t\t<parameter name=\"browser\" value=\"ie\" />\n\t\t<classes>\n\t\t\t<class name=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n\t<test name=\"FirefoxTest\">\n\t\t<parameter name=\"browser\" value=\"firefox\" />\n\t\t<classes>\n\t\t\t<class name=\"myfirsttestngpackage.MyFirstTestNGFile\" />\n\t\t</classes>\n\t</test>\n</suite>\n```\n\n----------------------------------------\n\nTITLE: Defining PostgreSQL Deployment in YAML\nDESCRIPTION: This YAML file defines a Kubernetes Deployment for a PostgreSQL database. It specifies the image to use (postgres:11), environment variables for database configuration (name, user, password, database name), and a volume mount for persistent data storage.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n\"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n        - name: postgres\n          image: postgres:11\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: db0\n            - name: POSTGRES_USER\n              value: mendix\n            - name: POSTGRES_PASSWORD\n              value: mendix\n          volumeMounts:\n            - mountPath: \\\"/var/lib/postgresql/data\\\"\n              name: \\\"mendix-pgdata\\\"\n      volumes:\n        - hostPath:\n            path: \\\"/home/docker/pgdata\\\"\n          name: mendix-pgdata\"\n```\n\n----------------------------------------\n\nTITLE: Copying FileDocuments in Java Action - Java\nDESCRIPTION: This snippet illustrates how to copy FileDocuments between GenericObject entities in a Mendix application. It includes retrieving attachments with a helper method and using loops to copy each attachment. The code ensures attachments are duplicated, preserving the ability to modify them independently.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/java-programming/java-api-tutorial.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic static List<IMendixObject> getAttachments(GenericObject object, IContext context) throws CoreException\n{\n\tString attachmentEntityName = Attachment.entityName;\n\tString relationName = Attachment.MemberNames.Attachment_GenericObject.toString();\n\tString currentObjectID = object.getGUID();\n\tString query = String.format(\"//%s[%s=$currentid]\", attachmentEntityName, relationName);\n\treturn Core.createXPathQuery(query)\n\t\t.setVariable(\"currentid\", currentObjectID)\n\t\t.execute(context);\n}\n```\n\nLANGUAGE: Java\nCODE:\n```\nAttachment newAttachment;\nInputStream inputStream;\nfor (IMendixObject iMendixObject: getAttachments(sourceObject, context))\n{\n\tinputStream = Core.getFileDocumentContent(iMendixObject);\n\tnewAttachment = Attachment.create(context);\n\tnewAttachment.setAttachment_GenericObject(destinationObject);\n\tCore.storeFileDocumentContent(context, newAttachment.getMendixObject(), (String) iMendixObject.getValue(system.proxies.Document.MemberNames.Name.toString()), inputStream);\n}\n```\n\n----------------------------------------\n\nTITLE: Basic GetJobStatus SOAP Request Example\nDESCRIPTION: Basic XML structure for making a GetJobStatus request to retrieve the status and result of a job. This minimal request requires authentication credentials, app token, job ID, and app ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Header>\n    <tns:authentication>\n      <username>exampleUser</username>\n      <password>examplePassword</password>\n    </tns:authentication>\n  </soap:Header>\n  <soap:Body>\n    <tns:GetTestRun>\n      <TestRun>\n        <AppAPIToken>exampleString</AppAPIToken>\n        <JobID>exampleString</JobID>\n        <AppID>exampleString</AppID>\n      </TestRun>\n    </tns:GetTestRun>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Null Name in Java\nDESCRIPTION: This XPath query returns all customers whose name is not known to the system by checking if the Name attribute is NULL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = NULL]\n```\n\n----------------------------------------\n\nTITLE: Setting a Badge Number Using JavaScript Action\nDESCRIPTION: This snippet describes how to use a JavaScript action within a Mendix nanoflow to set the badge number for local notifications. It involves creating a variable to hold the badge number, then using the 'Set badge number' activity to assign this value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/local-notifications/local-notif-badges.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Adding Page and DataView Source Parameters\nDESCRIPTION: Introduces the `pageParameter` property for PageVariable and DataViewSource elements to enhance configuration flexibility\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-9/metamodel-9.5.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# PageVariable and DataViewSource Updates\npageParameter: # New property\n```\n\n----------------------------------------\n\nTITLE: Downloading and Storing RDS TLS Certificate as Kubernetes Secret\nDESCRIPTION: This shell script downloads the RDS TLS certificate bundle from AWS and stores it as a Kubernetes secret. It uses `curl` to download the certificate and `kubectl` to create a generic secret named `mendix-custom-tls` in the specified namespace. Replace `{namespace}` with the namespace where the Mendix Operator is installed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_19\n\nLANGUAGE: shell\nCODE:\n```\ncurl -L -o custom.crt https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem\nkubectl -n {namespace} create secret generic mendix-custom-tls --from-file=custom.crt=custom.crt\n```\n\n----------------------------------------\n\nTITLE: Including Label Section in Drop-Downs\nDESCRIPTION: This snippet includes the reference for the label properties of drop-downs, providing information about how to effectively label these widgets for user interaction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint for Product Retrieval\nDESCRIPTION: This XPath constraint is used to retrieve products based on their availability, category, and name. It checks if the product is associated with a ProductState where Available is true, belongs to a specific category, and has a specified name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/extending-your-application-with-custom-java.md#2025-04-21_snippet_4\n\nLANGUAGE: xpath\nCODE:\n```\n[Products.Product_ProductState/Products.ProductState[\n        Available = true ()\n        ]]\n        [Products.Product_Category = $Category]\n        [Name = 'The Lord of the Rings']\n```\n\n----------------------------------------\n\nTITLE: Configuring Operator Configuration in Kubernetes\nDESCRIPTION: Shell command and YAML configuration to edit the operator configuration in a Kubernetes namespace to resolve a crash loop issue by setting the endpoint type to service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/mendix-for-private-cloud.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit operatorconfiguration mendix-operator-configuration\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  endpoint:\n    type: service\n```\n\n----------------------------------------\n\nTITLE: Complete Module-Level Theme Settings Example in JSON\nDESCRIPTION: Provides a comprehensive example integrating all the exclusion concepts, showing how to exclude various UI elements from both Atlas Core and Atlas Web Content modules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Core\": {\n            \"layouts\": true,\n            \"pageTemplates\": true\n        },\n        \"Atlas_Web_Content\": {\n            \"buildingBlocks\": true,\n            \"designProperties\": true,\n            \"styling\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to Azure SQL Database via Shell\nDESCRIPTION: This shell command retrieves an access token for Azure SQL Database, then connects to the database using the `sqlcmd` client with the retrieved token. It also removes the temporary token file after use.  The <hostname> placeholder needs to be replaced with the actual server name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_22\n\nLANGUAGE: Shell\nCODE:\n```\naz account get-access-token --resource https://database.windows.net --output tsv | cut -f 1 | tr -d '\\n' | iconv -f ascii -t UTF-16LE > /tmp/token && sqlcmd -S <hostname> -G -P /tmp/token && rm /tmp/token\n```\n\n----------------------------------------\n\nTITLE: Requesting Runtime Statistics via Mendix Runtime\nDESCRIPTION: This request to Mendix Runtime returns statistics providing a snapshot of current requests per handler, session information, database operations, and memory usage. The request needs no parameters, but requires authentication similar to other admin requests. It reveals detailed runtime data, including request handler activities, session counts, and memory usage metrics, useful for diagnosing system performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"runtime_statistics\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Configuring Frontmatter for Release Notes Page in Markdown\nDESCRIPTION: This frontmatter block configures the release notes landing page with title, URL, description, weight for navigation ordering, and list display options. It also sets up cascade properties for child pages to inherit metadata like content type and Mendix version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Release Notes\"\nurl: /releasenotes/\ndescription: \"The release notes for the Mendix Platform are divided into various product categories and versions.\"\nweight: 5\nno_list: false\nsimple_list: true\ncascade:\n    - content_type: \"Release Notes\"\n    - mendix_version: 10\n#If moving or renaming this doc file, implement a temporary redirect and let the respective team know they should update the URL in the product. See Mapping to Products for more details.\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Info Button\nDESCRIPTION: This snippet creates a Bootstrap button styled with the color 'info'. The button links to the Bootstrap documentation for buttons. Parameters include color, href for the link, text for the button label, and title for the button tooltip.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"info\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Info\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Get Kubernetes Service Account Token\nDESCRIPTION: This snippet retrieves the token for the previously created service account. It uses `kubectl get secret` to retrieve the secret associated with the service account and extracts the token from the `data.token` field using `jsonpath` and then decodes it using base64. An alternative command is provided for OpenShift clusters to retrieve the token.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# get service account token:\nkubectl get secret mxplatform-cicd -n$NAMESPACE -o jsonpath='{.data.token}'|base64 -d\n# for openshift cluster\nkubectl get secret mxplatform-cicd -n$NAMESPACE -o jsonpath='{.metadata.annotations.openshift\\.io/token-secret\\.value}'\n```\n\n----------------------------------------\n\nTITLE: SQL Query for Yearly Sales by Category View Entity\nDESCRIPTION: SQL query that aggregates sales data by year and product category. It calculates total sales by summing the product of quantity, unit price, and discount, then groups the results by category and year.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/charting-with-view-entities.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  CAST(DATEPART(YEAR, o.OrderDate) as INTEGER) as OrderYear\n  , c.CategoryId as CategoryId\n  , c.CategoryName as CategoryName\n  , SUM(ol.Quantity * ol.UnitPrice * (1 - ol.Discount)) as TotalSales\nFROM SalesDashboard.\"Order\" as o\n  JOIN SalesDashboard.OrderLine_Order/SalesDashboard.OrderLine as ol\n  LEFT JOIN SalesDashboard.OrderLine_Product/SalesDashboard.Product as p\nLEFT JOIN SalesDashboard.Product_Category/SalesDashboard.Category as c\nGROUP BY c.CategoryId, c.CategoryName, CAST(DATEPART(YEAR, o.OrderDate) as INTEGER)\n```\n\n----------------------------------------\n\nTITLE: Java Action for Retrieving Specialization Associations\nDESCRIPTION: Java action implementation to work around limitations of retrieving specialization associations in Mendix. Takes a Specialization object and Boolean Reverse parameter to fetch associated objects using the Core.retrieveByPath API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/associations/query-over.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class RetrieveAsAssociatedWithB extends CustomJavaAction<java.util.List<IMendixObject>>\n{\n\tprivate IMendixObject __B;\n\tprivate main.proxies.Specialization B;\n\tprivate java.lang.Boolean Reverse;\n\n\tpublic RetrieveAsAssociatedWithB(IContext context, IMendixObject B, java.lang.Boolean Reverse)\n\t{\n\t\tsuper(context);\n\t\tthis.__B = B;\n\t\tthis.Reverse = Reverse;\n\t}\n\n\t@java.lang.Override\n\tpublic java.util.List<IMendixObject> executeAction() throws Exception\n\t{\n\t\tthis.B = __B == null ? null : main.proxies.Specialization.initialize(getContext(), __B);\n \n\t\t// BEGIN USER CODE\n\t\treturn Core.retrieveByPath(getContext(), __B, \"Main.Generalization_Specialization\", Reverse);\n\t\t// END USER CODE\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Pages in Mendix Native Mobile\nDESCRIPTION: Defines styles for pages, including the status bar, header, and container. It allows customization of the page layout, header appearance, and status bar style for both iOS and Android platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Page = {\n  statusBar: {\n    barStyle: null, // The style of the status bar, which can be either `dark-content` (black text) or `light-content` (white text).\n    backgroundColor: null, // The background color of the status bar (Android only).\n  },\n  header: {\n    container: {\n      // This has all ViewStyle properties.\n    },\n    title: {\n      // This has all TextStyle properties.\n    },\n    backButtonText: {\n      // This has all TextStyle properties.\n    },\n    backButtonIcon: {\n      // This has all ImageStyle properties.\n    }\n  },\n  container: {\n    // This has all ImageStyle properties.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: RAG Uncertainty Handling Example\nDESCRIPTION: This snippet shows how to handle uncertainty when using Retrieval-Augmented Generation (RAG). The instruction tells the model to only answer based on the provided information and respond that it does not know if the information is insufficient, thus improving the reliability of answers in RAG scenarios.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n\"You are a helpful assistant who tries to answer user questions based on chunks of topic-specific data.\nIf you cannot answer a question based on the provided information alone, you respond that you do not know.\nFor the current question, please base the answer on the following pieces of information:\n<information>\n...\n</information>\"\n```\n\n----------------------------------------\n\nTITLE: Returning Employee Data in JSON (Runtime Server to Mendix Client)\nDESCRIPTION: This JSON response from the Runtime Server to the Mendix Client contains the retrieved employee data. It includes the total count of records and the actual employee objects with their attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"count\":2,\n   \"mxobjects\":[\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710757\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"peter1\"},\n            \"DateOfBirth\":{\"value\":-315622800000},\n            \"Jobtitle\":{\"value\":\"sales\"},\n            \"Department\":{\"value\":\"sales\"},\n            \"Lastname\":{\"value\":\"jones\"}\n         }\n      },\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710657\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"piet\"},\n            \"DateOfBirth\":{\"value\":476406000000},\n            \"Jobtitle\":{\"value\":\"consultant\"},\n            \"Department\":{\"value\":\"expert services\"},\n            \"Lastname\":{\"value\":\"jansen\"}\n         }\n      }\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Progress Circle Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Progress Circle widget including container, circle, fill, text and validation message styles. Controls the appearance of a circular progress indicator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_progresscircle_ProgressCircle = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  circle: {\n    size: null, // This is the radius of the progress circle.\n    borderWidth: null, // This is the border width of the progress circle.\n    borderColor: null, // This is the color of the progress circle border.\n  },\n  fill: {\n    backgroundColor: null, // This is the color of the circle's filled portion.\n    width: null, // This is the width of the progress circle.\n    lineCapRounded: null, // This determines if the rotating line's front tip is rounded off or not.\n  },\n  text: {\n    // This has all TextStyle properties.\n  },\n  validationMessage: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Styling SVG Icons with React Native\nDESCRIPTION: This JSX code demonstrates how to style an SVG icon within a React Native component.  It defines a style object 'DemoButton' that includes styling for the container, caption, and icon, setting the icon color to blue.  This example is specific to buttons and bottom bar items in Mendix native mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nexport const DemoButton = {\n\tcontainer: {\n\t\tbackgroundColor: 'green'\n\t},\n\tcaption: {\n\t\tcolor: 'orange'\n\t},\n\ticon: {\n\t\tcolor: 'blue'\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Nginx Timeouts for Marketplace Uploads\nDESCRIPTION: This snippet configures Nginx timeouts to prevent issues during large file uploads to the Mendix Marketplace. Increasing the client header, proxy connect, read, and send timeouts can resolve high latency issues encountered when manually uploading content bundles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/reference/admin/pmp-ref-admin-manage.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"nginx.ingress.kubernetes.io/client-header-timeout: \\\"300\\\"\nnginx.ingress.kubernetes.io/proxy-connect-timeout: \\\"300\\\"\nnginx.ingress.kubernetes.io/proxy-read-timeout: \\\"300\\\"\nnginx.ingress.kubernetes.io/proxy-send-timeout: \\\"300\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating Pagination Object for GetModelListFromMendix Nanoflow\nDESCRIPTION: This snippet demonstrates the creation of a CreatePaginationObject nanoflow to provide the required Pagination parameter input for the GetModelListFromMendix nanoflow. This is used to build a model list in the Mendix app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: Mendix\nCODE:\n```\nNanoflow: CreatePaginationObject\nOutput: Pagination object\n```\n\n----------------------------------------\n\nTITLE: Implementing RowLayout with Fixed Column Size in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a row layout with fixed column sizes using the RowLayout type. It shows how to set different grow factors for children to control space distribution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"RowLayout\",\n        columnSize: \"fixed\",\n        children: [\n            { type: \"Image\", data: mxLogo, grow: 3 },\n            { type: \"Text\", fontSize: 20, content: \"We share the\" },\n            { type: \"Text\", fontSize: 16, content: \"right half of\" },\n            { type: \"Text\", fontSize: 12, content: \"the row layout\" }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Logging Auto-Committed Objects During Synchronization in Mendix\nDESCRIPTION: This snippet provides a log message format indicating the presence of auto-committed objects during synchronization in Mendix offline-first applications. It highlights the count of identified auto-committed objects and their respective entity types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"The offline synchronization detected {count} auto-committed objects during synchronization executed by {user}. Auto committed objects are not supported during offline synchronization. The Mendix runtime has deleted the following objects:\\n- {Entity1}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\\n- {Entity2}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\\n...\\n- {EntityN}: {count} object(s) - ({guid1}, {guid2}, ... {guidN})\\n\\nPlease refer to the documentation to learn more about this issue and how to solve it:\\nhttps://docs.mendix.com/refguide/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects/\"\n```\n\n----------------------------------------\n\nTITLE: Opening a Dockable Pane with Web Views in C#\nDESCRIPTION: This code snippet explains how to open a dockable pane in the Mendix application using the DockablePaneExtension API. A specific view model class, 'WebViewDockablePaneViewModel,' should be implemented to manage the web view.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-reference-guide/web-view.md#2025-04-21_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nDockablePaneExtension.Open(...) // Opens a dockable pane within the application\n```\n\n----------------------------------------\n\nTITLE: Displaying File Upload Advice Table in Markdown\nDESCRIPTION: A markdown table providing advice for file uploads in different Selenium setups, including Local Selenium Server, Selenium SaaS, and Selenium SaaS Agent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/ht-one-upload-file-using-ats.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Selenium Setup | Advice |\n| :-------------- | :----- |\n| Local Selenium Server (Docker) | Put all the generic files a test folder on your server. |\n| Selenium SaaS | Depends on the chosen provider. |\n| Selenium SaaS Agent | Install the agent on a server with your Mendix app. Also put the generic test files there. |\n```\n\n----------------------------------------\n\nTITLE: Combined View Entity with Nested SQL Query in Mendix\nDESCRIPTION: Alternative approach using a single nested SQL query that combines both view entities into one. This query first creates a subquery combining products and translations, then filters by the user's language preference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/multilingual-apps.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  cp.ProductId as ProductId,\n  cp.ProductName as ProductName,\n  cp.QuantityPerUnit as QuantityPerUnit,\n  cp.Discontinued as Discontinued,\n  cp.Description as Description,\n  cp.LanguageCode as LanguageCode\nFROM\n(\n  SELECT\n    p.ProductId as ProductId,\n    p.ProductName as ProductName,\n    p.QuantityPerUnit as QuantityPerUnit,\n    p.Discontinued as Discontinued,\n    pt.LanguageCode as LanguageCode,\n    coalesce(pt.Description, p.Description) as Description\n  FROM Shop.Product p\n    JOIN p/Shop.ProductTranslation_Product/Shop.ProductTranslation pt\n  UNION\n  SELECT\n    p.ProductId as ProductId,\n    p.ProductName as ProductName,\n    p.QuantityPerUnit as QuantityPerUnit,\n    p.Discontinued as Discontinued,\n    cast('en_US' as STRING) as LanguageCode,\n    p.Description as Description\n  FROM Shop.Product p\n) as cp\n  LEFT JOIN System.User as u on (u.ID = '[%CurrentUser%]')\n  LEFT JOIN u/System.User_Language/System.Language as l\nWHERE (l.Code = cp.LanguageCode)\n```\n\n----------------------------------------\n\nTITLE: Creating Alert Component in React - TypeScript\nDESCRIPTION: This code snippet defines a stateless React component named 'Alert' that displays validation feedback with customizable styles. It utilizes TypeScript for type definitions, including props for styling options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { FunctionComponent, createElement } from \"react\";\nimport classNames from \"classnames\";\nexport interface AlertProps {\n    alertStyle?: \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\";\n    className?: string;\n}\nexport const Alert: FunctionComponent<AlertProps> = ({ alertStyle, className, children }) =>\n    children ? (\n        <div className={classNames(`alert alert-${alertStyle} mx-validation-message`, className)}>\n            {children}\n        </div>\n    ) : null;\nAlert.displayName = \"Alert\";\nAlert.defaultProps = { alertStyle: \"danger\" };\n```\n\n----------------------------------------\n\nTITLE: Setting Default Values for Camera Start Function\nDESCRIPTION: This snippet assigns default values to parameters if not provided by the user. It sets numeric, enumeration, boolean, and string types, ensuring that JavaScript actions are less prone to input errors by providing sensible defaults.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction CameraStart(targetSize, pictureSource, correctOrientation, waterMark) {\n    targetSize = targetSize && targetSize > 0 ? targetSize : 150;  // numeric\n    pictureSource = pictureSource ? pictureSource : \"camera\"; // enumeration\n    correctOrientation = correctOrientation ? true : false; // boolean\n    waterMark = waterMark !== undefined ? waterMark : \"DEMO\"; // string\n    /* implementation */\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Maps Widget with JavaScript\nDESCRIPTION: This code snippet defines the styling properties for the Maps widget. It includes properties for the container, loading overlay, loading indicator (color), and marker (color, opacity). Each property allows customization of appearance using ViewStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_maps_Maps = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  loadingOverlay: {\n    // This has all ViewStyle properties.\n  },\n  loadingIndicator: {\n    color: null, // This is the color of the loading indicator.\n  },\n  marker: {\n    color: null, // This is the color of the location marker.\n    opacity: null, // This is the opacity of the location marker.\n  },\n};\n\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Find Checkbox Set Selector in Markdown\nDESCRIPTION: This code snippet defines the return value for the Find Checkbox Set Selector function using a markdown table. It specifies the name, datatype, and description of the returned widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/find-checkbox.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nWidget | WebElement | The found checkbox.\n```\n\n----------------------------------------\n\nTITLE: Defining Label System Property in Mendix Pluggable Widget XML\nDESCRIPTION: This XML snippet defines the Label system property for a Mendix pluggable widget. It allows the widget to have labeling functionality similar to core input widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"Label\"/>\n```\n\n----------------------------------------\n\nTITLE: Device Type Regular Expressions\nDESCRIPTION: Regular expressions used for automatic device type detection and profile redirection based on User-Agent strings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/app/navigation/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: regex\nCODE:\n```\nAndroid.*Mobile|iPhone|iPod|BlackBerry    // Phone\\nAndroid|iPad                         // Tablet\\n*(other)*                           // Responsive\n```\n\n----------------------------------------\n\nTITLE: Restarting Mendix Operator in Kubernetes\nDESCRIPTION: Commands to restart the Mendix Operator deployment in Kubernetes by scaling it down to zero replicas and then back to one.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} scale deployment mendix-operator --replicas=0\nkubectl -n {namespace} scale deployment mendix-operator --replicas=1\n```\n\n----------------------------------------\n\nTITLE: SOAP Fault Object Structure\nDESCRIPTION: Defines the structure of System.SoapFault entity used for SOAP error handling in Mendix microflows. Contains code, reason, node, role, and detail elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/error-handling-in-microflows.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nCode | String | The code element of the SOAP fault.\nReason | String | The reason element of the SOAP fault.\nNode | String | The node element of the SOAP fault.\nRole | String | The role element of the SOAP fault.\nDetail | String | The detail element of the SOAP fault.\n```\n\n----------------------------------------\n\nTITLE: Boolean Property Configuration\nDESCRIPTION: Shows the configuration for a boolean property type with default value setting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"isVisible\" type=\"boolean\" defaultValue=\"true\">\n <caption>Visibility</caption>\n <category>Data source</category>\n <description>Whether the widget is initially visible.</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Markdown alert block for Min Year warning\nDESCRIPTION: Markdown code block showing a warning about Min Year field behavior\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/report-date-parameter/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nThe value in **Min. year** will not prevent an end-user from choosing an earlier date in the **From** or **To** fields of the report date parameter widget. It only applies to the *year* date range field.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Mathematical Function Call - pow Expression\nDESCRIPTION: Reference to the pow expression functionality in nanoflows which had an issue with non-integer exponents.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.17.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\npow\n```\n\n----------------------------------------\n\nTITLE: Special Symbol Characters for Password Policy\nDESCRIPTION: List of special characters that are considered valid symbols for password requirements\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/security/app-security/password-policy.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n` ~ ! @ # $ % ^ & * ( ) - _ = + [ { ] } \\\n```\n\n----------------------------------------\n\nTITLE: Creating SVG Image Preview in Widget Structure Mode\nDESCRIPTION: Example implementation of the getPreview function that renders an SVG circle as the widget preview. Demonstrates setting image type, document content, and width constraints for the preview in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => {\n    const mySvgImage = `\n<svg height=\"1000\" width=\"1000\">\n    <circle cx=\"500\" cy=\"500\" r=\"400\" stroke=\"black\" stroke-width=\"35\" fill=\"blue\" />\n</svg>`;\n    return {\n        type: \"Image\",\n        document: mySvgImage,\n        width: 200 // sets a maximum width of 200\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Displaying Info Alert in Markdown\nDESCRIPTION: This snippet shows how to create an information alert box in Markdown using Mendix-specific shortcodes. It informs users that the interface and functionality of deployment pages may vary depending on the deployment platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/developerportal/deployment.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThe interface and functionality of these pages vary depending on where your app is deployed. For details about the various deployment options, see the [Deploying Apps](/deployment/) section.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Find/Assert Widget Function in Markdown\nDESCRIPTION: This code snippet defines the return value for the Find/Assert Widget function using a Markdown table. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-findassert-widget.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n--- | --- | ---\nWidget | WebElement | The Widget as a Web Element.\n```\n\n----------------------------------------\n\nTITLE: Configuring Widget Definition XML for Mendix Text Box\nDESCRIPTION: XML configuration for the widget definition file that specifies widget properties and capabilities including attribute type restrictions and entity context requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"mendix.textbox.TextBox\" pluginWidget=\"true\" needsEntityContext=\"true\" supportedPlatform=\"Web\" offlineCapable=\"true\" xmlns=\"http://www.mendix.com/widget/1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../xsd/widget.xsd\">\n    <name>Text Box</name>\n    <description>Edit text input</description>\n    <icon/>\n    <properties>\n        <propertyGroup caption=\"Data source\">\n            <property key=\"textAttribute\" type=\"attribute\">\n                <caption>Attribute (path)</caption>\n                <description/>\n                <attributeTypes>\n                    <attributeType name=\"String\"/>\n                </attributeTypes>\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Logging Query Plans in Mendix\nDESCRIPTION: Configuration to enable logging of query plans in the Mendix Runtime log for performance analysis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/use-view-entities.md#2025-04-21_snippet_1\n\nLANGUAGE: Plain\nCODE:\n```\nDataStorage_QueryPlan log node set to Trace\n```\n\n----------------------------------------\n\nTITLE: Reinstalling NPM Package Dependencies\nDESCRIPTION: This shell command reinstalls package dependencies with legacy peer dependencies in a Node.js project folder using npm 7 or higher. It's useful for avoiding common installation issues related to peer dependencies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Defining Spacing Design Property with CSS Variables in JavaScript\nDESCRIPTION: This snippet shows how to define a Spacing design property using CSS variables for margin and padding options. It includes small (S) and medium (M) sizes using variables that apply to all four directions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"Spacing\",\n    \"type\": \"Spacing\",\n    \"description\": \"Spacing control\",\n    \"margin\": [\n        {\n            \"name\": \"S\",\n            \"variable\": \"--spacing-s\",\n        },\n        {\n            \"name\": \"M\",\n            \"variable\": \"--spacing-m\"\n        }\n    ],\n    \"padding\": [\n        {\n            \"name\": \"S\",\n            \"variable\": \"--spacing-s\"\n        },\n         {\n            \"name\": \"M\",\n            \"variable\": \"--spacing-m\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Layout Grid Structure in XML\nDESCRIPTION: Shows the XML structure for a layout grid widget, including rows and columns. The layout grid is used to structure content on a page with configurable sizing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<row>\n\t\t<col></col>\n\t</row>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Including Events Section for Drop-Downs\nDESCRIPTION: This snippet references the events associated with drop-down widgets, providing hooks for actions such as onChange, onEnter, and onLeave.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Call REST Service Action for File Retrieval in Mendix Microflow\nDESCRIPTION: Configuration for the Call REST service action in a Mendix microflow to retrieve a file from a REST service and store it as a file document. The configuration includes setting the URL location and configuring the response to be stored in a file document entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/rest-binary.md#2025-04-21_snippet_1\n\nLANGUAGE: microflow\nCODE:\n```\n* In the **General** tab: \n     * **Location** – the URL to your rest service and the specific file (for example, `http://localhost:8080/rest/cmsapi/v1/myfile/1`)\n* In the **Response** tab:\n     * **Response handling** – select **Store in a file document**\n     * **Store in variable** – select **Yes**\n     * **Type** – select the **RetrievedFile** entity\n     * **Variable Name** – enter `GetResponseFile`\n```\n\n----------------------------------------\n\nTITLE: Finding Switch Widget Element using jQuery in Browser Console\nDESCRIPTION: This code snippet demonstrates how to use jQuery to locate the Mendix Switch widget element in the browser console. It combines the mx-name attribute and the widget-switch class to find the specific element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-02-switch.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n$( '.mx-name-switch1 .widget-switch' )\n```\n\n----------------------------------------\n\nTITLE: Querying with XPath ends-with in Mendix Java\nDESCRIPTION: Demonstrates using the `ends-with()` function in XPath for Java to find Sales.Customer objects where the Name attribute ends with 'sen'. This requires familiarity with XPath query syntax and is commonly used in Mendix to filter database results based on string suffixes. The query is straightforward, taking the attribute name and desired ending string as parameters, and outputs matching object instances.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-ends-with.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n//Sales.Customer[ends-with(Name, 'sen')]\n```\n\n----------------------------------------\n\nTITLE: Validating List Objects and Attribute Names in JavaScript Actions\nDESCRIPTION: Shows how to validate a list of Mendix objects and an attribute name by checking if the attribute exists and is of the correct type (numeric).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @param {MxObject[]} objectList\n * @param {string} attributeName\n * @returns {Promise.<Big>}\n */\nasync function SumListAttributeValues(objectList, attributeName) {\n    // BEGIN USER CODE\n    if (!attributeName || attributeName.trim() === \"\") {\n        throw new Error(\"The 'Attribute name' parameter can not be empty\");\n    }\n    if (!objectList || objectList.length === 0) {\n        // Return early, sum of empty is 0\n        return new Big(0);\n    }\n    if (!objectList[0].has(attributeName)) {\n        throw new Error(\"List of type \" + objectList[0].getEntity() + \" does not have an attribute named \" + attributeName);\n    }\n    if (!objectList[0].isNumeric(attributeName)) {\n        throw new Error(\"List of type \" + objectList[0].getEntity() + \" an attribute named \" + attributeName + \" is not numeric\");\n    }\n    /* implementation */\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom User Entity for XSUAA Connector\nDESCRIPTION: This snippet explains how to configure a custom user entity in the XSUAA Connector for the SAP Business Technology Platform. To customize the user management functionality, update the UserEntity constant to point to your custom entity name. The custom entity must extend the System.User entity and include specific attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-xsuaa-connector.md#2025-04-21_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n* If you want to use any custom entity for user management, you can update the **UserEntity** constant with the custom user entity name. Its default value is set to **SapAuthentication.SapUser**. The custom entity must fulfill the following criteria:\n\n* It must be a generalization of the `System.User` entity.\n* It must have attributes with the names `DisplayName` and `EmailAddress`, both of type String.\n```\n\n----------------------------------------\n\nTITLE: Configuring SecretProviderClass for Azure Key Vault Integration\nDESCRIPTION: This YAML configuration creates a SecretProviderClass resource to define how secrets from Azure Key Vault should be mounted into Mendix application pods. It specifies which secrets to retrieve and how they should be named when mounted into containers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: secrets-store.csi.x-k8s.io/v1\nkind: SecretProviderClass\nmetadata:\n  name: <{MendixApp CR name}>\n  annotations:\n    privatecloud.mendix.com/environment-class: \"true\"\nspec:\n  provider: azure\n  parameters:\n    keyvaultName: \"<{The key vault name that you created in step 3 above}>\"\n    clientID: \"<{The Managed Identity Client ID copied in step 8 above}>\"\n    tenantID: \"<{The Tenant (Directory) ID copied in step 3 above}>\"\n    objects: |\n      array:\n        - |\n          objectName: database-type\n          objectType: secret\n          objectAlias: database-type\n        - |\n          objectName: database-jdbc-url\n          objectType: secret\n          objectAlias: database-jdbc-url\n        - |\n          objectName: database-host\n          objectType: secret\n          objectAlias: database-host\n        - |\n          objectName: database-name\n          objectType: secret\n          objectAlias: database-name\n        - |\n          objectName: database-username\n          objectType: secret\n          objectAlias: database-username\n        - |\n          objectName: storage-service-name\n          objectType: secret\n          objectAlias: storage-service-name\n        - |\n          objectName: storage-azure-account-name\n          objectType: secret\n          objectAlias: storage-azure-account-name\n        - |\n          objectName: storage-azure-account-key\n          objectType: secret\n          objectAlias: storage-azure-account-key\n        - |\n          objectName: storage-azure-container\n          objectType: secret\n          objectAlias: storage-azure-container\n        - |\n          objectName: storage-perform-delete\n          objectType: secret\n          objectAlias: storage-perform-delete\n        - |\n          objectName: mx-admin-password\n          objectType: secret\n          objectAlias: mx-admin-password\n        # Example: use MyFirstModule.MyConstant constant value from Azure Key vault\n        #- |\n        #  objectName: mx-const-MyFirstModule-MyConstant\n        #  objectType: secret\n        #  objectAlias: \"mx-const-MyFirstModule.MyConstant\"\n        # Example: use com.mendix.storage.s3.EncryptionKeys custom setting from Azure Key vault\n        #- |\n        #  objectName: com-mendix-storage-s3-EncryptionKeys\n        #  objectType: secret\n        #  objectAlias: \"mx-runtime-com.mendix.storage.s3.EncryptionKeys\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Comprehensive Styling for the Group Box Widget\nDESCRIPTION: This code defines a complete set of styles for the group box widget, including container borders, header formatting with flex layout, and proper content padding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {\n        borderColor: \"#000000\",\n        borderRadius: 4,\n        borderWidth: 1,\n        overflow: \"hidden\"\n    },\n    header: {\n        backgroundColor: \"#000000\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16,\n        fontWeight: \"bold\"\n    },\n    content: {\n        paddingVertical: 10,\n        paddingHorizontal: 15\n    },\n    label: {\n        color: \"#F6BB42\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Event Handler for Order Entity in Mendix\nDESCRIPTION: This snippet demonstrates how to create an after commit event handler for the Order entity to update the TotalOrderAmount in the related Customer entity. It focuses on capturing the commit event and initiating a microflow for data synchronization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/data-models/denormalize-data-to-improve-performance.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the domain model and double-click the Order entity to open its properties editor.\n2. On the **Event handlers** tab, click **New** to add a new event handler.\n3. On the **New Event Handler** dialog box, do the following:\n    * Select **After** as the **Moment**\n    * Select **Commit** as the **Event**\n    * Select **Yes** for **Pass the event object**\n    * Click **Select...** to open the microflow selector\n4. On the microflow selector, click **New** and enter a name for the new microflow (for example, *Order_AfterCommit*).\n5. Click **OK** to create the new microflow, and then click **OK** again to save the event handler.\n```\n\n----------------------------------------\n\nTITLE: Complex Query Using Reversed XPath Cascade\nDESCRIPTION: This constraint extends the use of reversed() to a more complex scenario where files are retrieved from a parent folder of a chosen subfolder. It demonstrates chaining associations in XPath to reach a target node. Accurate understanding of each link in the chain and its correct reading direction is essential.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/query-over.md#2025-04-21_snippet_2\n\nLANGUAGE: XPath\nCODE:\n```\n\"[QueryOver.File_Folder/QueryOver.Folder/QueryOver.Folder_SubFolder [reversed ()]=$ChosenFolder]\"\n```\n\n----------------------------------------\n\nTITLE: Status Icons Reference Table in Markdown\nDESCRIPTION: A markdown table showing version control status icons and their meanings in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Icon | Meaning |\n| --- | --- |\n| {{< figure src=\"/attachments/refguide/version-control/using-version-control-in-studio-pro/no-changes.png\" class=\"no-border\" >}} | Nothing happened to this item. It is unchanged with the respect to the original. |\n| {{< figure src=\"/attachments/refguide/version-control/using-version-control-in-studio-pro/item-modified.png\" class=\"no-border\" >}} | You modified this item. |\n| {{< figure src=\"/attachments/refguide/version-control/using-version-control-in-studio-pro/item-added.png\" class=\"no-border\" >}} | You added this item. |\n| {{< figure src=\"/attachments/refguide/version-control/using-version-control-in-studio-pro/item-moved.png\" class=\"no-border\" >}} | You moved this item to another position in the app tree. |\n| {{< figure src=\"/attachments/refguide/version-control/using-version-control-in-studio-pro/item-deleted.png\" class=\"no-border\" >}} | You deleted this item. |\n| {{< figure src=\"/attachments/refguide/version-control/using-version-control-in-studio-pro/item-conflicting.png\" class=\"no-border\" >}} | You and somebody else made conflicting changes to this item. |\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced Filtering with Logical Operators in Mendix\nDESCRIPTION: Complex example demonstrating how to combine multiple filter conditions using logical operators (and, or) to create advanced filtering scenarios with multiple attributes and associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport { attribute, association, literal, startsWith, equals, notEquals, greaterThan, and, or } from \"mendix/filters/builders\";\n\n// in the widget code\nif (/* check that all properties are filterable */) {\n    const filterCond = or(\n        and(\n            startsWith(attribute(this.props.myAttributeString.id), literal(\"B\")),\n            equals(attribute(this.props.myAttributeBoolean.id), literal(true))\n        ),\n        and(\n            greaterThan(attribute(this.props.myAttributeNumber.id), literal(10)),\n            notEquals(association(this.props.myAssociationReference.id), empty()),\n            equals(association(this.props.myAssociationReferenceSet.id), empty())\n        )\n    );\n    this.props.myDataSource.setFilter(filterCond);\n} else {\n    console.log(\"Some attribute is not filterable\");\n}\n```\n\n----------------------------------------\n\nTITLE: Setting jcifs.Config Property in Java\nDESCRIPTION: This Java line of code demonstrates how to set a `jcifs.Config` property. Specifically, it disables domain-based DFS referrals by setting `jcifs.smb.client.dfs.disabled` to `\"false\"`.  This override is necessary because the cloud edit library defaults this property to true, and the cloud environment does not allow specifying properties through system properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/access-a-samba-share-from-the-mxcloud.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\njcifs.Config.setProperty(\"jcifs.smb.client.dfs.disabled\",\"false\");\n```\n\n----------------------------------------\n\nTITLE: Defining XML Structure for Action Button Styles\nDESCRIPTION: This XML snippet defines the structure and style properties for configuring action buttons in a Mendix mobile application. It requires knowledge of XML and the Mendix styling framework. The elements include 'container', 'icon', and 'caption', each with specific style properties. It mainly affects the visual appearance like ripple color and icon size on mobile platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<icon/><caption>primary</caption>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Evaluating Excel Data for Order Status in Mendix\nDESCRIPTION: A text-based decision structure in Mendix evaluating input Excel file data to determine enumeration values for OrderStatus. This assists in identifying and processing the data fed from Excel files into the application. The main inputs are Excel-based unformatted statuses, outputting mapped enumeration values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-excel-documents/import-excel-documents.md#2025-04-21_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nif $Unformatted = 'open' then MyFirstModule.OrderStatus.Open\nelse if $Unformatted = 'processing' then MyFirstModule.OrderStatus.Processing\nelse if $Unformatted = 'complete' then MyFirstModule.OrderStatus.Complete\nelse MyFirstModule.OrderStatus.Complete\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Styling with Design Properties\nDESCRIPTION: This snippet modifies the settings of the group box widget to introduce a dropdown design property for selecting styles. It captures user-defined styles to allow for a dynamic UI experience based on the selected option.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_54\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"com.mendix.widget.native.groupbox.GroupBox\": [\n        {\n            \"name\": \"Group box style\",\n            \"type\": \"Dropdown\",\n            \"description\": \"Style of the group box.\",\n            \"options\": [\n                {\n                    \"name\": \"Success\",\n                    \"class\": \"groupBoxSuccess\"\n                },\n                {\n                    \"name\": \"Warning\",\n                    \"class\": \"groupBoxWarning\"\n                },\n                {\n                    \"name\": \"Danger\",\n                    \"class\": \"groupBoxDanger\"\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Conditionally Rendering Content Area\nDESCRIPTION: This TypeScript code defines a lambda method called `renderContent` that conditionally renders the content area based on whether the GroupBox widget has any child components. If there are no children, it returns null, effectively hiding the content area. Otherwise, it renders the content within a `View` component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nprivate renderContent = (): ReactNode => {\n    if (Children.count(this.props.children) === 0) {\n        return null;\n    }\n\n    return <View style={this.styles.content}>{this.props.children}</View>;\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving Latest Order Status with OQL in Mendix\nDESCRIPTION: This SQL query joins OrderInfo with OrderUpdate tables and uses a nested query with MAX() to retrieve only the latest status update for each order. It demonstrates how to implement data versioning through view entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-data-versioning.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    o.OrderId as OrderId,\n    o.RequiredDate as RequiredDate,\n    u.OrderStatus as OrderStatus,\n    u.UpdateDate as UpdateDate\nFROM Shop.OrderInfo o\nJOIN o/Shop.OrderUpdate_OrderInfo/Shop.OrderUpdate u\nJOIN (\n    SELECT\n        u.OrderId as OrderId,\n        MAX(u.UpdateDate) as UpdateDate\n    FROM Shop.OrderUpdate u\n    GROUP BY u.OrderId\n) latest ON (latest.OrderId = o.OrderId AND latest.UpdateDate = u.UpdateDate)\n```\n\n----------------------------------------\n\nTITLE: Configuring Accessibility Properties in XML for Mendix Widgets\nDESCRIPTION: This XML snippet demonstrates how to configure accessibility properties for Mendix widgets, including settings for accessible elements, screen reader captions, and hints. These properties are essential for improving navigability for users with disabilities in native applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/mobile-accessibility.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Accessibilty\">\n    <property key=\"accessible\" type=\"boolean\" defaultValue=\"true\">\n        <caption>Accessible</caption>\n        <description />\n    </property>\n    <property key=\"screenReaderCaption\" type=\"textTemplate\" required=\"false\">\n        <caption>Screen reader caption</caption>\n        <description />\n    </property>\n    <property key=\"screenReaderHint\" type=\"textTemplate\" required=\"false\">\n        <caption>Screen reader hint</caption>\n        <description />\n    </property>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Styling Activity Indicator in JavaScript\nDESCRIPTION: Specifies style configurations for an activity indicator widget in a Mendix app using JavaScript. The object includes properties for container styles and indicator customization such as color and size, with potential values and defaults listed. Requires knowledge of ViewStyle and the widget's purpose.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_activityindicator_ActivityIndicator = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  indicator: {\n    color: 'gray', // This is the color of the indicator.\n    size: 'large' // Possible values for indicator are `large` and `small`.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Using XPath to Query Gold Customers in Mendix\nDESCRIPTION: This Java snippet demonstrates an XPath query used within the Mendix platform to retrieve 'gold' customers. The query checks the `IsGoldCustomer` attribute against the Boolean `true()` function. Dependencies include the correct configuration of the Mendix data model to include an `IsGoldCustomer` attribute. Inputs are assumed to be customer records, and the output is a filtered list of gold customers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-true.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n//Sales.Customer[IsGoldCustomer = true()]\n```\n\n----------------------------------------\n\nTITLE: Fixing Consistency Error CE1568 in Mendix\nDESCRIPTION: This snippet explains how to fix the consistency error CE1568 when a page with a data view is set as a menu item in Mendix Studio Pro. The user must change the On click property of the menu item to create an object instead of just showing a page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/view-menu/errors-pane/consistency-errors/consistency-errors-navigation.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open the navigation for the responsive profile.\n2. Open properties of the **Program** menu item, and do the following:\n    1. Change the **On click** property from **Show a page** to **Create object**.\n    2. Set **ProgramItem** as **Entity (path)**.\n    3. Set **Program** as **On click page**.\n```\n\n----------------------------------------\n\nTITLE: Descending Order Query with SQL\nDESCRIPTION: Demonstrates how to sort results in descending order using DESC keyword.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_38\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nORDER BY LastName DESC\n```\n\n----------------------------------------\n\nTITLE: Executing Microflow in Task Queue using Java\nDESCRIPTION: Schedules a microflow for background execution within a specified task queue using the Java API. The `executeInBackground` method requires a context and a queue name. It supports parameter passing and integrates with the Mendix environment. No return values are provided as the task will execute asynchronously. Check the API documentation for complete details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/task-queue.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nCore.microflowCall(\"AModule.SomeMicroflow\")\n  .withParam(\"Param1\", \"Value1\")\n  .withParam(\"Param2\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\");\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Registry in JSON\nDESCRIPTION: Example configuration for Prometheus metrics registry with step size settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"prometheus\",\n    \"settings\": {\n      \"step\": \"3m\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix App Service with kubectl\nDESCRIPTION: This command deploys the Kubernetes service from the `mendix-app-service.yaml` file, exposing the Mendix application to external access via a NodePort.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nkubectl create -f mendix-app-service.yaml\n```\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Variables for Design Properties\nDESCRIPTION: CSS variable definitions scoped to root for global availability in the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_12\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --color-light-blue: #87CEFA;\n    --color-light-green: #90EE90;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieve Object SQL Query\nDESCRIPTION: SQL query to fetch an existing employee record from the database with all its attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n WHERE \"myfirstmodule$employee\".\"id\" = (281474976710857)\n```\n\n----------------------------------------\n\nTITLE: SQL Division with Rounded Results\nDESCRIPTION: Query demonstrating division operation with ROUND function to limit decimal places in the result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_36\n\nLANGUAGE: sql\nCODE:\n```\nSELECT ROUND((Price : 7), 2) as RoundedPrice, Price : 7 FROM Sales.Order\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Actions Module Usage Table\nDESCRIPTION: Markdown table showing available actions in the Web Actions module including focus control, scrolling, and camera functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/web-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Category | Action |\n| --- | --- |\n| Focus next | Moves the keyboard focus to the next element that can be focused. |\n| Focus previous | Moves the keyboard focus to the previous element that can be focused. |\n| Scroll to | Scrolls the window to make a targeted element visible. For this action, you need to provide a target selector. This target could be an element containing a class (for example, `.mx-class-name`, `.my-class-name`), an HTML element (for example, `td`, `div`, `a`), or an element ID (for example, `#my-element-id`).  |\n| Set focus | Sets the focus to the element found with the selector. The element should be able to hold focus like a link, button, or input. For this action, you need to provide a target selector. This target could be an element containing a class (for example, `.mx-class-name`, `.my-class-name`), an HTML element (for example, `td`, `div`, `a`), or an element ID (for example, `#my-element-id`). |\n| Take picture | Allows users to take a picture from the back and front camera in a web or PWA app. |\n```\n\n----------------------------------------\n\nTITLE: Custom Font Implementation in Mendix SCSS\nDESCRIPTION: CSS code to implement custom fonts in Mendix applications, specifically demonstrating how to include the Noto Sans SC font and create a custom font class\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/document-generation.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@font-face {\n    font-family: 'Noto Sans SC';\n    src: url(fonts/NotoSansSC-Regular.ttf);\n}\n\n.font-noto-sans-sc {\n    font-family: 'Noto Sans SC', sans-serif;\n}\n```\n\n----------------------------------------\n\nTITLE: Executing SQL with JDBC Connection in Mendix\nDESCRIPTION: Java code for a custom Mendix action that uses Core.dataStorage().executeWithConnection() to obtain a JDBC connection from the internal pool and execute SQL queries. This ensures connections are properly managed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/howto-datastorage-api.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nCore.dataStorage().executeWithConnection()\n```\n\n----------------------------------------\n\nTITLE: Click/Doubleclick Action Parameter Table\nDESCRIPTION: Markdown table defining the input parameters for the Click/Doubleclick action, including element and doubleclick flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-clickdoubleclick.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nElement | WebElement | yes | The WebElement you want to click/doubleclick\nDoubleclick | Boolean |no | Perform a doubleclick\n```\n\n----------------------------------------\n\nTITLE: Creating and Assigning Role in Azure SQL via SQL\nDESCRIPTION: These SQL commands create a user in the Azure SQL database from an external provider (Azure AD/Managed Identity) and then assigns the `dbmanager` role to this user.  The `<storage-admin-identity-name>` placeholder must be replaced with the actual name of the managed identity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_23\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE USER [<storage-admin-identity-name>] FROM EXTERNAL PROVIDER;\nGO\nALTER ROLE dbmanager ADD MEMBER [<storage-admin-identity-name>];\nquit\n```\n\n----------------------------------------\n\nTITLE: Downloading App Logs GET Request in Bash\nDESCRIPTION: Example GET request for downloading app logs for a specific date from a Mendix environment. This allows retrieving application logs for troubleshooting or auditing purposes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/acceptance/logs/2018-08-10\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: OQL Query Using Indexes\nDESCRIPTION: An example OQL query that retrieves Customer objects using a combination of zipcode and housenumber attributes, which match the order of the indexed attributes for optimal performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/entities/indexes.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nFROM Module.Customer AS c\nWHERE c.zipcode = $ParameterZipCode AND c.housenumber = $ParameterHouseNumber\nSELECT c.name AS CustomerName\n```\n\n----------------------------------------\n\nTITLE: Extracting Minutes in XPath in Java\nDESCRIPTION: This code snippet demonstrates how to extract and compare the minutes from a Date and time attribute using the `minutes-from-dateTime()` function in XPath, specifically in a Java environment. It performs similar comparisons as in the Studio Pro environment but is tailored for Java. Requires defining the attribute of **Date and time** type and optionally setting a timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-minutes-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Logging.Log[minutes-from-dateTime(DateAttribute) = 30]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Logging.Log[minutes-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for Get Checkbox Set Selector Value in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Get Checkbox Set Selector Value' function using a markdown table. It specifies the name, datatype, and description of the returned value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/get-value.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nChecked | Boolean | The current value of the checkbox.\n```\n\n----------------------------------------\n\nTITLE: Creating a Sub-Microflow for Multiple Attribute Validation in Mendix\nDESCRIPTION: This pseudocode outlines the process of creating a sub-microflow to validate multiple attributes in Mendix. It includes setting up a Boolean variable, performing validations, handling feedback, and controlling the flow based on validation results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/setting-up-data-validation.md#2025-04-21_snippet_0\n\nLANGUAGE: pseudocode\nCODE:\n```\n// 1. Create Boolean variable and set as return value\nBooleanVariable validationPassed = true\nSetAsReturnValue(validationPassed)\n\n// 2. Perform validations\n// (Validation logic goes here)\n\n// 3. Handle validation feedback\nif (validationFailed) {\n    validationPassed = false\n    ShowValidationFeedback()\n    MergeToMainFlow()\n}\n\n// 4. Continue with next validation\n// (Repeat steps 2-3 for each validation)\n\n// 5. Add decision to check return value\nif (validationPassed) {\n    ProceedToCommitEvent()\n} else {\n    StopMicroflow()\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Selenium Hub and Nodes\nDESCRIPTION: This YAML configuration sets up a Selenium hub with Chrome and Firefox nodes using Docker Compose. It specifies the Selenium version, timezone, screen dimensions, and necessary port mappings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-docker-selenium-hub.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nhub: \n image: selenium/hub:3.8.1\n environment:\n    - TZ=Europe/Amsterdam\n    - GRID_TIMEOUT=90\n ports:\n    - 4444:4444\n\nfirefox:\n image: selenium/node-firefox:3.8.1\n links:\n    - hub:hub\n environment:\n    - TZ=Europe/Amsterdam\n    - SCREEN_WIDTH=1600\n    - SCREEN_HEIGHT=900\n\nchrome:\n image: selenium/node-chrome:3.8.1\n links:\n    - hub:hub\nenvironment:\n    - TZ=Europe/Amsterdam\n    - SCREEN_WIDTH=1600\n    - SCREEN_HEIGHT=900\nvolumes:\n    - /dev/shm:/dev/shm\nprivileged: true\n```\n\n----------------------------------------\n\nTITLE: EditableValue Interface Definition in TypeScript\nDESCRIPTION: Defines the EditableValue interface used to represent values that can be changed by a pluggable widget client component. This interface provides status information, read/write methods, validation, formatting, and display value handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface EditableValue<T extends AttributeValue> {\n    readonly status: ValueStatus;\n    readonly readOnly: boolean;\n    \n    readonly value: T | undefined;\n    setValue(value: T | undefined): void;\n    readonly validation: string | undefined;\n    setValidator(validator?: (value: T | undefined) => string | undefined): void;\n    \n    readonly displayValue: string;\n    setTextValue(value: string): void;\n    \n    readonly formatter: ValueFormatter<T>;\n    setFormatter(formatter: ValueFormatter<T> | undefined): void;\n    \n    readonly universe?: T[];\n}\n```\n\n----------------------------------------\n\nTITLE: Aggregating Order Data with JOIN and GROUP BY in Mendix OQL\nDESCRIPTION: SQL query that joins Order and OrderLine entities to calculate total order value, product count, and unique product count using aggregation functions. Uses GROUP BY to organize results by order details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  o.OrderId as OrderId,\n  o.OrderDate as OrderDate,\n  o.RequiredDate as RequiredDate,\n  o.ShippedDate as ShippedDate,\n  SUM(ol.UnitPrice * ol.Quantity * (1 - ol.Discount)) as TotalOrderValue,\n  SUM(ol.Quantity) as TotalProductCount,\n  COUNT(*) as UniqueProductCount\nFROM Shop.\"Order\" as o\n  JOIN o/Shop.OrderLine_Order/Shop.OrderLine as ol\nGROUP BY o.OrderId, o.OrderDate, o.RequiredDate, o.ShippedDate\n```\n\n----------------------------------------\n\nTITLE: XML Schema Definition Example\nDESCRIPTION: Example XML schema defining a customer element with complex type containing name and shoesize elements. The shoesize element extends integer type with a country attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/xml-schemas/xml-schema-support.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<xs:schema targetNamespace=\"http://www.example.com/\" elementFormDefault=\"qualified\" xmlns:tns=\"http://www.example.com/\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\n  <xs:element name=\"customer\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"name\" type=\"xs:string\"/>\n        <xs:element name=\"shoesize\" type=\"tns:shoesizeType\"/>\n      </xs:sequence>\n    </xs:complexType>\n  </xs:element>\n  <xs:complexType name=\"shoesizeType\">\n    <xs:simpleContent>\n      <xs:extension base=\"xs:integer\">\n        <xs:attribute name=\"country\" type=\"xs:string\"/>\n      </xs:extension>\n    </xs:simpleContent>\n  </xs:complexType>\n</xs:schema>\n```\n\n----------------------------------------\n\nTITLE: Creating AllProductTranslationVE View Entity with SQL in Mendix\nDESCRIPTION: SQL query for creating a view entity that combines product data from the Product entity with translations from the ProductTranslation entity. The query uses a UNION to include both translated descriptions and the default English descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/multilingual-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    p.ProductId as ProductId,\n    p.ProductName as ProductName,\n    p.QuantityPerUnit as QuantityPerUnit,\n    p.Discontinued as Discontinued,\n    pt.LanguageCode as LanguageCode,\n    coalesce(pt.Description, p.Description) as Description\nFROM Shop.Product p\n    JOIN p/Shop.ProductTranslation_Product/Shop.ProductTranslation pt\nUNION\nSELECT\n    p.ProductId as ProductId,\n    p.ProductName as ProductName,\n    p.QuantityPerUnit as QuantityPerUnit,\n    p.Discontinued as Discontinued,\n    cast('en_US' as STRING) as LanguageCode,\n    p.Description as Description\nFROM Shop.Product p\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Selenium Grid in YAML\nDESCRIPTION: This YAML configuration sets up a Selenium Grid with a hub and nodes for Firefox and Chrome browsers. It specifies the Docker images, port mappings, and environment variables for screen dimensions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ov/ov-deployment.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nseleniumhub:\n    image: selenium/hub:3.141.59\n    ports:\n    - 4444:4444\n\nfirefoxnode:\n    image: selenium/node-firefox-debug:3.141.59\n    ports:\n    - 5900\n    links:\n    - seleniumhub:hub\n    environment:\n    - SCREEN_HEIGHT=1080\n    - SCREEN_WIDTH=1920\n    - SCREEN_DEPTH=24\n\nchromenode:\n    image: selenium/node-chrome-debug:3.141.59\n    ports:\n    - 5900\n    links:\n    - seleniumhub:hub\n    environment:\n    - SCREEN_HEIGHT=1080\n    - SCREEN_WIDTH=1920\n    - SCREEN_DEPTH=24\n```\n\n----------------------------------------\n\nTITLE: Configuring Insights Hub API Authorization\nDESCRIPTION: This snippet describes the process of adding the Access Token action before REST calls to include the user token in each Insights Hub API call. This ensures that the requests are authorized and can access the necessary data from Insights Hub. The Authorization header needs to be set accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-mobile-native.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n\"With each Insights Hub API call you have to ensure that the corresponding user token is part of the request. Do this by adding the **Access Token** action before your REST calls and set the **Authorization** header accordingly.\"\n```\n\n----------------------------------------\n\nTITLE: Updating renderHeader Method to Use Custom Icons\nDESCRIPTION: TypeScript React method that renders the GroupBox header with the appropriate icon and enables touch interaction for expanding/collapsing. It handles platform differences between iOS and Android.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_34\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = () => {\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>            {this.props.headerCaption}</Text>\n            {this.renderIcon()}\n        </View>\n    );\n    \n    const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n    \n    return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n};\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint for Workflow User Task Entity\nDESCRIPTION: This XPath constraint defines the visibility conditions for workflow user tasks. It ensures users can only see tasks that are in progress, assigned to them or targeted at them, and belong to workflows that are neither incompatible nor failed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-security.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[State = 'InProgress' and (System.WorkflowUserTask_TargetUsers = '[%CurrentUser%]' or System.WorkflowUserTask_Assignee= '[%CurrentUser%]') and System.WorkflowUserTask_Workflow/System.Workflow[State != 'Incompatible' and State != 'Failed']]\n```\n\n----------------------------------------\n\nTITLE: Model Uncertainty Handling Example\nDESCRIPTION: This code demonstrates how to instruct a model to admit when it does not know the answer. By including instructions that allow the LLM to ask for more information or respond that it does not know something, you make it more effective at avoiding hallucination and providing more accurate responses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n\"If you are unsure how to respond, say “Sorry, I didn’t get that. Could you rephrase the question or provide more details?”\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"You are a barista who only talks about coffee.\nIf a user asks something about other topics, say:\n    “Sorry, as a barista I cannot help you with that. Would you like some recommendations on how to brew coffee?”\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Associated Objects in OData v3 (Deprecated)\nDESCRIPTION: Shows how to retrieve associated objects using the $expand query parameter in the deprecated OData v3 format. This example retrieves Employee objects along with their associated Cars and Address, including the City associated with the Address.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_1\n\nLANGUAGE: odata\nCODE:\n```\n/odata/myservice/v1/Employees?$expand=Cars,Address/City\n```\n\n----------------------------------------\n\nTITLE: Configuring XML Tags for Associations in XML\nDESCRIPTION: This XML snippet exemplifies the difference in structure when choosing to include association tags. Without it, the XML presents a flat hierarchy, while enabling it introduces nested elements for associations. No external dependencies are required, but enabling tags provides more detailed but verbose representations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/published-web-services/published-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Person name=\\\"John\\\">\n  <Dog name=\\\"Max\\\" />\n  <Dog name=\\\"Rex\\\" />\n  <Cat name=\\\"Chester\\\" />\n</Person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<Person name=\\\"John\\\">\n  <Person_Dog>\n    <Dog name=\\\"Max\\\" />\n    <Dog name=\\\"Rex\\\" />\n  </Person_Dog>\n  <Person_Cat>\n    <Cat name=\\\"Chester\\\" />\n  </Person_Cat> \n</Person>\n```\n\n----------------------------------------\n\nTITLE: Accessing Debugging Tools in Chrome\nDESCRIPTION: This code snippet describes how to enable remote JavaScript debugging and access the debugging tools in Chrome after launching the Make It Native app. The instructions involve opening the developer menu and navigating to a specific debugging address in Chrome, utilizing a Mendix app running locally as a prerequisite.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Open the developer menu by using a three-finger long press.\n2. Tap **Enable Remote js Debugging**.\n3. Change the address in your browser's navigation bar to *localhost:8083/debugger-ui* manually.\n```\n\n----------------------------------------\n\nTITLE: PowerShell Command for Executing Log Level Script\nDESCRIPTION: PowerShell command showing how to execute the Python log level configuration script with specific parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/log-levels.md#2025-04-21_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nC:\\temp\\LogDemoApp\\python\nλ python setlogs.py 87a32a3e-c6db-4bc8-9fa3-7cd5b108eaec 8090\n{\"feedback\":{},\"result\":0}\n```\n\n----------------------------------------\n\nTITLE: Defining a Microflow Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define a microflow property within a Mendix widget. The microflow property allows a user to select a microflow in Mendix Studio Pro which can be executed by the widget. The `returnType` element specifies the expected return type of the microflow, and Studio Pro will enforce this return type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"messageMicroflow\" type=\"microflow\" required=\"false\">\n  <caption>Message Microflow</caption>\n  <category>Data source</category>\n  <description>Return value: the message to show.</description>\n  <returnType type=\"String\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Implementing Icon Rendering Method in Container Component\nDESCRIPTION: Adds a method to the Group Box container component to select and render icons based on dynamic values or fallback glyphs. It leverages Mendix's Icon component, using glyphs when required icons aren't available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_38\n\nLANGUAGE: TypeScript\nCODE:\n```\nprivate renderIcon = (toBeRenderedIcon: DynamicValue<NativeIcon> | undefined, glyph: string) => {\\n    const nativeIcon: NativeIcon =\\n        toBeRenderedIcon && toBeRenderedIcon.status === ValueStatus.Available\\n            ? toBeRenderedIcon.value\\n            : { type: \\\"glyph\\\", iconClass: glyph };\\n\\n    return <Icon icon={nativeIcon} />;\\n};\n```\n\n----------------------------------------\n\nTITLE: JVM Parameter for SSL Renegotiation in Mendix\nDESCRIPTION: This JVM parameter addresses SSL renegotiation issues that can occur when a client or server is not RFC-5746 compliant. Adding this parameter allows unsafe renegotiation, but it's crucial to remove it once both client and server are compatible to avoid security vulnerabilities. It's used in the Mendix Server tab under Extra JVM parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-explorer/app/app-settings/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n\"-Dsun.security.ssl.allowUnsafeRenegotiation=true\"\n```\n\n----------------------------------------\n\nTITLE: Storage Instance Types Performance Table\nDESCRIPTION: A markdown table showing the performance characteristics of different storage instance types (gp2 and gp3) based on storage size, including baseline performance, IOPS ranges, and throughput specifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/metrics.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Storage Size           | Storage Instance Type | Baseline Storage Performance | Provisioned IOPS Range | Provisioned Throughput Range |\n|------------------------|-----------------------|------------------------------|------------------------|------------------------------|\n| Less than 20 GiB       | gp2                   | 100 IOPS (3000 burst) /\\br125 MiB/s | 100–1197 IOPS    | 128–250 MiB/s                |\n| Between 20 and 400 GiB | gp3                   | 3000 IOPS /\\br125 MiB/s       | N/A                    | N/A                          |\n| 400 GiB and higher     | gp3                   | 12000 IOPS /\\br500 MiB/s      | 12000–64000 IOPS       | 500–4000 MiB/s               |\n```\n\n----------------------------------------\n\nTITLE: Evaluating Expressions with Empty Objects in Mendix\nDESCRIPTION: This snippet illustrates the importance of the order of statements when evaluating expressions with empty objects in Mendix. Accessing attributes of empty objects throws an exception, and if such an access occurs before an 'empty' check, the entire expression may return `false`. The example shows how reversing the order can ensure all checks are evaluated.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n\"$emptyObject/attribute != $validObject/attribute or $emptyObject = empty\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"$emptyObject = empty or $emptyObject/attribute != $validObject/attribute\"\n```\n\n----------------------------------------\n\nTITLE: Defining Mendix App Service YAML\nDESCRIPTION: This YAML file defines a Kubernetes Service named `mendix-app-service` of type `NodePort` for exposing the Mendix application outside the cluster. It specifies the port (8080) that the service listens on and the selector used to route traffic to the Mendix app pods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: mendix-app-service\n  labels:\n    app: mendix-k8s\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n  selector:\n    app: mendix-k8s\n  type: NodePort\n```\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to String in Java\nDESCRIPTION: This example shows how to convert a DateTime value to a string using the toString function in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntoString(dateTime(2007))\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint Query\nDESCRIPTION: Shows how to add constraints to filter query results using square brackets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_3\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer[TotalAmount > 1000]\n```\n\n----------------------------------------\n\nTITLE: Finding Entity Attribute using AllDomainModels\nDESCRIPTION: Alternative method to retrieve the first attribute name of the Customer entity using model.allDomainModels() function\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/manipulating-existing-models/finding-things-in-the-model.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst domainModel = model.allDomainModels()[0];\nconst customerEntity = domainModel.entities.filter(entity => entity.name === \"Customer\")[0]\n\nconst attributeName = customerEntity.attributes[0].name;\n```\n\n----------------------------------------\n\nTITLE: Creating Data Source Microflow for SAP Product List\nDESCRIPTION: A microflow example that demonstrates how to fetch product data from SAP using the OData connector. It shows authentication setup, request parameter configuration, and list retrieval.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n1. Create ES5_Username constant\n2. Create ES5_Password constant\n3. Create DS_GetProductList microflow\n4. Add Create request params action\n5. Add Add basic authentication action\n   - Request parameters: $SAPRequestParams\n   - Username: @MyFirstModule.ES5_Username\n   - Password: @MyFirstModule.ES5_Password\n6. Add Get List action\n   - Response type: GWSAMPLE_BASIC.Product\n   - Query: @GWSAMPLE_BASIC.GWSAMPLE_BASIC + '/' + toString(GWSAMPLE_BASIC.EntitySetNames.ProductSet)\n   - Request parameters: $SAPRequestParams\n```\n\n----------------------------------------\n\nTITLE: Editing Mendix Operator Deployment in Kubernetes\nDESCRIPTION: Command to edit the Mendix Operator deployment in Kubernetes to adjust resource settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_14\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} edit deployment mendix-operator\n```\n\n----------------------------------------\n\nTITLE: Adding Editability System Property in XML\nDESCRIPTION: Adds editability configuration to the widget's property group in the XML configuration file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<propertyGroup caption=\"Editability\">\n    <systemProperty key=\"Editability\"/>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Defining Header Caption Property in XML\nDESCRIPTION: This XML snippet defines a `headerCaption` property for the widget. This property is of type string, not required, and is used to allow the Mendix developer to alter the header caption of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"headerCaption\" type=\"string\" required=\"false\">\n        <caption>Header caption</caption>\n        <description />\n    </property>\n```\n\n----------------------------------------\n\nTITLE: Markdown alert block for Max Year warning\nDESCRIPTION: Markdown code block showing a warning about Max Year field behavior\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/report-date-parameter/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nThe value in **Max. year** will not prevent an end-user from choosing a later date in the **From** or **To** fields of the report date parameter widget. It only applies to the *year* date range field.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Including On Enter Event for Radio Buttons\nDESCRIPTION: This snippet includes the on-enter event action for the radio buttons widget, detailing behavior when the widget is focused.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_9\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Adding Constraints to XPath Queries in Mendix\nDESCRIPTION: This XPath query retrieves customers who have spent more than €1000. The '[ ]' tokens are used to enclose constraints on attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_3\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer[TotalAmount > 1000]\n```\n\n----------------------------------------\n\nTITLE: Creating BAPI Explorer Microflow\nDESCRIPTION: The `Create_BAPIExplorer` microflow opens the BAPI explorer page to allow users to find all BAPIs available at the specified JCo destination. This microflow facilitates easy access to available BAPIs for further exploration and integration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nThis microflow opens the BAPI explorer page to allow you to find all the BAPIs available at your JCo destination.\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: This command is used to install the necessary dependencies for the Gulp project. It reads the package.json file in the project root and installs the listed packages and their dependencies from the npm registry. This step is crucial for setting up the development environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/style-with-gulp-and-sass.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"npm install\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Postgres Database Plan in mxpc-cli\nDESCRIPTION: This snippet outlines the configuration parameters for setting up a Postgres database plan in mxpc-cli. It includes host, port, authentication method, and Managed Identity details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nDatabase:\n  type: postgres\n  host: <Server name of Postgres database server>\n  port: 5432\n  strict_tls: yes\n  database_name: postgres\n  authentication: azure-wi\n  managed_identity_name: <Name of storage admin Managed Identity>\n  managed_identity_client_id: <Client ID of storage admin Managed Identity>\n  k8s_service_account: mendix-storage-provisioner-wi\n```\n\n----------------------------------------\n\nTITLE: Deprecating Mendix Public API Setter Methods\nDESCRIPTION: These methods are deprecated in the Mendix public API. Developers should avoid using these methods as they may be removed or changed in future releases. `ISession.setTimeZone` and `ISession.setUserAgent` are being deprecated.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n\"ISession.setTimeZone\"\n\n```\n\nLANGUAGE: java\nCODE:\n```\n\"ISession.setUserAgent\"\n```\n\n----------------------------------------\n\nTITLE: Example Android Splash Screens Configuration\nDESCRIPTION: This code snippet provides an example of the JSON configuration required for Android splash screens, including defining properties such as filenames, directories, and titles. The JSON should include different drawable directories.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_9\n\nLANGUAGE: JSON\nCODE:\n```\n```json\n{\n    \"images\": [\n        {\n            \"filename\": \"splash.png\",\n            \"directory\": \"drawable-hdpi\",\n            \"title\": \"drawable-hdpi-splash.png\"\n        },\n        {\n            \"filename\": \"splash.png\",\n            \"directory\": \"drawable-xhdpi\",\n            \"title\": \"drawable-xhdpi-splash.png\"\n        },\n        {\n            \"filename\": \"splash.png\",\n            \"directory\": \"drawable-xxhdpi\",\n            \"title\": \"drawable-xxhdpi-splash.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Transitions Cordova Plugin\nDESCRIPTION: This XML snippet configures the Cordova plugin for native page transitions in the Mendix mobile application. It includes the plugin definition (`com.telerik.plugins.nativepagetransitions`) and a preference (`CrosswalkAnimatable`) to ensure correct animation with the Crosswalk webview. This plugin is crucial for enabling smooth transitions between pages in the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/mobile-features.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<gap:plugin name=\"com.telerik.plugins.nativepagetransitions\" source=\"npm\" />\n<!-- This needs to be added to make sure the cordova-plugin-crosswalk-webview animates correctly -->\n<preference name=\"CrosswalkAnimatable\" value=\"true\" />\n```\n\n----------------------------------------\n\nTITLE: Defining Java Operators for Arithmetic in Mendix\nDESCRIPTION: This snippet outlines operators that are specifically supported in Java code within Mendix applications. It covers basic arithmetic operations including addition, subtraction, multiplication, and division, providing example expressions and expected return values for each operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n| Operator | Description | Example | Return value |\n| --- | --- | --- | --- |\n| `+` | Addition | `6 + 4` | 10 |\n| `-` | Subtraction | `6 - 4` | 2 |\n| `*` | Multiplication | `6 * 4` | 24 |\n| `div` | Division | `8 div 4` | 2 |\n```\n\n----------------------------------------\n\nTITLE: Git Garbage Collection Command\nDESCRIPTION: Core Git command used for repository garbage collection and optimization\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/git-storage-optimization-dialog.md#2025-04-21_snippet_1\n\nLANGUAGE: git\nCODE:\n```\ngit gc\n```\n\n----------------------------------------\n\nTITLE: Creating Alert Component in TypeScript React\nDESCRIPTION: This code defines a reusable Alert component for displaying validation messages. It's a stateless function component that renders error messages with customizable styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_3\n\nLANGUAGE: TSX\nCODE:\n```\nimport { FunctionComponent, PropsWithChildren, createElement } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface AlertProps {\n    alertStyle?: \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\";\n    className?: string;\n}\n\nexport const Alert: FunctionComponent<PropsWithChildren<AlertProps>> = ({ alertStyle, className, children }) =>\n    children ? (\n        <div className={classNames(`alert alert-${alertStyle} mx-validation-message`, className)}>\n            {children}\n        </div>\n    ) : null;\n\nAlert.displayName = \"Alert\";\nAlert.defaultProps = { alertStyle: \"danger\" };\n```\n\n----------------------------------------\n\nTITLE: Create App Pipeline Trigger Command\nDESCRIPTION: cURL command to trigger the create-app-pipeline which creates a basic MendixApp CR. The command includes necessary headers and JSON payload with configuration parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST \\\n  http://pipeline.trigger.yourdomain.com/ \\\n  -H 'Content-Type: application/json' \\\n  -H 'Event: create-app' \\\n  -H 'X-GitLab-Token: SomeLongSecureToken42' \\\n  -d '{\n    \"namespace\":\"namespace-with-operator\",\n    \"env-internal-name\":\"mx-environment-internal-name\",\n    \"dtap-mode\":\"D\",\n    \"storage-plan-name\":\"file-plan-name\",\n    \"mx-admin-password\":\"Welc0me!\",\n    \"database-plan-name\":\"db-plan-name\"\n}'\n```\n\n----------------------------------------\n\nTITLE: Logging Auto-Committed Objects in Mendix 9.17 and Below\nDESCRIPTION: Details the log message format for auto-committed objects in Mendix versions 9.17 and earlier, which provides information about deleted objects during offline synchronization\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/auto-committed-objects.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nSome autocommitted objects still existed after synchronize action is executed by {user}. This is not allowed in offline-first PWA apps, because they use long-lived sessions. Autocommitted objects are newly created objects which were not yet committed, but are inserted into the database because an associated object was committed. Autocommitted objects should explicitly have been committed, please check your model and apply the necessary changes. The autocommitted objects have been deleted from the database to prevent database corruption. Number of autocommitted objects per type which still existed after synchronizing the objects:\n\n- {Entity1}: {count} object(s)\n- {Entity2}: {count} object(s)\n...\n- {EntityN}: {count} object(s)\n```\n\n----------------------------------------\n\nTITLE: Rendering Icon in Container Component (TSX)\nDESCRIPTION: This TypeScript snippet defines a `renderIcon` method in the container component (`GroupBox.tsx`) that renders the expand/collapse icon. It checks if a custom icon is provided; if not, it uses the default glyph. It utilizes the Mendix `Icon` component to display the icon.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_32\n\nLANGUAGE: typescript\nCODE:\n```\nprivate renderIcon = (toBeRenderedIcon: DynamicValue<NativeIcon> | undefined, glyph: string): ReactNode => {\n    const nativeIcon: NativeIcon = \n        toBeRenderedIcon && toBeRenderedIcon.status === ValueStatus.Available\n            ? toBeRenderedIcon.value\n            : { type: \"glyph\", iconClass: glyph };\n\n    return <Icon icon={nativeIcon} />;\n};\n\n```\n\n----------------------------------------\n\nTITLE: Deprecating Mendix Core Action Class\nDESCRIPTION: The `com.mendix.core.actionmanagement.CoreAction` class is deprecated in Mendix. Developers should use `com.mendix.systemwideinterfaces.core.UserAction` instead. This deprecation encourages the use of a more modern and recommended approach for handling user actions within the Mendix platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.18.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.core.actionmanagement.CoreAction\"\n```\n\nLANGUAGE: java\nCODE:\n```\n\"com.mendix.systemwideinterfaces.core.UserAction\"\n```\n\n----------------------------------------\n\nTITLE: Updating Manually Registered OData Contracts\nDESCRIPTION: To update metadata for manually registered contracts, the same procedures as initial registration are followed, with the additional step of indicating an updated version during registration. It includes steps specific to Studio Pro for updating datasets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/without-mendix-cloud.md#2025-04-21_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\nTo update a data set in Studio Pro, do the following:\n\n1. Open your app and the published OData service you want to update.\n2. Under **Entities**, select **Customer**, and click **Edit**.\n3. Select the checkbox for **Updateable** and click **OK**.\n4. Click **Publish**.\n```\n\n----------------------------------------\n\nTITLE: Using DATEDIFF in OQL SQL\nDESCRIPTION: This SQL snippet demonstrates the syntax and usage of the DATEDIFF function to compute the difference between two date expressions in SQL queries. The function requires specifying a unit for the date difference calculation. The `timezone` parameter is optional, starting from Studio Pro 9.22.0, and allows specifying the time zone using an IANA time zone string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-datediff.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nDATEDIFF ( unit , startdate_expression, enddate_expression [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Nanoflow Example for Dynamic Product Retrieval\nDESCRIPTION: This nanoflow example illustrates how to dynamically retrieve a list of products based on the order type attribute of the order entity. It uses the order as a parameter, evaluates the order type, and returns the appropriate list of products accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/data-widgets/data-sources/nanoflow-source.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n1. It passes the *Order* of the enclosing data view as a parameter.\n\n2. It then splits on the *OrderType* attribute and retrieves a different set of products for each enumeration value.\n\n3. The nanoflow returns a list of products and each end event is configured to return a list.\n\n    {{% alert color=\"info\" %}}The *empty* path also requires a value, where `empty` is also a value.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Fetching User Name Using Promise API\nDESCRIPTION: This snippet illustrates how to fetch user data asynchronously using the Fetch API wrapped in a Promise. It handles potential errors and processes the response to extract the user's name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nfunction GetUserNameSampleRest(userID) {\n    // BEGIN USER CODE\n    if (!userID) {\n        return Promise.reject(\"The UserID parameter is required\")\n    }\n    var url = \"https://jsonplaceholder.typicode.com/users/\" + userID;\n    return fetch(url) // Fetch returns a promise, gets the url and wait for result\n        .then(function(response) { return response.json() }) // Transform to json\n        .then(function(jsonData) {\n            return jsonData.name; // Get the data\n        })\n        .catch(function(error) { Promise.reject(\"Failed to get user information\"); });\n    // END USER CODE\n}\n\n```\n\n----------------------------------------\n\nTITLE: Deleting a Snapshot in Mendix\nDESCRIPTION: This Bash script illustrates how to delete a snapshot in the Mendix environment using a DELETE request. It requires a valid Mendix API key and username. This operation does not return any content in successful scenarios.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nDELETE /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots/51dc7872-771e-4c3e-853b-352359444db6\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Updating Event Handler for Menu Items in TypeScript\nDESCRIPTION: This code updates the event handler to include functionality for opening and closing the dockable pane, as well as opening a tab.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n        // Open a tab when the menu item is clicked\n        studioPro.ui.extensionsMenu.addEventListener(\n            \"menuItemActivated\",\n            (args) => {\n                if (args.menuId === \"myextension.ShowTabMenuItem\") {\n                    studioPro.ui.tabs.open(\n                        {\n                            title: \"My Extension Tab\",\n                        },\n                        {\n                            componentName: \"extension/myextension\",\n                            uiEntrypoint: \"tab\",\n                        }\n                    );\n                }\n                else if (args.menuId === \"myextension.ShowDockMenuItem\") {\n                    studioPro.ui.panes.open(paneHandle);\n                }\n                else if (args.menuId === \"myextension.HideDockMenuItem\") {\n                    studioPro.ui.panes.close(paneHandle);\n                }\n            }\n        );\n```\n\n----------------------------------------\n\nTITLE: Using GreaterThanOrEqual Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the greaterThanOrEqual helper to filter items where an attribute value is greater than or equal to a specified literal value. Works with String, HashString, Enumeration, AutoNumber, Integer, Long, Decimal, and DateTime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_34\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is greater than or equals 42\nconst filterCondition = greaterThanOrEqual(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Downloading Tekton Package and Manifests\nDESCRIPTION: Commands to download the Tekton package and YAML manifests for installation in an air-gapped environment. This includes initializing the aip tool, pulling images, and fetching installation manifests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/private-cloud-tekton-airgap.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir tekton && cd tekton\naip init https://cdn.mendix.com/mendix-for-private-cloud/airgapped-image-package/packages/tekton-package-v1.0.5.json\naip pull\n\ncurl https://storage.googleapis.com/tekton-releases/pipeline/previous/v0.41.1/release.yaml -s > tekton.yaml\ncurl https://storage.googleapis.com/tekton-releases/triggers/previous/v0.22.1/release.yaml -s > tekton-triggers.yaml\ncurl https://storage.googleapis.com/tekton-releases/triggers/previous/v0.22.1/interceptors.yaml -s > interceptors.yaml\n```\n\n----------------------------------------\n\nTITLE: Extracting Minutes in XPath in Studio Pro\nDESCRIPTION: This code snippet demonstrates how to extract and compare the minutes from a Date and time attribute using the `minutes-from-dateTime()` function in XPath, specifically in the Mendix Studio Pro environment. It compares the minutes part of the `DateAttribute` to a specific value, optionally considering a specified timezone. The attribute must be of the **Date and time** type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-minutes-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n[minutes-from-dateTime(DateAttribute) = 30]\n```\n\nLANGUAGE: StudioPro\nCODE:\n```\n[minutes-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Creating Container Preview in Widget Structure Mode\nDESCRIPTION: Example implementation of the getPreview function that creates a bordered container with two text elements. Shows how to stack multiple elements vertically with visual grouping in Studio Pro's Structure Mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (_values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"Container\",\n        borders: true,\n        children: [\n            { type: \"Text\", content: \"I am on top\" },\n            { type: \"Text\", content: \"I am on the bottom\" }\n        ]\n    });\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenShift Registry Access for Tekton Pipelines\nDESCRIPTION: Commands to provide access to OpenShift's internal registry for Tekton pipelines. This adds the necessary role bindings and SSL certificate configuration for the service account.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\noc patch rolebindings system:image-builders -p '{\"subjects\":[{\"name\":\"tekton-triggers-mx-sa\",\"kind\":\"ServiceAccount\",\"namespace\":\"$YOUR_NAMESPACE_WITH_PIPELINES\"}]}' -n $YOUR_NAMESPACE_WITH_PIPELINES\noc patch tasks build-push-image --type='json' --patch '[{\"op\": \"add\", \"path\": \"/spec/steps/0/env/-\", \"value\": {\"name\":\"SSL_CERT_FILE\",\"value\":\"/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt\"}}]' -n $YOUR_NAMESPACE_WITH_PIPELINES\n```\n\n----------------------------------------\n\nTITLE: Retrieving Parent Folders Using Reversed XPath\nDESCRIPTION: This XPath expression utilizes the 'reversed()' function to retrieve the parent folder of a given folder. It is particularly useful for cases where you need to move from a child to a parent in a hierarchy. The reversed() only applies to self-referencing associations and alters the standard reading direction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/query-over.md#2025-04-21_snippet_1\n\nLANGUAGE: XPath\nCODE:\n```\n\"[QueryOver.Folder_SubFolder [reversed ()]=$ChosenFolder]\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Mendix Docs Landing Page in YAML\nDESCRIPTION: This YAML configuration sets up the landing page for Mendix documentation. It defines the page title, URL, layout type, and various aliases for routing. It also includes metadata for page description and cascading settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n---\ntitle: \"Welcome to Mendix Docs\"\nlinktitle: \"Docs\"\nurl: /\ntype: landingpage\nlayout: landingpage\ndescription: Learn how to create, deploy, and manage your app landscape. \naliases:\n    - /docs/index.html\n    - /docs/Overview.html\n    - /docs/Overview\n    - /search.html\n    - /search/\ncascade:\n    - no_list: true\n# Main layout template for landing page: docs/layouts/landingpage/landingpage.html\n# Other parts are in partials/landingpage\n# Root index.html file calls docs/content/en/docs/_index.md content\n---\n```\n\n----------------------------------------\n\nTITLE: Java Parameter Name Changes for Installation Fixes\nDESCRIPTION: This snippet refers to changes made to parameter names in Java actions within the APM Tool to prevent installation errors caused by inconsistencies in Mendix versions. The parameter names with 'FileName' have changed to 'FileNameParameter' in 3 import Java actions to prevent these installation errors. Also parameter 'MicroflowName' in Java action ExecuteMicroflowAsync is changed into 'MicroflowNameParameter'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/apd.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Image Value Type Definitions in TypeScript\nDESCRIPTION: Defines types for representing images in Mendix client components, with separate interfaces for web (WebImage) and native (NativeImage) platforms, which can be used with platform-specific image components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface WebImage {\n    readonly uri: string;\n    readonly name: string;\n    readonly altText?: string;\n}\nexport type NativeImage = Readonly<ImageURISource & { name?: string; } | string | number>;\nexport type ImageValue = WebImage | NativeImage;\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix App CRD Configuration\nDESCRIPTION: YAML configuration for Mendix App Custom Resource Definition with secret store enabled\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: <{Mendix App CR name}>\nspec:\n  mendixRuntimeVersion: 9.4.0.24572\n  allowOverrideSecretsWithSecretStoreCSIDriver: true\n  replicas: 1\n  resources:\n    limits:\n      cpu: \"1\"\n      memory: 512Mi\n    requests:\n      cpu: 100m\n      memory: 512Mi\n  runtime:\n    customConfiguration: '{\"ScheduledEventExecution\":\"NONE\",\"MicroflowConstants\":\"{\\\"MyFirstModule.MyConstant\\\":\\\"Awesome\\\",\\\"RestClient.RestServiceUrl\\\":\\\"https://go-dummy-app.privatecloud-storage-tls.svc.cluster.local\\\",\\\"Atlas_Core.Atlas_Core_Version\\\":\\\"3.0.5\\\"}\"}'\n    dtapMode: D\n    logAutosubscribeLevel: INFO\n    runtimeLicense: {}\n  runtimeMetricsConfiguration: {}\n  sourceURL: oci-image://<{image URL}>\n  sourceVersion: 0.0.0.87\n```\n\n----------------------------------------\n\nTITLE: Complete iOS Splash Screens Configuration Example in JSON\nDESCRIPTION: Example configuration for iOS splash screens showing all required sizes and scales. This includes configurations for different device resolutions with appropriate scaling factors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"images\": [\n        {\n            \"size\": \"640x960\",\n            \"idiom\": \"universal\",\n            \"scale\": \"1x\",\n            \"type\": \"splashScreen\",\n            \"filename\": \"splash@1x.png\"\n        },\n        {\n            \"size\": \"375x667\",\n            \"idiom\": \"universal\",\n            \"scale\": \"2x\",\n            \"type\": \"splashScreen\",\n            \"filename\": \"splash@2x.png\"\n        },\n        {\n            \"size\": \"414x736\",\n            \"idiom\": \"universal\",\n            \"scale\": \"3x\",\n            \"type\": \"splashScreen\",\n            \"filename\": \"splash@3x.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Validation Feedback Component in TypeScript\nDESCRIPTION: This snippet defines an 'Alert' component to display validation messages within the TextBox widget. It uses props to dynamically render different alert styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { FunctionComponent, createElement, ReactNode } from \"react\";\n\nexport interface AlertProps {\n    alertStyle?: \"default\" | \"primary\" | \"success\" | \"info\" | \"warning\" | \"danger\";\n    className?: string;\n    children?: ReactNode;\n}\n\nexport const Alert = ({ alertStyle = \"danger\", className, children }: AlertProps): ReactElement | null =>\n    children\n        ? <div className={`alert alert-${alertStyle} mx-validation-message ${className}`}>  \n            {children}\n          </div>\n        : null;\n\nAlert.displayName = \"Alert\";\n```\n\n----------------------------------------\n\nTITLE: Querying Logs by Week Number with Timezone in Studio Pro\nDESCRIPTION: This XPath query retrieves all logs where the `DateAttribute` falls within the second week of the year, using the New York time zone. The `week-from-dateTime()` function extracts the week number from the attribute, considering the specified time zone, and the query filters for records where the week number equals 2.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [week-from-dateTime(DateAttribute, 'America/New_York') = 2]\n```\n\n----------------------------------------\n\nTITLE: Using WHERE Clause in SQL\nDESCRIPTION: The WHERE clause in SQL is used to impose conditions on the data that is being retrieved. It evaluates a given expression and retrieves data entries that satisfy the condition, i.e., return true. It can use various operators, functions, and even system variables to build expressions. No specific dependencies are required apart from a valid SQL setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-where-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nWHERE <constraint>\n```\n\n----------------------------------------\n\nTITLE: Combining XPath Constraints with AND in Mendix\nDESCRIPTION: This snippet demonstrates combining two XPath constraints using the logical AND operator. The combined constraint filters the data grid to display orders that are both 'Open' and have a total price greater than or equal to 50. The XPath expression uses the `and` operator to achieve this.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_3\n\nLANGUAGE: XPath\nCODE:\n```\n\"[OrderStatus = 'Open'] and [TotalPrice >= 50]\"\n```\n\n----------------------------------------\n\nTITLE: Defining a Mendix Application with Secret Store CSI Driver Enabled in YAML\nDESCRIPTION: This YAML snippet defines a Mendix application Custom Resource (CR) with the Secret Store CSI Driver enabled by setting 'allowOverrideSecretsWithSecretStoreCSIDriver' to true. It includes configuration for runtime version, resources, and custom configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\ncat > mendixApp.yaml <<EOF\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: <{Mendix App CR name}>\nspec:\n  mendixRuntimeVersion: 9.4.0.24572\n  allowOverrideSecretsWithSecretStoreCSIDriver: true\n  replicas: 1\n  resources:\n    limits:\n      cpu: \"1\"\n      memory: 512Mi\n    requests:\n      cpu: 100m\n      memory: 512Mi\n  runtime:\n    customConfiguration: '{\"ScheduledEventExecution\":\"NONE\",\"MicroflowConstants\":\"{\\\"MyFirstModule.MyConstant\\\":\\\"Awesome\\\",\\\"RestClient.RestServiceUrl\\\":\\\"https://go-dummy-app.privatecloud-storage-tls.svc.cluster.local\\\",\\\"Atlas_Core.Atlas_Core_Version\\\":\\\"3.0.5\\\"}\"}'\n    dtapMode: D\n    logAutosubscribeLevel: INFO\n    runtimeLicense: {}\n  runtimeMetricsConfiguration: {}\n  sourceURL: oci-image://<{image URL}>\n  sourceVersion: 0.0.0.87\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Modulo Operator\nDESCRIPTION: Explains the modulo operator used in OQL expressions to find the remainder of a division operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| `%` | Modulo | `8 % 3` returns 2. |\n```\n\n----------------------------------------\n\nTITLE: Using Not Logic Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the not helper to invert a condition. The not helper takes a single condition argument and inverts its result, allowing for negative filtering conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_41\n\nLANGUAGE: typescript\nCODE:\n```\nconst filterCondition = not(\n    startsWith(attribute(this.props.myAttributeA.id), literal(\"X\")),\n);\n```\n\n----------------------------------------\n\nTITLE: Commit Changes JSON Request\nDESCRIPTION: JSON request to commit changes to an object in the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"commit\",\n   \"params\":{\n      \"guid\":\"281474976710757\"\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee8ca8f775a0\":20\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Call REST Activity Timeout in Mendix\nDESCRIPTION: Demonstrates setting the timeout for Call REST activities to 355 seconds to prevent connection issues in certain hosting environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_6\n\nLANGUAGE: Plain Text\nCODE:\n```\nhttp.client.CleanupAfterSeconds=355\n```\n\n----------------------------------------\n\nTITLE: Configuring PreferRolling Strategy in MendixApp CR (YAML)\nDESCRIPTION: This YAML snippet shows how to configure the PreferRolling deployment strategy in the MendixApp Custom Resource for standalone Mendix Private Cloud environments. It specifies the strategy type, switchover threshold, and rolling update parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/reduced-downtime-deployment.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n# ...\n# omitted lines for brevity\n# ...\nspec:\n  # ...\n  # omitted lines for brevity\n  # ...\n  # Add or update this section:\n  deploymentStrategy:\n    type: PreferRolling\n    switchoverThreshold: 50%\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 50%\n```\n\n----------------------------------------\n\nTITLE: Creating a Menu Item in Mendix\nDESCRIPTION: This snippet describes how to create a menu item that will trigger a microflow. It includes actions to be taken in the Mendix UI to set up the menu item correctly, including setting the microflow to call when the item is clicked.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/trigger-microflow-from-menu-item.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n1. Open the **Navigation** editor.\n2. In the **Responsive** tab > the **Menu** section, click **New Item**:\n3. In the **New Menu Item** dialog box, set the **Caption** to *Hello World*:\n4. For **On click**, select **Call a microflow**:\n5. In the **Select Microflow** dialog box, select a microflow and then click **New**:\n6. Enter *HelloWorld* for the **Name** of the new microflow.\n7. Save the new menu item by clicking **OK**.\n```\n\n----------------------------------------\n\nTITLE: Implementing the Group Box Render Method with React Native Components\nDESCRIPTION: This code snippet defines the render method for a group box widget using React Native View and Text components. It creates a container with a header section and content area.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>Header caption</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            <View style={this.styles.content}>\n                <Text>Content</Text>\n            </View>\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Warning Alert Markdown Snippet\nDESCRIPTION: Markdown alert block indicating table widget limitations on native mobile pages\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/structure-widgets/table.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}The table widget is not supported on native mobile pages.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Excel Dataset Structure\nDESCRIPTION: Example Excel structure for ATS dataset with fields for Amount, Date, Type and Description. The first row defines dataset fields while subsequent rows contain test records for different expense types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-create-datadriven-test-case.md#2025-04-21_snippet_0\n\nLANGUAGE: excel\nCODE:\n```\nAmount\tDate\tType\tDescription\n100\t2023-01-01\tAccommodation\tHotel Stay\n50\t2023-01-02\tMeal\tBusiness Lunch\n75\t2023-01-03\tOther\tMiscellaneous\n200\t2023-01-04\tSupplies\tOffice Items\n150\t2023-01-05\tTransport\tTaxi Fare\n```\n\n----------------------------------------\n\nTITLE: Using Simple CASE Expression in SQL\nDESCRIPTION: The simple CASE expression compares an input_expression to one or more when_expressions and returns a result_expression corresponding to the first matching condition. If no conditions match, an optional else_result_expression is returned or null if omitted. This form is useful in scenarios where you need to replace if-else logic for variable comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/oql-case-expression.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCASE input_expression\nWHEN when_expression THEN result_expression [ ...n ]\nELSE else_result_expression\nEND\n```\n\n----------------------------------------\n\nTITLE: Required Network Ports Configuration\nDESCRIPTION: Lists the essential TCP ports that need to be open in the network for successful Team Server communication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-troubleshooting/troubleshoot-team-server-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n* The HTTPS port (TCP 443) needs to be open\n* The HTTP port (TCP 80) needs to be open\n```\n\n----------------------------------------\n\nTITLE: Specifying Return Value for InputReferenceSelector Value Retrieval in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Get InputReferenceSelector Value' action. It specifies that the action returns a string value representing the current value of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/input-reference-selector/get-value.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nValue | String | The current value of the widget.\n```\n\n----------------------------------------\n\nTITLE: Scaling Environments POST Request in Bash\nDESCRIPTION: Example POST request for scaling memory and instances of a Mendix environment. The request specifies the number of instances and memory per instance to be allocated to the environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps/calc/environments/acceptance/scale/0c982ca3-621f-40e9-9c6e-96492934170a\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n\tInstances: 2,\n\tMemoryPerInstance: 2048,\n}\n```\n\n----------------------------------------\n\nTITLE: Example Packages Response JSON\nDESCRIPTION: Example JSON response showing the package details returned by the retrieve packages endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[{\n     \"Name\" :  \"Main line-1.1.5.9.mda\" ,\n     \"Status\" :  \"Succeeded\" ,\n     \"Description\" :  \"Initial app\" ,\n     \"Creator\" :  \"Richard Ford\" ,\n     \"CreationDate\" :  1404739654045 ,\n     \"Version\" :  \"1.1.5.9\" ,\n     \"PackageId\" :  \"4ee10492-6cfc-4582-b825-a9040c0988ad\" ,\n     \"Size\" :  1999059\n},{\n     \"Name\" :  \"Main line-2.5.4.63.mda\" ,\n     \"Status\" :  \"Succeeded\" ,\n     \"Description\" :  \"Add scientific mode\" ,\n     \"Creator\" :  \"Richard Ford\" ,\n     \"CreationDate\" :  1404990271835 ,\n     \"Version\" :  \"2.5.4.63\" ,\n     \"PackageId\" :  \"b3d14e53-2654-4534-b374-9179a69ef3cf\" ,\n     \"Size\" :  7731521\n}]\n```\n\n----------------------------------------\n\nTITLE: SVG Example with Rectangle\nDESCRIPTION: This SVG code defines a simple rectangle with specified position, dimensions, and stroke color. The `viewBox` attribute ensures proper scaling across different screen sizes. This is a basic example that can be used and styled within a Mendix native mobile app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_0\n\nLANGUAGE: svg\nCODE:\n```\n\"<svg viewBox=\\\"0 0 100 100\\\">\\n    <rect x=\\\"10\\\" y=\\\"10\\\" width=\\\"80\\\" height=\\\"80\\\" stroke=\\\"blue\\\"/>\\n</svg>\"\n```\n\n----------------------------------------\n\nTITLE: Additional Styling Classes in Mendix\nDESCRIPTION: Other utility CSS classes for specific components like mobile tabs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_7\n\nLANGUAGE: CSS\nCODE:\n```\ntab-mobile\n```\n\n----------------------------------------\n\nTITLE: Diff Code Block Example\nDESCRIPTION: This diff code snippet demonstrates how to show differences between two versions of code. It showcases added and removed lines using the + and - symbols respectively. The example shows a change from \"Hello, World!\" to \"Rock all night long!\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_3\n\nLANGUAGE: diff\nCODE:\n```\n\n```diff\npublic class Hello1\n{\n   public static void Main()\n   {\n-      System.Console.WriteLine(\"Hello, World!\");\n+      System.Console.WriteLine(\"Rock all night long!\");\n   }\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Price of Orders by Customer Name Using XPath\nDESCRIPTION: This snippet illustrates how to calculate the total price of orders specifically placed by a customer named 'Jansen'. It filters the Sales.Order elements based on a condition that checks the customer's name before aggregating the TotalPrice, showcasing the capability of XPath to handle conditional queries within xml structures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-sum.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nsum(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Creating TranslatedProductVE View Entity with SQL in Mendix\nDESCRIPTION: SQL query for creating a view entity that filters product translations based on the current user's language preference. This query joins the previously created AllProductTranslationVE with user data to match content with language settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/multilingual-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n    pt.ProductId as ProductId,\n    pt.ProductName as ProductName,\n    pt.QuantityPerUnit as QuantityPerUnit,\n    pt.Discontinued as Discontinued,\n    pt.LanguageCode as LanguageCode,\n    pt.Description as Description\nFROM Shop.AllProductTranslationVE pt\n    LEFT JOIN System.User as u on (u.ID = '[%CurrentUser%]')\n    LEFT JOIN u/System.User_Language/System.Language as l\nWHERE (l.Code = pt.LanguageCode)\n```\n\n----------------------------------------\n\nTITLE: Using mx diff to Compare MPR Files\nDESCRIPTION: The `mx diff` command compares two *.mpr* files and outputs the differences to a specified JSON file. It requires base and mine files for comparison, along with optional parameters to adjust the behavior. The output provides detailed changes between the two versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmx diff [options] BASE MINE OUTPUT\n```\n\n----------------------------------------\n\nTITLE: Installing Private Mendix Platform via CLI\nDESCRIPTION: This command installs the Private Mendix Platform within a specified namespace.  The `-n` parameter is crucial for defining the namespace where the Svix and PCLM components were previously installed, ensuring proper integration. It's a prerequisite to have Svix and PCLM installed before running this command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n\n./installer platform -n=<namespace name>\n\n```\n\n----------------------------------------\n\nTITLE: Defining an Image Property in XML\nDESCRIPTION: This XML snippet demonstrates how to define an image property within a Mendix widget.  The image property allows the user to select an image from Mendix Studio Pro's images, which can then be used by the widget. This snippet includes attributes for the key, type, caption, category, and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"picture\" type=\"image\">\n  <caption>Picture</caption>\n  <category>Data Source</category>\n  <description>Select an image to add.</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Font to FOP Configuration (XML)\nDESCRIPTION: This XML snippet demonstrates how to configure a custom font within the fop.xconf file for PDF generation in Mendix. It specifies the font file's location using `embed-url` and associates it with a font name for use in CSS styles via `font-triplet name`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/style.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<font kerning=\"yes\" embed-url=\"mycustomfont.ttf\">\n    <font-triplet name=\"myfont\" style=\"normal\" weight=\"normal\"/>\n</font>\n```\n\n----------------------------------------\n\nTITLE: Using GROUP BY with HAVING Clause in OQL\nDESCRIPTION: Example query that demonstrates filtering grouped results with the HAVING clause. It calculates the sum of order prices per city, then filters to include only cities where the total exceeds 1000.0 or the city name is 'Losdun'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT SUM(Sales.Order/TotalPrice)\nFROM Sales.Order\nINNER JOIN Sales.Order/Sales.Customer_Order/Sales.Customer/Sales.Customer_Address/Sales.Address\nGROUP BY Sales.Address/City\nHAVING SUM(Sales.Order/TotalPrice) > 1000.0 OR Sales.Address/City = 'Losdun'\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Default Style for Group Box Widget\nDESCRIPTION: This JavaScript code creates a custom default style for the Group Box widget by defining styles for container, header, and header content. It uses brand colors and shade blending to create a visually appealing widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { brand } from \"../core/variables\";\nimport shadeblendconvert from \"../core/helpers/_functions/shadeblendconvert\";\n\nexport const com_mendix_widget_native_groupbox_GroupBox = {\n    container: {\n        borderColor: brand.primary\n    },\n    header: {\n        backgroundColor: shadeblendconvert(0.4, brand.primary)\n    },\n    headerContent: {\n        color: \"#000000\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Renamed Design Property with Dropdown Options in JavaScript\nDESCRIPTION: Example showing how to configure a design property that was renamed, including oldNames field for backward compatibility and options with their own rename history.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"name\": \"My Dropdown Property\",\n    \"oldNames\": [\"my Dropdown Propery\"],\n    \"type\": \"Dropdown\",\n    \"description\": \"Description of My Dropdown Design Property\",\n    \"options\": [\n        {\n            \"name\": \"Styling option one\",\n            \"class\": \"stylingClassOne\"\n        },\n        {\n            \"name\": \"Styling option two\",\n            \"oldNames\": [\"Stling option 2\", \"Styling option 2\"],\n            \"class\": \"stylingClassTwo\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Action Button in Mendix Native Mobile\nDESCRIPTION: Defines styles for the action button widget, including container, caption, and icon properties. It also includes styles for disabled states and touch feedback on different platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ActionButton = {\n  container: {\n    // All ViewStyle properties\n    rippleColor: 'rgba(0, 0, 0, 0.2)',\n    underlayColor: null,\n  },\n  containerDisabled: {\n    // Same properties as `container`.\n  },\n  caption: {\n    // This has all TextStyle properties.\n  },\n  captionDisabled: {\n    // Same properties as `caption`.\n  },\n  icon: {\n    // This has all ViewStyle properties.\n    size: 12,\n    color: null,\n  },\n  iconDisabled: {\n    // Same properties as `icon`.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Updating Render Method to Pass Icons to Display Component\nDESCRIPTION: TypeScript React render method that passes custom icons to the wrapped GroupBox component. It processes props and converts DynamicValue<NativeIcon> properties to ReactNode components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_38\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const { collapseIcon, expandIcon, content, headerCaption, style } = this.props;\n\n    const props: WrappedGroupBoxProps = {\n        headerCaption,\n        collapseIcon: this.renderIcon(collapseIcon,             defaultCollapseIconGlyph),\n        expandIcon: this.renderIcon(expandIcon, defaultExpandIconGlyph),\n        style\n    };\n\n    return <WrappedGroupBox {...props}>{content}</WrappedGroupBox>;\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Content Conditionally\nDESCRIPTION: This TypeScript snippet extracts the rendering of the content area to a separate method, `renderContent`. It checks if there are any children, and if not, returns null, effectively hiding the content area. If there are children, it renders the content area with the children.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_21\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderContent = (): ReactNode => {\n        if (Children.count(this.props.children) === 0) {\n            return null;\n        }\n\n        return <View style={this.styles.content}>{this.props.children}</View>;\n    };\n```\n\n----------------------------------------\n\nTITLE: SQL Queries for Retrieving Employee Data (Runtime Server to RDBMS)\nDESCRIPTION: These SQL queries are executed by the Runtime Server to retrieve employee data from the database. The first query fetches the actual data, while the second query counts the total number of records.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \"myfirstmodule$employee\".\"id\",\n\"myfirstmodule$employee\".\"dateofbirth\",\n\"myfirstmodule$employee\".\"department\",\n\"myfirstmodule$employee\".\"firstname\",\n\"myfirstmodule$employee\".\"jobtitle\",\n\"myfirstmodule$employee\".\"lastname\"\nFROM \"myfirstmodule$employee\"\nORDER BY \"myfirstmodule$employee\".\"firstname\" ASC,\n\"myfirstmodule$employee\".\"id\" ASC LIMIT 20\nSELECT COUNT(*)\nFROM \"myfirstmodule$employee\"\n```\n\n----------------------------------------\n\nTITLE: Using MxBuild to Build a Native Mendix App\nDESCRIPTION: This command executes MxBuild to build a Mendix native app, specifying the Java home directory, Java executable path, build target (deploy), and enabling native packaging. It exports the app, runs the React Native metro bundler, and creates the necessary RN bundles and assets for each platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n\"<path-to-mxbuild.exe> --java-home=DIRECTORY -java-exe-path=FILENAME --target=deploy --native-packager <path-to-the-app-mpr>\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Gold Customers in Java with XPath true\nDESCRIPTION: This code snippet shows how to use the `true()` function in an XPath query in Java to retrieve customer entities from the `Sales.Customer` module where the `IsGoldCustomer` attribute is true. The double slashes (`//`) indicate a search through the entire data model for matching entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-true.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n //Sales.Customer[IsGoldCustomer = true()]\n```\n\n----------------------------------------\n\nTITLE: Generating Environment-Specific robots.txt with Hugo Templates\nDESCRIPTION: A robots.txt configuration template that uses Hugo's environment variable to generate different crawler rules for production and non-production environments. The template allows full crawling in production while blocking access in other environments.\nSOURCE: https://github.com/mendix/docs/blob/development/layouts/robots.txt#2025-04-21_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n# www.robotstxt.org\n\n{{- $isProduction := eq hugo.Environment \"production\" -}}\n{{- if $isProduction }}\n# Allow crawling of all content\n{{- else }}\n# Prevent crawling - not production site\n{{- end }}\n\nUser-agent: *\nSitemap: {{ \"/sitemap.xml\" | absURL }}\nDisallow: /_includes/\nDisallow: /_print/\nDisallow: /attachments/\nDisallow: /404.html\n{{- if not $isProduction }}\nDisallow: /\n{{- end }}\n\n# End of robots.txt file\n```\n\n----------------------------------------\n\nTITLE: Defining Bar Chart Widget Structure in XML\nDESCRIPTION: This XML snippet outlines the structure of the bar chart widget in Mendix, defining various elements such as container, axes, grid, legend, and bars with attributes for customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_38\n\nLANGUAGE: xml\nCODE:\n```\n<container/>\n<errorMessage/>\n<chart/>\n<grid/>\n<xAxis>\n\t<label/>\n</xAxis>\n<yAxis>\n\t<label/>\n</yAxis>\n<legend>\n\t<container/>\n\t<item/>\n\t<indicator/>\n\t<label/>\n</legend>\n<domain>\n    </padding>\n</domain>\n<bars>\n    </barsOffset>\n    </barColorPalette>\n\t<customBarStyles>\n\t\t<any_custom_bar_style_name>\n\t\t\t</bar>\n\t\t\t</label>\n\t\t</any_custom_bar_style_name>\n\t</customBarStyles>\n</bars>\n```\n\n----------------------------------------\n\nTITLE: Implementing NFC Tag Reading in JavaScript Action\nDESCRIPTION: This code creates a Promise that registers a tag event listener, reads the NFC tag when detected, decodes the payload to text format, and returns the result. It also unregisters the listener after reading to prevent multiple reads.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nreturn new Promise(resolve => {\n    NfcManager.registerTagEvent(tag => {\n        NfcManager.unregisterTagEvent();\n        const text = Ndef.text.decodePayload(tag.ndefMessage[0].payload);\n        resolve(text);\n    });\n});\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates in Dutch Locale - Java 11/17 vs Java 21\nDESCRIPTION: Illustrates changes in date formatting when migrating from Java 11 or 17 to Java 21. The snippet covers adjustments in date representations when the format string contains AM or PM due to locale data updates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/java-version-migration.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n| Microflow expression                            | Output under Java 11 | Output under Java 17 |\n| ----------------------------------------------- | -------------------- | -------------------- |\n| `formatDate(dateTime(2006, 5, 4))`              | 04-05-06             | 04-05-2006           |\n| `formatDateTime(dateTime(2006, 5, 4, 3, 2, 1))` | 04-05-06 03:02       | 04-05-2006 03:02     |\n```\n\nLANGUAGE: Java\nCODE:\n```\n'8:24' + urlDecode('%E2%80%AF') + 'AM'\n```\n\n----------------------------------------\n\nTITLE: Querying Day of Year from DateTime in Java with Timezone - Mendix Java\nDESCRIPTION: This snippet demonstrates the use of the `day-of-year-from-dateTime()` function in a Java context with an explicit timezone parameter. This query filters logs by checking if the day of the year from the DateAttribute is equal to 40 in the America/New_York timezone, which is essential for accurate logging in applications considering timezone differences.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n//Logging.Log[day-of-year-from-dateTime(DateAttribute, 'America/New_York') = 40]\n```\n\n----------------------------------------\n\nTITLE: Enabling System Metrics\nDESCRIPTION: This snippet demonstrates how to enable system metrics by creating a `DD_ENABLE_CHECKS` custom environment variable and setting its value to `true`. System metrics are disabled by default and typically reflect host metrics rather than container metrics. By default, this variable is set to `false`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/datadog-metrics.md#2025-04-21_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n`DD_ENABLE_CHECKS` custom environment variable and setting its value to `true`\n```\n\n----------------------------------------\n\nTITLE: Configuring Gallery Text Filter Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Gallery Text Filter widget. Includes styles for text input container, focused state, input field, and clear icon button.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_gallerytextfilter_GalleryTextFilter = {\n  textInputContainer: {\n    // This has all ViewStyle properties. Applies a view style to the container of the text input. \n  },\n  textInputContainerFocused: {\n    // This has all ViewStyle properties. Applies a view style to the container of the text input when the text box is focused.\n  },\n  textInput: {\n    // This has all ViewStyle properties. Applies a view style to the text input.\n  },\n  textInputClearIcon: {\n    // This has all ViewStyle properties. Applies style to the text clear button in the text box.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Custom Microflow for Access Token Parsing - OIDC\nDESCRIPTION: This section describes how to create a custom microflow named with `CustomATP` to handle access token parsing for your unique use cases, specifically for Microsoft Entra ID tokens, detailing the expected input and output roles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Create a microflow named `CustomATP_MyTokenParser`.\n2. Use the access token to create a list of user roles.\n3. Return user roles as objects of type `OIDC.Role`.\n```\n\n----------------------------------------\n\nTITLE: Sending a POST Request to Create CustomerEmailRequest in Mendix - HTTP\nDESCRIPTION: This POST request creates a new resource of the CustomerEmailRequest entity, specifying the subject, email text, and customer ID. It's used to execute logic defined in the insert microflow to send an email once a new request is made.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_15\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST http://localhost:8080/odata/CustomerApi/v1/CustomerEmailRequests\n\n{\n    \"Subject\":\"Test email\",\n    \"EmailText\":\"Hello\",\n    \"CustomerId\":1\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Metrics Page in Mendix Cloud\nDESCRIPTION: Step-by-step instructions for navigating to and selecting metrics for a specific Mendix application environment\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/metrics.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Open your app in [Apps](https://sprintr.home.mendix.com).\n\n1. In the navigation pane, click **Metrics**.\n\n1. Use the drop-down menu in the upper-right corner to select the environment you want to monitor.\n\n1. Use the **Period** and **Group** drop-down menus to choose the time period (day, week, month, or quarter) and the group (application, database, or all) for the graphs that you want to view.\n```\n\n----------------------------------------\n\nTITLE: JOIN Entity with Self-Generalization in OQL v2\nDESCRIPTION: Shows resolving the issue from OQL v1 where joining an entity with its generalization led to unexpected columns, now fixed in OQL v2. Demonstrates how to use `JOIN` with an `ON` clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Module.Car\nJOIN Module.Vehicle\nON True\n```\n\n----------------------------------------\n\nTITLE: Stopping Mendix Operator Deployment\nDESCRIPTION: This command scales the deployment of the Mendix Operator down to zero replicas, effectively stopping it before an upgrade.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-upgrade-guide.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} scale deployment mendix-operator --replicas=0\n```\n\n----------------------------------------\n\nTITLE: Error Response JSON Format\nDESCRIPTION: Example of the standard error response format returned by the API when a request fails, including error code and message fields.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"errorCode\": \"RS400\",\n    \"errorMessage\": \"Please provide valid input to execute this request. Invalid app id\"\n}\n```\n\n----------------------------------------\n\nTITLE: Queueing Java Action Execution via Core API - Java\nDESCRIPTION: This snippet demonstrates how to schedule a Java action for background execution using the `Core.userActionCall` method in Java. It shows how to set parameters and specify the task queue to which the Java action should be added. The task executes with a [new, but equivalent context](#context).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n```java\nCore.userActionCall(\"AModule.SomeJavaAction\")\n  .withParams(context, \"Value1\", \"Value2\")\n  .executeInBackground(context, \"AModule.SomeQueueName\");\n```\n```\n\n----------------------------------------\n\nTITLE: Updated Data View HTML Structure\nDESCRIPTION: New DOM structure for data views showing form orientation classes and form group organization\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-dataview [form-horizontal or form-vertical]\">\n\t<div class=\"mx-dataview-content\">\n\t\t...\n\t\t<div class=\"form-group\"> ... </div>\n\t\t<div class=\"form-group\"> ... </div>\n\t\t...\n\t</div>\n\t<div class=\"mx-dataview-controls\">\n\t\t...\n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Querying Day of Year from DateTime in Studio Pro with Timezone - Mendix XPath\nDESCRIPTION: This snippet showcases how to specify a timezone when using the `day-of-year-from-dateTime()` function in the Mendix Studio Pro environment. It retrieves logs where the day in the year for the DateAttribute is 40 specifically in the New York timezone, illustrating how timezone adjustments can affect date calculations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: XPath\nCODE:\n```\n[day-of-year-from-dateTime(DateAttribute, 'America/New_York') = 40]\n```\n\n----------------------------------------\n\nTITLE: Defining OQL NOT Operator\nDESCRIPTION: Explains the NOT operator, which negates the value of the expression that follows it in OQL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n| `NOT` | Reverses the value of the expression following this keyword. | `NOT City = 'Rotterdam'` returns all objects not in Rotterdam. |\n```\n\n----------------------------------------\n\nTITLE: Setting up APM Tool Navigation Microflow\nDESCRIPTION: Microflow identifier for opening the APM console UI that should be linked to navigation. The microflow 'APMAgent/USE_ME/IVK_OpenConsole' needs to be called to access the APM tools.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-one/ig-one-installation-steps/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nAPMAgent/USE_ME/IVK_OpenConsole\n```\n\n----------------------------------------\n\nTITLE: Open Link - Triggering Actions\nDESCRIPTION: This snippet describes the 'Open Link' event in Mendix, detailing how to specify link actions such as navigating to a URL, sending an email, or initiating a phone call. It highlights the 'Link Type' and 'Address' properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* **Link Type** – the type of action triggered when pressing the button. For information on available link types, see the [Link Types](#on-click-link-type) section below.\n* **Address** – usage of the address property depends on the chosen link type and whether you want to use a literal or to use the value of an attribute.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n| Value     | Description                                          | Example                                   |\n| --------- | ---------------------------------------------------- | ----------------------------------------- |\n| Web   *(default)*  | Navigate to a website URL                            | `https://mysubdomain.mydomain.tld/mypage` |\n| Email | Specifies an email address to which to send an email | `firstname.secondname@mailprovider.tld`   |\n| Call  | Starts a phone call to this number                   | `+1-202-555-0165`                         |\n| Text  | Specifies a number to which to send a text message   | `+1-202-555-0112`                         |\n```\n\n----------------------------------------\n\nTITLE: Parameter Table for Assert Checkbox Set Selector\nDESCRIPTION: Markdown table defining the required input parameters for asserting checkbox values, including the widget name, column caption, value and checked state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/assert-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String | Yes | The caption of the desired checkbox column.\nValue | String | Yes | The cell value of the checkbox row.\nChecked | Boolean | Yes | The value of the check kbox you want to assert (true or false).\n```\n\n----------------------------------------\n\nTITLE: Negative Bracket Expression for Character Exclusion\nDESCRIPTION: This example shows a bracket expression that matches any single character not specified within the brackets. It supports both ranges and individual characters. There are no dependencies. Inputs can be any character, with outputs indicating no match for anything within the specified range or set.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/regular-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: Regex\nCODE:\n```\n[^abc]\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Dropdown Button Click Action in Markdown\nDESCRIPTION: This code snippet defines the input parameters for the ATS action that clicks a dropdown div converter button. It specifies the widget name as a required string parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/dropdown-div-converter/dropdown-button.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | yes | The name of the drop-down `div` converter widget.\n```\n\n----------------------------------------\n\nTITLE: XAS Retrieve Warning Message\nDESCRIPTION: Warning message logged when retrieve operations exceed MaxRetrieveSize limit\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: text\nCODE:\n```\nA retrieve action requested more objects than allowed by the `MaxRetrieveSize` runtime setting. Amount requested: (...), allowed: (...)\n```\n\n----------------------------------------\n\nTITLE: Introducing ODataEntityTypeSource Element in Rest\nDESCRIPTION: A new element 'ODataEntityTypeSource' has been introduced in the Rest component, indicating that the source is a remote entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.8.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Rest\n\n#### ODataEntityTypeSource (Element)\n\n* We introduced this element. Info: \"Indicates that the source is a remote entity type\"\n```\n\n----------------------------------------\n\nTITLE: Using the Metrics API in Mendix 9.3\nDESCRIPTION: The new non-experimental Metrics API in Mendix 9.3 allows developers to record metrics such as counters, timers, and gauges as part of the Mendix Runtime API. This replaces the deprecated experimental metrics API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.3.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nmetrics()\n```\n\n----------------------------------------\n\nTITLE: Extracting a Substring in Mendix - Java\nDESCRIPTION: The `substring` function retrieves a specific segment of a string. It requires at least two parameters: the subject string and the starting position. An optional third parameter defines the desired length. Without this, the substring runs to the string's end. If starting outside the string bounds or exceeding length, it throws an error.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nsubstring('thisismystring', 0, min(length('thisismystring'), 20))\n```\n\n----------------------------------------\n\nTITLE: Defining AWS Connector Domain Model in Mendix\nDESCRIPTION: Template for documenting the domain model of an AWS connector, including entities and their descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/templates/marketplace-aws-connector-page-template.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Domain Model {#domain-model}\n\nThe domain model is a data model that describes the information in your application domain in an abstract way. For more information, see [Domain Model](/refguide/domain-model/).\n\nThe entities in the table below describe all generalizations. These are reused by the different models for the specific microflow activities or for storing connection details.\n\n| Name | Description |\n| --- | --- |\n| {ENTITY NAME} | {ENTITY DESCRIPTION} |\n```\n\n----------------------------------------\n\nTITLE: Disabling Email Address Redaction\nDESCRIPTION: This snippet illustrates how to disable email address redaction in log entries sent to Datadog.  By creating a `LOGS_REDACTION` custom environment variable and setting its value to `false`, email addresses will no longer be redacted. The default value for this variable is `true`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/datadog-metrics.md#2025-04-21_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n`LOGS_REDACTION` custom environment variable and set its value to `false`\n```\n\n----------------------------------------\n\nTITLE: Defining Background Image Styles in JavaScript\nDESCRIPTION: Sets style properties for a background image widget in a Mendix app using JavaScript. The configuration includes container styles and specific properties for images, such as `svgColor`, for SVG images. Understanding of ImageStyle properties is necessary for customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_backgroundimage_BackgroundImage = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  image: {\n    // This has all ImageStyle properties.\n    svgColor: 'black', // Property to set the color of an SVG image.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Associating File Extensions with Merge Drivers\nDESCRIPTION: This INI snippet associates the *.mpr and *.mxunit file extensions with the previously defined custom merge drivers, \"custommpr\" and \"custommprcontent\" respectively. This configuration instructs Git to use the specified drivers when encountering these file types during a merge operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_9\n\nLANGUAGE: INI\nCODE:\n```\n*.mpr     merge=custommpr\n*.mxunit  merge=custommprcontent\n```\n\n----------------------------------------\n\nTITLE: Understanding CAST Function in SQL\nDESCRIPTION: The following snippet illustrates the use of the CAST function to convert a DATETIME column to a STRING type within a SELECT statement. This is particularly useful for converting dates to a more readable format. This example also highlights the importance of explicit type conversions to ensure desired results during operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_19\n\nLANGUAGE: sql\nCODE:\n```\nCAST ( datetime_column AS STRING )\n```\n\n----------------------------------------\n\nTITLE: Deleting Object with JSON in Mendix\nDESCRIPTION: This JSON payload represents a request to delete an object in Mendix. It specifies the \"delete\" action and includes an array of GUIDs for the objects to be deleted. The object with the GUID \"281474976710757\" will be deleted from the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/communication-patterns.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"delete\",\n   \"params\":{\n      \"guids\":[\"281474976710757\"]\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204eeae128284c0\":323\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying the Status of a Unit Test Run - HTTP\nDESCRIPTION: This snippet illustrates how to check the status of a unit test run initiated via the remote API. A request is made to the `unittests/status` endpoint, also requiring a password for validation. The response provides detailed information regarding failures, test count, and completion status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/unit-testing.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nPOST http://localhost:8080/unittests/status\n{\n\t\"password\" : \"<password>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing XPath Query Execution in Java\nDESCRIPTION: Java code that executes an XPath query and returns a list of Mendix objects. It validates that returned objects match the specified entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-datastorage-api.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic java.util.List<IMendixObject> executeAction() throws Exception\n{\n    //BEGIN USER CODE\n    List<IMendixObject> result = null;\n    result = Core.createXPathQuery(this.XPath).execute(getContext());\n    if (!result.isEmpty() && !result.get(0).isInstanceOf(this.ResultEntity)) {\n        throw new MendixRuntimeException(String.format(\"Unexpected result entity: %s vs %s\",\n            result.get(0).getMetaObject().getName(), this.ResultEntity));\n    }\n    return result;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Child Folders Using XPath Constraint\nDESCRIPTION: This XPath constraint is used to retrieve subfolders (children) from a chosen folder (parent). It requires having the $ChosenFolder object available in the microflow. The constraint reads the association 'Folder_SubFolder' from right to left, returning subfolders related to the chosen folder. Ensure the correct side of the association is targeted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/associations/query-over.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n\"[QueryOver.Folder_SubFolder=$ChosenFolder]\"\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Kubernetes ServiceAccount with Azure Workload Identity\nDESCRIPTION: This shell script creates a Kubernetes ServiceAccount for a Mendix environment and annotates it with Azure workload identity information. This enables the Mendix application to authenticate with Azure Key Vault using managed identities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_20\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n <{Kubernetes namespace}> create serviceaccount <{environment name}>\nkubectl -n <{Kubernetes namespace}> annotate serviceaccount <{environment name}> privatecloud.mendix.com/environment-account=true\nkubectl -n <{Kubernetes namespace}> annotate serviceaccount <{environment name}> azure.workload.identity/client-id=<{managed identity client id}>\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Series with Range Selector in Mendix\nDESCRIPTION: JSON configuration for time series charts with range slider and filter buttons for different time periods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"rangeslider\": {\n      \"visible\": true\n    },\n    \"rangeselector\": {\n      \"buttons\": [\n        {\n          \"step\": \"all\",\n          \"label\": \"reset\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"backward\",\n          \"count\": 1,\n          \"label\": \"1 YEAR\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"backward\",\n          \"count\": 5,\n          \"label\": \"5 YEARS\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"backward\",\n          \"count\": 10,\n          \"label\": \"10 YEARS\"\n        },\n        {\n          \"step\": \"year\",\n          \"stepmode\": \"todate\",\n          \"count\": 1,\n          \"label\": \"YTD\"\n        }\n      ]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Date Picker Calendar Month Header Structure in HTML\nDESCRIPTION: Illustrates the new HTML structure for the month header in the date picker calendar, including navigation buttons and month dropdown.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-calendar-month-header\">\n\t<button class=\"mx-calendar-month-previous\">\n\t\t<span class=\"glyphicon glyphicon-minus\"/>\n\t</button>\n\t<div class=\"mx-calendar-month-dropdown\">\n\t\t<div class=\"mx-calendar-month-current\">\n\t\t\t<div class=\"mx-calendar-month-spacer\">\n\t\t\t\t<div>January</div>\n\t\t\t\t...\n\t\t\t</div>\n\t\t\t<div class=\"mx-calendar-month-label\">June</div>\n\t\t</div>\n\t\t<span class=\"glyphicon glyphicon-chevron-down\"/>\n\n\t\t<!-- only rendered when the month dropdown is clicked -->\n\t\t<div class=\"mx-calendar-month-dropdown-options\">\n\t\t\t<div>January</div>\n\t\t\t...\n\t\t</div>\n\t</div>\n\t<button class=\"mx-calendar-month-next\">\n\t\t<span class=\"glyphicon glyphicon-plus\"/>\n\t</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Employee Data via XPath in Mendix\nDESCRIPTION: JSON request from Mendix Client to Runtime Server to retrieve Employee entity data using XPath. The request includes pagination, sorting, and schema parameters to optimize data transfer.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"action\":\"retrieve_by_xpath\",\n   \"params\":{\n      \"xpath\":\"//MyFirstModule.Employee\",\n      \"schema\":{\n         \"id\":\"a2916c7c-af2f-4267-a8e9-99604f045861\",\n         \"offset\":0,\n         \"sort\":[\n            [\n               \"Firstname\",\n               \"asc\"\n            ]\n         ],\n         \"amount\":20\n      },\n      \"count\":true,\n      \"aggregates\":false\n   },\n   \"context\":[],\n   \"profiledata\":{\n      \"204ee5ad0c056a0\":15\n   }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Android Splash Screens Config Interface\nDESCRIPTION: This code snippet defines the interface for the Android splash screens configuration file. The JSON configuration should include image filename, the directory where it is saved (drawable), and a title, plus a version number for backwards compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_8\n\nLANGUAGE: JSON\nCODE:\n```\n```json\ninterface AndroidSplashScreensConfig{\n  \"images\": Array<{\n          \"filename\": \"splash.png\";\n          \"directory\": \"drawable-hdpi\" | \"drawable-xhdpi\" | \"drawable-xxhdpi\",\n          \"title\": string;\n      }>,\n  \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Filtering a List of Orders with the 'Open' Status Using XPath - Mendix\nDESCRIPTION: This snippet describes how to apply an XPath constraint to filter the orders in the data grid to only show those with a status of 'Open'. It demonstrates the necessary steps in the Mendix interface to modify the data grid's properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/logic-business-rules/filtering-data-on-an-overview-page.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Select the **Order** data grid and in the **Properties** pane on the right, change **Data source** > **Type** to **XPath**, and then click the **XPath Constraint** field:\n\n2. Enter the following expression in the **XPath Constraint** editor: `[OrderStatus = ‘Open’]`.\n```\n\n----------------------------------------\n\nTITLE: Configuring Import Data from File Activity\nDESCRIPTION: This snippet describes the configuration process of the 'Import data from file' activity within a microflow in Mendix. It guides users through the steps needed to set up parameters, select input files, and configure the associated Data Importer document.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-data-importer.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n// 1. In the created microflow, drag the **Import data from file** activity into it.\n// 2. Choose input file from upload page as a parameter.\n// 3. Select Data Importer document.\n// 4. Auto-populated return type and variable name.\n```\n\n----------------------------------------\n\nTITLE: Icon Value Type Definitions in TypeScript\nDESCRIPTION: Defines types for representing icons in Mendix client components, including GlyphIcon (font-based), WebImageIcon and NativeImageIcon (image-based) variants, with type discriminators for proper handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ninterface GlyphIcon {\n    readonly type: \"glyph\";\n    readonly iconClass: string;\n}\n    \ninterface WebImageIcon {\n    readonly type: \"image\";\n    readonly iconUrl: string;\n}\n    \ninterface NativeImageIcon {\n    readonly type: \"image\";\n    readonly iconUrl: Readonly<ImageURISource>;\n}\n    \nexport type WebIcon = GlyphIcon | WebImageIcon | undefined;\nexport type NativeIcon = GlyphIcon | NativeImageIcon | undefined;\nexport type IconValue = WebIcon | NativeIcon;\n```\n\n----------------------------------------\n\nTITLE: Changing Mendix Objects via JavaScript\nDESCRIPTION: This code snippet demonstrates how to change the attributes of an existing Mendix object using JavaScript. It uses `mxobj.get` to retrieve the current value of an attribute and `mxobj.set` to update it.  `mxobj.getOriginalValue` retrieves the original value before modification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmxobj.get(\"Name\");               // \"Fred\"\nmxobj.set(\"Name\", \"Henry\");\nmxobj.get(\"Name\");               // \"Henry\"\nmxobj.getOriginalValue(\"Name\")   // \"Fred\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TextBox Widget Properties in XML\nDESCRIPTION: XML configuration for adding onChangeAction property and connecting it to the textAttribute through onChange reference. Defines data source properties and event handlers for the TextBox widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<propertyGroup caption=\"Data source\">\n    <property key=\"textAttribute\" type=\"attribute\" onChange=\"onChangeAction\">\n        <caption>Attribute (path)</caption>\n        <description/>\n        <attributeTypes>\n            <attributeType name=\"String\"/>\n        </attributeTypes>\n    </property>\n</propertyGroup>\n<!-- ... -->\n<propertyGroup caption=\"Events\">\n    <property key=\"onChangeAction\" type=\"action\" required=\"false\">\n        <caption>On change</caption>\n        <description/>\n    </property>\n</propertyGroup>\n```\n\n----------------------------------------\n\nTITLE: Git Configuration - local repo\nDESCRIPTION: These commands configure Git to use a custom merge driver within a specific repository. It sets the name and driver for the \"custom\" merge strategy, invoking mx.exe for the merge operation. This is an alternative to global configuration, allowing project-specific merge handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"git config merge.custom.name \\\"custom merge driver for specific files\\\"\\ngit config merge.custom.driver \\\"[MX.EXE_PATH] merge %O %A %B\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Single-digit and Post Code Expression Example\nDESCRIPTION: An expression that uses quantifiers to require specific counts of characters in a Dutch postcode format, using braced repetitions to define numeric and alphabetic sections. It relies on a suitable regular expression processor but does not require other dependencies. Expected inputs are postcode strings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/regular-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: Regex\nCODE:\n```\n[1-9][0-9]{3} ?[A-Za-z]{2}\n```\n\n----------------------------------------\n\nTITLE: Sample Preference Configuration\nDESCRIPTION: This JSON snippet provides an example configuration for user preferences related to PMI (Product Manufacturing Information) visibility and filtering in a modeling application. It outlines which PMIs to ignore, and settings for model view and design group visibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"pmiPreference\": {\n        \"ignoredPMI\": [\"DIMENSION\",\"NOTE\"], \n        \"ignoreModelView\": true, \n        \"ignoreDesignGroup\": true, \n        \"onlyShowAssemblyLevelPMI\": false\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring IIS Rewrite Rules for SAML in Windows Environment\nDESCRIPTION: These XML rules need to be added to Microsoft Internet Information Services configuration to properly handle SAML SSO URLs and form submissions when deploying a Mendix application with SAML on a Windows environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/SAML/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<rule name=\"sso\"> <match  url=\"^(sso/)(.*)\"/>\n    <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" /></rule>\n<rule name=\"submitloginform\">\n<match  url=\"^(SubmitLoginForm)\" />\n    <action type=\"Rewrite\" url=\"http://localhost:8080/SubmitLoginForm>\n</rule>\n```\n\n----------------------------------------\n\nTITLE: Example Environment Settings Response\nDESCRIPTION: JSON response containing current values of constants, custom settings, and scheduled events for an environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"Constants\" : [{\n         \"Name\" :  \"MyFirstModule.BooleanConstant\" ,\n         \"DataType\" :  \"_Boolean\" ,\n         \"Value\" :  \"false\" ,\n         \"DeployedValue\" :  \"false\"\n     },{\n         \"Name\" :  \"MyFirstModule.DateTime\" ,\n         \"DataType\" :  \"DateTime\" ,\n         \"Value\" :  \"2013-12-20T16:02:32\" ,\n         \"DeployedValue\" :  \"2013-12-20T16:02:32\"\n     }],\n     \"CustomSettings\" : [],\n     \"ScheduledEvents\" : [{\n         \"Name\" :  \"MyFirstModule.Monitor_Scheduled_event\" ,\n         \"DeployedValue\" :  \"Disabled\" ,\n         \"Value\" :  \"Disabled\"\n     }]\n}\n```\n\n----------------------------------------\n\nTITLE: Pushing Over-the-Air Updates in Mendix Apps\nDESCRIPTION: Command to generate a new JavaScript bundle with assets and deploy an over-the-air (OTA) update. This allows updating app functionality without requiring users to download a new version from app stores, with control over rollout percentage and targeting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe release push-update --project-name \"CoolApp\" --target-version \"1.0.0\" --build-number 1 --rollout-percentage 100\n```\n\n----------------------------------------\n\nTITLE: Starting a New Unit Test Run via Remote API - HTTP\nDESCRIPTION: This snippet demonstrates how to initiate a new unit test run using the remote API with a password for authorization. The request is sent to the `unittests/start` endpoint and requires a configured password for security. A successful request will return a 204 NO CONTENT response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/unit-testing.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nPOST http://localhost:8080/unittests/start\n{\n\t\"password\" : \"<password>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commits from Development Branch Example - HTTP\nDESCRIPTION: Example HTTP request for retrieving commits from a development branch in a Mendix app repository. The branch name is URL-encoded and the request includes pagination parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nGET /v1/repositories/c0af1725-edae-4345-aea7-2f94f7760e33/branches/branches%2Fdevelopment/commits?limit=20&cursor=Rmlyc3RQYWdlQ3Vyc29y HTTP/1.1\nHost: repository.api.mendix.com\nAccept: */*\nAuthorization: MxToken hZUPhAV4ELPrRm7U7JAKf5BnxJk6q7dcsvFdw6ZR4wRYdv7egHjwHEYBwXY4RkSZrAWde3XqVAQkxZNPysvHcpquA9sK9bsKmcTN\n```\n\n----------------------------------------\n\nTITLE: Configuring Text Box Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for a text box widget including input field, labels, and validation messages. Supports different states like focused, disabled and error states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nexport const TextBox = {\n  container: {\n  },\n  containerDisabled: {\n  },\n  input: {\n    autoCapitalize: 'sentences',\n    placeholderTextColor: null,\n    selectionColor: null,\n    underlineColorAndroid: null,\n  },  \n  inputFocused: {\n  },\n  inputError: {\n  },\n  inputDisabled: {\n  },\n  label: {\n    numberOfLines: 1\n  },\n  labelDisabled: {\n  },\n  validationMessage: {\n  },  \n};\n```\n\n----------------------------------------\n\nTITLE: Microflow Event Elements\nDESCRIPTION: Visual notation examples showing different event types used in microflows including start, end, error, continue and break events.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: BPMN\nCODE:\n```\nStart Event: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/start-event.png\" >}}\nEnd Event: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/end-event.png\" >}}\nError Event: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/error-event.png\" >}}\nContinue Event: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/continue-event.png\" >}}\nBreak Event: {{< figure src=\"/attachments/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/break-event.png\" >}}\n```\n\n----------------------------------------\n\nTITLE: Control Bar Properties Example - CSV Export Settings\nDESCRIPTION: Default configuration values for CSV export functionality, including separators and delimiters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/grids/control-bar.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nDefault: *.*  // Decimal separator\nDefault: *,*  // Group separator\nDefault: *;*  // Delimiter\n```\n\n----------------------------------------\n\nTITLE: Defining Background Image Styles in JavaScript\nDESCRIPTION: This JavaScript snippet sets up style properties for a background image widget, detailing elements like 'container' and 'image'. It allows control over image appearance through properties such as ImageStyle, useful for layering widgets over images. Dependencies include a basic understanding of JavaScript and image styling in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n<container>\n\t<image />\n</container>\n```\n\n----------------------------------------\n\nTITLE: Logging Large Request State Warnings in Mendix\nDESCRIPTION: This code snippet shows an example of a warning log to indicate when a request's state exceeds the configured threshold, with detailed information about the number of persistent objects per entity type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/runtime-java/transient-objects-garbage-collecting.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nWARNING: Request state size of 551 objects exceeds the threshold of 500 objects. Request details: type `execute-action` in session `fd0771fe-8c12-49cf-8667-921058b116a3`. State consists of:\n * MyModule.MyEntity: 421 objects\n * AnotherModule.SomeEntity: 130 objects\n```\n\n----------------------------------------\n\nTITLE: Checking Listener Logs in Kubernetes\nDESCRIPTION: To investigate why a triggered pipeline isn't executing, begin by checking the listener logs using Kubernetes. Use `kubectl` commands to get the listener pod names and check their logs. This is crucial to identify any communication or configuration issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get po -n $NAMESPACE_WITH_PIPELINES\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs $LISTENER_POD -n $NAMESPACE_WITH_PIPELINES\n```\n\n----------------------------------------\n\nTITLE: Creating Project Package - Mendix Command-Line Tool\nDESCRIPTION: This command exports the app as a source app package. It accepts options to include snapshots and specify the output directory. The expected input is the target .mpr app file that needs to be exported.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/export.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmx create-project-package [OPTIONS] TARGET-FILE\n\nOPTIONS:\n  -s, --include-snapshot     Includes a snapshot in the app package.\n  -d, --package-dir          Exports the package to the directory.\n  --help                     Displays the help screen.\n\nTARGET-FILE: Specify the *.mpr* app you want to export.\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS/SSL Certificate Store in gradle.properties\nDESCRIPTION: This snippet shows how to configure the HTTPS/SSL certificate store in the `gradle.properties` file for Gradle. It requires specifying the path to the Windows trust store file. This configuration helps Gradle to trust SSL certificates when downloading dependencies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/managed-dependencies.md#2025-04-21_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\n\"systemProp.javax.net.ssl.trustStore=\\\\path\\\\to\\\\win_ini_file\nsystemProp.javax.net.ssl.trustStoreType=Windows-ROOT \"\n```\n\n----------------------------------------\n\nTITLE: Initializing Polar Chart Configuration in JSON\nDESCRIPTION: This snippet describes how to configure a polar chart in JSON format, specifying radial (r) and angular (theta) coordinates for data visualization. The expected output is a polar chart that visualizes data points in a circular format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"type\": \"scatterpolar\",\n  \"r\": [ 34, 11, 39, 37, 34 ],\n  \"theta\": [ \"A\", \"B\", \"C\", \"D\", \"A\" ],\n  \"fill\": \"toself\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Creating Example Database and Table\nDESCRIPTION: SQL commands to create and populate a test database with sample data for RBAC demonstration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_5\n\nLANGUAGE: SQL\nCODE:\n```\nCreate Database Example_RBAC;\nCREATE SCHEMA Example_RBAC.RBAC_schema;\nUSE SCHEMA Example_RBAC.RBAC_schema;\nCREATE OR REPLACE TABLE Example_RBAC (\n  store_id NUMBER, item VARCHAR, region VARCHAR);\nuse warehouse COMPUTE_WH;\nINSERT INTO Example_RBAC VALUES\n  (1, 'jacket', 'EU'),\n  (1, 'PC', 'EU'),\n  (1, 'jacket', 'EU'),\n  (1, 'XBOX', 'EU'),\n  (1, 'jacket', 'EU'),\n  (1, 'XBOx', 'EU'),\n  (1, 'jacket', 'US'),\n  (1, 'jacket', 'US'),\n  (1, 'jacket', 'US'),\n  (1, 'jacket', 'US'),\n  (1, 'PC', 'US'),\n  (1, 'jacket', 'US'),\n  (1, 'jacket', 'US'),\n  (1, 'jacket', 'ASIA'),\n  (2, 'umbrella', 'EU'),\n  (2, 'umbrella','EU'),\n  (2, 'umbrella', 'EU'),\n  (2, 'umbrella', 'EU'),\n  (2, 'umbrella', 'EU'),\n  (2, 'umbrella', 'EU'),\n  (2, 'umbrella','EU'),\n  (2, 'umbrella', 'EU'),\n  (2, 'umbrella', 'US'),\n  (2, 'umbrella', 'US'),\n  (2, 'umbrella', 'US'),\n  (2, 'umbrella', 'US'),\n  (2, 'umbrella', 'ASIA'),\n  (2, 'umbrella', 'ASIA');\n```\n\n----------------------------------------\n\nTITLE: Active Session Authentication in JavaScript for OData\nDESCRIPTION: This snippet demonstrates how to access a published OData service using the current user's session, specifically outlining the necessary HTTP headers to prevent cross-site request forgery.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/published-odata-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://mysite/odata/myservice/myresource\", false);\nxmlHttp.setRequestHeader(\"X-Csrf-Token\", mx.session.getConfig(\"csrftoken\"));\nxmlHttp.send(null);\n```\n\n----------------------------------------\n\nTITLE: Adding Styling Support to Components\nDESCRIPTION: Enhanced implementation of TextBox and TextInput components with styling support.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\nexport class TextBox extends Component<TextBoxContainerProps> {\n\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        return <TextInput\n            value={value}\n            style={this.props.style}\n            className={this.props.class}\n            tabIndex={this.props.tabIndex}\n        />;\n    }\n}\n```\n\nLANGUAGE: tsx\nCODE:\n```\nimport { CSSProperties, Component, ReactNode, createElement } from \"react\";\nimport classNames from \"classnames\";\n\nexport interface InputProps {\n    value: string;\n    className?: string;\n    index?: number;\n    style?: CSSProperties;\n    tabIndex?: number;\n}\nexport class TextInput extends Component<InputProps> {\n\n    render(): ReactNode {\n        const className = classNames(\"form-control\", this.props.className);\n        return <input\n            type=\"text\"\n            className={className}\n            style={this.props.style}\n            value={this.props.value}\n            tabIndex={this.props.tabIndex}\n        />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Group Box Widget Properties in XML\nDESCRIPTION: This XML snippet defines the properties for a Mendix native Group Box widget, including collapsible functionality and common system properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_44\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\nxmlns=\"http://www.mendix.com/widget/1.0/\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n<name>Group box</name>\n<description />\n<icon />\n<properties>\n    <propertyGroup caption=\"General\">\n        <propertyGroup caption=\"General\">\n            <property key=\"content\" type=\"widgets\" required=\"false\">\n                <caption>Content</caption>\n                <description>Widgets to place inside.</description>\n            </property>\n            <property key=\"collapsible\" type=\"enumeration\" defaultValue=\"no\">\n                <caption>Collapsible</caption>\n                <description />\n                <enumerationValues>\n                    <enumerationValue key=\"no\">No</enumerationValue>\n                    <enumerationValue key=\"yesStartExpanded\">Yes (start expanded)</enumerationValue>\n                    <enumerationValue key=\"yesStartCollapsed\">Yes (start collapsed)</enumerationValue>\n                </enumerationValues>\n            </property>\n        </propertyGroup>\n        <propertyGroup caption=\"Header\">\n            <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                <caption>Caption</caption>\n                <description />\n            </property>\n            <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                <caption>Expand icon</caption>\n                <description>Icon used to indicate that the group box can be expanded.</description>\n            </property>\n            <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                <caption>Collapse icon</caption>\n                <description>Icon used to indicate that the group box can be collapsed.</description>\n            </property>\n            </propertyGroup>\n            <propertyGroup caption=\"Common\">\n                <systemProperty key=\"Name\" />\n                <systemProperty key=\"Visibility\" />\n            </propertyGroup>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Java Query: Weekday from DateAttribute with Timezone\nDESCRIPTION: This Java query retrieves `Logging.Log` objects where the weekday of the `DateAttribute` is 6 (Friday) in the 'America/New_York' time zone.  It demonstrates how to use the `weekday-from-dateTime` function with the optional timezone parameter within a Java context in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n\"//Logging.Log[weekday-from-dateTime(DateAttribute, 'America/New_York') = 6]\"\n```\n\n----------------------------------------\n\nTITLE: Using Multiple mx-names in ATS Actions\nDESCRIPTION: Shows how to use multiple mx-names in ATS actions to precisely locate nested widgets, improving ATS's ability to interact with specific elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-increase-recorder-helper-coverage.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\n'container8 microflowButton2'\n```\n\n----------------------------------------\n\nTITLE: JSON Response with Employee Data from Mendix Runtime Server\nDESCRIPTION: Response from the Mendix Runtime Server to the Client containing requested Employee objects. The response includes a count and array of objects with their attributes and values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"count\":2,\n   \"mxobjects\":[\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710757\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"peter1\"},\n            \"DateOfBirth\":{\"value\":-315622800000},\n            \"Jobtitle\":{\"value\":\"sales\"},\n            \"Department\":{\"value\":\"sales\"},\n            \"Lastname\":{\"value\":\"jones\"}\n         }\n      },\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710657\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"piet\"},\n            \"DateOfBirth\":{\"value\":476406000000},\n            \"Jobtitle\":{\"value\":\"consultant\"},\n            \"Department\":{\"value\":\"expert services\"},\n            \"Lastname\":{\"value\":\"jansen\"}\n         }\n      }\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Info Block for Version Compatibility\nDESCRIPTION: Displays an alert about version compatibility when downloading apps and alternative methods using the Open App Dialog.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/version-control-menu/download-from-version-control-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nIf the downloaded app was created with a different version of Mendix, you will be asked if it can be converted to the current version.\n\nYou can also use the [Open App Dialog](/refguide9/open-app-dialog/) to download and open an app from Team Server. However, you will need to use this option if you want to download a second copy of an app (and development line) you already have on disk.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Load More Button Implementation\nDESCRIPTION: Example of implementing a load more button that appears only when more data is available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst currentLimit = this.props.myDataSource.limit;\nthis.props.myDataSource.hasMoreItems &&\n<button \n    onClick={() => this.props.myDataSource.setLimit(currentLimit + 10)}\n>\n    Load more\n</button>\n```\n\n----------------------------------------\n\nTITLE: Removing Deprecated Java Libraries in LDAP Synchronization Module\nDESCRIPTION: This code snippet lists Java libraries that were removed from the LDAP Synchronization module to address security vulnerabilities. It demonstrates how to update dependencies in a Mendix module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/support/security-findings-faq.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nspring-beans-4.3.9.RELEASE.jar \nspring-core-4.3.9.RELEASE.jar \nspring-ldap-core-2.3.1.RELEASE.jar \nspring-tx-4.3.9.RELEASE.jar \norg.slf4j.slf4j-api-1.7.25.jar \ncommons-lang-2.5.jar\n```\n\n----------------------------------------\n\nTITLE: Snapshot Details Response in Mendix API\nDESCRIPTION: Example JSON response when retrieving snapshot details. The response includes status information, timestamps, model version, and other metadata about the snapshot.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":\"Completed backup creation\",\n   \"model_version\":\"1.0.0.7\",\n   \"expires_at\":\"2020-05-18T16:00:18.000Z\",\n   \"finished_at\":\"2020-02-18T16:00:19.000Z\",\n   \"updated_at\":\"2020-02-18T16:00:19.000Z\",\n   \"snapshot_id\":\"51dc7872-771e-4c3e-853b-352359444db6\",\n   \"created_at\":\"2020-02-18T16:00:18.000Z\",\n   \"comment\":\"Manually created snapshot\",\n   \"state\":\"completed\"\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Original Object from Database in Mendix\nDESCRIPTION: SQL query to retrieve the original object from the database before applying changes. This step is necessary for running business logic and validations on the entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n WHERE \"myfirstmodule$employee\".\"id\" = (281474976710857)\n```\n\n----------------------------------------\n\nTITLE: Customizing Chart Font with JSON in Mendix\nDESCRIPTION: This JSON snippet demonstrates how to modify the font family, size, and color of a chart within the Mendix Chart widget's layout settings. It allows developers to apply a consistent and visually appealing font style to the chart elements. The snippet is used within the Layout options in the Advanced tab.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/charts-advanced-tuning.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n    {\n      \"font\": {\n        \"family\": \"Open Sans\",\n        \"size\": 14,\n        \"color\": \"#555\"\n      }\n    }\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Ports in Parallels\nDESCRIPTION: Detailed configuration steps for setting up port forwarding in Parallels to enable Mendix Studio Pro network features, specifically forwarding ports 8080 and 8083 for web and mobile app development.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/using-mendix-studio-pro-on-a-mac.md#2025-04-21_snippet_0\n\nLANGUAGE: Configuration\nCODE:\n```\nPort Forwarding Rules:\n- Forward port 8080 to Windows VM\n- Forward port 8083 to Windows VM\n```\n\n----------------------------------------\n\nTITLE: Defining Table Structure for Threadpool Metrics in Markdown\nDESCRIPTION: This code snippet defines a markdown table structure explaining different values shown in the Threadpool for Handling External Requests graph, including minimum threads, maximum threads, active threads, and threadpool size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/metrics.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Value               | Explanation                                                    |\n|---------------------|----------------------------------------------------------------|\n| **min threads**     | Minimum bound of threads to be used by the Jetty threadpool    |\n| **max threads**     | Maximum bound of threads to be used by the Jetty threadpool    |\n| **active threads**  | Active threads that are being used within the Jetty threadpool |\n| **threadpool size** | The current total size of the Jetty threadpool                 |\n```\n\n----------------------------------------\n\nTITLE: Creating a Published Web Service in Mendix\nDESCRIPTION: This snippet demonstrates how to create a published web service in Mendix by adding it to a module and configuring its settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/expose-a-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nRight-click the module in which you want to store the published web service and select **Add** > **Published services** > **Published web service**:\n\nIn the **Add Published Web Service** window, enter *CustomerWebservice* for the **Name** and then click **OK**:\n\nYou should now see the **Published Web Service** properties window. Take note of the following tab details:\n* On the **Operations** tab, you can see the available operations of the web service (currently the list is empty, so we'll add an operation in section [6 Publishing a Microflow](#6)):\n\n* On the **Settings** tab, you can configure the other settings. Do change them before publishing your web service, especially the **Target namespace** (for details on these settings, see [Published Web Service](/refguide8/published-web-service/) in the *Studio Pro Guide*):\n\n* On the **Documentation** tab, you can change the documentation:\n\nClick **OK.**\n```\n\n----------------------------------------\n\nTITLE: Displaying OrderLine Entity Table Structure in Markdown\nDESCRIPTION: This snippet shows the table structure for the OrderLine entity, including its direct association with the Order entity. It demonstrates how OrderLine data is stored in the module$orderline table.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| id | module$orderline_order | productid | quantity |\n| --: | --: | --- | --: |\n| 22 | 5 | X23592 | 1 |\n| 23 | 5 | X23613 | 7 |\n| 55 | 8 | Z97D22 | 2 |\n| 57 | 8 | A49TS3 | 2 |\n```\n\n----------------------------------------\n\nTITLE: Exporting Custom Styling Classes in JavaScript\nDESCRIPTION: Defines a custom styling class for widgets using JavaScript object syntax. This class includes various style properties like padding and font-weight for different elements within the widget. It requires understanding of React Native's ViewStyle and TextStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport const customClassName = {\n  container: {\n    paddingTop: 5\n  },\n  text: {\n    fontWeight: \"bold\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Action for Tapped Notification in Mendix\nDESCRIPTION: This code snippet demonstrates how to configure an action that occurs when a user taps a push notification in a Mendix mobile application. It involves setting the action name and creating an associated page that will be displayed upon interaction with the notification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/local-notifications/local-notif-action.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n// Step to set Action Name for Notification\nDouble-click your **Display Notification** activity:\n\n// Set Action Name Edit\nClick **Action Name** > **Edit** \n\n// Expression to show page\nType 'show_page' into the expression field:\n```\n\n----------------------------------------\n\nTITLE: Updating Multiple Associations with Delta Syntax in OData JSON\nDESCRIPTION: JSON example demonstrating how to update associations that refer to multiple objects using the @delta syntax. This allows adding or removing objects from an association by specifying @id for additions and @removed for removals.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/published-odata-services/odata-query-options.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Customers@delta\": [\n    {\n      \"@id\": \"Customers(484)\"\n    },\n    {\n      \"@removed\": {\n        \"reason\": \"changed\"\n      },\n      \"@id\": \"Customers(712)\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Snapshot Archive with Mendix API\nDESCRIPTION: Example request to create an archive from a snapshot. The request specifies the data_type parameter as database_only, which determines what data to include in the archive.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots/5f8ace23-19df-4134-bd67-c338142a6097/archives?data_type=database_only\n\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Querying Day of Year from DateTime in Java - Mendix Java\nDESCRIPTION: This snippet illustrates how to apply the `day-of-year-from-dateTime()` function within a Java context to filter log records. Similar to the XPath example, it finds logs where the day of the year is 40 based on the DateAttribute. This example is useful for Java developers working with Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n//Logging.Log[day-of-year-from-dateTime(DateAttribute) = 40]\n```\n\n----------------------------------------\n\nTITLE: Implementing Message Handling in JavaScript for Mendix Extension\nDESCRIPTION: This JavaScript code sets up message handling for communication between the web view and the extension logic. It defines a helper function for posting messages and registers a message listener.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nfunction postMessage(message, data) {\n  window.chrome.webview.postMessage({ message, data });\n}\n\n// Register message handler.\nwindow.chrome.webview.addEventListener(\"message\", handleMessage);\n// Indicate that you are ready to receive messages.\npostMessage(\"MessageListenerRegistered\");\n\nasync function handleMessage(event) {\n  const { message, data } = event.data;\n  if (message === \"RefreshToDos\") {\n      await refreshToDos();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Range Mode Configuration with Fill (JSON)\nDESCRIPTION: This snippet highlights that when the `fill` property for a series is set to a value other than `none`, the y-axis range is forced to start from zero (`tozero`). This behavior overrides any other `rangemode` setting for the y-axis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"rangemode\": \"normal\"\n  }\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"fill\": \"tonexty\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Javaagent in m2ee.yaml for On-Premises Linux/Windows\nDESCRIPTION: This snippet demonstrates how to add the New Relic Java agent to the javaopts list in the m2ee.yaml file for on-premises deployments. This configuration enables New Relic to monitor the Mendix application running in a Linux or Windows environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-performance/manage-app-performance-with-new-relic.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n javaopts: [\n   \"-Dfile.encoding=UTF-8\", \"-Xmx512M\", \"-Xms512M\",\n   \"-Djava.io.tmpdir=/srv/mendix/data/tmp\",\n   \"-javaagent:/opt/newrelic/javaagent.jar\"\n ]\n```\n\n----------------------------------------\n\nTITLE: Implementing GitHub REST API Request in JavaScript Action\nDESCRIPTION: Code that fetches data from the GitHub API based on the provided query parameter and returns an empty list.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function SearchGitHubUsers(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    const url = \"https://api.github.com/search/users?q=\" + query;\n    const response = await fetch(url); // Fetch returns a promise, gets the url and wait for result\n    const jsonData = await response.json(); // Transform to JSON\n    logger.debug(\"count results\", jsonData.total_count); // log to the console a successful result\n    return []; // return an empty list for now...\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: XML Definition for Badge Widget Styles\nDESCRIPTION: The XML snippet describes the structure and styling of a badge widget in a Mendix mobile application, focusing on elements like 'container' and 'caption'. It specifies how text or values are displayed as badges, controlling appearance via TextStyle properties. Familiarity with XML and Mendix badge styling is necessary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_21\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<caption>New</caption>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Old Pipeline Resources\nDESCRIPTION: Remove old Tekton pipelinerun resources except the latest 5 using this `kubectl` command sequence. This is important for managing resources and avoiding clutter from excessive pipeline runs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nNUM_TO_KEEP=5\nTO_DELETE=\"$(kubectl get pipelinerun -o jsonpath='{range .items[?(@.status.completionTime)]}{.status.completionTime}{\" \"}{.metadata.name}{\"\\n\"}{end}' | sort | head -n -${NUM_TO_KEEP} | awk '{ print $2}')\"\nkubectl delete pipelinerun ${TO_DELETE}\n```\n\n----------------------------------------\n\nTITLE: Checking Archive Creation Status with Mendix API\nDESCRIPTION: Example request to check the status of a snapshot archive creation job. Uses the archive_id obtained from the previous creation request to track progress.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/v2/apps/543857rfds-dfsfsd12c5e24-3224d32eg/environments/cd5fc610-edb0-43c5-a374-0439a6411ace/snapshots/5f8ace23-19df-4134-bd67-c338142a6097/archives/a6f519aa-a68e-4054-9341-2cfec72ea184\n\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Value in OrderLine View Entity using OQL\nDESCRIPTION: SQL query that calculates the total value of each order line using the formula (Quantity * UnitPrice * (1 - Discount)) within a view entity. This provides efficient retrieval of calculated values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  ol.OrderLineId as OrderLineId,\n  ol.Quantity as Quantity,\n  ol.UnitPrice as UnitPrice,\n  ol.Discount as Discount,\n  (ol.Quantity * ol.UnitPrice * (1 - ol.Discount)) as Total\nFROM Shop.OrderLine ol\n```\n\n----------------------------------------\n\nTITLE: Specifying Return Value for Find Checkbox Set Selector in Markdown\nDESCRIPTION: This code snippet defines the return value of the 'Find Checkbox Set Selector' function using a markdown table. It specifies the name, datatype, and description of the return value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/find-all.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nWidget | WebElement | The found checkbox.\n```\n\n----------------------------------------\n\nTITLE: Configuring Manifest.json for Multiple Tabs\nDESCRIPTION: JSON configuration for the manifest.json file that defines entry points for the main component and three UI tabs. This structure is required for the extension to properly load the tab content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/tab-api.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mendixComponent\": {\n    \"entryPoints\": {\n      \"main\": \"main.js\",\n      \"ui\": {\n        \"tab1\": \"tab1.js\",\n        \"tab2\": \"tab2.js\",\n        \"tab3\": \"tab3.js\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Less Than or Equal Operator in XPath in Java\nDESCRIPTION: This query finds customers who have placed at least one order with a TotalPrice of less than or equal to 30,000. Unlike the not() query above, this will return customers who have any orders below 30,000, even if they also have orders above 30,000.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/TotalPrice <= 30000]\n```\n\n----------------------------------------\n\nTITLE: Model Role Assignment Example\nDESCRIPTION: These examples demonstrate how to prime the model by explaining what it does. This creates a bias in the model towards specific reasoning, and it increases the quality of their answer based on what you expect from the (stereotypical) persona, leading to improved responses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/prompt-engineering.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n\"You are a helpdesk assistant.\"\n```\n\nLANGUAGE: text\nCODE:\n```\n\"You are a writer who specializes in marketing content.\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Badge Widget Styles in JavaScript\nDESCRIPTION: Outlines style properties for a badge widget in a Mendix app using JavaScript. The styles include container and caption styling, which are customizable through ViewStyle and TextStyle properties, providing flexibility in the appearance of badges.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_badge_Badge = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  caption: {\n    // This has all TextStyle properties.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Registering an Environment with Registration API\nDESCRIPTION: This curl command shows how to register an environment for an application. It requires the application UUID, environment name, location URL, and type. The request is authenticated using a Personal Access Token.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location --request POST 'https://catalog.mendix.com/rest/registration/v5/applications/{application_UUID}/environments' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: MxToken <your_Personal_Access_Token>' \\\n--data-raw '{\"name\": \"My-Environment\", \"location\": \"https://my-deployed-application-url.com\", \"type\": \"Production\"}'\n```\n\n----------------------------------------\n\nTITLE: ModifiableValue Interface Definition in TypeScript\nDESCRIPTION: Defines the ModifiableValue interface used to represent values that can be changed by a pluggable widget client component. This interface includes properties for value status, read-only state, value access, validation, and validation setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ModifiableValue<T> {\n\treadonly status: ValueStatus;\n\treadonly readOnly: boolean;\n    \n\treadonly value: Option<T>;\n\treadonly setValue: (value: Option<T>) => void;\n\treadonly validation: Option<string>;\n\treadonly setValidator: (validator?: (value: Option<T>) => Option<string>) => void;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Table for Widget-Assert Functions\nDESCRIPTION: This snippet defines a markdown table listing Widget-Assert functions in ATS, including function names, supported widgets, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-function-reference.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Function         | Supported Widgets | Description                              |\n| ---------------- | ----------------- | ---------------------------------------- |\n| Assert Active Tab Caption | TabContainer | Asserts a certain value for the caption of an active tab page. |\n| Assert BooleanSlider Value | BooleanSlider | ⚠ Deprecated in favor of **Assert Value**.<br /> Asserts that the BooleanSlider is set to the given value. |\n| Assert BootstrapRTE Value | BootstrapRTE | ⚠ Deprecated in favor of **Assert Value**.<br /> Asserts that the BootstrapRTE value is equal to the given value. |\n| Assert Checkbox Set Selector Value | Checkbox Set Selector | Finds the checkbox-by-entity attribute and asserts that the checkbox is set to the given value. |\n| Assert Checkbox Value | CheckBox | Asserts the value of a checkbox. |\n```\n\n----------------------------------------\n\nTITLE: Reversing TCP Port for React Native Debugging\nDESCRIPTION: This command allows the applet to interact with your device. It uses the Android Debug Bridge (adb) to reverse the TCP port 8097, which is necessary for React Native debugging with the Make It Native app on a connected Android device. It facilitates communication between the development machine and the mobile device.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\n\"adb reverse tcp:8097 tcp:8097\"\n```\n\n----------------------------------------\n\nTITLE: Setting Up Multiple Y Axes in JSON\nDESCRIPTION: This snippet demonstrates how to configure multiple Y axes with specific titles, colors, and grid properties. Use alongside data properties for full functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"title\": \"Y-axis 1\",\n    \"zeroline\": true,\n    \"color\": \"#4682B4\",\n    \"showgrid\": true,\n    \"showline\": true\n  },\n  \"yaxis2\": {\n    \"title\": \"Y-axis 2\",\n    \"color\": \"#FF8C00\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"zeroline\": true,\n    \"overlaying\": \"y\",\n    \"side\": \"right\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating SSO Login HTML for Mendix App - HTML\nDESCRIPTION: This HTML snippet creates a simple SSO login page. It uses a redirection script to direct users to the SSO authentication endpoint with any existing query parameters. This file is essential for establishing user authentication in the Mendix app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n\n<head>\n\t<title>Insights Hub</title>\n\t<script>\n\t\twindow.location.assign(\"/sso\" + window.location.search)\n\t</script>\n</head>\n\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring Selenium Node with JSON\nDESCRIPTION: JSON configuration file for Selenium Node specifying browser capabilities, connection settings, and node-specific parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n \"capabilities\":\n [\n{\n \"browserName\": \"chrome\",\n \"maxInstances\": 5,\n \"seleniumProtocol\": \"WebDriver\"\n},\n{\n \"browserName\": \"firefox\",\n \"marionette\": true,\n \"maxInstances\": 5,\n \"seleniumProtocol\": \"WebDriver\"\n}\n ],\n \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n \"maxSession\": 5,\n \"port\": 5555,\n \"register\": true,\n \"registerCycle\": 5000,\n \"hub\": \"http://localhost:4444\",\n \"nodeStatusCheckTimeout\": 5000,\n \"nodePolling\": 5000,\n \"role\": \"node\",\n \"unregisterIfStillDownAfter\": 60000,\n \"downPollingLimit\": 2,\n \"debug\": false,\n \"servlets\" : [],\n \"withoutServlets\": [],\n \"custom\": {}\n}\n```\n\n----------------------------------------\n\nTITLE: Checking if Synchronization is Running in Mendix Java\nDESCRIPTION: This code provides a mechanism to verify if a synchronization process is currently active. It requires no input parameters and returns 'true' if synchronization is running; otherwise, it returns 'false'. Ideal for client-side expressions in nanoflows and pages, ensuring applications can manage data sync states effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nisSyncing()\n```\n\n----------------------------------------\n\nTITLE: Remove User from Security Group Request\nDESCRIPTION: HTTP DELETE request example for removing a user from a security group using their URL-encoded OpenID. Requires Company Manager or Members Manager role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_24\n\nLANGUAGE: http\nCODE:\n```\nDELETE /legacy-api/1/groups/a552a41b-5b30-41000-bab7-ad102eacd653/users/https%3A%2F%2Fmxid2.mendix.dev%2Fmxid2%2Fid%3Fid%3Ddaba46fc-692c-4622-adb4-981fcfb0dec9 HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n```\n\n----------------------------------------\n\nTITLE: XPath Query for Customers with Orders Under 30000 in Java\nDESCRIPTION: This Java query retrieves `Sales.Customer` objects who have placed at least one order with a `TotalPrice` less than or equal to 30,000. This query serves as a comparison to the previous example that uses the `not()` function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[Sales.Customer_Order/Sales.Order/TotalPrice <= 30000]\n```\n\n----------------------------------------\n\nTITLE: Button and Microflow Setup for File Upload\nDESCRIPTION: This snippet outlines the steps to create a user interface component (button) for initiating a file upload in Mendix and configuring a microflow to handle the upload process. It specifies the requirements for setting parameters linked to the FileDocument entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-data-importer.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n// 1. Open the home page and add a button for *Upload Customer Data*.\n// 2. In the button's **On click** event, select **Create object** for **System.FileDocument**.\n// 3. Redirect to **UploadCustomerData** page.\n```\n\n----------------------------------------\n\nTITLE: Get Kubernetes CA Certificate\nDESCRIPTION: This snippet retrieves the CA certificate from the Kubernetes cluster configuration. It extracts the current context and cluster, then uses `kubectl` to retrieve the certificate authority data and decodes it using `base64` to save it into `custom.crt`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport context=`kubectl config current-context`\nexport cluster=`kubectl config view -o jsonpath=\"{.contexts[?(@.name == \\\"$context\\\")].context.cluster}\"`\nkubectl config view --raw -o jsonpath=\"{.clusters[?(@.name == \\\"$cluster\\\")].cluster.certificate-authority-data}\" | base64 -d > custom.crt\n```\n\n----------------------------------------\n\nTITLE: Configuring OS Bar with JSON Object in Mendix\nDESCRIPTION: This code snippet illustrates how to configure the OS Bar using a JSON object in the SiemensInsightsHubOSBarConfig module. It specifies the necessary parameters such as display name, app version, copyright information, and additional links.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\"displayName\": \"Your App Name\", \"appVersion\": \"1.0\", \"appCopyright\": \"Your Name © 2023\", \"links\": [{\"label\": \"More Info\", \"url\": \"http://example.com\"}]}\n```\n\n----------------------------------------\n\nTITLE: Removing Data Source Filter in Mendix\nDESCRIPTION: Code snippet showing how to clear the current filter condition by passing undefined to the setFilter method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nthis.props.myDataSource.setFilter(undefined);\n```\n\n----------------------------------------\n\nTITLE: Document Metadata in Markdown\nDESCRIPTION: YAML frontmatter metadata defining the document title and URL path for the UI resources package documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/modules/ui-resources-package.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"UI Resources Package\"\nurl: /refguide9/ui-resources-package/\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Microflow Call in Mendix Workflow\nDESCRIPTION: This snippet demonstrates how to configure a microflow call within a Mendix workflow. It shows the XML structure for adding a 'Call microflow' activity after a user task, including setting the microflow and caption properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/call-microflow.png\" alt=\"Call Microflow\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Creating Mendix App Deployment with kubectl\nDESCRIPTION: This command deploys the Mendix application to the Kubernetes cluster using the `mendix-app.yaml` file, which defines the StatefulSet.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n```bash\nkubectl create -f mendix-app.yaml\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Cloud Foundry PostgreSQL Service Instance\nDESCRIPTION: Command to create a PostgreSQL service instance for a Mendix application in Cloud Foundry. Each Mendix app requires its own dedicated database instance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncf create-service postgresql10 {plan} {service_instance} [-c {parameters_as_JSON}] [-t {tags}]\n```\n\n----------------------------------------\n\nTITLE: Group by Clause Example - Conditional Grouping\nDESCRIPTION: This SQL query illustrates the GROUP BY clause with a HAVING constraint, returning summed order prices per city only for those cities where the total is greater than 1000.00 or the city name is Losdun.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT SUM(Sales.\"Order\"/TotalPrice)\nFROM Sales.\"Order\"\nINNER JOIN Sales.\"Order\"/Sales.Customer_Order/Sales.Customer/Sales.Customer_Address/Sales.Address\nGROUP BY Sales.Address/City\nHAVING SUM(Sales.\"Order\"/TotalPrice) > 1000.0 OR Sales.Address/City = 'Losdun'\n```\n\n----------------------------------------\n\nTITLE: Configuring JMX Registry in JSON\nDESCRIPTION: Example configuration for JMX metrics registry with domain and step settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"jmx\",\n    \"settings\": {\n      \"step\": \"3m\",\n      \"domain\": \"Mendix\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Toggle Checkbox Set Selector Value Action\nDESCRIPTION: This snippet defines the input parameters required for the Toggle Checkbox Set Selector Value action in Mendix ATS. It specifies the widget name, column caption, and cell value needed to identify and toggle a specific checkbox.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/toggle-value-all.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String | Yes | The caption of the desired checkbox column.\nValue | String | Yes | The cell value of the checkbox row.\n```\n\n----------------------------------------\n\nTITLE: Inefficient XPath Query Example in Java\nDESCRIPTION: An example of an inefficient XPath query that should be avoided. It uses the same path twice in a single constraint, which slows down the query process significantly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address/City = 'Rotterdam' or Sales.Customer_Address/Sales.Address/City = 'Losdun']\n```\n\n----------------------------------------\n\nTITLE: Setting Module Version with MX CLI\nDESCRIPTION: The `mx set-module-version` command modifies the version of a specified add-on module in a Mendix project. It requires a valid *.mpr* file, a module name, and a new version in the SemVer format. The command changes the module version or returns an error if the module doesn't have an existing version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/module.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n`mx set-module-version TARGET-FILE MODULE-NAME NEW-VERSION`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx set-module-version C:\\MyApp\\MyApp.mpr MyFirstModule 1.2.3`\n```\n\n----------------------------------------\n\nTITLE: Initializing Scatter Chart Configuration in JSON\nDESCRIPTION: This snippet illustrates the configuration of a scatter chart in JSON format, including x and y coordinates as well as textual annotations for each point. The output will be a scatter chart with points marked and labeled as defined in the configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"text\": [ \"A\", \"B\", \"C\" ],\n  \"textposition\": \"left center\",\n  \"mode\": \"markers+text\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Querying with Date Range in Java\nDESCRIPTION: This XPath query retrieves all customer objects from the 'Sales' module where the 'DateRegistered' attribute is greater than or equal to the beginning of the current week. This Java-compatible version is suitable for use in Mendix Java actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //Sales.Customer[DateRegistered >= '[%BeginOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Defining Return Value for 'Find Element by ID' Action in Markdown\nDESCRIPTION: This snippet defines the return value for the 'Find Element by ID' action using a markdown table. It specifies the name, datatype, and description of the returned element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-find/rg-one-find-element-by-id.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nElement | WebElement | The wanted WebElement\n```\n\n----------------------------------------\n\nTITLE: Retrieving Units Info in TypeScript\nDESCRIPTION: This code snippet retrieves all unit information managed by the domainModels component. It uses the getUnitsInfo method, which returns a promise that resolves to an array of UnitInfo objects. This is essential for accessing detailed properties of the units in the Mendix model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/model-api.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst unitsInfo: Primitives.UnitInfo[] = await domainModels.getUnitsInfo()\n```\n\n----------------------------------------\n\nTITLE: Formatting Dates in Dutch Locale - Java 11 vs Java 17\nDESCRIPTION: Demonstrates differences in date formatting outputs when migrating from Java 11 to Java 17 for Dutch locales. It includes examples of microflow expressions that show changes in date representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/java-version-migration.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n| Microflow expression                            | Output under Java 11 | Output under Java 17 |\n| ----------------------------------------------- | -------------------- | -------------------- |\n| `formatDate(dateTime(2006, 5, 4))`              | 4/05/06              | 4/05/2006            |\n| `formatDateTime(dateTime(2006, 5, 4, 3, 2, 1))` | 4/05/06 03:02        | 4/05/2006 03:02      |\n```\n\n----------------------------------------\n\nTITLE: Configuring Runtime Settings for JSON Import Length\nDESCRIPTION: Runtime setting to configure the maximum length of a JSON string that can be imported. This setting was added to fix an issue where importing JSON strings longer than 20,000,000 characters resulted in exceptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nmapping.import.MaxJsonReadingLength\n```\n\n----------------------------------------\n\nTITLE: Rendering Group Box Component with Header in TSX\nDESCRIPTION: This TSX code renders the Group Box component with a header displaying the headerCaption prop and a content area. It uses React Native View and Text components for layout.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_12\n\nLANGUAGE: TSX\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            <View style={this.styles.content}>\n                <Text>Content</Text>\n            </View>\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Project Folders for Resetting Build\nDESCRIPTION: This excerpt outlines the steps for manually deleting specific folders in a project to rectify issues encountered during the build process in Android Studio. It includes deleting `.gradle`, `.idea`, and `build` folders to reset the project environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Delete the `.gradle` folder.\n2. Delete the `.idea` folder.\n3. Delete both `build` folders in `/app` and `/mendixNative`.\n4. Restart Android Studio and open the project.\n```\n\n----------------------------------------\n\nTITLE: Querying with day-from-dateTime with Timezone in Studio Pro\nDESCRIPTION: This XPath query retrieves all objects where the day of the month of the `DateAttribute` is 30, using the 'America/New_York' time zone.  The `day-from-dateTime()` function extracts the day, considering the specified timezone, which is then compared to the integer 30.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [day-from-dateTime(DateAttribute, 'America/New_York') = 30]\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by City in SQL\nDESCRIPTION: This SQL query fetches the first names of customers who reside in 'Rotterdam'. It demonstrates the use of INNER JOIN to combine tables and apply conditions on the joined tables. It works with tables Sales.Customer and Sales.Address and includes a condition based on the City field.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-where-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nINNER JOIN Sales.Customer/Sales.Customer_Address/Sales.Address\nWHERE Sales.Address/City = 'Rotterdam'\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Styles in Mendix Charts\nDESCRIPTION: JSON configuration for different line styles including markers, line types, and dash patterns. Each configuration shows a different visualization option for line charts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"mode\": \"markers\"\n  },\n  {\n    \"mode\": \"lines+markers\"\n  },\n  {\n    \"mode\": \"lines\"\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"dash\": \"dashdot\"\n    }\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"dash\": \"dot\"\n    }\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"dash\": \"longdash\"\n    }\n  },\n  {\n    \"mode\": \"lines\",\n    \"line\": {\n      \"width\": 5\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Querying Day of Year in New York Time Zone - Java\nDESCRIPTION: This snippet shows how to use the `day-of-year-from-dateTime()` function with an optional timezone parameter to query logs for a specific day of the year based on a DateAttribute in the New York time zone. It returns logs where the day of the year equals 40.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-of-year-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[day-of-year-from-dateTime(DateAttribute, 'America/New_York') = 40]\n```\n\n----------------------------------------\n\nTITLE: XML Number Formatting Table\nDESCRIPTION: A reference table showing how different numeric values are formatted in XML based on totalDigits and fractionDigits schema facets. Demonstrates various scenarios including decimal handling, scientific notation conversion, and constraint handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/numeric-formatting.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n20.0055 -> 20           (totalDigits: 3, fractionDigits: undefined)\\n0.0000001 -> 0        (totalDigits: undefined, fractionDigits: 6)\\n1.19E-17 -> 0.0000000000000000119 (totalDigits: undefined, fractionDigits: undefined)\n```\n\n----------------------------------------\n\nTITLE: Rendering Drop-Down Widget with Uniform Design in XML\nDESCRIPTION: XML structure for rendering a drop-down widget with uniform design in Mendix Studio Pro. It includes containers for label, value, validation message, and menu items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<label>Drop down enumeration</label>\n    <valueContainer>\n        <value>First</value>\n\t<icon/>\n    </valueContainer>\n\t<validationMessage>Validation feedback enumeration</validationMessage>\n</container>\n<menuWrapper>\n\t<selectedItemContainer>\n\t\t<selectedItem>First</selectedItem>    <= Selected\n\t</selectedItemContainer>\n    <itemContainer>\n        <item>Second</item>\n    </itemContainer>\n    <itemContainer>\n        <item>Third</item>\n    </itemContainer>\n</menuWrapper>\n```\n\n----------------------------------------\n\nTITLE: Calling Nanoflow from JavaScript Action\nDESCRIPTION: This code snippet shows how to call a nanoflow from within a JavaScript action. It demonstrates passing parameters as a JavaScript object and capturing the return value of the nanoflow after its execution. The nanoflowParameter is an async function which when invoked triggers the configured nanoflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst user = await nanoflowParameter({ Name: \"John Doe\" });\n```\n\n----------------------------------------\n\nTITLE: Using Extended CASE Expression in SQL\nDESCRIPTION: The extended CASE expression evaluates boolean_expressions and returns a corresponding result_expression for the first true condition. If no conditions evaluate to true, an else_result_expression is returned or null if omitted. This structure is useful when needing to implement logic based on dynamic boolean conditions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/oql-case-expression.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nCASE\nWHEN boolean_expression THEN result_expression [ ...n ]\nELSE else_result_expression\nEND\n```\n\n----------------------------------------\n\nTITLE: Generating SBOM using MxBuild\nDESCRIPTION: This batch command demonstrates how to generate a Software Bill of Materials (SBOM) using the MxBuild tool, specifying the Java home and executable paths along with the application file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/sbom-generation.md#2025-04-21_snippet_0\n\nLANGUAGE: bat\nCODE:\n```\nmxbuild --java-home=\"C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.16.101-hotspot\" --java-exe-path=\"C:\\Program Files\\Eclipse Adoptium\\jdk-11.0.16.101-hotspot\\bin\\java.exe\" --generate-sbom  \"C:\\Mendix\\MyApp\\MyApp.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Simple CASE Expression in SQL\nDESCRIPTION: This snippet demonstrates the structure and usage of a simple CASE expression in SQL to classify numbers as lucky or not. The CASE expression is designed to return 'True' when the Number is 7 and 'False' otherwise. It operates on the Sales.Order table and showcases a standard SELECT query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tLastName,\n\tNumber,\n\tCASE Number\n\t\tWHEN 7 THEN True\n\t\tELSE False\n\t\tEND AS IsLuckyNumber\nFROM Sales.Order\n```\n\n----------------------------------------\n\nTITLE: Markdown Info Alert for Academy Certificates\nDESCRIPTION: Alert block providing information about Mendix certification processing times\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/support/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nIf you have passed a Mendix certification, Mendix Academy will need 3-5 business days to prepare your certificate. You do not need to raise a support ticket as it will only be forwarded to the Academy team.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Modifying Default Value of dataSource Property in ListView and Grid Elements\nDESCRIPTION: The default value of the 'dataSource' property has been changed for both ListView and Grid elements in the Pages module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.5.md#2025-04-21_snippet_4\n\nLANGUAGE: markup\nCODE:\n```\n#### ListView, Grid (Elements)\n\n* We changed the default value of the `dataSource` property.\n```\n\n----------------------------------------\n\nTITLE: Azure OpenAI Chat Completions with Vision Limitations\nDESCRIPTION: This snippet addresses the limitations of using Azure OpenAI with JSON mode and image input. It specifies that using vision input with function calls in JSON mode will result in a 400 model error.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\nAzure OpenAI does not support the use of JSON mode and function calling in combination with image (vision) input and will return a `400 - model error`. Make sure the optional input parameters `ResponseFormat` and `FunctionCollection` are set to `empty` for all chat completion operations if you want to use vision with Azure OpenAI.\n```\n\n----------------------------------------\n\nTITLE: Finding Maximum Total Price for Specific Customer in Sales Order Using XPath\nDESCRIPTION: This code snippet showcases how to use the XPath max function to retrieve the highest total price of orders placed by a customer named 'Jansen'. The snippet filters the Sales.Order based on the customer name before calculating the maximum total price.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-max.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nmax(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Document Type Overview - UML Diagram References\nDESCRIPTION: Links between Studio Pro Guide documentation and Model SDK API documentation for core page components including Pages, Layouts, Snippets, Templates and Building Blocks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-refguide/understanding-the-metamodel/pages-metamodel.md#2025-04-21_snippet_0\n\nLANGUAGE: table\nCODE:\n```\n| Studio Pro Guide | Model SDK API docs |\n|---------------------------------------------|---------------------------------------------------------------------------------------------------|\n| [Pages overview](/refguide/pages/) | [pages namespace](https://apidocs.rnd.mendix.com/modelsdk/latest/modules/pages.html) |\n| [Page](/refguide/page/) | [Page](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.page.html) |\n```\n\n----------------------------------------\n\nTITLE: Complete Android Splash Screens Configuration Example in JSON\nDESCRIPTION: Example configuration for Android splash screens showing all required densities. This specifies splash screen images for different screen density buckets (hdpi, xhdpi, xxhdpi).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"images\": [\n        {\n            \"filename\": \"splash.png\",\n            \"directory\": \"drawable-hdpi\",\n            \"title\": \"drawable-hdpi-splash.png\"\n        },\n        {\n            \"filename\": \"splash.png\",\n            \"directory\": \"drawable-xhdpi\",\n            \"title\": \"drawable-xhdpi-splash.png\"\n        },\n        {\n            \"filename\": \"splash.png\",\n            \"directory\": \"drawable-xxhdpi\",\n            \"title\": \"drawable-xxhdpi-splash.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Association Property in XML for Mendix Pluggable Widget\nDESCRIPTION: This XML snippet defines an association property for a Mendix pluggable widget. It specifies the property key, type, selectableObjects, caption, description, and allowed association types (Reference and ReferenceSet).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_16\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"ref\" type=\"association\" selectableObjects=\"objectsDatasource\">\n    <caption>Reference</caption>\n    <description>Reference</description>\n    <associationTypes>\n        <associationType name=\"Reference\"/>\n        <associationType name=\"ReferenceSet\"/>\n    </associationTypes>\n</property>\n\n<property key=\"objectsDatasource\" type=\"datasource\" isList=\"true\">\n    <caption>Selectable objects</caption>\n    <description/>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Creating User Task for Facilities Role in Office Scenario\nDESCRIPTION: This snippet outlines the creation of a user task specifically for the Facilities role to prepare the office desk for a new hire when appropriate. It includes naming and page creation steps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\n4. Open the **Toolbox**, drag a **User task** activity to the **false** path, and name it **Prepare_Desk**.\n5. Set the title to **Facilities: Prepare Desk**.\n6. Configure the task to be assigned to the Facilities role using XPath: `[System.UserRoles = '[%UserRole_Facilities%]']`.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating XML Structure for Data Encoding in Web Services\nDESCRIPTION: This XML snippet demonstrates the basic structure of XML data encoding, showing how objects and their attributes are represented. The example shows a 'person' object with name, age, and address properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<person>\n\t<name>John Smith</name>\n\t<age>23</age>\n\t<address>\n\t\t<street>Dopeylane 14</street>\n\t\t<city>Worchestire</city>\n\t</address>\n</person>\n```\n\n----------------------------------------\n\nTITLE: Modify JavaScript Objects using the Mendix Client API\nDESCRIPTION: This snippet shows how to modify objects' attributes using Mendix Client API. It features getters and setters and handles original and changed values, which assists in maintaining object state and revisions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nmxobj.get(\"Name\");               // \"Fred\"\nmxobj.set(\"Name\", \"Henry\");\nmxobj.get(\"Name\");               // \"Henry\"\nmxobj.getOriginalValue(\"Name\")   // \"Fred\"\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI 3.0 Operation Structure in JSON\nDESCRIPTION: This JSON structure outlines the properties of an Operation object in the OpenAPI 3.0 schema for a Mendix published REST service operation. It includes tags, summary, description, request body, parameters, responses, and deprecation status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/open-api.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"tags\": [\"<resource_name>\"],\n  \"summary\": \"<operation_summary>\",\n  \"description\": \"<operation_description>\",\n  \"requestBody\": {},\n  \"parameters\": [],\n  \"responses\": {},\n  \"deprecated\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Native List View Swipe Widget in Mendix (JavaScript)\nDESCRIPTION: JavaScript code for styling a List View Swipe widget that adds interactive swipe gestures and background buttons to list items in Mendix native mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_listviewswipe_ListViewSwipe = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  leftAction: {\n    // This has all ViewStyle properties.\n    panelSize: null, // The number of pixels and the combined size of the background buttons.\n    threshold: null, // The number of pixels to accept the swipe action.\n  },\n  rightAction: {\n    // This has all ViewStyle properties.\n    panelSize: null, // The number of pixels and the combined size of the background buttons.\n    threshold: null, // The number of pixels to accept the swipe action.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Appium Capabilities for Android Testing\nDESCRIPTION: JSON configuration for Appium Desktop to set up a testing session for a Mendix native Android app. Specifies device details, app package information, and uses the Espresso driver.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\"deviceName\": \"arbitrary name of your Android device\",\n\"avd\": \"snake-cased name of your Android emulator\",\n\"platformName\": \"Android\",\n\"udid\": \"udid of your Android device\",\n\"appPackage\": \"the package name of your app\",\n\"appActivity\": \"the main activity name of your app\",\n\"automationName\": \"Espresso\",\n\"app\": \"location of your .apk Android app file\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by FirstName Length in Java\nDESCRIPTION: This Java code snippet represents an XPath query that retrieves customer objects from the `Sales.Customer` entity where the length of the `FirstName` attribute is greater than or equal to 5.  It uses the `length()` function within the XPath expression to filter customers based on their first name length.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-length.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[length(FirstName) >= 5]\n\n```\n\n----------------------------------------\n\nTITLE: Workflow Domain Model Changes\nDESCRIPTION: Details the changes to the Workflow domain model in Studio Pro 10 due to the introduction of multi-user tasks, specifically the renaming of the `WorkflowUserTask_Assignee` association to `WorkflowUserTask_Assignees` and its conversion to a reference set. It also includes instructions for updating the Workflow Commons module and migrating existing data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/installation/upgrading-from-9-to-10.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Styling Pages and Layouts in Mendix Native Mobile\nDESCRIPTION: Defines styles for pages and layouts, including status bar, header, and container properties. It allows customization of the overall page structure and appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nexport const Page = {\n  statusBar: {\n    barStyle: null,\n    backgroundColor: null,\n  },\n  header: {\n    container: {\n      // This has all ViewStyle properties.\n    },\n    title: {\n      // This has all TextStyle properties.\n    },\n    backButtonText: {\n      // This has all TextStyle properties.\n    },\n    backButtonIcon: {\n      // This has all ImageStyle properties.\n    }\n  },\n  container: {\n    // This has all ImageStyle properties.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Evaluating Employee Promotion to Senior Level in Mendix Expressions\nDESCRIPTION: An expression used in an Assert activity to check if an employee has been promoted to Senior level. It compares the employee's current level with the Senior enumeration value and provides a custom failure message showing the actual level if the assertion fails.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/testing-microflows-with-unit-testing.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Expressions\nCODE:\n```\n$NewEmployee/Level = MyFirstModule.Level.Senior\n```\n\nLANGUAGE: Mendix Expressions\nCODE:\n```\n'Expected employee level to be Senior. Actual value: ' + getCaption($NewEmployee/Level)\n```\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Get BooleanSlider Value in Markdown\nDESCRIPTION: Markdown table describing the input parameter for the Get BooleanSlider Value function. It specifies the name, datatype, requirement, and description of the Widget Name parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/booleanslider/rg-one-get-booleanslider-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\n```\n\n----------------------------------------\n\nTITLE: Using inverse comparison with relationships in Mendix XPath\nDESCRIPTION: This query finds customers who have placed at least one order with a TotalPrice less than or equal to 30,000. Unlike the not() version, it excludes customers with no orders and includes customers who have some orders above 30,000.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/TotalPrice <= 30000]\n```\n\n----------------------------------------\n\nTITLE: Defining Content Security Policy for Mendix Apps\nDESCRIPTION: This code snippet provides a starting point for declaring a content security policy that works with a basic Mendix app, specifying trusted sources for various resource types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/environments-details-new.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\ndefault-src 'self' ; script-src 'self' 'unsafe-inline' 'unsafe-eval' ; connect-src 'self' ; font-src 'self' https://fonts.gstatic.com data: ; img-src 'self' data: ; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com ; base-uri 'self' ; form-action 'self' ; object-src 'none' ; frame-ancestors 'self' ;\n```\n\n----------------------------------------\n\nTITLE: Rendering Drop-Down Widget with Non-Uniform Design in XML\nDESCRIPTION: XML structure for rendering a drop-down widget with non-uniform design in Mendix Studio Pro. It includes containers for label, value, validation message, and picker elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<label>Drop down enumeration</label>\n\t<value>Content invalid</value>\n\t<validationMessage>Validation feedback enumeration</validationMessage>\n</container>\n<picker>\n\t<pickerBackdropIOS/>\n\t<pickerTopIOS><button>close</button></pickerTopIOS>\n\t<pickerIOS>\n\t\t<pickerItemIOS>First</pickerItemIOS>\n\t\t<pickerItemIOS>Second</pickerItemIOS>\n\t\t<pickerItemIOS>Third</pickerItemIOS>\n\t</pickerIOS>\n</picker>\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js and Preparing Hybrid App Package\nDESCRIPTION: This snippet details the steps needed to install Node.js and prepare the hybrid app package for packaging push notifications. It describes the installation and execution of npm commands required for building the app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/setting-up-hybrid-push-notifications.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n1. Install the latest stable version of [Node.js](https://nodejs.org/en/download/).\n1. In the unzipped hybrid app package folder, execute `npm install`.\n1. In the same folder execute `npm run package`.\n```\n\n----------------------------------------\n\nTITLE: Horizontal Form Group Input Widget Structure in HTML\nDESCRIPTION: Shows the updated HTML structure for horizontal form group input widgets, with label and input control in separate columns, and an optional validation message.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-group mx-name-textBox4 [...]\" [...]>\n\t<label class=\"control-label col-sm-4\" for=\"123_abc\">\n\t\tCaption\n\t</label>\n\t<div class=\"col-sm-8\">\n\t\t<INPUT-CONTROL/>\n\t\t<!-- OR for readonly style text -->\n\t\t<div class=\"form-control-static\">value</div>\n\n\t\t<!-- optional: validation message -->\n\t\t<div class=\"alert alert-danger mx-validation-message\">checkboom</div>\n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Complete Manifest JSON with Dockable Pane Configuration\nDESCRIPTION: Complete manifest.json file specifying all entrypoints for the extension, including the main extension logic and UI components. The highlighted lines show the configuration for the dockable pane UI endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  \"mendixComponent\": {\n    \"entryPoints\": {\n      \"main\": \"main.js\",\n      \"ui\": {\n        \"tab\": \"tab.js\",\n        \"dockablepane\": \"dockablepane.js\"\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Click Widget Action in Markdown\nDESCRIPTION: This code snippet defines a markdown table that lists the input parameters for the Click Widget action. It includes the parameter name, datatype, whether it's required, and a description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-click-widget.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget you want to click/doubleclick\nDoubleclick | Boolean |no | Perform a doubleclick\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Abort on Validation Errors - Configuration\nDESCRIPTION: This snippet describes the configuration options for the 'Abort on Validation Errors' feature in Mendix. It lists the possible values and their implications for microflow execution based on validation errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Value | Description |\n| --- | --- |\n| Yes *(default)*| This will prevent the microflow from executing if there are any validation errors on the page. |\n| Only for this widget | This will prevent the microflow from executing if there are validation errors in the current widget. |\n| No | The microflow will always be executed. |\n```\n\n----------------------------------------\n\nTITLE: Validating Input Parameter in JavaScript Action\nDESCRIPTION: This code snippet checks if the input `query` parameter is provided to the JavaScript action. If the `query` is empty or null, it returns an empty array, indicating no search will be performed. This avoids unnecessary API calls when no query is specified.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction SearchGitHubUser(query) {\n    // BEGIN USER CODE\n    if (!query) {\n        return [];\n    }\n    return Promise.reject(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic Attribute Setting in Mendix Object\nDESCRIPTION: JavaScript code that dynamically sets attributes on a Mendix object by iterating through attributes and setting values from a user object. Includes error handling for object creation failures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-github.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Dynamically set attributes\nmxObject.getAttributes()\n    .forEach(function(attributeName) {\n        const attributeValue = user[attributeName];\n        if (attributeValue) {\n            mxObject.set(attributeName, attributeValue);\n        }\n    });\nresolve(mxObject);\n},\nerror: function(error) {\n    reject(\"Could not create object:\" + error.message);\n}\n});\n});\n}\n// END USER CODE\n```\n\n----------------------------------------\n\nTITLE: Setting Breakpoint Condition with Java Expression\nDESCRIPTION: This snippet shows how to set a breakpoint condition in Mendix Studio Pro using a Java expression.  The expression checks if the current user's name matches the specified username, ensuring the breakpoint only triggers for that user.  Replace 'YourUserName' with the actual username.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-microflows/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"$currentUser/name = 'YourUserName'\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading Private Mendix Platform via CLI\nDESCRIPTION: This command upgrades an existing installation of the Private Mendix Platform within a specified namespace. The `-n` parameter indicates the namespace where the platform is installed, ensuring the upgrade process targets the correct environment. Mendix Operator version 2.12 or newer is required.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n\n./installer platform -n=<namespace name>\n\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Java Dependencies in Mendix\nDESCRIPTION: The 'mx sync-java-dependencies' command is used to synchronize Java dependencies in the project modules, adding the related *.jar* files to the 'vendorlib' directory at the project root. The command requires a valid *.mpr* file as input. Dependencies: An active Mendix project and corresponding CLI installation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n`mx sync-java-dependencies INPUT`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx sync-java-dependencies C:\\Mendix\\App1\\App1.mpr`\n```\n\n----------------------------------------\n\nTITLE: Using Subquery with EXISTS in HAVING Clause in SQL\nDESCRIPTION: Shows how to use a subquery with the EXISTS operator in the HAVING clause. This example groups locations by city and finds cities that have at least one Rekall brand location.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_61\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(*) AS LocationCount, City AS City\nFROM Sales.Location AS Location\nGROUP BY City\nHAVING\n\tEXISTS (\n\t\tSELECT *\n\t\tFROM Sales.Location AS SubLocation\n\t\tWHERE\n\t\t\tLocation/City = SubLocation/City\n\t\t\tAND SubLocation/Brand = 'Rekall'\n\t)\n```\n\n----------------------------------------\n\nTITLE: Defining Path Parameters in Mendix REST Operation Path\nDESCRIPTION: Demonstrates how to define path parameters in the operation path of a Mendix published REST operation. Path parameters are specified between curly braces and can be used to capture parts of the URL as inputs to microflows or import mappings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-operation.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nYou can use [path parameters](/refguide/published-rest-path-parameters/) to capture part of the location as a microflow parameter or as a parameter to the import mapping. Specify path parameters in the operation path between `{` and `}`. The value that is in the URL for the path parameter will be passed to the microflow or the import mapping.\n```\n\n----------------------------------------\n\nTITLE: Configuring Capabilities for iOS Appium Testing\nDESCRIPTION: This JSON snippet specifies the desired capabilities required to set up an Appium session for testing a Mendix native iOS app. The configuration includes automation, device, platform details, and app location.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n    \"automationName\": \"XCUITest\",\n    \"deviceName\": \"desired device here, for instance 'iPhone 11'\",\n    \"platformName\": \"iOS\",\n    \"platformVersion\": \"desired platform version, for instance '14.3'\",\n    \"app\": \"location of your .app iOS app file\"\n}\n```\n\n----------------------------------------\n\nTITLE: Accessibility Helper HTML Attributes\nDESCRIPTION: List of HTML attribute names that are not allowed in the Accessibility Helper widget due to conflicts with Mendix core functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/accessibility-helper.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nclass, style, widgetid, data-mendix-id\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for 'Find Element by ID' Action in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Find Element by ID' action using a markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-find/rg-one-find-element-by-id.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nID| String | yes |  The ID of the element you want to get  \nSearch Context | WebElement | no | Limit the search to the given WebElement\nOccurrence | Integer | no | Index of the result-list value you want to get (defaults to the first element)\n```\n\n----------------------------------------\n\nTITLE: Passing Properties to TextInput Component in TypeScript\nDESCRIPTION: This snippet shows how to pass properties from the runtime to the TextInput component in the TextBox.tsx file. It includes style, class, and tabIndex properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass TextBox extends Component<TextBoxContainerProps> {\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        return <TextInput\n            value={value}\n            style={this.props.style}\n            className={this.props.class}\n            tabIndex={this.props.tabIndex}\n        />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring PostgreSQL Service for Mendix Application Deployment\nDESCRIPTION: This YAML snippet illustrates how to configure a PostgreSQL service in a Docker Compose file for use with a Mendix application. It specifies the database name, user credentials, and the ports for service access. Each app should have a unique database name to avoid conflicts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/services/business-events.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  postgres:\n    image: postgres:latest\n    environment:\n      POSTGRES_DB: cspdb-dev\n      POSTGRES_USER: mendix\n      POSTGRES_PASSWORD: mendix\n      PGPASSWORD: mendix\n    ports:\n      - \"25432:5432\"\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Set Checkbox Set Selector Value Action\nDESCRIPTION: This markdown table defines the input parameters required for the 'Set Checkbox Set Selector Value' action in Mendix ATS. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/set-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String | Yes | The caption of the desired checkbox column.\nValue | String | Yes | The cell value of the checkbox row.\nChecked | Boolean | Yes | The value for the checkbox you want to set (true or false).\n```\n\n----------------------------------------\n\nTITLE: Implementing Validation Feedback in TextBox Component\nDESCRIPTION: Updated render function for the TextBox component that displays validation feedback using the Alert component. It accesses validation messages from the Mendix attribute property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_4\n\nLANGUAGE: TSX\nCODE:\n```\nrender(): ReactNode {\n    const value = this.props.textAttribute.value || \"\";\n    const validationFeedback = this.props.textAttribute.validation;\n    return <Fragment>\n        <TextInput\n            value={value}\n            tabIndex={this.props.tabIndex}\n            onUpdate={this.onUpdateHandle}\n            disabled={this.props.textAttribute.readOnly}\n        />\n        <Alert>{validationFeedback}</Alert>\n    </Fragment>;\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting Colored Icon in Markdown\nDESCRIPTION: This snippet illustrates how to insert an icon with a specified color attribute in Markdown documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/static/mx-icons/_readme.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% icon name=\"alert-circle\" color=\"red\" %}}\n```\n\n----------------------------------------\n\nTITLE: Setting Response Format for OpenAI Request in Mendix\nDESCRIPTION: This microflow alters the `ResponseFormat` of the `OpenAIRequest_Extension` object created for requests. By default, OpenAI outputs in `Text` format, but this operation enables JSON mode by inputting `JSONObject` as a value, facilitating structured responses from the API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\nset response format\n```\n\n----------------------------------------\n\nTITLE: Downloading App Logs Example Output in JSON\nDESCRIPTION: Example response output for downloading app logs from a Mendix environment. The response includes a signed URL for accessing the requested log files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_36\n\nLANGUAGE: text\nCODE:\n```\n{\n    \"Environment\": \"38471410-861f-47e5-8efc-2f4b16f04005\",\n    \"Date\": 1536451200000,\n    \"DownloadUrl\": \"https://logsapi-prod-2-eu-central-1.mendix.com/v1/logs/38471410-861f-47e5-8efc-2f4b16f04005?endDate=2021-06-12&expire=20210616105139&startDate=2021-06-12&signature=0D5D1D81153BD12634AB03DD388259A416AE55479E8A8983CB9E3BD524183A041767262B9A9355BB48407ABFC98FD42094DDAB61005E558F0DA0441F4C0DFA3DAB38D03A9CF8F713C2187040669709848795BD5B32715F6917523BF08CA1DFD79479D5B2ADD8EDC116BAFB7AE952BB6FF0F68276AF349B9FA9B7D2CE9AE7BB6BA220BF50FD6ED93BFC1073BCF641FF0FCE48B75DFD74E2FC6C856495B1285348C1EA38EF9BB04E0BFEF60DFA32C1C856446B8ED2E9BF87C4EC1C7950CC97FDB38659603431E90FCCF6F1F977C3E668784AC03395E02088FFF15ABA056C03F0262D84D1ECC9D287B3B7020F7DA68AEC74D1360BF906101F2D727C19AD0D9C77EC\"\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Substring at Start in Mendix - Java\nDESCRIPTION: The `startsWith` function ascertains if a string begins with a specified substring, returning a Boolean. It requires two parameters: the original string and the intended prefix substring. Case-sensitivity is critical in applying this function effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nstartsWith('thisismystring', 'this')\n```\n\n----------------------------------------\n\nTITLE: Querying with hours-from-dateTime and Timezone in Java\nDESCRIPTION: This Java query retrieves all `Logging.Log` objects where the hours part of the `DateAttribute` is equal to 8 in the 'America/New_York' time zone. It showcases how to specify a time zone when using the `hours-from-dateTime()` function in a Java context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[hours-from-dateTime(DateAttribute, 'America/New_York') = 8]\n```\n\n----------------------------------------\n\nTITLE: Initializing Scatter Map Configuration in JSON\nDESCRIPTION: This snippet showcases the configuration of a scatter map in JSON format, including longitude and latitude coordinates as well as annotations. The expected output will be a scatter plot overlaid on a geographic map indicating the specified locations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"lon\": [ 12, 22 ],\n  \"lat\": [ 42, 39 ],\n  \"type\": \"scattergeo\",\n  \"text\": [ \"Rome\", \"Greece\" ],\n  \"mode\": \"marker\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Subtracting Weeks using Java\nDESCRIPTION: This function subtracts a specified number of weeks from a given date and time value. It uses either the server's calendar or the UTC calendar, depending on the function variant, and requires an integer for weeks to be subtracted. The output is the adjusted date and time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nsubtractWeeks(dateTime(2007, 1, 15, 1, 1, 1), 2)\n```\n\n----------------------------------------\n\nTITLE: Rendering Group Box Header Conditionally\nDESCRIPTION: Implements flexible header rendering logic based on collapsibility and header caption, supporting different platform touchable components\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_43\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = () => {\n    const { collapsible, headerCaption } = this.props;\n\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>{headerCaption}</Text>\n            {this.renderIcon()}\n        </View>\n    );\n\n    if (collapsible) {\n        const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n        return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n    } else if (headerCaption) {\n        return view;\n    }\n\n    return null;\n};\n```\n\n----------------------------------------\n\nTITLE: Managing Test Datasets with Excel Integration\nDESCRIPTION: Dataset management in ATS supports Excel-based imports and exports. The first row of Excel sheets defines field names, and subsequent rows contain data records. The system handles data type conversions between string and integer values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/rg-one-data-management.md#2025-04-21_snippet_1\n\nLANGUAGE: excel\nCODE:\n```\nField1,Field2,Field3\nValue1,Value2,Value3\nValue4,Value5,Value6\n```\n\n----------------------------------------\n\nTITLE: Running npm Install\nDESCRIPTION: This part of the documentation outlines the steps to solve the issue when Android Studio fails to load NPM modules. It instructs users to run 'npm i' to install the required node modules, which is essential for the project dependencies to work correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Disabling All Button Styles with Single Variable in SCSS\nDESCRIPTION: This snippet shows an alternative way to disable all button styles by setting only the `$exclude-button` variable to `true`.  Since Atlas automatically excludes helper styles when base styles are excluded, setting `$exclude-button-helpers` to `false` is redundant.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_13\n\nLANGUAGE: scss\nCODE:\n```\n\"$exclude-button: true;\n$exclude-button-helpers: false;\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Client Session Timeout Settings in Mendix\nDESCRIPTION: Custom settings for managing web client session behavior, including keep-alive functionality, session duration, and timeout intervals. These settings control how long user sessions remain active and how the system handles idle sessions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_0\n\nLANGUAGE: configuration\nCODE:\n```\nEnableKeepAlive = true\nSessionTimeout = 600000\nLongLivedSessionTimeout = 604800000\nClusterManagerActionInterval = 300000\nSessionKeepAliveUpdatesInterval = 100000\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Toggle Checkbox Set Selector Value in Markdown\nDESCRIPTION: This snippet defines the input parameters required for the 'Toggle Checkbox Set Selector Value' action. It specifies the parameter names, datatypes, whether they are required, and provides a description for each.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/toggle-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String | Yes | The caption of the desired checkbox column.\nValue | String | Yes | The cell value of the checkbox row.\n```\n\n----------------------------------------\n\nTITLE: Conditional Shipping Cost Assignment in Mendix\nDESCRIPTION: This snippet demonstrates assigning shipping costs based on package weight using an 'if' expression in Mendix. If the weight is less than one kilogram, no shipping costs are applied; otherwise, the cost is €5.00.  It exemplifies a simple conditional logic within a Mendix expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\"if $package/weight < 1.00 then 0.00 else 5.00\"\n```\n\n----------------------------------------\n\nTITLE: Querying with month-from-dateTime and Timezone in Java\nDESCRIPTION: This Java query retrieves all Logging.Log entries where the month extracted from the `DateAttribute` equals 12 (December) within the 'America/New_York' timezone. It demonstrates how to specify a timezone when using the `month-from-dateTime` function in a Java XPath query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[month-from-dateTime(DateAttribute, 'America/New_York') = 12]\n```\n\n----------------------------------------\n\nTITLE: Using Subquery in SELECT Clause in SQL\nDESCRIPTION: Demonstrates how to use a subquery as a column in the SELECT clause. The example counts matching customers based on last name. Note that subqueries in SELECT must return a single row and column to avoid runtime exceptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_52\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tReq/Number AS RequestNumber,\n\t(\n\t\tSELECT COUNT(*)\n\t\tFROM Sales.Customer AS Cust\n\t\tWHERE Cust/LastName = Req/CustomerName\n\t) AS CustomerCount\nFROM Sales.Request Req\n```\n\n----------------------------------------\n\nTITLE: React Developer Tools Installation via CLI\nDESCRIPTION: This snippet provides the command to install React Developer Tools via the command line interface, ensuring compatibility with the specific version of React Native used in Mendix applications. Dependencies include having Node and NPM installed on your machine.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/native-debug.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx react-devtools@^3\n```\n\n----------------------------------------\n\nTITLE: Building Android App with Cordova CLI on Windows\nDESCRIPTION: These commands set the Gradle binary path, set the Java JDK to 1.8, and run the build release command to generate a signed APK on Windows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/hybrid-mobile/build-hybrid-apps/build-hybrid-locally.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nset PATH=%PATH%;C:\\path-to-gradle-distribution\n\nset JAVA_HOME=C:\\path-to-jdk-1.8-directory\n\nnpm run build -- android --release -- --keystore=<keystore-path> --storePassword=<keystore-password> --alias=<keystore-alias> --password=<certificate-password>\n```\n\n----------------------------------------\n\nTITLE: Downloading GoogleService-Info.plist for iOS\nDESCRIPTION: This step describes how to download the *GoogleService-Info.plist* file for your iOS application from the Firebase project settings. This file contains configuration data needed by the iOS app to connect to Firebase services, including FCM.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nclick the iOS application and click *GoogleService-Info.plist*.\n```\n\n----------------------------------------\n\nTITLE: Querying Week Number from DateTime in Java\nDESCRIPTION: This snippet demonstrates how to use the 'week-from-dateTime()' function within a query to retrieve logs for a specific week of the year. The week number returned is based on the DateAttribute provided. This function may yield different results depending on the database in use.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[week-from-dateTime(DateAttribute) = 2]\n```\n\n----------------------------------------\n\nTITLE: Example Configuration for Java Instrumentation Agent\nDESCRIPTION: This snippet shows a practical example of the JSON configuration for the Mendix instrumentation agent, aimed at sending logs for various types of request handlers and specific microflows and activities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"requestHandlers\": [\n    {\n      \"name\": \"*\"\n    }\n  ],\n  \"microflows\": [\n    {\n      \"name\": \"Administration.After_Startup\"\n    }\n  ],\n  \"activities\": [\n    {\n      \"name\": \"CreateObject\"\n    },\n    {\n      \"name\": \"DeleteObject\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Widget Property Definition in XML\nDESCRIPTION: This XML snippet defines a widget property named 'cardName' of type 'textTemplate'. It includes a caption ('Card name') and a description ('Name of the card') to provide context to the modeling developer within Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n    <property key=\"cardName\" type=\"textTemplate\">\n        <caption>Card name</caption>\n        <description>Name of the card</description>\n    </property>\n\n```\n\n----------------------------------------\n\nTITLE: XPath Inverse Comparison in Studio Pro\nDESCRIPTION: This query retrieves customers whose names are not equal to 'Jansen' using the `!=` operator. It serves as a comparison to the `not()` function, demonstrating an alternative way to achieve the same result in this specific case within Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [Name != 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Downloading google-services.json for Android\nDESCRIPTION: This step describes how to download the *google-services.json* file for your Android application from the Firebase project settings. This file contains configuration data needed by the Android app to connect to Firebase services, including FCM.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nSelect the Android application and click *google-services.json*.\n```\n\n----------------------------------------\n\nTITLE: Displaying User Icon in Mendix Workflow\nDESCRIPTION: This XML snippet embeds an image of the user icon used for switching between user roles in Mendix workflows. It includes attributes for the image source, alternative text, width, and CSS class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/user-icon.png\" alt=\"User Icon\" width=\"500\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Extracting GroupBox Styles to a Separate File\nDESCRIPTION: This snippet details the steps to separate the custom styles for the GroupBox widget into its own file, improving code readability and maintainability. It exports the styles to a new module so they can be imported conveniently.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\nexport * from \"./group-box\";\n```\n\n----------------------------------------\n\nTITLE: Math LaTeX Formula (LaTeX)\nDESCRIPTION: This snippet shows how to include LaTeX mathematical formulas in chart titles, axes, and series.  The provided formula is a square root of a term. For LaTex to render correctly, the MathJax library must be included in the index.html file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_11\n\nLANGUAGE: latex\nCODE:\n```\n$\\sqrt{(n_\\text{c}(t|{T_\\text{early}}))}$\n```\n\n----------------------------------------\n\nTITLE: Throwing Not Implemented Exception in Java Action\nDESCRIPTION: This Java snippet is a placeholder within a generated Java action. It throws a MendixRuntimeException indicating that the Java action is yet to be implemented. This block is meant to be replaced with actual user code.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/extending-your-application-with-custom-java.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\n    @java.lang.Override\n    public java.lang.String executeAction() throws Exception\n    {\n        // BEGIN USER CODE\n        throw new com.mendix.systemwideinterfaces.MendixRuntimeException(\"Java action was not implemented\");\n        // END USER CODE\n    }\n\n```\n\n----------------------------------------\n\nTITLE: Post-processing Java Action for Random Forest ML Model\nDESCRIPTION: A Java Action that converts numerical output labels to corresponding flower class names for the Iris dataset\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/machine-learning-kit/using-ml-kit/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@java.lang.Override\n    public java.lang.String executeAction() throws Exception\n    {\n    this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.ML_Output_Entity_Iris_RF_ML_Model.initialize(getContext(), __Parameter);\n    \n      // BEGIN USER CODE\n      if (Parameter.getOutput_label() == 0) {\n        return \"Setosa\";\n      } else if (Parameter.getOutput_label() == 1) {\n        return \"Versicolour\";\n      } else\n        return \"Virginica\";\n      // END USER CODE\n    }\n```\n\n----------------------------------------\n\nTITLE: Database Source Configuration Properties\nDESCRIPTION: Shows the configuration options for database source in Mendix, including entity paths, search bar settings, and constraint definitions. Code demonstrates how to set up constraints with attribute, operator, and value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-sources/database-source.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nEntity (Path): [selected entity]\nShow Search Bar: Never | With button (initially open) | With button (initially closed) | Always\nWait for Search: Yes | No\nConstraints:\n  - Attribute: [entity attribute]\n  - Operator: [comparison operator]\n  - Value: [constraint value]\n```\n\n----------------------------------------\n\nTITLE: Configuring Generate Document Activity Properties in Mendix 9 Microflows\nDESCRIPTION: This code snippet shows the structure of the Generate Document activity properties in a Mendix 9 microflow. It includes sections for Action and Common properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/generate-document.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nThere are two sets of properties for this activity, those in the dialog box on the left, and those in the properties pane on the right:\n\n{{< figure src=\"/attachments/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/generate-document/generate-document-properties.png\" alt=\"Generate Document Properties\" class=\"no-border\" >}}\n\nThe **Generate document** properties pane consists of the following sections:\n\n* [Action](#action)\n* [Common](#common)\n```\n\n----------------------------------------\n\nTITLE: Configure Service Account Annotations for Azure Workload Identity (PMP)\nDESCRIPTION: This snippet demonstrates how to configure Azure Workload Identity for Private Mendix Platform (PMP) by annotating the PMP's Service Account. The annotation includes the client ID of the managed identity used by PMP.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nkind: ServiceAccount\nmetadata:\n    name: {pmp-serviceaccount-name}\n    namespace: {pmp-namespace} # The namespace where Private Mendix Platform is installed\n    annotations:\n        azure.workload.identity/client-id: {client-id-pmp}\n```\n\n----------------------------------------\n\nTITLE: Defining iOS Icons Interface in JSON\nDESCRIPTION: TypeScript interface definition for iOS icons configuration. This schema defines the structure required for the ios.json file including image size, idiom, scale, type, and filename properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\ninterface IOSIconsConfig {\n    \"images\": Array<{\n            \"size\": string\",\n            \"idiom\": \"ipad\" | \"iphone\" | \"ios-marketing\",\n            \"scale\": \"1x\" | \"2x\"| \"3x\",\n            \"type\": \"icon\",\n            \"filename\": string\n        }>,\n    \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Ratings Widget Styles in JavaScript\nDESCRIPTION: Defines styling properties for the Ratings widget including container and icon styles. Controls the appearance of a 0-5 star rating system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_rating_Rating = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  containerDisabled: {\n    // This has all ViewStyle properties.\n  },\n  icon: {\n    // This has all ViewStyle properties.\n    size: null, // The size of the icon.\n    color: null, // The color of the icon.\n    selectedColor: null, // The color of the icon when selected.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Metrics Agent Configuration - JSON\nDESCRIPTION: This JSON configuration specifies which request handlers, microflows, and activities should be reported by the Metrics Agent in a Mendix application. It demonstrates the expected format to define metrics collection parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"requestHandlers\": [\n    {\n      \"name\": \"*\" | \"<requesthandler>\"\n    }\n  ],\n  \"microflows\": [\n    {\n      \"name\": \"*\" | \"<microflow>\"\n    }\n  ],\n  \"activities\": [\n    {\n      \"name\": \"*\" | \"<activity>\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: HttpResponse Entity Structure Definition\nDESCRIPTION: Defines the attributes of the HttpResponse system entity for server responses. Includes HttpVersion, StatusCode, ReasonPhrase, and Content attributes with their types and default values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/http-request-and-response-entities.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nHttpResponse {\n  HttpVersion: String = \"HTTP/1.1\"  // Protocol version\n  StatusCode: Integer = 200       // HTTP status code\n  ReasonPhrase: String = \"OK\"     // Status code text representation\n  Content: String = \"\"           // Response body\n  + HttpHeaders association      // For response headers\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AWS Connector Enumerations in Mendix\nDESCRIPTION: Template for documenting enumerations used in an AWS connector, including enumeration names, captions, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/templates/marketplace-aws-connector-page-template.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Enumerations\n\nAn enumeration is a predefined list of values that can be used as an attribute type. For the {CONNECTOR NAME} connector, enumerations list values such as {AS REQUIRED}.\n\n#### `{ENUMERATION NAME}`\n\n| Name | Caption | Description |\n| --- | --- | --- |\n| {ENUMERATION ELEMENT NAME} | {ENUMERATION ELEMENT VALUE} | {ENUMERATION ELEMENT DESCRIPTION} |\n```\n\n----------------------------------------\n\nTITLE: Querying Logs Using hours-from-dateTime() Function in XPath\nDESCRIPTION: This example demonstrates how to use the hours-from-dateTime() function in an XPath query to filter logs where the hours part of a DateTime attribute equals a specific value (8). The function extracts just the hours portion from the full date/time value for comparison.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[hours-from-dateTime(DateAttribute) = 8]\n```\n\n----------------------------------------\n\nTITLE: Page and Layout References - UML Component Mapping\nDESCRIPTION: Documentation mapping between Studio Pro interface components and their corresponding Model SDK API classes for Pages, Layouts, Placeholders and related elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-refguide/understanding-the-metamodel/pages-metamodel.md#2025-04-21_snippet_1\n\nLANGUAGE: table\nCODE:\n```\n| Studio Pro Guide | Model SDK API docs |\n|--------------------------------------|--------------------------------------------------------------------------------------------------------------|\n| [Page](/refguide/page/) | [Page](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.Page.html) |\n| [Placeholder](/refguide/placeholder/) | [Placeholder](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.Placeholder.html) |\n```\n\n----------------------------------------\n\nTITLE: Example Request for Retrieving Environment Package - Mendix API - Bash\nDESCRIPTION: This example illustrates how to provide a GET request to obtain the package information of an environment, with the option to specify if a URL is desired in the output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/Acceptance/package?url=true\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n```\n\n----------------------------------------\n\nTITLE: Removing Filter Conditions in Mendix\nDESCRIPTION: Simple code example showing how to clear existing filtering conditions by passing undefined to the setFilter method.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nthis.props.myDataSource.setFilter(undefined);\n```\n\n----------------------------------------\n\nTITLE: User Role Configuration Table\nDESCRIPTION: Markdown table defining the mapping between user roles and SCIM module roles\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/scim.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **User Role** | **SCIM Module Role** |\n| --- | --- |\n| Administrator | SCIM.Administrator |\n```\n\n----------------------------------------\n\nTITLE: Starting Vault Interactive Shell\nDESCRIPTION: Command to start an interactive shell session on the vault-0 pod\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n <ns> exec -it vault-0 -- /bin/sh\n```\n\n----------------------------------------\n\nTITLE: OQL Code Block Example\nDESCRIPTION: This SQL snippet shows an example of OQL code to alter a database and create an assembly.  It is used to demonstrate how to include OQL code examples within the documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n\n```sql\nALTER DATABASE [YourDatabase] SET READ_COMMITTED_SNAPSHOT ON;\nCREATE ASSEMBLY [Mendix.SqlServerExtensions] FROM [a dll file] WITH PERMISSION_SET = SAFE;\n```\n```\n\n----------------------------------------\n\nTITLE: Including Validation Section for Radio Buttons\nDESCRIPTION: This snippet includes validation properties for the radio buttons widget, ensuring data input correctness.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_6\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/widget-validation-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Migration Steps for Data Grid 2 to Data Widgets in Mendix\nDESCRIPTION: Step-by-step instructions for migrating from the Data Grid 2 module to the new Data Widgets module. Users need to rename the current module and then replace it via the Marketplace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/data-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Rename the current **DataGrid** module (under **Marketplace** modules) to *DataWidgets* in Studio Pro.\n2. Open the Marketplace and search for **Data Widgets**.\n3. Download and replace the current (renamed) DataWidgets module.\n```\n\n----------------------------------------\n\nTITLE: Container Widget References - UML Component Documentation\nDESCRIPTION: Documentation mapping between Studio Pro container widgets and their Model SDK API implementations covering DivContainer, GroupBox, LayoutGrid and other container types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-refguide/understanding-the-metamodel/pages-metamodel.md#2025-04-21_snippet_3\n\nLANGUAGE: table\nCODE:\n```\n| Studio Pro Guide | Model SDK API docs |\n|-------------------------------------------------|------------------------------------------------------------------------------------------------------------------|\n| [Container](/refguide/container/) | [DivContainer](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.DivContainer.html) |\n| [Group Box](/refguide/group-box/) | [GroupBox](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.GroupBox.html) |\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Constraints in Studio Pro\nDESCRIPTION: In Mendix Studio Pro, you can combine multiple constraints when retrieving data, enabling complex queries that filter based on several conditions. This example shows how to retrieve customers named 'Jansen' living in 'Rotterdam'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n[Name = 'Jansen' and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Setting Up the AR Business Card\nDESCRIPTION: This section provides the initial setup for creating an augmented reality business card, including widget installations and configuration required for the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-business-card.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Install Studio Pro and the latest Make It Native Apps with AR capabilities.\n* Download the AR widgets (version 2 or higher) from the [Mendix Marketplace](https://marketplace.mendix.com/link/component/117209).\n* Create a new empty page with **Container (AR)** and **ImageTracker (AR)** widgets.\n* Add your business card png as the **Image** to the **ImageTracker (AR)**.\n* Obtain 3D objects to add to your AR business card (this document uses Twitter and LinkedIn logos).\n* Have a PNG of your business card.\n```\n\n----------------------------------------\n\nTITLE: Using And Logic Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the and helper to combine multiple conditions with logical AND. All combined conditions must be true for an item to be included in the filtered results. Takes two or more condition arguments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_39\n\nLANGUAGE: typescript\nCODE:\n```\nconst filterCondition = and(\n    startsWith(attribute(this.props.myAttributeA.id), literal(\"Hi\")), // myAttributeA starts with string \"Hi\"\n    equals(attribute(this.props.myAttributeB.id), literal(5)), // myAttributeB equals 5\n    greaterThan(attribute(this.props.myAttributeC.id), literal(new Date())) // myAttributeC greaterThan current date and time\n);\n```\n\n----------------------------------------\n\nTITLE: Calculating Calendar Months Between Dates in Java\nDESCRIPTION: The `calendarMonthsBetween` function calculates the absolute difference between two date values in months, ignoring time. It needs two Date and Time objects as input and returns an Integer/Long output reflecting the month difference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\ncalendarMonthsBetween(dateTime(2007, 1, 1, 10, 1, 1), dateTime(2007, 8, 1, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Table for ATS Widget Interaction Tasks\nDESCRIPTION: This markdown snippet defines a table that maps common widget interaction tasks to their corresponding ATS actions. It includes tasks such as finding widgets, clicking widgets, setting values, and asserting information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-one/bp-one-finding-the-action-you-need.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nTask                             | Action |\n----------------------------------|:------:|\nFinding a widget                 | The [*Find/Assert Widget*](/appstore/partner-solutions/ats/rg-one-findassert-widget/) action. |\nClicking a widget                | The [*Click Widget*](/appstore/partner-solutions/ats/rg-one-click-widget/) action. |\nCover an input widget            | The [*Set Value*](/appstore/partner-solutions/ats/rg-one-set-value/) action. |\nRetrieving a value from a widget | The [*Get Value*](/appstore/partner-solutions/ats/rg-one-get-value/) action. |\nAsserting values/information     | The [*Assert Value*](/appstore/partner-solutions/ats/rg-one-assert-value/) action. |\nGenerating values/information    | Please read the section for more information.\n```\n\n----------------------------------------\n\nTITLE: Preparing Project with Native Builder CLI\nDESCRIPTION: This command prepares a Mendix project for native mobile app development using the Native Builder CLI. It configures the project path, Java home, MXBuild path, and authentication tokens for GitHub and App Center. It also sets the project name, app name, app identifier, and runtime URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"native-builder.exe prepare --java-home \\\"C:\\\\Program Files\\\\AdoptOpenJDK\\\\jdk-11.0.3.7-hotspot\\\" --mxbuild-path \\\"C:\\\\Program Files\\\\Mendix\\\\8.6.0.715\\\\modeler\\\\mxbuild.exe\\\" --project-path \\\"Y:\\\\MendixProjects\\\\NativeNFC\\\\NativeNFC.mpr\\\" --github-access-token \\\"a1f422...\\\" --appcenter-api-token \\\"a1b95a...\\\" --project-name \\\"Native NFC App\\\" --app-name \\\"Native NFC App\\\" --app-identifier \\\"com.mendix.howto.nativenfc\\\" --runtime-url \\\"https://nativenfc-sandbox.mxapps.io/\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Updating Render Method in GroupBox.tsx for Collapsible Functionality\nDESCRIPTION: This code modifies the render method of the GroupBox component to handle collapsible functionality. It processes collapsible props and passes them to the WrappedGroupBox component, including options for starting collapsed and custom icons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_46\n\nLANGUAGE: TypeScript\nCODE:\n```\nrender(): ReactNode {\n    const { collapsible, collapseIcon, expandIcon, content, headerCaption, style } = this.props;\n\n    const isCollapsible = collapsible !== \"no\";\n\n    const props: WrappedGroupBoxProps = {\n        collapsible: isCollapsible,\n        headerCaption,\n        collapseIcon: this.renderIcon(collapseIcon,             defaultCollapseIconGlyph),\n        expandIcon: this.renderIcon(expandIcon, defaultExpandIconGlyph),\n        style\n    };\n\n    if (collapsible) {\n        props.startCollapsed = collapsible === \"yesStartCollapsed\";\n    }\n\n    return <WrappedGroupBox {...props}>{content}</WrappedGroupBox>;\n}\n```\n\n----------------------------------------\n\nTITLE: Querying with Date Range in Studio Pro\nDESCRIPTION: This XPath query retrieves all customer objects where the 'DateRegistered' attribute is greater than or equal to the beginning of the current week. It helps in finding customers registered since the start of the current week.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_2\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [DateRegistered >= '[%BeginOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Fixing Espresso Lifecycle Error in Mendix Apps\nDESCRIPTION: JSON configuration to resolve the 'No static method lifecycleEventObserver' error when using Espresso with Mendix apps. Adds an additional Android test dependency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\"additionalAndroidTestDependencies\": [\"androidx.lifecycle:lifecycle-common:2.2.0\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Login Action Handler in Mendix Runtime\nDESCRIPTION: Java action that replaces the default LoginAction with a custom implementation. This code registers a listener that intercepts login attempts and redirects them to the custom handler.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/login-behavior.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic java.lang.Void executeAction() throws Exception\n{\nCore.addUserAction(CustomLoginAction.class);\n\nUserActionListener<LoginAction> loginActionListener = new UserActionListener<>(LoginAction.class) {\n    @Override\n    public boolean check(LoginAction loginAction) {\n    return true;\n    }\n};\n\nloginActionListener.addReplaceEvent(CustomLoginAction.class.getName());\nCore.getListenersRegistry().addListener(loginActionListener);\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Constraint\nDESCRIPTION: This Java code snippet demonstrates an XPath query used to retrieve customers named 'Jansen' from the 'Sales' module.  The query includes the entity to retrieve and a constraint to filter results based on the 'Name' attribute.  This type of query is used to retrieve specific objects based on certain criteria.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"//Sales.Customer[Name='Jansen']\"\n```\n\n----------------------------------------\n\nTITLE: Checking NFC Support in a Mendix App\nDESCRIPTION: This JavaScript snippet checks if the device supports NFC by utilizing the NfcManager module. It throws an error if the module is not available, ensuring that the action fails gracefully if NFC is not supported on the device.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nif (!NativeModules.NfcManager) {\n    throw new Error(\"The NfcManager module is not available in your app.\");\n}\nreturn NfcManager.isSupported();\n```\n\n----------------------------------------\n\nTITLE: Axes Configuration in JSON\nDESCRIPTION: Configures x and y axes properties including grid color, titles, line visibility, range modes, and axis-specific styling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"xaxis\": {\n    \"gridcolor\": \"#eaeaea\",\n    \"title\": \"X-axis\",\n    \"color\": \"#0000FF\",\n    \"showgrid\": false,\n    \"fixedrange\": true,\n    \"showline\": true,\n    \"side\": \"bottom\"\n  },\n  \"yaxis\": {\n    \"rangemode\": \"tozero\",\n    \"zeroline\": true,\n    \"zerolinecolor\": \"#eaeaea\",\n    \"gridcolor\": \"#eaeaea\",\n    \"color\": \"#0000FF\",\n    \"title\": \"Y-axis\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"fixedrange\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom CSS Class (with Transparent Background)\nDESCRIPTION: This code snippet showcases customizing the default button widget by applying a transparent background color to its container in native/main.js. It sets the backgroundColor property of the container style to \"transparent\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport const className = {\n    container: {\n        backgroundColor: \"transparent\"\n    },\n    icon: {\n    },\n    caption: {\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Design Properties in JSON for Mendix\nDESCRIPTION: This JSON configuration allows for the management of design properties in the theme settings, enabling a streamlined implementation of UI components based on the predetermined UI kit. It is crucial for allowing developers to avoid hardcoding styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/design-principles.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"buttonVariants\": [\n        \"default\",\n        \"secondary\"\n    ],\n    \"spacing\": {\n        \"small\": \"8px\",\n        \"medium\": \"16px\",\n        \"large\": \"32px\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying within Current Week in Studio Pro\nDESCRIPTION: This XPath query retrieves all customer objects where the 'DateRegistered' attribute falls within the current week (from the beginning to the end). This is used to find all customers registered during the current week.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_4\n\nLANGUAGE: StudioPro\nCODE:\n```\n    [DateRegistered >= '[%BeginOfCurrentWeek%]' and DateRegistered < '[%EndOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Creating Preview Functionality for TextBox Component - TypeScript\nDESCRIPTION: This code snippet introduces a preview functionality for the TextBox widget by rendering a preview version using the TextInput component while in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\nimport { createElement, ReactElement } from \"react\";\nimport { TextBoxPreviewProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n   \nexport function preview(props: TextBoxPreviewProps): ReactElement {\n   return <TextInput value={`[${props.textAttribute}]`} />;\n}\n   \nexport function getPreviewCss(): string {\n   return require(\"./ui/TextBox.css\");\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Chat Context Microflow Parameters\nDESCRIPTION: Configuration settings for the ACT_FullScreenChat_Open microflow to set up the chat interface with specific system prompts and provider settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/how-to/ground_your_llm_in_data.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\nAction microflow: MyFirstBot.ChatContext_ChatWithHistory_ActionMicroflow\nSystem prompt: You are a helpful assistant supporting the IT department with employee requests. Use the knowledge base and previous support tickets as a database to find a solution to the user's request without disclosing sensitive details or data from previous tickets.\nProvider name: My GenAI Provider Configuration\n```\n\n----------------------------------------\n\nTITLE: JavaScript Snippet with jQuery\nDESCRIPTION: This JavaScript snippet demonstrates how to use jQuery v3.3.1 to set the color of all paragraph tags on a page to red. It shows both the standard jQuery selector '$' and the fully qualified 'jQuery' selector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/html-javascript-snippet.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n//for example, this code snippet will set the color of all your paragraph tags on the page to red.\n$('p').css('color', 'red')\n// or\njQuery('p').css('color', 'red')\n```\n\n----------------------------------------\n\nTITLE: Using Subquery as a Value in WHERE Clause in SQL\nDESCRIPTION: Shows how to use a subquery as a value in the WHERE clause. The subquery must return exactly one column and at most one row. This example finds locations with maximum stock in each city.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_57\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, City\nFROM Sales.Location AS Location\nWHERE\n\tLocation.Stock = (\n\t\tSELECT MAX(Stock)\n\t\tFROM Sales.Location AS MaxStockLocation\n\t\tWHERE Location.City = MaxStockLocation.City\n\t)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Fonts for PDF Generation in XML\nDESCRIPTION: This snippet shows how to configure a custom font in the fop.xconf file for PDF generation in Mendix. The setup involves specifying the font's embed-url and defining a font-triplet for style and weight specifications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/document-templates/style.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<font kerning=\"yes\" embed-url=\"mycustomfont.ttf\">\n    <font-triplet name=\"myfont\" style=\"normal\" weight=\"normal\"/>\n</font>\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level for Mendix Operator Pods in YAML\nDESCRIPTION: Configures the log level for Mendix Operator pods using the LOG_LEVEL environment variable in the deployment YAML. Supports levels from L0 (Fatal) to L5 (Trace).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Deployment\napiVersion: apps/v1\nspec:\n  # ...\n  # Other configuration options values\n  # Optional: custom pod labels\n    spec:\n      containers:\n        - resources:\n          # ...\n          # Other configuration options values\n          name: mendix-operator\n          command:\n            - mendix-operator\n          env:\n            # ...\n            # Other configuration options values\n            - name: LOG_LEVEL\n              value: L1\n```\n\n----------------------------------------\n\nTITLE: Building Native Apps with MxBuild - Command Line\nDESCRIPTION: Run the MxBuild executable to deploy the Mendix app, specify Java home and executable paths, and target native packaging for the app. This command is essential when not using the Mendix Native Mobile Builder.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n<path-to-mxbuild.exe> --java-home=DIRECTORY -java-exe-path=FILENAME --target=deploy --native-packager <path-to-the-app-mpr>\n```\n\n----------------------------------------\n\nTITLE: Essential PostgreSQL Vector Database Operations\nDESCRIPTION: Core SQL operations needed for implementing a vector database with pgvector extension, including creating extensions, managing tables, handling embedding vectors, and performing similarity searches.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/concepts/rag-example-implementation.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\ncreate extension     -- Include vector extension\ncreate table        -- Create tables for embedding vectors\ninsert              -- Add new embedding vectors\nselect              -- Find top-k nearest neighbors\ndelete              -- Remove individual records\ndrop table          -- Remove tables\n```\n\n----------------------------------------\n\nTITLE: Using OR Logical Filter Helper in TypeScript\nDESCRIPTION: Demonstrates how to combine multiple conditions using the OR logical operator. At least one condition must be true for an item to be included in the filtered results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_37\n\nLANGUAGE: typescript\nCODE:\n```\nconst filterCondition = or(\n    endsWith(attribute(this.props.myAttributeA.id), literal(\"Z\")), // myAttributeA ends with string \"Z\"\n    graterThan(attribute(this.props.myAttributeB.id), literal(10)), // myAttributeB greater that 10\n    equals(attribute(this.props.myAttributeC.id), literal(true)) // myAttributeC equals True\n);\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Mendix Studio Pro 9 Release Notes\nDESCRIPTION: YAML front matter block defining the metadata and configuration for the Mendix Studio Pro version 9 release notes page. Includes title, URL, description, weights, and cascading properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Mendix Studio Pro Version 9 Release Notes\"\nlinktitle: \"9\"\nurl: /releasenotes/studio-pro/9/\ndescription: \"The release notes for version 9 of Mendix Studio Pro.\"\nweight: 10\nno_list: false\nsimple_list: true\ncascade:\n    - mendix_version: 9\n    - numberless_headings: true\n---\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Price of All Orders Using XPath\nDESCRIPTION: This snippet demonstrates the use of the sum() function to calculate the total price of all orders by specifying the path to the TotalPrice element in the Sales.Order structure. It serves to aggregate numeric values from XML data based on the specified query structure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-aggregate-functions/xpath-sum.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nsum(//Sales.Order/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Invalidating Android Studio Caches\nDESCRIPTION: This snippet describes the process for invalidating caches in Android Studio, which can resolve issues when project files are not loading correctly. It is vital for ensuring the IDE is working with the latest project state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nFile -> Invalidate Caches / Restart\nBuild -> Clean Project\n```\n\n----------------------------------------\n\nTITLE: Save Changes - Event Handling\nDESCRIPTION: This snippet outlines the 'Save Changes' event, detailing its properties such as 'Close page' and 'Auto-synchronize'. It explains how changes are committed and synchronized in offline profiles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* **Close page** – specifies whether the current page should be closed.\n* **Auto-synchronize** – specifies whether synchronization should happen when the save button is clicked for a Mendix application running in an offline profile.\n```\n\n----------------------------------------\n\nTITLE: Configuring Chart Data in Any Chart Widget\nDESCRIPTION: Demonstrates how to configure static chart data using a JSON array compatible with Plotly.js reference specifications. This snippet shows the structure for defining chart data sources and modes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-building-blocks.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"data\": [\n        {\n            \"type\": \"scatter\",\n            \"mode\": \"lines+markers\",\n            \"x\": [...],\n            \"y\": [...]\n        }\n    ],\n    \"layout\": {\n        \"title\": \"Sample Chart\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: SCIM Attribute Mapping Table\nDESCRIPTION: Markdown table showing the mapping between SCIM payload attributes and configured entity attributes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/scim.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| **SCIM payload** (IdP Attribute) | **Configured Entity Attribute** | **Typical value with Okta** (IdP Attribute) | **Typical value with EntraID** (IdP Attribute) |\n| --- | --- | --- | --- |\n| externalID | Name | 00ctc4pufr85d7 | ObjectID (configured, non-default) For example, `550e8400-e29b-41d4-a716-446655440000` |\n| familyName| lastname | Doe | Doe John |\n| givenName| firstname | John |  |\n| emails| Email | `john.doe@companyA.com` | `johndoe@companyA.com` |\n| userName| FullName | `johndoe@companyA.com` | `johndoe@companyA.com` |\n| active| Active | true | true |\n```\n\n----------------------------------------\n\nTITLE: SCSS Class Creation\nDESCRIPTION: Creates a new SCSS class `.company-header` within *company-header.scss* which sets the `font-size` property to the value of the `$company-header-text-size` variable. This allows for easy application of the custom font size to any element with the `.company-header` class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\n .company-header { font-size: $company-header-text-size; }\n```\n\n----------------------------------------\n\nTITLE: Example Android Icons Configuration\nDESCRIPTION: This code snippet presents an example of the JSON configuration for Android app icons. It demonstrates how to define icons for different density folders (mipmap-mdpi, mipmap-hdpi, etc.) with corresponding filenames and titles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_5\n\nLANGUAGE: JSON\nCODE:\n```\n```json\n{\n    \"images\": [\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-mdpi\",\n            \"title\": \"mipmap-mdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-hdpi\",\n            \"title\": \"mipmap-hdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-xhdpi\",\n            \"title\": \"mipmap-xhdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-xxhdpi\",\n            \"title\": \"mipmap-xxhdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher.png\",\n            \"directory\": \"mipmap-xxxhdpi\",\n            \"title\": \"mipmap-xxxhdpi-ic_launcher.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-mdpi\",\n            \"title\": \"mipmap-mdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-hdpi\",\n            \"title\": \"mipmap-hdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-xhdpi\",\n            \"title\": \"mipmap-xhdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-xxhdpi\",\n            \"title\": \"mipmap-xxhdpi-ic_launcher_round.png\"\n        },\n        {\n            \"filename\": \"ic_launcher_round.png\",\n            \"directory\": \"mipmap-xxxhdpi\",\n            \"title\": \"mipmap-xxxhdpi-ic_launcher_round.png\"\n        }\n    ],\n    \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Join Objects in List Java Action\nDESCRIPTION: Java implementation for joining two objects into a single list. This action takes two objects of the same entity type and returns a list containing both objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/howto-connector-kit.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic List<IMendixObject> executeAction() throws Exception {\n    // BEGIN USER CODE\n    List<IMendixObject> resultList = new ArrayList<IMendixObject>(2);\n    resultList.add(Object1);\n    resultList.add(Object2);\n    return resultList;\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Last Name in SQL\nDESCRIPTION: This SQL snippet retrieves all customer first names where the customer's last name is exactly 'Jansen'. The query filters data based on string equality, assuming the existence of a Sales.Customer table with FirstName and LastName fields.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-where-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nWHERE LastName = 'Jansen'\n```\n\n----------------------------------------\n\nTITLE: Defining an Attribute Property in XML\nDESCRIPTION: This XML snippet illustrates how an attribute property type allows widgets to interact directly with entity attributes. The snippet outlines how to configure the expected editable value based on the defined attribute types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myAttribute\" type=\"attribute\">\n\t<caption>My attribute</caption>\n\t<description>Interact directly with entity attributes</description>\n\t<attributeTypes>\n\t\t<attributeType name=\"String\" />\n\t\t<attributeType name=\"Boolean\" />\n\t</attributeTypes>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Cloning GitHub Repository Using Bash\nDESCRIPTION: The snippet demonstrates how to clone a specific GitHub repository for Make It Native using Bash commands. It prerequisites Git to be installed on the system. The repository will be cloned into the current directory, and the working directory is set to \\\"make-it-native\\\".\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/mendix/make-it-native.git\ncd make-it-native\n```\n\n----------------------------------------\n\nTITLE: Combining LIMIT and OFFSET for Pagination in OQL\nDESCRIPTION: Example demonstrating how to combine both LIMIT and OFFSET clauses to implement pagination, retrieving the 11th to 20th customers sorted by last name. This pattern is commonly used for displaying paginated results in applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nORDER BY LastName\nLIMIT 10 OFFSET 10\n```\n\n----------------------------------------\n\nTITLE: Alternative Configuration for Exclusion Variables - JavaScript\nDESCRIPTION: This snippet showcases an alternative configuration where only `excludeButtons` is set to `true`, achieving the same result of excluding all button styles, as helper styles are automatically excluded when the base styles are disabled.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nexport const excludeButtons = true;\nexport const excludeButtonsHelpers = false;\n```\n\n----------------------------------------\n\nTITLE: Adding OpenAI File to Collection in Mendix\nDESCRIPTION: This microflow adds a new `FileDocument` or URL to an existing `FileCollection`. Additionally, it supports optional input parameters like `Image Detail` or a description using `TextContent`, which help in organizing and documenting the file collection effectively.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nfiles: Add OpenAI File to Collection\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Click Widget Button Action in Markdown\nDESCRIPTION: This code snippet defines a markdown table specifying the input parameters for the Click Widget Button action. It includes the parameter name, datatype, whether it's required, and a description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-click-widget-button.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget which contains the button\nButton | Enumeration | yes | The type of button\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Rendering Collapsible Header in TypeScript\nDESCRIPTION: This TypeScript snippet renders the header of the Group Box, handling collapsible and non-collapsible cases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_47\n\nLANGUAGE: TypeScript\nCODE:\n```\nprivate renderHeader = () => {\n    const { collapsible, headerCaption } = this.props;\n\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>{headerCaption}</Text>\n            {this.renderIcon()}\n        </View>\n    );\n\n    if (collapsible) {\n        const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n        return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n    } else if (headerCaption) {\n        return view;\n    }\n\n    return null;\n};\n```\n\n----------------------------------------\n\nTITLE: Async/Await REST API Call\nDESCRIPTION: Demonstrates using async/await with the Fetch API to make a REST call and handle responses and errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nasync function GetUserNameSampleRest(userID) {\n    // BEGIN USER CODE\n    if (!userID) {\n        throw new Error(\"The UserID parameter is required\")\n    }\n    const url = \"https://jsonplaceholder.typicode.com/users/\" + userID;\n    try {\n        const response = await fetch(url); // Fetch returns a promise, gets the url and wait for result\n        const jsonData = await response.json(); // Transform to json\n        return jsonData.name; // Get the data\n    } catch (error) {\n        throw new Error(\"Failed to get user information\");\n    }\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Text in Structure Preview using TypeScript\nDESCRIPTION: This example shows how to display text in the structure preview. It uses the 'Text' type and demonstrates how to set the content using a widget property value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nexport const getPreview = (values: WidgetPreviewProps, _isDarkMode: boolean, _version: number[]) => (\n    {\n        type: \"Text\",\n        content: values.myTextProp, // set displayed text to the value of myTextProp\n    });\n```\n\n----------------------------------------\n\nTITLE: Installing Google Secret Manager Provider with Helm\nDESCRIPTION: This snippet illustrates how to install the Google Secret Manager Provider for the Secret Store CSI Driver using Helm. This command updates or installs the provider based on the specified chart path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_26\n\nLANGUAGE: shell\nCODE:\n```\nhelm upgrade --install secrets-store-csi-driver-provider-gcp charts/secrets-store-csi-driver-provider-gcp\n```\n\n----------------------------------------\n\nTITLE: Grouping by Multiple Attributes with GROUP BY Clause - OQL\nDESCRIPTION: This example demonstrates how to group query results by multiple attributes in the GROUP BY clause. It retrieves total stock per brand and city from the Sales.Location entity, showcasing how to aggregate data based on multiple grouping criteria.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_32\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, City, SUM(Stock) AS SumStock\nFROM Sales.Location\nGROUP BY Brand, City\n```\n\n----------------------------------------\n\nTITLE: Complete Enumeration Property Definition in XML for Mendix Pluggable Widgets\nDESCRIPTION: Complete example of defining an enumeration property with multiple values. Shows the property definition with caption, description, and three color options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myEnumeration\" type=\"enumeration\" defaultValue=\"red\">\n\t<caption>My enumeration</caption>\n\t<description>My enumeration setting</description>\n\t<enumerationValues>\n\t\t<enumerationValue key=\"red\">Red</enumerationValue>\n\t\t<enumerationValue key=\"green\">Green</enumerationValue>\n\t\t<enumerationValue key=\"blue\">Blue</enumerationValue>\n\t</enumerationValues>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Sign-On Microflow\nDESCRIPTION: This snippet explains how to add the RegisterSingleSignOn microflow to the application startup process. It emphasizes that this is pre-configured in the Insights Hub Starter Application and provides instructions for modifying existing applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RegisterSingleSignOn\": \"<Your microflow>\",\n  \"After startup\": \"<After startup microflow>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Subquery as a Value in HAVING Clause in SQL\nDESCRIPTION: Demonstrates how to use a subquery as a value in the HAVING clause. This example groups locations by city and filters groups where the total stock is less than or equal to the total number of locations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_60\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(*) AS LocationCount, SUM(Stock) as CityStock, City AS City\nFROM Sales.Location AS Location\nGROUP BY City\nHAVING\n\tSUM(Stock) <= (\n\t\tSELECT COUNT(*)\n\t\tFROM Sales.Location\n\t)\n```\n\n----------------------------------------\n\nTITLE: String Template Parameter in Java Actions\nDESCRIPTION: This snippet describes how the String Template parameter type in Mendix Java actions is represented in the generated Java code.  It highlights the use of `IStringTemplate` and how to define parameters within the template using braces and numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/resources/java-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\"The **String template** parameter type allows you to pass a string template into a Java action. In the generated Java action template code, this type is represented as a `IStringTemplate`.\n\nThe template can contain parameters that are written as a number between braces (for example, `{1}`). The first parameter has the number `1`, the second `2`, and so on.\"\n```\n\n----------------------------------------\n\nTITLE: Using Xpath.java for Object Handling in Java\nDESCRIPTION: This code snippet describes the usage of the Xpath.java class, which serves as a helper for Java actions related to object handling. The functionalities this class supports are crucial for manipulating objects effectively in the context of Mendix microflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/object-handling.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\"// Code sample for Xpath.java will be placed here if available, demonstrating its usage for object handling operations.\"\n```\n\n----------------------------------------\n\nTITLE: Installing npm and iOS dependencies\nDESCRIPTION: This command installs the required Node.js modules and iOS dependencies using npm and CocoaPods.  It first installs the npm packages and then navigates to the `ios` directory to execute `pod install`, which downloads and installs the necessary iOS dependencies for the project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/how-to-devapps.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n\"npm i && cd ios && pod install\"\n```\n\n----------------------------------------\n\nTITLE: Using false() Function in XPath Query for Mendix\nDESCRIPTION: This example demonstrates how to use the false() function in an XPath query to find customers who are not classified as gold customers. The query selects all Customer entities from the Sales module where the IsGoldCustomer attribute is false.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-false.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[IsGoldCustomer = false()]\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section for Static Image Widget\nDESCRIPTION: This snippet incorporates the design properties section for the Static Image widget, allowing users to customize visual attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/image.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Object Activities in Mendix\nDESCRIPTION: Defines various object manipulation activities in microflows and nanoflows, including casting, changing, committing, creating, deleting, retrieving, and rolling back objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Graphic | Name | Description |\n| --- | --- | --- |\n| Cast object | In combination with an object type decision allows you to use the specialized members of the object. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom HTTP Headers for REST Calls\nDESCRIPTION: Shows how to add custom HTTP headers to REST service calls using key-value pairs. Includes a warning about NGINX dropping headers with underscores.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nThese headers are added to the HTTP request header. Each custom header is a pair with a key and a value (a microflow expression).\n\n{{% alert color=\"warning\" %}}\nREST endpoints which are using NGINX as a webserver will ['silently drop'](https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#missing-disappearing-http-headers) HTTP headers which contain an underscore `_`.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders List by Minimum Total Price Using XPath in Mendix\nDESCRIPTION: This snippet shows the process of applying an XPath constraint to filter the Orders data grid, ensuring only orders with a total value of at least 50.00 are displayed. The code includes instructions for accessing the data grid and editing the XPath constraint accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_2\n\nLANGUAGE: XPath\nCODE:\n```\n[TotalPrice >= 50]\n```\n\n----------------------------------------\n\nTITLE: ActionValue Execute Method with Variables Example\nDESCRIPTION: Demonstrates how to use the execute method with action variables in a Mendix pluggable widget. The example shows passing coordinates and a label to a map widget's onClick action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MapWidgetProps {\n    onClick: ActionValue<{ lat: Option<Big>, long: Option<Big>, label: Option<string> }>\n}\n\nonClick.execute({\n    lat: new Big(51.907),\n    long: new Big(4.488),\n    label: undefined\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Microflow Parameters in C#\nDESCRIPTION: This snippet demonstrates how to use the GetParameters method to retrieve all input parameters of a microflow. It returns a list of IMicroflowParameterObject instances containing parameter information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflow-service.md#2025-04-21_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nIReadOnlyList<IMicroflowParameterObject> parameters = _microflowService.GetParameters(microflow);\n```\n\n----------------------------------------\n\nTITLE: Fixing CE1568 Menu Item Navigation Error\nDESCRIPTION: Example of fixing CE1568 error where a page expects a ProgramItem object to be passed. The solution involves changing the menu item's 'On click' property from 'Show a page' to 'Create object' and setting appropriate parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-navigation.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Input Parameters Table for Set Checkbox Set Selector Value Action\nDESCRIPTION: A markdown table describing the input parameters required for the 'Set Checkbox Set Selector Value' action. It includes the parameter names, data types, whether they are required, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/grid-selector/rg-one-set-grid-selector-checkbox-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | -------- | ---------------\nWidget Name | String | Yes | The name of the Grid Selector widget.\nColumn Caption | String | Yes | The column caption of the checkbox cell you want to get the value from.\nRow Caption | String | Yes | The row caption of the checkbox cell you want to get the value from.\nChecked | Boolean | Yes | The value for the checkbox you want to set (true or false).\n```\n\n----------------------------------------\n\nTITLE: Single Package Response JSON\nDESCRIPTION: Example JSON response showing the details of a single package including download URL if requested.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Name\" :  \"Main line-2.5.4.63.mda\" ,\n    \"Status\" :  \"Succeeded\" ,\n    \"Description\" :  \"Add scientific mode\" ,\n    \"Creator\" :  \"Richard Ford\" ,\n    \"CreationDate\" :  1404990271835 ,\n    \"Version\" :  \"2.5.4.63\" ,\n    \"PackageId\" :  \"b3d14e53-2654-4534-b374-9179a69ef3cf\" ,\n    \"Size\" :  15342295S,\n    \"Url\": {\n        \"Location\": \"https://url/to/download/the/package/file\",\n        \"TTL\": 900\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating renderHeader for Collapsible Functionality\nDESCRIPTION: This updated renderHeader method includes the collapse/expand functionality and updates the header text accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_28\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = () => {\n    const view = (\n        <View style={this.styles.header}>\n            <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n            <Text style={this.styles.headerContent}>{this.state.collapsed ? \"+\" : \"-\"}</Text>\n        </View>\n    );\n\n    const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n\n    return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n};\n```\n\n----------------------------------------\n\nTITLE: Loading OS Bar Scripts in Mendix App - JavaScript\nDESCRIPTION: This JavaScript snippet initializes the OS Bar functionality by configuring script loading order, handling session expiration, and managing errors. It requires the Mendix runtime and associated services to function correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\n\t\t// Insights Hub specific part-3: OS Bar related code\n        var loadMendix = function () {\n            // dojoConfig needs to be defined before loading mxui.js\n            dojoConfig = {\n                isDebug: false,\n                baseUrl: 'mxclientsystem/dojo/',\n                cacheBust: '{{cachebust}}',\n                rtlRedirect: 'index-rtl.html',\n            };\n            // make sure that the mxui.js is loaded after /rest/os-bar/v1/loader to prevent problems with the height calculation of some elements\n            (function (d2, script2) {\n                script2 = d2.createElement('script');\n                script2.src = 'mxclientsystem/mxui/mxui.js?{{cachebust}}';\n                script2.onload = function () {\n                    // Load localized texts for session expired popup and store them in the session context.\n                    // In case the session is expired we can not load the texts anymore.\n                    mx.addOnLoad(() => {\n                        mx.data.create({\n                            entity: \"SiemensInsightsHubWebContent.SessionExpired\",\n                            callback: function (obj) {\n                                const title = obj.getRawValue('Title');\n                                const message = obj.getRawValue('Message');\n                                const button = obj.getRawValue('Button');\n                                sessionStorage.setItem('sessionExpired', JSON.stringify({ title, message, button }));\n                            },\n                            error: function (e) {\n                                console.error(e);\n                            }\n                        });\n                    });\n                }\n                script2.async = true;\n                d2.getElementsByTagName('body')[0].appendChild(script2);\n            })(document);\n        };\n        var onError = function (d1) {\n            var body = d1.getElementsByTagName('body')[0];\n            var content = d1.getElementById('content');\n            var html =\n                '<osbar-root id=\"OSBarErrorText\" class=\"mdsp_osbf_outer\">' +\n                '<div class=\"mdsp_osbf_inner\">Insights Hub OSBar could not be loaded. Please check your ' +\n                '<a title=\"Proxy Settings\" class=\"mdsp_osbf_link\" target=\"_blank\" rel=\"noopener\" href=\"https://docs.mendix.com/partners/siemens/mindsphere-development-considerations#localtesting\"> proxy settings</a>' +\n                '<span> or the OSBarURL in the InsightsHubOSBarConnector</span>' +\n                '</div>' +\n                '</osbar-root>';\n\n            body.insertAdjacentHTML('afterbegin', html);\n            body.className = body.className + \" mdsp_osbf_body\";\n            content.className = content.className + \"_mdsp_osbf_content\";\n            loadMendix();\n        };\n\n        var initOsBar = function (url, d1, script1) {\n            script1 = d1.createElement('script');\n            script1.type = 'text/javascript';\n            script1.async = true;\n            script1.onload = function () {\n                _mdsp.init({\n                    appId: 'content',\n                    appInfoPath: '/rest/os-bar/v1/config',\n                    initialize: true,\n                });\n                loadMendix();\n            };\n            script1.onerror = () => onError(d1);\n            script1.src = url;\n            d1.getElementsByTagName('head')[0].appendChild(script1);\n        };\n\n        (async function () {\n            try {\n                const resp = await window.fetch('/rest/os-bar/v1/osbar.url');\n                const body = await resp.json();\n                if (body.osBarUrl) {\n                    initOsBar(body.osBarUrl, document);\n                }\n            } catch (error) {\n                onError(document);\n            }\n\n        })();\n        // Insights Hub specific part-3: ends\n\t</script>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Design Property in Mendix\nDESCRIPTION: Define a new design property for a button widget in the design-properties.json file. This JSON snippet shows how to add a toggleable 'Bordered' design property that can be easily applied to widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"Bordered\",\n    \"type\": \"Toggle\",\n    \"description\": \"Create a bordered button.\",\n    \"class\": \"btnBordered\"\n},\n```\n\n----------------------------------------\n\nTITLE: Subtracting Minutes using Java\nDESCRIPTION: This function subtracts a specified number of minutes from a given date and time value. It requires an initial date in the 'Date and time' format and an integer representing minutes to be subtracted. The result is a date and time adjusted by the subtracted minutes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nsubtractMinutes(dateTime(2007, 1, 1, 1, 1, 1), 30)\n```\n\n----------------------------------------\n\nTITLE: Table Usage in Markdown\nDESCRIPTION: This snippet demonstrates how to create and format tables in Markdown documents, including defining headers, rows, and various content types while maintaining proper structure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| Element | Displays |\n| --- | --- |\n| Annotation | A comment explaining an aspect of the domain model |\n| Entity Name | How the [entity](/refguide/entities/) will be referred to in the database |\n| Event Handler (or Handlers) | An indication that one or more [event handlers](/refguide/event-handlers/) have been set up for this entity |\n```\n\n----------------------------------------\n\nTITLE: RIGHT OUTER JOIN Syntax in OQL\nDESCRIPTION: This snippet explains the syntax for 'RIGHT OUTER JOIN' in OQL, returning all rows from the second entity and matching rows from the first one, with unmatched rows from the second entity filling with null values when needed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nRIGHT [ OUTER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: Defining an Expression Property in Mendix Pluggable Widgets\nDESCRIPTION: XML definition for a string expression property named 'progressBarColor' with a default value of 'red'. The property will be displayed in Studio Pro with a caption and description and will return a String type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"progressBarColor\" type=\"expression\" defaultValue=\"'red'\">\n\t<caption>Color</caption>\n\t<description>Progress bar CSS color</description>\n\t<returnType type=\"String\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Subtracting Seconds using Java\nDESCRIPTION: This function subtracts a specified number of seconds from a given date and time value. It requires an initial date in the 'Date and time' format and an integer representing seconds to be subtracted. The output is a date and time adjusted by the subtracted seconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nsubtractSeconds(dateTime(2007, 1, 1, 1, 1, 1), 30)\n```\n\n----------------------------------------\n\nTITLE: Database Connection Validation Settings\nDESCRIPTION: Settings for validating database connections to prevent issues with closed connections in certain deployments\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nConnectionPoolingTestOnBorrow\nConnectionPoolingTestOnCreate\nConnectionPoolingTestOnReturn\nConnectionPoolingTestWhileIdle\n```\n\n----------------------------------------\n\nTITLE: SOAP Header Authentication XML Example\nDESCRIPTION: This XML snippet demonstrates the structure of a SOAP header required for authentication in Mendix published web services. The header includes a username and password that must match a webservice user configured in the Mendix runtime environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-web-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<soap:Header>\n        <tns:authentication>\n            <username>john</username>\n            <password>john'ssecretpassword</password>\n        </tns:authentication>\n    </soap:Header>\n\n```\n\n----------------------------------------\n\nTITLE: Decimal Property Type Definition\nDESCRIPTION: Demonstrates how to define a decimal property that appears as a number input in Studio Pro. It requires a defaultValue attribute and is passed as a Big prop to the client component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myDecimal\" type=\"decimal\" defaultValue=\"50.4\">\n\t<caption>My decimal</caption>\n\t<description>My decimal setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Using XPath not() with value comparison across relationships in Mendix\nDESCRIPTION: This query finds customers who have not placed any orders with a TotalPrice exceeding 30,000, including customers with no orders. It demonstrates how not() works with both relationships and value comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order/TotalPrice > 30000)]\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Merge Driver Locally Per Repository\nDESCRIPTION: Git commands for configuring a custom merge driver locally for a specific repository. These commands set up the merge driver name and the path to the Mendix executable that will handle the merge operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\ngit config merge.custom.name \"custom merge driver for specific files\"\ngit config merge.custom.driver \"[MX.EXE_PATH] merge %O %A %B\"\n```\n\n----------------------------------------\n\nTITLE: Simplified Button Class with Unique Identifier\nDESCRIPTION: Refine the custom button class by removing unnecessary properties and using a descriptive, unique constant name. This snippet demonstrates best practices for creating clean, focused styling classes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport const btnBordered = {\n    container: {\n        backgroundColor: \"transparent\"\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Legend Position Configuration - Left (JSON)\nDESCRIPTION: This snippet configures the chart legend to be displayed on the left side.  It adjusts the x position and xanchor to place the legend appropriately. Adjustments to x may be needed based on series names or y-axis tick labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": true,\n  \"legend\": {\n    \"xanchor\": \"right\",\n    \"x\": -0.1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring the Square Widget\nDESCRIPTION: Instructions for setting up the Square widget to display the virtual business card image on top of the physical card with the correct configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-business-card.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. Double-click the **Square (AR)** widget.\n1. Select the **Material** tab.\n1. Select **Material type** > **Texture**.\n1. Select the image of your business card for the **Texture**. This should be the same image as you selected for your **Image Tracker (AR)**.\n1. Go back to the **General** tab and fill out the size of your business card. The important sizes are X for the width of your business card and Y for the height.\n1. Set **Rotation > X** to *-90* to ensure the virtual image is rotated correctly.\n```\n\n----------------------------------------\n\nTITLE: Configuring RegisterSingleSignOn Microflow as After Startup Action in Mendix\nDESCRIPTION: This demonstrates how to configure the RegisterSingleSignOn microflow as an after startup action in the Mendix App Settings dialog, which is necessary for enabling Insights Hub Single Sign-On functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n// Configure in App Settings dialog:\n// 1. Access App > Settings from App Explorer\n// 2. Go to the Runtime tab\n// 3. Set \"After startup\" microflow to \"RegisterSingleSignOn\"\n//    (or add it as a sub-microflow to existing after startup microflow)\n```\n\n----------------------------------------\n\nTITLE: Git File Comparison Setup for VS Code\nDESCRIPTION: This code snippet shows how to configure file comparison in the commit dialog box using Visual Studio Code as the external diff tool. It defines the executable path and arguments passed to VS Code for comparing files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/menus/edit-menu/preferences-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n\"{path to VS Code}/Code.exe --wait --diff \\\"{0}\\\" \\\"{1}\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving PostgreSQL Environment Details\nDESCRIPTION: This command fetches the environmental settings of a specified application to identify PostgreSQL service instance details. It is essential for extracting necessary configuration data for migration. Inputs include the application name and outputs relevant PostgreSQL credentials.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncf env {application-name}\n```\n\n----------------------------------------\n\nTITLE: Identity Provider Comparison Table\nDESCRIPTION: Markdown table comparing user identification methods across different Identity Providers and SSO modules\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/scim.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| **IdP** | **SSO Module** | **Remark** |\n| --- | --- | --- |\n| Okta | OIDC SSO | SCIM.externalID and OIDC.sub contain the same value. |\n| EntraID | OIDC SSO | SCIM.externalID and OIDC.oid contain the same value. |\n| Okta | SAML | SCIM.externalID and SAML.Use Name ID contain the same value. <br> Note: Configure Application username to Custom with user.getInternalProperty(\"id\"). |\n| EntraID | SAML | SCIM.externalID and SAML.Use Name ID contain the same value. <br> Note: Map Unique User Identifier as user.objectid in SSO Configuration. |\n```\n\n----------------------------------------\n\nTITLE: HTML Structure Example of Button in List View Item\nDESCRIPTION: Example HTML structure showing a button element as a child of a list view item with mx-name attributes and text box content used for identification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/create-search-context-actions/cab-11-find-itemrow.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-listview-item\" mx-name=\"index-0\">\n    <input class=\"mx-textbox\" mx-name=\"textBox5\">\n    <button class=\"mx-button\" mx-name=\"buttonName\"></button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: DB2 SQL Error for DISTINCT on Large String Columns\nDESCRIPTION: Shows the exception thrown when attempting to use DISTINCT on string columns larger than 8168 characters, which DB2 doesn't support due to CLOB data type limitations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/db2.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nDB2 SQL Error: SQLCODE=-727, SQLSTATE=56098, SQLERRMC=2;-134;42907\n```\n\n----------------------------------------\n\nTITLE: Basic OQL SELECT Statement for Customer Lastname\nDESCRIPTION: Retrieves the family names of all customers using a simple SELECT statement. This demonstrates the basic OQL syntax for querying a single attribute from an entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Validating User Input in Nanoflow - Mendix JavaScript\nDESCRIPTION: This section configures validation for user input fields in the nanoflow to ensure that title and description are provided. It uses the Required validation type to enforce user input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/native-mobile-app.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Configure validation for Title field\nsetValidation(\"Title\", \"Required\", \"Please provide a title for this picture\");\n\n// Configure validation for Description field\nsetValidation(\"Description\", \"Required\", \"Please provide a description for this picture\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Pie Chart Configuration in JSON\nDESCRIPTION: This snippet details how to configure a pie chart using JSON format, defining values and labels for each segment. The output will be a pie chart representing the distribution of values corresponding to the labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"values\": [ 10, 20, 30 ],\n  \"labels\": [ \"Uganda\", \"Netherlands\", \"US\" ],\n  \"type\": \"pie\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Defining a Design Property in JSON\nDESCRIPTION: This code snippet defines a design property named \"Bordered\" within the ActionButton class in design-properties.json. It allows users to toggle a bordered button style using the btnBordered class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"name\": \"Bordered\",\n    \"type\": \"Toggle\",\n    \"description\": \"Create a bordered button.\",\n    \"class\": \"btnBordered\"\n},\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Table for Widget-Set Functions\nDESCRIPTION: This snippet defines a markdown table listing Widget-Set functions in ATS, including function names, supported widgets, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-function-reference.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Function         | Supported Widgets | Description                              |\n| ---------------- | ----------------- | ---------------------------------------- |\n| Set BooleanSlider Value          | BooleanSlider                    | ⚠ Deprecated in favor of **Set Value**.<br /> Checks if the given value is available for the BooleanSlider and sets the value. |\n| Set BootstrapRTE Value           | BootstrapRTE                     | ⚠ Deprecated in favor of **Set Value**.<br /> Sets the given value as current value for the BootstrapRTE value. Strings can be formatted via html-code. |\n| Set Checkbox Set Selector Value  | Checkbox Set Selector            | Checks/clears the **Select all** checkbox. |\n| Set Checkbox Set Selector Value (all) | Checkbox Set Selector       | Checks/clears the **Select all** checkbox. |\n| Set Checkbox Value               | Checkbox                         | Sets the value of a checkbox. |\n```\n\n----------------------------------------\n\nTITLE: Implementing Mendix Text Box Container Component\nDESCRIPTION: Container component that connects Mendix runtime with the display component. Handles data flow and property management from Mendix to React component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { createElement, ReactElement } from \"react\"; \nimport { TextBoxContainerProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\nimport \"./ui/TextBox.css\";\n\nexport function TextBox(props: TextBoxContainerProps): ReactElement {\n    const value = props.textAttribute.value || \"\";\n    return <TextInput value={value} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Subexpression Examples\nDESCRIPTION: This snippet shows examples of using bracket expressions in regular expressions to match single characters within specified ranges. The first example matches 'a', 'b', or 'c', while the second matches any lowercase letter from 'a' to 'z'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: regex\nCODE:\n```\n\"[abc]\"\n```\n\nLANGUAGE: regex\nCODE:\n```\n\"[a-z]\"\n```\n\n----------------------------------------\n\nTITLE: TextToSpeech with Event Handlers\nDESCRIPTION: Complete implementation with event handlers for successful completion and error handling of the speech synthesis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return Promise.resolve(false);\n    }\n    if (\"speechSynthesis\" in window === false) {\n        return Promise.reject(\"Browser does not support text to speech\");\n    }\n    return new Promise(function(resolve, reject) {\n        var utterance = new SpeechSynthesisUtterance(text);\n        utterance.onend = function() {\n            resolve(true);\n        };\n        utterance.onerror = function(event) {\n            reject(\"An error occurred during playback: \" + event.error);\n        };\n        window.speechSynthesis.speak(utterance);\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Disabled Property in Mendix Microflows\nDESCRIPTION: This code snippet illustrates the options for the Disabled property in Mendix microflows. It allows users to skip an activity from the flow by setting it to 'Yes' or keep it active with 'No'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/microflow-element-common-properties.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Option | Description | \n| --- |--- |\n| Yes | The activity is shown as faded out and errors are ignored. When running your microflow, the disabled activity is skipped, also while debugging. |\n| No *(default)* | The activity works as usual. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Appium Capabilities for iOS Testing\nDESCRIPTION: JSON configuration for Appium Desktop to set up a testing session for a Mendix native iOS app. Specifies the automation name, device details, and app file location.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\"automationName\": \"XCUITest\",\n\"deviceName\": \"desired device here, for instance 'iPhone 11'\",\n\"platformName\": \"iOS\",\n\"platformVersion\": \"desired platform version, for instance '14.3'\",\n\"app\": \"location of your .app iOS app file\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Scraping for All Mendix Environments\nDESCRIPTION: YAML configuration to add to the Mendix Operator configuration to enable Prometheus metrics scraping for all Mendix app environments in a namespace. This adds the necessary annotations to all Mendix app pods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: OperatorConfiguration\nspec:\n  # Existing configuration\n  # ...\n  runtimeDeploymentPodAnnotations:\n    # Existing annotations\n    # ...\n    # Add these new annotations:\n    prometheus.io/path: /metrics\n    prometheus.io/port: '8900'\n    prometheus.io/scrape: 'true'\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Login Action in Java\nDESCRIPTION: This Java action replaces the default LoginAction with a custom implementation. It adds a UserActionListener that intercepts login attempts and redirects them to the custom login action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/login-behavior.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic java.lang.Void executeAction() throws Exception\n{\nCore.addUserAction(CustomLoginAction.class);\n\nUserActionListener<LoginAction> loginActionListener = new UserActionListener<>(LoginAction.class) {\n    @Override\n    public boolean check(LoginAction loginAction) {\n    return true;\n    }\n};\n\nloginActionListener.addReplaceEvent(CustomLoginAction.class.getName());\nCore.getListenersRegistry().addListener(loginActionListener);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Customer and Invoice Entities in Mendix SDK\nDESCRIPTION: This snippet shows how to create both 'Customer' and 'Invoice' entities in a domain model, including their respective names and locations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-the-domain-model.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst domainModel = await domainModelInterface.load();\nconst customer = domainmodels.Entity.createIn(domainModel);\ncustomer.name = `Customer`;\ncustomer.location = { x: 100, y: 100 };\n\nconst invoice = domainmodels.Entity.createIn(domainModel);\ninvoice.name = `Invoice`;\ninvoice.location = { x: 400, y: 100 };\n```\n\n----------------------------------------\n\nTITLE: Styling Mendix Native Progress Bar Widget\nDESCRIPTION: Style properties for progress bar widget including container, bar, fill and marker customization. Includes background color and text styling options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_progressbar_ProgressBar = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  bar: {\n    // This has all ViewStyle properties.\n  },\n  fill: {\n    backgroundColor: null, // This is the background color of the filled progress bar portion.\n  },\n  marker: {\n    // This has all TextStyle properties.\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Customers with XPath in Java\nDESCRIPTION: This code snippet demonstrates how to retrieve all customer objects using XPath in a Java environment within Mendix. It specifies the entity to retrieve as 'Sales.Customer' using the double slash notation, indicating that all instances of this entity should be returned.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\"//Sales.Customer\"\n```\n\n----------------------------------------\n\nTITLE: XML Representation of One-to-One Association\nDESCRIPTION: Illustrates how a one-to-one association between Customer and Profile entities is represented in XML. The association is stored in both the Profile and Customer elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/associations/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<Profile id=\"401\">\n\t<religion>Buddhism</religion>\n\t<job>Chief Executive Officer</job>\n\t<website>http://www.apple.com/ </website>\n\t<Customer_Profile>id_201</Customer_Profile>\n</Profile>\n\n<Customer id=\"201\">\n\t<fullname>Steve Jobs</fullname>\n\t<address>1 Infinite Loop</address>\n\t<telephonenumber>1-800-MY-APPLE</telephonenumber>\n\t<Customer_Profile>id_401</Customer_Profile>\n</Customer>\n```\n\n----------------------------------------\n\nTITLE: Rounding Down a Number in Mendix Using Java\nDESCRIPTION: The 'floor' function rounds down a given number to the nearest integer. It accepts numeric values as input and returns an integer representing the largest integer less than or equal to the input, which is useful in scenarios requiring integer outputs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nfloor(3.9)\n```\n\nLANGUAGE: java\nCODE:\n```\n3\n```\n\nLANGUAGE: java\nCODE:\n```\nfloor(-1.2)\n```\n\nLANGUAGE: java\nCODE:\n```\n-2\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Dependencies using NPM\nDESCRIPTION: This shell command installs the necessary Node.js modules and CocoaPods dependencies required for an iOS developer app build in Mendix. Ensure that prerequisites like Node.js and Cocoapods are installed before running this command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/how-to-devapps.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i && cd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Querying with day-from-dateTime in Studio Pro\nDESCRIPTION: This XPath query retrieves all objects where the day of the month of the `DateAttribute` is 30, using the local time zone.  The `day-from-dateTime()` function extracts the day, which is then compared to the integer 30.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-day-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[day-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Updating Render Method in GroupBox.tsx\nDESCRIPTION: This TypeScript snippet updates the render method to use the `headerCaption` prop. The old `sampleText` prop is replaced with `headerCaption` prop which retrieves its value from `this.props.headerCaption`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_13\n\nLANGUAGE: tsx\nCODE:\n```\n`headerCaption={this.props.headerCaption}`\n```\n\n----------------------------------------\n\nTITLE: SOAP Authentication Header XML Structure\nDESCRIPTION: Example of the required authentication header structure for SOAP web service calls in Mendix. Shows the format for username and password credentials that must match an existing webservice user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/published-web-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Header>\n  <tns:authentication>\n    <username>john</username>\n    <password>john'ssecretpassword</password>\n  </tns:authentication>\n</soap:Header>\n```\n\n----------------------------------------\n\nTITLE: IIS Reverse Proxy Rules Configuration for Windows Deployment\nDESCRIPTION: Configuration rules for setting up reverse proxy inbound rules when deploying Mendix on Microsoft Windows. These rules enable the DocGen request handler.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/document-generation.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nRule | Name | Pattern | Rewrite URL\n---- | ---- | ------- | -----------\n1 | p | ^(p/)(.*) | http://localhost:8080/{R:1}{R:2}\n2 | docgen | ^(docgen/)(.*) | http://localhost:8080/{R:1}{R:2}\n```\n\n----------------------------------------\n\nTITLE: Parameter Passing Loop in C#\nDESCRIPTION: Iterates through parameter tuples to create parameter mappings for a microflow call. Each parameter is mapped to the corresponding parameter in the called microflow using expression values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_8\n\nLANGUAGE: csharp\nCODE:\n```\nforeach (var (parameterName, expression) in parameters)\n{\n    var parameterInCalledMicroflow = microflowService.GetParameters(calledMicroflow).Single(p => p.Name == parameterName);\n    var parameterMapping = currentApp.Create<IMicroflowCallParameterMapping>();\n    parameterMapping.Argument = microflowExpressionService.CreateFromString(expression);\n    parameterMapping.Parameter = parameterInCalledMicroflow.QualifiedName;\n    microflowCallAction.MicroflowCall.AddParameterMapping(parameterMapping);\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Native Mobile Toolkit with Custom Config Path\nDESCRIPTION: This command executes the Native Mobile Toolkit with a specified custom configuration file path and enables verbose output. It allows overriding the default configuration file location, providing flexibility in managing configuration files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_10\n\nLANGUAGE: text\nCODE:\n```\n\"native-mobile-toolkit configure --config-path='./<name of the configuration>.json' --verbose\"\n```\n\n----------------------------------------\n\nTITLE: Copying PWA Configuration Object\nDESCRIPTION: This step describes how to copy the configuration object for a Progressive Web App (PWA) from the Firebase project settings.  This configuration is required to set up notifications in the web client of the PWA.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nCopy the text that is highlighted in the screenshot above and store it somewhere safe.\n```\n\n----------------------------------------\n\nTITLE: Initializing Ternary Plot Layout Configuration in JSON\nDESCRIPTION: This snippet defines the layout configuration for a ternary plot in JSON format, setting the sum constraint for the ternary variables. The output will be a layout that illustrates the relationship constraints among the three variables in the ternary plot.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_25\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ternary\": {\n    \"sum\":100\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Get Active Tab Caption in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Get Active Tab Caption' function using a markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-tab/rg-one-get-active-tab-caption.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the tab widget\nSearch Context | WebElement | no | Limit the search for the DataGrid row to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Rendering Group Box with Content in TSX\nDESCRIPTION: This TSX code renders the Group Box component, passing the headerCaption, style, and content as props. It demonstrates how to include child components within the WrappedGroupBox.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_14\n\nLANGUAGE: TSX\nCODE:\n```\nrender(): ReactNode {\n    const { content, headerCaption, style } = this.props;\n\n    return (\n        <WrappedGroupBox headerCaption={headerCaption} style={style}>\n            {content}\n        </WrappedGroupBox>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Substring at End in Mendix - Java\nDESCRIPTION: The `endsWith` function confirms whether a string concludes with a certain substring. Accepting the original string and desired suffix substring as inputs, it returns a Boolean. The operation is case-sensitive, demanding exact matches for valid results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nendsWith('thisismystring', 'ring')\n```\n\n----------------------------------------\n\nTITLE: Making POST Request with Prefer Header in HTTP\nDESCRIPTION: Demonstrates how to make a POST request to create a new customer using the Prefer header for automatic return of the created resource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_5\n\nLANGUAGE: HTTP\nCODE:\n```\nPOST http://localhost:8080/odata/CustomerApi/v1/Customers\nPrefer: return=representation\n\n{\n    \"FirstName\": \"Alexis\",\n    \"Lastname\": \"Sweeper\",\n    \"Title\": \"Ir.\",\n    \"CompanyName\": \"GadgetsAndBeers\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating OTA Deployment Metadata with Native Builder\nDESCRIPTION: Command to update metadata of a published update that hasn't been rolled out to all users. This allows modification of parameters like target version, rollout percentage, and description.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe release patch-update --project-name \"CoolApp\" --label \"v4\" --target-version  \"1.0.1\"\n```\n\n----------------------------------------\n\nTITLE: Defining Default Styles for the Basic Group Box Widget\nDESCRIPTION: This code snippet defines the default styles for the group box widget, including container borders, header background, text formatting, and content padding.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {},\n    label: {\n        color: \"#F6BB42\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Properties for Static Image Widget\nDESCRIPTION: This snippet includes the common properties section for the Static Image widget, facilitating standard configurations across different widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/image-and-file-widgets/image.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Metrics Registry Structure in JSON\nDESCRIPTION: Base JSON structure for configuring multiple metric registries with type, settings and filters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"<registry1>\",\n    \"settings\": { <settings> },\n    \"filters\": [ <list-of-filters> ]\n  },\n  {\n    \"type\": \"<registry2>\",\n    \"settings\": { <settings> },\n    \"filters\": [ <list-of-filters> ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Default Style Constant (TSX)\nDESCRIPTION: This TypeScript snippet adds a `defaultStyle` constant in the container component (`GroupBox.tsx`) to define default styles for the container, header, header content, and content of the group box. This ensures that the icons are visible with the correct color and size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_34\n\nLANGUAGE: typescript\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {},\n    header: {},\n    headerContent: {\n        color: \"#FFFFFF\",\n        fontSize: 16\n    },\n    content: {}\n};\n\n```\n\n----------------------------------------\n\nTITLE: Importing Children Component\nDESCRIPTION: This TypeScript snippet imports the `Children` component from 'react'.  This import is needed to count the number of child components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_20\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n        Children,\n        Component,\n        ReactNode,\n        createElement,\n        ComponentClass\n    } from \"react\";\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section for Radio Buttons\nDESCRIPTION: This snippet includes design properties related to the radio buttons widget, which defines visual aspects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_2\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Increasing Memory for Node.js Scripts\nDESCRIPTION: Command to increase the memory available to Node.js scripts when working with large Mendix models. This helps prevent 'JS Allocation Failed, Process Out of Memory' errors when loading many documents.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-faq.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnode --max-old-space-size=4096 script.js\n```\n\n----------------------------------------\n\nTITLE: Assigning Access Policy Ownership\nDESCRIPTION: SQL commands to grant ownership and apply permissions for the row access policy\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_8\n\nLANGUAGE: SQL\nCODE:\n```\nGRANT OWNERSHIP ON ROW ACCESS POLICY RegionRole TO AccountAdmin;\n\nGRANT APPLY ON ROW ACCESS POLICY RegionRole TO ROLE ROLETESTA;\nGRANT APPLY ON ROW ACCESS POLICY RegionRole TO ROLE ROLETESTB;\n```\n\n----------------------------------------\n\nTITLE: SOAP URL for GetJobStatus Service\nDESCRIPTION: The endpoint URL for the GetJobStatus service in the ATS CI/CD API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nhttps://ats100.mendixcloud.com/ws/GetJobStatus\n```\n\n----------------------------------------\n\nTITLE: Chart Theming Configuration JSON in Mendix\nDESCRIPTION: This JSON configuration file demonstrates how to apply global themes to chart widgets in a Mendix application.  It specifies layout, configuration, and data options that can be shared across all charts or applied to specific chart types like LineChart, AreaChart, and BubbleChart.  Place this file in the theme folder of your Mendix app root directory as com.mendix.charts.json.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"{\n  \\\"layout\\\": {\n    // Add shared layout options here (for all charts)\n  },\n  \\\"configuration\\\": {\n    // Add shared configuration options here (for all charts)\n  },\n  \\\"charts\\\": {\n    \\\"LineChart\\\": {\n      \\\"layout\\\": {\n        // Add line chart only layout options here\n      },\n      \\\"data\\\": {\n        // Add line chart only data options here\n      },\n      \\\"configuration\\\": {\n          // Add line chart only configuration options here\n      }\n    },\n    \\\"AreaChart\\\": {\n      // Same arrangement as the line chart\n    },\n    \\\"BubbleChart\\\": {\n      // Same arrangement as the line chart\n    },\n    \\\"TimeSeries\\\": {\n      // Same arrangement as the line chart\n    },\n    \\\"ColumnChart\\\": {\n      // Same arrangement as the line chart\n    },\n    \\\"BarChart\\\": {\n      // Same arrangement as the line chart\n    },\n    \\\"PieChart\\\": {\n      // Same arrangement as the line chart\n    },\n    \\\"HeatMap\\\": {\n      // Same arrangement as the line chart\n    }\n  }\n}\"\n```\n\n----------------------------------------\n\nTITLE: Checking Storage Instances\nDESCRIPTION: Commands to list storage instances in a namespace for both platforms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_28\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} get storageinstance\n```\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} get storageinstance\n```\n\n----------------------------------------\n\nTITLE: Querying Logs by Day of the Week in Mendix\nDESCRIPTION: The code snippet is an example of an XPath query in Mendix that filters log entries by checking if the day of the week from a Date attribute equals 6 (Friday). This demonstrates the use of the 'weekday-from-dateTime()' function to perform date-related comparisons efficiently within Mendix applications. No external dependencies are required. The expected input is a Date and time attribute, and the output is a filtered set of logs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[weekday-from-dateTime(DateAttribute) = 6]\n```\n\n----------------------------------------\n\nTITLE: Calculating Calendar Months Between Dates in Java\nDESCRIPTION: The calendarMonthsBetween function calculates the difference between two dates in months, ignoring time. It takes two DateTime parameters and returns an Integer/Long value. Available in Mendix 8.15 and above.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\ncalendarMonthsBetween(dateTime(2007, 1, 1, 10, 1, 1), dateTime(2007, 8, 1, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Parsing Microsoft Entra ID Access Tokens - JSON Example\nDESCRIPTION: This JSON snippet demonstrates the structure of the roles claim in the access token issued by Microsoft Entra ID, which is needed for user role assignment in Mendix apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n\"roles\": [\n        \"c1c31b36-2779-4ddd-a6e7-eaff22ad382c\"\n        ]\n```\n\n----------------------------------------\n\nTITLE: Creating HttpResponse Object for Error Handling in Mendix Microflow\nDESCRIPTION: This snippet shows how to create an HttpResponse object for handling errors in a Mendix microflow, specifically for invalid OrderID input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/publish-rest-service.md#2025-04-21_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<member>\\n    <name>StatusCode</name>\\n    <value>400</value>\\n</member>\\n<member>\\n    <name>Content</name>\\n    <value>'{\"Error\": \"The OrderID can only be an integer\"}'</value>\\n</member>\\n<member>\\n    <name>HttpVersion</name>\\n    <value>'HTTP/1.1'</value>\\n</member>\n```\n\n----------------------------------------\n\nTITLE: Formatting Decimal Values in Nanoflows - Java\nDESCRIPTION: The formatDecimal function in nanoflows takes a decimal value and formats it to a string based on the locale specific to the current user in Mendix applications. There is no additional parameter for the format string, as it is determined by locale settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Formatting details depend on the locale of the current user in Mendix apps.\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Assert InputReferenceSelector Value in Markdown\nDESCRIPTION: This code snippet defines a table of input parameters for the 'Assert InputReferenceSelector Value' function. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/input-reference-selector/assert-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nValue | String | Yes | The value you want to assert.\n```\n\n----------------------------------------\n\nTITLE: Creating Association Between Customer and Invoice Entities in Mendix SDK\nDESCRIPTION: This snippet illustrates how to create a one-to-many association between 'Customer' and 'Invoice' entities, defining the child-parent relationship and their screen locations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-the-domain-model.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst invoices = domainmodels.Association.createIn(domainModel);\ninvoices.name = `Invoices`;\ninvoices.child = customer;\ninvoices.parent = invoice;\n```\n\nLANGUAGE: typescript\nCODE:\n```\ninvoices.childConnection = { \"x\": 100, \"y\": 30 };\ninvoices.parentConnection = { \"x\": 0, \"y\": 30 };\n```\n\n----------------------------------------\n\nTITLE: Displaying Task Inbox in Mendix Workflow\nDESCRIPTION: This XML code embeds an image showing the task inbox interface in Mendix workflows. It includes attributes for the image source, alternative text, and CSS class.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-how-to-configure/task-inbox.png\" alt=\"Task Inbox\" class=\"no-border\" >\n```\n\n----------------------------------------\n\nTITLE: Referencing Design Section Link in Header Styling\nDESCRIPTION: This snippet includes a reference link in the documentation for the design properties section of the header. It assists users in understanding the styling options available for headers, promoting better customization practices within Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/page-resources/layout/header.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Rows with NULL in WHERE Clause - OQL\nDESCRIPTION: This snippet demonstrates how using NULL in a WHERE clause yields no results. The query attempts to retrieve customer records based on a WHERE condition that is NULL, which is evaluated as FALSE, resulting in no rows returned.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_29\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.Customer\nWHERE NULL\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Set BootstrapRTE Value Action in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Set BootstrapRTE Value' action using a markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/bootstraprte/rg-one-set-bootstraprte-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nValue | String | Yes | The value you want to set.\n```\n\n----------------------------------------\n\nTITLE: sso-login.html for SSO Integration\nDESCRIPTION: This snippet represents the sso-login.html file that needs to replace the standard Mendix login.html file to facilitate SSO integration with Insights Hub applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<html>\n<head>\n    <title>SSO Login</title>\n</head>\n<body>\n    <form method=\"POST\" action=\"/sso/login\">\n        <input type=\"text\" name=\"username\" placeholder=\"Username\">\n        <input type=\"password\" name=\"password\" placeholder=\"Password\">\n        <button type=\"submit\">Login</button>\n    </form>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Excluding Building Blocks in JSON\nDESCRIPTION: Shows how to exclude Atlas Web Content building blocks, which will hide them from the page editor toolbox, limiting what developers can use in page design.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Web_Content\": {\n            \"buildingBlocks\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Domain Model for Document Generation\nDESCRIPTION: Defines the domain model entities required for document generation, including Customer, Order, OrderLine, and OrderDocument. The OrderDocument inherits from System.FileDocument to manage file-based documents.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/creating-your-own-documents.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Domain Model\nCODE:\n```\nEntities: Customer, Order, OrderLine, OrderDocument\nRelationships: Customer -> Order, Order -> OrderLine, OrderDocument inherits from System.FileDocument\n```\n\n----------------------------------------\n\nTITLE: Configuring Snippet Properties\nDESCRIPTION: Example of essential snippet configuration properties in Mendix 8 including platform selection (Web/Native), entity context, and canvas dimensions. These properties determine how the snippet behaves and displays in both the editor and runtime environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/snippet.md#2025-04-21_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nPlatform: Web (default) | Native\nEntity: [entity_name]\nCanvas Width: 800\nCanvas Height: 600\nCommon Section: Standard properties\nDesigner Section: Editor-specific properties\nGeneral Section: Basic configuration\n```\n\n----------------------------------------\n\nTITLE: Button CSS Classes in Mendix\nDESCRIPTION: CSS classes for styling buttons in Mendix applications, including size, width, borders, background, and positioning options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_4\n\nLANGUAGE: CSS\nCODE:\n```\n/* Button styling */\n.btn-lg { /* large button */ }\n.btn-sm { /* small button */ }\n.btn-block { /* spans the full width of the parent */ }\n.btn-bordered { /* bordered button */ }\n.btn-transparent { /* transparent background */ }\n.btn-image { /* transparent button with image nicely align */ }\n\n/* Button alignment */\n.pull-right, .btn-right { /* aligns the button to the right */ }\n\n/* Button spacing */\n.btn-attached-right { /* adds left margin */ }\n.btn-attached-left { /* adds right margin */ }\n.btn-attached-bottom { /* adds top margin */ }\n.btn-attached-top { /* adds bottom margin */ }\n```\n\n----------------------------------------\n\nTITLE: Multiple Native Dependencies Declaration Example in JSON\nDESCRIPTION: An example JSON structure showing how to declare multiple native dependencies with their specific versions. This demonstrates declaring React Native community libraries with exact version requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-native-dependencies.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nativeDependencies\": {\n        \"@react-native-community/netinfo\": \"5.9.10\",\n        \"react-native-image-picker\": \"3.1.4\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Microflow Response JSON\nDESCRIPTION: JSON response containing employee data returned from a microflow execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/communication-patterns.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"actionResult\":[\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710657\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"piet\"},\n            \"DateOfBirth\":{\"value\":476406000000},\n            \"Jobtitle\":{\"value\":\"consultant\"},\n            \"Department\":{\"value\":\"expert services\"},\n            \"Lastname\":{\"value\":\"jansen\"}\n         }\n      },\n      {\n         \"objectType\":\"MyFirstModule.Employee\",\n         \"guid\":\"281474976710957\",\n         \"attributes\":{\n            \"Firstname\":{\"value\":\"wee\"},\n            \"DateOfBirth\":{\"value\":1454886000000},\n            \"Jobtitle\":{\"value\":\"ewji\"},\n            \"Department\":{\"value\":\"wew\"},\n            \"Lastname\":{\"value\":\"ewfeew\"}\n         }\n      }\n   ]\n}\n```\n\n----------------------------------------\n\nTITLE: Subtracting Years using Java\nDESCRIPTION: This function subtracts years from a date, using either the server's calendar or the UTC calendar based on the function variant. It requires an integer value for years to be subtracted, affecting the initial date and time value accordingly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nsubtractYears(dateTime(2007, 1, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Microflow to Retrieve or Create UserReportInfo in Mendix\nDESCRIPTION: This microflow, `User_RetrieveOrCreateUserReportInfo`, ensures that a `UserReportInfo` object exists for a given `User`. It is a prerequisite for updating the UserType attribute, as the UserReportInfo entity stores the user classification.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/populate-user-type.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\n\"1. Create a microflow `User_RetrieveOrCreateUserReportInfo` which will ensure that a `UserReportInfo` object exists for a given `User`.\"\n```\n\n----------------------------------------\n\nTITLE: Update Security Group Request\nDESCRIPTION: HTTP PUT request example for updating a security group's name and description. Requires Company Manager role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_21\n\nLANGUAGE: http\nCODE:\n```\nPUT /legacy-api/1/groups/a552a41b-5b30-41000-bab7-ad102eacd653 HTTP/1.1\nHost: usermanagement.mendix.com\nContent-Type: application/json\nMendix-Username:janedoe@example.com\nMendix-ApiKey:87a8a34d-5ee7-43ba-81f0-7b1b17d5ecd7\n\n{\n   \"name\": \"RnD\",\n   \"description\": \"Research and Development\"\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying URL Rewrite Rule for On-Premises Applications\nDESCRIPTION: This snippet deploys a URL rewrite rule in the 'web.config' file for an on-premises Mendix application. It is essential for redirecting requests to the appropriate local application endpoints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<rule name=\"mxecoh\">\n   <match url=\"^(mxecoh/)(.*)\" />\n   <action type=\"Rewrite\" url=\"http://localhost:8080/{R:1}{R:2}\" />\n</rule>\n```\n\n----------------------------------------\n\nTITLE: Setting JCIFS Properties for Samba Connections - Shell\nDESCRIPTION: This shell command sets the property to disable domain-based DFS referrals when connecting to Samba shares using JCIFS in Mendix Cloud. It’s essential for ensuring proper connections without network resolution issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/access-a-samba-share-from-the-mxcloud.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\njcifs.Config.setProperty(\"jcifs.smb.client.dfs.disabled\",\"false\");\n```\n\n----------------------------------------\n\nTITLE: Configuring NuGet Package Dependencies in XML\nDESCRIPTION: An XML configuration snippet for the project file (.csproj) that enables proper handling of NuGet package dependencies in Mendix extensions. This setting ensures that dependencies are copied to the output directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-menu-extension.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>\n```\n\n----------------------------------------\n\nTITLE: Defining OQL LIKE Operator\nDESCRIPTION: Illustrates the LIKE operator in OQL, used for pattern matching in strings. It supports wildcards and escaping special characters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n| `LIKE` | Matches the pattern after the operator. The wildcard character '%' can be used to define any string of zero or more characters. In order to search for special characters like '%', '_', and '\\', they should be escaped with the '\\' escape character. | `City LIKE '%dun'` returns all the cities with names that end with 'dun', like 'dun' and 'Losdun'.<br> `Symbol LIKE '%\\%'` returns all the symbols that end with the '%' special character.|\n```\n\n----------------------------------------\n\nTITLE: Grid Selector Input Parameters Table\nDESCRIPTION: Markdown table defining the required input parameters for asserting grid selector values, including widget name, column caption, row caption, and checked state.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/grid-selector/rg-one-assert-grid-selector-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\nColumn Caption | String | Yes | The column caption of the checkbox cell you want to assert.\nRow Caption | String | Yes | The row caption of the checkbox cell you want to assert.\nChecked | Boolean | Yes | The value you want to assert (true or false).\n```\n\n----------------------------------------\n\nTITLE: Defining Android Icons Interface in JSON\nDESCRIPTION: TypeScript interface definition for Android icons configuration. This schema defines the structure for the android.json file including directory, filename, and title properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\ninterface AndroidIconsConfig {\n    \"images\": Array<{\n            \"directory\": \"mipmap-mdpi\" | \"mipmap-hdpi\" | \"mipmap-xhdpi\" | \"mipmap-xxhdpi\"\n            \"filename\": \"ic_launcher.png\" | \"ic_launcher_round.png\"\n            \"title\": string\n        }>,\n    \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Action Property in Mendix Pluggable Widgets\nDESCRIPTION: Example of an action property configuration that allows users to set up actions like calling nanoflows or opening pages when an event occurs, such as a button click.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"buttonAction\" type=\"action\">\n\t<caption>On click</caption>\n\t<description>Action to be performed when button is clicked</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: String Property Type Definition\nDESCRIPTION: Demonstrates how to define a simple string property for a pluggable widget, which is represented as a text input in Studio Pro and passed as a string prop to the client component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myString\" type=\"string\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Invalid GROUP BY Association Example in OQL v2\nDESCRIPTION: Example of a query that is no longer allowed in OQL v2 because it uses a path over association in a GROUP BY clause, which could produce unpredictable results with one-to-many and many-to-many associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(*) AS count\nFROM Module.Person\nGROUP BY Module.Person/Module.Person_City/Module.City/Name\n```\n\n----------------------------------------\n\nTITLE: Finding Select Element using jQuery\nDESCRIPTION: jQuery selector used to find the select element within a reference selector widget identified by mx-name. This command helps verify if ATS can locate the correct element before implementing the actual action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-05-reference-selector.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$( '.mx-name-referenceSelector1 select' )\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block defining metadata and settings for the documentation page including title, URL, description and cascading settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/digital-execution/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Digital Execution Release Notes\"\nlinktitle: \"Digital Execution\"\nurl: /releasenotes/digital-execution/\ndescription: \"Release notes for Compass and Portfolio Management\"\nweight: 20\ncascade:\n    - numberless_headings: true\n#This document is mapped to the landing page, update the link there if renaming or moving the doc file.\n---\n```\n\n----------------------------------------\n\nTITLE: Example Request for Stopping Environment - Mendix API - Bash\nDESCRIPTION: This example shows the structure for making a POST request to stop a specific Mendix environment, including necessary header information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps/calc/environments/Acceptance/stop\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n```\n\n----------------------------------------\n\nTITLE: Setting SameSite Cookie for Custom Sign-In Pages in JavaScript\nDESCRIPTION: This code snippet demonstrates how to set the originURI cookie with SameSite=None and Secure attributes for custom sign-in pages when a Mendix app runs within an iframe.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/environments-details-new.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.cookie = \"originURI=/login.html\" + (window.location.protocol === \"https:\" ? \";SameSite=None;Secure\" : \"\")\n```\n\n----------------------------------------\n\nTITLE: Querying with hours-from-dateTime in Studio Pro\nDESCRIPTION: This query retrieves all objects where the hours part of the `DateAttribute` is equal to 8 in the local time zone. It demonstrates the basic usage of the `hours-from-dateTime()` function without specifying a timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n\t[hours-from-dateTime(DateAttribute) = 8]\n```\n\n----------------------------------------\n\nTITLE: Bundling Mendix App using MxBuild\nDESCRIPTION: The command transpiles and bundles the Mendix app into JavaScript and static assets for native mobile app development. It requires parameters for the Java home directory and executable path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmxbuild.exe --java-home=\"JDKDirectory\" --java-exe-path=\"javaExecutable\" --target=deploy --native-packager --loose-version-check path-to-your-app-mpr-file\n```\n\n----------------------------------------\n\nTITLE: Querying Year from DateTime using XPath - Java\nDESCRIPTION: This snippet demonstrates how to use the year-from-dateTime() function within XPath to filter logs based on the year extracted from a Date and time attribute. It returns logs where the year extracted from the DateAttribute equals 2011.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-year-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[year-from-dateTime(DateAttribute) = 2011]\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Find Checkbox Set Selector in Markdown\nDESCRIPTION: This code snippet defines the input parameters for the 'Find Checkbox Set Selector' function using a markdown table. It specifies the name, datatype, requirement, and description of the input parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/checkbox-set-selector/find-all.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | -------- | ---------------\nWidget Name | String | Yes | The name of the widget.\n```\n\n----------------------------------------\n\nTITLE: OQL JOIN Syntax\nDESCRIPTION: Detailed syntax specification for different JOIN types in OQL, showing the structure for INNER, LEFT OUTER, RIGHT OUTER, and FULL OUTER JOINs with entity path and constraint options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n { INNER | { { LEFT | RIGHT | FULL } [ OUTER ] } } JOIN\n        entity_path [ [ AS ] from_alias ]\n        [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: PCLM CLI Configuration File Format\nDESCRIPTION: YAML configuration file format for the PCLM CLI, which stores admin credentials and server URL to avoid specifying them in every command. Default location is $HOME/.pclm/config.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nadmin_user: <admin-user>\nadmin_pass: <admin-password>\nserver_url: <pclm-http-url>\n```\n\n----------------------------------------\n\nTITLE: OQL Query with NULL Parameter in Mendix\nDESCRIPTION: This SQL snippet illustrates how an OQL query behaves when a parameter value is provided but is NULL. The query selects the Name from Module.Person where Age is greater than NULL and Active is true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-parameters.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT Name\nFROM Module.Person\nWHERE\n    Age > NULL\n    AND\n    Active = true\n```\n\n----------------------------------------\n\nTITLE: Initializing Custom Button Class in Native Mobile Styling\nDESCRIPTION: A template for creating a custom class with styling properties for a Mendix native mobile button widget. This snippet demonstrates the basic structure for defining container, icon, and caption styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const className = {\n    container: {\n        <ViewStyle properties>\n    },\n    icon: {\n    },\n    caption: {\n        <TextStyle properties>\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Whether an Object Is Synced in Mendix (Java)\nDESCRIPTION: Demonstrates how to check if an object's changes have been synchronized to the runtime database in Mendix expressions. This function is only available in certain contexts and returns a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nisSynced($currentObject)\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle Dependencies\nDESCRIPTION: The snippet shows how to update dependencies using Gradle. It's important to ensure all dependencies are up-to-date, especially the *.jar* files required by the module. This helps maintain compatibility and functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/push-notifications.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ gradle dependencyUpdate\n```\n\n----------------------------------------\n\nTITLE: Using XPath not() with relationships in Mendix\nDESCRIPTION: This query retrieves all customers who have not placed any orders by checking if there are no related order entities. It demonstrates how not() can be used with references across entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: Implementing TabIndex for Mendix Pluggable Widget\nDESCRIPTION: This XML code demonstrates how to implement the TabIndex system property for a Mendix pluggable widget. The TabIndex property allows widgets to support the Tab index setting, improving accessibility and providing a consistent development experience.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_26\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"TabIndex\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining a Datasource Type in TypeScript for Mendix Widget Previews\nDESCRIPTION: TypeScript interface definition for the Datasource preview type, extending BaseProps. It includes properties for the datasource object and an optional child component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ntype DatasourceProps = BaseProps & {\n    type: \"Datasource\";\n    property: Nullable<object>; // datasource property object from Values API\n    child?: StructurePreviewProps; // any type of preview property component (optional)\n}\n```\n\n----------------------------------------\n\nTITLE: Navigation Menu Structure Example\nDESCRIPTION: Demonstrates the structure of automatically generated navigation menu items and pages for imported entities. Shows how overview and edit pages are created and linked in the navigation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-from-spreadsheet.md#2025-04-21_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\n{EntityName}_Overview\n{EntityName}_NewEdit\nManage data\n```\n\n----------------------------------------\n\nTITLE: Creating TextInput Component - TypeScript\nDESCRIPTION: This TypeScript snippet defines a 'TextInput' component which renders an input element. It accepts a single property, 'value', to set the input's value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Component, ReactNode, createElement } from \"react\";\n\nexport interface InputProps {\n    value: string;\n}\n\nexport class TextInput extends Component<InputProps> {\n    render(): ReactNode {\n        return <input type=\"text\" value={this.props.value} />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring SameSite Cookies for Iframes - Mendix\nDESCRIPTION: This snippet discusses the configuration of SameSite cookies, crucial for enabling iframe functionality when the main page is on a different domain. It is applicable for both Mendix Cloud and on-premise deployments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/running-in-iframe.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nSet the SameSite cookie to allow iframe usage across different domains depending on your deployment environment.\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix Resources in OpenShift\nDESCRIPTION: Commands to verify that environments and their storage have been successfully deleted in an OpenShift cluster.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\noc get mendixapp -n {namespace}\noc get storageinstance -n {namespace}\n```\n\n----------------------------------------\n\nTITLE: Defining XML Style Structure for Navigation Components\nDESCRIPTION: This XML snippet specifies the structure and style attributes for navigation components in a Mendix mobile app. It defines elements such as 'bottomBar' and 'progressOverlay' and their ViewStyle and TextStyle properties, applicable for designing the app's bottom navigation bar and loading indicators. Familiarity with XML structure and Mendix navigation styling is required.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<app>\n\t<page/>\n\t<bottomBar/>\n<app>\n<progressOverlay>\n\t<background>\n\t\t<container>\n\t\t\t<activityIndicator/>\n\t\t\t<text/>\n\t\t</container>\n\t</background>\n</progressOverlay>\n```\n\n----------------------------------------\n\nTITLE: Styling Background Image Widget in Mendix Native Mobile\nDESCRIPTION: JavaScript style object for customizing the background image widget which enables layering widgets on top of an image. Includes container and image styling with SVG color support.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_backgroundimage_BackgroundImage = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  image: {\n    // This has all ImageStyle properties.\n    svgColor: 'black', // Property to set the color of an SVG image.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Using XPath Contains Function in Mendix\nDESCRIPTION: This example demonstrates how to use the contains() function in an XPath query to filter customers whose name contains a specific substring ('an'). The query is case-insensitive and will return all customers with names containing the substring.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-contains.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[contains(Name, 'an')]\n```\n\n----------------------------------------\n\nTITLE: Using OFFSET to Skip Initial Results in OQL\nDESCRIPTION: Example of using the OFFSET clause to skip the first 10 customers and retrieve all remaining customers, sorted by last name. This is useful for implementing pagination or skipping a certain number of results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nORDER BY LastName\nOFFSET 10\n```\n\n----------------------------------------\n\nTITLE: Styling Progress Bar Widget with JavaScript\nDESCRIPTION: This code snippet defines the styling properties for the Progress Bar widget. It includes properties for the container, bar, fill (backgroundColor), and marker. Each property allows customization of appearance using ViewStyle and TextStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_progressbar_ProgressBar = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  bar: {\n    // This has all ViewStyle properties.\n  },\n  fill: {\n    backgroundColor: null, // This is the background color of the filled progress bar portion.\n  },\n  marker: {\n    // This has all TextStyle properties.\n  },\n};\n\n```\n\n----------------------------------------\n\nTITLE: Mobile Application Bundle Configuration\nDESCRIPTION: Configuration for mobile application bundles, which include Client Core, Pluggable Widgets, and application-specific resources\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/mendix-client.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// React Native mobile app bundle structure\n// Includes wrapper and dynamically loaded bundle\n```\n\n----------------------------------------\n\nTITLE: Restricting Field Editability in Mendix User Task\nDESCRIPTION: This snippet explains how to modify the properties of a data view in a Mendix workflow page to restrict editing of certain fields by the Manager role.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n12. In the App Explorer, double-click the **SpecifyDeviceAndLocation_Workflow** page to open it.\n1. Select the text box for the **FullName** attribute and go to its properties.\n2. Set the **Editable** property to *Never*.\n```\n\n----------------------------------------\n\nTITLE: Parsing SAM Access Tokens - JSON Example\nDESCRIPTION: This JSON snippet illustrates the structure of the SAM access token used for role assignment in Mendix applications. It shows the role name contained within the access token.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"sws.samauth.role.name\": [\n        \"c1c31b36-2779-4ddd-a6e7-eaff22ad382c\"\n        ]\n```\n\n----------------------------------------\n\nTITLE: Creating a SOAP Request to Add a Customer in XML\nDESCRIPTION: This XML snippet defines a SOAP request for adding a new customer through a Mendix web service. Key parts include customer name, address, city, and zip code, which are necessary inputs for the service. The output is a request formatted as a SOAP envelope, intended to invoke the 'CreateCustomer' operation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n\"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:exam=\\\"http://www.example.com/\\\">\\n   <soapenv:Header/>\\n   <soapenv:Body>\\n      <exam:CreateCustomer>\\n         <Name>Donald A. Hylton<\\/Name>\\n         <Address>784 Better Street<\\/Address>\\n         <City>Kansas City<\\/City>\\n         <ZipCode>KS 66102<\\/ZipCode>\\n      <\\/exam:CreateCustomer>\\n   <\\/soapenv:Body>\\n<\\/soapenv:Envelope>\"\n```\n\n----------------------------------------\n\nTITLE: Executing XPath Query in Java\nDESCRIPTION: This Java method demonstrates retrieving a list of customers filtered by the name 'Jansen'. The XPath expression is built as a complete query which includes the context and constraint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic List<IMendixObject> getCustomersNameJansen(IContext context, ICore core, int value) {\n    List<IMendixObject> results = core.createXPathQuery(\"//Sales.Customer[Name='Jansen']\").execute(context);\n    return results;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating PodDisruptionBudget for Kubernetes Disruption Prevention (YAML)\nDESCRIPTION: This YAML snippet defines a PodDisruptionBudget to limit the number of pods that Kubernetes can stop simultaneously during node updates or scaling operations. It ensures that at most one replica is stopped at a time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/reduced-downtime-deployment.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: <mendixapp-cr-name> # This should be updated to match the MenedixApp CR name\nspec:\n  maxUnavailable: 1 # Ensure that at most 1 replica is stopped by Kubernetes\n  selector:\n    matchLabels:\n      privatecloud.mendix.com/app: <mendixapp-cr-name> # This should be updated to match the MenedixApp CR name\n      privatecloud.mendix.com/component: mendix-app\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Get Text Action in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Get Text' action in a markdown table format. It specifies the name, datatype, requirement, and description of the WebElement parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/selenium-actions/rg-one-get/rg-one-get-text.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWeb Element | WebElement | yes | The WebElement you want to get the text value from.\n```\n\n----------------------------------------\n\nTITLE: Microflow for Sending Product Data to All Devices\nDESCRIPTION: This microflow, ACT_SendProductToAllDevices, retrieves all registered devices and sends a push notification containing a Product data object to them. It utilizes the PrepareMessageData microflow and SendMessageToDevices Java action from the PushNotifications module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/notif-mult-devices.md#2025-04-21_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Adding Personal Image to AR Business Card\nDESCRIPTION: Guide for adding a personal image to the AR business card by utilizing another Square widget, ensuring the positioning and sizing match properly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-business-card.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNext, add a picture of yourself to your virtual business card. Drag another **Square (AR)** widget into **ImageTracker (AR)** and add a picture of yourself to this. In our case we have used a square image with transparent edges to make it appear round: Go to the **General** tab and place it about 8 cm (*0.08,0,0*) to the right of the first image and match the size with the size of our business card image.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Settings\nDESCRIPTION: GET request to retrieve current values of custom runtime settings, constants, and scheduled events for a specific environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/acceptance/settings\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Defining AWS Connector Activities in Mendix\nDESCRIPTION: Template for documenting activities provided by an AWS connector, including their purpose, input, and output.\nSOURCE: https://github.com/mendix/docs/blob/development/templates/marketplace-aws-connector-page-template.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Activities {#activities}\n\nActivities define the actions that are executed in a microflow or a nanoflow. For the {CONNECTOR NAME} connector, they {PURPOSE OF THE ACTIVITIES}.\n\n#### {ACTIVITY NAME}\n\nThe `{ACTIVITYNAME}` {AWS SERVICE NAME} activity allows you to {ACTIVITY PURPOSE}. It requires {REQUIRED PARAMETERS}. {OPTIONAL, IF THE ACTIVITY HAS NO OUTPUT: \"This activity has no return value.\"}\n\nThe input and output for this service are shown in the table below:\n\n| Input | Output |\n| --- | --- |\n| `{INPUT OBJECT}` | `{OUTPUT OBJECT}` |\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year, Month, Day, Hour, and Minutes in Mendix\nDESCRIPTION: Creates a date object by specifying the year (2007), month (1 for January), day (1), hour (1 AM), and minute (1), with seconds set to zero.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: Transporting Package to Environment\nDESCRIPTION: POST request to transport a deployment package to a specific environment, including the package ID in the request body.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps/calc/environments/acceptance/transport\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n{\n     \"PackageId\" :  \"b3d14e53-2654-4534-b374-9179a69ef3cf\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Client Certificates for REST Calls\nDESCRIPTION: Explains how to set client certificates for REST service calls, including options for using app settings or overriding with a specific certificate identifier.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* **Use app settings**(default) – use the settings that are defined at the app level \n* **Override** – override the app-level settings for this action\n\nWhen you select **Override**, you can configure which client certificate will be used. Click **Edit** to specify the **Client certificate identifier**.\n```\n\n----------------------------------------\n\nTITLE: Cache Busting in Mendix - HTML\nDESCRIPTION: This snippet shows how Mendix implements cache busting by adding dynamic query parameters to resources like JavaScript in the index.html file, ensuring that the browser fetches the latest versions of resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"mxclientsystem/mxui/mxui.js?638184496048312490\"></script>\n```\n\n----------------------------------------\n\nTITLE: Using XPath not() Function with Value Comparison in Java\nDESCRIPTION: This query finds customers who have placed no orders with a TotalPrice of more than 30,000. This includes customers who have not placed any orders at all. The not() function applies to the entire condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order/TotalPrice > 30000)]\n```\n\n----------------------------------------\n\nTITLE: Using Expressions to Calculate Values in Mendix\nDESCRIPTION: This expression calculates the selling price by applying a discount to the original price. It demonstrates how to combine arithmetic operations (subtraction, division, multiplication) with parentheses to control the order of operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n$CurrentPrice/Price - (($CurrentPrice/Price **div** 100) * $OrderLine/Discount)\n```\n\n----------------------------------------\n\nTITLE: Logging Request-State Statistics in Mendix\nDESCRIPTION: Example of TRACE level logging output showing request state statistics including session information and entity counts in JSON format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/runtime-java/transient-objects-garbage-collecting.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTRACE: Request-State statistics: {\n  session: \"fd0771fe-8c12-49cf-8667-921058b116a3\",\n  action: \"execute-action\",\n  total: 5,\n  details: {\n    \"MyModule.MyEntity\": 3,\n    \"AnotherModule.SomeEntity\": 2\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Application Registration Response Example\nDESCRIPTION: This is the JSON response returned after successfully registering an application. It includes the application name, type, UUID, and icon URL. The UUID is needed for registering environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"name\":\"My-Application\",\n\t\"type\":\"Other\",\n\t\"uuid\":\"0301800d-b104-417f-8a64-a8f3ba3450c3\",\n\t\"icon\":\"https://catalog.mendix.com/resources/logos/other_icon.png\"\n}\n```\n\n----------------------------------------\n\nTITLE: XPath Inverse Comparison in Java\nDESCRIPTION: This Java query retrieves `Sales.Customer` objects where the `Name` attribute is not equal to 'Jansen' using the `!=` operator. It provides an alternative approach to using `not()` in Java XPath queries for Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[Name != 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Cancel Changes - Event Action\nDESCRIPTION: This snippet describes how to roll back all changes made on the page using the 'Cancel Changes' event. It also explains the property for closing the current page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nSet the **Close page** property to indicate whether the current page should be closed.\n```\n\n----------------------------------------\n\nTITLE: Robust Group Box Rendering with Null State Handling\nDESCRIPTION: Implements a render method that gracefully handles scenarios with no header or content by returning null\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_45\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const renderedHeader = this.renderHeader();\n    const renderedContent = this.renderContent();\n    \n    if (!renderedHeader && !renderedContent) {\n        return null;\n    }\n    \n    return (\n        <View style={this.styles.container}>\n            {renderedHeader}\n            {renderedContent}\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to Epoch Milliseconds in Java\nDESCRIPTION: Converts a DateTime object to the number of milliseconds since Unix epoch (January 1, 1970, 00:00:00 GMT). Takes a DateTime parameter and returns a Long/Integer value representing milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndateTimeToEpoch(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\nLANGUAGE: java\nCODE:\n```\n141990610000\n```\n\n----------------------------------------\n\nTITLE: Configuring Workflow Decision Expression\nDESCRIPTION: Expression configuration for workflow decisions that should result in either a Boolean value (for true/false paths) or an enumeration value (for multiple conditional paths). The expression determines which path the workflow will follow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/decision-in-workflows.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\n[expression] // Should evaluate to Boolean or enumeration\n```\n\n----------------------------------------\n\nTITLE: Conditional Icon Rendering for Group Box\nDESCRIPTION: Renders expand/collapse icons based on the collapsibility state, with platform-specific default icons\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_44\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderIcon = (): ReactNode => {\n    const { collapsible, collapseIcon, expandIcon } = this.props;\n\n    if (!collapsible) {\n        return null;\n    }\n\n    if (this.state.collapsed) {\n        return expandIcon ? expandIcon : <Text style={this.styles.headerContent}>+</Text>;\n    }\n\n    return collapseIcon ? collapseIcon : <Text style={this.styles.headerContent}>-</Text>;\n};\n```\n\n----------------------------------------\n\nTITLE: Styling a Pluggable Widget in Mendix Native Apps\nDESCRIPTION: This code demonstrates how to style a pluggable widget by creating a styling class based on the widget's full ID. It customizes the caption color of a Badge widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_badge_Badge = (Badge = {\n\tcaption: {\n\t\t// TextStyle properties\n\t\tcolor: \"#00FF00\",\n\t}\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Entity from Domain Model in TypeScript\nDESCRIPTION: This snippet demonstrates how to retrieve an entity named 'MyEntity' from the previously loaded domain model. It utilizes the getEntity method to fetch the entity instance for further manipulation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/model-api.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst entity: DomainModels.Entity = domainModel.getEntity(\"MyEntity\");\n```\n\n----------------------------------------\n\nTITLE: Managing Mendix Applications with PowerShell Cmdlets\nDESCRIPTION: Example of using PowerShell cmdlets to control Mendix application service status. This shows the Start-MxApp cmdlet which may cause the Service Console GUI to display outdated status information until restarted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nStart-MxApp\n```\n\n----------------------------------------\n\nTITLE: Inserting Objects with Associations in OData JSON\nDESCRIPTION: JSON example showing how to set associations when inserting new objects. Unlike updates, when setting associations to multiple objects during an insert operation, the @delta syntax is not used.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/published-odata-services/odata-query-options.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Customers\": [\n    { \"@id\": \"Customers(484)\" },\n    { \"@id\": \"Customers(712)\" }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Module-Level Theme Settings Example in JSON\nDESCRIPTION: A comprehensive JSON configuration example that combines excluding layouts, page templates, building blocks, design properties, and styling from multiple modules.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Core\": {\n            \"layouts\": true,\n            \"pageTemplates\": true\n        },\n        \"Atlas_Web_Content\": {\n            \"buildingBlocks\": true,\n            \"designProperties\": true,\n            \"styling\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Widget Attributes in XML\nDESCRIPTION: XML configuration for a widget's core attributes including ID, platform compatibility, and offline capabilities. These attributes help the Mendix Platform identify and properly handle the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n    <widget\n        id=\"com.mendix.widget.MyProgressCard\"\n        pluginWidget=\"true\"\n        offlineCapable=\"true\"\n        supportedPlatform=\"Web\"\n        [...]\n    >\n```\n\n----------------------------------------\n\nTITLE: Configuring SSO for Insights Hub in JavaScript\nDESCRIPTION: This script sets the originURI cookie to enable SSO for Insights Hub. It should be placed directly after the XSRF script in the index.html file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n<script>\n\t// Insights Hub specific part-2: Use the sso-login.html to prevent the Gateway taking over login.html and perform SSO\n        // Always set originURI Cookie.\n        document.cookie = 'originURI=/sso-login.html';\n        // Insights Hub specific part-2: ends\n</script>\n```\n\n----------------------------------------\n\nTITLE: Updating Attributes with PATCH Request in JSON\nDESCRIPTION: This snippet demonstrates how to update attributes of an object using a PATCH request with a JSON body. It includes examples for updating string, datetime, and nullable attributes via an OData service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/odata-services/published-odata-services/odata-query-options.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Name\": \"John\",\n  \"FirstContact\": \"2012-12-03T07:16:23Z\",\n  \"DateOfBirth\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Combining XPath Constraints with OR Operator\nDESCRIPTION: This example showcases the use of the 'or' operator to create a query retrieving customers named Jansen or living in Rotterdam. It highlights alternative combination methods for constraints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen' or Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Association Type Handling in TypeScript\nDESCRIPTION: Demonstrates how to handle association types in a widget by checking the type property to determine if a reference or reference set is configured, allowing proper handling of each case.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nif (association.value === undefined) {\n\treturn \"None\";\n}\n\nif (association.type === \"Reference\") {\n\treturn textTemplate.get(association.value);\n} else {\n\treturn association.value.map((objectItem) => textTemplate.get(objectItem)).join(\",\");\n}\n```\n\n----------------------------------------\n\nTITLE: XPath contains in Java\nDESCRIPTION: This snippet shows how to use the `contains()` function within a Java query in Mendix to fetch customers whose `Name` attribute contains the substring 'an'.  It employs a slightly different XPath syntax suitable for Java queries within the Mendix platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-contains.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[contains(Name, 'an')]\n```\n\n----------------------------------------\n\nTITLE: Creating P12 Certificate Using OpenSSL\nDESCRIPTION: Command to create a password-protected P12 certificate using the PEM certificate and private key. This is the final format required for iOS app signing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/managing-app-signing-keys.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" pkcs12 -export -out \"C:\\ios.p12\" -inkey \"C:\\private.key\" -in \"C:\\ios_pem.pem\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Model from Mendix Storage\nDESCRIPTION: This nanoflow shows how to delete a model from Mendix file storage using the DeleteModelFromMendix microflow. It takes a ModelDocument as input, calls the DeleteModelFromMendix microflow, and commits the changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: Mendix\nCODE:\n```\nParameter: ModelDocument\nMicroflow call: Viewer3D/USE_ME/DeleteModelFromMendix\nCommit: ModelDocument\n```\n\n----------------------------------------\n\nTITLE: Creating Test Users in Snowflake\nDESCRIPTION: SQL commands to create two test users with specified credentials and settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE OR REPLACE USER TestUser1\nPASSWORD = 'TestPass1'\nLOGIN_NAME = 'TestUser1'\nFIRST_NAME = 'TestUser'\nLAST_NAME = 'Testuser'\nEMAIL = 'TestUser1@email.com'\nMUST_CHANGE_PASSWORD = false //only for testing \nDEFAULT_WAREHOUSE = COMPUTE_WH;\n\nCREATE OR REPLACE USER TestUser2\nPASSWORD = 'TestPass2'\nLOGIN_NAME = 'TestUser2'\nFIRST_NAME = 'TestUser2'\nLAST_NAME = 'Testuser2'\nEMAIL = 'TestUser2@email.com'\nMUST_CHANGE_PASSWORD = false //only for testing \nDEFAULT_WAREHOUSE = COMPUTE_WH;\n```\n\n----------------------------------------\n\nTITLE: Rendering Group Box Content in TypeScript\nDESCRIPTION: This TypeScript snippet renders the Group Box content, handling cases where there might be no header or content.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_49\n\nLANGUAGE: TypeScript\nCODE:\n```\nrender(): ReactNode {\n    const renderedHeader = this.renderHeader();\n    const renderedContent = this.renderContent();\n    \n    if (!renderedHeader && !renderedContent) {\n        return null;\n    }\n    \n    return (\n        <View style={this.styles.container}>\n            {renderedHeader}\n            {renderedContent}\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Watching TypeScript Files for Changes\nDESCRIPTION: This Bash command initiates the TypeScript compiler in watch mode, allowing for automatic compilation upon file changes. This requires a properly configured 'tsconfig.json' file in the working directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/creating-your-first-script.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ tsc --watch\n```\n\n----------------------------------------\n\nTITLE: Specifying Proxy Settings for Local Mendix Studio Pro or Eclipse\nDESCRIPTION: This command-line snippet demonstrates how to directly specify proxy settings when running a Mendix app locally from Studio Pro or calling from Eclipse.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-rest-services/using-a-proxy-to-call-a-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-Dhttp.proxyHost=myproxyserver.com  -Dhttp.proxyPort=3128 -Dhttp.proxyUser=myusername -Dhttp.proxyPassword=mypassword\n```\n\n----------------------------------------\n\nTITLE: Creating Amazon Cognito User Pool Configuration URL\nDESCRIPTION: The URL format for the Automatic Configuration URL when setting up an OIDC client in your Mendix app. This URL connects to Amazon Cognito's OpenID configuration endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/aws/amazon-cognito.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://cognito-idp.{the region where you created the user pool}.amazonaws.com/{your user pool ID}/.well-known/openid-configuration\n```\n\n----------------------------------------\n\nTITLE: Using week-from-dateTime XPath Function Syntax\nDESCRIPTION: Defines the syntax for the week-from-dateTime function which extracts the week number (1-53) from a Date and time attribute. The function can optionally accept a timezone parameter in Studio Pro 9.22.0 and above.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nweek-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Using XPath not() with equality conditions in Mendix\nDESCRIPTION: This query retrieves all customers whose names are not equal to 'Jansen'. When used with simple equality conditions, not() functions similarly to the inverse comparison operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Name = 'Jansen')]\n```\n\n----------------------------------------\n\nTITLE: Multiple Y Axes Configuration\nDESCRIPTION: Demonstrates configuration for charts with multiple Y axes, including titles, colors, and overlay settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaxis\": {\n    \"title\": \"Y-axis 1\",\n    \"zeroline\": true,\n    \"color\": \"#4682B4\",\n    \"showgrid\": true,\n    \"showline\": true\n  },\n  \"yaxis2\": {\n    \"title\": \"Y-axis 2\",\n    \"color\": \"#FF8C00\",\n    \"showgrid\": true,\n    \"showline\": true,\n    \"zeroline\": true,\n    \"overlaying\": \"y\",\n    \"side\": \"right\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Inserting an Icon using a Shortcode in Mendix\nDESCRIPTION: This shortcode inserts an SVG icon into the Mendix documentation. The `name` attribute specifies the icon file to use from the *docs/static/mx-icons* library.  The shortcode renders the specified SVG icon inline with the surrounding text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/icon-demo.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n\n{{%/* icon name=\"three-dots-menu-horizontal\" */%}}\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Auto-Synchronization in Nanoflow - Mendix JavaScript\nDESCRIPTION: This snippet enables auto-synchronization for the Save button in the nanoflow, ensuring that all user data is synced from the mobile device to the server automatically once the Save button is clicked.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/native-mobile-app.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Set Auto-synchronize property for Save button\nautoSynchronize(\"Save\", true);\n```\n\n----------------------------------------\n\nTITLE: Creating PageObject Entity with LoadingProgress Attribute in Mendix\nDESCRIPTION: This snippet demonstrates how to create a PageObject entity with a LoadingProgress attribute in Mendix. The LoadingProgress attribute is set as a decimal with a default value of 0, which is required for the Progress Bar widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix\nCODE:\n```\nEntity: PageObject\nAttribute: LoadingProgress (Type: Decimal, Default value: = 0)\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Objects from Database in Mendix\nDESCRIPTION: SQL query to retrieve all objects from a specific entity in the database. This is typically used in microflows that populate data grids.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_21\n\nLANGUAGE: sql\nCODE:\n```\nSELECT \"myfirstmodule$employee\".\"id\",\n\"myfirstmodule$employee\".\"firstname\",\n\"myfirstmodule$employee\".\"dateofbirth\",\n\"myfirstmodule$employee\".\"jobtitle\",\n\"myfirstmodule$employee\".\"department\",\n\"myfirstmodule$employee\".\"lastname\"\nFROM \"myfirstmodule$employee\"\n```\n\n----------------------------------------\n\nTITLE: Using isMatch() Function with Regular Expressions in Mendix\nDESCRIPTION: The isMatch() function checks if a string matches a given regular expression. It returns a Boolean value indicating whether the string matches the pattern. The function is implicitly anchored at ^ and $, meaning it matches the entire input string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_10\n\nLANGUAGE: java\nCODE:\n```\nisMatch('234hello6432', '([0-9]+')\n```\n\nLANGUAGE: java\nCODE:\n```\nisMatch('NLG 123.45', '[0-9]')\n```\n\nLANGUAGE: java\nCODE:\n```\nisMatch('NLG 123.45', '.*[0-9].*')\n```\n\nLANGUAGE: java\nCODE:\n```\nisMatch('', '.*[0-9].*')\n```\n\n----------------------------------------\n\nTITLE: Accessing Expression Value with ListExpressionValue in TypeScript\nDESCRIPTION: Shows accessing a dynamic value from a data source's expression for its first item. Assumes myDataSource and myExpressionOnDatasource are configured in widget props.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst expressionValue = this.props.myDataSource.myExpressionOnDatasource(this.props.myDataSource.item[0]);\n```\n\n----------------------------------------\n\nTITLE: Data View Error Code CE0536\nDESCRIPTION: Error occurs when Listen to widget is configured as data source but specified list view widget doesn't exist. Fix by creating a list view or changing data source type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/consistency-errors/consistency-errors-pages.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nCE0536: No list widget configured for the data source of this data view. Select a widget or change the data source.\n```\n\n----------------------------------------\n\nTITLE: Building Native Mobile App with Native Builder\nDESCRIPTION: Shell command to rebuild and install your native mobile app with the Native Builder tool. This adds the new deep linking capabilities to your app with specific version and build number parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-deep-link.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nnative-builder.exe build --project-name \"Native Deep Link\" --app-version \"1.0.0\" --build-number 1\n```\n\n----------------------------------------\n\nTITLE: Creating a Variable to Convert OrderID in Mendix Microflow\nDESCRIPTION: This snippet shows how to create a variable in a Mendix microflow to convert the OrderID from String to Integer/Long data type. This conversion is necessary to search for the OrderID, which is an AutoNumber data type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/publish-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nCreate variable\nName: OrderIDLong\nData type: Integer/Long\nValue: $OrderID\n```\n\n----------------------------------------\n\nTITLE: Adding Help URL to Widget Configuration\nDESCRIPTION: XML markup for providing a help page URL that users can access from the widget's configuration dialog. This helps users understand how to use the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n    <helpUrl>https://marketplace.mendix.com/link/component/105695/</helpUrl>\n```\n\n----------------------------------------\n\nTITLE: Create Kubernetes Service Account, ClusterRole, and ClusterRoleBinding\nDESCRIPTION: This script creates a Kubernetes Service Account, ClusterRole, and ClusterRoleBinding for the Mendix platform CI/CD. It grants the service account permissions to list namespaces, storage plans, and manage Mendix apps within the cluster. It also retrieves the service account token.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/configuration/pmp-configure-k8s.md#2025-04-21_snippet_11\n\nLANGUAGE: text\nCODE:\n```\n# create ServiceAccount, ClusterRole, and ClusterRoleBinding\nkubectl apply -f << EOF -\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mxplatform-cicd\n  namespace: kube-system\n  annotations:\n    kubernetes.io/service-account.name: mxplatform-cicd\ntype: kubernetes.io/service-account-token\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: mxplatform-cicd\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  verbs:\n  - list\n- apiGroups:\n  - privatecloud.mendix.com\n  resources:\n  - storageplans\n  verbs:\n  - list\n- apiGroups:\n  - privatecloud.mendix.com\n  resources:\n  - mendixapps\n  verbs:\n  - '*'\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: mxplatform-cicd\nsubjects:\n- kind: ServiceAccount\n  name: mxplatform-cicd\n  namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: mxplatform-cicd\n  apiGroup: rbac.authorization.k8s.io\nEOF\n\n# get service account token:\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.data.token}'|base64 -d\n# for openshift cluster\nkubectl get secret mxplatform-cicd -nkube-system -o jsonpath='{.metadata.annotations.openshift\\.io/token-secret\\.value}'\n```\n\n----------------------------------------\n\nTITLE: Running Gulp for Production\nDESCRIPTION: This command starts Gulp in production mode. This disables source-mapping and will minify the CSS files to minimize the file size. This step is crucial to minimize the file size before deploying.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/style-with-gulp-and-sass.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"npm run build\"\n```\n\n----------------------------------------\n\nTITLE: Counting Customers per City Using GROUP BY in OQL\nDESCRIPTION: Example query that counts all customers grouped by city. It uses COUNT aggregate function with the GROUP BY clause to produce a count of customers for each unique city value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(Sales.Customer/*)\nFROM Sales.Customer\nINNER JOIN Sales.Customer/Sales.Customer_Address/Sales.Address\nGROUP BY Sales.Address/City\n```\n\n----------------------------------------\n\nTITLE: Getting Start Environment Status - Mendix API - Bash\nDESCRIPTION: This operation retrieves the current status of a start environment action initiated in Mendix. It shows how to form the GET request with appropriate endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: GET\nURL: https://deploy.mendix.com/api/1/apps/<AppId>/environments/<Mode>/start/<JobId>\n\n```\n\n----------------------------------------\n\nTITLE: Using Parameters in OQL Query for Mendix Dataset\nDESCRIPTION: This SQL snippet demonstrates how to use a parameter in an OQL query for a Mendix dataset. The query selects the Name from Module.Person where Age is greater than a parameter value and Active is true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-parameters.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT Name\nFROM Module.Person\nWHERE\n    Age > $param \n    AND\n    Active = true\n```\n\n----------------------------------------\n\nTITLE: Mendix Release Timeline Example\nDESCRIPTION: Shows the planned release timeline for Mendix versions 10 and 11, including MTS releases and major version transitions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/lts-mts.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n9.24 LTS | March 2023\n10.6 MTS | December 2023\n10.12 MTS | June 2024\n10.18 MTS | December 2024\n11 Public Beta 1, 10.22 | April 2025\n11 Public Beta 2, 10.23 | May 2025\n11.0 GA, 10.24 LTS | June 2025\n```\n\n----------------------------------------\n\nTITLE: Sample Script - Update App - PowerShell\nDESCRIPTION: This script updates a Mendix application by stopping it, unpacking the app using the provided deployment package, and then restarting the app with options for database synchronization. Parameters include the path to the deployment package and the app name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\n$mdaPath = '{Location of your Mendix Deployment Package}'\n$mdaFile = '{Name of your Mendix Deployment Package}' \n$literalPath = $mdaPath + \"\\\" + $mdaFile\n$appName = '{Name of your app}'\n\n\"Deploying \" + $mdaPath + \" to app \" + $appName\n\n# stop app\nStop-MxApp $appName\n\n# unpack app \nUpdate-MxApp $appName -LiteralPath $literalPath\n\n# start app, update database \nStart-MxApp $appName -SynchronizeDatabase\n```\n\n----------------------------------------\n\nTITLE: Multiline String Property Definition\nDESCRIPTION: Shows how to define a multiline string property type for a widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myStringMultiline\" type=\"string\" multiline=\"true\">\n\t<caption>My string multiline</caption>\n\t<description>My string multiline setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Referencing XPath Documentation in Mendix\nDESCRIPTION: This snippet demonstrates how to create a link to the XPath documentation in Mendix. It uses Markdown syntax to create a hyperlink to the XPath reference guide.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/dev-best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[XPath](/refguide/xpath/)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Category Names and IDs with OQL\nDESCRIPTION: SQL query that selects category identifiers and names from the Category entity, creating a view entity for use in selection components like combo boxes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  c.CategoryId as CategoryId,\n  c.CategoryName as CategoryName\nFROM Shop.Category c\n```\n\n----------------------------------------\n\nTITLE: Date Range Field Notes Table\nDESCRIPTION: Additional notes and requirements for using different types of date range fields.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/report-widgets/report-date-parameter/date-range-field.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Notes** |\n| --- |\n| ¹ The year will be between the **Min. year** and **Max. year** (inclusive) specified in the [report date parameter](/refguide8/report-date-parameter/) widget. |\n| ² You also need to add a **Year** date range field if you use a date range field of this type.<br />– The end-user will need to choose the year before they can choose a date range field of this type.<br />– The end-user can only choose one of these types, plus the year. |\n```\n\n----------------------------------------\n\nTITLE: OData Query Examples for Filtering and Sorting\nDESCRIPTION: These examples demonstrate various OData query parameters for filtering by entity ID, counting results, filtering by equality and inequality, filtering by date, and combining filters with sorting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_3\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers(7881299347898469)\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers/$count\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers?$filter=Name+eq+'Kim'\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers?$filter=Name+ne+'Kim'\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/SmartTasks?$filter=DueDate+gt+datetime'1995-01-01T00:00:00'\n```\n\nLANGUAGE: OData\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/SmartTasks?$filter=Created+gt+datetime'2005-01-01T00:00:00'&$orderby=DueDate\n```\n\n----------------------------------------\n\nTITLE: Using SELECT for Specific Attributes with Aliases\nDESCRIPTION: This code snippet illustrates how to select specific attributes from an entity in OQL, using aliases to rename the columns in the result set. This enhances readability and understanding of the results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name AS CustomerName, LastName AS CustomerLastName, Birthday, Category FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Rendering Checkbox Widget in XML\nDESCRIPTION: XML structure for rendering a checkbox widget in Mendix Studio Pro. It includes containers for label, input, and validation message elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<label>Boolean switch</label>\n\t<inputError>\n\t\t<trackColorOff/>\n\t\t<thumbColorOff/>\n\t</inputError>\n\t<validationMessage>Feedback switch input</validationMessage>\n</container>\n<container>\n\t<label>Valid boolean</label>\n\t<input>\n\t\t<trackColorOn/>\n\t\t<thumbColorOn/>\n\t</input>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Including Common Properties Section\nDESCRIPTION: This snippet includes the common properties section for the Password text box widget. It is used to provide context and functionality about the widget's properties that may be reused across different components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Queue for Asynchronous OData Actions\nDESCRIPTION: Example showing how to implement asynchronous OData actions using the Mendix Task Queue. Demonstrates proper placement of the Set Task Queue Processing action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n1. Edit target microflow\n2. Add Set Task Queue Processing action\n3. Position before OData action calls\n4. Continue with OData actions\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Tags GET Request in Bash\nDESCRIPTION: Example GET request for retrieving the current tags of a Mendix environment. This request returns all tags associated with the specified environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/acceptance/tags\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n\n```\n\n----------------------------------------\n\nTITLE: Adding javaVersion Property to RuntimeSettings Element\nDESCRIPTION: The RuntimeSettings element now includes a new 'javaVersion' property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.8.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Settings\n\n#### RuntimeSettings (Element)\n\n* We introduced the `javaVersion` property.\n```\n\n----------------------------------------\n\nTITLE: Adding Attribute in MendixApp CR\nDESCRIPTION: Adds a new attribute `allowOverrideSecretsWithSecretStoreCSIDriver` in the MendixApp CR (Custom Resource). This attribute allows the application to use credentials held in the secret store, enabling secure access to sensitive information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/mendix-for-private-cloud.md#2025-04-21_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n\"A new attribute `allowOverrideSecretsWithSecretStoreCSIDriver` has been added in the MendixApp CR. This allows the app to use credentials held in the secret store.\"\n```\n\n----------------------------------------\n\nTITLE: Describing Upload Phase Steps in Synchronization\nDESCRIPTION: Detailed breakdown of upload operations during device-server data synchronization, including object detection, file handling, and server commitment\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/building-efficient-mobile-apps/offlinefirst-data/synchronization.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. As the local database can be modified only by committing or deleting an object, such an object can be either a new object created while offline or an existing object previously synced from the server. The upload phase detects which objects have been committed to the local database since the last sync.\n```\n\n----------------------------------------\n\nTITLE: Checking Restore Status of a Snapshot\nDESCRIPTION: This Bash script shows how to check the status of a snapshot restore request in Mendix with a GET request. It requires valid API credentials and identifiers for the project, environment, and restore request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/v2/apps/<ProjectId>/environments/<EnvironmentId>/restores/<RestoreId>\nHost: deploy.mendix.com\n```\n\n----------------------------------------\n\nTITLE: Calculating Milliseconds Between Dates in Java\nDESCRIPTION: The `millisecondsBetween` function calculates the absolute difference between two date values in milliseconds. It accepts two Date and Time objects as inputs and returns a decimal value representing the difference in milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmillisecondsBetween(dateTime(2007, 1, 1, 1, 1, 1), dateTime(2007,1,1,1,1,3))\n```\n\n----------------------------------------\n\nTITLE: Converting Dropdown Option to Toggle Property in JavaScript\nDESCRIPTION: Demonstrates how to convert a dropdown option into a separate toggle property while maintaining backward compatibility through oldNames references.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/design-properties.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n\t\"name\": \"Styling 3\",\n\t\"oldNames\": [\"My Dropdown Property::Styling option 3\"],\n\t\"type: \"Toggle\",\n\t\"description\": \"Description of Styling 3 toggle property\",\n\t\"class\": \"stylingClassThree\"\n}\n```\n\n----------------------------------------\n\nTITLE: OQL ORDER BY Ascending Example\nDESCRIPTION: This SQL query selects the FirstName from the Sales.Customer entity and orders the results by LastName in ascending order (default). The result will be customers' first names sorted alphabetically by their last names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-order-by-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n\"SELECT FirstName FROM Sales.Customer\nORDER BY LastName\"\n```\n\n----------------------------------------\n\nTITLE: Styling Scroll Container Widget in Mendix Native Mobile\nDESCRIPTION: This code snippet defines the style properties for the Scroll Container widget in Mendix native mobile applications. It includes styles for the container, which can have all ViewStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nexport const ScrollContainer = {\n  container: {\n    // All ViewStyle properties\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Metric Comparison Table HTML\nDESCRIPTION: HTML table showing performance metrics comparison between conventional Mendix web application and React Client version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/react.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n| Metric | Without React Client | With React Client | Improvement |\n| --- | --- | --- | --- |\n| Performance | 87 | 91 | +5% |\n| First Contentful Paint | 1.1s | 0.7s | -36% |\n| Largest Contentful Paint | 2.0s | 1.8s | -10% |\n| Speed Index | 1.6s | 1.3s | -19% |\n```\n\n----------------------------------------\n\nTITLE: Handling DB2 SQL Error for DISTINCT on Long Strings\nDESCRIPTION: Example of a DB2 SQL exception thrown when selecting DISTINCT on String attributes longer than 8168 characters due to DB2 limitations with CLOB data types.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/db2.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nDB2 SQL Error: SQLCODE=-727, SQLSTATE=56098, SQLERRMC=2;-134;42907\n```\n\n----------------------------------------\n\nTITLE: Combining XPath Constraints with AND Operator\nDESCRIPTION: In this snippet, constraints are combined using the 'and' operator to retrieve customers named Jansen who live in Rotterdam. It emphasizes logical combinations in constraints.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen' and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Microflow URL Definition\nDESCRIPTION: New feature allowing microflows to be executed during client startup by defining a specific URL. Supports object and primitive parameters, with optional page navigation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.3.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nMicroflow URL can contain object parameters and primitive parameters, with optional page redirection.\n```\n\n----------------------------------------\n\nTITLE: Example mx merge Command\nDESCRIPTION: This is an example command illustrating how to execute the mx merge command for merging app files. It provides a practical application of the command based on specified file paths.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmx merge C:\\MyApp\\MyApp.mpr C:\\MyApp-main\\MyApp.mpr C:\\MyApp-FeatureBranch\\MyApp.mpr\n```\n\n----------------------------------------\n\nTITLE: Styling Ratings Widget Structure in XML\nDESCRIPTION: XML structure for styling a ratings widget that allows users to rate from 0-5 stars, including container and icon elements for both enabled and disabled states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_28\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<icon/><icon/><icon/><icon/><icon/>\n</container>\n\n<containerDisabled>\n\t<icon/><icon/><icon/><icon/><icon/>\n</containerDisabled>\n```\n\n----------------------------------------\n\nTITLE: Configuring Database Connection Pool Testing in Mendix\nDESCRIPTION: Runtime settings to configure connection pool validation behavior. These settings can be enabled to validate database connections at different points in the connection lifecycle.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\nConnectionPoolingTestOnBorrow\nConnectionPoolingTestOnCreate\nConnectionPoolingTestOnReturn\nConnectionPoolingTestWhileIdle\n```\n\n----------------------------------------\n\nTITLE: Retrieving PostgreSQL Pod Logs with kubectl in Bash (Windows)\nDESCRIPTION: This kubectl command, for Windows, retrieves logs from a specified PostgreSQL pod.  Replace `<name>` with the actual pod name obtained from the previous command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/docker-deploy/run-mendix-on-kubernetes.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n\"kubectl logs <name>\"\n```\n\n----------------------------------------\n\nTITLE: Creating Info Alert in Markdown\nDESCRIPTION: This snippet demonstrates how to create an info alert in Markdown, providing additional information about the release.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}For more information on this release, see the [Release 10.6: AI, That's a Lot](https://www.mendix.com/blog/release-10-6-ai-thats-a-lot/) blog post.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Enumeration Property Configuration\nDESCRIPTION: Demonstrates the setup of an enumeration property type with predefined values and default selection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n    <property key=\"colorEnum\" type=\"enumeration\" defaultValue=\"xff0000\">\n      <caption>Textcolor</caption>\n      <category>Appearance</category>\n      <description>The textcolor of the message in the widget</description>\n      <enumerationValues>\n        <enumerationValue key=\"xff0000\">Red</enumerationValue>\n        <enumerationValue key=\"x000000\">Black</enumerationValue>\n        <enumerationValue key=\"xffffff\">White</enumerationValue>\n      </enumerationValues>\n    </property>\n```\n\n----------------------------------------\n\nTITLE: Accessing Mendix Server Distributions in Windows File System\nDESCRIPTION: This snippet shows the typical file path where Mendix server distributions are stored on a Windows system. The user configured as the Service Account should have Read&Execute privileges on this folder.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/updating-a-mendix-application.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nD:\\Mendix\\MyApplications\\Servers\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Info Button\nDESCRIPTION: This snippet demonstrates how to create an outlined Bootstrap button styled with the 'info' color variant. The functionality is consistent with previous button styles.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"outline-info\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Info\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Basic XPath month-from-dateTime Function Syntax\nDESCRIPTION: Defines the syntax for the month-from-dateTime function with its required attribute parameter and optional timezone parameter. The attribute must be of Date and time type, and the timezone parameter accepts IANA time zone identifiers or 'UTC'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-month-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmonth-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Initializing SyncHelper Nanoflow - Mendix\nDESCRIPTION: This nanoflow initializes the SyncHelper object by retrieving it from the database, or creating a new one if it does not exist, ensuring the synchronization process has a tracking object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/best-practices/incremental-synchronization.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Retrieve the first **SyncHelper** object from the database and return it if it exists.\n1. Otherwise, create and commit a new **SyncHelper** object and return that:\n```\n\n----------------------------------------\n\nTITLE: Using inequality operator in Mendix XPath\nDESCRIPTION: This query achieves the same result as the previous example but uses the inequality operator instead of the not() function. With simple equality conditions, these approaches are equivalent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name != 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: Conditional Rendering of Content Based on Collapse State\nDESCRIPTION: This method ensures that the content inside the group box is only rendered when it is not in a collapsed state, improving user experience.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_32\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderContent = (): ReactNode => {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    if (this.state.collapsed || Children.count(this.props.children) === 0) {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n        return null;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    }\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    return <View style={this.styles.content}>{this.props.children}</View>;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n};\n```\n\n----------------------------------------\n\nTITLE: Response Format for Creating Free App Environment\nDESCRIPTION: Example JSON response after successfully creating a Free App environment, showing details of the newly created app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Name\": \"Calculation App\",\n    \"Url\": \"https://calc.mendixcloud.com\",\n    \"ProjectId\": \"fae5de74-69c2-4488-a4de-abf89daac63e\",\n    \"AppId\": \"calc\"\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Text Box Input Element with jQuery\nDESCRIPTION: This snippet demonstrates how to use jQuery to locate the input element within a Mendix text box widget. It uses the widget's mx-name class and the input selector.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-03-textbox.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n$( '.mx-name-textBox2 input' )\n```\n\n----------------------------------------\n\nTITLE: Using starts-with() Function in XPath Queries in Java\nDESCRIPTION: Example of using the starts-with() function in an XPath query to retrieve customers whose Name attribute starts with a specific string. This query returns all customers with names beginning with 'Jans', such as 'Jansen'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-starts-with.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[starts-with(Name, 'Jans')]\n```\n\n----------------------------------------\n\nTITLE: Deleting Environment Tags DELETE Request in Bash\nDESCRIPTION: Example DELETE request for removing tags from a Mendix environment. The request specifies the tag to be removed from the environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nDELETE /api/1/apps/calc/environments/acceptance/tags\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n{\n    \"Tag\": \"A\"\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Value Types Example\nDESCRIPTION: Examples of different JSON value types and how they are converted into Mendix attributes. This includes string, integer, boolean, date and time, and decimal values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/json-structures.md#2025-04-21_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"string\": \"string\",\n  \"integer\": 123,\n  \"boolean\": true,\n  \"datetime\": \"1985-04-12T23:20:50.52Z\",\n  \"decimal\": 12.50\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Widgets with ListWidgetValue in TypeScript\nDESCRIPTION: This snippet shows how to map and render widgets using items from myDataSource in a props-configured widget. Each widget is rendered with a specific list item.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_13\n\nLANGUAGE: TypeScript\nCODE:\n```\nthis.props.myDataSource.items.map(i => this.props.myWidgets(i));\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Applications Parameters Table\nDESCRIPTION: Markdown table defining the configuration parameters for setting up test applications, including name, URL, details, Mendix version, and proxy settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/rg-one-configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nField | Description\n--- | ---\nName | The name of the application.\nURL | The URL under which the Mendix application to test is running.\nDetails | The description of the application.\nMendix Version | The Mendix version of the application.\nUse Proxy | Check if a proxy should be used (should be off in most cases).\n```\n\n----------------------------------------\n\nTITLE: Removing Multiple Database-Related Elements\nDESCRIPTION: Several database-related elements have been deleted from the Pages module, including DatabaseSourceBase, GridDatabaseSource, ListViewDatabaseSource, DatabaseConstraint, and SelectorDatabaseSource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.5.md#2025-04-21_snippet_5\n\nLANGUAGE: markup\nCODE:\n```\n#### DatabaseSourceBase, GridDatabaseSource, ListViewDatabaseSource, DatabaseConstraint, SelectorDatabaseSource (Elements)\n\n* We deleted these elements.\n```\n\n----------------------------------------\n\nTITLE: Defining ListExpressionValue in TypeScript\nDESCRIPTION: The ListExpressionValue type in this snippet allows accessing expression or text template values for individual data source items. Requires specific types for expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport type ListExpressionValue<T extends AttributeValue> = (item: ObjectItem) => DynamicValue<T>;\n```\n\n----------------------------------------\n\nTITLE: Querying User Roles in Java\nDESCRIPTION: This XPath query retrieves users from the 'System' module with the 'Administrator' role. It is a Java-compatible version suitable for use in Mendix Java actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaQuery\nCODE:\n```\n    //System.User[System.UserRoles = '[%UserRole_Administrator%]']\n```\n\n----------------------------------------\n\nTITLE: Converting Epoch Milliseconds to DateTime in Java\nDESCRIPTION: Creates a DateTime object from a specified number of milliseconds since Unix epoch (January 1, 1970, 00:00:00 GMT). Takes a Long/Integer parameter representing milliseconds and returns a DateTime object.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nepochToDateTime(141990610000)\n```\n\nLANGUAGE: java\nCODE:\n```\ndateTime(1974, 7, 2, 9, 50, 10)\n```\n\n----------------------------------------\n\nTITLE: Defining Path to User XPath Constraint\nDESCRIPTION: This code snippet illustrates how to define an XPath constraint to limit access based on the user associated with the entity. It ensures that users can only access their related objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/entities/access-rules.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n[Module.Order_Customer = '[%CurrentUser%]']\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Years in Java\nDESCRIPTION: This function trims a date to years by rounding off all months and days to zero. It uses the user's time zone. The function takes a Date and time input and returns the same date rounded down to years.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\ntrimToYears($myDate)\n```\n\nLANGUAGE: java\nCODE:\n```\n'Tue Jan 01 00:00:00 CEST 2008'\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Authentication\nDESCRIPTION: This code snippet shows how to specify proxy server authentication credentials using JVM parameters. It sets the http.proxyUser and http.proxyPassword system properties for proxy authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/consumed-web-services/using-a-proxy-to-call-a-webservice.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n-Dhttp.proxyUser=myusername -Dhttp.proxyPassword=mypassword\n```\n\n----------------------------------------\n\nTITLE: Table Structure for Branch Description\nDESCRIPTION: Markdown table showing different branch descriptions and corresponding notes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/version-control-menu/commit-dialog.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Branch Description | Notes |\n| --- | --- |\n| {{< figure src=\"/attachments/refguide9/modeling/menus/version-control-menu/commit-dialog/commit-main.png\" alt=\"Version Control Menu\" class=\"no-border\" >}} |  you are committing the main line |\n| {{< figure src=\"/attachments/refguide9/modeling/menus/version-control-menu/commit-dialog/commit-branch.png\" alt=\"Version Control Menu\" class=\"no-border\" >}} |  you are committing the specified branch |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Maximum Total Price with Condition using XPath in Mendix\nDESCRIPTION: This XPath query returns the highest total price of an order placed by a customer named \"Jansen\". It shows how to combine the max() function with a condition in the XPath query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-max.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nmax(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen']/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Package - Mendix API - Bash\nDESCRIPTION: This GET request is designed to retrieve the deployed package of a specified environment for a Mendix app, while allowing an optional parameter to get a URL link.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: GET\nURL: https://deploy.mendix.com/api/1/apps/<AppId>/environments/<Mode>/package?url=<Boolean>\n\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year, Month, Day, and Hour in Mendix\nDESCRIPTION: Creates a date object by specifying the year (2007), month (1 for January), day (1), and hour (1 AM), with minutes and seconds set to zero.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: Downloading Atlas 3 Theme\nDESCRIPTION: Instructions to download and extract the Atlas 3 theme.zip into the root of the Mendix app folder. Users should ensure the structure follows the specified format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Download the Atlas 3 [theme.zip](https://github.com/mendix/widgets-resources/releases/download/atlas-ui-theme-dist/theme.zip) and extract it into the root of your Mendix app folder.\n```\n\n----------------------------------------\n\nTITLE: System.Management.Automation Assembly Load Error Message\nDESCRIPTION: Error message displayed when Windows Management Framework 3.0 is not installed, preventing PowerShell from loading the required System.Management.Automation assembly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_13\n\nLANGUAGE: text\nCODE:\n```\nCould not load file or assembly 'System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken={token number}' or one of its dependencies. The system cannot find the file specified.\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Resources in YAML\nDESCRIPTION: Example structure of a Custom Resource (CR) in YAML format. CRs are used to extend Kubernetes API and represent custom object types for operators.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-technical-appendix/private-cloud-technical-appendix-01.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  # desired state\nstatus:\n  # current state and updates\n```\n\n----------------------------------------\n\nTITLE: Greater Than or Equal To Comparison in Mendix\nDESCRIPTION: This snippet demonstrates the greater than or equal to relational expression in Mendix, which compares two numeric values and returns a Boolean value indicating whether the first value is greater than or equal to the second value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n```java\n4>=3\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nTrue\n```\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Seconds in Java\nDESCRIPTION: The trimToSeconds function is used to trim the date to seconds, rounding off all milliseconds to zero. It takes a date as input and returns the same date rounded down to the nearest second.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntrimToSeconds($myDate)\n```\n\n----------------------------------------\n\nTITLE: Applying Configuration for Mendix Private Cloud CLI\nDESCRIPTION: This command applies a configuration file to a standard namespace in Mendix Private Cloud. It requires the namespace ID, secret, and the path to the configuration file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-cli apply-config -i <namespace-id> -s <namespace-secret> --file <config-file>\n```\n\n----------------------------------------\n\nTITLE: Defining TabIndex System Property in Mendix Pluggable Widget XML\nDESCRIPTION: This XML snippet defines the TabIndex system property for a Mendix pluggable widget. It allows the widget to implement the Tab index setting similar to core input widgets, enhancing accessibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_22\n\nLANGUAGE: xml\nCODE:\n```\n<systemProperty key=\"TabIndex\"/>\n```\n\n----------------------------------------\n\nTITLE: JAR File Exception Types\nDESCRIPTION: Common JAR file exceptions encountered in the Mendix project logs and their associated workarounds. Issues include xml-apis.jar causing ExecutionException and servlet-api.jar causing LinkageError.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/java-programming/troubleshooting.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\njava.util.concurrent.ExecutionException: Boxed Error or java.lang.NoClassDefFoundError: org/w3c/dom/Document\n```\n\nLANGUAGE: java\nCODE:\n```\njava.lang.LinkageError: javax/servlet/http/HttpServletRequest\n```\n\n----------------------------------------\n\nTITLE: Dynamic 3D Text Rendering in XR\nDESCRIPTION: A widget for displaying 3D text with dynamic text changing capabilities. Note that text changes result in complete object recreation, which may impact performance during text updates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/augmented-reality/how-to-web-xr.md#2025-04-21_snippet_1\n\nLANGUAGE: documentation\nCODE:\n```\n#### Text (XR)\n```\n\n----------------------------------------\n\nTITLE: Updating Multiple Associations in OData PATCH Request (JSON)\nDESCRIPTION: Example of updating multiple associations using a PATCH request in OData. It uses the @delta syntax to add and remove objects from the association.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Customers@delta\": [\n    {\n      \"@id\": \"Customers(484)\"\n    },\n    {\n      \"@removed\": {\n        \"reason\": \"changed\"\n      },\n      \"@id\": \"Customers(712)\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Global Operator Base Installation for Mendix Private Cloud CLI\nDESCRIPTION: This command performs the base installation for the Global Operator namespace in Mendix Private Cloud. It includes an additional --global flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-cli base-install --namespace <namespace> -i <namespace-id> -s <namespace-secret> --clusterMode <cluster-mode> --clusterType <cluster-type> --global\n```\n\n----------------------------------------\n\nTITLE: Runtime Operation Request for Employee Retrieval\nDESCRIPTION: JSON request sent to retrieve Employee objects from the Runtime Server with pagination and sorting options\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\": \"runtimeOperation\",\n  \"operationId\": \"reyg/iaSXkaXmyztuaHbsA\",\n  \"params\": {},\n  \"options\": {\n    \"offset\": 0,\n    \"amount\": 20,\n    \"sort\": [],\n    \"wantCount\": true,\n    \"extraXpath\": \"\"\n  },\n  \"changes\": {},\n  \"objects\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Using LIMIT to Retrieve Top Results in OQL\nDESCRIPTION: Example of using the LIMIT clause to retrieve only the first 10 customers from the database, sorted by last name. This is useful when you only need to display a specific number of results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nORDER BY LastName\nLIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Selecting a Specific Grid Row Using jQuery in JavaScript\nDESCRIPTION: This example shows how to select the fourth row of a grid named 'ArtistGrid' using jQuery. It relies on jQuery library support, and it counts rows starting from zero. The code aims to identify grid rows uniquely using a combination of their parent grid class and index-specific class, useful for dynamic page interactions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/selenium-support.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n$('.mx-name-ArtistGrid .mx-name-index-3')\n\n```\n\n----------------------------------------\n\nTITLE: Using Icon Property in Preview Component\nDESCRIPTION: Shows how to import and use the Icon component to preview an icon property in a pluggable widget's preview.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Icon } from \"mendix/components/web/Icon\";\n\ntype Props = {\n    icon: IconProperty;\n}\n\nexport const preview: React.FC<Props> = (props) => (\n    <div className=\"my-pw-container\">\n        <Icon icon={props.icon} />\n        <div className=\"my-pw-content\">…</div>\n    </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Include MathJax Library (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to include the MathJax library in the index.html file of your theme. MathJax is required to render LaTeX mathematical formulas within chart titles, axes labels, and series. The `async` attribute ensures the script is downloaded without blocking page rendering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n<script type=\"text/javascript\" async src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_SVG\"></script>\n```\n\n----------------------------------------\n\nTITLE: Applying PCLM Server Installation Manifest with kubectl\nDESCRIPTION: This command applies the generated YAML manifest to install the PCLM server in the specified Kubernetes namespace using kubectl.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n <namespace> apply -f <out-file>\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example: Retrieving Customers\nDESCRIPTION: This XPath query retrieves all objects of the 'Customers' entity.  The '//' token signifies the start of a full XPath query.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n\"//Customers\"\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Negated Subexpression Examples\nDESCRIPTION: This snippet demonstrates how to use negated bracket expressions to match any single character that is NOT within the specified ranges. The first example matches any character other than 'a', 'b', or 'c', and the second matches any character that is not a lowercase letter from 'a' to 'z'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/regular-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: regex\nCODE:\n```\n\"[^abc]\"\n```\n\nLANGUAGE: regex\nCODE:\n```\n\"[^a-z]\"\n```\n\n----------------------------------------\n\nTITLE: Installing NPM Dependencies with Legacy Peer Dependencies\nDESCRIPTION: Command for installing NPM package dependencies in a scaffolded pluggable widget app when using NPM version 7 or higher, which requires the legacy-peer-deps flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Retrieving Supplier with XPath in Mendix Microflow\nDESCRIPTION: This XPath query retrieves a Supplier object from the database based on the SupplierId from the ProductOverviewVE entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_8\n\nLANGUAGE: xpath\nCODE:\n```\n[SupplierId = $ProductOverviewVE/SupplierId]\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to Epoch in Java (Mendix)\nDESCRIPTION: Demonstrates the use of dateTimeToEpoch function to convert a Date and time value to the number of milliseconds since January 1, 1970, 00:00:00 GMT.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndateTimeToEpoch(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Performing Health Check in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for checking the health of a Mendix application. The health check invokes a configured microflow that reports on the functional status of the application and necessary remote services.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"check_health\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"health\":\"sick\",\n    \"diagnosis\": \"Remote product web service is offline\"\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing ValueStatus Enum for List Items\nDESCRIPTION: Defines an enumeration to represent different status states of list value items, which helps manage data loading and availability in Mendix components\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_14\n\nLANGUAGE: tsx\nCODE:\n```\nexport const enum ValueStatus {\n    Loading = \"loading\",\n    Unavailable = \"unavailable\",\n    Available = \"available\"\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Configuration for Global Operator Managed Namespace\nDESCRIPTION: This command applies a configuration file to a managed namespace in a Global Operator setup for Mendix Private Cloud. It includes the --global flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-cli apply-config -i <namespace-id> -s <namespace-secret> --file <config-file> --global\n```\n\n----------------------------------------\n\nTITLE: Creating Cloud Foundry Manifest Configuration\nDESCRIPTION: YAML configuration for defining Mendix application deployment parameters in Cloud Foundry, specifying application name, disk quota, memory, and service bindings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napplications:\n- name: {app_name}\n  disk_quota: {disk_quota_size}\n  memory: {memory_size}\nservices:\n  - {service_instance}\n```\n\n----------------------------------------\n\nTITLE: Example Widget Configuration Values\nDESCRIPTION: JavaScript object representing example values for a configured widget with a caption, data caption, and three data points.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    caption: \"My graph\",\n    dataCaption: \"Points\",\n    dataPoints: [\n        { x: 0, y: 10 },\n        { x: 1, y: 12 },\n        { x: 2, y: 5 }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest for Studio Pro\nDESCRIPTION: A JSON configuration file that instructs Studio Pro which assemblies to load for the extension. It specifies ToDoExtension.dll as an extension to be loaded at design time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/build-todo-example-extension.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"mx_extensions\": [ \"ToDoExtension.dll\" ],\n  \"mx_build_extensions\": [ ]\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Sort Order on ListValue for Pluggable Widgets\nDESCRIPTION: The setSortOrder method allows pluggable widgets to dynamically control the sort order of a data source. This is part of the enhanced pluggable widget capabilities in Mendix 9.3.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.3.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nsetSortOrder\n```\n\n----------------------------------------\n\nTITLE: Creating Bubble Chart with Marker Styling\nDESCRIPTION: Shows how to configure a bubble chart with colored and sized markers using custom colors and sizes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3 ],\n  \"y\": [ 1, 2, 3 ],\n  \"marker\": {\n    \"color\": [ \"red\", \"blue\", \"green\" ],\n    \"size\": [ 20, 50, 80 ]\n  },\n  \"mode\": \"markers\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Calculating End of Week in Java\nDESCRIPTION: The `endOfWeek` function calculates the end of the week based on the specified initial date. The calculation takes into account the user's locale for determining the start and end of the week.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nendOfWeek(dateTime(2007, 2, 7, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Date Format Token Example\nDESCRIPTION: Example of custom date format tokens used for formatting date/time values in grid columns. Shows common tokens for year, month, day, hour, minute and second formatting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/grids/data-grid/columns.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ny: year\nM: month\nd: day\nh: hour\nm: minute\ns: second\n```\n\n----------------------------------------\n\nTITLE: Restoring Data to Private Cloud Environment using Data Transfer Tool\nDESCRIPTION: This command restores a backup file into the specified environment. It requires the namespace, environment name, and backup file path as parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-data-transfer.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-data-migration restore -n <namespace> -e <environment> -f <file>\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Dark Button\nDESCRIPTION: In this snippet, a Bootstrap button is created with the 'dark' color option. This button can be configured with a link and tooltip as demonstrated in prior snippets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"dark\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Dark\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Screen Reader Caption Configuration for Input Widgets\nDESCRIPTION: Configuration for screen reader captions on specific input widgets when label is hidden, providing accessibility support for web applications\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* [Text Box](/refguide8/text-box/)\n* [Text Area](/refguide8/text-area/)\n* [Drop-down](/refguide8/drop-down/)\n* [Checkbox](/refguide8/check-box/)\n* [Radio Buttons](/refguide8/radio-buttons/)\n```\n\n----------------------------------------\n\nTITLE: JavaScript Variable Export\nDESCRIPTION: Exports a JavaScript constant `companyHeaderTextSize` with a value of 30 from *custom-variables.js*. This constant is used to define the font size for a custom header style in native mobile apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n export const companyHeaderTextSize = 30;\n```\n\n----------------------------------------\n\nTITLE: Defining ListAttributeValue in TypeScript\nDESCRIPTION: This TypeScript snippet defines ListAttributeValue, a function type used to access attribute values of items from a data source. Attributes accessed are read-only.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport type ListAttributeValue<T extends AttributeValue> = (item: ObjectItem) => EditableValue<T>;\n```\n\n----------------------------------------\n\nTITLE: Creating Advanced Custom Configuration for Chart\nDESCRIPTION: This JSON snippet defines global font settings for charts, allowing developers to standardize appearance across their application. It should be integrated in the custom settings of the chart widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/charts-theme.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"font\":{\"family\":\"Open Sans\",\"size\":14,\"color\":\"#555\"}}\n```\n\n----------------------------------------\n\nTITLE: Example Order Database Table Schema\nDESCRIPTION: SQL table structure showing how an Order entity is stored in the database with basic fields\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n| id | number | date |\n| --: | --: | --- |\n| 5 | 5 | 2009-11-27 09:56:45.099 |\n| 8 | 8 | 2008-04-01 08:10:45.053 |\n```\n\n----------------------------------------\n\nTITLE: Implementing XSUAA Auto-Redirect Login\nDESCRIPTION: HTML implementation for automatic redirection to XSUAA login without showing the application login page. This only works when running the app on SAP BTP.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-xsuaa-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n    <head>\n        <script>\n            window.location.assign(\"/xsauaalogin/\")\n        </script>\n    </head>\n</html>\n```\n\n----------------------------------------\n\nTITLE: GUID Notification Action Nanoflow\nDESCRIPTION: Implements ACT_PassGUIDToNotification nanoflow for retrieving objects and displaying notifications with GUID data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_4\n\nLANGUAGE: mendix\nCODE:\n```\nNanoflow: ACT_PassGUIDToNotification\n  1. Retrieve: FirstTestEntityObject (First from Database)\n  2. JavaScript Action: GetGuid($FirstTestEntityObject)\n  3. Create variables:\n     - Title: 'title1'\n     - Subtitle: 'subtitle1'\n     - Body: 'body1'\n     - ActionName: 'OpenPageWithParams'\n  4. JavaScript Action: DisplayNotification\n```\n\n----------------------------------------\n\nTITLE: Using DATEPART to Filter by Year - SQL\nDESCRIPTION: This snippet retrieves entries from the Sales.Period table where the End date falls within the year 2025, utilizing the DATEPART function to extract the year from the date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_25\n\nLANGUAGE: sql\nCODE:\n```\nSELECT End FROM Sales.Period WHERE DATEPART(YEAR, End) = 2025\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Repository in Gradle for Mendix\nDESCRIPTION: This snippet illustrates how to configure a custom repository in Gradle syntax for Mendix. It includes credential management for secure access to the repository.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/managed-dependencies.md#2025-04-21_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\nmaven {\n    url '{url to your custom remote repository}'\n       credentials {\n        username 'user'\n        password 'password'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Order-Customer Association Table Schema\nDESCRIPTION: SQL table structure demonstrating how associations between Order and Customer entities are stored in the database\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\n| module$orderid | module$customerid |\n| --: | --: |\n| 8 | 1 |\n| 5 | 3 |\n```\n\n----------------------------------------\n\nTITLE: Creating Incremental Synchronization Microflow - Mendix\nDESCRIPTION: This microflow retrieves all objects with a changedDate later than a specified date, facilitating incremental syncing of data from the server to the mobile device.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/best-practices/incremental-synchronization.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n1. Add a parameter of type **Date and time**.\n1. Retrieve all objects from the database that have a **changedDate** greater than the parameter.\n1. Synchronize these objects to the device:\n```\n\n----------------------------------------\n\nTITLE: TypeScript Definitions for Image Property Types\nDESCRIPTION: Type definitions for the Image property, showing the structure for static and dynamic image types that can be used in pluggable widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype StaticImage = { type: \"static\"; imageUrl: string; };\ntype DynamicImage = { type: \"dynamic\"; entity: string; };\n\ntype ImageProperty = null | StaticImage | DynamicImage;\n```\n\n----------------------------------------\n\nTITLE: Fixing Query External Database Activity with Newline in Parameter\nDESCRIPTION: Fixed an error which occurred when a new line was part of the parameter value in the Query External Database activity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.12.md#2025-04-21_snippet_4\n\nLANGUAGE: SQL\nCODE:\n```\n-- Example of a query with a newline in parameter\nSELECT * FROM table\nWHERE column = 'value\nwith newline'\n```\n\n----------------------------------------\n\nTITLE: Configuring Attribute Property in Mendix Pluggable Widget\nDESCRIPTION: Example of defining an attribute property with percentage configuration and onChange action in a Mendix widget XML.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_17\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"percentage\" type=\"attribute\" onChange=\"onPercentageChange\">\n\t<caption>Percentage</caption>\n\t<description>Progress percentage</description>\n\t<attributeTypes>\n\t\t<attributeType name=\"Decimal\"/>\n\t\t<attributeType name=\"Integer\"/>\n\t</attributeTypes>\n</property>\n    \n<property key=\"onPercentageChange\" type=\"action\">\n\t<caption>On change</caption>\n\t<description/>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable in App Center for Java Home\nDESCRIPTION: Instructions for adding an environment variable in App Center to ensure compatibility with the Native Mobile Resources module. This sets the JAVA_HOME variable to use Java 11.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-9-parent/nt-6-rn.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"Name\": \"JAVA_HOME\",\n  \"Value\": \"$(JAVA_HOME_11_X64)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Document Template in Mendix\nDESCRIPTION: Sets up a document template using data views, tables, and various template elements to render order details, including customer information, product details, and company logo.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/creating-your-own-documents.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Document Template\nCODE:\n```\nTemplate Components:\n- Data View (Order Details)\n- Tables\n- Table Cells\n- Labels\n- Pictures\n- Line Breaks\n- Template Grid\n```\n\n----------------------------------------\n\nTITLE: Generated HTML Class Format for Mendix Widgets\nDESCRIPTION: Shows the standard HTML class format that Mendix automatically generates for widget elements based on their internal name. Used for styling and testing purposes, particularly with Selenium.\nSOURCE: https://github.com/mendix/docs/blob/development/static/_includes/refguide9/name-property.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nmx-name-{NAME}\n```\n\n----------------------------------------\n\nTITLE: Implementing Text-to-Speech JavaScript Action with Parameter Validation in Mendix\nDESCRIPTION: Initial code for a JavaScript action that checks if text parameter is provided before proceeding. Returns false if no text was provided.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/write-javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport async function TextToSpeech(text) {\n    // BEGIN USER CODE\n    if (!text) {\n        return false;\n    }\n    throw new Error(\"JavaScript action was not implemented\");\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Seconds with Long Type in Java\nDESCRIPTION: This example demonstrates passing values of the Long type to the `addSeconds` function call. It shows how to handle large integer values when adding seconds to a date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\naddSeconds(dateTime(1970, 1, 1, 0, 0, 0), (long)(2147483647 + 100))\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Tue Jan 19 04:15:47 CET 2038\"\n```\n\n----------------------------------------\n\nTITLE: Describing Mendix Widget HTML Class Generation\nDESCRIPTION: Demonstrates how Mendix automatically generates HTML classes for widgets based on their internal name property. The class follows the pattern mx-name-{NAME} where {NAME} is the widget's internal name.\nSOURCE: https://github.com/mendix/docs/blob/development/static/_includes/refguide8/name-property.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nmx-name-{NAME}\n```\n\n----------------------------------------\n\nTITLE: Using SELECT with Alias for a Single Attribute\nDESCRIPTION: This snippet demonstrates selecting a specific attribute from an entity and renaming the result column using an alias. It showcases the usage of aliases for clarity in the output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer.Name AS CustomerName FROM Sales.Customer\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer.Name AS \"Customer_Name\" FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Specifying Widget Toolbox Category\nDESCRIPTION: XML configuration that defines which category the widget will appear under in Studio Pro's toolbox. This helps organize widgets for easier discovery by developers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n   <studioProCategory>Open Street Maps</studioProCategory>\n```\n\n----------------------------------------\n\nTITLE: Styling Badge Widget in Mendix Native Mobile\nDESCRIPTION: JavaScript style object for customizing badge widgets that display text or values. Includes styling for the container and caption text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_badge_Badge = {\n  container: {\n    // This has all ViewStyle properties.\n  },\n  caption: {\n    // This has all TextStyle properties.\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Runtime Resolution for Microflow Execution\nDESCRIPTION: JSON representation of how the microflow execution is resolved in the Mendix Runtime. It specifies the operation type as 'callMicroflow' and includes the microflow name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_20\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {\n        \"MicroflowName\": \"MyFirstModule.GetAllEmployees\"\n    },\n    \"id\": \"5i0E8lZXMFaIhjn/9ZdEYA\",\n    \"parameters\": {},\n    \"type\": \"callMicroflow\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HttpHeader Object for JSON Response in Mendix Microflow\nDESCRIPTION: This code creates an HttpHeader object in a Mendix microflow to specify the Content-Type as JSON for the REST service response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/publish-rest-service.md#2025-04-21_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<member>\\n    <name>Key</name>\\n    <value>'Content-Type'</value>\\n</member>\\n<member>\\n    <name>Value</name>\\n    <value>'application/json'</value>\\n</member>\\n<member>\\n    <name>System.HttpHeaders</name>\\n    <value>$NewHttpResponse</value>\\n</member>\n```\n\n----------------------------------------\n\nTITLE: Database Connection Validation Settings\nDESCRIPTION: Configuration parameters for validating database connections to prevent issues with closed connections in certain deployment scenarios. Available in Mendix 10.6.4+ and 10.8.0+.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\nConnectionPoolingTestOnBorrow=false\nConnectionPoolingTestOnCreate=false\nConnectionPoolingTestOnReturn=false\nConnectionPoolingTestWhileIdle=false\n```\n\n----------------------------------------\n\nTITLE: Basic OQL FROM Clause Syntax\nDESCRIPTION: The full syntax specification for the FROM clause in OQL, showing entity name definition, subquery support, and JOIN syntax options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nFROM\n    {\n        entity_name | ( sub_oql_query )\n    }\n    [ [ AS ] from_alias ]\n\n    {\n        { INNER | { { LEFT | RIGHT | FULL } [ OUTER ] } } JOIN\n        entity_path [ [ AS ] from_alias ]\n        [ ON <constraint> ]\n    } [ ,...n ]\n```\n\n----------------------------------------\n\nTITLE: Checking for Unnecessary Whitespace - Git\nDESCRIPTION: This snippet shows the command to check for unnecessary whitespace before committing changes in Git. It ensures that the codebase remains clean and follows formatting standards.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/contribute-to-a-github-repository.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit diff --check\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Days in Java\nDESCRIPTION: This function trims a date to days by rounding off all hours to zero. It uses the user's time zone. The function takes a Date and time input and returns the same date rounded down to days.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ntrimToDays($myDate)\n```\n\nLANGUAGE: java\nCODE:\n```\n'Sun Jun 08 00:00:00 CEST 2008'\n```\n\n----------------------------------------\n\nTITLE: Proper JOIN Pattern for GROUP BY in OQL v2\nDESCRIPTION: The recommended approach for grouping by associated entity attributes in OQL v2, using a JOIN pattern instead of a direct path in the GROUP BY clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT COUNT(*) AS count\nFROM Module.Person AS P\nJOIN Module.Person/Module.Person_City/Module.City AS C\nGROUP BY C/Name\n```\n\n----------------------------------------\n\nTITLE: Converting String to Integer with Default Value in Mendix\nDESCRIPTION: Usage of the parseInteger function with a default value parameter. This pattern is useful for handling parsing errors when the input string cannot be converted to an Integer/Long value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-integer.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nparseInteger('not_an_integer', 42)\n```\n\n----------------------------------------\n\nTITLE: Converting DateTime to String with toString Function in Java\nDESCRIPTION: Shows how to convert a Date and time value to a string representation using the toString function. Returns the date in a standard format including day, month, date, time, and timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/to-string.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntoString(dateTime(2007))\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix App for Warnings and Deprecations\nDESCRIPTION: This command checks the Mendix app at the specified path for errors, warnings, and deprecations. Suppressed warnings are read from the project-settings.user.json file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_12\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check C:\\\\MxProjects\\\\App-main\\\\App-main.mpr --warnings --deprecations\"\n```\n\n----------------------------------------\n\nTITLE: Joining Subqueries with Specific Duplicate Columns in OQL v2\nDESCRIPTION: Example showing that OQL v2 also allows joining subqueries when they explicitly select attributes with the same name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_9\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM (SELECT Name FROM Module.Person) P\nJOIN (SELECT Name FROM Module.City) C\nON P/Residence = C/Name\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Java Agent Parameters in Mendix 10.19+\nDESCRIPTION: JVM parameters configuration for enabling OpenTelemetry tracing with the Java agent while disabling default instrumentation and enabling only OpenTelemetry API instrumentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/tracing-in-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-javaagent:{/path/to/opentelemetry-javaagent.jar} -Dotel.instrumentation.common.default-enabled=false -Dotel.instrumentation.opentelemetry-api.enabled=true -Dotel.service.name=\"{My App}\"\n```\n\n----------------------------------------\n\nTITLE: Querying Logs with Timezone Parameter\nDESCRIPTION: Example XPath query that retrieves all logs where the DateAttribute falls in the second week of the year specifically in the New York time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[week-from-dateTime(DateAttribute, 'America/New_York') = 2]\n```\n\n----------------------------------------\n\nTITLE: Configuring Selenium Hub with JSON\nDESCRIPTION: JSON configuration file for Selenium Hub defining port, timeout settings, and other hub-specific parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n \"port\": 4444,\n \"newSessionWaitTimeout\": -1,\n \"servlets\" : [],\n \"withoutServlets\": [],\n \"custom\": {},\n \"capabilityMatcher\": \"org.openqa.grid.internal.utils.DefaultCapabilityMatcher\",\n \"throwOnCapabilityNotPresent\": true,\n \"cleanUpCycle\": 5000,\n \"role\": \"hub\",\n \"debug\": false,\n \"browserTimeout\": 0,\n \"timeout\": 1800\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Exclusion Variables for Button Helpers - JavaScript\nDESCRIPTION: This snippet sets the exclusion variable `excludeButtonsHelpers` to `true` to disable helper styles for buttons in native mobile widgets, allowing for custom styling options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nexport const excludeButtonsHelpers = true;\n```\n\n----------------------------------------\n\nTITLE: Filtering Orders by Customer City Using XPath in Mendix\nDESCRIPTION: XPath constraint that filters orders to show only those associated with customers from Rotterdam. The constraint traverses the association from Order to Customer to access the City attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/filtering-data-on-an-overview-page.md#2025-04-21_snippet_4\n\nLANGUAGE: xpath\nCODE:\n```\n[Sales.Order_Customer/Sales.Customer/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: Finding Switch Input Element with jQuery\nDESCRIPTION: jQuery selector code to locate the Switch widget's input element in the DOM. This helps verify if ATS can find the checkbox input element for state manipulation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-02-switch.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$( '.mx-name-switch1 input' )\n```\n\n----------------------------------------\n\nTITLE: Importing Mendix Cmdlets for Deployment - PowerShell\nDESCRIPTION: This script demonstrates how to import Mendix-specific cmdlets into Windows PowerShell to enable deployment automation. The required parameters include the installation directory of the Mendix Service Console.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nImport-Module '{<Mendix Service Console installation directory>}\\Mendix.Service.Commands.dll'\n```\n\n----------------------------------------\n\nTITLE: Creating Internal Links\nDESCRIPTION: This snippet showcases how to create internal links in markdown, which are essential for navigation within the documentation. It demonstrates the use of relative paths for linking.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n[Internal Link](/developerportal/community-tools/indentation-spacing-test/)\n```\n\n----------------------------------------\n\nTITLE: Not Equal To Comparison of Strings in Mendix\nDESCRIPTION: This snippet demonstrates the not equal to relational expression in Mendix, which compares two string values and returns a Boolean value indicating whether the two strings are not equal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\n```java\n\"mystring\" != \"mystring\"\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nFalse\n```\n```\n\n----------------------------------------\n\nTITLE: Defining the hours-from-dateTime Function Syntax in XPath\nDESCRIPTION: Shows the formal syntax for the hours-from-dateTime function, which extracts the hours value from a Date and time attribute. The function accepts the attribute parameter and an optional timezone parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nhours-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Subtracting Quarters using Java\nDESCRIPTION: This function subtracts quarters from a date using either the server's or UTC calendar. The initial date is adjusted by the specified number of quarters, with the input being an integer.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nsubtractQuarters(dateTime(2007, 4, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Converting Mendix App Files - Mendix Command-Line Tool - Plaintext\nDESCRIPTION: The `mx convert` command facilitates converting Mendix app MPK files to a specific Studio Pro version. Users must supply either single or multiple MPK files or a directory for conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nmx convert [OPTIONS] INPUT... OUTPUT\n```\n\n----------------------------------------\n\nTITLE: Adjusting Image Tracker Settings\nDESCRIPTION: This snippet describes how to properly configure the Image Tracker settings to ensure the augmented reality feature overlays the business card accurately.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/augmented-reality/how-to-ar-business-card.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nAfter you have added your business card as an image, remember to adjust the physical size in **Image Tracker (AR)** to the exact size of your business card. Choose the width (the longest side) of your business card for this. This will probably be around 8.5 centimeters.\n```\n\n----------------------------------------\n\nTITLE: Defining Bold Text Style with Custom Fonts\nDESCRIPTION: This snippet demonstrates how to define a text style using the previously defined font family constant for bold text in a Mendix native mobile application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-custom-fonts.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport const boldText = { \n    fontFamily: timesNewRomanFontFamily.bold,\n};\n```\n\n----------------------------------------\n\nTITLE: Azure SQL Server Managed Identity Authentication Command\nDESCRIPTION: Bash command to retrieve Azure access token and connect to SQL Server using managed identity authentication\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\naz account get-access-token --resource https://database.windows.net --output tsv | cut -f 1 | tr -d '\\n' | iconv -f ascii -t UTF-16LE > /tmp/token && sqlcmd -S <hostname> -G -P /tmp/token && rm /tmp/token\n```\n\n----------------------------------------\n\nTITLE: Checking Security of Gradle Dependencies\nDESCRIPTION: This command runs a security analysis on the Gradle dependencies to ensure they do not introduce vulnerabilities into the project. It's important for maintaining the security and integrity of the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/push-notifications.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ gradle dependencyCheckAnalyze\n```\n\n----------------------------------------\n\nTITLE: Database Connection Warning Log\nDESCRIPTION: This is an example of a warning message that appears when the application reaches the connection pool limit.  It indicates the number of active and idle connections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n\"WARNING - ConnectionBus: Database connections: 50 active, 0 idle.\"\n```\n\n----------------------------------------\n\nTITLE: Querying Customers with Unpaid Orders\nDESCRIPTION: This snippet retrieves all customers who have at least one unpaid order. It uses a function within the context of nested customer and order associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order/Sales.Order/HasPayed = false()]\n```\n\n----------------------------------------\n\nTITLE: Using $currentIndex in Mendix Loops\nDESCRIPTION: The $currentIndex variable contains the current number of loop iterations, starting at zero and incrementing with each iteration. For nested loops, it holds the index of the innermost loop.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/loop.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\n$currentIndex\n```\n\n----------------------------------------\n\nTITLE: Cleaning Environment\nDESCRIPTION: POST request to clean all data from a specific environment, requiring the environment to be stopped.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nPOST /api/1/apps/calc/environments/acceptance/clean\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Markdown Document Structure for ATS How-to Guide\nDESCRIPTION: The front matter and structure of a Markdown document explaining how to create custom actions in ATS, including metadata and section organization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-general/custom-action-howto-structure.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Structure for How-tos\"\nurl: /appstore/partner-solutions/ats/ht-one-custom-action-howto-structure/\ndescription: \"Explains the general structure of the how-tos for creating custom actions.\"\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Authentication in REST Call with Access Token\nDESCRIPTION: Shows how to add an HTTP Authorization header to a REST call using an access token obtained from the Access token action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-api-only.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/partners/siemens/mindsphere/mindsphere-api-only/CallRest.png\" alt=\"Authentication\" >}}\n```\n\n----------------------------------------\n\nTITLE: Updating Android SDK Target Version in Gradle\nDESCRIPTION: Configuration snippet for updating Android SDK target version to Android 13 (API level 33) in the build.gradle file. This modification is necessary for targeting newer Android versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-8-parent/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\ncompileSdkVersion 33\ntargetSdkVersion 33\n```\n\n----------------------------------------\n\nTITLE: Check and Request Android 14 Notification Scheduling Permission\nDESCRIPTION: Handles permission checking and requesting for scheduling exact alarms on Android 14 devices using Native Mobile Resources permission actions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-schedule-cancel.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix Nanoflow\nCODE:\n```\n// Check SCHEDULE_EXACT_ALARM Permission\nCheck generic permission:\n  Permission: SCHEDULE_EXACT_ALARM_ANDROID\n\n// Request Permission if Needed\nRequest generic permission:\n  Permission: SCHEDULE_EXACT_ALARM_ANDROID\n```\n\n----------------------------------------\n\nTITLE: JQuery Selectors for Advanced Element Selection in ATS\nDESCRIPTION: JQuery-specific selectors that extend CSS functionality for more specialized element targeting. These selectors can be used in JavaScript execution actions with the jQuery() or $() functions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-selectors.md#2025-04-21_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n:animated\n:checkbox\n:input\n:has(*selector*)\n:parent\n:text\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Danger Button\nDESCRIPTION: This snippet generates an outlined button styled with the color 'danger'. The parameters align with other button variations, ensuring consistency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"outline-danger\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Danger\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Custom Widget Design Properties\nDESCRIPTION: Example JSON configuration for adding design properties to a custom widget with opacity settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n \"pageTemplates\": \"WebModeler\",\n \"cssFiles\": [\"styles/web/css/main.css\"],\n \"designProperties\": {\n  \"MyCustomWidget\": [\n   {\n    \"name\": \"Opacity\",\n    \"type\": \"Dropdown\",\n    \"description\": \"Emphasize the visual-importance via opacity.\",\n    \"options\": [\n     {\n      \"name\": \"Light\",\n      \"class\": \"opacity-light\"\n     },\n     {\n      \"name\": \"Normal\",\n      \"class\": \"opacity-normal\"\n     }\n    ]\n   }\n  ]\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pluggable Widget Tools Version\nDESCRIPTION: Steps to update the pluggable-widget-tools dependency in package.json for React widget compatibility. This ensures the widget build is compatible with React client requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/react.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"@mendix/pluggable-widgets-tools\": \"~9.24.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Mendix SDK Client in TypeScript\nDESCRIPTION: Creates a MendixSdkClient instance with user credentials for interacting with the Mendix Platform SDK. Requires a valid Mendix account username and API key.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-creating-your-first-script.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst client = new MendixSdkClient(username, apikey);\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Secret for Custom CA Certificates in Kubernetes\nDESCRIPTION: Shell command for creating a Kubernetes secret in standard Kubernetes that contains custom CA certificates. The command creates a generic secret in the specified namespace using the contents of the custom.crt file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-standard-operator.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} create secret generic {secret} --from-file=custom.crt=custom.crt\n```\n\n----------------------------------------\n\nTITLE: Adding Constant for Unique Snippet Names in Mendix Studio Pro\nDESCRIPTION: Shows how to add a constant in Mendix Studio Pro to enable unique snippet names, which improves ATS Recorder's ability to distinguish between snippets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-increase-recorder-helper-coverage.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nName: EnableScopedSeleniumClasses\nType: Boolean\nDefault value: True\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Danger Button\nDESCRIPTION: This snippet generates a Bootstrap button styled with the color 'danger'. Links to the Bootstrap documentation for buttons with customizable parameters included.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"danger\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Danger\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: HTTP Method and URL for Upload Package API\nDESCRIPTION: Defines the HTTP method and URL format for uploading a deployment package to a specific Mendix Cloud app, allowing developers to prepare packages for deployment to environments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: POST\nURL: https://deploy.mendix.com/api/v2/apps/<AppId>/packages/upload?name=<PackageName>\n```\n\n----------------------------------------\n\nTITLE: Simple Preview Component for a Pluggable Widget\nDESCRIPTION: A React functional component implementing a basic preview for a pluggable widget with string properties for content and style.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\ntype Props = {\n    content: string;\n    style: string;\n    class: string;\n}\n\nexport const preview: React.FC<Props> = (props) => (\n    <div className={`my-pw-container ${props.class}`} style={props.style}>\n        {props.content}\n    </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Defining iOS Splash Screens Config Interface\nDESCRIPTION: This code snippet defines the interface for the iOS splash screens configuration, showing the structure of the required JSON file.  It includes properties for image size, idiom, scale, type and filename, along with a version number for backwards compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_6\n\nLANGUAGE: JSON\nCODE:\n```\n```json\ninterface AndroidSplashScreensConfig {\n      \"images\": Array<{\n              \"size\": \"640x960\" | \"375x667\" | \"414x736\",\n              \"idiom\": \"universal\",\n              \"scale\": \"1x\" | \"2x\" | \"3x\",\n              \"type\": \"splashScreen\",\n              \"filename\": string\n          }>,\n      \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Synchronize - Event Description\nDESCRIPTION: This snippet provides a description of the 'Synchronize' event, which is responsible for syncing local data with the server database in Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/on-click-event.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\nThe **Synchronize** event [synchronizes](/refguide8/offline-first/#synchronization) the data stored locally on your device with the server database.\n```\n\n----------------------------------------\n\nTITLE: Creating Custom DateTime Function in SQL Server\nDESCRIPTION: SQL query to create a custom function for converting UTC datetime to local datetime, requiring db_ddladmin or db_owner role with ALTER SCHEMA permissions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/sql-server/troubleshooting-sql-server.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nCREATE FUNCTION [dbo].[mx_toLocalDateTime] (@utcDateTime datetime, @dstTimeZone nvarchar(50)) RETURNS datetime AS EXTERNAL NAME [Mendix.SqlServerExtensions].[Mendix.SqlServerExtensions.DateTimeLocalizer].[ConvertToLocalDateTime];\n```\n\n----------------------------------------\n\nTITLE: ATS Custom Selector Patterns\nDESCRIPTION: Custom selector patterns specific to ATS that can be used like CSS3 selectors in custom actions. These include clickable, containsExact, containsText, and value selectors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/rg-one-selectors.md#2025-04-21_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\n:clickable\n:containsExact(text)\n:containsExactCase(text)\n:containsRegex(regex)\n:containsText(text)\n:val(text)\n```\n\n----------------------------------------\n\nTITLE: Alert Snippet Info\nDESCRIPTION: Markdown alert snippet describing immediate commit behavior when uploading files.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/file-widgets/file-manager.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\\nWhen uploading a file through the file manager, the FileDocument object will be committed immediately.\\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Layout Grid CSS Classes in Mendix\nDESCRIPTION: CSS classes for configuring layout grids in Mendix applications, including vertical alignment and gutter adjustments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_5\n\nLANGUAGE: CSS\nCODE:\n```\n/* Layout grid styling */\n.v-center { /* vertically aligns elements in a Bootstrap row */ }\n.no-gutter { /* removes padding for Bootstrap columns */ }\n\n/* For responsive phone layouts */\n.col-xs-N { /* where N is the size of the column */ }\n```\n\n----------------------------------------\n\nTITLE: Custom Mendix Components JSON Configuration\nDESCRIPTION: Example of a customized components.json file that adds an additional JavaScript file 'myOwnCode.js' to the default configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/hybrid-mobile/customizing-hybrid-mobile-apps.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    \"files\": {\n        \"css\": [\"styles/web/css/main.css\"],\n        \"js\": [\n\t\t\"mxclientsystem/mxui/mxui.js\",\n\t\t\"myOwnCode.js\"\n\t]\n    },\n    \"cachebust\": \"{{cachebust}}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTTP Response Object in Microflow\nDESCRIPTION: Creates an HttpResponse object with status code 200 (OK), the JSON content, and HTTP version 1.1 for the REST service response.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/httpResponse.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Runtime Resolution for Object Edit Operation\nDESCRIPTION: JSON representation of how the edit operation is resolved in the Mendix Runtime. It specifies the operation type as 'commit' and includes the operation ID and parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"constants\": {},\n    \"id\": \"EjuFdBJ7EUC93YSYtlb7Mg\",\n    \"parameters\": {\n        \"Objects\": [\n            \"AnyObjectList\"\n        ]\n    },\n    \"type\": \"commit\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating an OpenShift Route for Grafana UI Access\nDESCRIPTION: Command to create an OpenShift Route resource to expose the Grafana UI externally. This creates an Edge-terminated TLS route for secure access to the Grafana interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\noc --namespace {project} create route edge loki-grafana --service=loki-grafana --insecure-policy=Redirect\n```\n\n----------------------------------------\n\nTITLE: Example of Values API Object in JavaScript\nDESCRIPTION: Demonstrates the structure of a JavaScript object that represents values configured for a pluggable widget's properties, where the property's key is used as the object property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    stringProp: \"Some value\",\n    intProp: 42\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Authtoken in Native Mobile - Old Implementation\nDESCRIPTION: Legacy code showing how auth tokens were previously accessed using AsyncStorage in native mobile applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.8.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport AsyncStorage from \"@react-native-community/async-storage\";\n...\nawait this.store.setItem(key, value)\n...\n```\n\n----------------------------------------\n\nTITLE: Correcting DATEDIFF Function in HSQLDB\nDESCRIPTION: This fix addresses an issue in the DATEDIFF() function for HSQLDB where the result was off by 1 day due to time zone differences.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.20.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nDATEDIFF()\n```\n\n----------------------------------------\n\nTITLE: Displaying Page Title Example in Markdown\nDESCRIPTION: This snippet demonstrates how to include an image of a Page Title widget example using Markdown syntax in Hugo.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/text-widgets/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/pages/text-widgets/page-title-design-properties-example.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Deploying Resources Manually with kubectl\nDESCRIPTION: Example of manually creating Kubernetes resources using kubectl commands. This method is quick but requires knowledge of internal application configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-technical-appendix/private-cloud-technical-appendix-01.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create pod\nkubectl apply\n```\n\n----------------------------------------\n\nTITLE: SQL Queries for Employee Retrieval\nDESCRIPTION: SQL queries executed to fetch employee data and count total records\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n ORDER BY \"myfirstmodule$employee\".\"firstname\" ASC,\n \"myfirstmodule$employee\".\"id\" ASC LIMIT 20\n SELECT COUNT(*)\n FROM \"myfirstmodule$employee\"\n```\n\n----------------------------------------\n\nTITLE: Finding Switch Widget Element with jQuery\nDESCRIPTION: jQuery selector code to find the Mendix Switch widget element using its class name and mx-name identifier. This is used to locate the correct element for interaction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-02-switch.md#2025-04-21_snippet_0\n\nLANGUAGE: jQuery\nCODE:\n```\n$('.mx-name-switch1 .widget-switch')\n```\n\n----------------------------------------\n\nTITLE: SCSS Variable Definition\nDESCRIPTION: Defines a SCSS variable `$company-header-text-size` within the *custom-variables.scss* file.  This variable can then be referenced in other SCSS files to maintain a consistent font size throughout the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\n $company-header-text-size: 30px;\n```\n\n----------------------------------------\n\nTITLE: Reinstalling NPM Dependencies with Legacy Peer Deps\nDESCRIPTION: Provides a tip for reinstalling NPM package dependencies with extra flags if using NPM version 7 or higher, ensuring compatibility in the widget development environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Page Title Widget Structure in Mendix Native Mobile Apps\nDESCRIPTION: This XML structure shows how a Page Title widget is composed in Mendix native mobile apps, with a container wrapping a text element that displays the page title.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<text>Page Title</text>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Converting String to Lowercase using OQL LOWER Function\nDESCRIPTION: The LOWER function takes a string expression as input and returns the same string with all uppercase characters converted to lowercase. It is used in OQL queries to perform case-insensitive string operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-lower.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nLOWER ( expression )\n```\n\n----------------------------------------\n\nTITLE: Retrieving Server Statistics in Mendix Runtime (JSON)\nDESCRIPTION: This endpoint provides information about the embedded Jetty web server, including connection details and threadpool statistics for the runtime port request handler.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\" : \"server_statistics\",\n  \"params\":{}\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"jetty\":{\n      \"current_connections\":0,\n      \"max_connections\":0,\n      \"max_idle_time_s\":200\n    },\n    \"threadpool\": {\n      \"idle_threads\":3,\n      \"max_threads\":254,\n      \"threads_priority\":5,\n      \"threads\":8,\n      \"max_queued\":-1,\n      \"min_threads\":8,\n      \"max_idle_time_s\":60,\n      \"max_stop_time_s\":0\n    }\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: XML Instance Example\nDESCRIPTION: Example XML instance that conforms to the customer schema definition, showing the structure with name and shoesize elements including the country attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/xml-schemas/xml-schema-support.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<customer xmlns=\"http://www.example.com/\">\n  <name>John Doe</name>\n  <shoesize country=\"GB\">8</shoesize>\n</customer>\n```\n\n----------------------------------------\n\nTITLE: Simple CASE Expression in OQL\nDESCRIPTION: Demonstrates the syntax for a simple CASE expression in OQL. This form compares an input expression against multiple WHEN clauses and returns the corresponding result expression when a match is found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/oql-case-expression.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCASE input_expression\nWHEN when_expression THEN result_expression [ ...n ]\nELSE else_result_expression\nEND\n```\n\n----------------------------------------\n\nTITLE: RIGHT OUTER JOIN Syntax in OQL\nDESCRIPTION: The syntax for RIGHT OUTER JOIN in OQL, which returns all rows from the right entity and matched rows from the left entity, with NULL values for unmatched left entity rows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nRIGHT [ OUTER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: RIGHT OUTER JOIN on Association in OQL\nDESCRIPTION: This query shows how to perform a RIGHT OUTER JOIN using an association between entities, which is more efficient when a relationship exists in the data model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_23\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nRIGHT OUTER JOIN Cust/Sales.Request_Customer/Sales.Request Req\n```\n\n----------------------------------------\n\nTITLE: Defining Android Icons Config Interface\nDESCRIPTION: This code snippet defines the interface for the Android icons configuration, specifying the structure of the JSON file used to configure Android app icons. It includes properties for directory (mipmap), filename, title, and a version number.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_4\n\nLANGUAGE: JSON\nCODE:\n```\n```json\ninterface AndroidIconsConfig {\n    \"images\": Array<{\n            \"directory\": \"mipmap-mdpi\" | \"mipmap-hdpi\" | \"mipmap-xhdpi\" | \"mipmap-xxhdpi\"\n            \"filename\": \"ic_launcher.png\" | \"ic_launcher_round.png\"\n            \"title\": string\n        }>,\n    \"version\": 1\n}\n```\n```\n\n----------------------------------------\n\nTITLE: LEFT OUTER JOIN Syntax in OQL\nDESCRIPTION: The syntax for LEFT OUTER JOIN in OQL, which returns all rows from the left entity and matched rows from the right entity, with NULL values for unmatched right entity rows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-from-clause.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nLEFT [ OUTER ] JOIN entity_path [ ON <constraint> ]\n```\n\n----------------------------------------\n\nTITLE: Checking Tekton Components - Bash\nDESCRIPTION: This command checks the status of all Tekton components running in the specified namespace. It provides insight into the operational health of the Tekton setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/_index.md#2025-04-21_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get po -n tekton-pipelines\n```\n\n----------------------------------------\n\nTITLE: Querying Orders Below a Price Threshold\nDESCRIPTION: This snippet retrieves all orders where the total price is less than 50.00 euros. It showcases the use of the less-than comparison operator in an XPath expression.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Order[TotalPrice < 50.00]\n```\n\n----------------------------------------\n\nTITLE: Finding Result Element with jQuery Contains Selector\nDESCRIPTION: jQuery selector code to find a specific result element in the AutoComplete dropdown using the contains selector. Used to locate and verify the presence of specific option text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-10-autocomplete.md#2025-04-21_snippet_1\n\nLANGUAGE: jquery\nCODE:\n```\n$('.select2-results .autoCompleteResult:contains(\"ATS Option 11\")')\n```\n\n----------------------------------------\n\nTITLE: Generating Random Numbers in Mendix Using Java\nDESCRIPTION: The 'random' function generates a random decimal number between 0.0 and 1.0. This function is essential for applications requiring randomization, such as games or simulations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nrandom()\n```\n\nLANGUAGE: java\nCODE:\n```\n0.3\n```\n\n----------------------------------------\n\nTITLE: Including Basic Functions Snippet in Markdown\nDESCRIPTION: This snippet references a markdown file that contains functions related to the widgets. It is used to include a set of predefined basic functions applicable to widgets within the Mendix environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/data-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/performing-basic-functions-widgets.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Using Unary Minus with a Variable in Mendix\nDESCRIPTION: This example shows how to apply the unary minus operator to a variable, which negates its value. When used with an already negative variable, it produces a positive result.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/unary-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-$myVariable\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Host and Port in .m2eerc\nDESCRIPTION: Sets the proxy server address and port in the .m2eerc configuration file using JVM system properties http.proxyHost and http.proxyPort.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/using-a-proxy-to-call-a-webservice.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n...\n# custom java options, like -Xmx256m or -Djava.foo=bar\n javaopts: [ ..., \"-Dhttp.proxyHost=myproxyserver.com\", \"-Dhttp.proxyPort=3128\"]\n...\n```\n\n----------------------------------------\n\nTITLE: Matching String with Regular Expression using isMatch Function in Java\nDESCRIPTION: The isMatch function checks if a string matches a given regular expression. It takes two string parameters: the string to match and the regular expression pattern. It returns a boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nisMatch('234hello6432', '^([0-9]+)$')\n```\n\nLANGUAGE: java\nCODE:\n```\nFalse\n```\n\n----------------------------------------\n\nTITLE: @AfterTest Method for Closing Browser\nDESCRIPTION: Closes Firefox browser post-test execution. Ensures resources are released and the browser is closed after tests. Requires Selenium WebDriver.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n@AfterTest\npublic void afterTest() {\n    driver.close();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Warning Button\nDESCRIPTION: This snippet demonstrates creating a Bootstrap button styled with the color 'warning'. The button features link and tooltip capabilities, allowing customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"warning\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Warning\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: SQL DATEDIFF Function Consistency Fix\nDESCRIPTION: Fix for DATEDIFF function in OQL to ensure consistent behavior across PostgreSQL, Oracle, and other databases when calculating week differences.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.0.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nDATEDIFF\n```\n\n----------------------------------------\n\nTITLE: Basic Subquery in FROM Clause in SQL\nDESCRIPTION: Shows how to use a subquery in the FROM clause to create a derived table. This example selects all records from the Customer table and renames it as Cust.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_53\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName\nFROM (\n\t\tSELECT *\n\t\tFROM Sales.Customer\n\t) AS Cust\n```\n\n----------------------------------------\n\nTITLE: Specific Location Filtering: New Amsterdam, Guyana\nDESCRIPTION: Shows how to refine location queries to specify customers in New Amsterdam, Guyana by extending conditions to the country attribute in the query path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: StudioPro\nCODE:\n```\n[Sales.Customer_Address/Sales.Address[City = 'New Amsterdam']/Sales.Address_Country/Sales.Country/Name = 'Guyana']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address[City = 'New Amsterdam']/Sales.Address_Country/Sales.Country/Name = 'Guyana']\n```\n\n----------------------------------------\n\nTITLE: Using XPath not() Function with Associations in Java\nDESCRIPTION: This query finds all customers who have not placed at least one order by using the not() function with an association path. It returns customers with zero orders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order)]\n```\n\n----------------------------------------\n\nTITLE: Introducing countable property in ODataRemoteEntitySource Element\nDESCRIPTION: This snippet refers to the new `countable` property within the ODataRemoteEntitySource element, which allows checking if an entity is countable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.16.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n* We introduced the `countable` property to answer: \"Is the entity countable?\"\n```\n\n----------------------------------------\n\nTITLE: Checking Runtime Status in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for retrieving the current status of the Mendix Runtime. Possible statuses include created, starting, broken, running, stopping, and stopped.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"runtime_status\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"status\":\"running\"\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Render Method for Collapsible Widget\nDESCRIPTION: This snippet shows how to update the render method to use the new renderHeader method for the collapsible widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_25\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            {this.renderHeader()}\n            {this.renderContent()}\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Exporting the Module with Gradle\nDESCRIPTION: The snippet exports the module and its dependencies for distribution via the Mendix Marketplace. It saves the exported module to the specified directory, ready for submission or sharing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/push-notifications.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ gradle extractModule\n```\n\n----------------------------------------\n\nTITLE: Reloading Page with State in Mendix\nDESCRIPTION: JavaScript code snippet used in an HTML/JavaScript widget to force reload the page when changing a user's language settings. This ensures language changes are immediately applied.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmx.reloadWithState();\n```\n\n----------------------------------------\n\nTITLE: Parsing Backup Metadata JSON Structure\nDESCRIPTION: Example JSON metadata file describing backup details such as duration, dump size, model version, database size, and files size\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/backups/restore-backup.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"duration\":\"0\",\n    \"dumpSize\":\"94769\",\n    \"modelVersion\":\"1.0.0.40\",\n    \"databaseSize\":\"9730584\",\n    \"filesSize\":\"1346575\"\n}\n```\n\n----------------------------------------\n\nTITLE: List View Widget Structure in Mendix Native Mobile Apps\nDESCRIPTION: This XML structure shows how a List View widget is composed in a Mendix native mobile app, with a container element containing multiple listItem elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<listItem>content</listItem>\n\t<listItem>content</listItem>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Traversing Associations in XPath Queries for Mendix\nDESCRIPTION: This XPath query follows the path from the Customer entity to the Order entity over the Customer_Order association. The '/' token is used to refer to new entities or associations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_2\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer/Sales.Customer_Order/Sales.Order\n```\n\n----------------------------------------\n\nTITLE: LEFT OUTER JOIN in OQL\nDESCRIPTION: This example shows how to use a LEFT OUTER JOIN in OQL, which returns all rows from the left entity and matching rows from the right entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_20\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nLEFT OUTER JOIN Sales.Request Req ON Cust.LastName = Req.CustomerName\n```\n\n----------------------------------------\n\nTITLE: Cross-Site Request Forgery Prevention JavaScript\nDESCRIPTION: JavaScript code demonstrating how to set the CSRF token header when making an XMLHttpRequest to a REST service, preventing cross-site request forgery\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-service/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar xmlHttp = new XMLHttpRequest();\nxmlHttp.open(\"GET\", \"http://mysite/rest/myservice/myresource\", false);\nxmlHttp.setRequestHeader(\"X-Csrf-Token\", mx.session.getConfig(\"csrftoken\"));\nxmlHttp.send(null);\n```\n\n----------------------------------------\n\nTITLE: Jira Integration Configuration Metadata\nDESCRIPTION: YAML front matter defining metadata for the Jira integration documentation page, including title, URL, weight, and description\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/developerportal/digital-execution/portfolio-management/integrate-with-jira.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Integrate with Jira\"\nurl: /developerportal/portfolio-management/integrate-with-jira/\nweight: 40\ndescription: \"Describes how to integrate the Portfolio Management Tool with Jira.\"\nbeta: true\n---\n```\n\n----------------------------------------\n\nTITLE: Retrieving Product by ID using XPath in Mendix Microflow\nDESCRIPTION: XPath constraint expression used in a retrieve activity to fetch a specific Product object based on the ProductId from a ProductOverviewVE parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_3\n\nLANGUAGE: xpath\nCODE:\n```\n[(ProductId = $ProductOverviewVE/ProductId)]\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Info Block for Clone Type\nDESCRIPTION: Provides information about Git clone types available from Mendix version 9.24.28.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/version-control-menu/download-from-version-control-dialog.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nFrom Mendix version 9.24.28, either a full or partial clone will be downloaded when using Git, depending on the [Clone type](/refguide9/clone-type/) set for your app.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Customer Entity in Domain Model\nDESCRIPTION: Defines a Customer entity in the domain model that will be exposed through the web service. This is the data structure that will be available to external systems.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/published-web-services/expose-a-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/expose-a-web-service/8945665.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Alert Block in Markdown\nDESCRIPTION: A Markdown alert block warning about Excel file format compatibility between batch replace and batch translate features.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/batch-replace.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nThe formats of the Excel files for batch replace and batch translate are similar. You will be warned if you try to import a batch translate file or a batch replace file with the wrong language but you can still import it if you ignore the warning.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Example of Widget Properties with List and Action Types\nDESCRIPTION: Shows how to define widget properties that include a datasource (ListValue) and a list action (ListActionValue) in a TypeScript interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/client-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MyListWidgetsProps {\n    myDataSource: ListValue;\n    myListAction: ListActionValue;\n}\n```\n\n----------------------------------------\n\nTITLE: Infinite Loop Stack Overflow Example - Java\nDESCRIPTION: A simple example showing how to create a stack overflow error by implementing an infinite loop in a Mendix microflow. The microflow calls itself recursively without an exit condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/runtime-java/runtime-java-errors.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nMicroflow {\n    MicroflowCallAction(Microflow)\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced OpenTelemetry Registry in Mendix\nDESCRIPTION: Extended OpenTelemetry configuration with delta aggregation temporality, headers, and resource attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"opentelemetry\",\n    \"settings\": {\n      \"url\": \"https://otlp.example.com:4318/v1/metrics\",\n      \"aggregationTemporality\": \"delta\",\n      \"step\": \"20s\",\n      \"headers\": \"header1=value1,header2=value2\",\n      \"resourceAttributes\": \"service.name=shoppingcart,env=test\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Including Label Properties Section\nDESCRIPTION: This snippet includes details about the label section for the Password text box widget. It outlines how the label should be managed and displayed alongside the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Deleting Package via HTTP DELETE\nDESCRIPTION: Deletes a specific deployment package from an app. Returns error if package is in use.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/build-api.md#2025-04-21_snippet_4\n\nLANGUAGE: http\nCODE:\n```\nDELETE /api/1/apps/calc/packages/b3d14e53-2654-4534-b374-9179a69ef3cf HTTP/1.1\nHost: deploy.mendix.com\nAccept: */*\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Installing NFC Manager Dependency via npm\nDESCRIPTION: This PowerShell command installs the react-native-nfc-manager package version 1.2.2 via npm in the project's JavaScript actions directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\ncd C:\\MendixApps\\NativeNFC\\javascriptsource\\nativenfc\\actions\nnpm install react-native-nfc-manager@1.2.2\n```\n\n----------------------------------------\n\nTITLE: Getting the Key of an Enumeration - Java\nDESCRIPTION: This snippet illustrates how to use the getKey function to retrieve the technical name (key) of an enumeration value in Mendix, which is language independent.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ngetKey($Customer/Grade)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Golden\"\n```\n\n----------------------------------------\n\nTITLE: Creating Model Elements - Intermediate Factory Approach\nDESCRIPTION: Transition method for creating model elements using factory methods, requiring explicit model reference and manual parent registration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/model-sdk/model-sdk-1.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction newEntity(domainModel: domainmodels.DomainModel, name: string) {\n\tvar entity = domainmodels.Entity.create(domainModel.model);\n\tdomainModel.entities.push(entity);\n\tentity.name = name;\n\n\treturn entity;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Progress Percentage in Viewer Widget\nDESCRIPTION: This code snippet shows how to set the Progress percentage property in the Viewer widget to update the LoadingProgress attribute of the PageObject entity. This allows real-time updating of the loading progress.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: Mendix\nCODE:\n```\nProgress percentage: PageObject/LoadingProgress\n```\n\n----------------------------------------\n\nTITLE: Using LessThan Filter Helper in TypeScript\nDESCRIPTION: Shows how to use the lessThan helper to filter items where a value is less than a specified number. Compatible with String, HashString, Enumeration, AutoNumber, Integer, Long, Decimal, and DateTime attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\nconst attr = attribute(this.props.myAttributeA.id);\nconst meaningOfLife = literal(new BigJS(42));\n\n// filter keeps items where value is less than 42\nconst filterCondition = lessThan(attr, meaningOfLife);\n```\n\n----------------------------------------\n\nTITLE: Using Or Logic Condition Helper in Mendix TypeScript\nDESCRIPTION: Demonstrates how to use the or helper to combine multiple conditions with logical OR. At least one combined condition must be true for an item to be included in the filtered results. Takes two or more condition arguments.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_40\n\nLANGUAGE: typescript\nCODE:\n```\nconst filterCondition = or(\n    endsWith(attribute(this.props.myAttributeA.id), literal(\"Z\")), // myAttributeA ends with string \"Z\"\n    graterThan(attribute(this.props.myAttributeB.id), literal(10)), // myAttributeB greater that 10\n    equals(attribute(this.props.myAttributeC.id), literal(true)) // myAttributeC equals True\n);\n```\n\n----------------------------------------\n\nTITLE: Basic GROUP BY Syntax in OQL\nDESCRIPTION: Demonstrates the syntax structure for the GROUP BY clause in OQL. It shows how to group by one or more expressions and optionally use a HAVING clause to filter the grouped results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-group-by-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nGROUP BY\n    expression [ ,...n ]\n\n[HAVING <constraint>]\n```\n\n----------------------------------------\n\nTITLE: GET Request for Mendix Environment Access Logs\nDESCRIPTION: Example API request to retrieve access logs for a specific Mendix environment. Requires authentication via Mendix-Username and Mendix-ApiKey headers. The request includes app ID, environment mode, and date parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/1/apps/calc/environments/acceptance/access-logs/2021-06-12\nHost: deploy.mendix.com\n\nContent-Type: application/json\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Selecting Microflow Button in Mendix with Selenium\nDESCRIPTION: JavaScript code demonstrating how to select a Microflow button named 'Execute' using CSS selector in Selenium. The selector uses Mendix's mx-name- prefix convention.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/selenium-support.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$('.mx-name-Execute')\n```\n\n----------------------------------------\n\nTITLE: Greater Than or Equal To Comparison in Mendix\nDESCRIPTION: This snippet demonstrates a greater than or equal to comparison in Mendix. It compares two integer values and returns a boolean value based on whether the first value is greater than or equal to the second.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n\"4>=3\"\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year, Month, Day, Hour, and Minute Parameters\nDESCRIPTION: Creates a datetime object using year, month, day, hour, and minute parameters. Returns date set to specified time of given date.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1, 1, 1, 1)\n```\n\n----------------------------------------\n\nTITLE: Sorting Objects with OData $orderby\nDESCRIPTION: Demonstrates how to sort query results using the $orderby option. This example sorts employees by name in ascending order.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_6\n\nLANGUAGE: OData\nCODE:\n```\n?$orderby=Name asc\n```\n\n----------------------------------------\n\nTITLE: Using Personal Access Token for Authentication\nDESCRIPTION: Example HTTP request demonstrating how to authenticate with the App Repository API using a Personal Access Token in the Authorization header.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nGET /repositories/d92064a5-b1fd-4be4-97db-53fc90201d1c/info HTTP/1.1\nAuthorization: MxToken 7LJE…vk\n```\n\n----------------------------------------\n\nTITLE: Creating Entities and Attributes in Mendix Domain Model\nDESCRIPTION: Steps to create a Customer entity with attributes in Mendix Studio Pro. The entity includes basic properties like name, email, and address.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/create-a-basic-data-layer.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nEntity: Customer\nAttributes:\n- Name (String)\n- Email (String)\n- Address (String)\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Header\nDESCRIPTION: Frontmatter metadata for a documentation page about Web API extensibility release notes, including title, URL, and page weight configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/web-extensibility-api.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Extensibility: Web API Release Notes\"\nlinktitle: \"Extensibility: Web API\"\nurl: /releasenotes/studio-pro/web-extensibility-api/\nweight: 45\nnumberless_headings: true\n---\n```\n\n----------------------------------------\n\nTITLE: Showing Configured Java Version - Mendix Command-Line Tool - Plaintext\nDESCRIPTION: The `mx show-java-version` command displays the configured Java version for a Mendix app based on the provided MPR file. This command is available from a specific version of the tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmx show-java-version INPUT\n```\n\n----------------------------------------\n\nTITLE: Retrieving ProductOverviewVE with XPath in Mendix Nanoflow\nDESCRIPTION: This XPath query retrieves a ProductOverviewVE object that corresponds to a newly created Product object, using the ProductId for matching.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/entities/view-entities/view-entity-overview-pages.md#2025-04-21_snippet_9\n\nLANGUAGE: xpath\nCODE:\n```\n[(ProductId = $NewProduct/ProductId)]\n```\n\n----------------------------------------\n\nTITLE: Branches Response Payload with Pagination\nDESCRIPTION: JSON response format from the branches endpoint showing paginated results with branch details and cursor navigation for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"items\": [\n    {\n      \"name\": \"trunk\",\n      \"latestCommit\": {\n        \"id\": \"42\",\n        \"author\": {\n          \"name\": \"John Doe\",\n          \"email\": \"john.doe@example.com\"\n        },\n        \"date\": \"2021-05-31T15:00:00.000Z\",\n        \"message\": \"My commit message\",\n        \"mendixVersion\": \"8.18.5.18651\",\n        \"relatedStories\": [{ \"id\": \"1234567\" }, { \"id\": \"2345678\" }]\n      }\n    },\n    <more items>...\n  ],\n  \"cursors\": {\n    \"first\": \"Rmlyc3RQYWdlQ3Vyc29y\",\n    \"prev\": \"UHJldmlvdXNQYWdlQ3Vyc29y\",\n    \"next\": \"TmV4dFBhZ2VDdXJzb3I=\",\n    \"last\": \"TGFzdFBhZ2VDdXJzb3I=\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Example_RBAC Table in Snowflake\nDESCRIPTION: SQL query to select item and region data from the Example_RBAC table in Snowflake. This query demonstrates basic data retrieval within the RBAC context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT ITEM,\n       Region,  \n       FROM EXAMPLE_RBAC;\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Months in Java\nDESCRIPTION: The trimToMonths function trims the date to months by rounding off all days to zero. It employs the user's time zone settings, with a UTC option available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\ntrimToMonths($myDate)\n```\n\n----------------------------------------\n\nTITLE: Use of Alert Shortcodes in Lists Markdown\nDESCRIPTION: This snippet illustrates the use of alert shortcodes within list items in Markdown, with a focus on how they can affect the surrounding text and indents. It includes alerts for various statuses, showcasing the visual formatting aspects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1. First list item\n2. Second list item\n{{% alert color=\"info\" %}}\nMy alert box\n{{% / alert %}}\n3. Third list item\n    * Sub-list item\n{{% alert color=\"info\" %}}\nMy alert box\n{{% / alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Mendix App with Specific Name and Output Directory\nDESCRIPTION: This command creates a new Mendix app with the specified name in the specified output directory, using all other default parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_6\n\nLANGUAGE: Text\nCODE:\n```\n\"mx create-project --app-name MyFirstApp --output-dir C:\\\\Projects\\\\MyFirstApp\"\n```\n\n----------------------------------------\n\nTITLE: Updating Team Member Permissions in JSON\nDESCRIPTION: JSON structure for updating a team member's permissions, specifying various access rights for different operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-4.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"member\": {\n    \"userId\": \"john.doe@domain.tld\"\n  },\n  \"canDeployApp\": \"true\",\n  \"canManageBackups\": \"false\",\n  \"canViewAlerts\": \"false\",\n  \"canAccessAPI\": \"false\",\n  \"canViewLogs\": \"false\",\n  \"canManagePrivileges\": \"false\"\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Class Generation for Widget Names in Mendix\nDESCRIPTION: The widget DOM element automatically includes a class with the format 'mx-name-{NAME}' based on the internal name property, which can be utilized for Selenium testing.\nSOURCE: https://github.com/mendix/docs/blob/development/static/_includes/refguide/name-property.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nmx-name-{NAME}\n```\n\n----------------------------------------\n\nTITLE: Importing Spreadsheet in Mendix Studio Pro\nDESCRIPTION: Process for creating a new Mendix application by importing an Excel spreadsheet, converting data into domain model components\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-from-spreadsheet.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix Studio Pro Steps\nCODE:\n```\n1. Open Studio Pro\n2. Choose 'Create New App'\n3. Select 'App from a spreadsheet' starting point\n4. Upload Excel spreadsheet (*.xlsx)\n5. Preview and customize data import\n```\n\n----------------------------------------\n\nTITLE: Initializing Histogram Chart Configuration in JSON\nDESCRIPTION: This snippet outlines the configuration for a histogram in JSON format, defining the x values to be plotted. The output will be a histogram showing the distribution of the provided x values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 0, 2, 1, 3, 4, 2 ],\n  \"type\": \"histogram\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section in Drop-Downs\nDESCRIPTION: This snippet outlines visibility settings for drop-down widgets, helping to determine when and how these widgets are displayed to users.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/drop-down.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Subtraction in Mendix Expressions\nDESCRIPTION: Demonstrates how to subtract one number from another in Mendix expressions. The operation returns an Integer/Long if both inputs are Integer/Long, or a Decimal if either input is a Decimal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n5 - 4\n```\n\nLANGUAGE: java\nCODE:\n```\n1\n```\n\n----------------------------------------\n\nTITLE: Setting Search Parameter in Mendix Microflow\nDESCRIPTION: Sets the search parameter for the REST service call in a Mendix microflow. This determines the search criteria for filtering data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_8\n\nLANGUAGE: Expression\nCODE:\n```\nif $Paging/Name = empty then '' else $Paging/Name\n```\n\n----------------------------------------\n\nTITLE: Importing NFC Manager with Ndef for Tag Reading\nDESCRIPTION: This code imports the NFC Manager library along with its Ndef utility for reading and decoding NFC tags in NDEF format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport NfcManager, { Ndef } from \"react-native-nfc-manager\";\n```\n\n----------------------------------------\n\nTITLE: RIGHT OUTER JOIN in OQL\nDESCRIPTION: This example illustrates the use of a RIGHT OUTER JOIN in OQL, which returns all rows from the right entity and matching rows from the left entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_22\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust/LastName, Req/Number\nFROM Sales.Customer Cust\nRIGHT OUTER JOIN Sales.Request Req ON Cust.LastName = Req.CustomerName\n```\n\n----------------------------------------\n\nTITLE: Specific Location Constraint in XPath\nDESCRIPTION: The snippet targets customers in New Amsterdam, Guyana, distinguishing it from similarly named locations, showing location-specific constraint potentials.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address[City = 'New Amsterdam']/Sales.Address_Country/Sales.Country/Name = 'Guyana']\n```\n\n----------------------------------------\n\nTITLE: Adding Weeks to a Date in Java\nDESCRIPTION: Example of using the addWeeks function to add 2 weeks to a date. This function adds a specified number of weeks to a date and time value using the server's calendar.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\naddWeeks(dateTime(2007, 1, 1, 1, 1, 1), 2)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 15 01:01:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Date Trimming: Precision Reduction\nDESCRIPTION: Functions to reduce date precision to specific time units, with support for standard and UTC calendars including seconds, minutes, hours, days, months, and years\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: Mendix Expression\nCODE:\n```\ntrimToHours(date)\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Dark Button\nDESCRIPTION: This snippet demonstrates the creation of a dark outline button, allowing for the same customizable parameters as other button configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"outline-dark\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Dark\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for InputReferenceSelector Value Retrieval in Markdown\nDESCRIPTION: This snippet defines the input parameters for the 'Get InputReferenceSelector Value' action. It specifies the widget name as a required string parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/input-reference-selector/get-value.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n---- | -------- | ------- |---------------\nWidget Name | String | Yes | The name of the widget.\n```\n\n----------------------------------------\n\nTITLE: Creating Associations Between Entities in Mendix\nDESCRIPTION: Demonstrates how to create associations between entities with different multiplicity options, including one-to-many, one-to-one, and many-to-many relationships.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/domain-model/create-a-basic-data-layer.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<association name=\"Order_Customer\">\n    <multiplicity type=\"one-to-many\" />\n    <delete-behavior type=\"cascading\" />\n</association>\n```\n\n----------------------------------------\n\nTITLE: Referencing Enumeration Values in Java\nDESCRIPTION: Demonstrates how to reference an enumeration value from a specific module. The example uses an 'OrderProcessing' module with a 'Status' enumeration containing 'started' and 'completed' values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nOrderProcessing.Status.completed\n```\n\n----------------------------------------\n\nTITLE: Converting Mendix App in-place\nDESCRIPTION: This command converts the app in the specified directory to the Studio Pro version associated with the mx tool, modifying the app directly in its current location.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\n\"mx convert --in-place C:\\\\MxProjects\\\\App-main\"\n```\n\n----------------------------------------\n\nTITLE: Subtracting Seconds from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 30 seconds from a specific date and time using the subtractSeconds function. The function takes a datetime value and an integer representing seconds to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nsubtractSeconds(dateTime(2007, 1, 1, 1, 1, 1), 30)\n```\n\n----------------------------------------\n\nTITLE: Querying Customers Registered Since Week Start in Java\nDESCRIPTION: This XPath query returns only customers who have registered since the beginning of the current week using the BeginOfCurrentWeek system variable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-keywords-and-system-variables.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[DateRegistered >= '[%BeginOfCurrentWeek%]']\n```\n\n----------------------------------------\n\nTITLE: Analyzing SQL Query Plans in Performance Tool\nDESCRIPTION: The Performance Tool allows users to analyze SQL query execution plans through an explain plan statement. This helps in debugging and optimizing SQL query performance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-one-apm/rg-one-performance-tool/rg-one-performance-tool-results.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nEXPLAIN PLAN ...\n```\n\n----------------------------------------\n\nTITLE: Selecting Attributes with Cartesian Product Effect\nDESCRIPTION: Demonstrates how selecting multiple attributes over one-to-many or many-to-many associations can result in a cartesian product of results.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n\tLastName AS CustomerName,\n\tSales.Customer/Sales.Request_Customer/Sales.Request/Number AS RequestNumber,\n\tSales.Customer/Sales.Request_Customer/Sales.Request/Number AS OrthogonalRequestNumber\nFROM Sales.Customer\nWHERE Sales.Customer/LastName = 'Doe'\n```\n\n----------------------------------------\n\nTITLE: Extended CASE Expression in OQL\nDESCRIPTION: Shows the syntax for an extended CASE expression in OQL. This form evaluates multiple boolean expressions and returns the result expression corresponding to the first true condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/oql-case-expression.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCASE\nWHEN boolean_expression THEN result_expression [ ...n ] \nELSE else_result_expression\nEND\n```\n\n----------------------------------------\n\nTITLE: Adding Close Pane Menu Item in TypeScript\nDESCRIPTION: This snippet shows how to add a new sub-menu item to close the dockable pane in the extension menu.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n{ menuId: \"myextension.HideDockMenuItem\", caption: \"Hide dock pane\" },\n```\n\n----------------------------------------\n\nTITLE: Java Action Lookup Method\nDESCRIPTION: Utility method to find an existing Java action in a module by name and return its qualified name for use in action calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-microflows-calculations.md#2025-04-21_snippet_12\n\nLANGUAGE: csharp\nCODE:\n```\nIQualifiedName FindJavaAction(string name, IModule module)\n{\n    var javaAction = module.GetDocuments().OfType<IJavaAction>().Single(ja => ja.Name == name);\n    return javaAction.QualifiedName;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Native CLI\nDESCRIPTION: This command installs the React Native CLI globally using NPM. The version 2.0.1 is specified to match the React Native version of the Mendix project.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n\"npm install -g react-native-cli@2.0.1\"\n```\n\n----------------------------------------\n\nTITLE: Converting iOS Certificate to PEM Format\nDESCRIPTION: This command converts the downloaded iOS certificate from DER format to PEM format, which is required for further processing.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/distributing-native-apps.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n\"C:\\OpenSSL\\bin\\openssl.exe\" x509 -in \"C:\\ios_development.cer\" -inform der -out \"C:\\ios_development.pem\"\n```\n\n----------------------------------------\n\nTITLE: Creating Pluggable Widget Default Styling Class in JavaScript\nDESCRIPTION: Shows how to create a default styling class for a pluggable widget by defining a JavaScript object that includes TextStyle properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_badge_Badge = (Badge = {\n  caption: {\n    // TextStyle properties\n    color: \"#00FF00\",\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Mendix App from a Template\nDESCRIPTION: This command creates a new Mendix app from the specified template file, using default parameters, using the Studio Pro version associated with the mx tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_7\n\nLANGUAGE: Text\nCODE:\n```\n\"mx create-project C:\\\\Templates\\\\ExpenseReportTemplate.mpk\"\n```\n\n----------------------------------------\n\nTITLE: Adding Parameters to Task Description in Mendix Workflow\nDESCRIPTION: Example of adding parameters to a task description in a Mendix workflow. The image shows how to configure a parameter and include it in the task description template.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task.md#2025-04-21_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<figure src=\"/attachments/refguide/modeling/application-logic/workflows/workflow-elements/user-task/parameter-example.jpg\" alt=\"Parameter Example\" class=\"no-border\"></figure>\n```\n\n----------------------------------------\n\nTITLE: Configuring Area Charts with Fill in Mendix\nDESCRIPTION: JSON configuration for area charts with custom line styles and fill colors below the line.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"line\": {\n    \"color\": \"#17202A\",\n    \"shape\": \"linear\",\n    \"dash\": \"dot\"\n  },\n  \"type\": \"scatter\",\n  \"fill\": \"tonexty\",\n  \"fillcolor\": \"#B2BABB\"\n}\n```\n\n----------------------------------------\n\nTITLE: XML Structure With Association Tags\nDESCRIPTION: Example XML output when 'Include tags for associations' is selected, showing explicit association tags for related objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/published-web-services/published-web-service.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<Person name=\"John\">\n  <Person_Dog>\n    <Dog name=\"Max\" />\n    <Dog name=\"Rex\" />\n  </Person_Dog>\n  <Person_Cat>\n    <Cat name=\"Chester\" />\n  </Person_Cat> \n</Person>\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Config\nDESCRIPTION: YAML front matter configuration for the documentation page, including title, URL, weight and aliases.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/complete-task.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Complete User Task\"\nurl: /refguide/complete-user-task/\nweight: 30\naliases:\n    - /refguide/complete-task/\n#If moving or renaming this doc file, implement a temporary redirect and let the respective team know they should update the URL in the product. See Mapping to Products for more details.\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Style Object for Native\nDESCRIPTION: Creates a JavaScript file with a custom style object that imports and uses the previously defined variable for consistent native styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { companyHeaderTextSize } from \"./custom-variables\";\nexport const companyHeader = { fontSize: companyHeaderTextSize };\n```\n\n----------------------------------------\n\nTITLE: Including Events Section Snippet\nDESCRIPTION: This snippet details the on-change property event for the text area widget, specifying actions when the widget is changed or interacted with.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Conditional Shipping Cost Calculation in Mendix\nDESCRIPTION: Expression that determines shipping costs based on package weight. Returns 0 for packages under 1kg, and 5.00 for heavier packages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nif $package/weight < 1.00 then 0.00 else 5.00\n```\n\n----------------------------------------\n\nTITLE: Defining State Management in GroupBox Component\nDESCRIPTION: This change modifies the component class definition to include state management for the GroupBox, indicating its collapsed status.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_28\n\nLANGUAGE: tsx\nCODE:\n```\nexport class GroupBox extends Component<GroupBoxProps, GroupBoxState>\n```\n\n----------------------------------------\n\nTITLE: Running Python Configuration Script - PowerShell\nDESCRIPTION: This PowerShell command demonstrates how to execute the previously created Python script to set log levels in a Mendix application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/log-levels.md#2025-04-21_snippet_1\n\nLANGUAGE: PowerShell\nCODE:\n```\nC:\\temp\\LogDemoApp\\python\nλ python setlogs.py 87a32a3e-c6db-4bc8-9fa3-7cd5b108eaec 8090\n{\"feedback\":{},\"result\":0}\n```\n\n----------------------------------------\n\nTITLE: Finalizing Dependency Management with NPM\nDESCRIPTION: Update the app's Node.js dependencies by reinstalling with the correct flags. Ensures all new or modified dependencies are reflected in the build.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: Getting Security Group by UUID API Endpoint\nDESCRIPTION: HTTP endpoint for retrieving security group details using the group's UUID. This endpoint is accessible to Company Managers and Member Managers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nHTTP Method: GET\nURL: https://usermanagement.mendix.com/legacy-api/1/groups/<securityGroupUuid>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Object Example for Values API\nDESCRIPTION: A basic example showing how property values are passed as a JavaScript object where the property's key is used as the object property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    stringProp: \"Some value\",\n    intProp: 42\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Weekday Extraction with weekday-from-dateTime\nDESCRIPTION: Basic syntax example for the weekday-from-dateTime function with a single parameter. Returns day of week as number (1-7, where 1=Sunday for PostgreSQL databases).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nweekday-from-dateTime ( attribute [, timezone ] )\n```\n\n----------------------------------------\n\nTITLE: Scanning QR Code in Make It Native App\nDESCRIPTION: Procedure for launching a test native mobile app on a testing device using the Make It Native app and QR code scanning functionality\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/getting-started-with-native-mobile.md#2025-04-21_snippet_1\n\nLANGUAGE: steps\nCODE:\n```\n1. Click View dropdown in Studio Pro\n2. Select View on your device\n3. Navigate to Native mobile tab\n4. Open Make It Native app\n5. Tap Scan a QR Code button\n6. Grant camera permissions\n7. Scan QR code\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Options for Mendix Pie Chart in JSON\nDESCRIPTION: This JSON snippet is used for controlling the pie chart's data appearance, specifically adjusting the hole size parameter to affect the chart's center appearance.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hole\": 0.5\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Hours Between Dates in Java\nDESCRIPTION: The hoursBetween function calculates the difference between two dates in hours. It takes two DateTime parameters and returns a Decimal value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nhoursBetween(dateTime(2007, 1, 1, 3, 31, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: XSUAA Application-to-Application Auth Config\nDESCRIPTION: Configuration line for granting authority to apps in the xs-security.json file of XSUAA service instance bound with bapi-service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ngrant-as-authority-to-apps\" : [ \"$XSAPPNAME(application,{your-Mendix-app-deployed-on-SAP-BTP})\"]\n```\n\n----------------------------------------\n\nTITLE: Updating AttributeWidgetWithPlaceholder Properties (Markdown)\nDESCRIPTION: Replaces the 'placeholder' property with a new 'placeholderTemplate' property in the AttributeWidgetWithPlaceholder element of the Pages module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.11.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n#### AttributeWidgetWithPlaceholder (Element)\n\n* We deleted the `placeholder` property. Info: \"Use property 'placeholderTemplate' instead\"\n* We introduced the `placeholderTemplate` property.\n```\n\n----------------------------------------\n\nTITLE: Creating an Enumeration for Validation Messages\nDESCRIPTION: Create an enumeration containing all validation messages to reference in your application. This allows you to handle multiple messages in different languages efficiently.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/menus/translatable-texts/translatable-validation-messages.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/refguide/modeling/menus/translatable-texts/translatable-validation-messages/validation-enumeration.png\" class=\"no-border\" width=\"500\" >}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Log Settings in Mendix Runtime with JSON\nDESCRIPTION: Request and response format for retrieving the current log subscriber settings in the Mendix Runtime. This is the first step in configuring log format by changing log subscribers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\"action\": \"get_log_settings\", \"params\": {\"sort\": \"subscriber\"}}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\": {\n    \"ConsoleLogSubscriber\": {\n      \"ConnectionBus_Queries\": \"INFO\",\n      \"Configuration\": \"INFO\",\n      \"Core\": \"INFO\",\n      \"Logging\": \"INFO\",\n      \"SchemeManager\": \"INFO\",\n      ...\n    }\n  },\n  \"result\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix SDK Dependencies with NPM\nDESCRIPTION: Commands for creating a new project directory and installing necessary Mendix SDK dependencies using npm.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/setting-up-your-development-environment.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir my-app-generator\n$ cd my-app-generator\n$ npm init --yes\n$ npm install -g typescript\n$ npm install mendixmodelsdk mendixplatformsdk --save\n$ tsc --init --target es2020\n```\n\n----------------------------------------\n\nTITLE: Restarting Mendix Operator and Agent in Kubernetes\nDESCRIPTION: Commands to scale up the Mendix Operator and Mendix agent deployments back to 1 replica after creating the Velero backup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-velero.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl scale deployment mendix-agent --replicas=1\nkubectl scale deployment mendix-operator --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Updated Header Render with Toggle\nDESCRIPTION: Enhanced header render method with collapse/expand functionality\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_23\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderHeader = (): ReactNode => {\n        const view = (\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n        );\n\n        const Touchable: ComponentClass<any> = Platform.OS === \"ios\" ? TouchableOpacity : TouchableNativeFeedback;\n\n        return <Touchable onPress={this.toggleCollapsed}>{view}</Touchable>;\n    };\n```\n\n----------------------------------------\n\nTITLE: Rollback Object Event Handling in Mendix\nDESCRIPTION: Illustrates the event lifecycle during a rollback operation, including before and after events, potential exception handling, and object state management.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/rollback-object.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<!-- Rollback Event Flow -->\n<microflow>\n    <rollbackObject>\n        <beforeEvents>...</beforeEvents>\n        <afterEvents>...</afterEvents>\n        <exceptionHandling>...</exceptionHandling>\n    </rollbackObject>\n</microflow>\n```\n\n----------------------------------------\n\nTITLE: Changing XML Request Parameters in SoapUI\nDESCRIPTION: Demonstrates how to modify the Offset and PageSize parameters in a SOAP request from placeholder values to actual numeric values for pagination.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/testing-web-services-using-soapui.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n<Offset>?</Offset>\n<PageSize>?</PageSize>\n```\n\n----------------------------------------\n\nTITLE: Setting URL and Description in YAML Frontmatter\nDESCRIPTION: YAML frontmatter defining the page title, URL, description, and weight for the documentation page.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Creating a Private Cloud Cluster\"\nurl: /developerportal/deploy/private-cloud-cluster/\ndescription: \"Describes the processes for creating a Private Cloud cluster in the Mendix Portal\"\nweight: 10\n---\n```\n\n----------------------------------------\n\nTITLE: Order Filtering with Parentheses in SQL\nDESCRIPTION: Shows how parentheses affect the evaluation order of conditions, selecting orders with low volume or low price and a minimum of 3 items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Number, Price FROM Sales.Order WHERE (Number <= 5 OR Price < 6) AND Number >= 3\n```\n\n----------------------------------------\n\nTITLE: Using beginOfMonth Function in Mendix\nDESCRIPTION: Calculates the beginning of the month for a given datetime input. Returns midnight of the first day of that month.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/begin-of-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nbeginOfMonth(dateTime(2007, 2, 7, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: SQL MIN Function for Reference Sets\nDESCRIPTION: When sorting columns displaying attributes from many-to-many associations, the SQL MIN() function is used to determine sorting values instead of displayed text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/ordering-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nMIN(productName)\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Quarters Example\nDESCRIPTION: Shows the output of subtracting 1 quarter from April 1, 2007, 01:01:01. The result is January 1, 2007, 01:01:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_15\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:01:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Alert Info Block for Assert Not False Alternative\nDESCRIPTION: Markdown alert block indicating an alternative approach using Assert not false action for creating negative test cases\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-create-a-negative-test-case.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nYou can also add the **Assert not false** action with the **Assert value** set to false, instead of the **Assert not true** action, to create a negative test case.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Obtaining Association Value in TypeScript\nDESCRIPTION: Demonstrates how to get a DynamicValue<ObjectItem> representing a read-only value of an associated object from the first element of myDataSource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nconst associationValue = this.props.myAssociationOnDatasource.get(this.props.myDataSource.items[0]);\n```\n\n----------------------------------------\n\nTITLE: Warning Alert Syntax\nDESCRIPTION: Markdown alert syntax used to provide an informational tip about finding the right action using search terms.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-create-a-test-case.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}} Enter terms like *Find*, *Click*, *Set*, *Assert*, and *Get* to find the right action. {{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Calculating End of Year in Java\nDESCRIPTION: The `endOfYear` function calculates the end of the year based on the provided initial date. The output is a Date and time value that represents the end of that year.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/end-of-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nendOfYear(dateTime(2007, 2, 7, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: XML Structure Without Association Tags\nDESCRIPTION: Example XML output when 'Include tags for associations' is not selected, showing a simpler hierarchical structure for related objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/published-web-services/published-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<Person name=\"John\">\n  <Dog name=\"Max\" />\n  <Dog name=\"Rex\" />\n  <Cat name=\"Chester\" />\n</Person>\n```\n\n----------------------------------------\n\nTITLE: XPath Query with Nested Path Constraints in Java\nDESCRIPTION: A complex XPath query with nested path constraints that retrieves customers who live in New Amsterdam, Guyana, by filtering on both city and country.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Address/Sales.Address[City = 'New Amsterdam']/Sales.Address_Country/Sales.Country/Name = 'Guyana']\n```\n\n----------------------------------------\n\nTITLE: Configuring Layout Options for Mendix Charts in JSON\nDESCRIPTION: This JSON snippet demonstrates how to control the general appearance of a chart by configuring layout options such as the legend orientation and visibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/charts/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"showlegend\": true,\n  \"legend\": {\n    \"orientation\": \"h\",\n    \"y\": \"auto\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Widgets Development Overview\nDESCRIPTION: Dojo framework-based widgets limited to web applications with low-level API access. Should only be used when Pluggable widgets cannot provide required functionality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/mendix-client.md#2025-04-21_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Defining Sub-constraints in Mendix Queries\nDESCRIPTION: Illustrates the use of sub-constraints to refine data selection within a larger constraint. The example targets retrieval of users with the role 'Administrator'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: StudioPro\nCODE:\n```\n[id = '[%UserRole_Administrator%]']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.User[id = '[%UserRole_Administrator%]']\n```\n\n----------------------------------------\n\nTITLE: Creating a Variable for Temperature Conversion in Mendix\nDESCRIPTION: This snippet shows how to create a variable to store the temperature in Celsius as an Integer/Long with a value of 100 for conversion using the web service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-simple-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: Mendix\nCODE:\n```\nTemperatureInCelsius = 100\n```\n\n----------------------------------------\n\nTITLE: Registering Service Endpoints in Catalog\nDESCRIPTION: Provides details for registering service endpoints with comprehensive metadata including path, name, type, version, and contract information\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/catalog/register/automate-registration.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nRequirements:\n* Personal Access Token\n* application_UUID\n* environment_UUID\n* Service Path, Name, Type\n* Service Version and Security Scheme\n* Service Contract with Type and Value\n\nUse Catalog Registration API to register service endpoints\n```\n\n----------------------------------------\n\nTITLE: Querying Logs from a Specific Week of the Year\nDESCRIPTION: Example XPath query that retrieves all logs where the DateAttribute falls in the second week of the year in the local time zone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-week-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[week-from-dateTime(DateAttribute) = 2]\n```\n\n----------------------------------------\n\nTITLE: Calling Community Commons Functions in Java\nDESCRIPTION: Shows how to invoke Community Commons functions from Java code by using the proper namespace reference. The example demonstrates calling the hash function from the StringUtils category.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/community-commons-function-library.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncommunitycommons.StringUtils.hash(\"Mendix\", 20);\n```\n\n----------------------------------------\n\nTITLE: Adding Minutes in Java\nDESCRIPTION: The `addMinutes` function adds a specified number of minutes to a date and returns the modified date. It requires two parameters: the initial date and the number of minutes to be added.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\naddMinutes(dateTime(2007, 1, 1, 1, 1, 1), 3)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:04:01 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Basic OQL Syntax for Aggregation Functions\nDESCRIPTION: Demonstrates the basic syntax for using aggregation functions in OQL expressions, including COUNT, AVG, MAX, MIN, SUM, and STRING_AGG.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n  COUNT ( * )\n  | { COUNT | AVG | MAX | MIN | SUM } ( [ DISTINCT ] attribute_path )\n  | STRING_AGG ( attribute_path )\n```\n\n----------------------------------------\n\nTITLE: REST Operation Path Parameters\nDESCRIPTION: Example of using path parameters in a REST operation URL, where parameters are specified between curly braces {parameter} and can be passed to microflows or import mappings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-operation.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\n{parameter}\n```\n\n----------------------------------------\n\nTITLE: Firebase Service Account Private Key Configuration\nDESCRIPTION: Details the required Firebase service account private key file for push notification configuration. The file is a JSON format containing project-specific credentials used in runtime configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/using-mobile-capabilities/push-notifications/notif-config-push.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{project_id}-firebase-adminsdk-{identifier}.json\n```\n\n----------------------------------------\n\nTITLE: Adding Milliseconds in Java\nDESCRIPTION: The `addMilliseconds` function adds a specified number of milliseconds to a date and returns the modified date. It requires two parameters: the initial date and the number of milliseconds to be added.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\naddMilliseconds(dateTime(2007, 1, 1, 1, 1, 1), 1400)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Jan 01 01:01:02:400 CET 2007\"\n```\n\n----------------------------------------\n\nTITLE: Snippet Component References - UML Element Mapping\nDESCRIPTION: Documentation mapping between Studio Pro Snippet components and their corresponding Model SDK API implementations including Parameters and Calls.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-refguide/understanding-the-metamodel/pages-metamodel.md#2025-04-21_snippet_2\n\nLANGUAGE: table\nCODE:\n```\n| Studio Pro Guide | Model SDK API docs |\n|-------------------------------|----------------------------------------------------------------------------------------------------------------------|\n| [Snippet](/refguide/snippet/) | [Snippet](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.snippet.html) |\n| | [SnippetCall](https://apidocs.rnd.mendix.com/modelsdk/latest/classes/pages.snippetcall.html) |\n```\n\n----------------------------------------\n\nTITLE: Defining Info Alert Block for Data Migration Tool\nDESCRIPTION: This snippet demonstrates how to create an info alert block in Markdown for the Data Migration Tool, highlighting its preview status and providing a link to documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/mendix-for-private-cloud.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThe data migration tool is available as a technical preview. For documentation and download links, see [Private Cloud Data Transfer](/developerportal/deploy/private-cloud-data-transfer/).\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Metrics Counter Tag Configuration\nDESCRIPTION: Illustrates how to add key/value pair tags to enrich metrics counter metadata using Micrometer concepts\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/metrics-activities/metrics-increment-counter.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nTags:\n- Allows key/value pair enrichment\n- Follows Micrometer tag naming guidelines\n- Provides additional metadata for metrics tracking\n```\n\n----------------------------------------\n\nTITLE: Query Logs for Specific Weekday (Local Timezone)\nDESCRIPTION: XPath query that retrieves all logs where the DateAttribute falls on a Friday (day 6) using the local timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-weekday-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[weekday-from-dateTime(DateAttribute) = 6]\n```\n\n----------------------------------------\n\nTITLE: Querying with hours-from-dateTime in Java\nDESCRIPTION: This Java query retrieves all `Logging.Log` objects where the hours part of the `DateAttribute` is equal to 8 in the local time zone.  It shows how to use the `hours-from-dateTime()` function within a Java query context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-hours-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Logging.Log[hours-from-dateTime(DateAttribute) = 8]\n```\n\n----------------------------------------\n\nTITLE: Configuring APM Startup and Shutdown Microflows\nDESCRIPTION: Required microflow calls for proper APM tool initialization and shutdown. These should be added to the application's startup and shutdown sequences.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-one/ig-one-installation-steps/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\nAPMAgent\\USE_ME\\AfterStartup\nAPMAgent\\USE_ME\\BeforeShutdown\n```\n\n----------------------------------------\n\nTITLE: Counting Filtered Orders with XPath in Mendix\nDESCRIPTION: This XPath query counts orders placed by a specific customer. It shows how to use count() with a filter condition to count a subset of objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-count.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ncount(//Sales.Order[Sales.Customer_Order/Sales.Customer/Name = 'Jansen'])\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section\nDESCRIPTION: This snippet details the design properties section of the Password text box widget. It provides specifications on how the widget should be visually presented in an application interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/authentication-widgets/password-text-box.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Greater Than Comparison in Mendix\nDESCRIPTION: This snippet demonstrates a greater than comparison in Mendix. It compares two integer values and returns a boolean value based on whether the first value is greater than the second.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n\"4>3\"\n```\n\n----------------------------------------\n\nTITLE: Begin of Day DateTime Comparison\nDESCRIPTION: Expression comparing the beginning of current day in local time versus UTC\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/date-and-time-handling/datetime-handling-faq.md#2025-04-21_snippet_2\n\nLANGUAGE: expression\nCODE:\n```\n[%BeginOfCurrentDay%] > [%BeginOfCurrentDayUTC%]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment - Mendix API - Bash\nDESCRIPTION: This example shows how to make a GET request to retrieve information about a specific environment of an application within Mendix. It highlights the required parameters and headers for authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: GET\nURL: https://deploy.mendix.com/api/1/apps/<AppId>/environments/<Mode>\n\n```\n\n----------------------------------------\n\nTITLE: Verifying Deployments in Global Operator Namespace\nDESCRIPTION: This command checks the status of deployments in the Global Operator namespace to verify successful installation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-global-operator.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {globalOperatorNamespace} get deployments\n```\n\n----------------------------------------\n\nTITLE: Including Data Source Section for Checkbox Properties\nDESCRIPTION: This snippet refers to the data source configuration for the checkbox widget, detailing how the checkbox is linked to the data it represents.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/data-source-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Message Template with Parameter in Mendix\nDESCRIPTION: This snippet demonstrates creating a message template with a placeholder {1} that will be replaced by the temperature value returned from the web service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-simple-web-service.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nThe temperature in Fahrenheit is: {1}\n```\n\n----------------------------------------\n\nTITLE: Version Number Structure Example\nDESCRIPTION: Demonstrates the version numbering system using 9.24.1 as an example, where 9 is the major version, 24 is the minor version, and 1 is the patch version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/lts-mts.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n9.24.1\n```\n\n----------------------------------------\n\nTITLE: Using Java API for Task Queue scheduling\nDESCRIPTION: Reference to the Java API for scheduling tasks in a background queue, with a specific mention of the executeInBackground method that allows using a system context for task execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nexecuteInBackground(com.mendix.systemwideinterfaces.core.IContext,java.lang.String)\n```\n\n----------------------------------------\n\nTITLE: CSS Classes for Custom Page Layout\nDESCRIPTION: CSS classes for implementing complex custom pages with Conversational UI components, handling container heights and layout structures.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/conversational-ui/conversational-ui.md#2025-04-21_snippet_2\n\nLANGUAGE: scss\nCODE:\n```\n.chat-container: container height and flex-grow handler\n.card--full-height: for full-height card displays\n.layoutgrid--full-height: for single-row layoutgrids\n.dataview--display-contents: prevents flex-flow breaking in data views\n```\n\n----------------------------------------\n\nTITLE: Including On Change Event for Checkbox\nDESCRIPTION: This snippet specifies the action to be executed when the checkbox value changes, triggered by user navigation events.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Published Business Event Service in Studio Pro 9.18-9.23\nDESCRIPTION: Demonstrates how to add a published business event service document in Mendix Studio Pro for defining events and API specifications within an application module\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/business-event-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nRight-click on module > Add other > Published Business Event Service\n```\n\n----------------------------------------\n\nTITLE: Extracting Quarter in Specific Time Zone\nDESCRIPTION: XPath query to filter records by quarter using a specific time zone (New York). Returns records where the specified date attribute falls in the fourth quarter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-quarter-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: StudioPro\nCODE:\n```\n[quarter-from-dateTime(DateAttribute, 'America/New_York') = 4]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Logging.Log[quarter-from-dateTime(DateAttribute, 'America/New_York') = 4]\n```\n\n----------------------------------------\n\nTITLE: Menu Item Data View Alert\nDESCRIPTION: Markdown alert block describing how to properly open a page containing a data view from a menu item using a microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/menu.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}To open a page with a data view on it from a menu item, set a microflow that first retrieves an object for the data view and then opens the page as a target.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Querying Cache Statistics in Mendix Runtime\nDESCRIPTION: API endpoint to retrieve information about objects currently in the Mendix Runtime state, including totals per session and user-specific object counts.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"cache_statistics\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Date Calculation: Between Dates\nDESCRIPTION: Functions to calculate time differences between two dates at various granularities including milliseconds, seconds, minutes, hours, days, weeks, months, and years\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: Mendix Expression\nCODE:\n```\nmillisecondsBetween(date1, date2)\n```\n\n----------------------------------------\n\nTITLE: Creating Domain Model Structure for REST Service\nDESCRIPTION: A code snippet showing the domain model structure needed for the example REST service project with Order and OrderItem entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/domainmodel.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Running Mendix Docs Local Server with Hugo\nDESCRIPTION: Alternative command to run a local server for the Mendix documentation site using Hugo directly, with options for customization.\nSOURCE: https://github.com/mendix/docs/blob/development/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./node_modules/.bin/hugo server --environment development\n```\n\n----------------------------------------\n\nTITLE: Deleting Environment Tags Example Output in JSON\nDESCRIPTION: Example response output for deleting a tag from a Mendix environment. An empty array indicates the tag has been successfully removed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_34\n\nLANGUAGE: json\nCODE:\n```\n[]\n```\n\n----------------------------------------\n\nTITLE: Mendix Agent Secret Configuration\nDESCRIPTION: YAML configuration for Mendix Agent credentials and PCLM URL stored in Kubernetes secret.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: <secret-name>\ndata:\n  username: <base64-encoded username>\n  password: <base64-encoded password>\n  server-url: <base64-encoded PCLM URL>\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Version of Pluggable Widgets Tools Package in Node.js\nDESCRIPTION: Command to install a specific version of the Pluggable Widgets Tools package. This allows targeting a particular version rather than the latest release.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/update-pluggable-widgets-tools.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --save-dev @mendix/pluggable-widgets-tools@YOUR_VERSION\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Months Example\nDESCRIPTION: Shows the output of subtracting 2 months from March 1, 2007, 01:01:01. The result is January 1, 2007, 01:01:01 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_13\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:01:01 CET 2007\n```\n\n----------------------------------------\n\nTITLE: PowerShell Service Console Cmdlets\nDESCRIPTION: PowerShell cmdlets available in the Mendix.Service.Commands.dll for managing Mendix apps including getting status, starting, stopping and updating apps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/windows-service.md#2025-04-21_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nGet-MxApp\nStart-MxApp\nStop-MxApp\nUpdate-MxApp\nInstall-MxServer\n```\n\n----------------------------------------\n\nTITLE: Complex Order Filtering with AND/OR in SQL\nDESCRIPTION: Demonstrates combining multiple conditions using AND and OR operators to select large orders or smaller orders with high value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_9\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, Number, Price FROM Sales.Order WHERE Number >= 5 OR Price > 4 AND Number >= 3\n```\n\n----------------------------------------\n\nTITLE: Configuring JDBC URL for MySQL Database Connection\nDESCRIPTION: Example of a JDBC URL format for connecting to a MySQL database using the Database Connector. The URL specifies the protocol, hostname, and database name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/execute-an-sql-statement-on-an-external-database.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\njdbc:mysql://hostname/databaseName\n```\n\n----------------------------------------\n\nTITLE: Finding Input Element with jQuery Selector\nDESCRIPTION: jQuery selector code to find the input element within the AutoComplete widget's dropdown container. Uses class selectors to target the specific input element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-10-autocomplete.md#2025-04-21_snippet_0\n\nLANGUAGE: jquery\nCODE:\n```\n$('.select2-container .select2-search input')\n```\n\n----------------------------------------\n\nTITLE: Configuring InfluxDB Registry with Deny Filters\nDESCRIPTION: Example of InfluxDB metrics registry configuration with filters that deny specific metric name patterns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"influx\",\n    \"settings\": {\n      \"userName\": \"mendix\",\n      \"password\": \"MayBeThis**\"\n    },\n    \"filters\": [\n      { \"type\" : \"nameStartsWith\", \"result\" : \"deny\", \"values\" : [\"Unnamed.\", \"Invalid.\", \"Internal.\"] }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Finding Radio Button Input Element with jQuery\nDESCRIPTION: jQuery selector to find a specific radio button input element within a Mendix radio button widget based on the label text.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-07-radiobuttons.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n$('.mx-name-radioButtons1 .radio label:contains(\"ATS Option 5\") input')\n```\n\n----------------------------------------\n\nTITLE: Restarting Mendix Operator in OpenShift\nDESCRIPTION: Commands to restart the Mendix Operator deployment in OpenShift by scaling it down to zero replicas and then back to one.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-deploy.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\noc -n {namespace} scale deployment mendix-operator --replicas=0\noc -n {namespace} scale deployment mendix-operator --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Configuring Line Chart in Plotly JSON\nDESCRIPTION: Demonstrates a basic line chart configuration with x and y coordinates using scatter type\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"x\": [ 1, 2 ],\n    \"y\": [ 1, 2 ],\n    \"type\": \"scatter\"\n  },\n  {\n    \"x\": [ 3, 4 ],\n    \"y\": [ 9, 14 ],\n    \"type\": \"scatter\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Updating Android SDK Version in Gradle Build File\nDESCRIPTION: To target Android 13 (API level 33 or higher), update the compileSdkVersion and targetSdkVersion to 33 in the build.gradle file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-8-parent/nt-5.2-rn.md#2025-04-21_snippet_0\n\nLANGUAGE: Gradle\nCODE:\n```\ncompileSdkVersion 33\ntargetSdkVersion 33\n```\n\n----------------------------------------\n\nTITLE: Stopping an Environment - Mendix API - Bash\nDESCRIPTION: This HTTP POST request is used to stop a specific environment associated with an application in the Mendix platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: POST\nURL: https://deploy.mendix.com/api/1/apps/<AppId>/environments/<Mode>/stop\n\n```\n\n----------------------------------------\n\nTITLE: Converting String to Integer in Mendix\nDESCRIPTION: Basic usage of the parseInteger function to convert a string containing a number to an Integer/Long value. This example demonstrates the direct conversion of a numeric string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/parse-integer.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseInteger('42')\n```\n\n----------------------------------------\n\nTITLE: Performing Health Check in Mendix Runtime (JSON)\nDESCRIPTION: This endpoint invokes a configured health check microflow to report on the functional status of the application. The health status can be 'healthy', 'sick', or 'unknown'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"action\" : \"check_health\",\n  \"params\":{}\n}\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\":{\n    \"health\":\"sick\",\n    \"diagnosis\": \"Remote product web service is offline\"\n  },\n  \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Event Handler Properties Configuration in Mendix 8\nDESCRIPTION: This snippet illustrates the properties that can be configured for an event handler, including the moment, event type, and associated microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/domain-model/entities/event-handlers.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\n{{< figure src=\"/attachments/refguide8/modeling/domain-model/entities/event-handlers/event-handler-properties.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Formatting Date in Java (Mendix)\nDESCRIPTION: Shows how to use the formatDate function to convert the date part of a Date and time value to a string in a standard format.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nformatDate(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Query Parameter Format in URL\nDESCRIPTION: Shows the format for including query parameters in a REST API URL. Parameters are added after a question mark and separated by ampersands.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-query-parameters.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n?name=John&age=42\n```\n\n----------------------------------------\n\nTITLE: Adding HTTP Timeout to Subversion Configuration\nDESCRIPTION: This code snippet shows how to add an HTTP timeout configuration to the Subversion servers file to resolve connection timeout issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttp-timeout = 5000\n```\n\n----------------------------------------\n\nTITLE: REST GET API Endpoint\nDESCRIPTION: Example REST endpoint URL structure for making API calls to Google Books service. The URL includes parameters for searching books by author.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/integrating-a-legacy-system-into-a-mendix-app.md#2025-04-21_snippet_1\n\nLANGUAGE: URL\nCODE:\n```\nhttps://www.googleapis.com/books/v1/volumes?q={author}&key={apiKey}\n```\n\n----------------------------------------\n\nTITLE: Configuring Show User Task Page Activity Properties\nDESCRIPTION: Defines the configuration options for the Show User Task Page activity, including user task object selection, auto-assignment, and access permissions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/show-task-page.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nproperties:\n  userTaskObject: System.WorkflowUserTask\n  autoAssign: true\n  whoCanOpen:\n    - assignedUser\n    - usersWithAccess\n```\n\n----------------------------------------\n\nTITLE: Querying Customers by Name\nDESCRIPTION: This snippet retrieves all customers whose name is 'Jansen' using a comparison expression. It demonstrates the basic usage of the equality comparison operator in XPath queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Name = 'Jansen']\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for List Result in Operation\nDESCRIPTION: Defines the JSON schema for an operation result that is a list returned by a microflow. Each item in the array is referenced to a particular definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{ \\n  \\\"type\\\": \\\"array\\\",\\n  \\\"items\\\": [{ \\\"$ref\\\": \\\"#/definitions/#definition_name#\\\"}]\\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting DateTime with Custom Pattern\nDESCRIPTION: Convert a DateTime object to a formatted string representation using custom pattern letters. Supports complex formatting with multiple pattern components.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime($object/Date1,'EEE, d MMM yyyy HH:mm:ss Z')\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDateTime($object/Date1,'yyyy-MM-dd') + 'T' + formatDateTime($object/Date1,'HH:mm:ss')\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year and Month in Mendix\nDESCRIPTION: Creates a date object by specifying the year (2007) and month (1 for January), automatically setting day to the 1st and time to midnight.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1)\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section Snippet\nDESCRIPTION: This snippet refers to the design properties section of the text area widget documentation. It details the visual configuration options available for the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Date with Year and Month Parameters\nDESCRIPTION: Creates a datetime object using year and month parameters. Returns date set to the first day at midnight of specified year and month.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/date-creation.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ndateTime(2007, 1)\n```\n\n----------------------------------------\n\nTITLE: User Type Correction Microflow\nDESCRIPTION: Main microflow that combines retrieval and evaluation logic to create and populate UserTypeReport entities, which are then displayed in the UI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/monitoring-troubleshooting/populate-user-type.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nUser_Correct_UserType\n```\n\n----------------------------------------\n\nTITLE: Obtaining Expression Value for List Item in TypeScript\nDESCRIPTION: Shows how to get a DynamicValue representing the value of an expression for the first element from myDataSource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\nconst expressionValue = this.props.myDataSource.myExpressionOnDatasource.get(this.props.myDataSource.item[0]);\n```\n\n----------------------------------------\n\nTITLE: OQL Query with Column Aliases\nDESCRIPTION: Shows how to define column aliases in a SELECT clause to provide alternative names for the result columns. The AS keyword is optional as demonstrated.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName AS FName, LastName AS LName\nFROM Sales.Customer\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FName, LastName LName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Rendering Widgets for List Items in TypeScript\nDESCRIPTION: Demonstrates how to render instances of widgets for each item in a data source using the myWidgets property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nthis.props.myDataSource.items.map(i => this.props.myWidgets.get(i));\n```\n\n----------------------------------------\n\nTITLE: Configuring Mendix Native Mobile App\nDESCRIPTION: Configure the Mendix Native Mobile application with necessary settings and dependencies. This command prepares the app for CocoaPods and subsequent Xcode processes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm run configure\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example for SQL Server\nDESCRIPTION: XPath query to count entity attributes in SQL Server, which previously had an issue counting null values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.0.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\ncount(//Entity/attribute)\n```\n\n----------------------------------------\n\nTITLE: Querying Customer by Order ID\nDESCRIPTION: This snippet retrieves the customer who placed an order with the specified unique identification number. It demonstrates a direct comparison to a specific customer order ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order = 'ID_124123512341']\n```\n\n----------------------------------------\n\nTITLE: Checking Whether an Object Is New in Mendix\nDESCRIPTION: Demonstrates the isNew() function which checks if an object is newly created but not yet committed to the database. Returns a Boolean value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nisNew($object1)\n```\n\n----------------------------------------\n\nTITLE: Setting Timer Expression in Mendix Workflow\nDESCRIPTION: Example expressions for configuring Timer elements in Mendix workflows, including date calculations and conditional timing based on workflow context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/timer.md#2025-04-21_snippet_0\n\nLANGUAGE: expression\nCODE:\n```\naddDays([%CurrentDateTime%], 1)\n```\n\nLANGUAGE: expression\nCODE:\n```\nparseDateTimeUTC('2023-12-10T17:12:00.000', 'yyyy-MM-dd''T''HH:mm:ss.SSS')\n```\n\nLANGUAGE: expression\nCODE:\n```\nif $WorkflowContext/isVIPUser then addDays([%CurrentDateTime%], 2) else addWeeks([%CurrentDateTime%], 2])\n```\n\n----------------------------------------\n\nTITLE: Creating a New Mendix App using Platform SDK in TypeScript\nDESCRIPTION: Demonstrates how to create a new Mendix app using the platform client. It shows basic usage and an example with a specific template.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst app = await client.createNewApp(\"My new App\");\n\nconsole.log(`App created with ID: ${app.appId}`);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst app = await client.createNewApp(\"My GenAI App\", {\n    templateId: \"ba6ca01b-e2a4-45fa-870d-9e28b6acb845\"\n});\n```\n\n----------------------------------------\n\nTITLE: OR Operator Example in Java\nDESCRIPTION: Shows how the 'or' operator returns true if at least one of the expressions is true. Includes examples with product price comparisons.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n($product/price < $product/recommendedPrice : 2) or ($product/price > 0)\n```\n\nLANGUAGE: java\nCODE:\n```\n('hello' = 'nothello') or ('byebye' = 'stillnotbyebye')\n```\n\n----------------------------------------\n\nTITLE: File Metadata in YAML\nDESCRIPTION: YAML frontmatter specifying the document title, URL, and weight properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/template-grid.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Template Grid\"\nurl: /refguide9/template-grid/\nweight: 20\n#If moving or renaming this doc file, implement a temporary redirect and let the respective team know they should update the URL in the product. See Mapping to Products for more details.\n---\n```\n\n----------------------------------------\n\nTITLE: OQL Multiplication Operator for Calculated Totals\nDESCRIPTION: Query that calculates the total value of orders by multiplying Number and Price fields, demonstrating the multiplication operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, (Number * Price) as Total FROM Sales.Order\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Specific Dependencies\nDESCRIPTION: Use CocoaPods to manage and install iOS dependencies. This step is crucial for setting up the iOS environment correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncd ios && pod install --repo-update\n```\n\n----------------------------------------\n\nTITLE: Filtering MPR Export by Unit Types\nDESCRIPTION: Export JSON for specific model unit types, such as Pages or Microflows. Useful for targeted model analysis and extraction.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmx dump-mpr --unit-type Pages$Page,Microflows$Microflow [TARGET-FILE].mpr\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for File Parameter in Request Body\nDESCRIPTION: Specifies a JSON schema when there is no import mapping or the mapping is not based on a message definition. The parameter type defaults to a file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{ \\\"type\\\": \\\"file\\\" }\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Objects with GraphQL in Mendix\nDESCRIPTION: This query retrieves the names and dates of birth of all employees. It demonstrates how to query multiple fields from an entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  employees {\n    name\n    dateOfBirth\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GroupBox Props Interface in TypeScript\nDESCRIPTION: TypeScript interface defining props for the GroupBox component with support for collapsibility, icons, and styling\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_43\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface GroupBoxProps {\n    startCollapsed?: boolean;\n    collapsible: boolean;\n    collapseIcon?: ReactNode;\n    expandIcon?: ReactNode;\n    headerCaption?: string;\n    style: CustomStyle[];\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Notification Microflow Reference\nDESCRIPTION: Reference to the sample notification microflow that can be used as template for custom notifications. Accepts To, Subject, and Message parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-one/ig-one-installation-steps/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\nAPMAgent.SampleNotifyMicroflow_LogMessage\n```\n\n----------------------------------------\n\nTITLE: Configuring ModelDocument Data Structure\nDESCRIPTION: Creating a PageObject entity and associating it with the ModelDocument entity from Viewer3D domain model to enable model visualization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/3d-viewer/3d-viewer-for-teamcenter.md#2025-04-21_snippet_1\n\nLANGUAGE: Data Model\nCODE:\n```\nEntity: PageObject\nAssociation: ModelDocument (Viewer3D/Domain Model)\n```\n\n----------------------------------------\n\nTITLE: Static Data Widgets in Document Templates\nDESCRIPTION: Static data widgets provide fixed content elements for document templates, allowing developers to include predefined text, titles, and images\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Static Label\n\nA static label shows a line of static text. You can use it to place custom text inside a dataview or template grid or table.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n### Static Image\n\nA static image shows a predefined image. It can be put either in- or outside a data view or templategrid.\n```\n\n----------------------------------------\n\nTITLE: Queue Subscription Management in SAP Event Mesh\nDESCRIPTION: Sample microflows for managing queue subscriptions and publishing cloud events. Includes operations for creating subscriptions and retrieving subscription information.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-event-mesh-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: microflow\nCODE:\n```\nGetQueueSubscriptions\nParameters:\n- Management Credentials\n- Queue Name\n```\n\nLANGUAGE: microflow\nCODE:\n```\nCreateQueueSubscription\nParameters:\n- Management Credentials\n- Topic(s)\n- Queue(s)\n```\n\nLANGUAGE: microflow\nCODE:\n```\nPublishCloudEvent\nParameters:\n- Credentials\n- EventId\n- EventSource\n- EventType\n- MessageData\n```\n\n----------------------------------------\n\nTITLE: Restarting Mendix Operator and Agent\nDESCRIPTION: Commands to restart Mendix Operator and Agent deployments for license reconfiguration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n <namespace> scale deployment mendix-operator --replicas=0\nkubectl -n <namespace> scale deployment mendix-operator --replicas=1\nkubectl -n <namespace> scale deployment mendix-agent --replicas=0\nkubectl -n <namespace> scale deployment mendix-agent --replicas=1\n```\n\n----------------------------------------\n\nTITLE: Result of Subtracting Seconds Example\nDESCRIPTION: Shows the output of subtracting 30 seconds from January 1, 2007, 01:01:01. The result is January 1, 2007, 01:00:30 in Central European Time.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nMon Jan 01 01:00:30 CET 2007\n```\n\n----------------------------------------\n\nTITLE: Using Expression-Based Decision in Mendix Microflow\nDESCRIPTION: Example of using an expression in a decision element where the customer grade determines which flow to follow. The expression '$Customer/Grade' evaluates the customer's grade attribute to direct the microflow.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/decisions/decision.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\n$Customer/Grade\n```\n\n----------------------------------------\n\nTITLE: Selecting from a Single Entity in OQL\nDESCRIPTION: This snippet demonstrates a simple select query from one entity in OQL. It shows how to select a specific attribute from the Sales.Customer entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer/LastName\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Return Value Table for Get Simple Checkbox Set Selector Value\nDESCRIPTION: Specifies the return value of the 'Get Simple Checkbox Set Selector Value' action, which is a boolean indicating the current state of the checkbox.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/appstore-widg-acts/simple-checkbox-set-selector/get-value.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Description\n---- | --------- | ---------------\nChecked | Boolean | The current value of the checkbox.\n```\n\n----------------------------------------\n\nTITLE: Converting String OrderID to Integer in Microflow\nDESCRIPTION: Example of a microflow operation that converts the OrderID string parameter to an integer variable required for database retrieval.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/ConvertOrderID.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Adding Toggle Method for State Change\nDESCRIPTION: Introduces a method named toggleCollapsed to the GroupBox that toggles the collapsed state when invoked.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_30\n\nLANGUAGE: tsx\nCODE:\n```\nprivate toggleCollapsed = (): void => {\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    const collapsed = !this.state.collapsed;\n```\n\nLANGUAGE: tsx\nCODE:\n```\n    this.setState({ collapsed });\n```\n\nLANGUAGE: tsx\nCODE:\n```\n};\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for File Result in Operation\nDESCRIPTION: This JSON schema is applied when the output of a microflow operation isn't mapped or isn't based on a message definition. The result defaults to a file type.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{ \\\"type\\\": \\\"file\\\" }\n```\n\n----------------------------------------\n\nTITLE: ListValue Interface Definition in TypeScript\nDESCRIPTION: Core interface definitions for ListValue and ObjectItem types that represent datasource collections in Mendix widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ObjectItem {\n    id: GUID;\n}\n\nexport interface ListValue {\n    status: ValueStatus;\n\n    offset: number;\n    limit: number;\n    setOffset(offset: number): void;\n    setLimit(limit: Option<number>): void;\n    requestTotalCount(needTotalCount: boolean): void;\n    hasMoreItems?: boolean;\n    totalCount?: number;\n    items?: ObjectItem[];\n\n    sortOrder: SortInstruction[];\n    filter: Option<FilterCondition>;\n    setSortOrder(sortOrder: Option<SortInstruction[]>): void;\n    setFilter(filter: Option<FilterCondition>): void;\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Vite Configuration with Dockable Pane Entry Point\nDESCRIPTION: Complete Vite configuration file showing the build settings for the extension, including the entry points for the main extension logic and UI components. The highlighted lines show the configuration for the dockable pane endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig, ResolvedConfig, UserConfig } from \"vite\";\n\nexport default defineConfig({\n  build: {\n    lib: {\n        formats: [\"es\"],\n        entry: {\n            main: \"src/main/index.ts\",\n            tab: \"src/ui/tab.tsx\",\n            dockablepane: \"src/ui/dockablepane.tsx\",\n        },\n    },\n    rollupOptions: {\n        external: [\"@mendix/component-framework\", \"@mendix/model-access-sdk\"],\n    },\n    outDir: \"./dist/myextension\",\n  },\n} satisfies UserConfig);\n```\n\n----------------------------------------\n\nTITLE: Asynchronous Wait Function with Promise\nDESCRIPTION: Implementation of an asynchronous JavaScript action that creates a delay using setTimeout wrapped in a Promise.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nfunction Wait(delay) {\n    // BEGIN USER CODE\n    return new Promise(function(resolve) {\n        window.setTimeout(function(){\n            resolve();\n        }, delay);\n    });\n    // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Verifying Merge with Git Command Line\nDESCRIPTION: This shell command demonstrates how to merge a branch named 'origin/branch' into the current branch using Git. It highlights the expected output when conflicts occur during the merge process, indicating that Studio Pro is required for resolution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/merge.md#2025-04-21_snippet_6\n\nLANGUAGE: Shell\nCODE:\n```\n$ git merge origin/branch\nChecking MPR Versions.\nComplete.\nConverting MPRs\nComplete.\nMerging MPRs.\nConflicts found during merging. Please resolve them by opening the project in Studio Pro.\nComplete.\nAuto-merging MyBlankApp.mpr\nCONFLICT (content): Merge conflict in MyBlankApp.mpr\nAutomatic merge failed; fix conflicts and then commit the result.\n```\n\n----------------------------------------\n\nTITLE: Limiting GraphQL Results in Mendix\nDESCRIPTION: This query retrieves the names of the first three employees. It demonstrates how to use the first parameter to limit the number of returned objects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\n{\n    employees(first: 3) {\n        name\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Schema for List Parameter in Mendix REST Operation\nDESCRIPTION: This snippet shows the JSON schema structure for a list parameter in a Mendix REST operation request body, referencing a definition for the list items.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"type\": \"array\",\n  \"items\": [{ \"$ref\": \"#/definitions/#definition_name#\"}]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth Authentication in Mendix\nDESCRIPTION: Implementation steps for setting up OAuth authentication between Mendix and Snowflake, including configuration of connection details and token generation for secure access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/snowflake-rest-sql.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Configuring Amazon S3 Storage Resource Prefix\nDESCRIPTION: Runtime setting that allows prefixing the key when storing or retrieving files from Amazon S3 storage, enabling better organization of stored resources.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/10.6.md#2025-04-21_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\ncom.mendix.storage.s3.ResourceNamePrefix\n```\n\n----------------------------------------\n\nTITLE: Domain Model Entity Example\nDESCRIPTION: Basic XML structure showing two entities (Order and Product) in a Mendix domain model with their respective attributes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/translatable-texts/translate-your-app-content.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n- Order\n    - OrderNumber (Integer)\n- Product\n    - ProductName (String)\n```\n\n----------------------------------------\n\nTITLE: Basic Native Dependency Declaration Format in JSON\nDESCRIPTION: The basic JSON structure for declaring native dependencies in a declaration file. This shows the expected format with a simple dependency example.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-native-dependencies.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"nativeDependencies\": {\n        \"dependency-name\": \"1.2.3\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Oracle Privileges Required for Mendix\nDESCRIPTION: List of essential Oracle database privileges needed for Mendix application setup and runtime operations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/data-storage/oracle.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nGRANT CREATE SESSION TO mendix;\nGRANT CREATE SEQUENCE TO mendix;\nGRANT CREATE TABLE TO mendix;\n```\n\n----------------------------------------\n\nTITLE: Simple JSON Object Example\nDESCRIPTION: An example of a simple JSON object containing a name property with a string value. This demonstrates the basic structure of a JSON object with curly braces and key-value pairs.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/json-structures.md#2025-04-21_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"name\": \"John\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example REST Service URL Structure in Mendix\nDESCRIPTION: Demonstrates the default URL structure of a Mendix REST service endpoint, showing how the service name and version are incorporated into the URL path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttp://localhost:8080/rest/my_service_name/v1\n```\n\n----------------------------------------\n\nTITLE: OQL Date Difference Function\nDESCRIPTION: DB2 DATEDIFF function implementation that was fixed to correctly return negative values where applicable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.8.md#2025-04-21_snippet_4\n\nLANGUAGE: OQL\nCODE:\n```\nDATEDIFF\n```\n\n----------------------------------------\n\nTITLE: Division with 'div' Syntax in Mendix Expressions\nDESCRIPTION: Shows how to divide numbers using the 'div' syntax in Mendix. Division operations can result in approximations for infinite decimal expansions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n3 div 5\n```\n\nLANGUAGE: java\nCODE:\n```\n0.6\n```\n\n----------------------------------------\n\nTITLE: Pushing Private Svix Server Image - Docker Push Command\nDESCRIPTION: This snippet outlines the command to push the created Docker image of the private Svix server to a specified private image registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\ndocker push {customer-private-image-registry-url}/svix/svix-server:v1.25.tls\n```\n\n----------------------------------------\n\nTITLE: Basic Log Subscriber Response Format\nDESCRIPTION: Standard response format returned after log subscriber operations. Shows the basic structure with feedback object and result code.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"feedback\": {},\n  \"result\": 0\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Filtering Database Orders using XPath\nDESCRIPTION: Demonstrates how to retrieve orders from the database and filter them using an XPath constraint based on order status\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/working-with-lists-in-a-microflow.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n[OrderStatus = 'Processing']\n```\n\n----------------------------------------\n\nTITLE: PWA Firebase Configuration Object\nDESCRIPTION: Configuration object required for setting up notifications in Progressive Web Apps\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n// Example of the configuration object structure\n{\n  \"apiKey\": \"your-api-key\",\n  \"authDomain\": \"your-app.firebaseapp.com\",\n  \"projectId\": \"your-project-id\",\n  \"storageBucket\": \"your-app.appspot.com\",\n  \"messagingSenderId\": \"your-sender-id\",\n  \"appId\": \"your-app-id\"\n}\n```\n\n----------------------------------------\n\nTITLE: Show App Version Command Usage\nDESCRIPTION: Command to display the publisher-side or consumer-side version of a Mendix solution. Can show both current version and 'based on' version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nmx show-app-version MPR-FILE [OPTIONS]\n```\n\n----------------------------------------\n\nTITLE: Defining RANGEEND Function Syntax in Mendix OQL\nDESCRIPTION: Shows the syntax for using the RANGEEND function in Mendix OQL. The function takes a range parameter as an argument and returns its end value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangeend.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nRANGEEND ( $range )\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Mendix Docs Project with Node.js\nDESCRIPTION: Command to install project dependencies using npm after cloning the repository and installing Node.js.\nSOURCE: https://github.com/mendix/docs/blob/development/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Importing Web Service URL Configuration\nDESCRIPTION: Example URL format for importing a web service WSDL in Mendix. Shows the standard format for a WSDL service endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_0\n\nLANGUAGE: URL\nCODE:\n```\nhttp://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso?WSDL\n```\n\n----------------------------------------\n\nTITLE: Getting Runtime Information in Mendix with JSON\nDESCRIPTION: Request and response format for retrieving information about the Mendix Runtime including version, build, Java version, and other runtime details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"about\", \"params\":{} }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"feedback\":{\n      \"model_version\":\"unversioned\",\n      \"copyright\":\"Copyright © 2003-2016 Mendix bv. All rights reserved.\",\n      \"build\":\"unreleased\",\n      \"vendor\":\"Mendix\",\n      \"name\":\"Mendix Runtime\",\n      \"java_version\":\"1.8.0_77\",\n      \"xasid\":\"68ece856-3771-4024-9c42-078aaa2282aa\",\n      \"version\":\"unreleased\"\n   },\n   \"result\":0\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping Mendix Agent Deployment\nDESCRIPTION: This command scales the deployment of the Mendix Agent down to zero replicas, stopping it if it was installed in Connected mode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-upgrade-guide.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nkubectl -n {namespace} scale deployment mendix-agent --replicas=0\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Revenue per Month - SQL\nDESCRIPTION: This snippet calculates the average revenue per month by dividing the Revenue by the month difference between the End and Start dates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_24\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Revenue / DATEDIFF(MONTH, End, Start ) as avg_revenue FROM Sales.Period\n```\n\n----------------------------------------\n\nTITLE: Design Properties Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet references the design properties section for the Checkbox widget in Mendix, providing insights into the design customization options available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: XPath Query Using year-from-dateTime with Local Timezone\nDESCRIPTION: Example query that retrieves logs where the year component of DateAttribute equals 2011 using the local timezone.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-year-from-datetime.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n//Logging.Log[year-from-dateTime(DateAttribute) = 2011]\n```\n\n----------------------------------------\n\nTITLE: Constructing Client ID for Insights Hub Application\nDESCRIPTION: Demonstrates how to construct the Client ID for an Insights Hub application using host tenant, application name, and version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-development-considerations.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n*Host tenant*-*Cockpit application name*-*Cockpit application version*\n```\n\n----------------------------------------\n\nTITLE: Member Inspection List Operations in Mendix\nDESCRIPTION: Demonstrates list operations that inspect list members such as sorting, finding, and filtering based on specific attributes or conditions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/list-activities/list-operation.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nList Operations:\n1. Sort: Order CustomerList by CustomerAge\n2. Find: Locate first Customer with Name = 'John'\n3. Filter: Get all Customers with Status = 'Active'\n```\n\n----------------------------------------\n\nTITLE: Merge Command Usage\nDESCRIPTION: Command to perform three-way merge of MPR files with a common base commit. Handles merge conflicts and requires resolution in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nmx merge [OPTIONS] BASE MINE THEIRS\n```\n\n----------------------------------------\n\nTITLE: Applying Unary Minus to a Variable in Java\nDESCRIPTION: In this snippet, the unary minus operator is applied to a variable that contains a negative value. If $myVariable is -7, applying the operator results in a positive value of 7.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/unary-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n-$myVariable\n```\n\n----------------------------------------\n\nTITLE: Defining OData Service Capabilities in Mendix Studio Pro\nDESCRIPTION: XML snippet showing the structure for defining CRUD capabilities for an OData entity in Mendix Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/share-data-sources/write-data-to-another-app.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<entity name=\"Customer\" Insertable=\"true\" Readable=\"true\" Updatable=\"true\" Deletable=\"true\">\n```\n\n----------------------------------------\n\nTITLE: Alert Block for Offline Data Sources\nDESCRIPTION: Markdown alert block explaining which data sources are supported in offline applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-sources/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nDatabase and nanoflow data sources are the only data sources supported offline. If a list widget has a database data source in an offline application, the data will come from the database that is situated on the device. This database can be synced with a [button](/refguide9/button-properties/) widget for creating a new object.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Common Section Properties for Login ID Text Box\nDESCRIPTION: This snippet provides a link to the common section properties documentation for the Login ID text box widget, covering shared attributes and configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/login-id-text-box.md#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Running MxBuild for Bundling Mendix App\nDESCRIPTION: Command to run MxBuild for bundling a Mendix app's resources and generating native app packages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmxbuild.exe --java-home=\"JDKDirectory\" --java-exe-path=\"javaExecutable\" --target=deploy --native-packager --loose-version-check path-to-your-app-mpr-file\n```\n\n----------------------------------------\n\nTITLE: Creating Grafana Admin Secret\nDESCRIPTION: This command creates a Kubernetes secret containing the Grafana admin username and password.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-monitor.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nkubectl --namespace {namespace} create secret generic grafana-admin --from-literal=admin-user={username} --from-literal=admin-password={password}\n```\n\n----------------------------------------\n\nTITLE: NULL Constants with Required Aliases in OQL v2\nDESCRIPTION: The corrected version of the previous query, adding an alias to the NULL constant to comply with OQL v2 requirements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nSELECT\n  Name,\n  NULL as NullColumn\nFROM Module.City\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Permissions with GET Request\nDESCRIPTION: HTTP GET request to retrieve existing team members' permissions for a specific environment of an app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-4.md#2025-04-21_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nGET /apps/80a28d6e-c5fc-43d9-87c2-d7d56b07542e/environments/6b61f27c-dac9-48c5-b359-f861374ceb36/permissions\n```\n\n----------------------------------------\n\nTITLE: Adding Search Parameter to REST Template in Mendix\nDESCRIPTION: Modification to the REST service template that adds a name-based search filter parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_6\n\nLANGUAGE: expression\nCODE:\n```\n&name_like={4}\n```\n\n----------------------------------------\n\nTITLE: Configure Mobile Toolkit CLI Command\nDESCRIPTION: Command to run the Mobile Toolkit configuration CLI tool for configuring native mobile projects using a config.json file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/native-template/nt-studio-pro-8-parent/nt-5.1-rn.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnative-mobile-toolkit configure --config-path='./config.json'\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run configure\n```\n\n----------------------------------------\n\nTITLE: Configuring While Loop in Mendix Microflow\nDESCRIPTION: Example of configuring a While loop in a Mendix Microflow to log numbers from 1 to 5 using a counter variable and condition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/loop.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nLoop\n  Type: While\n  Expression: $Counter <= 5\n  Log activity\n    Message: $Counter\n  Change activity\n    Variable: Counter\n    Change member: Value\n    Value: $Counter + 1\n```\n\n----------------------------------------\n\nTITLE: View Menu Shortcut Keys\nDESCRIPTION: Captures the keyboard shortcuts for Full Screen and Distraction Free modes in Mendix Studio Pro\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/menus/view-menu/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Full Screen\nShortcut key: <kbd>F11</kbd>\n\n### Distraction Free Mode\nShortcut key: <kbd>Shift</kbd> + <kbd>F11</kbd>\n```\n\n----------------------------------------\n\nTITLE: Example REST Service Location URL\nDESCRIPTION: Demonstrates the default URL generation for a REST service, showing how service name and version are incorporated into the location\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-service/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttp//localhost:8080/rest/my_service_name/v1\n```\n\n----------------------------------------\n\nTITLE: Finding Radio Button Input Element with jQuery\nDESCRIPTION: jQuery selector to find a specific radio button input element within a widget using mx-name and label text\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-07-radiobuttons.md#2025-04-21_snippet_0\n\nLANGUAGE: jQuery\nCODE:\n```\n$('.mx-name-radioButtons1 .radio label:contains(\"ATS Option 5\") input')\n```\n\n----------------------------------------\n\nTITLE: Finding Last Occurrence of Substring in Java\nDESCRIPTION: Demonstrates the use of the findLast function to locate the last occurrence of a substring within a string, with an optional last search position parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nfindLast('thisismystring', 't')\n```\n\nLANGUAGE: java\nCODE:\n```\nfindLast('thisismystring', 'yourstring')\n```\n\nLANGUAGE: java\nCODE:\n```\nfindLast('thisismystring', 'i', 5)\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Less than Operator\nDESCRIPTION: Shows how the less than operator works in OQL expressions, returning true for values less than a specified amount.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n| `<` | Less than | `Price < 9.80` returns true if price is 9.70, false if price is 9.80. |\n```\n\n----------------------------------------\n\nTITLE: Basic Product Query Example\nDESCRIPTION: A simple OQL query to select name and stock from the Sales.Product entity, used as a basis for the aggregation examples.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name, Stock FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Inline Code Block Example in Markdown\nDESCRIPTION: Demonstrates the syntax for creating inline code blocks using backticks in Markdown, specifically for marking up the word 'json'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/gfm-syntax.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`json`\n```\n\n----------------------------------------\n\nTITLE: Configuring Host Tenant Constants\nDESCRIPTION: Configuration constants that need to be set in the SiemensInsightsHubSingleSignOn module for connecting to the Insights Hub tenant.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-mobile-native.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nHostTenant = name of your tenant\nMindSphereGatewayURL\nPublicKeyURL\n```\n\n----------------------------------------\n\nTITLE: Creating Test Entity Microflow with Startup Configuration\nDESCRIPTION: Designing a microflow to create a test entity and configure it to run after application startup\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/notifications/local-notif-parent/local-notif-data.md#2025-04-21_snippet_4\n\nLANGUAGE: Mendix Microflow\nCODE:\n```\nMicroflow: DS_TestEntity\nActivities:\n- Create Object (Entity: TestEntity)\n- Commit Object\n- End Event (Return: true)\n```\n\n----------------------------------------\n\nTITLE: Using Subquery with EXISTS Operator in WHERE Clause in SQL\nDESCRIPTION: Shows how to use a subquery with the EXISTS operator in the WHERE clause. The subquery can return any number of rows and columns. This example finds customers who have made requests.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_59\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.Customer Cust\nWHERE\n\tEXISTS (\n\t\tSELECT * FROM Sales.Request Req\n\t\tWHERE Req/CustomerName = Cust/LastName\n\t)\n```\n\n----------------------------------------\n\nTITLE: Delete Object Properties Configuration\nDESCRIPTION: Set properties for delete object activity including object/list selection, refresh in client behavior, and handling of associated objects and events.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/object-activities/deleting-objects.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Properties\nCODE:\n```\nAction: Delete Object\nObject/List: [Selected Object]\nRefresh in Client: Yes/No\n```\n\n----------------------------------------\n\nTITLE: Repository Optimization Using Git GC Command\nDESCRIPTION: Command to manually optimize Git repository by running housekeeping tasks and creating pack files to reduce stored data size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-faq.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit gc\n```\n\n----------------------------------------\n\nTITLE: Creating XSD Header for XML Import\nDESCRIPTION: This snippet provides the header section for an XSD file, which is essential for defining the structure of XML data to be imported. The header ensures proper element structuring and namespace usage in a compliant XSD schema.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/importing-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_2\n\nLANGUAGE: xsd\nCODE:\n```\n<?xml version=\"1.0\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\">\n<xs:element name=\"CountriesImport\">\n<xs:complexType>\n<xs:sequence>\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Properties in GroupBox XML Schema\nDESCRIPTION: XML configuration that adds expandIcon and collapseIcon properties to a Mendix native GroupBox widget, allowing developers to customize the expand/collapse indicators.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_30\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<widget id=\"com.mendix.widget.native.groupbox.GroupBox\" pluginWidget=\"true\" offlineCapable=\"true\" supportedPlatform=\"Native\"\n    xmlns=\"http://www.mendix.com/widget/1.0/\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.mendix.com/widget/1.0/ ../node_modules/mendix/custom_widget.xsd\">\n    <name>Group box</name>\n    <description />\n    <icon />\n    <properties>\n        <propertyGroup caption=\"General\">\n            <property key=\"content\" type=\"widgets\" required=\"false\">\n                <caption>Content</caption>\n                <description>Widgets to place inside.</description>\n            </property>\n            <property key=\"headerCaption\" type=\"string\" required=\"false\">\n                <caption>Header caption</caption>\n                <description />\n            </property>\n            <property key=\"expandIcon\" type=\"icon\" required=\"false\">\n                <caption>Expand icon</caption>\n                <description>Icon used to indicate that the group box can be expanded.</description>\n            </property>\n            <property key=\"collapseIcon\" type=\"icon\" required=\"false\">\n                <caption>Collapse icon</caption>\n                <description>Icon used to indicate that the group box can be collapsed.</description>\n            </property>\n        </propertyGroup>\n    </properties>\n</widget>\n```\n\n----------------------------------------\n\nTITLE: Common Section Include\nDESCRIPTION: Markdown shortcode for including a reusable snippet about common microflow section documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/complete-task.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/microflow-common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Fetching All Customers with GET Request\nDESCRIPTION: Example HTTP GET request to retrieve all customer resources from an OData API endpoint.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers\n```\n\n----------------------------------------\n\nTITLE: Installing App Dependencies\nDESCRIPTION: Run the following command to install necessary dependencies using npm. This command should be executed in the app's root directory. For NPM versions 7 and above, use the legacy-peer-deps flag.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install --legacy-peer-deps\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Operation Request Body - No Message Definition\nDESCRIPTION: Defines the JSON schema for a request body parameter when there is no import mapping or the mapping is not based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{ \"type\": \"file\" }\n```\n\n----------------------------------------\n\nTITLE: Vertical Form Group Input Widget Structure in HTML\nDESCRIPTION: Demonstrates the new HTML structure for vertical form group input widgets, including label, input control, and optional validation message elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-group mx-name-textBox4 [...]\" [...]>\n\t<label class=\"control-label\" for=\"123_abc\">\n\t\tCaption\n\t</label>\n\n\t<INPUT-CONTROL/>\n\t<!-- OR for readonly style text -->\n\t<div class=\"form-control-static\">value</div>\n\n\t<!-- optional: validation message -->\n\t<div class=\"alert alert-danger mx-validation-message\">checkboom</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Microflow to Correct UserType and Generate Report in Mendix\nDESCRIPTION: The `User_Correct_UserType` microflow orchestrates the process of retrieving/creating `UserReportInfo` and evaluating/setting `UserType`. It uses the `User_RetrieveOrCreateUserReportInfo` and `User_EvaluateAndSetUserType` microflows, then creates and populates the `UserTypeReport` entity, returning a list of these entities for display in a report.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/general/populate-user-type.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n\"3. Create a new microflow `User_Correct_UserType` which will use the microflows `User_RetrieveOrCreateUserReportInfo`  and `User_EvaluateAndSetUserType` created above. In this microflow, we create and populate the `UserTypeReport` entity and return a list of these entities at the end of the microflow.\"\n```\n\n----------------------------------------\n\nTITLE: Image Widget Structure in Mendix Native Mobile Apps\nDESCRIPTION: This XML structure demonstrates how an Image widget is built in Mendix native mobile apps, with a container element wrapping an image element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<image/>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Using LENGTH Function in OQL\nDESCRIPTION: The LENGTH function takes a string expression as an argument and returns its length. It is used in OQL queries to determine the number of characters in a string value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-length.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nLENGTH ( expression )\n```\n\n----------------------------------------\n\nTITLE: Excluding System and Protected Modules\nDESCRIPTION: Export project model JSON while excluding system and protected modules, available from Mendix 10.12.0 onwards.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmx dump-mpr --exclude-system-module --exclude-protected-modules [TARGET-FILE].mpr\n```\n\n----------------------------------------\n\nTITLE: FileValue Interface Definition in TypeScript\nDESCRIPTION: Defines the FileValue interface for representing files in Mendix pluggable widgets, containing the URI and name of the file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface FileValue {\n    readonly uri: string;\n    readonly name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Boolean Data Type Example\nDESCRIPTION: Represents a true or false value with two possible states. Used for logical conditions and flag-based attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/data-types.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntrue\nfalse\n```\n\n----------------------------------------\n\nTITLE: Setting Up Android NFC Gradle Configuration\nDESCRIPTION: Configure Gradle settings to include the NFC manager library for Android native projects\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_7\n\nLANGUAGE: gradle\nCODE:\n```\ninclude ':react-native-nfc-manager'\nproject(':react-native-nfc-manager').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-nfc-manager/android')\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers by Name in OQL\nDESCRIPTION: This OQL query retrieves the first names of all customers with the last name 'Jansen' from the Sales.Customer entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: OQL\nCODE:\n```\nSELECT FirstName FROM Sales.Customer WHERE Name = 'Jansen'\n```\n\n----------------------------------------\n\nTITLE: URL Encoding Strings with urlEncode Function in Java\nDESCRIPTION: The urlEncode function converts a string to be used in a URL. It takes a single string parameter and returns the URL-encoded string.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_15\n\nLANGUAGE: java\nCODE:\n```\nurlEncode('Hello, world!')\n```\n\nLANGUAGE: java\nCODE:\n```\n'Hello%2C+world%21'\n```\n\n----------------------------------------\n\nTITLE: Custom Date Format Tokens Reference in Markdown\nDESCRIPTION: A snippet reference to custom date format tokens that can be used when formatting date and time attributes in document template columns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/document-templates/data-grid-document-template/columns-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/custom-date-format-tokens.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Including Events Section Link\nDESCRIPTION: This snippet links to the events section of the container documentation in Mendix to provide details on actions linked to user clicks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/structure-widgets/container.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: User Task Page Access Configuration\nDESCRIPTION: Demonstrates the different access options for user task pages, including restrictions on page opening and task completion\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/workflow-activities/show-task-page.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"whoCanOpen\": {\n    \"assignedUser\": \"Only assigned user can open\",\n    \"usersWithAccess\": \"Multiple users can open, but only assigned user completes\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Rounding Numbers with round Function\nDESCRIPTION: Rounds a number to a specified precision with configurable rounding modes. Supports optional precision parameter and handles different rounding strategies.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nround(3.5)\n```\n\nLANGUAGE: java\nCODE:\n```\nround(88.725,2)\n```\n\n----------------------------------------\n\nTITLE: Events Section Link for On Change\nDESCRIPTION: Links to the events section of the text area properties documentation, particularly regarding the 'on change' event handling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Including Validation Section Snippet\nDESCRIPTION: This snippet documents the validation section of the text area widget, detailing how to implement validation rules within the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/widget-validation-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Calculating Calendar Years Between Dates in Java\nDESCRIPTION: Example of using calendarYearsBetween function to calculate the difference between two dates in years.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\ncalendarYearsBetween(dateTime(2007, 1, 1, 10, 1, 1), dateTime(2017, 1, 1, 1, 1, 1))\n```\n\n----------------------------------------\n\nTITLE: Styling Progress Bar Structure\nDESCRIPTION: XML structure showing the container, bar, fill and validation message elements for styling a progress bar widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_23\n\nLANGUAGE: XML\nCODE:\n```\n<container>\n\t<bar><fill/></bar>\n\t<validationMessage/>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Styling Progress Circle Structure\nDESCRIPTION: XML structure showing the container, circle, fill and validation message elements for styling a progress circle widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_24\n\nLANGUAGE: XML\nCODE:\n```\n<container>\n\t<circle><fill/></circle>\n\t<validationMessage/>\n</container>\n```\n\n----------------------------------------\n\nTITLE: Simplified String Concatenation with Trim\nDESCRIPTION: A simplified expression that combines full name and first name with proper trimming to prevent additional whitespaces.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/string-concatenation.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntrim(  $ContactPerson/Fullname + ' ' + trim(  $ContactPerson/Firstname ) )\n```\n\n----------------------------------------\n\nTITLE: Checking for an Empty Object in Mendix\nDESCRIPTION: Demonstrates how to check if an object is empty in a Mendix expression. Returns a Boolean value indicating whether the object exists or not.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n$object1 = empty\n```\n\n----------------------------------------\n\nTITLE: Including Editability Section Snippet\nDESCRIPTION: This snippet is about the editability section of the text area widget, providing essential links for editing configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Tags Example Output in JSON\nDESCRIPTION: Example response output for creating a tag on a Mendix environment. The response confirms the tag has been created.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"Tag\": \"A\"\n}\n```\n\n----------------------------------------\n\nTITLE: Extracting Seconds in XPath - Studio Pro\nDESCRIPTION: This snippet uses the `seconds-from-dateTime()` function in the Studio Pro environment to filter records where the seconds of the DateAttribute equals 30.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-seconds-from-datetime.md#2025-04-21_snippet_0\n\nLANGUAGE: XPath\nCODE:\n```\n[seconds-from-dateTime(DateAttribute) = 30]\n```\n\n----------------------------------------\n\nTITLE: Querying Customers from Specific Module in Mendix\nDESCRIPTION: This XPath query retrieves all customers from the Sales module. The '.' token is used to separate the module name from the entity name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Using LIKE Operator for Pattern Matching in OQL\nDESCRIPTION: Shows how to use the LIKE operator for pattern matching in OQL, including the use of wildcards and escaping special characters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nCity LIKE '%dun'\nSymbol LIKE '%\\%'\n```\n\n----------------------------------------\n\nTITLE: Accessing REST Documentation URL in Markdown\nDESCRIPTION: This snippet shows the URL format for accessing the REST documentation in a Mendix app. It demonstrates how to construct the documentation URL using markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`http://yourapp.com/rest-doc/`\n```\n\n----------------------------------------\n\nTITLE: Filtering Customers with Name Ending in 'sen'\nDESCRIPTION: XPath query to select customers whose name ends with the substring 'sen', demonstrating the ends-with() function in Mendix Studio Pro\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-ends-with.md#2025-04-21_snippet_0\n\nLANGUAGE: StudioPro\nCODE:\n```\n[ends-with(Name, 'sen')]\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.Customer[ends-with(Name, 'sen')]\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Inequality Operator\nDESCRIPTION: Describes the not equal to operator in OQL expressions, used for comparing two values for inequality.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n| `!=` | Not equal to | `Price != 9.80` returns true if price is 9.90, false if price is 9.80. |\n```\n\n----------------------------------------\n\nTITLE: Building and Running Mendix Docs Local Server with npm\nDESCRIPTION: Command to build and run a local server for the Mendix documentation site using npm script.\nSOURCE: https://github.com/mendix/docs/blob/development/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: GraphQL Introspection Query in Mendix\nDESCRIPTION: This introspection query retrieves the names of the types that are available in the GraphQL schema. It demonstrates how to use introspection to explore the schema.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-graphql-operations.md#2025-04-21_snippet_6\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  __schema {\n    types {\n      name\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Content-Type Header Example\nDESCRIPTION: Example of HTTP headers used for file operations, specifically for specifying MIME type and content disposition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-operation.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nContent-Type: [mime-type]\nContent-Disposition: [disposition]\n```\n\n----------------------------------------\n\nTITLE: Introducing setLabel Property to WidgetValueType Element\nDESCRIPTION: A new property 'setLabel' has been added to the WidgetValueType element in the CustomWidgets module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.5.md#2025-04-21_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\n#### WidgetValueType (Element)\n\n* We introduced the `setLabel` property.\n```\n\n----------------------------------------\n\nTITLE: Exporting Specific Mendix Runtime Versions\nDESCRIPTION: Example of specifying Mendix Runtime versions to export using wildcards and version lists.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-migrating.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n10.12.*, 9.24.26.*\n```\n\n----------------------------------------\n\nTITLE: Counting All Orders with XPath in Mendix\nDESCRIPTION: This XPath query counts all the placed orders in the Sales.Order entity. It demonstrates the basic usage of the count() function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-count.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncount(//Sales.Order)\n```\n\n----------------------------------------\n\nTITLE: Inserting Visibility Section Link\nDESCRIPTION: This snippet provides a link to the visibility section, discussing how to control the visibility properties of table widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/table.md#2025-04-21_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Figure Shortcode in Markdown\nDESCRIPTION: Shows how to include an image with specific styling using Mendix's custom figure shortcode.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-basics.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/appstore/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-basics/repository-add-item.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Using LIKE Operator for Pattern Matching in SQL\nDESCRIPTION: Demonstrates the use of LIKE operator with wildcards to match property types ending with 'ment'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\nSelect PropertyType FROM RealEstate.Properties WHERE PropertyType LIKE '%ment'\n```\n\n----------------------------------------\n\nTITLE: Configuring Error Bar Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a scatter plot with error bars.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 0, 1, 2 ],\n  \"y\": [ 6, 10, 2 ],\n  \"error_y\": {\n    \"type\": \"data\",\n    \"array\": [ 4, 2, 3 ]\n  },\n  \"type\": \"scatter\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Using IS NOT NULL in SQL Query\nDESCRIPTION: Shows how to use the IS NOT NULL operator to filter out rows with null values in the Revenue column.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Revenue, Cost FROM Sales.Finance WHERE Revenue IS NOT NULL\n```\n\n----------------------------------------\n\nTITLE: Local Font Configuration in SCSS\nDESCRIPTION: Updating font import path to use local font files instead of Google Fonts CDN in Mendix web theme\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_16\n\nLANGUAGE: scss\nCODE:\n```\n$font-family-import: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700\"\n```\n\nLANGUAGE: scss\nCODE:\n```\n$font-family-import: \"./fonts/open-sans.css\"\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Dependencies via CocoaPods\nDESCRIPTION: Installs necessary iOS dependencies for a Mendix native mobile app using CocoaPods. Required for iOS development on Mac OS.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Styling Buttons in Mendix\nDESCRIPTION: CSS classes for modifying button appearance including size, width, borders, and alignment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\nbtn-lg\nbtn-sm\nbtn-block\nbtn-bordered\nbtn-transparent\nbtn-image\npull-right\nbtn-right\nbtn-attached-right\nbtn-attached-left\nbtn-attached-bottom\nbtn-attached-top\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Object Parameter in Request Body\nDESCRIPTION: This JSON schema snippet refers to a definition when an operation request body parameter is an object, based on an import mapping.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \\\"$ref\\\": \\\"#/definitions/#definition_name#\\\"}\n```\n\n----------------------------------------\n\nTITLE: Synchronization Mode Configuration\nDESCRIPTION: Configuration options for synchronizing data in Mendix mobile applications, including behavior for different synchronization modes\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/synchronize.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nThis activity can only be used in nanoflows that run in an offline-first app (a native or offline PWA app).\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Using formatDecimal Function in Microflows\nDESCRIPTION: Examples of formatDecimal function calls in Mendix microflows that convert decimal values to formatted strings with different patterns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-and-format-decimal-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nformatDecimal(1234.56, '#,###.#')\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDecimal(1234.56, '¤ #,##0.00')\n```\n\nLANGUAGE: java\nCODE:\n```\nformatDecimal(0.56, '% ##0')\n```\n\n----------------------------------------\n\nTITLE: Selecting from Multiple Entities in OQL\nDESCRIPTION: This example demonstrates how to select data from multiple entities at once, creating a cartesian product of objects from both entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Sales.Customer, Sales.Request\n```\n\n----------------------------------------\n\nTITLE: Reference Set Selector Property Configuration\nDESCRIPTION: Configuration options for the Reference Set Selector widget, including display, selection, and interaction properties\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/input-widgets/reference-set-selector.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nwidth_unit: pixels | percentage\ncolumn_widths: '20;80'\nnumber_of_rows: 5\nshow_empty_rows: false\nselection_mode: single_selection\n```\n\n----------------------------------------\n\nTITLE: Keyboard Shortcuts in Mendix Studio Pro\nDESCRIPTION: Common keyboard shortcuts for Mendix Studio Pro App Menu operations including synchronization, deployment, and cloud deployment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/app-menu/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nF4 - Synchronize App Directory\nF6 - Deploy for Eclipse\nF7 - Create Deployment Package\nCtrl + F5 - Deploy to Licensed Cloud Node\n```\n\n----------------------------------------\n\nTITLE: Visibility Section Snippet in Checkbox Documentation\nDESCRIPTION: This snippet references the visibility properties section for the Checkbox widget, discussing how to control the visibility of the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Studio Pro Version\nDESCRIPTION: This command displays the version of Studio Pro that was last used to open the specified Mendix app.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_17\n\nLANGUAGE: Text\nCODE:\n```\n\"mx show-version C:\\\\Mendix\\\\App1\\\\App1.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Example of REPLACE Function Usage\nDESCRIPTION: This example demonstrates how the REPLACE function might be used in a query. It shows the case-sensitive nature of the function in most database implementations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-replace.md#2025-04-21_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nREPLACE('ABC abc', 'abc', 'xyz')\n```\n\n----------------------------------------\n\nTITLE: Complex Pattern Matching with LIKE in SQL\nDESCRIPTION: Demonstrates matching strings containing 'a' and ending with 't' using the LIKE operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nSelect PropertyType FROM RealEstate.Properties WHERE PropertyType LIKE '%a%t'\n```\n\n----------------------------------------\n\nTITLE: Authenticating to Team Server - SVN Credentials\nDESCRIPTION: Instructions for connecting to Mendix Team Server via SVN using Mendix account credentials\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n* **URL** - `https://teamserver.sprintr.com/<your AppID>/`\n* **Username** - your Mendix account username\n* **Password** - your Mendix account password\n```\n\n----------------------------------------\n\nTITLE: Starting Selenium Hub Command\nDESCRIPTION: Command to start the Selenium hub server on the local machine. This initializes the hub that will manage browser nodes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\njava -jar selenium-server-standalone-3.8.1.jar -role hub\n```\n\n----------------------------------------\n\nTITLE: XPath Variable Constraint Example\nDESCRIPTION: Example of using XPath constraint with variable reference to access the Name attribute of a customer object from a surrounding data widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/data-sources/xpath-source.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n$customer/Name\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic OpenTelemetry Registry in Mendix\nDESCRIPTION: JSON configuration for setting up a basic OpenTelemetry metrics registry with URL and reporting step interval.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"type\": \"opentelemetry\",\n    \"settings\": {\n      \"url\": \"http://localhost:4318/v1/metrics\",\n      \"step\": \"30s\"\n    }\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Finding Last Substring Position\nDESCRIPTION: Locates the last occurrence of a substring within a string, returning its starting index or -1 if not found.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nfindLast('thisismystring', 't')\n```\n\nLANGUAGE: java\nCODE:\n```\nfindLast('thisismystring', 'i', 5)\n```\n\n----------------------------------------\n\nTITLE: Mendix Client Core Initialization in JavaScript\nDESCRIPTION: Core client runtime responsible for interpreting and processing user requests, managing data interactions, and controlling application flow\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/mendix-client.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Client core initialization logic\n// Controlled by Mendix, not directly modifiable by developers\n```\n\n----------------------------------------\n\nTITLE: Modifying Custom Styling\nDESCRIPTION: Guide to migrate custom styling from Atlas 2, detailing the necessary SCSS file paths to move modifications into Atlas 3 theme.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme_atlas2/styles/web/sass/app/_custom.scss\n```\n\nLANGUAGE: plaintext\nCODE:\n```\ntheme/web/main.scss\n```\n\nLANGUAGE: plaintext\nCODE:\n```\nthemesource/your-module/web/main.scss\n```\n\n----------------------------------------\n\nTITLE: Notification Generation Nanoflow\nDESCRIPTION: Creates a nanoflow (DS_Notification) that generates a new Notification object and returns it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_2\n\nLANGUAGE: mendix\nCODE:\n```\nNanoflow: DS_Notification\n  1. Create object: Notification\n  2. Set as return value: $NewNotification\n```\n\n----------------------------------------\n\nTITLE: Dependency Removal Command\nDESCRIPTION: Command to reinstall dependencies after removing an entry from package.json when removing an auto-linking supported dependency.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Defining an Assignable Return Type for Expression Property in XML\nDESCRIPTION: This XML snippet shows how to define an expression property that specifies its return type based on another attribute's configuration. The 'assignableTo' attribute indicates the relationship between the expression and the target attribute, enhancing type safety.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myAttribute\" type=\"attribute\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n\t<attributeTypes>\n\t\t<attributeType name=\"String\" />\n\t\t<attributeType name=\"Boolean\" />\n\t</attributeTypes>\n</property>\n\n<property key=\"myExpression\" type=\"expression\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n\t<returnType assignableTo=\"myAttribute\" />\n</property>\n```\n\n----------------------------------------\n\nTITLE: Android NDK Path Configuration\nDESCRIPTION: This code snippet is part of the configuration needed for a React Native project to ensure the Android NDK can be found by the build system. It sets the ANDROID_NDK environment variable and modifies the PATH variable to include the NDK path. This is critical for ensuring that any native dependencies are compiled correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/use-min-older-sp.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport ANDROID_NDK=\"~/Library/Android/sdk/ndk/*add-your-ndk-version-number*\"\nexport PATH=$PATH:$ANDROID_NDK\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section for Checkbox\nDESCRIPTION: This snippet refers to the visibility settings for the checkbox, determining when and how the widget should be shown to the user.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_8\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Sorting Items with Sort List Operation in Nanoflows - Mendix 8.9\nDESCRIPTION: This snippet introduces the new Sort list operation for nanoflows, which allows sorting items similarly to microflows. This feature improves the organization of items when processing lists in nanoflows.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.9.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nmyNanoflow.sort(list, function(a, b) { return a.property - b.property; });\n```\n\n----------------------------------------\n\nTITLE: Reference Selectors Limitations Table\nDESCRIPTION: Markdown table listing unsupported configuration options for Combo Box widget conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/widget-conversion-limitations.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Unsupported in Combo Box           |\n|------------------------------------|\n| Go to Page                         |\n| Screen Reader Caption              |\n| 'Required' Validation              |\n| 'Custom' Validation                |\n| Decimal Precision Formatting       |\n| Group Digits Formatting            |\n```\n\n----------------------------------------\n\nTITLE: Querying with LIMIT in SQL\nDESCRIPTION: This query retrieves the first ten customers, sorted by their last name using the LIMIT clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-limit-clause.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName FROM Sales.Customer\nORDER BY LastName\nLIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Scaffolding a New Mendix Widget with Yeoman\nDESCRIPTION: Command to generate a new widget project structure using the Mendix Pluggable Widget Generator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nyo @mendix/widget GroupBox\n```\n\n----------------------------------------\n\nTITLE: Configuring AAD Graph App Manifest for Native Mobile App\nDESCRIPTION: JSON configuration for defining reply URLs with types in the deprecated AAD Graph App Manifest for a native mobile application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mobile-sso.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n\"replyUrlsWithType\": [\n{\n\"url\": \"APP_NAME://oauth/callback\",\n\"type\": \"Web\"\n}\n]\n```\n\n----------------------------------------\n\nTITLE: Correct Empty Object Evaluation Expression\nDESCRIPTION: Proper expression order for evaluating empty objects, checking emptiness before attempting attribute access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n$emptyObject = empty or $emptyObject/attribute != $validObject/attribute\n```\n\n----------------------------------------\n\nTITLE: Cache Busting in Web HTML\nDESCRIPTION: Example of dynamic cache busting query parameter usage in Mendix web index.html to ensure browser resource reloading\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_15\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"mxclientsystem/mxui/mxui.js?638184496048312490\"></script>\n```\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"mxclientsystem/mxui/mxui.js?{{cachebust}}\"></script>\n```\n\n----------------------------------------\n\nTITLE: Using Quoted Alias in OQL\nDESCRIPTION: Example showing how to use a quoted alias that contains an underscore character for the Name attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer.Name AS \"Customer_Name\" FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: XML EntityContainer Name Restriction\nDESCRIPTION: Illustration of restriction where Name property in EntityContainer XML cannot contain forward slashes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.6.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<EntityContainer Name=\"ContainerName\" />\n```\n\n----------------------------------------\n\nTITLE: TypeScript Compiler Configuration\nDESCRIPTION: TypeScript configuration file (tsconfig.json) for compiling Mendix SDK project\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"compilerOptions\" : {\n\t\t\"module\" : \"commonjs\",\n\t\t\"target\" : \"es2018\",\n\t\t\"strict\": true\n\t},\n\t\"files\" : [\n\t\t\"script.ts\"\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining JSON Schema for Object Parameter in Mendix REST Operation\nDESCRIPTION: This snippet demonstrates how to reference a definition in the JSON schema for an object parameter in a Mendix REST operation request body.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \"$ref\": \"#/definitions/#definition_name#\"}\n```\n\n----------------------------------------\n\nTITLE: Simple Preview Component Implementation in React\nDESCRIPTION: Shows a simple implementation of a preview component for a pluggable widget with string properties for content and style, along with standard className property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\ntype Props = {\n    content: string;\n    style: string;\n    className: string;\n}\n\nexport const preview: React.FC<Props> = (props) => (\n    <div className={`my-pw-container ${props.className}`} style={props.style}>\n        {props.content}\n    </div>\n);\n```\n\n----------------------------------------\n\nTITLE: Template Grid Alert Component\nDESCRIPTION: Markdown alert component warning that the template grid widget is not supported on native mobile pages.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/template-grid.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}The template grid widget is not supported on native mobile pages.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Executing Action on List Item\nDESCRIPTION: Demonstrates how to retrieve and execute an action for a specific list item using ListActionValue\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_17\n\nLANGUAGE: ts\nCODE:\n```\nconst actionOnFirstItem = this.props.myListAction.get(this.props.myDataSource.item[0]);\n\nactionOnFirstItem.execute();\n```\n\n----------------------------------------\n\nTITLE: Generating OData URL for Create in JavaScript\nDESCRIPTION: This JavaScript snippet provides the URL required to point to the ProductSet collection in order to create a new product entry in the SAP system. This URL is combined with the Odata object in the Create operation to commit to the SAP back-end system. `@GWSAMPLE_BASIC.GWSAMPLE_BASIC` identifies the service root for this OData service, while `GWSAMPLE_BASIC.EntitySetNames.ProductSet` is the name of the Product collection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n\"@GWSAMPLE_BASIC.GWSAMPLE_BASIC + '/' + toString(GWSAMPLE_BASIC.EntitySetNames.ProductSet)\"\n```\n\n----------------------------------------\n\nTITLE: Radio Button Child Node Selector\nDESCRIPTION: CSS selector pattern used in the Find Widget Child Node action to locate the radio button element based on label text\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/crt-unsup-widg-acts/cab-07-radiobuttons.md#2025-04-21_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n\".radio label:contains(\"\") input\"\n```\n\n----------------------------------------\n\nTITLE: Installing iOS CocoaPods Dependencies\nDESCRIPTION: Change to the iOS directory and run `pod install` to manage iOS-specific dependencies using CocoaPods.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\ncd ios\n```\n\nLANGUAGE: Bash\nCODE:\n```\npod install\n```\n\n----------------------------------------\n\nTITLE: Conditional Statement with Enumerations in Mendix (Java)\nDESCRIPTION: Shows how to use enumerations in conditional statements, returning different enumeration values based on a condition evaluation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/enumerations-in-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nif 4>3 then\n  OrderProcessing.Status.completed\nelse\n  OrderProcessing.Status.started\n```\n\n----------------------------------------\n\nTITLE: Setting Application Tags for Metrics\nDESCRIPTION: JSON configuration for specifying common tags that should be included with all metrics.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/metrics.md#2025-04-21_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hostId\": \"7a3c0356-4dab-42ab-a139-87efb497f3e9\",\n  \"environment\": \"prod\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Native Mobile Configuration Constants\nDESCRIPTION: Configuration constants required in the NativeMobile folder for authentication and deep linking.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-mobile-native.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nClientID = client_id from app registration\nClientSecret = client_secret from app registration\nScheme = custom_scheme from app registration\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Y Axes in Mendix Charts\nDESCRIPTION: JSON configuration for charts with multiple Y axes to display different scales.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"yaxis2 data\",\n    \"yaxis\": \"y2\",\n    \"type\": \"scatter\"\n  },\n  {\n    \"name\": \"yaxis data\",\n    \"type\": \"scatter\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Hashing Algorithm Configuration\nDESCRIPTION: Selection of password hashing algorithms with security and performance considerations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/app-explorer/app/app-settings/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nHash Algorithm Options:\n  - BCrypt (default, recommended):\n      - Resistant to brute-force attacks\n      - Configurable cost (default: 12, max: 30)\n  - SSHA256:\n      - Salted Secure Hash Algorithm\n      - 256-bit digest\n```\n\n----------------------------------------\n\nTITLE: Language Selection Microflow Configuration - Database Query\nDESCRIPTION: Microflow snippet that retrieves the selected language from the database using XPath constraint\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/native-language-change.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n[Code=$LanguageCode]\n```\n\n----------------------------------------\n\nTITLE: Calculating Square Roots in Mendix\nDESCRIPTION: Computes the square root of a number. The input must be a non-negative value, as negative inputs result in an error.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nsqrt(9)\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes with Table Aliases\nDESCRIPTION: Demonstrates using table aliases in a JOIN query and selecting all attributes from a specific aliased entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Req/*\nFROM Sales.Customer Cust\nJOIN Cust/Sales.Customer_Request/Sales.Request Req\n```\n\n----------------------------------------\n\nTITLE: Customizing Chart Font Layout in JSON\nDESCRIPTION: JSON configuration for customizing chart font family, size, and color settings in Mendix charts\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-advanced-tuning.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"font\": {\n    \"family\": \"Open Sans\",\n    \"size\": 14,\n    \"color\": \"#555\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Required URL Access for Studio Pro\nDESCRIPTION: List of URLs that need to be accessible through firewall for Studio Pro to function properly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/system-requirements.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n* *.mendix.com\n* *.mendixcloud.com\n* *.teamserver.sprintr.com\n```\n\n----------------------------------------\n\nTITLE: Using IN Operator with Subquery in SQL\nDESCRIPTION: Shows how to use the IN operator with a subquery to retrieve customers with large orders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nSELECT LastName, FirstName\nFROM Sales.Customer \nWHERE LastName IN\n    (SELECT subq.LastName \n    FROM Sales.Order subq\n    WHERE subq.Number > 3)\n```\n\n----------------------------------------\n\nTITLE: Mendix SDK Dependencies Configuration\nDESCRIPTION: JSON configuration for package.json to specify Mendix SDK and related dependencies\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n\"dependencies\": {\n  \"@types/when\": \"^2.4.33\",\n  \"mendixmodelsdk\": \"^4.35.0\",\n  \"mendixplatformsdk\": \"^4.1.1\",\n  \"when\": \"^3.7.8\"\n}\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Database Configuration Example\nDESCRIPTION: Detailed JSON configuration example showing all connection parameters for a PostgreSQL database on SAP BTP\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"dbname\": \"\",\n    \"hostname\": \"\",\n    \"password\": \"\",\n    \"port\": \"\",\n    \"uri\": \"\",\n    \"read_url\": \"\",\n    \"write_url\": \"\",\n    \"username\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Milliseconds Between Dates in Java\nDESCRIPTION: Example of using millisecondsBetween function to calculate the difference between two dates in milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmillisecondsBetween(dateTime(2007, 1, 1, 1, 1, 1), dateTime(2007,1,1,1,1,3))\n```\n\n----------------------------------------\n\nTITLE: REST Service URL Path Format\nDESCRIPTION: Shows the URL path format for versioned REST services, where version numbers are included in the path structure.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/version-rest-service.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nrest/myservice/v1.1\n```\n\n----------------------------------------\n\nTITLE: Cloning Native Template Repository with Git\nDESCRIPTION: Command to clone a specific branch of the Mendix Native Template repository using Git.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/building-native-apps/native-build-locally-manually.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --single-branch --branch release/<major-version-number> <repo-url>\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Snippet\nDESCRIPTION: This snippet includes the visibility section of the text area widget documentation, outlining how to manage visibility properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Illustrating ISO-8601 Date Format for Query Parameters\nDESCRIPTION: Demonstrates the correct format for date and time parameters in query strings, following the ISO-8601 standard.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-query-parameters.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n2018-12-31T09:00:00\n```\n\n----------------------------------------\n\nTITLE: Custom Runtime Setting Example - Hash Algorithm\nDESCRIPTION: Demonstrates how to set a custom runtime setting by specifying a name and value pair for configuring the hash algorithm\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nHashAlgorithm: BCRYPT\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Widgets Directory\nDESCRIPTION: Create a new directory for custom Mendix widgets using command line and navigate into it\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nmkdir CustomWidgets\ncd CustomWidgets\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes from Customer Entity in OQL\nDESCRIPTION: Example demonstrating how to select all attributes from the Sales.Customer entity using the asterisk wildcard notation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-select-clause.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sales.Customer.* FROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Enumeration Data Type Examples\nDESCRIPTION: Represents a predefined set of named constant values, typically used for categorization or state representation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/data-types.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nRed, Green, Blue\nTodo, Running, Done\n```\n\n----------------------------------------\n\nTITLE: Negated Condition Query\nDESCRIPTION: Query using NOT operator to find customers without delivered orders, including those with no orders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[not(Sales.Customer_Order/Sales.Order/Status = 'Delivered')]\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix App for Performance Recommendations\nDESCRIPTION: This command checks the Mendix app at the specified path for errors and performance recommendations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_11\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check C:\\\\MxProjects\\\\App-main\\\\App-main.mpr -p\"\n```\n\n----------------------------------------\n\nTITLE: Including On Change Event for Radio Buttons\nDESCRIPTION: This snippet includes the on-change event action for the radio buttons widget, detailing behavior upon value change.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_8\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Radio Button Widget Child Node Selector\nDESCRIPTION: CSS selector structure used to find radio button elements within the Mendix widget hierarchy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/create-custom-actions/crt-unsup-widg-acts/cab-07-radiobuttons.md#2025-04-21_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.radio label:contains(\"\") input\n```\n\n----------------------------------------\n\nTITLE: Checking Mendix App with Suppressed Warnings File\nDESCRIPTION: This command checks the Mendix app at the specified path for errors and warnings.  Suppressed warnings are read from the provided JSON file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_13\n\nLANGUAGE: Text\nCODE:\n```\n\"mx check C:\\\\MxProjects\\\\App-main\\\\App-main.mpr c:\\\\MxFiles\\\\my-exported-suppressed-warnings.json --warnings\"\n```\n\n----------------------------------------\n\nTITLE: Evaluating 'and' Operator in Java\nDESCRIPTION: Demonstrates the use of the 'and' operator to check if both expressions are true. Returns true only if both expressions evaluate to true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/boolean-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n(6 > 4) and (3 < 5)\n```\n\nLANGUAGE: java\nCODE:\n```\n('hello' = 'hallo') and (3 < 5)\n```\n\n----------------------------------------\n\nTITLE: Beta Feature Alert Markdown\nDESCRIPTION: Markdown shortcode for displaying a warning alert about beta feature status\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/developerportal/digital-execution/portfolio-management/integrate-with-jira.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nThis feature is in beta. For more information, see [Beta Releases](/releasenotes/beta-features/).\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Authentication\nDESCRIPTION: Sets username and password for proxy servers that require authentication using JVM system properties.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/web-services/consumed-web-services/using-a-proxy-to-call-a-webservice.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n-Dhttp.proxyUser=myusername -Dhttp.proxyPassword=mypassword\n```\n\n----------------------------------------\n\nTITLE: Filtering Export by Module Names\nDESCRIPTION: Limit JSON export to specific modules, available from Mendix 10.16.0 onwards.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/dump-mpr.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmx dump-mpr --module-names MyModule,AnotherModule [TARGET-FILE].mpr\n```\n\n----------------------------------------\n\nTITLE: Creating Consumed Business Event Service in Studio Pro 9.18-9.23\nDESCRIPTION: Shows the process of creating a consumed business event service to subscribe to business events from another application\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/business-event-services/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nRight-click on module > Add other > Consumed Business Event Service\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order from Database by OrderID\nDESCRIPTION: Microflow activity that retrieves an Order from the database based on the OrderID parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/publish-rest-service.md#2025-04-21_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/integration/publish-rest-service/RetrieveOrder.png\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Events Section Link for On Leave\nDESCRIPTION: Links to the events section of the text area properties documentation, emphasizing the 'on leave' event.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Extracting Substring\nDESCRIPTION: Retrieves a portion of a string starting from a specified index, with optional length parameter to control substring size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nsubstring('thisismystring', 6)\n```\n\nLANGUAGE: java\nCODE:\n```\nsubstring('thisismystring', 6, 2)\n```\n\n----------------------------------------\n\nTITLE: Initializing MendixPlatformClient in TypeScript\nDESCRIPTION: Creates a new instance of MendixPlatformClient, which is the entry point for the Mendix Platform SDK.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { MendixPlatformClient } from \"mendixplatformsdk\";\n\nconst client = new MendixPlatformClient();\n```\n\n----------------------------------------\n\nTITLE: Custom Design Properties Configuration\nDESCRIPTION: Example JSON showing custom design properties for a container widget in themesource module\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n \"DivContainer\": [\n  {\n   \"name\": \"Border\",\n   \"type\": \"Toggle\",\n   \"description\": \"Add a border.\",\n   \"class\": \"div-container-border\"\n  }\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Entity with Case-Sensitive Comparison in XPath\nDESCRIPTION: Example of a case-sensitive comparison in an XPath query. The actual case sensitivity depends on the database vendor and configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/data-storage/case-sensitive-database-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n\\\\Entity[Attribute = 'a']\n```\n\n----------------------------------------\n\nTITLE: Formatting Date from DateTime\nDESCRIPTION: Extract and format the date component of a DateTime object using locale-specific standard formatting.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/parse-and-format-date-function-calls.md#2025-04-21_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nformatDate(dateTime(1974, 7, 2, 9, 50, 10))\n```\n\n----------------------------------------\n\nTITLE: Custom User Provisioning Microflow Parameters\nDESCRIPTION: Required parameters for custom user provisioning microflow in OIDC SSO module\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"MicroflowName\": \"UC_CustomProvisioning\",\n    \"Parameters\": [\n        {\"Name\": \"UserInfoParameter\", \"Type\": \"UserCommons.UserInfoParam\"},\n        {\"Name\": \"User\", \"Type\": \"System.User\"}\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Swagger UI Configuration for User API Documentation\nDESCRIPTION: Configures Swagger UI to display OpenAPI specification for the User API from a YAML source file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/private-mendix-platform/user-api.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n{{< swaggerui src=\"/openapi-spec/openapi-user.yaml\" >}}\n```\n\n----------------------------------------\n\nTITLE: Creating a Mendix App with Default Parameters\nDESCRIPTION: This command creates a new Mendix app in the current directory using all the default parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_5\n\nLANGUAGE: Text\nCODE:\n```\n\"mx create-project\"\n```\n\n----------------------------------------\n\nTITLE: Local Testing URLs for PWA\nDESCRIPTION: URLs used for testing Progressive Web App profiles locally\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_1\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/?profile=Phone\nhttp://localhost:8080/?profile=PhoneOffline\n```\n\n----------------------------------------\n\nTITLE: Common Section Link\nDESCRIPTION: Links to the common section of the text area properties documentation, detailing various shared attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/text-area.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Applying Ingress Configuration with kubectl\nDESCRIPTION: This command applies the Ingress configuration YAML to the specified Kubernetes namespace using kubectl.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n <namespace> apply -f <ingress-file>\n```\n\n----------------------------------------\n\nTITLE: Text Widget Structure in Mendix Native Mobile Apps\nDESCRIPTION: This XML structure shows the composition of a Text widget in Mendix native mobile apps, consisting of a container element with a text element inside it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-styling-refguide.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<container>\n\t<text>content</text>\n</container>\n```\n\n----------------------------------------\n\nTITLE: XPath Expression Example for Due Date\nDESCRIPTION: Example of setting a due date for a multi-user task using an XPath expression to set it to the next day.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-elements/multi-user-task.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\naddDays([%CurrentDateTime%], 1)\n```\n\n----------------------------------------\n\nTITLE: SQL Configuration Setting - Apache Commons Logging\nDESCRIPTION: Custom setting to enable Apache Commons Logging messages in Mendix logs by setting EnableApacheCommonsLogging to true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_4\n\nLANGUAGE: Properties\nCODE:\n```\nEnableApacheCommonsLogging=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Decision Condition for Work From Home in Mendix Workflow\nDESCRIPTION: This expression is used in a Decision activity to determine if the new hire is working from home, based on the WFH attribute of the WorkflowContext.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/workflows/workflow-how-to-configure.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\n$WorkflowContext/WFH\n```\n\n----------------------------------------\n\nTITLE: Custom Runtime Setting for S3 Resource Name Prefix\nDESCRIPTION: The `com.mendix.storage.s3.ResourceNamePrefix` custom runtime setting allows a prefix to be prepended to the key when storing or retrieving files from Amazon S3. This feature replaces the use of slashes in bucket names, which has been deprecated.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.18.md#2025-04-21_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Configuring String Attribute for Data Grid Personalization\nDESCRIPTION: This snippet illustrates how to set a String attribute in a Data Grid's Personalization tab to store current configurations for maintaining state across page reloads. The attribute must have \\\\\\\"Unlimited\\\\\\\" as its size to store all configurations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/data-widgets/data-grid-2.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"// Example of setting a String attribute in Data Grid\\nstringAttribute = new Attribute('String', 'Unlimited');\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Collection with OpenAI File in Mendix\nDESCRIPTION: This microflow initializes a new `FileCollection` and adds a new `FileDocument` or URL. It allows for optional parameters such as `Image Detail` or a description using `TextContent` to be provided, enabling enhanced documentation of the files involved.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/external-platforms/openai.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix\nCODE:\n```\nfiles: Initialize Collection with OpenAI File\n```\n\n----------------------------------------\n\nTITLE: ListWidgetValue Interface Definition\nDESCRIPTION: TypeScript interface definition for ListWidgetValue, representing a widget property linked to a data source.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ListWidgetValue {\n    get: (item: ObjectItem) => ReactNode;\n}\n```\n\n----------------------------------------\n\nTITLE: Show Java Version Command Usage\nDESCRIPTION: Command to display the configured Java version of a Mendix application. Takes a single MPR file as input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nmx show-java-version INPUT\n```\n\n----------------------------------------\n\nTITLE: Setting Default Sort Attribute in Mendix\nDESCRIPTION: Expression that sets the default sort attribute to 'Name' for the Paging entity.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_5\n\nLANGUAGE: expression\nCODE:\n```\n'Name'\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Equality Operator\nDESCRIPTION: Details the equality operator in OQL, which checks if two values are equal.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n| `=` | Equal to | `Price = 9.80` returns true if price is 9.80, false if price is 9.90. |\n```\n\n----------------------------------------\n\nTITLE: Git Command Line Operation Example\nDESCRIPTION: Example of a Git command line operation mentioned in the context of full clones. This operation is not supported in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/using-version-control-in-studio-pro/clone-type.md#2025-04-21_snippet_0\n\nLANGUAGE: git\nCODE:\n```\ndetached head\n```\n\n----------------------------------------\n\nTITLE: Creating Alert Components in Mendix\nDESCRIPTION: CSS classes for implementing alert containers with different status types (success, info, warning, danger).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\nalert\nalert-success\nalert-info\nalert-warning\nalert-danger\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Link\nDESCRIPTION: This snippet links to the visibility properties section of the container documentation in Mendix, discussing visibility aspects.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/structure-widgets/container.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: String Equality Result Example in Java (False case)\nDESCRIPTION: Shows the Boolean output of a string equality comparison with different values, returning False.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_11\n\nLANGUAGE: java\nCODE:\n```\nFalse\n```\n\n----------------------------------------\n\nTITLE: XPath Constraint Example for Reference Selector\nDESCRIPTION: An XPath constraint that filters selectable products based on inventory status, limiting selection to only in-stock products\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/input-widgets/reference-selector.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n[InStock = true()]\n```\n\n----------------------------------------\n\nTITLE: Defining JavaScript Variable for Native Styling\nDESCRIPTION: Exports a JavaScript variable in the custom-variables file that will be used for styling in native mobile applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport const companyHeaderTextSize = 30;\n```\n\n----------------------------------------\n\nTITLE: Input Reference Set Selector Limitations Table\nDESCRIPTION: Markdown table detailing unsupported configuration options for Input Reference Set Selector conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/widget-conversion-limitations.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Unsupported in Combo Box           |\n|------------------------------------|\n| Screen Reader Caption              |\n| Constrained By                     |\n| Decimal Precision Formatting       |\n| Group Digits Formatting            |\n```\n\n----------------------------------------\n\nTITLE: Custom Date Format Tokens Reference\nDESCRIPTION: Reference for custom date format tokens that can be used to format date fields in dynamic labels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/document-templates/dynamic-label-document-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/custom-date-format-tokens.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Shared PostgreSQL Database Configuration Example\nDESCRIPTION: JSON configuration example showing the connection URI format for a shared PostgreSQL database on SAP BTP\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/data-models/migrating-your-mendix-database.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"uri\": \"postgres://{username}:{password}@{hostname}:{port}/{databasename}\"\n}\n```\n\n----------------------------------------\n\nTITLE: Web Resources Directory Structure\nDESCRIPTION: Shows the directory path for static resources like images and font libraries in Atlas 3 theme\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: text\nCODE:\n```\ntheme/web/resources\n```\n\n----------------------------------------\n\nTITLE: Menu Alert Block\nDESCRIPTION: Markdown alert block indicating menu security behavior when security is enabled in the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/page-resources/menu.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\\nIf [security](/refguide8/project-security/) is enabled, the menu will only show items that the user has access to.\\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pie Chart Properties\nDESCRIPTION: JSON configuration for pie chart showing how to create a donut chart with a specific hole size.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_23\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hole\": 0.9\n}\n```\n\n----------------------------------------\n\nTITLE: Nullish check in Typescript\nDESCRIPTION: This is an example of a nullish check equivalent to the optional chaining operator `?.`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_11\n\nLANGUAGE: ts\nCODE:\n```\nif (onChange != null && onChange != undefined) {\n            onChange(event.target.value)\n        }\n```\n\n----------------------------------------\n\nTITLE: Converting String to Lowercase\nDESCRIPTION: Converts all characters in a string to lowercase, returning a new string without modifying the original input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntoLowerCase('thisISmyString')\n```\n\n----------------------------------------\n\nTITLE: Checking Substring Containment\nDESCRIPTION: Determines whether a string contains a specified substring, returning a boolean value indicating presence.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\ncontains('thisismystring', 'my')\n```\n\n----------------------------------------\n\nTITLE: Using Parameter in LIMIT Clause\nDESCRIPTION: Shows how to use a parameter $limit to dynamically control the number of results returned.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name\nFROM Sales.Person\nLIMIT $limit\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Dependencies with CocoaPods\nDESCRIPTION: Command sequence to change directory and install iOS dependencies using CocoaPods\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ncd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Configuring Doughnut Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a doughnut chart with a center hole.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"values\": [ 10, 20, 30 ],\n  \"labels\": [ \"Uganda\", \"Netherlands\", \"US\" ],\n  \"hole\": 0.4,\n  \"type\": \"pie\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Performing Health Check in Mendix Runtime\nDESCRIPTION: API endpoint to execute configured health check microflow and return application health status with diagnosis.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"check_health\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Addition Operator\nDESCRIPTION: Illustrates the addition operator in OQL expressions, showing its basic functionality to sum two numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| `+` | Addition | `6 + 4` returns 10. |\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Snippet\nDESCRIPTION: This snippet includes the visibility properties for buttons, referenced from an external markdown file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/button-widgets/button-properties.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration metadata for the documentation page defining the title and URL path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-one-apm/rg-one-load-test-recorder.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Load Test Recorder\"\nurl: /appstore/partner-solutions/apd/rg-one-load-test-recorder/\n---\n```\n\n----------------------------------------\n\nTITLE: Introducing IncludedAssociation Element (Markdown)\nDESCRIPTION: Introduces a new element called IncludedAssociation in the Microflows module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.11.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### IncludedAssociation (Element)\n\n* We introduced this element.\n```\n\n----------------------------------------\n\nTITLE: Documenting Keyboard Shortcut Metadata\nDESCRIPTION: YAML front matter defining document metadata for keyboard shortcuts reference\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/studio-pro-overview/keyboard-shortcuts.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: \"Keyboard Shortcuts\"\nurl: /refguide/keyboard-shortcuts/\nweight: 12\ndescription: \"Describes the shortcut keys available in Studio Pro.\"\n```\n\n----------------------------------------\n\nTITLE: REST Date Parameter Format\nDESCRIPTION: Example of the ISO-8601 date and time format required for date parameters in REST queries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-query-parameters.md#2025-04-21_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n2018-12-31T09:00:00\n```\n\n----------------------------------------\n\nTITLE: Layout Interaction Video Example\nDESCRIPTION: HTML5 video tag showing changes pane interaction in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/view-menu/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<video width=\"640\" height=\"360\" controls src=\"/attachments/refguide9/view-menu/changes.mp4\">VIDEO</video>\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a vertical bar (column) chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ \"giraffe\", \"elephant\" ],\n  \"y\": [ 2, 4 ],\n  \"type\": \"bar\",\n  \"orientation\": \"v\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Finding Android Bundle ID in Gradle Config\nDESCRIPTION: Location of the application ID in the Android Gradle build configuration file\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nandroid/app/build.gradle\napplicationId\n```\n\n----------------------------------------\n\nTITLE: Converting Space-Delimited Strings to Comma-Separated in SQL\nDESCRIPTION: Using REPLACE function to convert space-delimited strings to comma-separated format in the Import field.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_32\n\nLANGUAGE: sql\nCODE:\n```\nSELECT REPLACE(Import, ' ', ',') FROM Sales.Raw\n```\n\n----------------------------------------\n\nTITLE: String Property Type Definition\nDESCRIPTION: Demonstrates how to define a basic string property type for a widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-property-types.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myString\" type=\"string\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite Build for Multiple Tab Entries\nDESCRIPTION: Vite configuration that specifies build options for multiple entry points. This configuration ensures that the correct files are built and placed in the output directory for each tab.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/tab-api.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig, ResolvedConfig, UserConfig } from \"vite\";\n\nexport default defineConfig({\n  build: {\n    lib: {\n      formats: [\"es\"],\n      entry: {\n        main: \"src/main/index.ts\",\n        tab1: \"src/ui/tab1/index.tsx\",\n        tab2: \"src/ui/tab2/index.tsx\",\n        tab3: \"src/ui/tab3/index.tsx\",\n      },\n    },\n    rollupOptions: {\n      external: [\"@mendix/component-framework\", \"@mendix/model-access-sdk\"],\n    },\n    outDir: \"./dist/myextension\",\n  },\n} satisfies UserConfig);\n```\n\n----------------------------------------\n\nTITLE: Getting Logged-In Users in Mendix Runtime\nDESCRIPTION: API endpoint that returns a list of currently logged-in users across all active sessions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_logged_in_user_names\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: Google Maps Style Configuration\nDESCRIPTION: This snippet demonstrates the JSON format required for the Map Styles setting when using Google Maps.  Providing an empty JSON array ensures the widget is displayed correctly in the app. This configuration is necessary for avoiding display issues with the Google Maps provider.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/widgets/maps.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"{}\"\n```\n\n----------------------------------------\n\nTITLE: Job Status GET Request Example\nDESCRIPTION: Example of a GET request to check the status of a job in Mendix Cloud, showing required authentication headers and path parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-2.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nGET /api/v2/apps/calc/jobs/66046953-ecf7-4550-a889-4b7e9f1e1705\nHost: deploy.mendix.com\n\nMendix-Username: richard.ford51@example.com\nMendix-ApiKey:  26587896-1cef-4483-accf-ad304e2673d6\n```\n\n----------------------------------------\n\nTITLE: Pagination Navigation Buttons in React\nDESCRIPTION: Implementation of previous/next pagination buttons in a React component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nconst ds = this.props.myDataSource;\nconst current = this.props.myDataSource.offset;\n<button onClick={() => ds.setOffset(current - this.props.pageSize)}>\n    Previous\n</button>\n<button onClick={() => ds.setOffset(current + this.props.pageSize)}>\n    Next\n</button>\n```\n\n----------------------------------------\n\nTITLE: XSD Schema Footer\nDESCRIPTION: Footer section of the XSD schema file for importing Excel data into Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n</xs:sequence>\n</xs:complexType>\n</xs:element>\n</xs:schema>\n```\n\n----------------------------------------\n\nTITLE: Parsing and Formatting: Decimal Conversion\nDESCRIPTION: Functions to convert between decimal values and their string representations, supporting parsing and formatting operations\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: Mendix Expression\nCODE:\n```\nparseDecimal(stringValue)\n```\n\n----------------------------------------\n\nTITLE: Role and Scope Mapping Between Insights Hub and Mendix\nDESCRIPTION: This demonstrates how application scopes in Insights Hub are mapped to Mendix user roles during the SSO login process. The mapping ignores case differences between role names.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-module-details.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\n// Mapping between Insights Hub application scopes and Mendix roles:\n// {app_name}.admin → Admin\n// {app_name}.user → User\n\n// Configure in Mendix App Security dialog:\n// 1. Create corresponding user roles in Mendix (e.g., Admin, User)\n// 2. Define appropriate permissions for each role\n// 3. The SSO module will automatically assign roles based on Insights Hub scopes\n```\n\n----------------------------------------\n\nTITLE: SQL Statement Examples in Database Connector\nDESCRIPTION: Examples of SQL statements that can be executed with the Database Connector, including CREATE, INSERT, UPDATE, STORED PROCEDURE, DELETE, and DDL statements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/execute-an-sql-statement-on-an-external-database.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE\nINSERT\nUPDATE\nSTORED PROCEDURE\nDELETE\nDDL\nSELECT (only with the **Execute query** action, not with **Execute statement**)\n```\n\n----------------------------------------\n\nTITLE: Combined ASC/DESC Ordering Query\nDESCRIPTION: Demonstrates mixed ascending and descending sort orders on multiple columns.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_40\n\nLANGUAGE: sql\nCODE:\n```\nSELECT FirstName, LastName\nFROM Sales.SalesPerson\nORDER BY LastName DESC, FirstName ASC\n```\n\n----------------------------------------\n\nTITLE: Adding XML Element Tags in Excel\nDESCRIPTION: Excel formula to add XML element tags to column headers for XSD schema creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_0\n\nLANGUAGE: excel\nCODE:\n```\n<xs:element type=\"xs:string\" name=\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Logical Operators OR and AND in OQL\nDESCRIPTION: Demonstrates the use of OR and AND operators for combining multiple conditions in OQL expressions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: SQL\nCODE:\n```\nprice = 9.80 OR price = 9.70\nprice = 9.80 AND amount = 1\n```\n\n----------------------------------------\n\nTITLE: CSS Line Endings Fix - Git Attributes\nDESCRIPTION: Configuration to fix CSS line ending issues by adding a .gitattributes file with specific line ending settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/troubleshoot-git-issues.md#2025-04-21_snippet_0\n\nLANGUAGE: git\nCODE:\n```\n* text eol=lf\n```\n\n----------------------------------------\n\nTITLE: SOAP Request Body Configuration Options\nDESCRIPTION: Different methods for configuring SOAP request body mappings in a web service call\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/web-services/consumed-web-services/consume-a-complex-web-service.md#2025-04-21_snippet_2\n\nLANGUAGE: SOAP Request Mapping\nCODE:\n```\n- Simple expressions for primitive arguments\n- Export mappings for domain model entities\n- Custom request template with XML parameters\n```\n\n----------------------------------------\n\nTITLE: Selecting All Attributes from Sales.Customer Entity\nDESCRIPTION: This query selects all attributes from the Sales.Customer entity using the wildcard selector (*).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Configuring Donut Chart in Mendix\nDESCRIPTION: JSON configuration for creating a donut chart by specifying the hole size in a pie chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hole\": 0.9\n}\n```\n\n----------------------------------------\n\nTITLE: Git Proxy Configuration Commands\nDESCRIPTION: Commands to configure and verify proxy settings in Git's local configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/version-control-troubleshooting/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: git\nCODE:\n```\ngit config --local http.proxy [protocol://][user[:password]@]proxyhost[:port]\ngit config --local http.proxy\n```\n\n----------------------------------------\n\nTITLE: Linking to Mendix Release Notes in Markdown\nDESCRIPTION: This snippet demonstrates how to create a link to Mendix 8.9 release notes using Markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[Mendix 8.9](/releasenotes/studio-pro/8.9/)\n```\n\n----------------------------------------\n\nTITLE: Create New Employee Object Request\nDESCRIPTION: JSON request to create a new Employee object in the Runtime Server\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"action\": \"runtimeOperation\",\n    \"operationId\": \"ntjTpU3TgkGh/QiiBMR1PQ\",\n    \"params\": {},\n    \"changes\": {},\n    \"objects\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Debugger in SAP S/4 HANA Cloud\nDESCRIPTION: Process for setting debugger password in SAP Cockpit for Mendix applications\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/debug-microflows/debug-microflows-remotely.md#2025-04-21_snippet_2\n\nLANGUAGE: Mendix\nCODE:\n```\nSAP Cockpit > Application > User-Provided Variables > Add 'DEBUGGER_PASSWORD'\n```\n\n----------------------------------------\n\nTITLE: Splunk Custom Tag Configuration\nDESCRIPTION: Define custom tags for identifying and filtering Mendix application logs in Splunk Cloud Platform\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/mendix-cloud-deploy/monitoring-with-apm/splunk-metrics.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntags:\n  - app:customermanagement\n  - env:accp\n```\n\n----------------------------------------\n\nTITLE: Reference Set Selector Limitations Table\nDESCRIPTION: Markdown table showing unsupported configuration options for Reference Set Selector conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/widget-conversion-limitations.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Unsupported in Combo Box     |\n|------------------------------|\n| Constrained By               |\n| Decimal Precision Formatting |\n| Group Digits Formatting      |\n```\n\n----------------------------------------\n\nTITLE: Calculating Sum of Total Prices for All Orders Using XPath in Java\nDESCRIPTION: This XPath query calculates the sum of the TotalPrice attribute for all Sales.Order entities. It demonstrates the basic usage of the sum() function with a simple path.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/xpath/xpath-query-functions/xpath-sum.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nsum(//Sales.Order/TotalPrice)\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Subtraction Operator\nDESCRIPTION: Demonstrates the subtraction operator in OQL, which calculates the difference between two numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| `-` | Subtraction | `6 - 4` returns 2. |\n```\n\n----------------------------------------\n\nTITLE: Division Using div Syntax in Java\nDESCRIPTION: Division operation using the 'div' keyword syntax, resulting in a decimal output.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n3 div 5\n```\n\n----------------------------------------\n\nTITLE: Custom Validation Expression Variables\nDESCRIPTION: Available variables for use in custom validation expressions within Mendix widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_4\n\nLANGUAGE: plain\nCODE:\n```\n$currentObject\n$value\n$dataView1\n```\n\n----------------------------------------\n\nTITLE: OData Navigation Properties Format\nDESCRIPTION: Updated format for specifying NonUpdatable Navigation Properties in OData metadata.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.6.md#2025-04-21_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<NavigationPropertyPath>NavigationProperty</NavigationPropertyPath>\n```\n\n----------------------------------------\n\nTITLE: Configuring ClientCertificateUsages in Mendix Runtime\nDESCRIPTION: Example of how to configure the ClientCertificateUsages setting to specify which client certificates should be used for specific servers or web services. The setting requires a comma-separated list of key/value items enclosed in braces.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/runtime/custom-settings/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n{ \"identifier\": \"D:\\\\App\\\\Mx1.pfx\", \"identifier2\": \"D:\\\\App\\\\Mx2.pfx\" }\n```\n\n----------------------------------------\n\nTITLE: Starting Selenium Hub with Configuration\nDESCRIPTION: PowerShell command to start Selenium Hub using the JSON configuration file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-selenium-hub.md#2025-04-21_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\njava -jar selenium-server-standalone-3.8.1.jar -role hub -hubConfig gridHubConfig.json\n```\n\n----------------------------------------\n\nTITLE: Adding Quarters to Date in Java\nDESCRIPTION: Shows adding 1 quarter to a date using addQuarters function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\naddQuarters(dateTime(2007, 1, 1, 1, 1, 1), 1)\n```\n\n----------------------------------------\n\nTITLE: Using Unary Minus with a Numeric Literal in Mendix\nDESCRIPTION: This example demonstrates using the unary minus operator with a numeric literal to create a negative value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/unary-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n-8\n```\n\n----------------------------------------\n\nTITLE: Converting String to Uppercase in Java\nDESCRIPTION: Shows how to use the toUpperCase function to convert all characters in a string to uppercase.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/string-function-calls.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntoUpperCase('thisISmyString')\n```\n\n----------------------------------------\n\nTITLE: Configuring 2D Histogram in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a 2D histogram visualization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3, 4, 5 ],\n  \"y\": [ 1, 2, 3, 4, 5 ],\n  \"type\": \"histogram2d\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Link\nDESCRIPTION: This snippet links to the common properties section of the container documentation in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/structure-widgets/container.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Wikipedia API Response JSON Structure\nDESCRIPTION: Sample JSON structure for the Wikipedia REST API response that needs to be mapped in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/consumed-rest-services/consume-a-rest-service.md#2025-04-21_snippet_0\n\nLANGUAGE: url\nCODE:\n```\nhttps://en.wikipedia.org/api/rest_v1/page/summary/{title}\n```\n\n----------------------------------------\n\nTITLE: OQL Range Query with RANGEEND Basic Syntax\nDESCRIPTION: Demonstrates the basic syntax for using the RANGEEND function to extract the end value of a range parameter in an OQL query\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-functions/oql-rangeend.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nRANGEEND ( $range )\n```\n\n----------------------------------------\n\nTITLE: Requesting Total Count\nDESCRIPTION: Example showing how to request the total count of items in a datasource.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/pluggable-widgets-client-apis-list-values.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport default class PagedWidget extends Component<PagedWidgetProps> {\n    constructor(props: PagedWidgetProps) {\n        super(props);\n    \n        props.myDataSource.requestTotalCount(true);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updated CustomStyle Interface with New Style Properties\nDESCRIPTION: This code updates the CustomStyle interface to include the new style properties for header, headerContent, and content, while removing the unused label property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_12\n\nLANGUAGE: tsx\nCODE:\n```\nexport interface CustomStyle extends Style {\n    container: ViewStyle;\n    header: ViewStyle;\n    headerContent: TextStyle;\n    content: ViewStyle;\n}\n```\n\n----------------------------------------\n\nTITLE: Opening a Working Copy Model with Platform SDK in TypeScript\nDESCRIPTION: Shows how to load the model of a working copy to make changes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/using-platform-sdk.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst model = await workingCopy.openModel();\n```\n\n----------------------------------------\n\nTITLE: Selenium IDE Test Login Scenario\nDESCRIPTION: Illustrates a basic Selenium IDE test script for logging into a Mendix application using default administrator credentials and performing a sign-out action.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/testing-mendix-applications-using-selenium-ide.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n// Test steps: Login and Logout\n1. Open login page\n2. Enter username: MxAdmin\n3. Enter password: 1\n4. Click Sign Out\n```\n\n----------------------------------------\n\nTITLE: Entity Event Microflow Example\nDESCRIPTION: Example of a microflow name for calculating total order amount after a commit event\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/dev-best-practices.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\nACO_Order_CalculateTotalOrderAmount\n```\n\n----------------------------------------\n\nTITLE: AsyncStorage usage in React Native\nDESCRIPTION: This section advises maintainers of JavaScript actions and widgets using AsyncStorage from the React Native core library to switch to `react-native-community/async-storage`. It highlights potential issues with data migration if the old AsyncStorage location is used.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.8.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n\"react-native-community/async-storage\"\n```\n\n----------------------------------------\n\nTITLE: Language Selection Expression Configuration\nDESCRIPTION: Expression used in microflow call to pass the selected language code\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/native-language-change.md#2025-04-21_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n$SelectedLanguage/Code\n```\n\n----------------------------------------\n\nTITLE: OFFSET Clause Query Example\nDESCRIPTION: Demonstrates how to skip rows in results using OFFSET clause.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_43\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Brand, City, LocationNumber\nFROM Sales.Location\nORDER BY LocationNumber\nOFFSET 2\n```\n\n----------------------------------------\n\nTITLE: Android NFC Package Initialization\nDESCRIPTION: Initialize the NFC manager package in the main Android application class\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-javascript-actions/create-native-javascript-action.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nnew NfcManagerPackage()\n```\n\n----------------------------------------\n\nTITLE: Evaluating Picture Title in Mendix Microflow Expression\nDESCRIPTION: This expression checks if the Picture's Title attribute is not empty after trimming whitespace. It's used in a decision point within a microflow to validate user input.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/quickstarts/responsive-web-app.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\ntrim($Picture/Title) != ''\n```\n\n----------------------------------------\n\nTITLE: Static and Dynamic Image Limitations Table\nDESCRIPTION: Markdown table showing unsupported configuration options for Image widget conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/widget-conversion-limitations.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Unsupported in Image |\n|----------------------|\n| Height in Percentage |\n```\n\n----------------------------------------\n\nTITLE: Expression Variable Access\nDESCRIPTION: Shows how to access the current object in an expression for conditional editability.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/common-widget-properties.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n$currentObject\n```\n\n----------------------------------------\n\nTITLE: Including Editability Section for Checkbox\nDESCRIPTION: This snippet includes the editability settings for the checkbox, defining how the user can interact with the checkbox.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/editability-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Finding Maximum Stock Value\nDESCRIPTION: Uses MAX to find the highest stock value among all products.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nSELECT MAX(Stock) as StockMax FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Conditional Rendering of Content in React Native\nDESCRIPTION: This method conditionally renders the content of the group box based on its collapsed state and the presence of children.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_29\n\nLANGUAGE: tsx\nCODE:\n```\nprivate renderContent = (): ReactNode => {\n    if (this.state.collapsed || Children.count(this.props.children) === 0) {\n        return null;\n    }\n\n    return <View style={this.styles.content}>{this.props.children}</View>;\n};\n```\n\n----------------------------------------\n\nTITLE: Java Arithmetic Operators\nDESCRIPTION: Arithmetic operators available exclusively in Java code for performing basic mathematical operations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-operators.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n6 + 4\n6 - 4\n6 * 4\n8 div 4\n```\n\n----------------------------------------\n\nTITLE: UNION with Associations\nDESCRIPTION: Demonstrates UNION operation with associated entities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-clauses.md#2025-04-21_snippet_51\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Cust.LastName as CustomerName FROM (\n    SELECT Sales.Request/Sales.Request_Customer as RequestAssoc\n    FROM Sales.Request\n    UNION ALL\n    SELECT Sales.ExtraInfo/Sales.ExtraInfo_Customer as RequestAssoc\n    FROM Sales.ExtraInfo\n) AS Cust\n```\n\n----------------------------------------\n\nTITLE: Initial State Definition\nDESCRIPTION: Setting the initial collapsed state for the GroupBox component\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_21\n\nLANGUAGE: tsx\nCODE:\n```\nreadonly state: GroupBoxState = {\n        collapsed: false\n    };\n```\n\n----------------------------------------\n\nTITLE: Enabling Chart Toolbar Configuration\nDESCRIPTION: JSON configuration to enable the display mode bar in chart settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-advanced-tuning.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{ \"displayModeBar\": true }\n```\n\n----------------------------------------\n\nTITLE: Setting Default Roles\nDESCRIPTION: SQL commands to set default roles for test users\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_4\n\nLANGUAGE: SQL\nCODE:\n```\nALTER USER TESTUSER1 SET DEFAULT_ROLE = ROLETESTA;\nALTER USER TESTUSER2 SET DEFAULT_ROLE = ROLETESTB;\n```\n\n----------------------------------------\n\nTITLE: Configuring Native Mobile App\nDESCRIPTION: Command to apply configuration from Mendix Native Mobile Builder to the app project\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-build-locally.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run configure\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Link\nDESCRIPTION: This snippet includes the common properties section for the navigation list widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/navigation-list.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Adding Weeks to Date in Java\nDESCRIPTION: Shows adding 2 weeks to a date using addWeeks function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\naddWeeks(dateTime(2007, 1, 1, 1, 1, 1), 2)\n```\n\n----------------------------------------\n\nTITLE: JavaScript Action Duplication\nDESCRIPTION: Enhancement to JavaScript action duplication process to ensure exact data copying.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.18.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nJavaScript action\n```\n\n----------------------------------------\n\nTITLE: Division Using Colon Syntax in Java\nDESCRIPTION: Division operation using the colon ':' syntax, an alternative to traditional division operator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/arithmetic-expressions.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n12 : 3\n```\n\n----------------------------------------\n\nTITLE: TypeScript Global Installation\nDESCRIPTION: Bash command to globally install TypeScript using npm\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install -g typescript\n```\n\n----------------------------------------\n\nTITLE: Calculating Total Stock\nDESCRIPTION: Uses SUM to calculate the total of all stock values across products.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Sum(Stock) AS StockSum FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: Adding Years to Date in Java\nDESCRIPTION: Demonstrates adding 11 years to a date using addYears function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\naddYears(dateTime(2007, 1, 1, 1, 1, 1), 11)\n```\n\n----------------------------------------\n\nTITLE: Greater Than or Equal To Result Example in Java\nDESCRIPTION: Shows the Boolean output of a greater than or equal to comparison, returning True.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nTrue\n```\n\n----------------------------------------\n\nTITLE: Web Resources Path Structure\nDESCRIPTION: Demonstrates the file path structure for login.html in Atlas 3 theme web directory\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/moving-from-8-to-9/moving-from-atlas-2-to-3/_index.md#2025-04-21_snippet_6\n\nLANGUAGE: text\nCODE:\n```\ntheme/web/login.html\n```\n\n----------------------------------------\n\nTITLE: Node.js Version Check Command\nDESCRIPTION: Bash command to verify the installed Node.js version\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ node --version\nv10.13.0\n```\n\n----------------------------------------\n\nTITLE: Referencing Constants in Mendix Expressions\nDESCRIPTION: Shows how to reference a constant in Mendix expressions by prefixing its full name with '@'.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/constants.md#2025-04-21_snippet_0\n\nLANGUAGE: mendix\nCODE:\n```\n@ConstantFullName\n```\n\n----------------------------------------\n\nTITLE: Displaying Help Text for mx show-version\nDESCRIPTION: This command displays the help text for the `mx show-version` command.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_16\n\nLANGUAGE: Text\nCODE:\n```\n\"mx show-version --help\"\n```\n\n----------------------------------------\n\nTITLE: Numeric Formatting Template\nDESCRIPTION: Template showing parameter usage in label formatting with numbered placeholders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/common-widget-properties.md#2025-04-21_snippet_5\n\nLANGUAGE: plain\nCODE:\n```\n{1}\n```\n\n----------------------------------------\n\nTITLE: Creating .gitattributes for Mendix Project Files\nDESCRIPTION: Configuration for the .gitattributes file that specifies which files should use the custom merge driver. This tells Git to use the custom merge driver for .mpr files instead of the default merge strategy.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/_index.md#2025-04-21_snippet_3\n\nLANGUAGE: text\nCODE:\n```\n*.mpr merge=custom\n```\n\n----------------------------------------\n\nTITLE: Pushing Mendix Deployment Package to Cloud Foundry\nDESCRIPTION: Command for deploying a Mendix application package to Cloud Foundry, allowing specification of the deployment package path and optional stack selection.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/deploying-to-mindsphere.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncf push -p \"{deployment_package_name}\"\n```\n\nLANGUAGE: bash\nCODE:\n```\ncf push -p \"{deployment_package_name}\" -s {stack_name}\n```\n\n----------------------------------------\n\nTITLE: Importing Custom SCSS File\nDESCRIPTION: Imports the custom SCSS file into the main SCSS file to ensure it's included in the CSS compilation process.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_2\n\nLANGUAGE: scss\nCODE:\n```\n@import \"company-header\";\n```\n\n----------------------------------------\n\nTITLE: Basic Rounding in Mendix\nDESCRIPTION: Rounds a number to a whole integer. This example demonstrates rounding without specifying precision, which defaults to 0 decimal places.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/mathematical-function-calls.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nround(3.5)\n```\n\n----------------------------------------\n\nTITLE: SCSS Variables for Conversational UI Styling\nDESCRIPTION: CSS variables for customizing the appearance and behavior of the chat interface, including dimensions, colors, and positioning of various UI elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/genai/reference-guide/conversational-ui/conversational-ui.md#2025-04-21_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\nchat-width: max-width of chat UI in full-page setup\nsend-btn-size: height and width of user chat input button\nchat-input-max-height: max-height of user chat input box\nchat-header-color: background color of pop-up/sidebar chat window top bar\npop-up-chat-bottom-position: absolute bottom position of pop-up chat window\npop-up-chat-right-position: absolute right position of pop-up chat window\npop-up-chat-width: width of pop-up and sidebar chat window\npop-up-chat-height: height of pop-up chat window\nchat-bubble-user-background: background color of user messages\nchat-bubble-assistant-background: background color of assistant messages\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Link\nDESCRIPTION: This snippet includes the visibility section for the navigation list widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/navigation-list.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/visibility-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Generating Overview Pages Code\nDESCRIPTION: Code snippet showing the selection of entities for generating overview pages in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/translate-your-app-content.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto8/collaboration-requirements-management/translate-your-app-content/generate-pages.png\" alt=\"Options selected for Generate Pages\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Using Parameter in WHERE Clause\nDESCRIPTION: Demonstrates using a parameter $age in a WHERE clause to filter results dynamically.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nSELECT Name\nFROM Sales.Person\nWHERE\n    Age > $age\n```\n\n----------------------------------------\n\nTITLE: Including Visibility Section Snippet\nDESCRIPTION: A markdown include statement for visibility section documentation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/data-grid/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide9/visibility-section-link.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Including Common Section Snippet\nDESCRIPTION: A markdown include statement for common section documentation\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/data-grid/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide9/common-section-link.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Building Local Documentation Site\nDESCRIPTION: Command to build and run a local preview of the Mendix documentation site\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: System Error Object Structure\nDESCRIPTION: Defines the structure of System.Error entity used for error handling in Mendix microflows. Contains error type, message, and stacktrace attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/microflows/error-handling-in-microflows.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nErrorType | String | The Java exception type of the error that occurred.\nMessage | String | The message of the Java exception.\nStacktrace | String | The stack trace of the Java exception.\n```\n\n----------------------------------------\n\nTITLE: Git Repository Status Commands\nDESCRIPTION: Commands for troubleshooting Git repository state and configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/troubleshoot-git-issues.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit status -b\\ngit remote -v\\ngit config --list --show-origin --show-scope\n```\n\n----------------------------------------\n\nTITLE: XSUAA Mendix App Authority Config\nDESCRIPTION: Configuration line for defining authorities in the xs-security.json file for Mendix app deployed on SAP BTP.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-bapi-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"authorities\":[\"$XSAPPNAME(application,{bapi-service-component-deployed-on-SAP-BTP}).bapiAuth\"]\n```\n\n----------------------------------------\n\nTITLE: Customizing Page Explorer Caption in TypeScript\nDESCRIPTION: Function signature for customizing the caption shown in the Page Explorer. The getCustomCaption function allows widgets to provide a dynamic caption based on current values and platform context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getCustomCaption(values: ValuesAPI, platform: \"desktop\" | \"web\"): string\n```\n\n----------------------------------------\n\nTITLE: Defining ListAttributeValue Interface\nDESCRIPTION: Defines an interface for accessing attribute values from list items, with support for various metadata and value retrieval\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_18\n\nLANGUAGE: ts\nCODE:\n```\nexport interface ListAttributeValue<T extends AttributeValue> {\n    get: (item: ObjectItem) => EditableValue<T>;\n    id: ListAttributeId;\n    sortable: boolean;\n    filterable: boolean;\n    type: AttributeType;\n    formatter: ValueFormatter<T>;\n    universe: Option<T[]>;\n}\n```\n\n----------------------------------------\n\nTITLE: Test Method to Open URL in Browser\nDESCRIPTION: Opens the designated URL in Firefox. Key parameters: URL location. Requires WebDriver to navigate to specified application under test. Priority set to 1 for execution order.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/testing/create-automated-tests-with-testng.md#2025-04-21_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n@Test(priority=1)\npublic void openApp() {\n    driver.get(\"http://localhost:8080/index.html\");\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Private Cloud License Manager - Command Execution\nDESCRIPTION: This snippet provides the command to initiate the installation of the Private Cloud License Manager (PCLM), requiring a specified namespace. The namespace must align with that used for the Mendix Platform.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n./installer component -n=<namespace name>\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Properties for Remote Debugging in YAML\nDESCRIPTION: Configuration settings for enabling remote Java debugging by setting environment properties including development mode and Java options for debugging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/sap/sap-odata-connector.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nDEVELOPMENT_MODE= true\nJAVA_OPTS : [\"-agentlib:jdwp=transport=dt_socket,address=8000,server=y,suspend=n\"]\n```\n\n----------------------------------------\n\nTITLE: Design Properties Section for Login ID Text Box\nDESCRIPTION: This snippet provides a link to the design properties section documentation for the Login ID text box widget, explaining the visual elements and customization options available.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/authentication-widgets/login-id-text-box.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Including On Leave Event for Checkbox\nDESCRIPTION: This snippet outlines the action to be executed when leaving the checkbox widget, regardless of whether the state has changed.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Updating Attributes in OData PATCH Request (JSON)\nDESCRIPTION: Example of updating object attributes using a PATCH request in OData. The request body specifies new values for the Name, FirstContact, and DateOfBirth attributes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/published-odata-services/supported-odata-operations.md#2025-04-21_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Name\": \"John\",\n  \"FirstContact\": \"2012-12-03T07:16:23Z\",\n  \"DateOfBirth\": null\n}\n```\n\n----------------------------------------\n\nTITLE: Module-Specific XPath Query\nDESCRIPTION: Shows how to query entities from specific modules using dot notation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-tokens.md#2025-04-21_snippet_1\n\nLANGUAGE: xpath\nCODE:\n```\n//Sales.Customer\n```\n\n----------------------------------------\n\nTITLE: Direct ID Reference Query\nDESCRIPTION: Query finding customer by order ID using direct reference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/xpath/xpath-constraints/xpath-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n//Sales.Customer[Sales.Customer_Order = 124123512341]\n```\n\n----------------------------------------\n\nTITLE: Accessing Git Configuration Parameter\nDESCRIPTION: Path to access the Git commit counter configuration parameter in the repository\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/version-control/using-version-control-in-studio-pro/git-storage-optimization-dialog.md#2025-04-21_snippet_0\n\nLANGUAGE: git\nCODE:\n```\n.git/config\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Icon Property\nDESCRIPTION: Defines the TypeScript types for the Icon property in pluggable widgets, with support for glyph icons and image icons, including information about icon class and image URL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/studio-apis-for-pluggable-widgets-8.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype GlyphIcon = { type: \"glyph\"; iconClass: string; }\ntype ImageIcon = { type: \"image\"; imageUrl: string; }\n\ntype IconProperty = null | GlyphIcon | ImageIcon;\n```\n\n----------------------------------------\n\nTITLE: Resolving Package Conflicts in Espresso for Mendix Apps\nDESCRIPTION: JSON configuration to fix package conflicts when using Espresso with Mendix apps. Allows specifying custom tools versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/testing-mobile-apps.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n\"toolsVersions\": {\n    \"compileSdk\": \"30\"\n    ...\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Run Job SOAP Request Example\nDESCRIPTION: XML structure for making a RunJob request to the ATS CI/CD API. This request starts a new job based on a CI/CD template and requires authentication credentials, app token, app ID, and job template ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v2/rg-two-cicd-api.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.mendix.com/\">\n  <soap:Header>\n    <tns:authentication>\n      <username>ATSAPIUser</username>\n      <password>ATSAPIUser</password>\n    </tns:authentication>\n  </soap:Header>\n  <soap:Body>\n    <tns:RunJob>\n      <TestRun>\n        <AppAPIToken>exampleString</AppAPIToken>\n        <AppID>exampleString</AppID>\n        <JobTemplateID>exampleString</JobTemplateID>\n      </TestRun>\n    </tns:RunJob>\n  </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Initializing Choropleth Map Layout Configuration in JSON\nDESCRIPTION: This snippet specifies the layout configuration for a choropleth map in JSON, defining geographic attributes such as scope. The output is a layout that can be used in conjunction with data to display the appropriate geographic focus.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"geo\": { \n    \"scope\": \"usa\" \n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Design Property with JSON\nDESCRIPTION: This JSON snippet defines a custom design property named \"Bordered\" within the `settings-native.json` file. It sets the type to \"Toggle\", provides a description, and associates the custom class \"btnBordered\" with this property. When enabled, this design property applies the styling defined in the `btnBordered` class to the selected widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/native-styling/how-to-use-native-styling.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n    {\n        \"name\": \"Bordered\",\n        \"type\": \"Toggle\",\n        \"description\": \"Create a bordered button.\",\n        \"class\": \"btnBordered\"\n    },\n```\n\n----------------------------------------\n\nTITLE: Initializing Domain Model in Mendix XML\nDESCRIPTION: A domain model XML snippet showing two entities: Order with OrderNumber attribute and Product with ProductName attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/collaboration-requirements-management/translate-your-app-content.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto8/collaboration-requirements-management/translate-your-app-content/domain-model.png\" alt=\"Domain model for How To\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Example Token URL Format for Insights Hub\nDESCRIPTION: Shows the format of the TokenURL required for authentication with Insights Hub, including placeholders for tenant name, region, and domain.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/partners/siemens/mindsphere/mindsphere-api-only.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```\nhttps://{tenantName}.piam.{region}.{mindsphere-domain}/oauth/token?grant_type=client_credentials\n```\n```\n\n----------------------------------------\n\nTITLE: Test Case Dependencies Impact Analysis Table\nDESCRIPTION: Markdown table showing the negative impacts of test case dependencies on availability, speed, reliability, and precision.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-two/bp-two-test-case-dependencies.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Aspect       | Consequence of Having Dependencies |\n| :----------- | :--------------------------------- |\n| Availability | <ul><li>If TC.01 is broken or in maintenance, TC.02 is not available.</li><li>You also have to run TC.01 first.</li></ul> |\n| Speed        | <ul><li>TC.02 can only run after TC.01 has finished.</li><li>TC.01 and TC.02 cannot run parallel.</li></ul> |\n| Reliability  | <ul><li>If TC.01 is unreliable, then TC.02 is also unreliable.</li><li>If you change TC.01, this may affect TC.02.</li></ul> |\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example - String Comparison\nDESCRIPTION: Example of an XPath query demonstrating string comparison in database queries\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/data-storage/case-sensitive-database-behavior.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n\\\\Entity[Attribute = 'a']\n```\n\n----------------------------------------\n\nTITLE: Converting multiple Mendix Apps\nDESCRIPTION: This command converts multiple Mendix app packages (.mpk) to the Studio Pro version associated with the mx tool, placing the converted results in the specified output directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/general/mx-command-line-tool.md#2025-04-21_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\n\"mx convert C:\\\\Mendix\\\\App1.mpk C:\\\\Mendix\\\\App2.mpk C:\\\\Mendix\\\\ConvertedProjects\\\\\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Process Queue with ASu_InitialiseQueue Microflow\nDESCRIPTION: This snippet demonstrates how to initialize the process queue by adding the ASu_InitialiseQueue microflow as a startup event. It is crucial for setting up the queues within the application after importing the Process Queue module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/process-queue.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAdd the **ASu_InitialiseQueue** microflow as a startup event to instantiate the queue.\n```\n\n----------------------------------------\n\nTITLE: Defining Icon Property in XML for Mendix Pluggable Widgets\nDESCRIPTION: XML configuration for defining an icon property in a pluggable widget. This shows how to define the property with a key, type, and required attributes, along with caption and description elements.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"cardIcon\" type=\"icon\" required=\"false\">\n\t<caption>Icon</caption>\n\t<description>Card icon</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Subtracting Days from DateTime in Java\nDESCRIPTION: Demonstrates how to subtract 5 days from a specific date and time using the subtractDays function. The function takes a datetime value and an integer representing days to subtract.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/subtract-date-function-calls.md#2025-04-21_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nsubtractDays(dateTime(2007, 1, 5, 1, 1, 1), 5)\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Success Button\nDESCRIPTION: This snippet creates a Bootstrap button styled with the color 'success'. It links to the Bootstrap button documentation, with similar parameters as the info button.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"success\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Success\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: Git Version Check\nDESCRIPTION: Command to check the installed Git version on the system.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/version-control/version-control-troubleshooting/troubleshoot-git-issues.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit version\n```\n\n----------------------------------------\n\nTITLE: Mendix.Service Assembly Loading Error in Incompatible PowerShell Version\nDESCRIPTION: Error message displayed when trying to use Mendix cmdlets in a PowerShell version other than 5.1, which is currently the only supported version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_15\n\nLANGUAGE: text\nCODE:\n```\nStart-MxApp: Could not load file or assembly 'Mendix.Service, Version=4.7.0.0, Culture=neutral, PublicKeyToken=null'. Het systeem kan het opgegeven bestand niet vinden.\n```\n\n----------------------------------------\n\nTITLE: XPath Constraints Example\nDESCRIPTION: Example of XPath constraints with flag object reference that was fixed to handle empty object cases correctly.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.8.md#2025-04-21_snippet_3\n\nLANGUAGE: XPath\nCODE:\n```\n[$object/flag]\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Block for Mendix 8 Support Notice\nDESCRIPTION: A markdown alert block warning users about the upcoming end of support for Mendix 8 and recommending upgrade to a newer version.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nWhen Mendix 11 is released (expected in June 2025), Mendix 8 will go end of support. This means that Mendix 8 will no longer receive support, maintenance, or updates. To ensure continued access to the latest features and security enhancements, we recommend planning an upgrade to a more recent version of the platform.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Checking for an Empty Object in Mendix (Java)\nDESCRIPTION: Demonstrates how to check if an object is empty in Mendix expressions. The output is a boolean indicating whether the object is empty or not.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/special-checks.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n$object1 = empty\n```\n\n----------------------------------------\n\nTITLE: Assigning Roles to Users\nDESCRIPTION: SQL commands to grant roles to specific test users\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_3\n\nLANGUAGE: SQL\nCODE:\n```\nGRANT ROLE ROLETESTA TO USER Testuser1; \nGRANT ROLE ROLETESTB TO USER Testuser2;\n```\n\n----------------------------------------\n\nTITLE: Defining OQL AND Operator\nDESCRIPTION: Details the AND operator, which returns true only if both conditions on either side of it are true.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n| `AND` | Returns true if expressions on both sides return true.  | `price = 9.80 AND amount = 1` returns true if price is 9.80 and amount is 1, false if price is 9.70 and amount is 1, false if price is 9.80 and amount is 2. |\n```\n\n----------------------------------------\n\nTITLE: Adding Months to a Date in Java\nDESCRIPTION: Example of using the addMonths function to add 13 months to a date. This function adds a specified number of months to a date and time value using the server's calendar.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/add-date-function-calls.md#2025-04-21_snippet_6\n\nLANGUAGE: java\nCODE:\n```\naddMonths(dateTime(2007, 1, 1, 1, 1, 1), 13)\n```\n\nLANGUAGE: java\nCODE:\n```\n\"Mon Feb 01 01:01:01 CET 2008\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Data Points with Geographic Coordinates in TypeScript\nDESCRIPTION: Example TypeScript configuration for displaying geographic coordinates with custom formatting in a data grid. The code demonstrates how to use object headers and captions to format latitude and longitude values with appropriate degree suffixes.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-config-api.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n{\n    key: \"dataPoints\",\n    caption: \"Data points\",\n    description: \"\",\n    objectHeaders: [\"N Coordinate\", \"W Coordinate\"], // column headers\n    objects: [\n        {\n            captions: [`${values.dataPoints[0].y}° N`, `${values.dataPoints[0].x}° W`],\n            properties: [\n                {\n                    caption: \"Data Point\",\n                    properties: [\n                        { key: \"y\", caption: \"Y value\", description: \"\" },\n                        { key: \"x\", caption: \"X value\", description: \"\" }\n                    ]\n                }\n            ]\n        },\n        {\n            captions: [`${values.dataPoints[1].y}° N`, `${values.dataPoints[1].x}° W`],\n            properties: [\n                {\n                    caption: \"Data Point\",\n                    properties: [\n                        { key: \"y\", caption: \"X value\", description: \"\" },\n                        { key: \"x\", caption: \"X value\", description: \"\" }\n                    ]\n                }\n            ]\n        },\n        {\n            captions: [`${values.dataPoints[2].y}° N`, `${values.dataPoints[2].x}° W`],\n            properties: [\n                {\n                    caption: \"Data Point\",\n                    properties: [\n                        { key: \"y\", caption: \"X value\", description: \"\" },\n                        { key: \"x\", caption: \"Y value\", description: \"\" }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling OTA Updates in Native Mobile Profile\nDESCRIPTION: Configuration step to enable over-the-air updates in Mendix Studio Pro for a native mobile app profile. Requires selecting the OTA updates checkbox in the mobile profile settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/distributing-mobile-apps/overtheair-updates.md#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n{{< figure src=\"/attachments/howto/mobile/native-mobile/distribution/how-to-ota/ota-profile-screen.png\" alt=\"Startup option ota checkbox\" width=\"400\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: Defining OQL IN Operator\nDESCRIPTION: Shows the IN operator, which checks if a value matches any value in a subquery or a specified list of values in OQL.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n| `IN` | Matches any value in a subquery or a list of expression values. | `City IN (SELECT Name FROM City WHERE Country = 'Gelre')` `City IN ('Losdun', 'Die Haghe', 'Haagambacht')` |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Updated Data with GET in HTTP\nDESCRIPTION: Shows how to retrieve the updated customer data after a PATCH request using a GET request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/odata-services/build-odata-apis.md#2025-04-21_snippet_8\n\nLANGUAGE: HTTP\nCODE:\n```\nGET http://localhost:8080/odata/CustomerApi/v1/Customers(5)\n```\n\n----------------------------------------\n\nTITLE: Combining Filters and Ordering Results in OData\nDESCRIPTION: Example showing how to combine filtering with ordering of results. This retrieves SmartTasks created after January 1, 2005, and orders them by DueDate.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_7\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/SmartTasks?$filter=Created+gt+datetime'2005-01-01T00:00:00'&$orderby=DueDate\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Table for ATS Widget Interaction Search Terms\nDESCRIPTION: This markdown snippet defines a table that provides search terms for different widget interaction tasks when standard actions are not available. It includes tasks such as finding, clicking, and setting values for widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/bp/bp-one/bp-one-finding-the-action-you-need.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nTask                             | Search Term |\n----------------------------------|:------:|\nFinding a widget                 | \"Find\" in combination with the name of the widget. |\nClicking a widget                | \"Click\" in combination with the name of the widget. |\nCover an input widget            | \"Set\" in combination with the name of the widget. |\nRetrieving a value from a widget | \"Get\" in combination with the name of the widget. |\nAsserting values/information     | \"Assert\" in combination with the name of the widget. |\nGenerating values/information    | Please read the section for more information.\n```\n\n----------------------------------------\n\nTITLE: Fetching a Specific Record by ID in OData\nDESCRIPTION: Example showing how to retrieve a specific record by including its ID in the URL path. This retrieves the Engineer entity with the specified ID.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/integration/exposing-data-to-bi-tools-using-odata.md#2025-04-21_snippet_2\n\nLANGUAGE: http\nCODE:\n```\nhttp://localhost:8080/odata/publishedservicename/v1/Engineers(7881299347898469)\n```\n\n----------------------------------------\n\nTITLE: Linking to Mendix 8.2.2 Release Notes in Markdown\nDESCRIPTION: This snippet shows how to create a link to Mendix 8.2.2 release notes using Markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[Mendix 8.2.2](/releasenotes/studio-pro/8.2/#822)\n```\n\n----------------------------------------\n\nTITLE: XPath Query with not() in Java\nDESCRIPTION: This Java query retrieves all `Sales.Customer` objects where the `Name` attribute is not equal to 'Jansen'. It showcases the use of `not()` within an XPath query in a Java context for Mendix applications.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/xpath-constraint-functions/xpath-not.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaQuery\nCODE:\n```\n     //Sales.Customer[not(Name = 'Jansen')]\n```\n\n----------------------------------------\n\nTITLE: Markdown Alert Code Block\nDESCRIPTION: A Markdown alert block for warning users about using Studio Pro on Mac with Parallels\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/general-marketplace.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nIf you are using Studio Pro on a Mac with Parallels, see [this update](https://kb.parallels.com/112091#section7) for improving the loading time of Marketplace in Studio Pro.{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Common Section Include Snippet\nDESCRIPTION: Reference to common section documentation that applies to grid column configuration.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/data-widgets/grids/data-grid/columns.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\\\"/static/_includes/refguide9/common-section-link.md\\\" %}}\n```\n\n----------------------------------------\n\nTITLE: Generating Android Keystore with Java Keytool\nDESCRIPTION: Command for generating a keystore file using Java keytool. The command creates a keystore with RSA algorithm and a validity of 36500 days (approximately 100 years). Users must replace the alias name and password placeholders with their own values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/managing-app-signing-keys.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n{{keytool -genkey -v -keystore file.keystore -alias YOUR_ALIAS_NAME -storepass YOUR_ALIAS_PWD -keypass YOUR_ALIAS_PWD -keyalg RSA -validity 36500}}\n```\n\n----------------------------------------\n\nTITLE: Listing Supported Exclusion Variables - JavaScript\nDESCRIPTION: This code snippet lists all supported exclusion variables that can be used to customize the appearance and functionality of native mobile widgets in Mendix, providing developers with a comprehensive reference.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/atlas-ui/customize-styling-new.md#2025-04-21_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\nexcludeActivityIndicator\nexcludeActivityIndicatorHelpers\nexcludeAnimation\nexcludeBackgroundImage\nexcludeBadge\nexcludeBadgeHelpers\nexcludeBottomSheet\nexcludeButtons\nexcludeButtonsHelpers\nexcludeCarousel\nexcludeCheckBox\nexcludeColorPicker\nexcludeContainer\nexcludeDatePicker\nexcludeDropDown\nexcludeFeedback\nexcludeFAB\nexcludeFABHelpers\nexcludeImage\nexcludeImageHelpers\nexcludeIntroScreen\nexcludeIntroScreenHelpers\nexcludeLayoutGrid\nexcludeLineChart\nexcludeLineChartHelpers\nexcludeBarChart\nexcludeBarChartHelpers\nexcludeListView\nexcludeListViewHelpers\nexcludeListViewSwipe\nexcludeListViewSwipeHelpers\nexcludeMaps\nexcludeMapsHelpers\nexcludePageTitle\nexcludeProgressBar\nexcludeProgressBarHelpers\nexcludeProgressCircle\nexcludeProgressCircleHelpers\nexcludePopUpMenu\nexcludeQRCode\nexcludeRangeSlider\nexcludeRangeSliderHelpers\nexcludeRating\nexcludeReferenceSelector\nexcludeSafeAreaView\nexcludeSlider\nexcludeSliderHelpers\nexcludeTabContainer\nexcludeTabContainerHelpers\nexcludeTextArea\nexcludeTextBox\nexcludeTextBoxHelpers\nexcludeToggleButtons\nexcludeTypography\nexcludeTypographyHelpers\nexcludeVideoPlayer\nexcludeWebView\nexcludeHelpers;\n```\n\n----------------------------------------\n\nTITLE: Checking App for Issues - Mendix Command-Line Tool - Plaintext\nDESCRIPTION: The `mx check` command scans the provided MPR file for errors, warnings, and performance recommendations, ensuring that the file version matches the current version of the MX command-line tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/app.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nmx check\n```\n\n----------------------------------------\n\nTITLE: Configuring Column Chart Styles in Mendix Native\nDESCRIPTION: Defines the style configuration object for the Mendix native column chart widget. Includes comprehensive styling options for the chart container, error messages, grid, axes, legend, domain padding, and column customization.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_columnchart_ColumnChart = {\n  container: {\n    // All ViewStyle properties.\n  },\n  errorMessage: {\n    // All TextStyle properties.\n  },\n  chart: {\n    // All ViewStyle properties.\n  },\n  grid: {\n    backgroundColor: null, // Applies a color to the grid background (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the grid lines (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    lineColor: null, // Applies a color to the grid lines (string).\n    width: null, // Applies a width to the grid lines (number).\n    padding: null, // Applies padding to all sides of the grid (number). This makes axis value labels visible.\n    paddingBottom: null, // Applies padding to the bottom side of the grid (number). This makes axis value labels visible.\n    paddingHorizontal: null, // Applies padding to the horizontal sides of the grid (number). This makes axis value labels visible.\n    paddingLeft: null, // Applies padding to the left side of the grid (number). This makes axis value labels visible.\n    paddingRight: null, // Applies padding to the right side of the grid (number). This makes axis value labels visible.\n    paddingTop: null, // Applies padding to the top side of the grid (number). This makes axis value labels visible.\n    paddingVertical: null, // Applies padding to the vertical sides of the grid (number). This makes axis value labels visible.\n  },\n  xAxis: {\n    color: null, // Applies a color to the axis value labels (string).\n    dashArray: null, // Applies a pattern of dashes and gaps to the axis line (string containing a [dash pattern](https://www.w3.org/TR/SVG11/painting.html#StrokeDasharrayProperty)).\n    fontFamily: null, // Applies a font type to the axis value labels (string).\n    fontSize: null, // Applies a size to the axis value labels (number).\n    fontStyle: null, // Applies a font style to the axis value labels (\"normal\" or \"italic\").\n    fontWeight: null, // Applies a font weight to the axis value labels (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n    lineColor: null, // Applies a color to the axis line (string).\n    width: null, // Applies a width to the axis line (number).\n    label: {\n      // All TextStyle properties.\n      relativePositionGrid: null, //P ositions the axis label at the **bottom** or **right** side of the grid.\n    }\n  },\n  yAxis: {\n    // All xAxis properties\n  },\n  legend: {\n    container: {\n      // All ViewStyle properties.\n    },\n    item: {\n      // All ViewStyle properties.\n    },\n    indicator: {\n      // All ViewStyle properties.\n    },\n    label: {\n      // All TextStyle properties.\n    },\n  },\n  domain: {\n    padding: {\n      x: null, // Applies a number of pixels of padding to add the beginning and end of the X axis domain (number).\n      y: null, // Applies a number of pixels of padding to add the beginning and end of the Y axis domain (number).\n    }\n  },\n  columns: {\n    columnColorPalette: null, // Provides colors to columns that do not have a column color configured (string with list of colors separated by ';', one color for each series).\n    columnsOffset: null, // Determines the number of pixels each column in a group should be offset from its original position on the Y axis (number). This is only applicable when presentation mode is **Grouped**.\n    customColumnStyles: {\n      any_custom_column_style_name: {\n        column: {\n          ending: null, // Specifies a radius to apply to each column.\n          columnColor: null, // Applies a color to the column (string). If columns are configured to have labels, the labels will be the same color as the column.\n          width: null, // Applies a width to the column (number).\n        },\n        label: {\n          fontFamily: null, // Applies a font type to the column label (string).\n          fontSize: null, // Applies a size to the column label (number).\n          fontStyle: null, // Applies a font style to the column label (**normal** or **italic**).\n          fontWeight: null, // Applies a font weight to the column label (\"normal\" or \"bold\" or \"100\" or \"200\" or \"300\" or \"400\" or \"500\" or \"600\" or \"700\" or \"800\" or \"900\").\n        }\n      }\n    }\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Workflow Commons Page Templates\nDESCRIPTION: Outlines the available page templates for building workflow-related pages including MyInitiatedWorkflows, UserTask templates, and Workflow_Admin templates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/workflow-commons.md#2025-04-21_snippet_1\n\nLANGUAGE: mendix\nCODE:\n```\n* MyInitiatedWorkflows\n* UserTask_Basic\n* UserTask_Extended\n* Workflow_Admin\n* Workflow_TaskDashboard\n* Workflow_TaskInbox\n```\n\n----------------------------------------\n\nTITLE: Joining Subqueries with Duplicate Column Names in OQL v2\nDESCRIPTION: Example showing how OQL v2 allows joining subqueries even when they have attributes with the same name, which was not possible in OQL v1.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-v2.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nSELECT *\nFROM (SELECT * FROM Module.Person) P\nJOIN (SELECT * FROM Module.City) C\nON P/Residence = C/Name\n```\n\n----------------------------------------\n\nTITLE: Configuring Java Agent in m2ee.yaml\nDESCRIPTION: This snippet demonstrates how to configure the Java agent for New Relic in the m2ee.yaml file for on-premise Linux and Windows Service Console deployments.  The `-javaagent` parameter is added to the `javaopts` list, specifying the path to the `javaagent.jar` file. This configuration allows New Relic to monitor the Java Virtual Machine (JVM) and the Mendix application running within it.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/monitoring-troubleshooting/manage-app-performance/manage-app-performance-with-new-relic.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n javaopts: [\n   \"-Dfile.encoding=UTF-8\", \"-Xmx512M\", \"-Xms512M\",\n   \"-Djava.io.tmpdir=/srv/mendix/data/tmp\",\n   \"-javaagent:/opt/newrelic/javaagent.jar\"\n ]\n```\n\n----------------------------------------\n\nTITLE: Importing License Bundle into PCLM\nDESCRIPTION: Command to import a license bundle (zip file) containing Mendix Runtime and Operator licenses into the PCLM server. The bundle is provided by Mendix Support.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli license import \\\n    -s <pclm-http-url> \\\n    -u <admin-user> \\\n    -p <admin-password> \\\n    -f <bundle-zip-file-path> \\\n    -t <custom-ca-cert-path>\n```\n\n----------------------------------------\n\nTITLE: OIDC Provider Token Processing Microflow Selection\nDESCRIPTION: Instructions for selecting the default access token processing microflow for the OIDC Provider module within an application using OIDC authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/oidc.md#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nSelect `OIDC.Default_OIDCProvider_TokenProcessing_CustomATP` as the custom AccessToken processing microflow.\n```\n\n----------------------------------------\n\nTITLE: Basic MxBuild Windows Command Example\nDESCRIPTION: Example command showing how to create a deployment package out.mda using MxBuild on Windows\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/mxbuild.md#2025-04-21_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nmxbuild --target=package --java-home=\"C:\\Program Files\\Java\\jdk1.8.0_144\" --java-exe-path=\"C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe\" \"C:\\Users\\username\\Documents\\Mendix\\MyApp\\MyApp.mpr\"\n```\n\n----------------------------------------\n\nTITLE: Top Bar Navigation Keyboard Shortcuts\nDESCRIPTION: Keyboard shortcuts for navigating the Changes pane interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/menus/view-menu/changes-pane.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nEnter - Zoom into selected item\nBackspace - Go back to previous level\n```\n\n----------------------------------------\n\nTITLE: Mendix App CRD YAML example\nDESCRIPTION: This YAML defines a MendixApp Custom Resource Definition (CRD) example.  It sets the `allowOverrideSecretsWithSecretStoreCSIDriver` property to `true`, which enables the use of the Secret Store CSI Driver to override secrets within the Mendix application.  It also configures other application settings like version, resources, and runtime environment.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/secret-store-credentials.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ncat > mendixApp.yaml <<EOF\napiVersion: privatecloud.mendix.com/v1alpha1\nkind: MendixApp\nmetadata:\n  name: <{Mendix App CR name}>\nspec:\n  mendixRuntimeVersion: 9.4.0.24572\n  allowOverrideSecretsWithSecretStoreCSIDriver: true\n  replicas: 1\n  resources:\n    limits:\n      cpu: \"1\"\n      memory: 512Mi\n    requests:\n      cpu: 100m\n      memory: 512Mi\n  runtime:\n    customConfiguration: '{\"ScheduledEventExecution\":\"NONE\",\"MicroflowConstants\":\"{\\\"MyFirstModule.MyConstant\\\":\\\"Awesome\\\",\\\"RestClient.RestServiceUrl\\\":\\\"https://go-dummy-app.privatecloud-storage-tls.svc.cluster.local\\\",\\\"Atlas_Core.Atlas_Core_Version\\\":\\\"3.0.5\\\"}\"}'\n    dtapMode: D\n    logAutosubscribeLevel: INFO\n    runtimeLicense: {}\n  runtimeMetricsConfiguration: {}\n  sourceURL: oci-image://<{image URL}>\n  sourceVersion: 0.0.0.87\nEOF\n```\n\n----------------------------------------\n\nTITLE: XPath Query Example\nDESCRIPTION: Example XPath query to retrieve user names and last login dates for users whose names start with 'a'. The query can be run with user impersonation for security context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-one-apm/rg-one-query-tool.md#2025-04-21_snippet_0\n\nLANGUAGE: xpath\nCODE:\n```\n//System.User[starts-with(Name,'a')];Name,LastLogin\n```\n\n----------------------------------------\n\nTITLE: Removing CustomWidgetDatabaseSource Element\nDESCRIPTION: The CustomWidgetDatabaseSource element has been deleted from the CustomWidgets module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.5.md#2025-04-21_snippet_3\n\nLANGUAGE: markup\nCODE:\n```\n#### CustomWidgetDatabaseSource (Element)\n\n* We deleted this element.\n```\n\n----------------------------------------\n\nTITLE: Inserting Design Properties Section Link\nDESCRIPTION: This snippet provides a link to the design properties section for table widgets, allowing users to understand design-related settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/table.md#2025-04-21_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Defining Alert Block in Markdown\nDESCRIPTION: This snippet demonstrates how to create an alert block in Markdown using Hugo shortcodes. It's used to highlight important information about Mendix Operator compatibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/deployment/mendix-for-private-cloud.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"warning\" %}}\nMendix Operator 2.15.0 is compatible with app images built after December 20, 2023 or later.\n\nBefore upgrading to this Operator version, ensure that all apps managed by the Mendix Operator have been deployed after December 20, 2023; if not, rebuild and redeploy app MDAs before (or after) upgrading the Operator.\n\nWe recommend regularly updating apps to ensure that they contain the latest security updates.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Basic Keyboard Shortcut in Markdown\nDESCRIPTION: Shows how to format a keyboard shortcut using HTML kbd tags in Markdown.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v1/create-custom-actions/custom-action-basics.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<kbd>Ctrl</kbd>\n```\n\n----------------------------------------\n\nTITLE: Installing Yeoman for Mendix Widget Development\nDESCRIPTION: Commands for installing the required tools for Mendix pluggable widget development, including Yeoman and the Mendix widget generator.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install -g yo\nnpm install -g @mendix/generator-widget\n```\n\n----------------------------------------\n\nTITLE: Defining the getProperties Function Signature in TypeScript\nDESCRIPTION: This code defines the TypeScript function signature for the getProperties function that customizes widget properties in Studio Pro. It takes values and default configuration parameters to dynamically control property visibility.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-config-api-9.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getProperties(\n    values: ValuesAPI,\n    defaultConfiguration: Properties\n): Properties\n```\n\n----------------------------------------\n\nTITLE: Combining XML Tags in Excel\nDESCRIPTION: Excel formula to combine opening tag, column name, and closing tag for XSD schema creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_2\n\nLANGUAGE: excel\nCODE:\n```\n=(A1&B1&C1)\n```\n\n----------------------------------------\n\nTITLE: Configuring Theme Settings in JavaScript for Mendix\nDESCRIPTION: This code sets up the main theme settings for a Mendix mobile app to implement branding and design quickly. The settings are stored in the custom-variables.js file, allowing for easy configuration of the app's look and feel.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/design-principles.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// theme/native/custom-variables.js\n// Main Theme Configuration\nmodule.exports = {\n    primaryColor: '#007ACC',\n    secondaryColor: '#F3F3F3',\n    fontFamily: 'Arial, sans-serif',\n    // Other custom variables\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Authentication in Mendix\nDESCRIPTION: Instructions for setting up AWS authentication using the AWS Authentication Connector in a Mendix application. This is a prerequisite for using AWS service connectors.\nSOURCE: https://github.com/mendix/docs/blob/development/templates/marketplace-aws-connector-page-template.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Configuring AWS Authentication\n\nIn order to use the {AWS SERVICE NAME} service, you must authenticate with AWS. To do so, you must set up a configuration profile in your Mendix app. After you set up the configuration profile, the connector module handles the authentication internally.\n\nAs of version 3.0.0 of the [AWS Authentication Connector](https://marketplace.mendix.com/link/component/120333), all the resources and logic required to set up authentication are centralized inside the AWS Authentication Connector module.\n\nThe AWS Authentication Connector supports both **static credentials** and **temporary credentials**. For more information and detailed instructions please refer to the [AWS Authentication Connector documentation page](https://docs.mendix.com/appstore/connectors/aws/aws-authentication/).\n```\n\n----------------------------------------\n\nTITLE: Referencing Mendix SSO Module in Markdown\nDESCRIPTION: This snippet shows how to create a link to the Mendix SSO module documentation using Markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[Mendix SSO](/appstore/modules/mendix-sso/)\n```\n\n----------------------------------------\n\nTITLE: Scaling Chrome Nodes with Docker Compose\nDESCRIPTION: This bash command scales the number of Chrome nodes to 3 using Docker Compose, allowing for parallel test execution.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-setup-local-selenium-index/ht-two-setup-local-docker-selenium-hub.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo docker-compose up -d --scale chrome=3\n```\n\n----------------------------------------\n\nTITLE: List View CSS Classes in Mendix\nDESCRIPTION: CSS classes for customizing the appearance of list views in Mendix applications, with options for lined, striped, separated, or unstyled views.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/styles.md#2025-04-21_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\n/* List view styling */\n.listview-lined { /* list view widget with only a bordered bottom in a list view item */ }\n.listview-striped { /* list view widget with striped list view items */ }\n.listview-seperated { /* list view widget with list view items separated */ }\n.listview-stylingless { /* list view widget without spacing and background */ }\n```\n\n----------------------------------------\n\nTITLE: Disabling Sorting in Mendix Microflow\nDESCRIPTION: Disables sorting functionality in a Mendix microflow by setting the IsSortable attribute to false.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/consumed-rest-services/server-side-paging.md#2025-04-21_snippet_6\n\nLANGUAGE: Expression\nCODE:\n```\nfalse\n```\n\n----------------------------------------\n\nTITLE: Displaying Input Parameters Table for Open GroupBox Action in Markdown\nDESCRIPTION: This code snippet shows a markdown table that lists the input parameters for the 'Open GroupBox' action. It includes the parameter names, datatypes, whether they are required, and descriptions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-groupbox/rg-one-open-groupbox.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the groupbox you want to open\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: Including Label Section for Checkbox\nDESCRIPTION: This snippet refers to the label configuration for the checkbox, defining how the label is associated and displayed with the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/input-widgets/check-box.md#2025-04-21_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/label-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Clearing Badge Number upon App Load and Resume in Mendix\nDESCRIPTION: This snippet describes the steps to configure the clearing of a badge notification when the app is opened or resumed using a nanoflow in Mendix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-badges.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n1. Drop an **App events** widget onto **Home_Native**:\n\n2. Double-click your **App events** widget.\n3. Select **On load** > **Call a nanoflow**.\n4. Click **New** and make a new nanoflow: *ACT_ClearBadge*.\n5. Go to **ACT_ClearBadge**.\n6. Drag a **Set badge number** activity into your nanoflow:\n\n7. Double-click your **Set badge number** activity.\n8. Click **Badge number** > **Edit**.\n9. Type *0* and click **OK**.\n10. Set **Use Return Value** to **No**:\n\n11. Drag a **Log message** activity into your microflow.\n12. Double-click your **Log message** activity, write *Your notification has been cleared* into **Template**, and click **OK**:\n\n13. Go back to your **Home_Native** page and double-click your **App events** activity.\n14. Make sure **Page load** > **On load** is set to **Call a nanoflow**, and specify that nanoflow as **ACT_ClearBadge**.\n15. Set **App resume** > **On resume** is set to **Call a nanoflow**, and specify that nanoflow as **ACT_ClearBadge**.\n16. Click **OK** and save your changes.\n```\n\n----------------------------------------\n\nTITLE: Introducing filterable and sortable properties in ODataMappedValue Element\nDESCRIPTION: This snippet discusses the new `filterable` and `sortable` properties in the ODataMappedValue element, allowing attributes to be filtered and sorted.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.16.md#2025-04-21_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n* We introduced the `filterable` property to answer: \"Is the attribute filterable?\"\n```\n\nLANGUAGE: Markdown\nCODE:\n```\n* We introduced the `sortable` property to answer: \"Is the attribute sortable?\"\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix Pluggable Widget Generator\nDESCRIPTION: Global installation of Mendix-specific Yeoman widget generator for Mendix 8, enabling rapid widget development\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install -g @mendix/generator-widget@\"<9\"\n```\n\n----------------------------------------\n\nTITLE: Configuring 3D Scatter Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a 3D scatter plot.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ \"9\", \"8\", \"5\", \"1\" ],\n  \"y\": [ \"1\", \"2\", \"4\", \"8\" ], \n  \"z\": [ \"11\", \"8\", \"15\", \"3\" ],\n  \"mode\": \"markers\",\n  \"type\": \"scatter3d\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Finding iOS Bundle ID in Config File\nDESCRIPTION: Location of the bundle identifier in the iOS configuration file\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/push-notifications/setting-up-google-firebase-cloud-messaging-server.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nios/Config/config.xcconfig\nBUNDLE_IDENTIFIER\n```\n\n----------------------------------------\n\nTITLE: Local Testing Manifest Configuration for Microsoft Entra ID\nDESCRIPTION: JSON configuration for setting up local testing redirect URIs in Microsoft Graph App Manifest with multiple callback endpoints\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/mobile-sso.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n\"web\": {\n\"homePageUrl\": null,\n\"logoutUrl\": null,\n\"redirectUris\": [\n\"makeitnative://oauth/callback\",\n\"https://IP_address/oauth/v2/callback\"\n]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a String Property for Pluggable Widgets in Mendix 9\nDESCRIPTION: This XML snippet demonstrates how to define a string property for a pluggable widget. It includes the basic structure with 'key' and 'type' attributes set for a string property.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-property-types-9.md#2025-04-21_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<property key=\"myString\" type=\"string\">\n\t<caption>My string</caption>\n\t<description>My string setting</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Deep Link Login Page JavaScript Handler\nDESCRIPTION: JavaScript code snippet for handling deep link redirects after login on a custom login page. This code checks for a continuation parameter and redirects accordingly after login.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/deep-link.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.mx.afterLoginAction = () => {\n  if ( window.location.search.startsWith('?cont=') ) {\n     window.location = window.mx.homeUrl+decodeURIComponent(window.location.search.substring(6))\n  } else {\n     window.mx.redirect(window.mx.homeUrl);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Data Grid Limitations Table\nDESCRIPTION: Markdown table listing unsupported configuration options for Data Grid 2 widget conversion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/mendix-client/widget-conversion-limitations.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Unsupported in Data Grid 2              |\n|-----------------------------------------|\n| Data Source Wait for Search             |\n| Server Side Paging                      |\n| Show Empty Rows                         |\n| Column Size in Pixels                   |\n| Tooltip Page                            |\n| Paging Bar Without Total Count          |\n| Single and Maintain Selection           |\n| Select First                            |\n| Aggregate Caption                       |\n| Aggregate Function                      |\n| Editable Columns                        |\n| Tooltip Pages                           |\n| Reference Set Columns                   |\n| Range Search Field                      |\n| Read-only Search Field                  |\n| Hidden Search Field with Default Value  |\n| Multiple Search Fields for an Attribute |\n| All Rows Variable                       |\n| Select All Button                       |\n| Export to CSV Button                    |\n| Inline Editing                          |\n```\n\n----------------------------------------\n\nTITLE: Database Connection Pool Configuration Parameters\nDESCRIPTION: Key configuration parameters for database connection pooling, implemented using Apache Commons Object-pooling API. These settings control the number of active and idle database connections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/custom-settings/tricky-custom-runtime-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nConnectionPoolingMaxActive=50\nConnectionPoolingMaxIdle=50\nConnectionPoolingMinIdle=0\n```\n\n----------------------------------------\n\nTITLE: Defining Static and Sample Data Parts\nDESCRIPTION: This snippet splits the chart data into static and dynamic parts for use within the Any Chart widget. The static part defines chart type while the sample data includes the dynamic aspects such as the `x` and `y` coordinates.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/charts-tutorials/charts-any-usage.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n[ { \"type\": \"scatter\" } ]\n```\n\nLANGUAGE: json\nCODE:\n```\n[ { \"x\": [ 1, 2 ], \"y\": [ 1, 2 ] } ]\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Pattern Escaping\nDESCRIPTION: Special characters in log messages are automatically escaped for regex pattern matching by enclosing the text with \\Q and \\E. For custom patterns, special characters including backslashes must be escaped with a backslash.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/rg-apd/rg-three-apd/rg-three-logs.md#2025-04-21_snippet_0\n\nLANGUAGE: regex\nCODE:\n```\n\\Q[message text]\\E\n```\n\n----------------------------------------\n\nTITLE: Test Entity Creation Microflow\nDESCRIPTION: Implements a microflow (DS_TestEntity) that creates a TestEntity object and returns true upon completion.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/using-mobile-capabilities/local-notifications/local-notif-data.md#2025-04-21_snippet_3\n\nLANGUAGE: mendix\nCODE:\n```\nMicroflow: DS_TestEntity\n  1. Create object: NativeMobile.TestEntity\n  2. Commit: true\n  3. End event: Return true\n```\n\n----------------------------------------\n\nTITLE: APD Agent API Key Constant Path\nDESCRIPTION: Constant path reference where the APD API key should be configured for agent authentication.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/apd/ig/ig-three.md#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nUSE_ME/APDAgent.APIKey\n```\n\n----------------------------------------\n\nTITLE: Defining Input Parameters for Find/Assert Widget Function in Markdown\nDESCRIPTION: This code snippet defines the input parameters for the Find/Assert Widget function using a Markdown table. It specifies the name, datatype, requirement, and description for each parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/mendix-actions/rg-one-generic/rg-one-findassert-widget.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Datatype | Required | Description\n--- | --- | --- | ---\nWidget Name | String | yes | The name of the widget\nValue | String |no | The value of the widget\nVisible Only | Boolean | no | Limit the possible return value to only visible widgets\nSearch Context | WebElement | no | Limit the search to the given WebElement\n```\n\n----------------------------------------\n\nTITLE: JSON Schema for Operation Result - Object Reference\nDESCRIPTION: Defines the JSON schema for an operation result that returns a single object based on a message definition.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-service-json-schema.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{ \"$ref\": \"#/definitions/#definition_name#\"}\n```\n\n----------------------------------------\n\nTITLE: Verifying Node.js Installation\nDESCRIPTION: Command to check the current Node.js version installed on the system\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode -v\n```\n\n----------------------------------------\n\nTITLE: Syncing Objects to Device from Nanoflow - Mendix 8.9\nDESCRIPTION: This example outlines the use of the Sync to device microflow activity that allows for selective synchronization of a set of objects to the device from a nanoflow context.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/8/8.9.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nmyMicroflow.syncToDevice(objectsArray);\n```\n\n----------------------------------------\n\nTITLE: Breaking Change Example - Member State\nDESCRIPTION: Code reference showing how object member state changes are now handled differently, where setting a value results in CHANGED state even if the value remains the same.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.5.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n$User/Name = 'Alice'\n```\n\n----------------------------------------\n\nTITLE: Generating Random Integer in JavaScript\nDESCRIPTION: Creates a random integer between a minimum (inclusive) and maximum (exclusive) value using JavaScript's Math functions. The function takes two parameters: min (lower bound, included) and max (upper bound, excluded).\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/std-actions/ats-core-actions/rg-one-random-number.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nMath.floor(Math.random() * (max - min)) + min;\n```\n\n----------------------------------------\n\nTITLE: Defining an Integer Property in XML\nDESCRIPTION: This XML snippet defines an integer property in a Mendix widget. It includes a `defaultValue` attribute, which is required for integer properties. The `defaultValue` provides a default value if the widget user does not explicitly set an integer value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/widget-development/use-xml-widget.md#2025-04-21_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"height\" type=\"integer\" defaultValue=\"1\">\n  <caption>Height</caption>\n  <category>Appearance</category>\n  <description>The height of the widget</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Inserting a Colored Icon using a Shortcode in Mendix\nDESCRIPTION: This shortcode inserts an SVG icon with a specified color. The `name` attribute specifies the icon file and the `color` attribute overrides the default text color of the icon. The color attribute accepts predefined color names like red, green, blue, gray, yellow, or purple.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/icon-demo.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n{{% icon name=\"alert-circle\" color=\"red\" %}}\n```\n\n----------------------------------------\n\nTITLE: Importing a Module into a Mendix App\nDESCRIPTION: The `mx module-import` command imports a source module into a Mendix app. Necessary files include an *.mpk* file for the source module and an *.mpr* file for the destination project. Successful execution outputs a code of 0, while errors return specific codes indicating the problem type and details.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/module.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n`mx module-import MPK_PATH MPR_PATH`\n```\n\nLANGUAGE: bash\nCODE:\n```\n`mx module-import MyNewModule.mpk MyApp.mpr`\n```\n\nLANGUAGE: bash\nCODE:\n```\n> mx.exe module-import Module.mxmodule App.mpr\nImporting protected module is not supported\nExit code 111\n```\n\nLANGUAGE: bash\nCODE:\n```\n> mx.exe module-import Module.mpk App.mpr\nThe mpr file version is '10.3.0-dev'.\nImporting module Module into project MyApp\nModule 'Module' already exists in the app.\nExit code 303\n```\n\n----------------------------------------\n\nTITLE: Data Widgets Documentation Structure\nDESCRIPTION: Markdown content defining the structure and documentation of data widgets in Mendix 8, including widget descriptions and visual examples.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/data-widgets/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Data Widgets\"\nurl: /refguide8/data-widgets/\nweight: 15\n---\n\n## Introduction\n\nData widgets display contents of one object or a list of objects.\n\nThe Data widgets category contains the following widgets:\n\n* [Data view](/refguide8/data-view/) – This widget shows the contents of exactly one object.\n* [Data grid](/refguide8/data-grid/) – This widget shows a list of objects in a table format.\n* [Template grid](/refguide8/template-grid/) – This widget shows a list of objects in a tile view.\n* [List view](/refguide8/list-view/) – This widget shows a list of objects.\n```\n\n----------------------------------------\n\nTITLE: Defining Background Gradient Widget Styles in JavaScript\nDESCRIPTION: Sets the style for a Background Gradient widget in Mendix Native applications using a JavaScript object. The configuration includes color stop details, angles, and opacity for creating linear color transitions. Requires 'ViewStyle' properties and valid color formats for full implementation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/native-styling-element-guide.md#2025-04-21_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\nexport const com_mendix_widget_native_backgroundgradient_BackgroundGradient = {\n  container: {\n    // This has all ViewStyle properties. \n  },\n  colorList: {\n    color: null, // Colors can be passed in different formats. Valid color value formats are #d0d0d0, rgb(115,155,155), or rgba(195,226,226,0.5)\n    offset: null, // A color-stop's value, followed by one or more optional stop positions (should be between 0.0 and 1.0)\n  },\n  angle: null, // Line of direction. Takes a value from `0` to `360`. A value of 0 is equivalent to top; increasing values rotate the design clockwise.\n  opacity: null, // Takes a value from `0` to `100`. The lower the value, the more transparent.\n};\n```\n\n----------------------------------------\n\nTITLE: Defining OQL Multiplication Operator\nDESCRIPTION: Shows the multiplication operator's functionality in OQL expressions by multiplying two numbers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/resources/data-sets/oql/oql-expressions/oql-operators/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| `*` | Multiplication | `6 * 4` returns 24. |\n```\n\n----------------------------------------\n\nTITLE: Java Action Task Queue Integration\nDESCRIPTION: Support for executing Java actions within task queues, enhancing background processing capabilities.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.0.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nCore.getSessionById\n```\n\n----------------------------------------\n\nTITLE: Defining Default Icon Glyphs (TSX)\nDESCRIPTION: This TypeScript snippet defines two constants outside the GroupBox class in the container component (`GroupBox.tsx`) to store the default glyph references for the collapse and expand icons. These glyphs are used if no custom icons are provided.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/extensibility/build-native-widget.md#2025-04-21_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\nconst defaultCollapseIconGlyph = \"glyphicon-minus\";\nconst defaultExpandIconGlyph = \"glyphicon-plus\";\n\n```\n\n----------------------------------------\n\nTITLE: Using Icon in Markdown Sentence\nDESCRIPTION: This example shows how to incorporate an icon within a Markdown sentence, specifically for adding a new user action.\nSOURCE: https://github.com/mendix/docs/blob/development/static/mx-icons/_readme.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nTo add a new user, click **Add** ({{% icon add %}}).\n```\n\n----------------------------------------\n\nTITLE: Linking to Studio Pro 8 Release Notes in Markdown\nDESCRIPTION: This snippet shows how to create a link to Studio Pro 8 release notes using Markdown syntax.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/marketplace/ats.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n[Studio Pro 8](/releasenotes/studio-pro/8/)\n```\n\n----------------------------------------\n\nTITLE: Rendering Header Caption in GroupBox Component\nDESCRIPTION: This TypeScript code snippet demonstrates how to render the `headerCaption` prop within the GroupBox component's render method.  It accesses the prop and displays it within a Text component, styled with `headerContent`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/build-native-widget.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nrender(): ReactNode {\n    return (\n        <View style={this.styles.container}>\n            <View style={this.styles.header}>\n                <Text style={this.styles.headerContent}>{this.props.headerCaption}</Text>\n                <Text style={this.styles.headerContent}>-</Text>\n            </View>\n            <View style={this.styles.content}>\n                <Text>Content</Text>\n            </View>\n        </View>\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Introducing defaultSequenceFlowLineType Property in ModelerSettings\nDESCRIPTION: A new property 'defaultSequenceFlowLineType' has been added to the ModelerSettings element.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-10/metamodel-10.8.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n#### ModelerSettings (Element)\n\n* We introduced the `defaultSequenceFlowLineType` property.\n```\n\n----------------------------------------\n\nTITLE: Defining a TextTemplate Property in Mendix Pluggable Widgets\nDESCRIPTION: XML definition for a text template property named 'myBlockTitle' with translations for multiple languages. This allows users to configure translatable text in the Mendix Studio Pro interface.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"myBlockTitle\" type=\"textTemplate\">\n\t<caption>Input title</caption>\n\t<description>Title for the color input</description>\n\t<translations>\n\t\t<translation lang=\"en_US\">Color</translation>\n\t\t<translation lang=\"nl_NL\">Kleur</translation>\n\t\t<translation lang=\"uk_UA\">Колір</translation>\n\t</translations>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Generating Custom Developer Apps using Native Builder\nDESCRIPTION: Command to create a custom preview app specific to a project and Studio Pro version. It creates a 'develop' branch on GitHub and initializes the build on App Center. It requires the 'prepare' command to be run first.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/mobile/native-mobile/native-builder.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnative-builder.exe build dev-app --project-name \"CoolApp\" --output-path \"C:\\bundles\\developer\"\n```\n\n----------------------------------------\n\nTITLE: Chart Margin Configuration (JSON)\nDESCRIPTION: This snippet demonstrates how to configure the margins around a chart, creating space between the chart and its container. The snippet sets the left, right, bottom, and top margins, as well as the padding and auto-expansion properties. This can prevent elements from being clipped.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"margin\": {\n    \"l\": 70,\n    \"r\": 60,\n    \"b\": 60,\n    \"t\": 60,\n    \"pad\": 10,\n    \"autoexpand\": true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Alert Block in Markdown\nDESCRIPTION: Creates an alert block for version dependency information using Markdown syntax\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/teamcenter-extension.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nFor details on the version dependencies between Studio Pro and Teamcenter Extension, see the [Dependencies](#dependencies) section.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Creating and Validating SQL Queries\nDESCRIPTION: This SQL snippet is used to retrieve a list of RequestedProductRequirement from the database where the ProductLine is specified as Planes. It demonstrates parameterized queries in SQL, where parameters are defined using curly braces. Users need to specify the actual value in runtime or testing through the Parameters tab. No special dependencies beyond general SQL and database access should be required.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-extensions/use-the-external-database-connector.md#2025-04-21_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nSelect requestedProductRequirement from productlines where productLine = {productLine}\n```\n\n----------------------------------------\n\nTITLE: Implementing TextBox Container Component\nDESCRIPTION: Container component that connects the Mendix runtime with the display component.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-one.md#2025-04-21_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Component, ReactNode, createElement } from \"react\"; \nimport { TextBoxContainerProps } from \"../typings/TextBoxProps\";\nimport { TextInput } from \"./components/TextInput\";\n\nimport \"./ui/TextBox.css\";\n\nexport class TextBox extends Component<TextBoxContainerProps> {\n\n    render(): ReactNode {\n        const value = this.props.textAttribute.value || \"\";\n        return <TextInput value={value} />;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the page defining title, link title, URL, and weight parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/feature-release-calendar/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Mendix 10 Feature Release Calendar\"\nlinktitle: \"Mx10 Feature Release Calendar\"\nurl: /releasenotes/feature-release-calendar/\nweight: 45\n#layout: wide\n---\n```\n\n----------------------------------------\n\nTITLE: Initializing 2D Histogram Configuration in JSON\nDESCRIPTION: This snippet provides the JSON configuration for a 2D histogram, defining x and y data for density visualization. The expected output will illustrate how values spread across a 2D space.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"x\": [ 1, 2, 3, 4, 5 ],\n  \"y\": [ 1, 2, 3, 4, 5 ],\n  \"type\": \"histogram2d\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Less Than Comparison in Java\nDESCRIPTION: Demonstrates a simple less than comparison in Java that returns a Boolean false when checking if 4 is less than 3.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n4<3\n```\n\n----------------------------------------\n\nTITLE: SCIM Module Startup Microflow Configuration\nDESCRIPTION: To enable app constants for configuring the SCIM module, set your app to run the after-startup microflow in the OIDC module.  The startup microflow is `SCIM.ASU_StartUp`.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/scim.md#2025-04-21_snippet_5\n\nLANGUAGE: Mendix\nCODE:\n```\n\"`SCIM.ASU_StartUp`\"\n```\n\n----------------------------------------\n\nTITLE: Adding Components After Installation\nDESCRIPTION: This command is used to re-run the installer after adding components like Svix or PCLM to the Private Mendix Platform. It ensures that the installer fetches the necessary information from the newly added components, allowing for seamless integration. The `-n` parameter specifies the namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/private-platform/pmp-quickstart.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n\n./installer platform -n=<namespace name>\n\n```\n\n----------------------------------------\n\nTITLE: Pre-processing Iris Dataset using Java Action in Mendix\nDESCRIPTION: Java action that pre-processes Iris dataset features, converting Decimal inputs to a float array and encoding it as a Base64 string for input to an ML model.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/machine-learning-kit/using-ml-kit/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@java.lang.Override\npublic IMendixObject executeAction() throws Exception \n{\n  this.Parameter = this.__Parameter == null ? null : iris_randomforest.proxies.Iris.initialize(getContext(), __Parameter);\n\n  // BEGIN USER CODE\n  // 1. convert entity object to float array\n  float[] inputFeature = new float[4];\n  inputFeature[0] = Parameter.getsepalLength().floatValue();\n  inputFeature[1] = Parameter.getsepalWidth().floatValue();\n  inputFeature[2] = Parameter.getpetalLength().floatValue();\n  inputFeature[3] = Parameter.getpetalWidth().floatValue();\n  // 2. convert input feature array to base 64\n  InputStream is = MLKit.toInputStream(inputFeature);\n  String base64 = MLKit.toBase64(is);\n  // 3. create output entity object\n  IMendixObject outputObject = Core.instantiate(getContext(), \"Iris_RandomForest.ML_Input_Entity_Iris_RF_ML_Model\");\n  outputObject.setValue(getContext(), \"Float_input\", base64);\n  return outputObject;\n  // END USER CODE\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Increment Counter Properties\nDESCRIPTION: Defines the configuration properties for incrementing a metrics counter, including naming rules and optional tag specification\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/microflows-and-nanoflows/activities/metrics-activities/metrics-increment-counter.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nName:\n  - Can only contain alpha-numeric characters, dots, or underscores\n  - Must start with a letter\n  - Cannot start with 'mx'\n  - Case-insensitive\nTags:\n  - Optional key/value pairs to enrich counter metadata\n```\n\n----------------------------------------\n\nTITLE: Filtering Design Properties and Styling in JSON\nDESCRIPTION: Example JSON configuration that filters design properties and CSS classes from the Atlas_Web_Content module, preventing developers from applying them.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/front-end/atlas-ui/module-level-theme-settings.md#2025-04-21_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"excludes\": {\n        \"Atlas_Web_Content\": {\n            \"designProperties\": true,\n            \"styling\": true\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Name in Markdown\nDESCRIPTION: This snippet demonstrates how to define the resource name section in Markdown. The resource name uniquely identifies the resource in the service and is part of the operation locations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/rest-services/published-rest-services/published-rest-service/published-rest-resource.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Resource Name{#name}\n\nThe resource name uniquely identifies the resource in the [service](/refguide/published-rest-service/). It is part of the location of the operations, so it cannot contain spaces or special characters.\n```\n\n----------------------------------------\n\nTITLE: Registering an Application with Registration API\nDESCRIPTION: This curl command demonstrates how to register an application using the Registration API. It requires a Personal Access Token for authentication and the application name in the request body. The API returns a unique UUID for the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/catalog/registration-api.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location --request POST 'https://catalog.mendix.com/rest/registration/v5/applications' \\\n--header 'Content-Type: application/json' \\\n--header 'Authorization: MxToken <your_Personal_Access_Token>' \\\n--data-raw '{\"name\": \"My-Application\"}'\n```\n\n----------------------------------------\n\nTITLE: Calculating Average Total Price of Paid Orders with XPath in Java\nDESCRIPTION: This code snippet demonstrates how to calculate the average total price of all paid orders using XPath in a Java environment within Mendix. It utilizes the `avg` aggregate function and includes a constraint to filter orders based on the 'IsPaid' attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n\"avg(//Sales.Order[IsPaid = true()]/TotalPrice)\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Ternary Plot Data Configuration in JSON\nDESCRIPTION: This snippet provides the configuration for a ternary scatter plot in JSON format, including three variables (a, b, c) and corresponding text annotations. The expected output will visualize data points in a three-variable distribution setup.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n[{\n    \"type\": \"scatterternary\",\n    \"mode\": \"markers\",\n    \"a\": [ 5, 4, 5, 2, 10 ],\n    \"b\": [ 2, 1, 15, 20, 8 ],\n    \"c\": [ 1, 20, 5, 15, 10 ],\n    \"text\":[ \"point 1\", \"point 2\", \"point 3\", \"point 4\", \"point 5\" ]\n}]\n```\n\n----------------------------------------\n\nTITLE: Handling Null Values in OData Queries\nDESCRIPTION: Demonstrates how to compare values against the null literal in OData queries. This example filters for employees with no name assigned.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-query-options.md#2025-04-21_snippet_9\n\nLANGUAGE: OData\nCODE:\n```\n?$filter=Name eq null\n```\n\n----------------------------------------\n\nTITLE: Including Common Section for Menu Bar Properties\nDESCRIPTION: This snippet includes a reference to the 'common-section-link.md' file, which likely contains common properties related to the menu bar widget. The inclusion of this external file is essential for understanding shared features among different Mendix widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/menu-widgets/menu-bar.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Listing PCLM License Usage\nDESCRIPTION: Command to list current license usage across environments and operators using PCLM CLI.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-license-manager.md#2025-04-21_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nmx-pclm-cli license list-usage -s <pclm-http-url> \\\n    -u <admin-user> \\\n    -p <admin-password> \\\n    -t <custom-ca-cert-path>\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Series in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a time series line chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_19\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"type\": \"scatter\",\n  \"mode\": \"lines\",\n  \"x\": [ \"2018-09-04\", \"2018-10-04\", \"2018-11-04\", \"2018-12-04\", \"2018-12-04\" ],\n  \"y\": [ 5, 2, 7, 10 ]\n} ]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commits Response Example - JSON\nDESCRIPTION: Example JSON response from the Mendix Repository API when retrieving commits. The response includes commit details, pagination cursors, and follows the Mendix API standard format with items and cursor navigation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/apps/app-repository-api.md#2025-04-21_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"items\": [\n    {\n      \"id\": \"42\",\n      \"author\": {\n        \"name\": \"John Doe\",\n        \"email\": \"john.doe@example.com\"\n      },\n      \"date\": \"2021-05-31T15:00:00.000Z\",\n      \"message\": \"My commit message\",\n      \"mendixVersion\": \"8.18.5.18651\",\n      \"relatedStories\": [{ \"id\": \"1234567\" }, { \"id\": \"2345678\" }]\n    },\n    <more items>...\n  ],\n  \"cursors\": {\n    \"first\": \"Rmlyc3RQYWdlQ3Vyc29y\",\n    \"prev\": \"UHJldmlvdXNQYWdlQ3Vyc29y\",\n    \"next\": \"TmV4dFBhZ2VDdXJzb3I=\",\n    \"last\": \"TGFzdFBhZ2VDdXJzb3I=\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating ODataRemoteEntitySource Properties\nDESCRIPTION: Introduces new properties `entityTypeName` and `entitySetName` to replace deprecated `remoteName` and `entitySet` properties in the REST configuration\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-9/metamodel-9.5.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# ODataRemoteEntitySource Property Changes\nentityTypeName: # New property\nentitySetName: # New property\n```\n\n----------------------------------------\n\nTITLE: Configuring Bar Chart in Any Chart Widget\nDESCRIPTION: JSON configuration for creating a horizontal bar chart.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/chart-widgets/charts-any-cheat-sheet.md#2025-04-21_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[ {\n  \"y\": [ \"giraffe\", \"elephant\" ],\n  \"x\": [ 2, 4 ],\n  \"type\": \"bar\",\n  \"orientation\": \"h\"\n} ]\n```\n\n----------------------------------------\n\nTITLE: Installing Mendix Operator with mxpc-cli\nDESCRIPTION: Command to install and configure the Mendix operator in a namespace using the mxpc-cli tool. Requires the namespace ID and a secret provided in the namespace manifest.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/private-cloud-deploy-api.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./mxpc-cli installer -n new-operator -i {namespaceID} -s {secret}\n```\n\n----------------------------------------\n\nTITLE: Example Output for Snapshot Update\nDESCRIPTION: This JSON object illustrates the output format following a successful update request on a Mendix snapshot. It details status, dates, state, and comment of the snapshot. Dependencies include receiving a proper JSON response from the Mendix API endpoint post-request.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/backups-api-v2.md#2025-04-21_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status_message\":\"Completed backup creation\",\n   \"model_version\":\"1.0.0.7\",\n   \"expires_at\":\"2020-05-18T16:00:18.000Z\",\n   \"finished_at\":\"2020-02-18T16:00:19.000Z\",\n   \"updated_at\":\"2020-02-18T16:00:19.000Z\",\n   \"snapshot_id\":\"51dc7872-771e-4c3e-853b-352359444db6\",\n   \"created_at\":\"2020-02-18T16:00:18.000Z\",\n   \"comment\":\"Hello\",\n   \"state\":\"completed\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using RANGEEND to Query Past Sales Periods - SQL\nDESCRIPTION: This snippet retrieves all sales periods that end before the end value of a specified range parameter using the RANGEEND function.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expression-syntax.md#2025-04-21_snippet_29\n\nLANGUAGE: sql\nCODE:\n```\nSELECT End, Revenue FROM Sales.Period WHERE End < RANGEEND($range)\n```\n\n----------------------------------------\n\nTITLE: Example Data Value Response Structure for OPC-UA Types\nDESCRIPTION: Shows JSON response structures for different OPC-UA data types when reading values. Includes primitive types, dates, GUIDs, and complex types like NodeID and LocalizedText.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/opc-ua-connector.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Boolean\": {\"value\": true},\n  \"Int32\": {\"value\": 1},\n  \"Float\": {\"value\": 1.0},\n  \"String\": {\"value\": \"string\"},\n  \"DateTime\": {\"value\": {\"utcTime\": 11335116845776939}},\n  \"Guid\": {\"value\": \"cd1fdbc3-1f45-4fe8-9bff-b4927d5401c4\"},\n  \"ByteString\": {\"value\": {\"bytes\":[-1]}},\n  \"XMLElement\": {\"value\": {\"fragment\": \"\\u003cprice\\u003e29.99\\u003c/price\\u003e\"}},\n  \"NodeID\": {\"value\": {\"namespaceIndex\": {\"value\": 1}, \"identifier\":\"1\"}},\n  \"ExpandedNodeID\": {\"value\": {\"namespaceIndex\": {\"value\": 1}, \"identifier\":\"1\"}, \"serverIndex\": {\"value\": 0}},\n  \"StatusCode\": {\"value\": {\"value\": 0}},\n  \"QualifiedName\": {\"value\": {\"namespaceIndex\": {\"value\": 1}, \"name\": \"string\"}},\n  \"LocalizedText\": {\"value\": {\"locale\": \"en\", \"text\": \"hello\"}}\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping Mendix Data Types to OData Types in Markdown\nDESCRIPTION: This table shows the correlation between Mendix data types and their corresponding OData (Edm) types, along with example attribute values and Atom XML representations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/integration/published-odata-services/odata-representation.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Mendix Data Type | Edm Type | Attribute Value | Atom XML Representation |\n| --- | --- | --- | --- |\n| Id ¹ ²| Edm.Int64 | 3940649673954387 | 3940649673954387 |\n| Autonumber | Edm.Int64 | 1 | 1 |\n| Binary (not supported) ³ |   |   |   |\n| Boolean | Edm.Boolean | true | true |\n| Date and time | Edm.DateTimeOffset | Fri, 19 Dec 2014 10:27:27 GMT | 2014-12-19T10:27:27.000Z |\n| Enumeration | Edm.String | Color.Blue | Blue |\n| Big decimal  | Edm.Decimal | 0.3333333333333333333333333333333333 | 0.3333333333333333333333333333333333 |\n| Hashed string | Edm.String | HashPassword | HashPassword |\n| Integer  | Edm.Int64 | 50 | 50 |\n| Long ² | Edm.Int64 | 3940649673954387 | 3940649673954387 |\n| String ⁴ | Edm.String | John | John |\n```\n\n----------------------------------------\n\nTITLE: Java Code Generation Example - Mendix 8\nDESCRIPTION: Example showing how Mendix Studio Pro 8 generates cleaner Java code for the same LogMessage action without parameter naming postfix.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n        public LogMessage(IContext context, java.lang.String Message)\n        {\n            super(context);\n            this.Message = Message;\n        }\n        @java.lang.Override\n        public java.lang.Boolean executeAction() throws Exception\n        {\n            // BEGIN USER CODE\n            Core.getLogger(\"MyLogger\").info(this.Message);\n            // END USER CODE\n        }\n```\n\n----------------------------------------\n\nTITLE: Complete Loaded Method with Dockable Pane and Menu Integration\nDESCRIPTION: The final version of the loaded method incorporating both the dockable pane registration and the menu system to open it. The highlighted lines show the new menu items and event handler for the dockable pane.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/dockable-pane-api.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nasync loaded() {\n    // Add a menu item to the Extensions menu\n    await studioPro.ui.extensionsMenu.add({\n        menuId: \"myextension.MainMenu\",\n        caption: \"MyExtension Menu\",\n        subMenus: [\n            { menuId: \"myextension.ShowTabMenuItem\", caption: \"Show tab\" },\n            { menuId: \"myextension.ShowDockMenuItem\", caption: \"Show dock pane\" },\n        ],\n    });\n\n    const paneHandle = await studioPro.ui.panes.register(\n        {\n            title: \"My Extension Pane\",\n            initialPosition: \"right\",\n        },\n        {\n            componentName: \"extension/myextension\",\n            uiEntrypoint: \"dockablepane\",\n        });\n\n    // Open a tab when the menu item is clicked\n    studioPro.ui.extensionsMenu.addEventListener(\n        \"menuItemActivated\",\n        (args) => {\n            if (args.menuId === \"myextension.ShowTabMenuItem\") {\n                studioPro.ui.tabs.open(\n                    {\n                        title: \"My Extension Tab\",\n                    },\n                    {\n                        componentName: \"extension/myextension\",\n                        uiEntrypoint: \"tab\",\n                    }\n                );\n            }\n            else if (args.menuId === \"myextension.ShowDockMenuItem\") {\n                studioPro.ui.panes.open(paneHandle);\n            }\n        }\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: SOAP Response Structure\nDESCRIPTION: This XML snippet represents the expected response structure from the 'GetCustomers' SOAP operation, including details for multiple customer entries.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/testing-web-services-using-soapui.md#2025-04-21_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<soap:Envelope xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tns=\"http://www.example.com/\">\n    <soap:Body>\n        <tns:GetCustomersResponse>\n            <Customer>\n                <Name>Jessica D. Rogers</Name>\n                <Address>2118 Collins Street</Address>\n                <ZipCode>PA 16646</ZipCode>\n                <City>Hastings</City>\n            </Customer>\n            <Customer>\n                <Name>Jamie S. Wentz</Name>\n                <Address>3269 Village View Drive</Address>\n                <ZipCode>MD 20872</ZipCode>\n                <City>Damascus</City>\n            </Customer>\n            <Customer>\n                <Name>Blake G. Race</Name>\n                <Address>4437 Sunny Glen Lane</Address>\n                <ZipCode>OH 44115</ZipCode>\n                <City>Cleveland</City>\n            </Customer>\n            <Customer>\n                <Name>Angela L. Dolly</Name>\n                <Address>3718 Alpha Avenue</Address>\n                <ZipCode>TX 75439</ZipCode>\n                <City>Ector</City>\n            </Customer>\n        </tns:GetCustomersResponse>\n    </soap:Body>\n</soap:Envelope>\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the Studio Pro release notes index page defining title, URL, description, weight and URL aliases\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Studio Pro\"\nurl: /releasenotes/studio-pro/\ndescription: \"Presents all of the available release notes for Mendix Studio Pro.\"\nweight: 5\naliases:\n    - /releasenotes/desktop-modeler/index.html\n    - /releasenotes/desktop-modeler/\n---\n```\n\n----------------------------------------\n\nTITLE: Running Mendix Docs Local Server with Hugo and Low Memory Option\nDESCRIPTION: Command to run a local server for the Mendix documentation site using Hugo with the renderToDisk option for systems with low memory limits.\nSOURCE: https://github.com/mendix/docs/blob/development/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nhugo server --environment development --renderToDisk\n```\n\n----------------------------------------\n\nTITLE: Creating Infinite Loop in Microflow Causing StackOverflowError\nDESCRIPTION: Example showing how to recreate a StackOverflowError by creating a microflow that calls itself, causing an infinite loop that crashes the application.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/runtime-java/runtime-java-errors.md#2025-04-21_snippet_0\n\nLANGUAGE: pseudocode\nCODE:\n```\nCreating a microflow called *Microflow* with a single microflow call action and selecting the microflow called *Microflow*\n```\n\n----------------------------------------\n\nTITLE: Debugging Options in Eclipse for Mendix Java Actions\nDESCRIPTION: Explains the different debugging navigation options in Eclipse, including Step Into, Step Over, Step Return, and Resume. These options help developers navigate through code execution and inspect variable states.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/java-programming/debug-java-actions/_index.md#2025-04-21_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic void debugExample() {\n    // F5 (Step Into)\n    // F6 (Step Over)\n    // F7 (Step Return)\n    // F8 (Resume)\n    int value = calculateValue();\n}\n```\n\n----------------------------------------\n\nTITLE: Executing ATS Test Run and Retrieving Results (Bash)\nDESCRIPTION: This bash script initiates an ATS test run, polls for its completion, and retrieves the final result. It uses curl for API calls and xmllint for parsing XML responses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/ht-two-ats-and-ci-cd.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Loop till status is Done\nwhile [ ${STATUS} != Done ]\ndo\n        echo \"Status Test Run is ${STATUS}\"\n        sleep 300\n        STATUS=$(curl -s -H 'Content-Type: text/xml' -d \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:men=\\\"http://www.mendix.com/\\\"><soapenv:Header><men:authentication><username>$USERNAME</username><password>$PASSWORD</password></men:authentication></soapenv:Header><soapenv:Body><men:GetTestRun><TestRun><AppAPIToken>$APPAPITOKEN</AppAPIToken><JobID>$JOBID</JobID><AppID>$APPID</AppID></TestRun></men:GetTestRun></soapenv:Body></soapenv:Envelope>\" ${URL2}/ws/GetJobStatus -X POST |xmllint --xpath \"string(//ExecutionStatus)\" -)\ndone\n\nRESULT=$(curl -s -H 'Content-Type: text/xml' -d \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\" xmlns:men=\\\"http://www.mendix.com/\\\"><soapenv:Header><men:authentication><username>$USERNAME</username><password>$PASSWORD</password></men:authentication></soapenv:Header><soapenv:Body><men:GetTestRun><TestRun><AppAPIToken>$APPAPITOKEN</AppAPIToken><JobID>$JOBID</JobID><AppID>$APPID</AppID></TestRun></men:GetTestRun></soapenv:Body></soapenv:Envelope>\" ${URL2}/ws/GetJobStatus -X POST |xmllint --xpath \"string(//ExecutionResult)\" -)\n\n# Write Result to file that you can inject as variable for your email\necho EMAILTEXT=\"Test Run Status is ${RESULT}\" >> email.txt\n```\n\n----------------------------------------\n\nTITLE: Storage Plan Warning Alert\nDESCRIPTION: Markdown alert block explaining the terminology around storage plans and blob file storage buckets used in the documentation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-storage-plans.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}} \nIn this document, *storage plan* means a general database or blob file bucket - an external server that can store data (entities in a database, or contents of `System.FileDocument` entities in a blob storage bucket). To be as specific as possible, this document refers to file storage buckets as *blob file storage buckets*, and to their associated storage plans as *blob file storage plans*. To save screen space, the `mxpc-cli` Configuration Tool calls them *Storage Plans*.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Updating Menu Properties Dynamically in Mendix Studio Pro\nDESCRIPTION: This code shows how to dynamically update a menu's properties after it has been created. When the menu is clicked, it updates the caption by adding '(Disabled)' and disables the menu item. The example demonstrates how to use the update method of the menu API.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/web/web-extensions-howtos/menu-api.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IComponent, Menu, studioPro } from \"@mendix/extensions-api\";\n\nconst menuApi = studioPro.ui.extensionsMenu;\n\nconst menuId = \"my-menu-unique-id\";\nconst caption = \"My First Menu\";\n\nmenuApi.addEventListener(\"menuItemActivated\", (args) => {\n  if (args.menuId !== menuId) return;\n  menuApi.update(menuId, {\n    caption: `${caption} (Disabled)`,\n    enabled: false,\n  });\n});\nclass Main implements IComponent {\n  async loaded() {\n    const menu: Menu = {\n      caption: caption,\n      menuId: menuId,\n      subMenus: [],\n      hasSeparatorBefore: false,\n      hasSeparatorAfter: true,\n      enabled: true,\n    };\n\n    await menuApi.add(menu);\n  }\n}\n\nexport const component: IComponent = new Main();\n```\n\n----------------------------------------\n\nTITLE: Version Compatibility Table Structure\nDESCRIPTION: Markdown table showing compatibility between Mendix versions and SCIM/UserCommons module versions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/scim.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Mendix Version | SCIM Module Version | UserCommons Version | SCIM Information|\n| --- | --- | --- | --- |\n| 10.12.10 and above | 2.0.0 | 2.0.0 | SCIM module is ready for the React client. |\n| 9.24.2 and above | 1.0.2 | 1.0.2 | – |\n```\n\n----------------------------------------\n\nTITLE: Updated Data Grid HTML Structure\nDESCRIPTION: New DOM structure for data grids in Mendix 8 showing merged table structure and improved accessibility markup\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/general/moving-from-7-to-8/migration-dom-issues.md#2025-04-21_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-grid mx-datagrid mx-name-grid1\">\n\t<div class=\"mx-grid-searchbar\" style=\"display: none;\">...</div>\n\t<div class=\"mx-grid-controlbar\">\n\t\t...\n\t\t<div ... role=\"navigation\" aria-label=\"Pagination(translatable text)\">\n\t\t\t<button ...  aria-label=\"Go to first page(translatable text)\"> </button>\n\t\t\t<button ... aria-label=\"Go to previous page(translatable text)\"></button>\n\t\t\t<div ... aria-hidden=\"true\">1 to 20 of 132</div> \n\t\t\t\t<span class=\"sr-only\">Currently showing(translatable text) 1 to 20 of 132</span>\n\t\t\t<button ... aria-label=\"Go to next page(translatable text)\"></button>\n\t\t\t<button ... aria-label=\"Go to last page(translatable text)\"></button>\n\t\t</div>\n\t\t...\n\t</div>\n\t<div class=\"mx-grid-content\">\n\t\t<table>\n\t\t\t<caption class=\"sr-only\">Caption</caption>\n\t\t\t<colgroup>...</colgroup>\n\t\t\t<thead>\n\t\t\t\t<tr class=\"mx-name-head-row\"></tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr class=\"mx-name-index-0\" >...</tr>\n\t\t\t</tbody>\n\t\t\t<tfoot></tfoot>\n\t\t</table>\n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Text Color Classes in Mendix\nDESCRIPTION: CSS classes that can be added to elements to change text color according to theme colors or standard color options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/front-end/styles.md#2025-04-21_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\ntext-default\ntext-primary\ntext-info\ntext-success\ntext-warning\ntext-danger\ntext-white\ntext-black\ntext-gray-primary\ntext-gray\ntext-gray-dark\ntext-gray-darker\ntext-gray-light\ntext-gray-lighter\n```\n\n----------------------------------------\n\nTITLE: Markdown YAML Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the documentation page, specifying title, URL, and weight parameters.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/rg-ats/v1/test-dev/rg-one-object-types-in-the-ats.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Object Types in ATS\"\nurl: /appstore/partner-solutions/ats/rg-one-object-types-in-the-ats/\nweight: 1\n---\n```\n\n----------------------------------------\n\nTITLE: Priority Matrix Documentation in Markdown\nDESCRIPTION: Markdown tables defining impact and urgency levels for support request prioritization. Documents how request priorities are determined based on business impact and operational disruption levels.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/support/submit-support-request.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Impact  | Description |\n| ------- | ------- |\n| High    | A high-priority production issue with a high impact on the customer's business, impacting (almost) all users. |\n| Medium  | A production issue with intermediate impact on the customer's business, impacting a group of users. |\n| Low     | A trivial production issue with no impact on the customer's business. |\n\n| Urgency | Description |\n| ------- | ------- |\n| High    | The operational functionality is severely disrupted. |\n| Medium  | The operational functionality is fairly disrupted. |\n| Low     | The operational functionality is hardly disrupted. |\n```\n\n----------------------------------------\n\nTITLE: Validating String Input for Text-To-Speech in JavaScript\nDESCRIPTION: This snippet is used to validate the input parameters for a Text-To-Speech function. It checks if the text parameter is defined and not empty, which helps in ensuring robust JavaScript actions. No additional dependencies are required, and the input must be a non-empty string. If the conditions are not met, it throws an error.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/best-practices-javascript-actions.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nasync function TextToSpeech(text) {\n    if (text === undefined) {\n        throw new Error(\"The Text parameter is required\");\n    }\n    if (text.trim() === \"\") {\n        throw new Error(\"The Text parameter can not be empty\");\n    }\n    /* implementation */\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Widgets Property in XML for Mendix Pluggable Widgets\nDESCRIPTION: Example of defining a widgets property that allows users to place multiple widgets inside a pluggable widget. Shows basic property definition without dataSource attribute.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-8/property-types-pluggable-widgets-8.md#2025-04-21_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<property key=\"content\" type=\"widgets\" required=\"false\">\n\t<caption>Content</caption>\n\t<description>Content of a box</description>\n</property>\n```\n\n----------------------------------------\n\nTITLE: Including Design Properties Section Link\nDESCRIPTION: This snippet includes the design properties section for the navigation list widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/container-widgets/navigation-list.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/design-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Disabling Linkerd Injection for NGINX Ingress Namespace\nDESCRIPTION: This bash command labels the NGINX Ingress Controller namespace to disable Linkerd injection, which is part of the process for installing Linkerd alongside NGINX Ingress.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/networking/private-cloud-advanced-ingress-settings.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace ingress-nginx linkerd.io/inject=disabled\n```\n\n----------------------------------------\n\nTITLE: Unsubscribe from Incoming Email using UnsubscribeFromIncomingEmail Java Action\nDESCRIPTION: Java action to unsubscribe from incoming emails for a specific email account. Takes email account as parameter.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/email-connector.md#2025-04-21_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nUnsubscribeFromIncomingEmail(\n  EmailAccount emailAccount\n)\n```\n\n----------------------------------------\n\nTITLE: Markdown Info Alert for Testing\nDESCRIPTION: Alert block about environment settings for testing\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/support/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% alert color=\"info\" %}}\nMendix cannot change any standard settings for your environments to support your testing. For example, you cannot ask to have the Web Application Firewall (WAF) turned off during your testing.\n{{% /alert %}}\n```\n\n----------------------------------------\n\nTITLE: Common Section Properties for Page Title Widget\nDESCRIPTION: This snippet provides a reference link to the common section properties related to the Page Title widget in the Mendix documentation. It serves as an important guide for developers to understand the shared properties applicable across various widgets.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/pages/text-widgets/page-title.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide9/common-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: YAML Metadata Configuration for Release Notes\nDESCRIPTION: Defines metadata configuration for the Mendix Studio Pro version 10 release notes document, including title, URL, and display settings\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/10/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: \"Mendix Studio Pro Version 10 Release Notes\"\nlinktitle: \"10\"\nurl: /releasenotes/studio-pro/10/\ndescription: \"The release notes for version 10 of Mendix Studio Pro.\"\nweight: 9\nno_list: false\nsimple_list: true\ncascade:\n    - numberless_headings: true\n```\n\n----------------------------------------\n\nTITLE: Project Initialization Commands\nDESCRIPTION: Bash commands to create a new project directory and initialize npm\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/mxsdk/sdk-howtos/sdk-old-versions-howtos/old-setting-up-your-development-environment.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir my-app-generator\n$ cd my-app-generator\n$ npm init --yes\n```\n\n----------------------------------------\n\nTITLE: Configuring and Pushing Tekton Images to Private Registry\nDESCRIPTION: Commands to set up the destination registry, list required repositories, and push Tekton images to the air-gapped environment's private registry.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-tekton/private-cloud-tekton-airgap.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naip set-base-destination myprivate.registry.com\n\ncat state.json | jq '.images[].destination'\n\naip login -u user -p mypassword myprivate.registry.com\naip push\n\ncd ..\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple X Axes in Mendix Charts\nDESCRIPTION: JSON configuration for charts with multiple X axes to display different scales.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/pages/chart-widgets/charts-advanced-cheat-sheet.md#2025-04-21_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"name\": \"xaxis data\",\n    \"xaxis\": \"x\",\n    \"type\": \"scatter\"\n  },\n  {\n    \"name\": \"xaxis2 data\",\n    \"xaxis\": \"x2\",\n    \"type\": \"scatter\"\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Trimming Date to Seconds in Java\nDESCRIPTION: This snippet demonstrates the use of the trimToSeconds function to round off a date to seconds, removing milliseconds.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/trim-to-date.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ntrimToSeconds($myDate)\n```\n\n----------------------------------------\n\nTITLE: Example REST GET Request\nDESCRIPTION: Sample GET request demonstrating the URL structure for accessing a pet resource in a REST API. This example is used to illustrate the routing flow and processing logic.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/integration/rest-services/published-rest-services/published-rest-technical-details/published-rest-routing.md#2025-04-21_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET /rest/petstore/pet/12\n```\n\n----------------------------------------\n\nTITLE: Starting an Environment - Mendix API - Bash\nDESCRIPTION: This example presents how to start a specific environment for an application using a POST request to Mendix API. It includes a parameter to define auto synchronization of the database.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/deployment/deploy-api-1.md#2025-04-21_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nHTTP Method: POST\nURL: https://deploy.mendix.com/api/1/apps/<AppId>/environments/<Mode>/start\n\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables for Browser Compatibility\nDESCRIPTION: Browser compatibility tables showing supported versions for Firefox, Chrome, and Internet Explorer across different ATS versions.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ov/ov-compatibility.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| ATS version | Supported Browser Version | Notes |\n| --- | --- | --- |\n| 1.5 - 1.8 | 44, 45, 38 ESR, 45 ESR |  |\n| 2.x | 68 |  |\n\n| ATS version | Supported Browser Version | Notes |\n| --- | --- | --- |\n| 1.5, 1.6 | 46-50 |  |\n| 1.7, 1.8 | 51-53 |   |\n| 2.x | 75 |  |\n\n| ATS version | Supported Browser Version | Notes |\n| ----------- | ------------------------- | ----- |\n| 2.x         | 11.x                      |       |\n```\n\n----------------------------------------\n\nTITLE: Service Access Error When Running PowerShell Without Admin Privileges\nDESCRIPTION: Error message shown when attempting to run Mendix PowerShell commands without administrator privileges, preventing access to the app service.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/on-premises-design/ms-windows/automate-mendix-deployment-on-microsoft-windows.md#2025-04-21_snippet_14\n\nLANGUAGE: text\nCODE:\n```\nStart-MxApp : Cannot open App1 service on computer '.'.\nAt line:1 char:1\n+ Start-MxApp App1 -synchronizedatabase\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidOperation: (App1:String) [Start-MxApp], InvalidOperationException\n    + FullyQualifiedErrorId : AppProcessError,Mendix.Service.Commands.StartAppCommand\n```\n\n----------------------------------------\n\nTITLE: Retrieving Object for Deletion in Mendix\nDESCRIPTION: SQL query to retrieve the object from the database before deletion. This step allows for running business logic, rules, and events before the actual deletion of data.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/runtime/communication-patterns.md#2025-04-21_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\n SELECT \"myfirstmodule$employee\".\"id\",\n \"myfirstmodule$employee\".\"firstname\",\n \"myfirstmodule$employee\".\"dateofbirth\",\n \"myfirstmodule$employee\".\"jobtitle\",\n \"myfirstmodule$employee\".\"department\",\n \"myfirstmodule$employee\".\"lastname\"\n FROM \"myfirstmodule$employee\"\n WHERE \"myfirstmodule$employee\".\"id\" = (281474976710857)\n```\n\n----------------------------------------\n\nTITLE: Calculating Weeks Between Dates in Java\nDESCRIPTION: Example of using weeksBetween function to calculate the difference between two dates in weeks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/between-date-function-calls.md#2025-04-21_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nweeksBetween(dateTime(2007, 1, 9, 1, 1, 1), dateTime(2007,1,1,1,1,1))\n```\n\n----------------------------------------\n\nTITLE: Initializing YAML Frontmatter for Mendix Marketplace Documentation\nDESCRIPTION: YAML frontmatter configuration for the Mendix Marketplace content creation documentation page. Defines metadata including title, URL, description, weight, and list display options.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/create-content/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Create Marketplace Content\"\nurl: /appstore/creating-content/\ndescription: \"Present details on creating content for the Mendix Marketplace.\"\nweight: 2\nno_list: false\ndescription_list: true\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Task Queue Settings in Mendix\nDESCRIPTION: Configuration options for Task Queue including shutdown grace period and processed tasks cleanup parameters. These can be set as custom runtime settings in Studio Pro.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/resources/task-queue.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration option                       | Example value | Explanation                                                                             |\n|--------------------------------------------|---------------|-----------------------------------------------------------------------------------------|\n| `TaskQueue.ShutdownGracePeriod`            |          10000| Time in ms to wait for task to finish when shutting down.                               |\n| `com.mendix.core.ProcessedTasksCleanupAge` |       86400000| Time in ms after which `ProcessedQueueTask` are deleted automatically (no tasks are automatically deleted if this setting is not specified). <br />*This setting was introduced in Mendix 9.9.0* |\n| `com.mendix.core.ProcessedTasksCleanupBatchSize` |       10000| Specifies how many System.<wbr>ProcessedQueueTask objects will be removed from the database each time the ProcessedTask cleanup action runs. <br />*This setting was introduced in Mendix 9.24.17* |\n```\n\n----------------------------------------\n\nTITLE: Calculating Average of Distinct Stock Values\nDESCRIPTION: Demonstrates using AVG with DISTINCT to calculate the average of unique stock values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/domain-model/oql/oql-expressions.md#2025-04-21_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nSELECT AVG(Distinct Stock) AS DistinctStockAverage FROM Sales.Product\n```\n\n----------------------------------------\n\nTITLE: XML Export Configuration Activities\nDESCRIPTION: Key Mendix activities used in the XML export microflow, including retrieve, create object, export with mapping, and download file\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/integration/export-xml-documents.md#2025-04-21_snippet_1\n\nLANGUAGE: Mendix Activities\nCODE:\n```\nActivities used:\n- Retrieve (From database)\n- Create Object (XMLDocument)\n- Export with mapping\n- Download file\n```\n\n----------------------------------------\n\nTITLE: Grouping Conditions with Priorities in Mendix\nDESCRIPTION: Shows how to group constraints to prioritize certain conditions in customer data retrieval. This example retrieves customers named 'Jansen' or 'Smit' located in Rotterdam by grouping with parentheses.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/xpath/xpath-constraints/_index.md#2025-04-21_snippet_5\n\nLANGUAGE: StudioPro\nCODE:\n```\n[( Name = 'Jansen' or Name = 'Smit' ) and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\nLANGUAGE: JavaQuery\nCODE:\n```\n//Sales.Customer[( Name = 'Jansen' or Name = 'Smit' ) and Sales.Customer_Address/Sales.Address/City = 'Rotterdam']\n```\n\n----------------------------------------\n\nTITLE: UI Navigation Function Call\nDESCRIPTION: Reference to the mx.ui.back() function which had functionality issues.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/studio-pro/9/9.17.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nmx.ui.back()\n```\n\n----------------------------------------\n\nTITLE: Rendering Accessible TextInput in React\nDESCRIPTION: This snippet modifies the render function of a TextBox component in React to include accessibility features like ID and aria attributes, which assist screen readers. Dependencies include React libraries and Mendix validation feedback. It accepts props such as id, value, tabIndex, and others, and renders a TextInput and Alert component with error messaging.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto9/extensibility/pluggable-widgets/create-a-pluggable-widget-two.md#2025-04-21_snippet_11\n\nLANGUAGE: tsx\nCODE:\n```\nrender(): ReactNode {\n    const value = this.props.textAttribute.value || \"\";\n    const validationFeedback = this.props.textAttribute.validation;\n    const required = !!(this.props.requiredMessage && this.props.requiredMessage.value);\n\n    return <Fragment>\n        <TextInput\n            id={this.props.id}\n            value={value}\n            tabIndex={this.props.tabIndex}\n            disabled={this.isReadOnly()}\n            onLeave={this.onLeaveHandle}\n            required={required}\n            hasError={!!validationFeedback}\n        />\n        <Alert id={this.props.id + \"-error\"}>{validationFeedback}</Alert>\n    </Fragment>;\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Integer from String in Java\nDESCRIPTION: Demonstrates the use of parseInteger function to convert a string to an integer. The function takes a string as input and returns an Integer/Long value. An optional default value can be provided to handle parsing errors.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/expressions/parse-integer.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nparseInteger('42')\n```\n\nLANGUAGE: java\nCODE:\n```\n42\n```\n\nLANGUAGE: java\nCODE:\n```\nparseInteger('not_an_integer', 42)\n```\n\nLANGUAGE: java\nCODE:\n```\n42\n```\n\n----------------------------------------\n\nTITLE: Show Message Properties in Mendix\nDESCRIPTION: This code snippet illustrates the properties pane for the Show Message activity in Mendix, including the Action and Common sections.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/show-message.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< figure src=\"/attachments/refguide9/modeling/application-logic/microflows-and-nanoflows/activities/client-activities/show-message/show-message-properties.png\" alt=\"Show Message Properties\" class=\"no-border\" >}}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for ATS 2 Documentation Page\nDESCRIPTION: YAML frontmatter block defining metadata for an ATS 2 documentation page, including title, URL path, weight for sorting, and display settings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/partner-solutions/ats/ht/v2/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"ATS 2 How-tos\"\nurl: /appstore/partner-solutions/ats/ht-two/\nweight: 10\nno_list: false\ndescription_list: true\n---\n```\n\n----------------------------------------\n\nTITLE: Upgrading Mendix Operator and Gateway Agent\nDESCRIPTION: This command upgrades the versions of Mendix components in a namespace. It requires specifying the cluster type and namespace.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/deployment/private-cloud/private-cloud-cluster/private-cloud-cli-non-interactive.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n./mxpc-cli upgrade-namespace --clusterType <cluster-type> --namespace <namespace>\n```\n\n----------------------------------------\n\nTITLE: Importing Sass Files\nDESCRIPTION: This snippet demonstrates how to import custom Sass files and variables in a main Sass file. It allows replacing placeholders with available styles from custom sub-folders.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/front-end/customize-styling/use-gulp-and-sass/sass-eight.md#2025-04-21_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\n@import \"custom-variables\";\n// base\n@import \"base/login\";\n```\n\n----------------------------------------\n\nTITLE: Empty Object Attribute Comparison Expression\nDESCRIPTION: Example of incorrect expression evaluation when comparing empty object attributes, which always returns false due to invalid access.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/_index.md#2025-04-21_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n$emptyObject/attribute != $validObject/attribute or $emptyObject = empty\n```\n\n----------------------------------------\n\nTITLE: Literal Helper Usage Examples\nDESCRIPTION: Examples of using the literal helper with different data types for filtering.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-parent-9/pluggable-widgets-client-apis-9/pluggable-widgets-client-apis-list-values-9.md#2025-04-21_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\nconst falsy = literal(false); // for Boolean\nconst bob = literal(\"Bob\"); // for String, HashString, Enumeration\nconst meaningOfLife = literal(new BigJS(42)); // for AutoNumber, Integer, Long, Decimal\nconst now = literal(new Date()); // for DateTime\nconst undef = literal(undefined);\n```\n\n----------------------------------------\n\nTITLE: Getting All Security Groups API Endpoint\nDESCRIPTION: HTTP endpoint for retrieving all security groups in a company. The endpoint supports pagination and filtering by name.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_12\n\nLANGUAGE: http\nCODE:\n```\nHTTP Method: GET\nURL: https://usermanagement.mendix.com/legacy-api/1/groups\n```\n\n----------------------------------------\n\nTITLE: Less Than Comparison in Mendix\nDESCRIPTION: This snippet demonstrates the less than relational expression in Mendix, which compares two numeric values and returns a Boolean value indicating whether the first value is less than the second value.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n```java\n4<3\n```\n```\n\nLANGUAGE: Java\nCODE:\n```\n```java\nFalse\n```\n```\n\n----------------------------------------\n\nTITLE: Original Default Style Definition for React Native Widget\nDESCRIPTION: Initial basic styling for the widget, containing just a container object and a label with a specific color. This is the starting point before implementing the GroupBox-specific styling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto/extensibility/build-native-widget.md#2025-04-21_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nconst defaultStyle: CustomStyle = {\n    container: {},\n    label: {\n        color: \"#F6BB42\"\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Incorrect CSS Font Weight Styling\nDESCRIPTION: This CSS snippet illustrates an incorrect way to define font weight in Mendix native mobile apps. Using numeric font weights such as 550 may not be reliably rendered on Android, as it only supports a limited set of font weights (regular, bold, italic, and bold italic).  This example helps to demonstrate why using postscript names are preferrable.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n{ \n    fontWeight: 550\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Font Styling Example\nDESCRIPTION: This CSS snippet demonstrates an incorrect way to style fonts in React Native for Mendix native mobile apps. Instead of defining separate font families for each weight and style, it attempts to use a single `fontFamily` with different `fontWeight` values. This approach can lead to inconsistent rendering across different platforms, particularly on Android.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/mobile/designing-mobile-user-interfaces/images-icons-and-fonts.md#2025-04-21_snippet_5\n\nLANGUAGE: css\nCODE:\n```\nexport const bold = {\n    fontFamily: \"Times New Roman\",\n    fontWeight: \"bold\" | \"500\"\n}\n```\n\n----------------------------------------\n\nTITLE: Granting Usage Permissions\nDESCRIPTION: SQL commands to grant necessary usage permissions on warehouse, database, schema and table to test roles\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/snowflake/rbac/key-pair.md#2025-04-21_snippet_6\n\nLANGUAGE: SQL\nCODE:\n```\nGRANT USAGE ON WAREHOUSE COMPUTE_WH to role ROLETESTA;\nGRANT USAGE ON WAREHOUSE COMPUTE_WH to role ROLETESTB;\nGRANT USAGE ON DATABASE EXAMPLE_RBAC to role ROLETESTA;\nGRANT USAGE ON DATABASE EXAMPLE_RBAC to role ROLETESTB;\nGRANT USAGE ON SCHEMA EXAMPLE_RBAC.RBAC_SCHEMA to role ROLETESTA;\nGRANT USAGE ON SCHEMA EXAMPLE_RBAC.RBAC_SCHEMA to role ROLETESTB;\nGRANT SELECT ON TABLE EXAMPLE_RBAC.RBAC_SCHEMA.EXAMPLE_RBAC to role ROLETESTA;\nGRANT SELECT ON table EXAMPLE_RBAC.RBAC_SCHEMA.EXAMPLE_RBAC to role ROLETESTB;\n```\n\n----------------------------------------\n\nTITLE: String Inequality Comparison in Java\nDESCRIPTION: Demonstrates a string inequality comparison in Java that returns a Boolean false when comparing two identical strings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/application-logic/expressions/relational-expressions.md#2025-04-21_snippet_14\n\nLANGUAGE: java\nCODE:\n```\n\"mystring\" != \"mystring\"\n```\n\n----------------------------------------\n\nTITLE: OpenID Response in JSON\nDESCRIPTION: JSON response containing the OpenID for a requested user account. Returns HTTP status 200 on success.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/governance/user-management-api.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"openId\": \"https://mxid2.mendixcloud.com/mxid2/id?id=bdddd12c-cc93-4600-82e4-88baa5314y79\"\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying Available mx Commands\nDESCRIPTION: This command is used to display a list of available commands for the mx tool. Executing this command provides users with an overview of the functionalities offered by the tool.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/general/mx-command-line-tool/_index.md#2025-04-21_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n\"mx --help\"\n```\n\n----------------------------------------\n\nTITLE: ImageValue Interface Definition in TypeScript\nDESCRIPTION: Defines the ImageValue interface for representing static or dynamic images in Mendix plugins, with specific types for web and native implementations.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-client-apis/_index.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface WebImage {\n    readonly uri: string;\n    readonly name: string;\n    readonly altText?: string;\n}\nexport type NativeImage = Readonly<ImageURISource & { name?: string; } | string | number>;\nexport type ImageValue = WebImage | NativeImage;\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Services Resource Files in XML\nDESCRIPTION: XML configuration for including Google Services JSON and build extras files in the hybrid app build process. This snippet shows the correct resource file paths needed in the config.xml file.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/hybrid-app.md#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<resource-file src=\"config/google-services.json\" target=\"app/google-services.json\" />\n<resource-file src=\"config/build-extras.gradle\" target=\"build-extras.gradle\" />\n```\n\n----------------------------------------\n\nTITLE: Creating String Templates for REST Location\nDESCRIPTION: Shows how to format string templates for REST API endpoints where parameters are written between braces and can be replaced with dynamic values.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/application-logic/activities/integration-activities/call-rest-action.md#2025-04-21_snippet_0\n\nLANGUAGE: microflow\nCODE:\n```\n{1} - First parameter position\n{2} - Second parameter position\n{{ - Escaped opening brace\n```\n\n----------------------------------------\n\nTITLE: Documenting CustomWidget Element Changes in Mendix SDK Metamodel 8.1\nDESCRIPTION: Lists new properties introduced for the CustomWidget element in Mendix SDK Metamodel 8.1.0. These properties include labelTemplate, conditionalEditabilitySettings, editable, and conditionalVisibilitySettings.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/sdk/metamodel/metamodel-8/metamodel-8.1.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `labelTemplate`\n* `conditionalEditabilitySettings`\n* `editable`\n* `conditionalVisibilitySettings`\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Success Button\nDESCRIPTION: This snippet shows the creation of an outlined Bootstrap success button, utilizing the same parameter setup for linking and labeling.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/indentation-spacing-test.md#2025-04-21_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n{{% button color=\"outline-success\" href=\"https://getbootstrap.com/docs/4.6/components/buttons/\" text=\"Success\" title=\"What do you think of this button?\" %}}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Definition for Widgets Property\nDESCRIPTION: Type definition for the Widgets property, which includes widget count and a renderer component for child widgets in the preview.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/frontend/pluggable-widgets/pluggable-widgets-studio-apis.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype WidgetsProperty = {\n    widgetCount: number;\n    renderer: React.ComponentType<{caption?: string}>;\n}\n```\n\n----------------------------------------\n\nTITLE: Including On Leave Event for Radio Buttons\nDESCRIPTION: This snippet includes the on-leave event action for the radio buttons widget, detailing behavior when leaving the widget.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide8/modeling/pages/input-widgets/radio-buttons.md#2025-04-21_snippet_10\n\nLANGUAGE: md\nCODE:\n```\n{{% snippet file=\"/static/_includes/refguide8/events-section-link.md\" %}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Extension Manifest in JSON\nDESCRIPTION: A minimal JSON manifest file that defines the extension DLL to be loaded by Mendix Studio Pro. This file must be named 'manifest.json' and copied to the output directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/apidocs-mxsdk/apidocs/studio-pro/extensibility-api/csharp/extensibility-api-howtos/create-menu-extension.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{ \"mx_extensions\": [ \"<name_of_your_project>.dll\" ] }\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Framework Version Upgrades\nDESCRIPTION: Table showing version upgrades for PhoneGap CLI, Cordova Android, and Cordova iOS frameworks.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/releasenotes/mobile/hybrid-app.md#2025-04-21_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name            | Old Version | New Version |\n| --------------- | ----------- | ----------- |\n| PhoneGap CLI    | 7.1.0       | 8.1.1       |\n| Cordova Android | 6.3.0       | 7.1.2       |\n| Cordova iOS     | 4.5.4       | 4.5.5       |\n```\n\n----------------------------------------\n\nTITLE: Document Generation Error Table - Markdown\nDESCRIPTION: Markdown table detailing various error scenarios, error messages, and suggested solutions for app environment registration issues in the Document Generation module.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/appstore/use-content/platform-supported-content/modules/document-generation.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Error | Error message | Description | Suggestion |\n|-------|------------------|-------------|------------|\n| **Invalid Developer Credentials** | \"Invalid developer credentials\" | The developer information as provided in the **Email** and **API key** fields is incorrect. | Verify that the provided email address in the **Email** field matches the username in your Mendix developer profile, and also that the API key that is being used is correct and still active. |\n| **Invalid App** | <ul><li>\"Invalid app\"</li></ul><ul><li>\"App not found for the given user\"</li></ul> | The provided App ID is either incorrect or the developer (based on the **Email** and **API key** fields) does not have access to this app. | Verify that the **App ID** field is correct, and also that the developer account corresponding to the details entered in the **Email** and **API key** fields has access to the given app. |\n```\n\n----------------------------------------\n\nTITLE: Closing XML Element Tags in Excel\nDESCRIPTION: Excel formula to add closing XML element tags for XSD schema creation.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide/modeling/integration/use-excel-documents/import-a-large-excel-file.md#2025-04-21_snippet_1\n\nLANGUAGE: excel\nCODE:\n```\n\"/>\n```\n\n----------------------------------------\n\nTITLE: Adding a Dependency to Native Template (v4.0.0+)\nDESCRIPTION: Adds a new dependency to the root package.json of your Native Template. It utilizes npm to install the dependency and then installs the packages using either npm install or npm install --legacy-peer-deps.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/howto8/mobile/native-mobile/build-native-apps/native-build-locally.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -s <dependency name>\n```\n\n----------------------------------------\n\nTITLE: Defining Android Splash Screens Interface in JSON\nDESCRIPTION: TypeScript interface definition for Android splash screen configuration. This schema defines the structure required for the android.json file under splashScreens directory.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/mobile/distributing-mobile-apps/building-native-apps/native-template.md#2025-04-21_snippet_8\n\nLANGUAGE: json\nCODE:\n```\ninterface AndroidSplashScreensConfig{\n  \"images\": Array<{\n          \"filename\": \"splash.png\";\n          \"directory\": \"drawable-hdpi\" | \"drawable-xhdpi\" | \"drawable-xxhdpi\",\n          \"title\": string;\n      }>,\n  \"version\": 1\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Current Runtime Executions in Mendix\nDESCRIPTION: This JSON request retrieves information about all current executions in the Mendix Runtime. The request must be sent to the admin port as a POST request with proper authentication headers.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/runtime/monitoring-mendix-runtime.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\"action\" : \"get_current_runtime_requests\", \"params\":{} }\n```\n\n----------------------------------------\n\nTITLE: HTML Collapsible Content (Details) Example\nDESCRIPTION: This HTML snippet uses the `<details>` and `<summary>` tags to create collapsible content. The summary tag provides the title that users can click to expand and collapse the content within the details tag. In this case, a list of reserved words is hidden until the user clicks the summary.\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/community-tools/contribute-to-mendix-docs/markdown-shortcodes.md#2025-04-21_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<details><summary>It cannot be a reserved word (click to see a list of reserved words)</summary>\n\n* `abstract`\n* `assert`\n* `boolean`\n* `break`\n* `byte`\n* `case`\n* `catch`\n* `changedby`\n* `changeddate`\n* `char`\n* `class`\n* `con`\n* `const`\n* `context`\n* `continue`\n* `createddate`\n* `currentUser`\n* `default`\n* `do`\n* `double`\n* `else`\n* `empty`\n* `enum`\n* `extends`\n* `false`\n* `final`\n* `finally`\n* `float`\n* `for`\n* `goto`\n* `guid`\n* `id`\n* `if`\n* `implements`\n* `import`\n* `instanceof`\n* `int`\n* `interface`\n* `long`\n* `MendixObject`\n* `native`\n* `new`\n* `null`\n* `object`\n* `owner`\n* `package`\n* `private`\n* `protected`\n* `public`\n* `return`\n* `short`\n* `static`\n* `strictfp`\n* `submetaobjectname`\n* `super`\n* `switch`\n* `synchronized`\n* `this`\n* `throw`\n* `throws`\n* `transient`\n* `true`\n* `try`\n* `type`\n* `void`\n* `volatile`\n* `while`\n\n</details>\n```\n\n----------------------------------------\n\nTITLE: Data Set Access Value Definitions\nDESCRIPTION: Table defining the different access levels for datasets and their corresponding descriptions\nSOURCE: https://github.com/mendix/docs/blob/development/content/en/docs/refguide9/modeling/app-explorer/security/module-security.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Value | Description |\n| --- | --- |\n| Full access | No constraint applies to the parameters for the data set and all possible range parameters are allowed. |\n| Limited access | At least one constraint applies to the parameters for the data set or at least one range parameter is not allowed. |\n| No access | Users with this module role have no access to the data set. |\n```"
  }
]
[
  {
    "owner": "supertokens",
    "repo": "supertokens-core",
    "content": "TITLE: Creating Core Tables for SuperTokens in MySQL\nDESCRIPTION: This snippet creates and alters core tables for SuperTokens, including 'apps', 'tenants', 'key_value', and 'app_id_to_user_id'. It sets up primary keys, foreign keys, and inserts initial data.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_36\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS apps  (\n  app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  created_at_time BIGINT UNSIGNED\n);\n\nALTER TABLE apps\n  ADD PRIMARY KEY(app_id);\n\nINSERT IGNORE INTO apps (app_id, created_at_time) \n  VALUES ('public', 0);\n\n--\n\nCREATE TABLE IF NOT EXISTS tenants (\n  app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  tenant_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  created_at_time BIGINT UNSIGNED\n);\n\nALTER TABLE tenants\n  ADD PRIMARY KEY(app_id, tenant_id);\n\nALTER TABLE tenants\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nINSERT IGNORE INTO tenants (app_id, tenant_id, created_at_time) \n  VALUES ('public', 'public', 0);\n\n--\n\nCALL st_add_column_if_not_exists('key_value', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('key_value', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE key_value\n  ADD PRIMARY KEY (app_id, tenant_id, name);\n\nALTER TABLE key_value\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n--\n\nCREATE TABLE IF NOT EXISTS app_id_to_user_id (\n  app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  user_id CHAR(36) NOT NULL,\n  recipe_id VARCHAR(128) NOT NULL\n);\n\nALTER TABLE app_id_to_user_id\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE app_id_to_user_id\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nINSERT IGNORE INTO app_id_to_user_id (user_id, recipe_id) \n  SELECT user_id, recipe_id\n  FROM all_auth_recipe_users;\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Migration Script for SuperTokens Core 5.0.0\nDESCRIPTION: This SQL script performs the necessary database schema changes for upgrading SuperTokens Core to version 5.0.0. It creates new tables for apps and tenants, modifies existing tables to support multi-tenancy, and updates constraints and indexes accordingly.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_20\n\nLANGUAGE: sql\nCODE:\n```\n-- General Tables\n\nCREATE TABLE IF NOT EXISTS apps  (\n  app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  created_at_time BIGINT,\n  CONSTRAINT apps_pkey PRIMARY KEY(app_id)\n);\n\nINSERT INTO apps (app_id, created_at_time) \n  VALUES ('public', 0) ON CONFLICT DO NOTHING;\n\n------------------------------------------------------------\n\nCREATE TABLE IF NOT EXISTS tenants (\n  app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  tenant_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  created_at_time BIGINT ,\n  CONSTRAINT tenants_pkey\n    PRIMARY KEY (app_id, tenant_id),\n  CONSTRAINT tenants_app_id_fkey FOREIGN KEY(app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE\n);\n\nINSERT INTO tenants (app_id, tenant_id, created_at_time) \n  VALUES ('public', 'public', 0) ON CONFLICT DO NOTHING;\n\nCREATE INDEX IF NOT EXISTS tenants_app_id_index ON tenants (app_id);\n\n------------------------------------------------------------\n\nALTER TABLE key_value\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n  ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE key_value\n  DROP CONSTRAINT key_value_pkey;\n\nALTER TABLE key_value\n  ADD CONSTRAINT key_value_pkey \n    PRIMARY KEY (app_id, tenant_id, name);\n\nALTER TABLE key_value\n  DROP CONSTRAINT IF EXISTS key_value_tenant_id_fkey;\n\nALTER TABLE key_value\n  ADD CONSTRAINT key_value_tenant_id_fkey \n    FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS key_value_tenant_id_index ON key_value (app_id, tenant_id);\n\n------------------------------------------------------------\n\nCREATE TABLE IF NOT EXISTS app_id_to_user_id (\n  app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n  user_id CHAR(36) NOT NULL,\n  recipe_id VARCHAR(128) NOT NULL,\n  CONSTRAINT app_id_to_user_id_pkey\n    PRIMARY KEY (app_id, user_id),\n  CONSTRAINT app_id_to_user_id_app_id_fkey\n    FOREIGN KEY(app_id) REFERENCES apps (app_id) ON DELETE CASCADE\n);\n\nINSERT INTO app_id_to_user_id (user_id, recipe_id) \n  SELECT user_id, recipe_id\n  FROM all_auth_recipe_users ON CONFLICT DO NOTHING;\n\nCREATE INDEX IF NOT EXISTS app_id_to_user_id_app_id_index ON app_id_to_user_id (app_id);\n\n------------------------------------------------------------\n\nALTER TABLE all_auth_recipe_users\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n  ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE all_auth_recipe_users\n  DROP CONSTRAINT all_auth_recipe_users_pkey CASCADE;\n\nALTER TABLE all_auth_recipe_users\n  ADD CONSTRAINT all_auth_recipe_users_pkey \n    PRIMARY KEY (app_id, tenant_id, user_id);\n\nALTER TABLE all_auth_recipe_users\n  DROP CONSTRAINT IF EXISTS all_auth_recipe_users_tenant_id_fkey;\n\nALTER TABLE all_auth_recipe_users\n  ADD CONSTRAINT all_auth_recipe_users_tenant_id_fkey \n    FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nALTER TABLE all_auth_recipe_users\n  DROP CONSTRAINT IF EXISTS all_auth_recipe_users_user_id_fkey;\n\nALTER TABLE all_auth_recipe_users\n  ADD CONSTRAINT all_auth_recipe_users_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nDROP INDEX all_auth_recipe_users_pagination_index;\n\nCREATE INDEX all_auth_recipe_users_pagination_index ON all_auth_recipe_users (time_joined DESC, user_id DESC, tenant_id DESC, app_id DESC);\n\nCREATE INDEX IF NOT EXISTS all_auth_recipe_user_id_index ON all_auth_recipe_users (app_id, user_id);\n\nCREATE INDEX IF NOT EXISTS all_auth_recipe_tenant_id_index ON all_auth_recipe_users (app_id, tenant_id);\n\n-- Multitenancy\n\nCREATE TABLE IF NOT EXISTS tenant_configs (\n  connection_uri_domain VARCHAR(256) DEFAULT '',\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  core_config TEXT,\n  email_password_enabled BOOLEAN,\n  passwordless_enabled BOOLEAN,\n  third_party_enabled BOOLEAN,\n  CONSTRAINT tenant_configs_pkey\n    PRIMARY KEY (connection_uri_domain, app_id, tenant_id)\n);\n\n------------------------------------------------------------\n\nCREATE TABLE IF NOT EXISTS tenant_thirdparty_providers (\n  connection_uri_domain VARCHAR(256) DEFAULT '',\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  third_party_id VARCHAR(28) NOT NULL,\n  name VARCHAR(64),\n  authorization_endpoint TEXT,\n  authorization_endpoint_query_params TEXT,\n  token_endpoint TEXT,\n  token_endpoint_body_params TEXT,\n  user_info_endpoint TEXT,\n  user_info_endpoint_query_params TEXT,\n  user_info_endpoint_headers TEXT,\n  jwks_uri TEXT,\n  oidc_discovery_endpoint TEXT,\n  require_email BOOLEAN,\n  user_info_map_from_id_token_payload_user_id VARCHAR(64),\n  user_info_map_from_id_token_payload_email VARCHAR(64),\n  user_info_map_from_id_token_payload_email_verified VARCHAR(64),\n  user_info_map_from_user_info_endpoint_user_id VARCHAR(64),\n  user_info_map_from_user_info_endpoint_email VARCHAR(64),\n  user_info_map_from_user_info_endpoint_email_verified VARCHAR(64),\n  CONSTRAINT tenant_thirdparty_providers_pkey\n    PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id),\n  CONSTRAINT tenant_thirdparty_providers_tenant_id_fkey\n    FOREIGN KEY(connection_uri_domain, app_id, tenant_id)\n    REFERENCES tenant_configs (connection_uri_domain, app_id, tenant_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS tenant_thirdparty_providers_tenant_id_index ON tenant_thirdparty_providers (connection_uri_domain, app_id, tenant_id);\n\n------------------------------------------------------------\n\nCREATE TABLE IF NOT EXISTS tenant_thirdparty_provider_clients (\n  connection_uri_domain VARCHAR(256) DEFAULT '',\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  third_party_id VARCHAR(28) NOT NULL,\n  client_type VARCHAR(64) NOT NULL DEFAULT '',\n  client_id VARCHAR(256) NOT NULL,\n  client_secret TEXT,\n  scope VARCHAR(128)[],\n  force_pkce BOOLEAN,\n  additional_config TEXT,\n  CONSTRAINT tenant_thirdparty_provider_clients_pkey\n    PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id, client_type),\n  CONSTRAINT tenant_thirdparty_provider_clients_third_party_id_fkey\n    FOREIGN KEY (connection_uri_domain, app_id, tenant_id, third_party_id)\n    REFERENCES tenant_thirdparty_providers (connection_uri_domain, app_id, tenant_id, third_party_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS tenant_thirdparty_provider_clients_third_party_id_index ON tenant_thirdparty_provider_clients (connection_uri_domain, app_id, tenant_id, third_party_id);\n\n-- Session\n\nALTER TABLE session_info\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n  ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE session_info\n  DROP CONSTRAINT session_info_pkey CASCADE;\n\nALTER TABLE session_info\n  ADD CONSTRAINT session_info_pkey \n    PRIMARY KEY (app_id, tenant_id, session_handle);\n\nALTER TABLE session_info\n  DROP CONSTRAINT IF EXISTS session_info_tenant_id_fkey;\n\nALTER TABLE session_info\n  ADD CONSTRAINT session_info_tenant_id_fkey \n    FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS session_expiry_index ON session_info (expires_at);\n\nCREATE INDEX IF NOT EXISTS session_info_tenant_id_index ON session_info (app_id, tenant_id);\n\n------------------------------------------------------------\n\nALTER TABLE session_access_token_signing_keys\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE session_access_token_signing_keys\n  DROP CONSTRAINT session_access_token_signing_keys_pkey CASCADE;\n\nALTER TABLE session_access_token_signing_keys\n  ADD CONSTRAINT session_access_token_signing_keys_pkey \n    PRIMARY KEY (app_id, created_at_time);\n\nALTER TABLE session_access_token_signing_keys\n  DROP CONSTRAINT IF EXISTS session_access_token_signing_keys_app_id_fkey;\n\nALTER TABLE session_access_token_signing_keys\n  ADD CONSTRAINT session_access_token_signing_keys_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS access_token_signing_keys_app_id_index ON session_access_token_signing_keys (app_id);\n\n-- JWT\n\nALTER TABLE jwt_signing_keys\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE jwt_signing_keys\n  DROP CONSTRAINT jwt_signing_keys_pkey CASCADE;\n\nALTER TABLE jwt_signing_keys\n  ADD CONSTRAINT jwt_signing_keys_pkey \n    PRIMARY KEY (app_id, key_id);\n\nALTER TABLE jwt_signing_keys\n  DROP CONSTRAINT IF EXISTS jwt_signing_keys_app_id_fkey;\n\nALTER TABLE jwt_signing_keys\n  ADD CONSTRAINT jwt_signing_keys_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS jwt_signing_keys_app_id_index ON jwt_signing_keys (app_id);\n\n-- EmailVerification\n\nALTER TABLE emailverification_verified_emails\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE emailverification_verified_emails\n```\n\n----------------------------------------\n\nTITLE: Executing MySQL Migration Script for SuperTokens 7.0.0 Upgrade\nDESCRIPTION: SQL migration script for MySQL to update the database schema for SuperTokens 7.0.0. The script adds columns for user linking functionality, updates existing records, establishes foreign key constraints, and creates new indexes for optimized queries.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_19\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE all_auth_recipe_users\n  ADD primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\nALTER TABLE all_auth_recipe_users\n  ADD is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\nALTER TABLE all_auth_recipe_users\n  ADD primary_or_recipe_user_time_joined BIGINT UNSIGNED NOT NULL DEFAULT 0;\n\nUPDATE all_auth_recipe_users\n  SET primary_or_recipe_user_id = user_id\n  WHERE primary_or_recipe_user_id = '0';\n\nUPDATE all_auth_recipe_users\n  SET primary_or_recipe_user_time_joined = time_joined\n  WHERE primary_or_recipe_user_time_joined = 0;\n\nALTER TABLE all_auth_recipe_users\n  ADD FOREIGN KEY (app_id, primary_or_recipe_user_id)\n  REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE all_auth_recipe_users\n  ALTER primary_or_recipe_user_id DROP DEFAULT;\n\nALTER TABLE app_id_to_user_id\n  ADD primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\nALTER TABLE app_id_to_user_id\n  ADD is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\nUPDATE app_id_to_user_id\n  SET primary_or_recipe_user_id = user_id\n  WHERE primary_or_recipe_user_id = '0';\n\nALTER TABLE app_id_to_user_id\n  ADD FOREIGN KEY (app_id, primary_or_recipe_user_id)\n  REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE app_id_to_user_id\n  ALTER primary_or_recipe_user_id DROP DEFAULT;\n\nDROP INDEX all_auth_recipe_users_pagination_index ON all_auth_recipe_users;\n\nCREATE INDEX all_auth_recipe_users_pagination_index1 ON all_auth_recipe_users (\n  app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_pagination_index2 ON all_auth_recipe_users (\n  app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_pagination_index3 ON all_auth_recipe_users (\n  recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_pagination_index4 ON all_auth_recipe_users (\n  recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_primary_user_id_index ON all_auth_recipe_users (primary_or_recipe_user_id, app_id);\n\nCREATE INDEX all_auth_recipe_users_recipe_id_index ON all_auth_recipe_users (app_id, recipe_id, tenant_id);\n\nALTER TABLE emailpassword_pswd_reset_tokens \n  DROP FOREIGN KEY emailpassword_pswd_reset_tokens_ibfk_1;\n\nALTER TABLE emailpassword_pswd_reset_tokens\n  ADD FOREIGN KEY (app_id, user_id) REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE emailpassword_pswd_reset_tokens ADD email VARCHAR(256);\n```\n\n----------------------------------------\n\nTITLE: Running SuperTokens Core Manually\nDESCRIPTION: Java command to start the SuperTokens Core server locally for development. Sets the classpath to include core, plugin-interface, and enterprise edition components.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\njava -classpath \"./core/*:./plugin-interface/*:./ee/*\" io.supertokens.Main ./ DEV\n```\n\n----------------------------------------\n\nTITLE: Defining Test Case Structure for Tenant Creation/Update in JavaScript\nDESCRIPTION: This snippet outlines the structure of a test case JSON object used for testing tenant creation and update operations across different CDI versions. It includes fields for tenant ID, CDI versions, request bodies, expected tenant states, and API responses.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/test-data/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  \"tenantId\": \"public\", // public or non public\n  \"cv\": \"4\", // CDI version used for tenant creation\n  \"uv\": \"4\", // CDI version used fo updating the tenant\n  \"cbody\": {\n    // ... body of the create operation\n  },\n  \"ubody\": {\n    // ... body of the update operation\n  },\n  \"tenantState\": { // state stored in the db\n    \"tenantId\": \"public\",\n    \"emailPasswordEnabled\": true,\n    \"passwordlessEnabled\": true,\n    \"thirdPartyEnabled\": true,\n    \"firstFactors\": null,\n    \"requiredSecondaryFactors\": null\n  },\n  \"g4\": { // expected output from GET tenant API for CDI version 4\n    \"emailPasswordEnabled\": true,\n    \"thirdPartyEnabled\": true,\n    \"passwordlessEnabled\": true\n  },\n  \"g5\": { // expected output from GET tenant API for CDI version 5\n    \"emailPasswordEnabled\": true,\n    \"thirdPartyEnabled\": true,\n    \"passwordlessEnabled\": true,\n    \"firstFactors\": null,\n    \"requiredSecondaryFactors\": null\n  },\n  \"gv2\": { // expected output from GET tenant API for CDI version 5.1\n    \"firstFactors\": null, \n    \"requiredSecondaryFactors\": null },\n  \"invalidConfig\": false // Indicates if create or update should result in an invalid config error\n}\n```\n\n----------------------------------------\n\nTITLE: Running React App in Development Mode\nDESCRIPTION: This command starts the React application in development mode, allowing for live reloading and displaying lint errors in the console.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/test-data/playground/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Creating OAuth Tables in PostgreSQL\nDESCRIPTION: SQL script to create OAuth-related tables in PostgreSQL including oauth_clients, oauth_sessions, oauth_m2m_tokens, and oauth_logout_challenges with their respective indexes and foreign key constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS oauth_clients (\n    app_id VARCHAR(64),\n    client_id VARCHAR(255) NOT NULL,\n    is_client_credentials_only BOOLEAN NOT NULL,\n    PRIMARY KEY (app_id, client_id),\n    FOREIGN KEY(app_id) REFERENCES apps(app_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS oauth_sessions (\n    gid VARCHAR(255),\n    app_id VARCHAR(64) DEFAULT 'public',\n    client_id VARCHAR(255) NOT NULL,\n    session_handle VARCHAR(128),\n    external_refresh_token VARCHAR(255) UNIQUE,\n    internal_refresh_token VARCHAR(255) UNIQUE,\n    jti TEXT NOT NULL,\n    exp BIGINT NOT NULL,\n    PRIMARY KEY (gid),\n    FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS oauth_session_exp_index ON oauth_sessions(exp DESC);\nCREATE INDEX IF NOT EXISTS oauth_session_external_refresh_token_index ON oauth_sessions(app_id, external_refresh_token DESC);\n\nCREATE TABLE IF NOT EXISTS oauth_m2m_tokens (\n    app_id VARCHAR(64) DEFAULT 'public',\n    client_id VARCHAR(255) NOT NULL,\n    iat BIGINT NOT NULL,\n    exp BIGINT NOT NULL,\n    PRIMARY KEY (app_id, client_id, iat),\n    FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS oauth_m2m_token_iat_index ON oauth_m2m_tokens(iat DESC, app_id DESC);\nCREATE INDEX IF NOT EXISTS oauth_m2m_token_exp_index ON oauth_m2m_tokens(exp DESC);\n\nCREATE TABLE IF NOT EXISTS oauth_logout_challenges (\n    app_id VARCHAR(64) DEFAULT 'public',\n    challenge VARCHAR(128) NOT NULL,\n    client_id VARCHAR(255) NOT NULL,\n    post_logout_redirect_uri VARCHAR(1024),\n    session_handle VARCHAR(128),\n    state VARCHAR(128),\n    time_created BIGINT NOT NULL,\n    PRIMARY KEY (app_id, challenge),\n    FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS oauth_logout_challenges_time_created_index ON oauth_logout_challenges(time_created DESC);\n```\n\n----------------------------------------\n\nTITLE: Creating OAuth Tables in MySQL\nDESCRIPTION: SQL script to create OAuth-related tables in MySQL including oauth_clients, oauth_sessions, oauth_m2m_tokens, and oauth_logout_challenges with their respective indexes and foreign key constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS oauth_clients (\n  app_id VARCHAR(64),\n  client_id VARCHAR(255) NOT NULL,\n  is_client_credentials_only BOOLEAN NOT NULL,\n  PRIMARY KEY (app_id, client_id),\n  FOREIGN KEY(app_id) REFERENCES apps(app_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS oauth_sessions (\n  gid VARCHAR(255),\n  app_id VARCHAR(64) DEFAULT 'public',\n  client_id VARCHAR(255) NOT NULL,\n  session_handle VARCHAR(128),\n  external_refresh_token VARCHAR(255) UNIQUE,\n  internal_refresh_token VARCHAR(255) UNIQUE,\n  jti TEXT NOT NULL,\n  exp BIGINT NOT NULL,\n  PRIMARY KEY (gid),\n  FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX oauth_session_exp_index ON oauth_sessions(exp DESC);\nCREATE INDEX oauth_session_external_refresh_token_index ON oauth_sessions(app_id, external_refresh_token DESC);\n\nCREATE TABLE oauth_m2m_tokens (\n  app_id VARCHAR(64) DEFAULT 'public',\n  client_id VARCHAR(255) NOT NULL,\n  iat BIGINT UNSIGNED NOT NULL,\n  exp BIGINT UNSIGNED NOT NULL,\n  PRIMARY KEY (app_id, client_id, iat),\n  FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX oauth_m2m_token_iat_index ON oauth_m2m_tokens(iat DESC, app_id DESC);\nCREATE INDEX oauth_m2m_token_exp_index ON oauth_m2m_tokens(exp DESC);\n\nCREATE TABLE IF NOT EXISTS oauth_logout_challenges (\n  app_id VARCHAR(64) DEFAULT 'public',\n  challenge VARCHAR(128) NOT NULL,\n  client_id VARCHAR(255) NOT NULL,\n  post_logout_redirect_uri VARCHAR(1024),\n  session_handle VARCHAR(128),\n  state VARCHAR(128),\n  time_created BIGINT UNSIGNED NOT NULL,\n  PRIMARY KEY (app_id, challenge),\n  FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX oauth_logout_challenges_time_created_index ON oauth_logout_challenges(time_created ASC, app_id ASC);\n```\n\n----------------------------------------\n\nTITLE: Creating Stored Procedure for Adding Columns in MySQL\nDESCRIPTION: This procedure adds a new column to a specified table if it doesn't already exist. It checks for column existence and executes the ALTER TABLE command dynamically.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_35\n\nLANGUAGE: sql\nCODE:\n```\nCREATE PROCEDURE st_add_column_if_not_exists(\nIN p_table_name varchar(50), \nIN p_column_name varchar(50),\nIN p_column_type varchar(50),\nIN p_additional varchar(100),\nOUT p_status_message varchar(100))\n    READS SQL DATA\nBEGIN\n    DECLARE v_count INT;\n    \n    # Check wether column exist or not\n    SELECT count(*) INTO v_count\n    FROM information_schema.columns\n    WHERE table_schema = database()\n        AND table_name   = p_table_name\n        AND column_name  = p_column_name;\n        \n    IF v_count > 0 THEN\n      # Return column already exists message\n      SELECT 'Column already Exists' INTO p_status_message;\n    ELSE\n        # Add Column and return success message\n      set @ddl_addcolumn=CONCAT('ALTER TABLE ',database(),'.',p_table_name,\n      ' ADD COLUMN ',p_column_name,' ',p_column_type,' ',p_additional);\n    prepare add_column_sql from @ddl_addcolumn;\n    execute add_column_sql;\n      SELECT 'Column Successfully  Created!' INTO p_status_message;\n    END IF;\nEND //\n```\n\n----------------------------------------\n\nTITLE: Creating Stored Procedure for Dropping Foreign Keys in MySQL\nDESCRIPTION: This procedure iterates through all foreign keys in the database and drops them. It uses a cursor to fetch and execute drop commands dynamically.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_34\n\nLANGUAGE: sql\nCODE:\n```\nCREATE PROCEDURE st_drop_all_fkeys()\nBEGIN\n    DECLARE done INT DEFAULT FALSE;\n    DECLARE dropCommand VARCHAR(255);\n    DECLARE dropCur CURSOR FOR\n        SELECT\n            concat('ALTER TABLE ', table_schema, '.', table_name, ' DROP FOREIGN KEY ', constraint_name, ';')\n        FROM\n            information_schema.table_constraints\n        WHERE\n            constraint_type = 'FOREIGN KEY'\n            AND table_schema = DATABASE()\n            AND table_name != 'userid_mapping';\n\n    DECLARE CONTINUE handler for NOT found SET done = true;\n    OPEN dropCur;\n\n    read_loop: LOOP\n        FETCH dropCur INTO dropCommand;\n        IF done THEN\n            leave read_loop;\n        END IF;\n\n        SET @sdropCommand = dropCommand;\n\n        PREPARE dropClientUpdateKeyStmt FROM @sdropCommand;\n\n        EXECUTE dropClientUpdateKeyStmt;\n\n        DEALLOCATE prepare dropClientUpdateKeyStmt;\n    END LOOP;\n\n    CLOSE dropCur;\nEND //\n```\n\n----------------------------------------\n\nTITLE: Configuring modules.txt for SuperTokens Development\nDESCRIPTION: Example configuration for modules.txt file when setting up SuperTokens development environment with a forked repository. Shows how to specify module name, branch name, and GitHub username.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n// put module name like module name,branch name,github username(if contributing with a forked repository) and then call ./loadModules script        \ncore,master,helloworld  \nplugin-interface,master        \nsqlite-plugin,master\n```\n\n----------------------------------------\n\nTITLE: Database Migration for MySQL\nDESCRIPTION: SQL script for MySQL to create new tables and indexes for Webauthn support and email verification.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX emailverification_verified_emails_app_id_email_index ON emailverification_verified_emails\n(app_id, email);\n\nCREATE TABLE IF NOT EXISTS webauthn_account_recovery_tokens (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    tenant_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    user_id CHAR(36) NOT NULL,\n    email VARCHAR(256) NOT NULL,\n    token VARCHAR(256) NOT NULL,\n    expires_at BIGINT NOT NULL,\n    CONSTRAINT webauthn_account_recovery_token_pkey PRIMARY KEY (app_id, tenant_id, user_id, token),\n    CONSTRAINT webauthn_account_recovery_token_user_id_fkey FOREIGN KEY (app_id, tenant_id, user_id) REFERENCES \n    all_auth_recipe_users(app_id, tenant_id, user_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_credentials (\n    id VARCHAR(256) NOT NULL,\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    rp_id VARCHAR(256) NOT NULL,\n    user_id CHAR(36),\n    counter BIGINT NOT NULL,\n    public_key BLOB NOT NULL,\n    transports TEXT NOT NULL,\n    created_at BIGINT NOT NULL,\n    updated_at BIGINT NOT NULL,\n    CONSTRAINT webauthn_credentials_pkey PRIMARY KEY (app_id, rp_id, id),\n    CONSTRAINT webauthn_credentials_user_id_fkey FOREIGN KEY (app_id, user_id) REFERENCES webauthn_users\n    (app_id, user_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_generated_options (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    tenant_id VARCHAR(64) DEFAULT 'public'NOT NULL,\n    id CHAR(36) NOT NULL,\n    challenge VARCHAR(256) NOT NULL,\n    email VARCHAR(256),\n    rp_id VARCHAR(256) NOT NULL,\n    rp_name VARCHAR(256) NOT NULL,\n    origin VARCHAR(256) NOT NULL,\n    expires_at BIGINT NOT NULL,\n    created_at BIGINT NOT NULL,\n    user_presence_required BOOLEAN DEFAULT false NOT NULL,\n    user_verification VARCHAR(12) DEFAULT 'preferred' NOT NULL,\n    CONSTRAINT webauthn_generated_options_pkey PRIMARY KEY (app_id, tenant_id, id),\n    CONSTRAINT webauthn_generated_options_tenant_id_fkey FOREIGN KEY (app_id, tenant_id) REFERENCES tenants\n    (app_id, tenant_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_user_to_tenant (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    tenant_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    user_id CHAR(36) NOT NULL,\n    email VARCHAR(256) NOT NULL,\n    CONSTRAINT webauthn_user_to_tenant_email_key UNIQUE (app_id, tenant_id, email),\n    CONSTRAINT webauthn_user_to_tenant_pkey PRIMARY KEY (app_id, tenant_id, user_id),\n    CONSTRAINT webauthn_user_to_tenant_user_id_fkey FOREIGN KEY (app_id, tenant_id, user_id) REFERENCES \n    all_auth_recipe_users(app_id, tenant_id, user_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_users (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    user_id CHAR(36) NOT NULL,\n    email VARCHAR(256) NOT NULL,\n    rp_id VARCHAR(256) NOT NULL,\n    time_joined BIGINT NOT NULL,\n    CONSTRAINT webauthn_users_pkey PRIMARY KEY (app_id, user_id),\n    CONSTRAINT webauthn_users_user_id_fkey FOREIGN KEY (app_id, user_id) REFERENCES app_id_to_user_id (app_id, \n    user_id) ON DELETE CASCADE\n);\n\nCREATE INDEX webauthn_user_to_tenant_email_index ON webauthn_user_to_tenant (app_id, email);\nCREATE INDEX webauthn_user_challenges_expires_at_index ON webauthn_generated_options (app_id, tenant_id, expires_at);\nCREATE INDEX webauthn_credentials_user_id_index ON webauthn_credentials (user_id);\nCREATE INDEX webauthn_account_recovery_token_token_index ON webauthn_account_recovery_tokens (app_id, tenant_id, token);\nCREATE INDEX webauthn_account_recovery_token_expires_at_index ON webauthn_account_recovery_tokens (expires_at DESC);\nCREATE INDEX webauthn_account_recovery_token_email_index ON webauthn_account_recovery_tokens (app_id, tenant_id, email);\n```\n\n----------------------------------------\n\nTITLE: Database Migration for PostgreSQL\nDESCRIPTION: SQL script for PostgreSQL to create new tables and indexes for Webauthn support and email verification.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX IF NOT EXISTS emailverification_verified_emails_app_id_email_index ON emailverification_verified_emails\n(app_id, email);\n\nCREATE TABLE IF NOT EXISTS webauthn_account_recovery_tokens (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    tenant_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    user_id CHAR(36) NOT NULL,\n    email VARCHAR(256) NOT NULL,\n    token VARCHAR(256) NOT NULL,\n    expires_at BIGINT NOT NULL,\n    CONSTRAINT webauthn_account_recovery_token_pkey PRIMARY KEY (app_id, tenant_id, user_id, token),\n    CONSTRAINT webauthn_account_recovery_token_user_id_fkey FOREIGN KEY (app_id, tenant_id, user_id) REFERENCES \n    all_auth_recipe_users(app_id, tenant_id, user_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_credentials (\n    id VARCHAR(256) NOT NULL,\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    rp_id VARCHAR(256) NOT NULL,\n    user_id CHAR(36),\n    counter BIGINT NOT NULL,\n    public_key BYTEA NOT NULL,\n    transports TEXT NOT NULL,\n    created_at BIGINT NOT NULL,\n    updated_at BIGINT NOT NULL,\n    CONSTRAINT webauthn_credentials_pkey PRIMARY KEY (app_id, rp_id, id),\n    CONSTRAINT webauthn_credentials_user_id_fkey FOREIGN KEY (app_id, user_id) REFERENCES webauthn_users\n    (app_id, user_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_generated_options (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    tenant_id VARCHAR(64) DEFAULT 'public'NOT NULL,\n    id CHAR(36) NOT NULL,\n    challenge VARCHAR(256) NOT NULL,\n    email VARCHAR(256),\n    rp_id VARCHAR(256) NOT NULL,\n    rp_name VARCHAR(256) NOT NULL,\n    origin VARCHAR(256) NOT NULL,\n    expires_at BIGINT NOT NULL,\n    created_at BIGINT NOT NULL,\n    user_presence_required BOOLEAN DEFAULT false NOT NULL,\n    user_verification VARCHAR(12) DEFAULT 'preferred' NOT NULL,\n    CONSTRAINT webauthn_generated_options_pkey PRIMARY KEY (app_id, tenant_id, id),\n    CONSTRAINT webauthn_generated_options_tenant_id_fkey FOREIGN KEY (app_id, tenant_id) REFERENCES tenants\n    (app_id, tenant_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_user_to_tenant (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    tenant_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    user_id CHAR(36) NOT NULL,\n    email VARCHAR(256) NOT NULL,\n    CONSTRAINT webauthn_user_to_tenant_email_key UNIQUE (app_id, tenant_id, email),\n    CONSTRAINT webauthn_user_to_tenant_pkey PRIMARY KEY (app_id, tenant_id, user_id),\n    CONSTRAINT webauthn_user_to_tenant_user_id_fkey FOREIGN KEY (app_id, tenant_id, user_id) REFERENCES \n    all_auth_recipe_users(app_id, tenant_id, user_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS webauthn_users (\n    app_id VARCHAR(64) DEFAULT 'public' NOT NULL,\n    user_id CHAR(36) NOT NULL,\n    email VARCHAR(256) NOT NULL,\n    rp_id VARCHAR(256) NOT NULL,\n    time_joined BIGINT NOT NULL,\n    CONSTRAINT webauthn_users_pkey PRIMARY KEY (app_id, user_id),\n    CONSTRAINT webauthn_users_user_id_fkey FOREIGN KEY (app_id, user_id) REFERENCES app_id_to_user_id(app_id, \n    user_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS webauthn_user_to_tenant_email_index ON webauthn_user_to_tenant (app_id, email);\nCREATE INDEX IF NOT EXISTS webauthn_user_challenges_expires_at_index ON webauthn_generated_options (app_id, tenant_id, expires_at);\nCREATE INDEX IF NOT EXISTS webauthn_credentials_user_id_index ON webauthn_credentials (user_id);\nCREATE INDEX IF NOT EXISTS webauthn_account_recovery_token_token_index ON webauthn_account_recovery_tokens (app_id, tenant_id, token);\nCREATE INDEX IF NOT EXISTS webauthn_account_recovery_token_expires_at_index ON webauthn_account_recovery_tokens (expires_at DESC);\nCREATE INDEX IF NOT EXISTS webauthn_account_recovery_token_email_index ON webauthn_account_recovery_tokens (app_id, tenant_id, email);\n```\n\n----------------------------------------\n\nTITLE: Creating Bulk Import Users Table for PostgreSQL in SuperTokens Core 10.0.0\nDESCRIPTION: SQL script to create the bulk_import_users table and related indexes for bulk user import functionality in PostgreSQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS bulk_import_users (\n    id CHAR(36),\n    app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n    primary_user_id VARCHAR(36),\n    raw_data TEXT NOT NULL,\n    status VARCHAR(128) DEFAULT 'NEW',\n    error_msg TEXT,\n    created_at BIGINT NOT NULL, \n    updated_at BIGINT NOT NULL, \n    CONSTRAINT bulk_import_users_pkey PRIMARY KEY(app_id, id),\n    CONSTRAINT bulk_import_users__app_id_fkey FOREIGN KEY(app_id) REFERENCES apps(app_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS bulk_import_users_status_updated_at_index ON bulk_import_users (app_id, status, updated_at);\n\nCREATE INDEX IF NOT EXISTS bulk_import_users_pagination_index1 ON bulk_import_users (app_id, status, created_at DESC, id DESC);\n \nCREATE INDEX IF NOT EXISTS bulk_import_users_pagination_index2 ON bulk_import_users (app_id, created_at DESC, id DESC);\n\nCREATE INDEX IF NOT EXISTS session_info_user_id_app_id_index ON session_info (user_id, app_id);\n```\n\n----------------------------------------\n\nTITLE: Creating and Modifying EmailPassword Tables in MySQL\nDESCRIPTION: This snippet modifies the 'emailpassword_users' table and begins creating the 'emailpassword_user_to_tenant' table for email-password authentication. It adds columns and sets up primary and foreign keys.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_40\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('emailpassword_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE emailpassword_users\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE emailpassword_users\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n-- --\n\nCREATE TABLE IF NOT EXISTS emailpassword_user_to_tenant (\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Schema Updates for TOTP and User Activity Tables\nDESCRIPTION: SQL commands to modify TOTP and user activity related tables including adding app_id and tenant_id columns, creating foreign key constraints, and setting up indexes for performance optimization.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_32\n\nLANGUAGE: sql\nCODE:\n```\nDROP CONSTRAINT IF EXISTS totp_user_devices_user_id_fkey;\n\nALTER TABLE totp_user_devices\n  ADD CONSTRAINT totp_user_devices_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS totp_user_devices_user_id_index ON totp_user_devices (app_id, user_id);\n\n------------------------------------------------------------\n\nALTER TABLE totp_used_codes\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n  ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE totp_used_codes\n  DROP CONSTRAINT totp_used_codes_pkey CASCADE;\n\nALTER TABLE totp_used_codes\n  ADD CONSTRAINT totp_used_codes_pkey \n    PRIMARY KEY (app_id, tenant_id, user_id, created_time_ms);\n\nALTER TABLE totp_used_codes\n  DROP CONSTRAINT IF EXISTS totp_used_codes_user_id_fkey;\n\nALTER TABLE totp_used_codes\n  ADD CONSTRAINT totp_used_codes_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE totp_used_codes\n  DROP CONSTRAINT IF EXISTS totp_used_codes_tenant_id_fkey;\n\nALTER TABLE totp_used_codes\n  ADD CONSTRAINT totp_used_codes_tenant_id_fkey \n    FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nDROP INDEX IF EXISTS totp_used_codes_expiry_time_ms_index;\n\nCREATE INDEX IF NOT EXISTS totp_used_codes_expiry_time_ms_index ON totp_used_codes (app_id, tenant_id, expiry_time_ms);\n\nCREATE INDEX IF NOT EXISTS totp_used_codes_user_id_index ON totp_used_codes (app_id, user_id);\n\nCREATE INDEX IF NOT EXISTS totp_used_codes_tenant_id_index ON totp_used_codes (app_id, tenant_id);\n```\n\n----------------------------------------\n\nTITLE: Creating and Altering Passwordless User to Tenant Table\nDESCRIPTION: Creates a new table 'passwordless_user_to_tenant' and alters it to add primary key, unique constraints, and foreign key. Also inserts data from the existing 'passwordless_users' table.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_44\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS passwordless_user_to_tenant (\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  user_id CHAR(36) NOT NULL,\n  email VARCHAR(256),\n  phone_number VARCHAR(256)\n);\n\nALTER TABLE passwordless_user_to_tenant\n  ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\nALTER TABLE passwordless_user_to_tenant\n  ADD CONSTRAINT email UNIQUE (app_id, tenant_id, email);\n\nALTER TABLE passwordless_user_to_tenant\n  ADD CONSTRAINT phone_number UNIQUE (app_id, tenant_id, phone_number);\n\nALTER TABLE passwordless_user_to_tenant\n  ADD FOREIGN KEY (app_id, tenant_id, user_id)\n    REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\nINSERT IGNORE INTO passwordless_user_to_tenant (user_id, email, phone_number)\n  SELECT user_id, email, phone_number FROM passwordless_users;\n```\n\n----------------------------------------\n\nTITLE: Creating and Altering EmailPassword User to Tenant Table\nDESCRIPTION: Creates a new table 'emailpassword_user_to_tenant' and alters it to add primary key, unique constraint, and foreign key. Also inserts data from the existing 'emailpassword_users' table.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_41\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS emailpassword_user_to_tenant (\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  user_id CHAR(36) NOT NULL,\n  email VARCHAR(256) NOT NULL\n);\n\nALTER TABLE emailpassword_user_to_tenant\n  ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\nALTER TABLE emailpassword_user_to_tenant\n  ADD CONSTRAINT email UNIQUE (app_id, tenant_id, email);\n\nALTER TABLE emailpassword_user_to_tenant\n  ADD CONSTRAINT FOREIGN KEY (app_id, tenant_id, user_id)\n    REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\nINSERT IGNORE INTO emailpassword_user_to_tenant (user_id, email)\n  SELECT user_id, email FROM emailpassword_users;\n```\n\n----------------------------------------\n\nTITLE: Modifying dashboard_users and dashboard_user_sessions Tables in SQL\nDESCRIPTION: Alters the dashboard_users and dashboard_user_sessions tables by adding app_id columns, updating primary keys and constraints, and creating new indexes. It modifies both tables to include app_id in their key relationships and foreign key constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_30\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE dashboard_users\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE dashboard_users\n  DROP CONSTRAINT dashboard_users_pkey CASCADE;\n\nALTER TABLE dashboard_users\n  ADD CONSTRAINT dashboard_users_pkey \n    PRIMARY KEY (app_id, user_id);\n\nALTER TABLE dashboard_users\n  DROP CONSTRAINT IF EXISTS dashboard_users_email_key;\n\nALTER TABLE dashboard_users\n  ADD CONSTRAINT dashboard_users_email_key\n    UNIQUE (app_id, email);\n\nALTER TABLE dashboard_users\n  DROP CONSTRAINT IF EXISTS dashboard_users_app_id_fkey;\n\nALTER TABLE dashboard_users\n  ADD CONSTRAINT dashboard_users_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS dashboard_users_app_id_index ON dashboard_users (app_id);\n\n------------------------------------------------------------\n\nALTER TABLE dashboard_user_sessions\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE dashboard_user_sessions\n  DROP CONSTRAINT dashboard_user_sessions_pkey CASCADE;\n\nALTER TABLE dashboard_user_sessions\n  ADD CONSTRAINT dashboard_user_sessions_pkey \n    PRIMARY KEY (app_id, session_id);\n\nALTER TABLE dashboard_user_sessions\n  DROP CONSTRAINT IF EXISTS dashboard_user_sessions_user_id_fkey;\n\nALTER TABLE dashboard_user_sessions\n  ADD CONSTRAINT dashboard_user_sessions_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES dashboard_users (app_id, user_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS dashboard_user_sessions_user_id_index ON dashboard_user_sessions (app_id, user_id);\n```\n\n----------------------------------------\n\nTITLE: Passwordless Authentication Tables Migration\nDESCRIPTION: Updates passwordless authentication tables by adding app_id and tenant_id columns, modifying constraints and creating new user_to_tenant mapping table.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_23\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE passwordless_users\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE passwordless_users\n  DROP CONSTRAINT passwordless_users_pkey CASCADE;\n\nALTER TABLE passwordless_users\n  ADD CONSTRAINT passwordless_users_pkey \n    PRIMARY KEY (app_id, user_id);\n\nALTER TABLE passwordless_users\n  DROP CONSTRAINT IF EXISTS passwordless_users_email_key;\n\nALTER TABLE passwordless_users\n  DROP CONSTRAINT IF EXISTS passwordless_users_phone_number_key;\n\nALTER TABLE passwordless_users\n  DROP CONSTRAINT IF EXISTS passwordless_users_user_id_fkey;\n\nALTER TABLE passwordless_users\n  ADD CONSTRAINT passwordless_users_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Creating and Altering ThirdParty User to Tenant Table\nDESCRIPTION: Creates a new table 'thirdparty_user_to_tenant' and alters it to add primary key, unique constraint, and foreign key. Also inserts data from the existing 'thirdparty_users' table.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_48\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS thirdparty_user_to_tenant (\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  user_id CHAR(36) NOT NULL,\n  third_party_id VARCHAR(28) NOT NULL,\n  third_party_user_id VARCHAR(256) NOT NULL\n);\n\nALTER TABLE thirdparty_user_to_tenant\n  ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\nALTER TABLE thirdparty_user_to_tenant\n  ADD CONSTRAINT third_party_user_id\n    UNIQUE (app_id, tenant_id, third_party_id, third_party_user_id);\n\nALTER TABLE thirdparty_user_to_tenant\n  ADD FOREIGN KEY (app_id, tenant_id, user_id)\n    REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\nINSERT IGNORE INTO thirdparty_user_to_tenant (user_id, third_party_id, third_party_user_id)\n  SELECT user_id, third_party_id, third_party_user_id FROM thirdparty_users;\n```\n\n----------------------------------------\n\nTITLE: Creating thirdparty_user_to_tenant Table in SQL\nDESCRIPTION: Creates a new table thirdparty_user_to_tenant with columns for app_id, tenant_id, user_id, third_party_id, and third_party_user_id. It sets up primary key, foreign key, and unique constraints. The table is designed to link third-party users to tenants.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_25\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE IF NOT EXISTS thirdparty_user_to_tenant (\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  user_id CHAR(36) NOT NULL,\n  third_party_id VARCHAR(28) NOT NULL,\n  third_party_user_id VARCHAR(256) NOT NULL,\n  CONSTRAINT thirdparty_user_to_tenant_third_party_user_id_key\n    UNIQUE (app_id, tenant_id, third_party_id, third_party_user_id),\n  CONSTRAINT thirdparty_user_to_tenant_pkey\n    PRIMARY KEY (app_id, tenant_id, user_id),\n  CONSTRAINT thirdparty_user_to_tenant_user_id_fkey\n    FOREIGN KEY (app_id, tenant_id, user_id)\n    REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE\n);\n\nALTER TABLE thirdparty_user_to_tenant\n  DROP CONSTRAINT IF EXISTS thirdparty_user_to_tenant_third_party_user_id_key;\n\nALTER TABLE thirdparty_user_to_tenant\n  ADD CONSTRAINT thirdparty_user_to_tenant_third_party_user_id_key\n    UNIQUE (app_id, tenant_id, third_party_id, third_party_user_id);\n\nALTER TABLE thirdparty_user_to_tenant\n  DROP CONSTRAINT IF EXISTS thirdparty_user_to_tenant_user_id_fkey;\n\nALTER TABLE thirdparty_user_to_tenant\n  ADD CONSTRAINT thirdparty_user_to_tenant_user_id_fkey\n    FOREIGN KEY (app_id, tenant_id, user_id)\n    REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\nINSERT INTO thirdparty_user_to_tenant (user_id, third_party_id, third_party_user_id)\n  SELECT user_id, third_party_id, third_party_user_id FROM thirdparty_users ON CONFLICT DO NOTHING;\n```\n\n----------------------------------------\n\nTITLE: Running Tests for React App\nDESCRIPTION: This command launches the test runner in interactive watch mode, enabling continuous testing during development.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/test-data/playground/README.md#2025-04-21_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Email Verification Tables Migration\nDESCRIPTION: Updates schema for email verification tables including verified_emails and tokens tables. Adds app_id and tenant_id columns, updates primary keys and foreign key constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_21\n\nLANGUAGE: sql\nCODE:\n```\nDROP CONSTRAINT emailverification_verified_emails_pkey CASCADE;\n\nALTER TABLE emailverification_verified_emails\n  ADD CONSTRAINT emailverification_verified_emails_pkey \n    PRIMARY KEY (app_id, user_id, email);\n\nALTER TABLE emailverification_verified_emails\n  DROP CONSTRAINT IF EXISTS emailverification_verified_emails_app_id_fkey;\n\nALTER TABLE emailverification_verified_emails\n  ADD CONSTRAINT emailverification_verified_emails_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS emailverification_verified_emails_app_id_index ON emailverification_verified_emails (app_id);\n```\n\n----------------------------------------\n\nTITLE: Email Password Authentication Tables Migration\nDESCRIPTION: Modifies email password authentication tables by adding app_id column, updating primary keys and foreign key constraints. Creates new user_to_tenant mapping table.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_22\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE emailpassword_users\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE emailpassword_users\n  DROP CONSTRAINT emailpassword_users_pkey CASCADE;\n\nALTER TABLE emailpassword_users\n  DROP CONSTRAINT IF EXISTS emailpassword_users_email_key CASCADE;\n\nALTER TABLE emailpassword_users\n  ADD CONSTRAINT emailpassword_users_pkey \n    PRIMARY KEY (app_id, user_id);\n\nALTER TABLE emailpassword_users\n  DROP CONSTRAINT IF EXISTS emailpassword_users_user_id_fkey;\n\nALTER TABLE emailpassword_users\n  ADD CONSTRAINT emailpassword_users_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Modifying thirdparty_users Table in SQL\nDESCRIPTION: Alters the thirdparty_users table by dropping and adding constraints, changing the primary key, and creating new indexes. It modifies the table structure to include app_id in the primary key and foreign key relationships.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_24\n\nLANGUAGE: SQL\nCODE:\n```\nDROP CONSTRAINT thirdparty_users_pkey CASCADE;\n\nALTER TABLE thirdparty_users\n  DROP CONSTRAINT IF EXISTS thirdparty_users_user_id_key CASCADE;\n\nALTER TABLE thirdparty_users\n  ADD CONSTRAINT thirdparty_users_pkey \n    PRIMARY KEY (app_id, user_id);\n\nALTER TABLE thirdparty_users\n  DROP CONSTRAINT IF EXISTS thirdparty_users_user_id_fkey;\n\nALTER TABLE thirdparty_users\n  ADD CONSTRAINT thirdparty_users_user_id_fkey \n    FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nDROP INDEX IF EXISTS thirdparty_users_thirdparty_user_id_index;\n\nCREATE INDEX IF NOT EXISTS thirdparty_users_thirdparty_user_id_index ON thirdparty_users (app_id, third_party_id, third_party_user_id);\n\nDROP INDEX IF EXISTS thirdparty_users_email_index;\n\nCREATE INDEX IF NOT EXISTS thirdparty_users_email_index ON thirdparty_users (app_id, email);\n```\n\n----------------------------------------\n\nTITLE: Modifying user_roles Table in SQL\nDESCRIPTION: Alters the user_roles table by adding app_id and tenant_id columns, updating primary key and foreign key constraints, and creating new indexes. It modifies the table to include app_id and tenant_id in its key relationships.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_28\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE user_roles\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n  ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE user_roles\n  DROP CONSTRAINT user_roles_pkey CASCADE;\n\nALTER TABLE user_roles\n  ADD CONSTRAINT user_roles_pkey \n    PRIMARY KEY (app_id, tenant_id, user_id, role);\n\nALTER TABLE user_roles\n  DROP CONSTRAINT IF EXISTS user_roles_tenant_id_fkey;\n\nALTER TABLE user_roles\n  ADD CONSTRAINT user_roles_tenant_id_fkey \n    FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nALTER TABLE user_roles\n  DROP CONSTRAINT IF EXISTS user_roles_role_fkey;\n\nALTER TABLE user_roles\n  ADD CONSTRAINT user_roles_role_fkey \n    FOREIGN KEY (app_id, role)\n    REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\nDROP INDEX IF EXISTS user_roles_role_index;\n\nCREATE INDEX IF NOT EXISTS user_roles_role_index ON user_roles (app_id, tenant_id, role);\n\nCREATE INDEX IF NOT EXISTS user_roles_tenant_id_index ON user_roles (app_id, tenant_id);\n\nCREATE INDEX IF NOT EXISTS user_roles_app_id_role_index ON user_roles (app_id, role);\n```\n\n----------------------------------------\n\nTITLE: Altering Passwordless Codes Table\nDESCRIPTION: Adds 'app_id' and 'tenant_id' columns to the 'passwordless_codes' table, sets primary key, adds foreign key constraint, and creates an index on created_at.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_46\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('passwordless_codes', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('passwordless_codes', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE passwordless_codes\n  ADD PRIMARY KEY (app_id, tenant_id, code_id);\n\nALTER TABLE passwordless_codes\n  ADD FOREIGN KEY (app_id, tenant_id, device_id_hash)\n    REFERENCES passwordless_devices (app_id, tenant_id, device_id_hash) ON DELETE CASCADE;\n\nALTER TABLE passwordless_codes\n  ADD CONSTRAINT link_code_hash\n    UNIQUE (app_id, tenant_id, link_code_hash);\n\nCREATE INDEX passwordless_codes_created_at_index ON passwordless_codes (app_id, tenant_id, created_at);\n```\n\n----------------------------------------\n\nTITLE: Altering Passwordless Devices Table\nDESCRIPTION: Adds 'app_id' and 'tenant_id' columns to the 'passwordless_devices' table, sets primary key, adds foreign key constraint, and creates indexes on email and phone_number.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_45\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('passwordless_devices', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('passwordless_devices', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE passwordless_devices\n  ADD PRIMARY KEY (app_id, tenant_id, device_id_hash);\n\nALTER TABLE passwordless_devices\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nCREATE INDEX passwordless_devices_email_index ON passwordless_devices (app_id, tenant_id, email);\n\nCREATE INDEX passwordless_devices_phone_number_index ON passwordless_devices (app_id, tenant_id, phone_number);\n```\n\n----------------------------------------\n\nTITLE: Altering Dashboard Users and Sessions Tables\nDESCRIPTION: Adds 'app_id' column to 'dashboard_users' and 'dashboard_user_sessions' tables, sets primary keys, adds constraints, and creates an index on expiry.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_52\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('dashboard_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE dashboard_users\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE dashboard_users\n  ADD CONSTRAINT email\n    UNIQUE (app_id, email);\n\nALTER TABLE dashboard_users\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\n--\n\nCALL st_add_column_if_not_exists('dashboard_user_sessions', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE dashboard_user_sessions\n  ADD PRIMARY KEY (app_id, session_id);\n\nALTER TABLE dashboard_user_sessions\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES dashboard_users (app_id, user_id) ON DELETE CASCADE;\n\nCREATE INDEX dashboard_user_sessions_expiry_index ON dashboard_user_sessions (expiry);\n```\n\n----------------------------------------\n\nTITLE: Altering ThirdParty Users Table\nDESCRIPTION: Adds an 'app_id' column to the 'thirdparty_users' table, sets primary key, adds foreign key constraint, and creates indexes on third_party_user_id and email.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_47\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('thirdparty_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE thirdparty_users\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE thirdparty_users\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nCREATE INDEX thirdparty_users_thirdparty_user_id_index ON thirdparty_users (app_id, third_party_id, third_party_user_id);\n\nCREATE INDEX thirdparty_users_email_index ON thirdparty_users (app_id, email);\n```\n\n----------------------------------------\n\nTITLE: Altering UserRoles Tables\nDESCRIPTION: Adds 'app_id' column to 'roles' and 'role_permissions' tables, and 'app_id' and 'tenant_id' columns to 'user_roles' table. Sets primary keys, adds foreign key constraints, and creates indexes.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_50\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('roles', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE roles\n  ADD PRIMARY KEY (app_id, role);\n\nALTER TABLE roles\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\n--\n\nCALL st_add_column_if_not_exists('role_permissions', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE role_permissions\n  ADD PRIMARY KEY (app_id, role, permission);\n\nALTER TABLE role_permissions\n  ADD FOREIGN KEY (app_id, role)\n    REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\nCREATE INDEX role_permissions_permission_index ON role_permissions (app_id, permission);\n\n--\n\nCALL st_add_column_if_not_exists('user_roles', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('user_roles', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE user_roles\n  ADD PRIMARY KEY (app_id, tenant_id, user_id, role);\n\nALTER TABLE user_roles\n  ADD FOREIGN KEY (app_id, role)\n    REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\nALTER TABLE user_roles\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nCREATE INDEX user_roles_role_index ON user_roles (app_id, tenant_id, role);\n```\n\n----------------------------------------\n\nTITLE: Modifying User Last Active Table in SQL\nDESCRIPTION: SQL commands to add columns to the user_last_active table and set up primary and foreign key constraints. The stored procedure st_add_column_if_not_exists is used to safely add a column if it doesn't already exist.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_56\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('user_last_active', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n```\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE user_last_active\n  ADD PRIMARY KEY (app_id, user_id);\n```\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE user_last_active\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Altering TOTP Tables\nDESCRIPTION: Adds 'app_id' column to 'totp_users' and 'totp_user_devices' tables, and 'app_id' and 'tenant_id' columns to 'totp_used_codes' table. Sets primary keys and adds foreign key constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_53\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('totp_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE totp_users\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE totp_users\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\n--\n\nCALL st_add_column_if_not_exists('totp_user_devices', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE totp_user_devices\n  ADD PRIMARY KEY (app_id, user_id, device_name);\n\nALTER TABLE totp_user_devices\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\n--\n\nCALL st_add_column_if_not_exists('totp_used_codes', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('totp_used_codes', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE totp_used_codes\n```\n\n----------------------------------------\n\nTITLE: Modifying roles and role_permissions Tables in SQL\nDESCRIPTION: Alters the roles and role_permissions tables by adding app_id columns, updating primary keys, and creating new indexes. It modifies both tables to include app_id in their key relationships and constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_27\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE roles\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE roles\n  DROP CONSTRAINT roles_pkey CASCADE;\n\nALTER TABLE roles\n  ADD CONSTRAINT roles_pkey \n    PRIMARY KEY (app_id, role);\n\nALTER TABLE roles\n  DROP CONSTRAINT IF EXISTS roles_app_id_fkey;\n\nALTER TABLE roles\n  ADD CONSTRAINT roles_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS roles_app_id_index ON roles (app_id);\n\n------------------------------------------------------------\n\nALTER TABLE role_permissions\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE role_permissions\n  DROP CONSTRAINT role_permissions_pkey CASCADE;\n\nALTER TABLE role_permissions\n  ADD CONSTRAINT role_permissions_pkey \n    PRIMARY KEY (app_id, role, permission);\n\nALTER TABLE role_permissions\n  DROP CONSTRAINT IF EXISTS role_permissions_role_fkey;\n\nALTER TABLE role_permissions\n  ADD CONSTRAINT role_permissions_role_fkey \n    FOREIGN KEY (app_id, role)\n    REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\nDROP INDEX IF EXISTS role_permissions_permission_index;\n\nCREATE INDEX IF NOT EXISTS role_permissions_permission_index ON role_permissions (app_id, permission);\n\nCREATE INDEX IF NOT EXISTS role_permissions_role_index ON role_permissions (app_id, role);\n```\n\n----------------------------------------\n\nTITLE: Modifying totp_users and totp_user_devices Tables in SQL\nDESCRIPTION: Alters the totp_users and totp_user_devices tables by adding app_id columns, updating primary keys, and creating new indexes. It modifies both tables to include app_id in their key relationships and foreign key constraints.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_31\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE totp_users\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE totp_users\n  DROP CONSTRAINT totp_users_pkey CASCADE;\n\nALTER TABLE totp_users\n  ADD CONSTRAINT totp_users_pkey \n    PRIMARY KEY (app_id, user_id);\n\nALTER TABLE totp_users\n  DROP CONSTRAINT IF EXISTS totp_users_app_id_fkey;\n\nALTER TABLE totp_users\n  ADD CONSTRAINT totp_users_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS totp_users_app_id_index ON totp_users (app_id);\n\n------------------------------------------------------------\n\nALTER TABLE totp_user_devices\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE totp_user_devices\n  DROP CONSTRAINT totp_user_devices_pkey;\n\nALTER TABLE totp_user_devices\n  ADD CONSTRAINT totp_user_devices_pkey \n    PRIMARY KEY (app_id, user_id, device_name);\n\nALTER TABLE totp_user_devices\n```\n\n----------------------------------------\n\nTITLE: Modifying userid_mapping Table in SQL\nDESCRIPTION: Alters the userid_mapping table by adding an app_id column, updating primary key and unique constraints, and creating a new index. It modifies the table to include app_id in its key relationships and foreign key constraint.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_26\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE userid_mapping\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE userid_mapping\n  DROP CONSTRAINT IF EXISTS userid_mapping_pkey CASCADE;\n\nALTER TABLE userid_mapping\n  ADD CONSTRAINT userid_mapping_pkey \n    PRIMARY KEY (app_id, supertokens_user_id, external_user_id);\n\nALTER TABLE userid_mapping\n  DROP CONSTRAINT IF EXISTS userid_mapping_supertokens_user_id_key;\n\nALTER TABLE userid_mapping\n  ADD CONSTRAINT userid_mapping_supertokens_user_id_key\n    UNIQUE (app_id, supertokens_user_id);\n\nALTER TABLE userid_mapping\n  DROP CONSTRAINT IF EXISTS userid_mapping_external_user_id_key;\n\nALTER TABLE userid_mapping\n  ADD CONSTRAINT userid_mapping_external_user_id_key\n    UNIQUE (app_id, external_user_id);\n\nALTER TABLE userid_mapping\n  DROP CONSTRAINT IF EXISTS userid_mapping_supertokens_user_id_fkey;\n\nALTER TABLE userid_mapping\n  ADD CONSTRAINT userid_mapping_supertokens_user_id_fkey \n    FOREIGN KEY (app_id, supertokens_user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS userid_mapping_supertokens_user_id_index ON userid_mapping (app_id, supertokens_user_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Index for User Query Optimization in PostgreSQL\nDESCRIPTION: SQL command to create an index on the app_id_to_user_id table to improve user query performance in PostgreSQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX IF NOT EXISTS app_id_to_user_id_primary_user_id_index ON app_id_to_user_id (primary_or_recipe_user_id, app_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Indexes for MySQL in SuperTokens Core 10.0.1\nDESCRIPTION: SQL script to create indexes on various tables to improve query performance for account linking and user searches in MySQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX emailpassword_users_email_index ON emailpassword_users (app_id, email);\nCREATE INDEX emailpassword_user_to_tenant_email_index ON emailpassword_user_to_tenant (app_id, tenant_id, email);\n\nCREATE INDEX passwordless_users_email_index ON passwordless_users (app_id, email);\nCREATE INDEX passwordless_users_phone_number_index ON passwordless_users (app_id, phone_number);\nCREATE INDEX passwordless_user_to_tenant_email_index ON passwordless_user_to_tenant (app_id, tenant_id, email);\nCREATE INDEX passwordless_user_to_tenant_phone_number_index ON passwordless_user_to_tenant (app_id, tenant_id, phone_number);\n\nCREATE INDEX thirdparty_user_to_tenant_third_party_user_id_index ON thirdparty_user_to_tenant (app_id, tenant_id, third_party_id, third_party_user_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Indexes for PostgreSQL in SuperTokens Core 10.0.1\nDESCRIPTION: SQL script to create indexes on various tables to improve query performance for account linking and user searches in PostgreSQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX IF NOT EXISTS emailpassword_users_email_index ON emailpassword_users (app_id, email);\nCREATE INDEX IF NOT EXISTS emailpassword_user_to_tenant_email_index ON emailpassword_user_to_tenant (app_id, tenant_id, email);\n\nCREATE INDEX IF NOT EXISTS passwordless_users_email_index ON passwordless_users (app_id, email);\nCREATE INDEX IF NOT EXISTS passwordless_users_phone_number_index ON passwordless_users (app_id, phone_number);\nCREATE INDEX IF NOT EXISTS passwordless_user_to_tenant_email_index ON passwordless_user_to_tenant (app_id, tenant_id, email);\nCREATE INDEX IF NOT EXISTS passwordless_user_to_tenant_phone_number_index ON passwordless_user_to_tenant (app_id, tenant_id, phone_number);\n\nCREATE INDEX IF NOT EXISTS thirdparty_user_to_tenant_third_party_user_id_index ON thirdparty_user_to_tenant (app_id, tenant_id, third_party_id, third_party_user_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Indexes for User Query Optimization in MySQL\nDESCRIPTION: SQL commands to create indexes on the app_id_to_user_id table to improve user query performance in MySQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX app_id_to_user_id_primary_user_id_index ON app_id_to_user_id (primary_or_recipe_user_id);\nCREATE INDEX app_id_to_user_id_user_id_index ON app_id_to_user_id (user_id);\n```\n\n----------------------------------------\n\nTITLE: Dropping Utility Stored Procedures in SQL\nDESCRIPTION: SQL commands to drop utility stored procedures that are no longer needed after completing the migration. These procedures were likely used during the migration process for handling foreign keys, indexes, and column additions.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_57\n\nLANGUAGE: sql\nCODE:\n```\nDROP PROCEDURE st_drop_all_fkeys;\n```\n\nLANGUAGE: sql\nCODE:\n```\nDROP PROCEDURE st_drop_all_keys;\n```\n\nLANGUAGE: sql\nCODE:\n```\nDROP PROCEDURE st_drop_all_pkeys;\n```\n\nLANGUAGE: sql\nCODE:\n```\nDROP PROCEDURE st_drop_all_indexes;\n```\n\nLANGUAGE: sql\nCODE:\n```\nDROP PROCEDURE st_add_column_if_not_exists;\n```\n\n----------------------------------------\n\nTITLE: Executing PostgreSQL Migration Script for SuperTokens 7.0.0 Upgrade\nDESCRIPTION: SQL migration script for PostgreSQL to update the database schema for SuperTokens 7.0.0. The script adds columns for user linking functionality, updates existing records, establishes foreign key constraints, and creates new indexes for optimized queries.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_18\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE all_auth_recipe_users\n  ADD COLUMN primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\nALTER TABLE all_auth_recipe_users\n  ADD COLUMN is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\nALTER TABLE all_auth_recipe_users\n  ADD COLUMN primary_or_recipe_user_time_joined BIGINT NOT NULL DEFAULT 0;\n\nUPDATE all_auth_recipe_users\n  SET primary_or_recipe_user_id = user_id\n  WHERE primary_or_recipe_user_id = '0';\n\nUPDATE all_auth_recipe_users\n  SET primary_or_recipe_user_time_joined = time_joined\n  WHERE primary_or_recipe_user_time_joined = 0;\n\nALTER TABLE all_auth_recipe_users\n  ADD CONSTRAINT all_auth_recipe_users_primary_or_recipe_user_id_fkey\n    FOREIGN KEY (app_id, primary_or_recipe_user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE all_auth_recipe_users\n  ALTER primary_or_recipe_user_id DROP DEFAULT;\n\nALTER TABLE app_id_to_user_id\n  ADD COLUMN primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\nALTER TABLE app_id_to_user_id\n  ADD COLUMN is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\nUPDATE app_id_to_user_id\n  SET primary_or_recipe_user_id = user_id\n  WHERE primary_or_recipe_user_id = '0';\n\nALTER TABLE app_id_to_user_id\n  ADD CONSTRAINT app_id_to_user_id_primary_or_recipe_user_id_fkey\n    FOREIGN KEY (app_id, primary_or_recipe_user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE app_id_to_user_id\n    ALTER primary_or_recipe_user_id DROP DEFAULT;\n\nDROP INDEX all_auth_recipe_users_pagination_index;\n\nCREATE INDEX all_auth_recipe_users_pagination_index1 ON all_auth_recipe_users (\n  app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_pagination_index2 ON all_auth_recipe_users (\n  app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_pagination_index3 ON all_auth_recipe_users (\n  recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_pagination_index4 ON all_auth_recipe_users (\n  recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\nCREATE INDEX all_auth_recipe_users_primary_user_id_index ON all_auth_recipe_users (primary_or_recipe_user_id, app_id);\n\nCREATE INDEX all_auth_recipe_users_recipe_id_index ON all_auth_recipe_users (app_id, recipe_id, tenant_id);\n\nALTER TABLE emailpassword_pswd_reset_tokens DROP CONSTRAINT IF EXISTS emailpassword_pswd_reset_tokens_user_id_fkey;\n\nALTER TABLE emailpassword_pswd_reset_tokens ADD CONSTRAINT emailpassword_pswd_reset_tokens_user_id_fkey FOREIGN KEY (app_id, user_id) REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE emailpassword_pswd_reset_tokens ADD COLUMN email VARCHAR(256);\n```\n\n----------------------------------------\n\nTITLE: Creating Index for User Roles in PostgreSQL\nDESCRIPTION: SQL script to create an index on the user_roles table for app_id and user_id columns in PostgreSQL.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX IF NOT EXISTS user_roles_app_id_user_id_index ON user_roles (app_id, user_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Index for User Roles in MySQL\nDESCRIPTION: SQL script to create an index on the user_roles table for app_id and user_id columns in MySQL.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX user_roles_app_id_user_id_index ON user_roles (app_id, user_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Index for User Last Active Time in PostgreSQL\nDESCRIPTION: SQL script to create an index on the last_active_time column in the user_last_active table to improve MAU computation performance in PostgreSQL.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX IF NOT EXISTS user_last_active_last_active_time_index ON user_last_active (last_active_time DESC, app_id DESC);\n```\n\n----------------------------------------\n\nTITLE: Dropping Foreign Key Constraint in PostgreSQL\nDESCRIPTION: SQL command to drop the foreign key constraint on the user_roles table in PostgreSQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE user_roles DROP CONSTRAINT IF EXISTS user_roles_role_fkey;\n```\n\n----------------------------------------\n\nTITLE: Altering totp_user_devices Table and Dropping Indexes in MySQL\nDESCRIPTION: SQL commands to add and modify the created_at column in the totp_user_devices table and drop specific indexes for MySQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE totp_user_devices\n    ADD COLUMN created_at BIGINT UNSIGNED default 0;\nALTER TABLE totp_user_devices\n    ALTER COLUMN created_at DROP DEFAULT;\nDROP INDEX all_auth_recipe_users_pagination_index2 ON all_auth_recipe_users;\nDROP INDEX all_auth_recipe_users_pagination_index4 ON all_auth_recipe_users;\n```\n\n----------------------------------------\n\nTITLE: Modifying Foreign Key Constraints in MySQL\nDESCRIPTION: SQL commands to drop and add foreign key constraints on the user_roles table in MySQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE user_roles DROP FOREIGN KEY user_roles_ibfk_1;\nALTER TABLE user_roles DROP FOREIGN KEY user_roles_ibfk_2;\nALTER TABLE user_roles\n    ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Creating Bulk Import Users Table for MySQL in SuperTokens Core 10.0.0\nDESCRIPTION: SQL script to create the bulk_import_users table and related indexes for bulk user import functionality in MySQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: sql\nCODE:\n```\nCREATE TABLE IF NOT EXISTS bulk_import_users (\n    id CHAR(36),\n    app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n    primary_user_id VARCHAR(36),\n    raw_data TEXT NOT NULL,\n    status VARCHAR(128) DEFAULT 'NEW',\n    error_msg TEXT,\n    created_at BIGINT UNSIGNED NOT NULL, \n    updated_at BIGINT UNSIGNED NOT NULL, \n    PRIMARY KEY (app_id, id),\n    FOREIGN KEY(app_id) REFERENCES apps(app_id) ON DELETE CASCADE\n);\n\nCREATE INDEX bulk_import_users_status_updated_at_index ON bulk_import_users (app_id, status, updated_at);\n\nCREATE INDEX bulk_import_users_pagination_index1 ON bulk_import_users (app_id, status, created_at DESC, id DESC);\n \nCREATE INDEX bulk_import_users_pagination_index2 ON bulk_import_users (app_id, created_at DESC, id DESC);\n\nCREATE INDEX session_info_user_id_app_id_index ON session_info (user_id, app_id);\n```\n\n----------------------------------------\n\nTITLE: Creating and Modifying Authentication Tables in MySQL\nDESCRIPTION: This snippet creates and modifies tables for authentication, including 'all_auth_recipe_users', 'tenant_configs', 'tenant_thirdparty_providers', and 'tenant_thirdparty_provider_clients'. It sets up primary keys, foreign keys, and indexes.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_37\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('all_auth_recipe_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('all_auth_recipe_users', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE all_auth_recipe_users\n  ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\nALTER TABLE all_auth_recipe_users\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nALTER TABLE all_auth_recipe_users\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\nCREATE INDEX all_auth_recipe_users_pagination_index ON all_auth_recipe_users (time_joined DESC, user_id DESC, tenant_id DESC, app_id DESC);\n\n-- Multitenancy\n\nCREATE TABLE IF NOT EXISTS tenant_configs (\n  connection_uri_domain VARCHAR(256) DEFAULT '',\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  core_config TEXT,\n  email_password_enabled BOOLEAN,\n  passwordless_enabled BOOLEAN,\n  third_party_enabled BOOLEAN\n);\n\nALTER TABLE tenant_configs\n  ADD PRIMARY KEY (connection_uri_domain, app_id, tenant_id);\n\n--\n\nCREATE TABLE IF NOT EXISTS tenant_thirdparty_providers (\n  connection_uri_domain VARCHAR(256) DEFAULT '',\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  third_party_id VARCHAR(28) NOT NULL,\n  name VARCHAR(64),\n  authorization_endpoint TEXT,\n  authorization_endpoint_query_params TEXT,\n  token_endpoint TEXT,\n  token_endpoint_body_params TEXT,\n  user_info_endpoint TEXT,\n  user_info_endpoint_query_params TEXT,\n  user_info_endpoint_headers TEXT,\n  jwks_uri TEXT,\n  oidc_discovery_endpoint TEXT,\n  require_email BOOLEAN,\n  user_info_map_from_id_token_payload_user_id VARCHAR(64),\n  user_info_map_from_id_token_payload_email VARCHAR(64),\n  user_info_map_from_id_token_payload_email_verified VARCHAR(64),\n  user_info_map_from_user_info_endpoint_user_id VARCHAR(64),\n  user_info_map_from_user_info_endpoint_email VARCHAR(64),\n  user_info_map_from_user_info_endpoint_email_verified VARCHAR(64)\n);\n\nALTER TABLE tenant_thirdparty_providers\n  ADD PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id);\n\nALTER TABLE tenant_thirdparty_providers\n  ADD FOREIGN KEY (connection_uri_domain, app_id, tenant_id)\n    REFERENCES tenant_configs (connection_uri_domain, app_id, tenant_id) ON DELETE CASCADE;\n\n--\n\nCREATE TABLE IF NOT EXISTS tenant_thirdparty_provider_clients (\n  connection_uri_domain VARCHAR(256) DEFAULT '',\n  app_id VARCHAR(64) DEFAULT 'public',\n  tenant_id VARCHAR(64) DEFAULT 'public',\n  third_party_id VARCHAR(28) NOT NULL,\n  client_type VARCHAR(64) NOT NULL DEFAULT '',\n  client_id VARCHAR(256) NOT NULL,\n  client_secret TEXT,\n  scope TEXT,\n  force_pkce BOOLEAN,\n  additional_config TEXT\n);\n\nALTER TABLE tenant_thirdparty_provider_clients\n  ADD PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id, client_type);\n\nALTER TABLE tenant_thirdparty_provider_clients\n  ADD FOREIGN KEY (connection_uri_domain, app_id, tenant_id, third_party_id)\n    REFERENCES tenant_thirdparty_providers (connection_uri_domain, app_id, tenant_id, third_party_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Creating and Modifying Session Tables in MySQL\nDESCRIPTION: This snippet modifies the 'session_info' table and creates the 'session_access_token_signing_keys' table for session management. It adds columns, sets up primary keys, foreign keys, and creates an index for session expiry.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_38\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('session_info', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('session_info', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE session_info\n  ADD PRIMARY KEY (app_id, tenant_id, session_handle);\n\nALTER TABLE session_info\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nCREATE INDEX session_expiry_index ON session_info (expires_at);\n\n--\n\nCALL st_add_column_if_not_exists('session_access_token_signing_keys', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE session_access_token_signing_keys\n  ADD PRIMARY KEY (app_id, created_at_time);\n\nALTER TABLE session_access_token_signing_keys\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Creating and Modifying JWT and Email Verification Tables in MySQL\nDESCRIPTION: This snippet modifies the 'jwt_signing_keys' table for JWT management and creates/modifies tables for email verification. It adds columns, sets up primary keys, foreign keys, and creates indexes.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_39\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('jwt_signing_keys', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE jwt_signing_keys\n  ADD PRIMARY KEY (app_id, key_id);\n\nALTER TABLE jwt_signing_keys\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\n-- EmailVerification\n\nCALL st_add_column_if_not_exists('emailverification_verified_emails', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE emailverification_verified_emails\n  ADD PRIMARY KEY (app_id, user_id, email);\n\nALTER TABLE emailverification_verified_emails\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\n--\n\nCALL st_add_column_if_not_exists('emailverification_tokens', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\nCALL st_add_column_if_not_exists('emailverification_tokens', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE emailverification_tokens\n  ADD PRIMARY KEY (app_id, tenant_id, user_id, email, token);\n\nALTER TABLE emailverification_tokens\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\nALTER TABLE emailverification_tokens\n  ADD CONSTRAINT token UNIQUE (token);\n\nCREATE INDEX emailverification_tokens_index ON emailverification_tokens(token_expiry);\n```\n\n----------------------------------------\n\nTITLE: Installing SuperTokens CLI\nDESCRIPTION: Java command to install the SuperTokens CLI tool manually during development.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\njava -classpath \"./cli/*\" io.supertokens.cli.Main true install\n```\n\n----------------------------------------\n\nTITLE: MySQL Stored Procedures for Constraint Management\nDESCRIPTION: MySQL stored procedures to handle dropping of foreign keys, primary keys, unique constraints and indexes across multiple authentication-related tables. These procedures are used for clean migration of database schema.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_33\n\nLANGUAGE: sql\nCODE:\n```\nDELIMITER //\n\nCREATE PROCEDURE st_drop_all_fkeys()\nBEGIN\n  DECLARE done INT DEFAULT FALSE;\n  DECLARE dropCommand VARCHAR(255);\n  DECLARE dropCur CURSOR for \n          SELECT concat('ALTER TABLE ', table_schema,'.',table_name,' DROP FOREIGN KEY ', constraint_name, ';') \n          FROM information_schema.table_constraints\n          WHERE constraint_type='FOREIGN KEY' \n              AND table_schema = DATABASE()\n              AND table_name in (\n                'all_auth_recipe_users',\n                'dashboard_user_sessions',\n                'dashboard_users',\n                'emailpassword_pswd_reset_tokens',\n                'emailpassword_users',\n                'emailverification_tokens',\n                'emailverification_verified_emails',\n                'jwt_signing_keys',\n                'key_value',\n                'passwordless_codes',\n                'passwordless_devices',\n                'passwordless_users',\n                'role_permissions',\n                'roles',\n                'session_access_token_signing_keys',\n                'session_info',\n                'thirdparty_users',\n                'totp_used_codes',\n                'totp_user_devices',\n                'totp_users',\n                'user_last_active',\n                'user_metadata',\n                'user_roles',\n                'userid_mapping'\n              );\n\n  DECLARE CONTINUE handler for NOT found SET done = true;\n    OPEN dropCur;\n\n    read_loop: LOOP\n        FETCH dropCur INTO dropCommand;\n        IF done THEN\n            leave read_loop;\n        END IF;\n\n        SET @sdropCommand = dropCommand;\n\n        PREPARE dropClientUpdateKeyStmt FROM @sdropCommand;\n\n        EXECUTE dropClientUpdateKeyStmt;\n\n        DEALLOCATE prepare dropClientUpdateKeyStmt;\n    END LOOP;\n\n    CLOSE dropCur;\nEND //\n```\n\n----------------------------------------\n\nTITLE: Modifying user_metadata Table in SQL\nDESCRIPTION: Alters the user_metadata table by adding an app_id column, updating the primary key, and creating a new index. It modifies the table to include app_id in its key relationship and adds a foreign key constraint to the apps table.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_29\n\nLANGUAGE: SQL\nCODE:\n```\nALTER TABLE user_metadata\n  ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\nALTER TABLE user_metadata\n  DROP CONSTRAINT user_metadata_pkey CASCADE;\n\nALTER TABLE user_metadata\n  ADD CONSTRAINT user_metadata_pkey \n    PRIMARY KEY (app_id, user_id);\n\nALTER TABLE user_metadata\n  DROP CONSTRAINT IF EXISTS user_metadata_app_id_fkey;\n\nALTER TABLE user_metadata\n  ADD CONSTRAINT user_metadata_app_id_fkey \n    FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n\nCREATE INDEX IF NOT EXISTS user_metadata_app_id_index ON user_metadata (app_id);\n```\n\n----------------------------------------\n\nTITLE: Creating Index for User Last Active Time in MySQL\nDESCRIPTION: SQL script to create an index on the last_active_time column in the user_last_active table to improve MAU computation performance in MySQL.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX user_last_active_last_active_time_index ON user_last_active (last_active_time DESC, app_id DESC);\n```\n\n----------------------------------------\n\nTITLE: Adding Primary and Foreign Keys to TOTP Tables in SQL\nDESCRIPTION: SQL commands to add primary and foreign key constraints to the totp_used_codes table, linking it to totp_users and tenants tables. This establishes proper relationships and cascade deletion behavior in the database schema.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_54\n\nLANGUAGE: sql\nCODE:\n```\nADD PRIMARY KEY (app_id, tenant_id, user_id, created_time_ms);\n```\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE totp_used_codes\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n```\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE totp_used_codes\n  ADD FOREIGN KEY (app_id, tenant_id)\n    REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Altering Passwordless Users Table\nDESCRIPTION: Adds an 'app_id' column to the 'passwordless_users' table, sets primary key, and adds a foreign key constraint.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_43\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('passwordless_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE passwordless_users\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE passwordless_users\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Altering EmailPassword Password Reset Tokens Table\nDESCRIPTION: Adds an 'app_id' column to the 'emailpassword_pswd_reset_tokens' table, sets primary key, adds foreign key constraint, and creates an index on token_expiry.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_42\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('emailpassword_pswd_reset_tokens', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE emailpassword_pswd_reset_tokens\n  ADD PRIMARY KEY (app_id, user_id, token);\n\nALTER TABLE emailpassword_pswd_reset_tokens\n  ADD FOREIGN KEY (app_id, user_id)\n    REFERENCES emailpassword_users (app_id, user_id) ON DELETE CASCADE;\n\nALTER TABLE emailpassword_pswd_reset_tokens\n  ADD CONSTRAINT token UNIQUE (token);\n\nCREATE INDEX emailpassword_password_reset_token_expiry_index ON emailpassword_pswd_reset_tokens (token_expiry);\n```\n\n----------------------------------------\n\nTITLE: Altering UserIdMapping Table\nDESCRIPTION: Adds an 'app_id' column to the 'userid_mapping' table, sets primary key, adds unique constraints, and foreign key constraint.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_49\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('userid_mapping', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE userid_mapping\n  ADD PRIMARY KEY (app_id, supertokens_user_id, external_user_id);\n\nALTER TABLE userid_mapping\n  ADD CONSTRAINT supertokens_user_id\n    UNIQUE (app_id, supertokens_user_id);\n\nALTER TABLE userid_mapping\n  ADD CONSTRAINT external_user_id\n    UNIQUE (app_id, external_user_id);\n\nALTER TABLE userid_mapping\n  ADD FOREIGN KEY (app_id, supertokens_user_id)\n    REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Altering UserMetadata Table\nDESCRIPTION: Adds an 'app_id' column to the 'user_metadata' table, sets primary key, and adds foreign key constraint.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_51\n\nLANGUAGE: sql\nCODE:\n```\nCALL st_add_column_if_not_exists('user_metadata', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\nALTER TABLE user_metadata\n  ADD PRIMARY KEY (app_id, user_id);\n\nALTER TABLE user_metadata\n  ADD FOREIGN KEY (app_id)\n    REFERENCES apps (app_id) ON DELETE CASCADE;\n```\n\n----------------------------------------\n\nTITLE: Altering totp_user_devices Table in PostgreSQL\nDESCRIPTION: SQL commands to add and modify the created_at column in the totp_user_devices table for PostgreSQL databases.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE totp_user_devices\n    ADD COLUMN IF NOT EXISTS created_at BIGINT default 0;\nALTER TABLE totp_user_devices\n    ALTER COLUMN created_at DROP DEFAULT;\n```\n\n----------------------------------------\n\nTITLE: Building React App for Production\nDESCRIPTION: This command builds the React application for production, creating optimized and minified files in the 'build' folder.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/test-data/playground/README.md#2025-04-21_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Creating Indexes for TOTP Used Codes Table in SQL\nDESCRIPTION: SQL command to create an index on the totp_used_codes table based on expiry_time_ms field. This index improves query performance when checking for expired TOTP codes.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/CHANGELOG.md#2025-04-21_snippet_55\n\nLANGUAGE: sql\nCODE:\n```\nCREATE INDEX totp_used_codes_expiry_time_ms_index ON totp_used_codes (app_id, tenant_id, expiry_time_ms);\n```\n\n----------------------------------------\n\nTITLE: Ejecting from Create React App\nDESCRIPTION: This command removes the single build dependency and copies all configuration files into the project, allowing for full customization. Note that this is a one-way operation.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/test-data/playground/README.md#2025-04-21_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nnpm run eject\n```\n\n----------------------------------------\n\nTITLE: HTML Table of Contributors with GitHub Profiles\nDESCRIPTION: Table layout showing contributor images, GitHub profile links and names in a grid format. Each cell contains a centered avatar image and contributor name formatted as a GitHub profile link.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\"><a href=\"https://github.com/rtpa25\"><img src=\"https://avatars.githubusercontent.com/u/72537293?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ronit Panda</b></sub></a></td>\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Contributors Table\nDESCRIPTION: HTML table structure that displays contributor information in a grid format with aligned cells containing profile images, links and names.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/rishabhpoddar\"><img src=\"https://avatars1.githubusercontent.com/u/2976287?s=460&u=d0cf2463df96fbdf1138cf74f88d7cf41415b238&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rishabh Poddar</b></sub></a></td>\n    <!-- Additional contributor cells -->\n  </tr>\n  <!-- Additional rows -->\n</table>\n```\n\n----------------------------------------\n\nTITLE: Setting Global Access Rules in robots.txt\nDESCRIPTION: Configures default access rules for web crawlers using the standard robots.txt format. This configuration allows all user agents (*) to access all content as there are no disallow rules specified.\nSOURCE: https://github.com/supertokens/supertokens-core/blob/master/test-data/playground/public/robots.txt#2025-04-21_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\n```"
  }
]
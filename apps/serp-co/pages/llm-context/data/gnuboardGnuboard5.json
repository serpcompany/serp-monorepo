[
  {
    "owner": "gnuboard",
    "repo": "gnuboard5",
    "content": "TITLE: Basic PHPMailer Configuration and Sending\nDESCRIPTION: This snippet demonstrates how to configure PHPMailer to send emails using SMTP. It includes setting up SMTP authentication, specifying the server, and composing the email with attachments and HTML content. It depends on the PHPMailerAutoload.php file to load the PHPMailer class.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/README.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nrequire 'PHPMailerAutoload.php';\n\n$mail = new PHPMailer;\n\n//$mail->SMTPDebug = 3;                               // Enable verbose debug output\n\n$mail->isSMTP();                                      // Set mailer to use SMTP\n$mail->Host = 'smtp1.example.com;smtp2.example.com';  // Specify main and backup SMTP servers\n$mail->SMTPAuth = true;                               // Enable SMTP authentication\n$mail->Username = 'user@example.com';                 // SMTP username\n$mail->Password = 'secret';                           // SMTP password\n$mail->SMTPSecure = 'tls';                            // Enable TLS encryption, `ssl` also accepted\n$mail->Port = 587;                                    // TCP port to connect to\n\n$mail->setFrom('from@example.com', 'Mailer');\n$mail->addAddress('joe@example.net', 'Joe User');     // Add a recipient\n$mail->addAddress('ellen@example.com');               // Name is optional\n$mail->addReplyTo('info@example.com', 'Information');\n$mail->addCC('cc@example.com');\n$mail->addBCC('bcc@example.com');\n\n$mail->addAttachment('/var/tmp/file.tar.gz');         // Add attachments\n$mail->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name\n$mail->isHTML(true);                                  // Set email format to HTML\n\n$mail->Subject = 'Here is the subject';\n$mail->Body    = 'This is the HTML message body <b>in bold!</b>';\n$mail->AltBody = 'This is the body in plain text for non-HTML mail clients';\n\nif(!$mail->send()) {\n    echo 'Message could not be sent.';\n    echo 'Mailer Error: ' . $mail->ErrorInfo;\n} else {\n    echo 'Message has been sent';\n}\n\n```\n\n----------------------------------------\n\nTITLE: Installing PHPMailer with Composer require command\nDESCRIPTION: This snippet shows how to install PHPMailer using the composer require command.  This is an alternative to adding the dependency directly to the composer.json file.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/README.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer require phpmailer/phpmailer\n```\n\n----------------------------------------\n\nTITLE: Installing PHPMailer with Composer\nDESCRIPTION: This snippet shows how to add PHPMailer as a dependency in your project using Composer.  It shows how to include the phpmailer package using semantic versioning, or how to require the package directly using the composer require command.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/README.md#_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n\"phpmailer/phpmailer\": \"~5.2\"\n```\n\n----------------------------------------\n\nTITLE: POP3 Authentication and Email Sending with PHPMailer in PHP\nDESCRIPTION: This code snippet demonstrates how to perform POP3 authentication before sending an email using PHPMailer. It initializes a POP3 object, authorizes the connection, configures PHPMailer with SMTP settings, and sends a test email. Error information is displayed if the email fails to send.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/docs/pop3_article.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n$pop->authorise('pop3.example.com', 110, 30, 'mailer', 'password', 1);\n$mail = new PHPMailer(); $mail->SMTPDebug = 2; $mail->isSMTP();\n$mail->isHTML(false); $mail->Host = 'relay.example.com';\n$mail->From = 'mailer@example.com';\n$mail->FromName = 'Example Mailer';\n$mail->Subject = 'My subject';\n$mail->Body = 'Hello world';\n$mail->addAddress('rich@corephp.co.uk', 'Richard Davey');\nif (!$mail->send()) {\n    echo $mail->ErrorInfo;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining Allowed URI Schemes\nDESCRIPTION: This snippet defines an array that serves as a whitelist for allowed URI schemes.  It specifies which schemes, such as 'http', 'https', etc., are permitted.  This prevents Cross-Site Scripting (XSS) attacks by disallowing potentially malicious schemes like 'javascript:'.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.AllowedSchemes.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray (\n  'http' => true,\n  'https' => true,\n  'mailto' => true,\n  'ftp' => true,\n  'nntp' => true,\n  'news' => true,\n  'tel' => true,\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring SMTP Debug Mode in PHP\nDESCRIPTION: This code snippet demonstrates how to enable and configure the SMTP debugging mode in PHP using the `$mail->SMTPDebug` property.  The debug level can be set to 0 (disable), 1 (errors and server responses), or 2 (errors, server responses, and client messages).  It also shows how to configure SMTP authentication, port, host, username, and password.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/docs/Note_for_SMTP_debugging.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$mail->SMTPDebug = 1;\n$mail->isSMTP();  // telling the class to use SMTP\n$mail->SMTPAuth   = true;                // enable SMTP authentication\n$mail->Port       = 26;                  // set the SMTP port\n$mail->Host       = \"mail.yourhost.com\"; // SMTP server\n$mail->Username   = \"name@yourhost.com\"; // SMTP account username\n$mail->Password   = \"your password\";     // SMTP account password\n```\n\n----------------------------------------\n\nTITLE: Making Authenticated Requests to Twitter API in PHP\nDESCRIPTION: Demonstrates making GET, POST, and DELETE requests to the Twitter API using the authenticated TwitterOAuth object. The API paths and parameters are directly copied from the Twitter API documentation.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n$account = $connection->get('account/verify_credentials');\n$status = $connection->post('statuses/update', array('status' => 'Text of status here', 'in_reply_to_status_id' => 123456));\n$status = $connection->delete('statuses/destroy/12345');\n```\n\n----------------------------------------\n\nTITLE: Initializing TwitterOAuth with Client Credentials in PHP\nDESCRIPTION: Creates a new TwitterOAuth object using the consumer key and secret obtained from registering an application with Twitter. This is the first step in the OAuth authentication flow.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET); // Use config.php client credentials\n$connection = new TwitterOAuth('abc890', '123xyz');\n```\n\n----------------------------------------\n\nTITLE: Securing DKIM Keys with .htaccess\nDESCRIPTION: This snippet demonstrates how to secure DKIM private and public key files by using .htaccess rules. It prevents direct access to files named '.htkeyprivate' and '.htkeypublic' by denying all access.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/docs/DomainKeys_notes.txt#_snippet_0\n\nLANGUAGE: Apache Configuration\nCODE:\n```\n<Files .htkeyprivate>\n  order allow,deny\n  deny from all\n</Files>\n\n# secure htkeypublic file\n<Files .htkeypublic>\n  order allow,deny\n  deny from all\n</Files>\n```\n\n----------------------------------------\n\nTITLE: Configuring Hidden HTML Elements Array (PHP)\nDESCRIPTION: This snippet defines an array that specifies which HTML elements should have their content removed when the elements themselves are not allowed by the HTML definition. This is useful for security and content filtering in GnuBoard 5. The 'script' and 'style' keys are set to true, indicating that the content of script and style tags should be removed when those tags are disallowed.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.HiddenElements.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray (\n  'script' => true,\n  'style' => true,\n)\n```\n\n----------------------------------------\n\nTITLE: Initializing TwitterOAuth with Token Credentials in PHP\nDESCRIPTION: A new TwitterOAuth object is created using the client credentials and the long-lasting token credentials (oauth_token and oauth_token_secret). This instance is used to make authenticated requests to the Twitter API.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n$connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET, $token_credentials['oauth_token'],\n    $token_credentials['oauth_token_secret']);\n```\n\n----------------------------------------\n\nTITLE: Requesting Temporary Credentials from Twitter API in PHP\nDESCRIPTION: Requests temporary credentials from Twitter, required to start the user authorization process. The oauth_callback parameter is essential for Twitter to redirect the user back to the application.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$temporary_credentials = $connection->getRequestToken(OAUTH_CALLBACK); // Use config.php callback URL.\n```\n\n----------------------------------------\n\nTITLE: Setting PHPMailer Language\nDESCRIPTION: This snippet shows how to set the language for PHPMailer error messages. It utilizes the setLanguage method to specify the language code and the path to the language file.  This helps in displaying error messages in the user's preferred language.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/README.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n// To load the French version\n$mail->setLanguage('fr', '/optional/path/to/language/directory/');\n```\n\n----------------------------------------\n\nTITLE: Getting Access Token Credentials from Twitter in PHP\nDESCRIPTION: Exchanges the temporary credentials for long-lasting token credentials using the oauth_verifier. These token credentials are specific to the user and application.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n$token_credentials = $connection->getAccessToken($_REQUEST['oauth_verifier']);\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Attribute with DefinitionID in HTML Purifier (PHP)\nDESCRIPTION: This code snippet demonstrates how to add a custom attribute to an HTML tag (<a> in this case) using the advanced API of HTML Purifier. It also shows how to set the HTML.DefinitionID to ensure that the changes are cached separately from the default configuration. The 'tabindex' attribute with type 'Number' is added to the 'a' tag.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionID.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$config = HTMLPurifier_Config::createDefault();\n$config->set('HTML', 'DefinitionID', '1');\n$def = $config->getHTMLDefinition();\n$def->addAttribute('a', 'tabindex', 'Number');\n```\n\n----------------------------------------\n\nTITLE: Generating Authorization URL for Twitter in PHP\nDESCRIPTION: Builds the authorization URL that redirects the user to Twitter for authentication and authorization. The temporary credentials are included in the URL. A second parameter allows for disabling the 'Sign in with Twitter' functionality.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n$redirect_url = $connection->getAuthorizeURL($temporary_credentials); // Use Sign in with Twitter\n$redirect_url = $connection->getAuthorizeURL($temporary_credentials, FALSE);\n```\n\n----------------------------------------\n\nTITLE: Enabling VERP in PHPMailer (PHP)\nDESCRIPTION: This code snippet demonstrates how to enable Variable Envelope Return Path (VERP) in PHPMailer. It requires instantiating the `class.smtp.php` class and setting the `$mail->do_verp` property to `true`. VERP is used to help identify the recipient of bounced emails.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/changelog.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$mail->do_verp = true;\n```\n\n----------------------------------------\n\nTITLE: Initializing TwitterOAuth with Temporary Credentials in PHP\nDESCRIPTION: After the user returns from Twitter, a new TwitterOAuth object is created using the previously obtained temporary credentials (oauth_token and oauth_token_secret) and the client credentials. These temporary credentials are used to obtain permanent access tokens.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n$connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET, $_SESSION['oauth_token'],\n    $_SESSION['oauth_token_secret']);\n```\n\n----------------------------------------\n\nTITLE: Extracting Style Blocks from HTML using HTMLPurifier\nDESCRIPTION: This PHP snippet demonstrates how to use HTMLPurifier with the ExtractStyleBlocks filter to extract style blocks from HTML, clean them using CSSTidy, and output them as external stylesheets. It requires the HTMLPurifier library and csstidy.class.php. The script sets up HTMLPurifier with the ExtractStyleBlocks filter enabled, purifies a dirty HTML string, and then saves the extracted styles to separate files in the 'styles/' directory, linking to these stylesheets in the HTML header.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n    header('Content-type: text/html; charset=utf-8');\n    echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\n<head>\n  <title>Filter.ExtractStyleBlocks</title>\n<?php\n    require_once '/path/to/library/HTMLPurifier.auto.php';\n    require_once '/path/to/csstidy.class.php';\n\n    $dirty = '<style>body {color:#F00;}</style> Some text';\n\n    $config = HTMLPurifier_Config::createDefault();\n    $config->set('Filter', 'ExtractStyleBlocks', true);\n    $purifier = new HTMLPurifier($config);\n\n    $html = $purifier->purify($dirty);\n\n    // This implementation writes the stylesheets to the styles/ directory.\n    // You can also echo the styles inside the document, but it's a bit\n    // more difficult to make sure they get interpreted properly by\n    // browsers; try the usual CSS armoring techniques.\n    $styles = $purifier->context->get('StyleBlocks');\n    $dir = 'styles/';\n    if (!is_dir($dir)) mkdir($dir);\n    $hash = sha1($_GET['html']);\n    foreach ($styles as $i => $style) {\n        file_put_contents($name = $dir . $hash . \"_$i\");\n        echo '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$name.'\" />';\n    }\n?>\n</head>\n<body>\n  <div>\n    <?php echo $html; ?>\n  </div>\n</b\n```\n\n----------------------------------------\n\nTITLE: Modifying TwitterOAuth Host for API Version in PHP\nDESCRIPTION: Modifies the host parameter of an existing TwitterOAuth object to use a specific version of the Twitter API. This example shows how to switch to version 1.1 of the API.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$connection->$host = \"https://api.twitter.com/1.1/\";\n```\n\n----------------------------------------\n\nTITLE: Defining Color Keyword Array in PHP\nDESCRIPTION: This code snippet defines a PHP array named 'Core.ColorKeywords' that maps color names (e.g., 'aliceblue', 'red') to their corresponding hexadecimal color codes (e.g., '#F0F8FF', '#FF0000'). The array is used for case-insensitive lookup of color values based on their names. It appears to be a constant definition or a static data structure.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.ColorKeywords.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray (\n  'aliceblue' => '#F0F8FF',\n  'antiquewhite' => '#FAEBD7',\n  'aqua' => '#00FFFF',\n  'aquamarine' => '#7FFFD4',\n  'azure' => '#F0FFFF',\n  'beige' => '#F5F5DC',\n  'bisque' => '#FFE4C4',\n  'black' => '#000000',\n  'blanchedalmond' => '#FFEBCD',\n  'blue' => '#0000FF',\n  'blueviolet' => '#8A2BE2',\n  'brown' => '#A52A2A',\n  'burlywood' => '#DEB887',\n  'cadetblue' => '#5F9EA0',\n  'chartreuse' => '#7FFF00',\n  'chocolate' => '#D2691E',\n  'coral' => '#FF7F50',\n  'cornflowerblue' => '#6495ED',\n  'cornsilk' => '#FFF8DC',\n  'crimson' => '#DC143C',\n  'cyan' => '#00FFFF',\n  'darkblue' => '#00008B',\n  'darkcyan' => '#008B8B',\n  'darkgoldenrod' => '#B8860B',\n  'darkgray' => '#A9A9A9',\n  'darkgrey' => '#A9A9A9',\n  'darkgreen' => '#006400',\n  'darkkhaki' => '#BDB76B',\n  'darkmagenta' => '#8B008B',\n  'darkolivegreen' => '#556B2F',\n  'darkorange' => '#FF8C00',\n  'darkorchid' => '#9932CC',\n  'darkred' => '#8B0000',\n  'darksalmon' => '#E9967A',\n  'darkseagreen' => '#8FBC8F',\n  'darkslateblue' => '#483D8B',\n  'darkslategray' => '#2F4F4F',\n  'darkslategrey' => '#2F4F4F',\n  'darkturquoise' => '#00CED1',\n  'darkviolet' => '#9400D3',\n  'deeppink' => '#FF1493',\n  'deepskyblue' => '#00BFFF',\n  'dimgray' => '#696969',\n  'dimgrey' => '#696969',\n  'dodgerblue' => '#1E90FF',\n  'firebrick' => '#B22222',\n  'floralwhite' => '#FFFAF0',\n  'forestgreen' => '#228B22',\n  'fuchsia' => '#FF00FF',\n  'gainsboro' => '#DCDCDC',\n  'ghostwhite' => '#F8F8FF',\n  'gold' => '#FFD700',\n  'goldenrod' => '#DAA520',\n  'gray' => '#808080',\n  'grey' => '#808080',\n  'green' => '#008000',\n  'greenyellow' => '#ADFF2F',\n  'honeydew' => '#F0FFF0',\n  'hotpink' => '#FF69B4',\n  'indianred' => '#CD5C5C',\n  'indigo' => '#4B0082',\n  'ivory' => '#FFFFF0',\n  'khaki' => '#F0E68C',\n  'lavender' => '#E6E6FA',\n  'lavenderblush' => '#FFF0F5',\n  'lawngreen' => '#7CFC00',\n  'lemonchiffon' => '#FFFACD',\n  'lightblue' => '#ADD8E6',\n  'lightcoral' => '#F08080',\n  'lightcyan' => '#E0FFFF',\n  'lightgoldenrodyellow' => '#FAFAD2',\n  'lightgray' => '#D3D3D3',\n  'lightgrey' => '#D3D3D3',\n  'lightgreen' => '#90EE90',\n  'lightpink' => '#FFB6C1',\n  'lightsalmon' => '#FFA07A',\n  'lightseagreen' => '#20B2AA',\n  'lightskyblue' => '#87CEFA',\n  'lightslategray' => '#778899',\n  'lightslategrey' => '#778899',\n  'lightsteelblue' => '#B0C4DE',\n  'lightyellow' => '#FFFFE0',\n  'lime' => '#00FF00',\n  'limegreen' => '#32CD32',\n  'linen' => '#FAF0E6',\n  'magenta' => '#FF00FF',\n  'maroon' => '#800000',\n  'mediumaquamarine' => '#66CDAA',\n  'mediumblue' => '#0000CD',\n  'mediumorchid' => '#BA55D3',\n  'mediumpurple' => '#9370DB',\n  'mediumseagreen' => '#3CB371',\n  'mediumslateblue' => '#7B68EE',\n  'mediumspringgreen' => '#00FA9A',\n  'mediumturquoise' => '#48D1CC',\n  'mediumvioletred' => '#C71585',\n  'midnightblue' => '#191970',\n  'mintcream' => '#F5FFFA',\n  'mistyrose' => '#FFE4E1',\n  'moccasin' => '#FFE4B5',\n  'navajowhite' => '#FFDEAD',\n  'navy' => '#000080',\n  'oldlace' => '#FDF5E6',\n  'olive' => '#808000',\n  'olivedrab' => '#6B8E23',\n  'orange' => '#FFA500',\n  'orangered' => '#FF4500',\n  'orchid' => '#DA70D6',\n  'palegoldenrod' => '#EEE8AA',\n  'palegreen' => '#98FB98',\n  'paleturquoise' => '#AFEEEE',\n  'palevioletred' => '#DB7093',\n  'papayawhip' => '#FFEFD5',\n  'peachpuff' => '#FFDAB9',\n  'peru' => '#CD853F',\n  'pink' => '#FFC0CB',\n  'plum' => '#DDA0DD',\n  'powderblue' => '#B0E0E6',\n  'purple' => '#800080',\n  'rebeccapurple' => '#663399',\n  'red' => '#FF0000',\n  'rosybrown' => '#BC8F8F',\n  'royalblue' => '#4169E1',\n  'saddlebrown' => '#8B4513',\n  'salmon' => '#FA8072',\n  'sandybrown' => '#F4A460',\n  'seagreen' => '#2E8B57',\n  'seashell' => '#FFF5EE',\n  'sienna' => '#A0522D',\n  'silver' => '#C0C0C0',\n  'skyblue' => '#87CEEB',\n  'slateblue' => '#6A5ACD',\n  'slategray' => '#708090',\n  'slategrey' => '#708090',\n  'snow' => '#FFFAFA',\n  'springgreen' => '#00FF7F',\n  'steelblue' => '#4682B4',\n  'tan' => '#D2B48C',\n  'teal' => '#008080',\n  'thistle' => '#D8BFD8',\n  'tomato' => '#FF6347',\n  'turquoise' => '#40E0D0',\n  'violet' => '#EE82EE',\n  'wheat' => '#F5DEB3',\n  'white' => '#FFFFFF',\n  'whitesmoke' => '#F5F5F5',\n  'yellow' => '#FFFF00',\n  'yellowgreen' => '#9ACD32'\n)\n```\n\n----------------------------------------\n\nTITLE: Generate Secure Checksum (hash_hmac) - PHP\nDESCRIPTION: This code snippet demonstrates how to generate a secure checksum for a URL using the hash_hmac function in PHP. It takes a URL and a secret key as input, calculates the SHA256 hash, and returns the checksum.  The checksum is used to verify the integrity of the URI after it has been processed by HTML Purifier.  It requires the hash_hmac function to be available.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.MungeSecretKey.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$checksum === hash_hmac(\"sha256\", $url, $secret_key)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom User Agent for TwitterOAuth in PHP\nDESCRIPTION: Sets a custom user agent string for the TwitterOAuth connection. This allows for identifying the application making requests to the Twitter API.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$connection->useragent = 'Custom useragent string';\n```\n\n----------------------------------------\n\nTITLE: Updating Git Remote URL - Shell Script\nDESCRIPTION: This command updates the remote URL of a Git repository. It is used to point the 'upstream' remote to the new GitHub location after the project moved to the PHPMailer GitHub organization. This ensures that users can fetch and push changes to the correct repository.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/PHPMailer/README.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ngit remote set-url upstream https://github.com/PHPMailer/PHPMailer.git\n```\n\n----------------------------------------\n\nTITLE: Verifying SSL Certificate for TwitterOAuth in PHP\nDESCRIPTION: Enables SSL certificate verification for the TwitterOAuth connection. This ensures that the connection to Twitter is secure and that the server's certificate is valid.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/sns/twitter/README.md#_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$connection->ssl_verifypeer = TRUE;\n```\n\n----------------------------------------\n\nTITLE: Defining HTML Core Modules in PHP\nDESCRIPTION: This snippet configures the core HTML modules required for XHTML doctypes within GnuBoard. It defines an array specifying which modules are essential for a conforming document type. By default, 'Structure', 'Text', 'Hypertext', 'List', 'NonXMLCommonAttributes', 'XMLCommonAttributes', and 'CommonAttributes' are enabled.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/plugin/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.CoreModules.txt#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\narray (\n  'Structure' => true,\n  'Text' => true,\n  'Hypertext' => true,\n  'List' => true,\n  'NonXMLCommonAttributes' => true,\n  'XMLCommonAttributes' => true,\n  'CommonAttributes' => true,\n)\n```\n\n----------------------------------------\n\nTITLE: Applying LGPL Notices to a Library\nDESCRIPTION: This snippet demonstrates how to attach copyright notices to a library to license it under the GNU Lesser General Public License (LGPL). It includes the copyright line, license terms, warranty disclaimer, and contact information for the Free Software Foundation.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/lib/PHPExcel/Shared/PCLZip/gnu-lgpl.txt#_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n```\n\n----------------------------------------\n\nTITLE: Adding LGPL Notice to Source File\nDESCRIPTION: This snippet demonstrates the text to include at the beginning of each source file when applying the GNU Lesser General Public License. It includes a copyright notice, license terms, warranty disclaimer, and contact information for the Free Software Foundation.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/LICENSE.txt#_snippet_2\n\nLANGUAGE: text\nCODE:\n```\none line to give the library's name and an idea of what it does.\nCopyright (C) year  name of author\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n```\n\n----------------------------------------\n\nTITLE: Copyright Disclaimer Sample\nDESCRIPTION: This snippet is a sample copyright disclaimer for a library.  It shows how an employer can disclaim copyright interest in a library written by an employee.  The snippet includes placeholders for the company name, library name, author name, and signature.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/LICENSE.txt#_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nYoyodyne, Inc., hereby disclaims all copyright interest in\nthe library `Frob' (a library for tweaking knobs) written\nby James Random Hacker.\n\nsignature of Ty Coon, 1 April 1990\nTy Coon, President of Vice\n```\n\n----------------------------------------\n\nTITLE: Adding LGPL Notice to New Library (Korean)\nDESCRIPTION: This snippet demonstrates how to add the LGPL license notice to a new library's source code files.  It includes copyright information, licensing details referencing the GNU Lesser General Public License, and a disclaimer of warranty.  It also includes information on how to contact the library's distributors and how to obtain a copyright disclaimer from the author's employer if applicable.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/LICENSE.txt#_snippet_0\n\nLANGUAGE: ko\nCODE:\n```\n라이브러리의 이름과 용도를 한 줄 정도로 설명합니다.\nCopyright (C) 20yy년 <프로그램 저작자의 이름>\n이 라이브러리는 자유 소프트웨어입니다. 소프트웨어의 피양도자는 자유 소프트웨어 재단이 공표한 GNU 약소 일반 공중 사용 허가서 2.1판 또는 그 이후 판을 임의로 선택해서, 그 규정에 따라 라이브러리를 개작하거나 재배포할 수 있습니다.\n이 라이브러리는 유용하게 사용될 수 있으리라는 희망에서 배포되고 있지만, 특정한 목적에 맞는 적합성 여부나 판매용으로 사용할 수 있으리라는 묵시적인 보증을 포함한 어떠한 형태의 보증도 제공하지 않습니다. 보다 자세한 사항에 대해서는 GNU 약소 일반 공중 사용 허가서를 참고하시기 바랍니다.\nGNU 약소 일반 공중 사용 허가서는 이 라이브러리와 함께 제공됩니다. 만약, 이 문서가 누락되어 있다면 자유 소프트웨어 재단으로 문의하시기 바랍니다. (자유 소프트웨어 재단: Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA)\n또한, 사용자들이 라이브러리를 배포한 사람에게 전자 메일과 서면으로 연락할 수 있는 정보를 추가해야 합니다.\n만약, 라이브러리의 저작자가 학교나 기업과 같은 단체나 기관에 프로그래머로 고용되어 있다면 라이브러리의 자유로운 배포를 위해서 고용주나 해당 기관장으로부터 라이브러리에 대한 저작권 포기 각서를 받아야 합니다. 예를 들면 다음과 같은 형식이 될 수 있다. (아래의 문구를 실제로 사용할 경우에는 예로 사용된 이름들을 실제 이름으로 대체하면 됩니다.)\n본사는 제임스 해커가 만든 (설정 옵션을 조정하기 위한) `Frob' 라이브러리에 관련된 모든 저작권을 포기합니다.\n1990년 4월 1일\nYoyodye, Inc., 부사장: Ty Coon\n서명: Ty Coon의 서명\n```\n\n----------------------------------------\n\nTITLE: GNU Lesser General Public License Header\nDESCRIPTION: This snippet is the standard header for the GNU Lesser General Public License, Version 2.1. It includes the copyright notice, the address of the Free Software Foundation, and a statement granting permission to copy and distribute verbatim copies of the license document.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/LICENSE.txt#_snippet_1\n\nLANGUAGE: en\nCODE:\n```\nGNU LESSER GENERAL PUBLIC LICENSE\n\nVersion 2.1, February 1999\nCopyright (C) 1991, 1999 Free Software Foundation, Inc.\n51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n```\n\n----------------------------------------\n\nTITLE: Copyright Disclaimer Example\nDESCRIPTION: This snippet provides an example of a copyright disclaimer that an employer or school can sign to disclaim copyright interest in a library.  It shows the format for the disclaimer, including the company name, library name, author, signature, and title.\nSOURCE: https://github.com/gnuboard/gnuboard5/blob/master/lib/PHPExcel/Shared/PCLZip/gnu-lgpl.txt#_snippet_1\n\nLANGUAGE: Text\nCODE:\n```\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n```"
  }
]
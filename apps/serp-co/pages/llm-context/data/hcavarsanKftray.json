[
  {
    "owner": "hcavarsan",
    "repo": "kftray",
    "content": "TITLE: JSON Configuration Format for KFtui Port Forwarding\nDESCRIPTION: Example JSON configuration format for defining a Kubernetes port forward in KFtui, including service details, namespace, ports, context, and domain settings.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/USAGE.md#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"service\": \"productpage\",\n  \"namespace\": \"bookinfo\",\n  \"local_port\": 9080,\n  \"remote_port\": 9080,\n  \"context\": \"kind-kind-rc-version\",\n  \"workload_type\": \"service\",\n  \"protocol\": \"tcp\",\n  \"alias\": \"bookinfo\",\n  \"domain_enabled\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Sample Kftray Configuration JSON\nDESCRIPTION: Example JSON configuration file for Kftray. It includes multiple port forwarding setups for different services, pods, and proxies across various protocols and ports.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/USAGE.md#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n[\n {\n   \"alias\": \"service-tcp-8080\",\n   \"context\": \"kind\",\n   \"kubeconfig\": \"/Users/henrique/.kube/config.bkp\",\n   \"local_port\": 8080,\n   \"namespace\": \"argocd\",\n   \"protocol\": \"tcp\",\n   \"remote_port\": 8080,\n   \"service\": \"argocd-server\",\n   \"workload_type\": \"service\"\n },\n {\n   \"alias\": \"pod-tcp-8083\",\n   \"context\": \"kind\",\n   \"kubeconfig\": \"/Users/henrique/.kube/config.bkp\",\n   \"local_port\": 8083,\n   \"namespace\": \"argocd\",\n   \"protocol\": \"tcp\",\n   \"remote_port\": 8083,\n   \"target\": \"app.kubernetes.io/component=server\",\n   \"workload_type\": \"pod\"\n },\n {\n   \"alias\": \"proxy-udp-5353\",\n   \"context\": \"kind\",\n   \"kubeconfig\": \"/Users/henrique/.kube/config.bkp\",\n   \"local_port\": 5353,\n   \"namespace\": \"argocd\",\n   \"protocol\": \"udp\",\n   \"remote_address\": \"coredns.cluster.local.internal\",\n   \"remote_port\": 5353,\n   \"workload_type\": \"proxy\"\n },\n {\n   \"alias\": \"proxy-tcp-6443\",\n   \"context\": \"kind\",\n   \"kubeconfig\": \"/Users/henrique/.kube/config.bkp\",\n   \"local_port\": 8777,\n   \"namespace\": \"argocd\",\n   \"protocol\": \"tcp\",\n   \"remote_address\": \"test.homelab.cluster.internal\",\n   \"remote_port\": 80,\n   \"workload_type\": \"proxy\"\n }\n  ]\n```\n\n----------------------------------------\n\nTITLE: Configuring KFtray Server with Environment Variables\nDESCRIPTION: Configuration options for KFtray Server using environment variables to specify target server details, listening port, and proxy type (TCP or UDP).\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/crates/kftray-server/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nREMOTE_ADDRESS=target.host    # The address of your target server\nREMOTE_PORT=8080             # The port on your target server\nLOCAL_PORT=8080             # The port KFtray listens on\nPROXY_TYPE=tcp             # Either 'tcp' or 'udp'\n```\n\n----------------------------------------\n\nTITLE: JSON Format for Exporting Multiple KFtui Configurations\nDESCRIPTION: Example of the JSON format used when exporting multiple port forwarding configurations from KFtui, showing a complete configuration with all available parameters.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/USAGE.md#2025-04-23_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n[\n  {\n    \"service\": \"argocd-server\",\n    \"namespace\": \"argocd\",\n    \"local_port\": 8888,\n    \"remote_port\": 8080,\n    \"context\": \"test-cluster\",\n    \"workload_type\": \"service\",\n    \"protocol\": \"tcp\",\n    \"remote_address\": \"\",\n    \"local_address\": \"127.0.0.1\",\n    \"alias\": \"argocd\",\n    \"domain_enabled\": true\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Installing kftray on macOS using Homebrew\nDESCRIPTION: Commands to install kftray on macOS using Homebrew. This involves tapping the kftray repository and installing the cask version of kftray.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/INSTALL.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbrew tap hcavarsan/kftray\nbrew install --cask kftray\n```\n\n----------------------------------------\n\nTITLE: Installing kftray on Linux using Homebrew\nDESCRIPTION: Commands to install kftray on Linux using Homebrew. This involves tapping the kftray repository and installing the Linux-specific version of kftray.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/INSTALL.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew tap hcavarsan/kftray\nbrew install kftray-linux\n```\n\n----------------------------------------\n\nTITLE: Installing kftui using curl in Bash Shell\nDESCRIPTION: Command to install kftui on Unix-like systems (Linux, macOS, WSL) using curl with Bash shell. This downloads and executes the installation script directly.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/INSTALL.md#2025-04-23_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbash <(curl -s https://raw.githubusercontent.com/hcavarsan/kftray/main/hacks/kftui_installer.sh)\n```\n\n----------------------------------------\n\nTITLE: Visualizing Direct TCP Forwarding Flow in Kubernetes\nDESCRIPTION: Illustrates the direct TCP socket connection between an application and a Kubernetes pod. This approach enables parallel execution and improved resilience by establishing a direct communication pathway.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/ARCH.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\nApplication->>Kubernetes Pod: Opens TCP socket, starts port-forwarding\nKubernetes Pod-->>Application: Responds with TCP Packet\n```\n\n----------------------------------------\n\nTITLE: Visualizing Proxy TCP Forwarding Flow with KFtray Server\nDESCRIPTION: Shows how an application connects to the kftray-server pod which relays TCP packets to an upstream server. This introduces an intermediary component that handles the connection between the application and the remote service.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/ARCH.md#2025-04-23_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\nApplication->>Kubernetes Pod: Socket to kftray-server, facilitates TCP relay\nKubernetes Pod->>Remote Service: Relays TCP Packet\nRemote Service-->>Kubernetes Pod: Responds\nKubernetes Pod-->>Application: Returns TCP Packet\n```\n\n----------------------------------------\n\nTITLE: Visualizing UDP Forwarding Flow with TCP Conversion\nDESCRIPTION: Demonstrates how KFtray handles UDP traffic by converting it to TCP for transmission. The client opens both UDP and TCP sockets, with the TCP socket sending UDP packets to the kftray-server which converts and forwards them to the upstream service.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/ARCH.md#2025-04-23_snippet_2\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\nApplication->>Kubernetes Pod: UDP socket, TCP port-forward to kftray-server\nKubernetes Pod->>Service/Remote: Converts to UDP, sends packet\nService/Remote-->>Kubernetes Pod: Responds with UDP Packet\nKubernetes Pod-->>Application: Relays as TCP\n```\n\n----------------------------------------\n\nTITLE: Deploying KFtray Server with Docker\nDESCRIPTION: Command for running KFtray Server in a Docker container with the necessary environment variables and port mapping.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/crates/kftray-server/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -e REMOTE_ADDRESS=target.host \\\n          -e REMOTE_PORT=8080 \\\n          -e LOCAL_PORT=8080 \\\n          -e PROXY_TYPE=tcp \\\n          -p 8080:8080 \\\n          kftray-server\n```\n\n----------------------------------------\n\nTITLE: Installing kftui on Windows using PowerShell\nDESCRIPTION: Command to install kftui on Windows using PowerShell. This downloads and executes the PowerShell installation script.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/INSTALL.md#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/hcavarsan/kftray/main/hacks/kftui_installer.ps1'))\n```\n\n----------------------------------------\n\nTITLE: Installing kftui using curl in Fish Shell\nDESCRIPTION: Command to install kftui on Unix-like systems using curl with Fish shell. This downloads the installation script and pipes it to bash for execution.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/INSTALL.md#2025-04-23_snippet_1\n\nLANGUAGE: fish\nCODE:\n```\ncurl -s https://raw.githubusercontent.com/hcavarsan/kftray/main/hacks/kftui_installer.sh | bash\n```\n\n----------------------------------------\n\nTITLE: Installing kftui using wget in Bash Shell\nDESCRIPTION: Command to install kftui on Unix-like systems using wget with Bash shell. This downloads and executes the installation script directly.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/INSTALL.md#2025-04-23_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nbash <(wget -qO- https://raw.githubusercontent.com/hcavarsan/kftray/main/hacks/kftui_installer.sh)\n```\n\n----------------------------------------\n\nTITLE: Installing kftui using wget in Fish Shell\nDESCRIPTION: Command to install kftui on Unix-like systems using wget with Fish shell. This downloads the installation script and pipes it to bash for execution.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/INSTALL.md#2025-04-23_snippet_3\n\nLANGUAGE: fish\nCODE:\n```\nwget -qO- https://raw.githubusercontent.com/hcavarsan/kftray/main/hacks/kftui_installer.sh | bash\n```\n\n----------------------------------------\n\nTITLE: Granting Write Permissions to Hosts File (MacOS/Linux)\nDESCRIPTION: Command to allow read and write access to the hosts file on MacOS and Linux systems. This is necessary for using the alias feature with local domain names in Kftray.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/USAGE.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo chmod ugo+rw /etc/hosts\n```\n\n----------------------------------------\n\nTITLE: Granting Write Permissions to Hosts File (Windows)\nDESCRIPTION: Command to allow write access to the hosts file on Windows systems. This is required for using the alias feature with local domain names in Kftray.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/USAGE.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nicacls \"C:\\Windows\\System32\\drivers\\etc\\hosts\" /grant Everyone:(R,W)\n```\n\n----------------------------------------\n\nTITLE: Grant Write Permissions to Hosts File in MacOS/Linux\nDESCRIPTION: Command for MacOS and Linux to grant read and write permissions to the hosts file, enabling domain name aliases for KFtui.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/USAGE.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo chmod ugo+rw /etc/hosts\n```\n\n----------------------------------------\n\nTITLE: Launching KFtui Application in Bash\nDESCRIPTION: Command to launch the KFtui (Kubernetes Forwarding TUI) application in a terminal.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/USAGE.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkftui\n```\n\n----------------------------------------\n\nTITLE: Grant Write Permissions to Hosts File in Windows\nDESCRIPTION: Windows command to grant read and write permissions to the hosts file, enabling domain name aliases for KFtui.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/USAGE.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nicacls \"C:\\Windows\\System32\\drivers\\etc\\hosts\" /grant Everyone:(R,W)\n```\n\n----------------------------------------\n\nTITLE: Visualizing UDP Mode Flow in KFtray Server\nDESCRIPTION: A mermaid diagram illustrating the UDP mode operation, where the server accepts TCP connections from clients and converts them to UDP packets before forwarding to the target server.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/crates/kftray-server/README.md#2025-04-23_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    subgraph UDP Mode\n        D[Kftray App] -->|TCP Connection| E[KFtray Server]\n        E -->|UDP Packets| F[Target Server]\n    end\n```\n\n----------------------------------------\n\nTITLE: Visualizing TCP Mode Flow in KFtray Server\nDESCRIPTION: A mermaid diagram showing the flow of traffic in TCP mode, where KFtray Server creates a direct connection between the client and target server, forwarding all traffic between them.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/crates/kftray-server/README.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    subgraph TCP Mode\n        A[Kftray App] -->|TCP| B[KFtray Server]\n        B -->|TCP| C[Target Server]\n    end\n```\n\n----------------------------------------\n\nTITLE: Building kftray for Production\nDESCRIPTION: Command to create a production-ready build of the kftray application using the Tauri CLI through pnpm.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/BUILD.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm tauri build\n```\n\n----------------------------------------\n\nTITLE: Running kftray in Development Mode\nDESCRIPTION: Command to launch the kftray application in development mode using the Tauri CLI through pnpm.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/BUILD.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm tauri dev\n```\n\n----------------------------------------\n\nTITLE: Verifying kftui installation\nDESCRIPTION: Command to verify that kftui was installed correctly. This should be run after installation and terminal restart.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/INSTALL.md#2025-04-23_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nkftui\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all required dependencies for the kftray application using pnpm package manager.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/BUILD.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloning the kftray Repository\nDESCRIPTION: Command to clone the kftray application repository from GitHub to your local machine.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/BUILD.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/hcavarsan/kftray.git\n```\n\n----------------------------------------\n\nTITLE: Building the kftui Application with Cargo\nDESCRIPTION: Command to build an optimized release version of the kftui application using Cargo.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/BUILD.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncargo build --release --bin kftui\n```\n\n----------------------------------------\n\nTITLE: Running the Compiled kftui Application\nDESCRIPTION: Commands to run the compiled kftui application, either directly or using Cargo.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/BUILD.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./target/release/kftui\n# OR\ncargo run --bin kftui\n```\n\n----------------------------------------\n\nTITLE: Updating Cargo Dependencies\nDESCRIPTION: Command to update all dependencies in the Cargo.lock file to their latest compatible versions.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/BUILD.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncargo update\n```\n\n----------------------------------------\n\nTITLE: Cloning the kftui Repository using Git\nDESCRIPTION: Command to clone the kftui repository from GitHub using Git.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/BUILD.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/hcavarsan/kftray.git\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Project Directory\nDESCRIPTION: Command to change the current directory to the cloned kftray repository.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftray/BUILD.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd kftray\n```\n\n----------------------------------------\n\nTITLE: Navigating to the kftui Directory\nDESCRIPTION: Command to change the current directory to the cloned kftui project folder.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/docs/kftui/BUILD.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd kftray\n```\n\n----------------------------------------\n\nTITLE: License Header Template for Source Files\nDESCRIPTION: Standard GPL license header template customized for the kftray project, intended to be placed at the start of each source file.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/LICENSE.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n    kftray - kubectl port-forward manager\n    Copyright (C) 2023–2024 Henrique Cavarsan\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: Interactive Mode Copyright Notice\nDESCRIPTION: Short copyright and warranty notice to be displayed when the program starts in interactive mode.\nSOURCE: https://github.com/hcavarsan/kftray/blob/main/LICENSE.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n    kftray Copyright (C) 2023–2024 Henrique Cavarsan\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n```"
  }
]
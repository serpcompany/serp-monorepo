[
  {
    "owner": "tavernari",
    "repo": "stringcontainsoperators",
    "content": "TITLE: Basic Usage Examples of StringContainsOperators in Swift\nDESCRIPTION: A comprehensive example showing different combinations of operators for string searching, including OR, AND, case-insensitive searches, and negation operations.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: swift\nCODE:\n```\nimport StringContainsOperators\n\nlet text = \"The quick brown fox jumps over the lazy dog.\"\n\n// Check if text contains \"quick\" OR \"jumps\"\nlet result1 = try text.contains(\"quick\" || \"jumps\")\nprint(result1) // true\n\n// Check if text contains \"fox\" AND \"dog\"\nlet result2 = try text.contains(\"fox\" && \"dog\")\nprint(result2) // true\n\n// Check if text contains \"fox\" AND (\"jumps\" OR \"swift\")\nlet result3 = try text.contains(\"fox\" && (\"jumps\" || \"swift\"))\nprint(result3) // true\n\n// Check if text contains \"Brown\" OR \"red\" case insensitively and without diacritics\nlet result4 = try text.contains(~\"Brown\" || ~\"red\")\nprint(result4) // true\n\n// Check if text contains \"fox\" AND (\"Jumps\" OR \"swift\") case insensitively and without diacritics\nlet result5 = try text.contains(~\"fox\" && (~\"Jumps\" || ~\"swift\"))\nprint(result5) // true\n\n// Check if text does NOT contain \"cat\" AND \"bird\"\nlet result6 = try text.contains(!(\"cat\" && \"bird)\"\nprint(result6) // true\n\n// Check if text does NOT contain \"brown\"\nlet result7 = try text.contains(!\"brown\")\nprint(result7) // false\n\n// Check if text does NOT contain \"cat\" case insensitively and without diacritics\nlet result8 = try text.contains(!~\"cat\")\nprint(result8) // true\n\n// Check if text contains \"quick\" OR \"jumps\" AND \"fox\" using a regular expression\nlet result9 = try text.contains(=~\"(quick|jumps).*fox\")\nprint(result9) // true\n\n// Check if text contains \"jumps\" OR \"swift\" AND \"fox\" using a regular expression\nlet result10 = try text.contains(=~\"(jumps|swift).*fox\")\nprint(result10) // true\n```\n\n----------------------------------------\n\nTITLE: Complex Filtering Example with StringContainsOperators in Swift\nDESCRIPTION: A real-world example showing how to use multiple operators to filter a collection of book objects based on their genre attributes, combining case-insensitive searches with logical operators.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: swift\nCODE:\n```\nimport StringContainsOperators\n\nstruct Book {\n    let title: String\n    let genre: String\n}\n\nlet books = [\n    Book(title: \"The Lord of the Rings\", genre: \"fantasy\"),\n    Book(title: \"Harry Potter and the Philosopher's Stone\", genre: \"fantasy\"),\n    Book(title: \"The Hitchhiker's Guide to the Galaxy\", genre: \"science fiction\"),\n    Book(title: \"The Shining\", genre: \"horror\"),\n    Book(title: \"The Silence of the Lambs\", genre: \"thriller\")\n]\n\nlet searchCondition = (~\"Fantasy\" || ~\"Science Fiction\") && !(~\"Horror\" || ~\"Thriller\")\n\nlet filteredTitles = try books\n   .filter { book in try book.genre.contains(searchCondition) }\n   .map { $0.title }\n\nprint(filteredTitles) // [\"The Lord of the Rings\", \"Harry Potter and the Philosopher's Stone\", \"The Hitchhiker's Guide to the Galaxy\"]\n```\n\n----------------------------------------\n\nTITLE: Using Regular Expressions with StringContainsOperators in Swift\nDESCRIPTION: Demonstrates how to use the '=~' operator to create a regular expression search pattern. Compares native Swift implementation with the StringContainsOperators implementation.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: swift\nCODE:\n```\n// Swift native implementation\nlet pattern = \"(quick|jumps).*fox\"\nlet regex = try NSRegularExpression(pattern: pattern, options: [.caseInsensitive])\nlet range = NSRange(location: 0, length: text.utf16.count)\nlet result = regex.firstMatch(in: text, options: [], range: range) != nil\n\n// StringContainsOperators implementation\nlet result = try text.contains(=~\"(quick|jumps).*fox\")\n```\n\n----------------------------------------\n\nTITLE: Regular Expression Filtering with StringContainsOperators in Swift\nDESCRIPTION: An example demonstrating how to use regular expressions with StringContainsOperators to filter a collection of email addresses based on a pattern, using the =~ operator.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: swift\nCODE:\n```\nimport StringContainsOperators\n\nlet emailAddresses = [\n    \"johndoe@gmail.com\",\n    \"jane_doe@hotmail.com\",\n    \"johndoe123@yahoo.com\",\n    \"johndoe@gmail.com.br\",\n    \"johndoe123@gmail.com\"\n]\n\nlet searchCondition = =~\"^.*gmail\\\\.com$\"\n\nlet filteredEmails = try emailAddresses.filter { email in\n    return try email.contains(searchCondition)\n}\n\nprint(filteredEmails) // [\"johndoe@gmail.com\"]\n```\n\n----------------------------------------\n\nTITLE: Using OR Operator for String Searching in Swift\nDESCRIPTION: Demonstrates how to use the '||' operator to perform a logical OR operation between two strings when searching. Compares native Swift implementation with the StringContainsOperators implementation.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: swift\nCODE:\n```\n// Swift native implementation\nlet result = text.contains(\"quick\") || text.contains(\"jumps\")\n\n// StringContainsOperators implementation\nlet result = try text.contains(\"quick\" || \"jumps\")\n```\n\n----------------------------------------\n\nTITLE: Using AND Operator for String Searching in Swift\nDESCRIPTION: Shows how to use the '&&' operator to perform a logical AND operation between two strings when searching. Compares native Swift implementation with the StringContainsOperators implementation.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: swift\nCODE:\n```\n// Swift native implementation\nlet result = text.contains(\"fox\") && text.contains(\"dog\")\n\n// StringContainsOperators implementation\nlet result = try text.contains(\"fox\" && \"dog\")\n```\n\n----------------------------------------\n\nTITLE: Using Case-Insensitive Search in Swift with StringContainsOperators\nDESCRIPTION: Demonstrates how to use the '~' operator to create a case-insensitive and diacritic-insensitive search pattern. Compares native Swift implementation with the StringContainsOperators implementation.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: swift\nCODE:\n```\n// Swift native implementation\nlet options: String.CompareOptions = [.caseInsensitive, .diacriticInsensitive]\nlet result = text.range(of: \"Brown\", options: options) != nil || text.range(of: \"red\", options: options) != nil\n\n\n// StringContainsOperators implementation\nlet result = try text.contains(~\"Brown\" || ~\"red\")\n```\n\n----------------------------------------\n\nTITLE: Using Negation Operator for String Searching in Swift\nDESCRIPTION: Shows how to use the '!' operator to negate a string predicate or a simple string search. Compares native Swift implementation with the StringContainsOperators implementation.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: swift\nCODE:\n```\n// Swift native implementation\nlet result = !(text.contains(\"cat\") && text.contains(\"bird\"))\n\n// StringContainsOperators implementation\nlet result = try text.contains(!(\"cat\" && \"bird\"))\n```\n\n----------------------------------------\n\nTITLE: Installing StringContainsOperators with Swift Package Manager\nDESCRIPTION: Instructions for installing the StringContainsOperators library using Swift Package Manager by adding the package dependency to a Package.swift file.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: swift\nCODE:\n```\n.package(url: \"https://github.com/Tavernari/StringContainsOperators.git\", from: \"1.3.0\")\n```\n\n----------------------------------------\n\nTITLE: Installing StringContainsOperators with CocoaPods\nDESCRIPTION: Instructions for installing the StringContainsOperators library using CocoaPods by adding a dependency specification to a Podfile.\nSOURCE: https://github.com/tavernari/stringcontainsoperators/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: ruby\nCODE:\n```\npod 'StringContainsOperators', '~> 1.3'\n```"
  }
]
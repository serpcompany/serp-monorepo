[
  {
    "owner": "laradock",
    "repo": "laradock",
    "content": "TITLE: Removing All Docker Containers in Laradock\nDESCRIPTION: Command to stop and remove all containers, networks, and volumes created by docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Database and Redis\nDESCRIPTION: Example of setting environment variables in a Laravel .env file to connect to the Docker containers.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nDB_HOST=mysql\nREDIS_HOST=redis\nQUEUE_HOST=beanstalkd\n```\n\n----------------------------------------\n\nTITLE: Entering Docker Containers in Laradock\nDESCRIPTION: Commands to enter running containers and execute commands inside them. Examples include entering a bash shell in MySQL container or directly accessing the MySQL prompt.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec {container-name} bash\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec mysql bash\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec mysql mysql -udefault -psecret\n```\n\n----------------------------------------\n\nTITLE: Listing Running Docker Containers in Laradock\nDESCRIPTION: Commands to list currently running Docker containers. The first command shows all running containers, while the second is filtered to show only containers related to the current project.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose ps\n```\n\n----------------------------------------\n\nTITLE: Cloning Laradock Repository in Shell\nDESCRIPTION: Command to clone the Laradock repository into your PHP project directory.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ngit clone https://github.com/Laradock/laradock.git\n```\n\n----------------------------------------\n\nTITLE: Running Docker Containers with Docker Compose\nDESCRIPTION: Command to start the nginx, mysql, phpmyadmin, redis, and workspace containers using Docker Compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ndocker-compose up -d nginx mysql phpmyadmin redis workspace\n```\n\n----------------------------------------\n\nTITLE: Stopping Docker Containers in Laradock\nDESCRIPTION: Commands to stop running Docker containers. The first command stops all containers, while the second stops a specific container by name.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose stop\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose stop {container-name}\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Docker Container\nDESCRIPTION: Command to rebuild a specific container after modifying its Dockerfile.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build mysql\n```\n\n----------------------------------------\n\nTITLE: Editing Docker-Compose Configuration in Laradock\nDESCRIPTION: Examples of modifying the docker-compose.yml file to customize container configurations, such as changing the MySQL database name or Redis port.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\n    environment:\n        MYSQL_DATABASE: laradock\n    ...\n```\n\nLANGUAGE: yml\nCODE:\n```\n    ports:\n        - \"1111:6379\"\n    ...\n```\n\n----------------------------------------\n\nTITLE: Building and Rebuilding Docker Containers in Laradock\nDESCRIPTION: Commands to build or rebuild Docker containers after making changes to Dockerfiles. Options include rebuilding all containers or a specific one.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build {container-name}\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build --no-cache {container-name}\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker build --no-cache {container-name}\n```\n\n----------------------------------------\n\nTITLE: Viewing Container Logs in Laradock\nDESCRIPTION: Commands to view log files from Docker containers. The first command shows logs for a specific container, while the second follows the log output in real-time.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose logs {container-name}\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose logs -f {container-name}\n```\n\n----------------------------------------\n\nTITLE: Setting permissions for Laravel storage and cache directories\nDESCRIPTION: This command sets read, write, and execute permissions for the owner, group, and others on the Laravel storage and bootstrap/cache directories. It's used to resolve issues with blank pages in Laravel applications.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/help.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo chmod -R 777 storage bootstrap/cache\n```\n\n----------------------------------------\n\nTITLE: Installing Laravel via Composer\nDESCRIPTION: Command to create a new Laravel project using Composer\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncomposer create-project laravel/laravel my-cool-app \"5.2.*\"\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Containers\nDESCRIPTION: Command to run specific containers (nginx, mysql, redis) in detached mode using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d nginx mysql redis\n```\n\n----------------------------------------\n\nTITLE: Installing PHP Extensions in Laradock\nDESCRIPTION: Configuration examples for installing PHP extensions by toggling values in the .env file and rebuilding containers.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_8\n\nLANGUAGE: dotenv\nCODE:\n```\n###########################################################\n################ Containers Customization #################\n###########################################################\n\n### WORKSPACE #############################################\n...\nWORKSPACE_INSTALL_XDEBUG=true\n...\n### PHP_FPM ###############################################\n...\nPHP_FPM_INSTALL_XDEBUG=true\n...\n```\n\nLANGUAGE: dotenv\nCODE:\n```\nWORKSPACE_INSTALL_PHPDBG=true\n```\n\nLANGUAGE: dotenv\nCODE:\n```\nPHP_FPM_INSTALL_PHPDBG=true\n```\n\nLANGUAGE: dotenv\nCODE:\n```\nWORKSPACE_INSTALL_GITHUB_CLI=true\n```\n\n----------------------------------------\n\nTITLE: Executing Commands in Workspace Container\nDESCRIPTION: Command to access the workspace container for running Laravel-related commands like Artisan, Composer, and others.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec workspace bash\n```\n\n----------------------------------------\n\nTITLE: Copying Environment Configuration File\nDESCRIPTION: Command to copy the example environment file to create a customizable configuration for Laradock.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Managing xDebug in Laradock\nDESCRIPTION: Commands to control xDebug behavior in the PHP-FPM container, allowing you to start, stop, or check the status of xDebug.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n.php-fpm/xdebug stop\n```\n\nLANGUAGE: bash\nCODE:\n```\n.php-fpm/xdebug start\n```\n\nLANGUAGE: bash\nCODE:\n```\n.php-fpm/xdebug status\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build workspace php-fpm\n```\n\n----------------------------------------\n\nTITLE: Copying Environment Configuration in Shell\nDESCRIPTION: Command to create a .env file by copying the example configuration.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Cloning Laradock Repository\nDESCRIPTION: Commands for adding Laradock to an existing Laravel project using Git submodule or directly cloning it to any location if starting a new project.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit submodule add https://github.com/laradock/laradock.git\n```\n\n----------------------------------------\n\nTITLE: Rebuilding All Containers\nDESCRIPTION: Command to rebuild all containers defined in docker-compose.yml.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build\n```\n\n----------------------------------------\n\nTITLE: Rebuilding workspace container after configuration changes\nDESCRIPTION: This command rebuilds the workspace container after making changes to its configuration in the .env file. It's necessary to apply changes such as installing libpng.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/help.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Running phpMyAdmin Container in Laradock\nDESCRIPTION: Commands to start the phpMyAdmin container with MySQL or MariaDB using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n# use with mysql\ndocker-compose up -d mysql phpmyadmin\n\n# use with mariadb\ndocker-compose up -d mariadb phpmyadmin\n```\n\n----------------------------------------\n\nTITLE: Changing PHP Version in Laradock\nDESCRIPTION: Steps to change the PHP version by modifying the .env file and rebuilding the affected containers. The example shows switching from PHP 7.2 to PHP 5.6.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_7\n\nLANGUAGE: dotenv\nCODE:\n```\nPHP_VERSION=5.6\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build php-fpm\n```\n\nLANGUAGE: dotenv\nCODE:\n```\nPHP_VERSION=7.2\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Git Commands for Submitting a Pull Request\nDESCRIPTION: Series of Git commands for creating a new branch, committing changes, pushing to GitHub, and updating a pull request. These steps are part of the process for submitting code contributions to Laradock.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/contributing.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b my-fix-branch master\ngit push origin my-fix-branch\n```\n\n----------------------------------------\n\nTITLE: SSH Access to Workspace Container\nDESCRIPTION: SSH command to access the Laradock workspace container securely. This command disables password authentication, skips host key checking, and uses an insecure RSA key for development purposes.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\nssh -o PasswordAuthentication=no    \\\n    -o StrictHostKeyChecking=no     \\\n    -o UserKnownHostsFile=/dev/null \\\n    -p 2222                         \\\n    -i workspace/insecure_id_rsa    \\\n    laradock@localhost\n```\n\n----------------------------------------\n\nTITLE: Installing RDKAFKA Extension in Laradock PHP-FPM\nDESCRIPTION: Instructions for installing the RDKAFKA extension in the Laradock PHP-FPM container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_55\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the PHP_FPM_INSTALL_RDKAFKA argument under the PHP-FPM container\n3 - Set it to true\n4 - Re-build the container docker-compose build php-fpm\n```\n\n----------------------------------------\n\nTITLE: Running Docker Services\nDESCRIPTION: Commands for starting various Docker containers including Beanstalkd, Confluence, ElasticSearch and others using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d beanstalkd\ndocker-compose up -d confluence\ndocker-compose up -d elasticsearch\ndocker-compose up -d meilisearch\ndocker-compose up -d selenium\ndocker-compose up -d rethinkdb\ndocker-compose up -d minio\ndocker-compose up -d thumbor\ndocker-compose up -d aws\ndocker-compose up -d grafana\ndocker-compose up -d graylog\n```\n\n----------------------------------------\n\nTITLE: Executing Commands as Laradock User\nDESCRIPTION: Command to access the workspace container as a specific user (laradock) to avoid permission issues when creating files.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec --user=laradock workspace bash\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple MySQL Databases in Laradock\nDESCRIPTION: SQL commands to create additional databases and grant permissions in MySQL container. This SQL script can be placed in mysql/docker-entrypoint-initdb.d/ to automatically execute when the container starts.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_42\n\nLANGUAGE: sql\nCODE:\n```\nCREATE DATABASE IF NOT EXISTS `your_db_1` COLLATE 'utf8_general_ci' ;\nGRANT ALL ON `your_db_1`.* TO 'mysql_user'@'%' ;\n```\n\n----------------------------------------\n\nTITLE: Installing RDKAFKA Extension in Laradock Workspace\nDESCRIPTION: Steps to install the RDKAFKA extension in the Laradock Workspace container, needed for 'composer install' if dependencies require Kafka.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_56\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_RDKAFKA argument under the WORKSPACE container\n3 - Set it to true\n4 - Re-build the container docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Redis Configuration in Laravel\nDESCRIPTION: Redis configuration settings in Laravel's database.php file\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_14\n\nLANGUAGE: php\nCODE:\n```\n'redis' => [\n    'cluster' => false,\n    'default' => [\n        'host'     => 'redis',\n        'port'     => 6379,\n        'database' => 0,\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring MySQL Port in my.cnf\nDESCRIPTION: Instructions for changing the MySQL port by modifying the my.cnf configuration file. This allows you to customize the port number that MySQL listens on within the container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_43\n\nLANGUAGE: conf\nCODE:\n```\n[mysqld]\nport=1234\n```\n\n----------------------------------------\n\nTITLE: Setting Up Custom Domain in Hosts File\nDESCRIPTION: How to map a local domain to localhost in the hosts file. This allows you to access your Laravel application using a custom domain name instead of the Docker IP address.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_44\n\nLANGUAGE: bash\nCODE:\n```\n127.0.0.1    laravel.test\n```\n\n----------------------------------------\n\nTITLE: Setting custom NPM registry and Composer packagist URL in .env file\nDESCRIPTION: This snippet shows how to set custom NPM registry and Composer packagist URLs in the .env file. It's useful for users in regions where the default sources are slow, such as China.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/help.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nWORKSPACE_NPM_REGISTRY=https://registry.npmmirror.com\nWORKSPACE_COMPOSER_REPO_PACKAGIST=https://packagist.phpcomposer.com\n```\n\n----------------------------------------\n\nTITLE: Installing GitHub CLI with Copilot in Laradock\nDESCRIPTION: Steps to install and configure GitHub CLI with Copilot in the workspace container, including authentication with GitHub account.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose build workspace\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d workspace // ..and all your other containers\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec workspace bash\n```\n\nLANGUAGE: bash\nCODE:\n```\ngh auth login\n```\n\nLANGUAGE: bash\nCODE:\n```\ngh extension install github/gh-copilot\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Apache2 container for Mac M1 compatibility\nDESCRIPTION: This command rebuilds the Apache2 container after enabling Mac M1 compatibility in the .env file. It's necessary to apply the changes and resolve startup issues on Mac M1 machines.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/help.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose build apache2\n```\n\n----------------------------------------\n\nTITLE: Enabling libpng installation in workspace container\nDESCRIPTION: This .env configuration enables the installation of libpng in the workspace container. It's used to resolve EPIPE errors when building React applications with webpack and processing JPG images.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/help.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nWORKSPACE_INSTALL_LIBPNG=true\n```\n\n----------------------------------------\n\nTITLE: Installing Laravel with Composer\nDESCRIPTION: Command to create a new Laravel project using Composer within the workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ncomposer create-project laravel/laravel my-cool-app \"5.2.*\"\n```\n\n----------------------------------------\n\nTITLE: Stopping Specific Container\nDESCRIPTION: Command to stop a specific Docker container by name.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose stop {容器名称}\n```\n\n----------------------------------------\n\nTITLE: Laravel Mail Configuration for Mailpit\nDESCRIPTION: Mail configuration settings for Laravel .env file to use Mailpit as the SMTP server for mail testing and debugging. These settings direct Laravel to send emails through the Mailpit container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_39\n\nLANGUAGE: text\nCODE:\n```\nMAIL_MAILER=smtp\nMAIL_HOST=mailpit\nMAIL_PORT=1125\nMAIL_USERNAME=null\nMAIL_PASSWORD=null\n```\n\n----------------------------------------\n\nTITLE: Configuring Laravel Environment\nDESCRIPTION: Environment variable setting for Laravel application path\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_13\n\nLANGUAGE: dotenv\nCODE:\n```\nAPP_CODE_PATH_HOST=../my-cool-app/\n```\n\n----------------------------------------\n\nTITLE: Configuring MongoDB in Laravel\nDESCRIPTION: Example configuration for MongoDB in Laravel's config/database.php file.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_20\n\nLANGUAGE: php\nCODE:\n```\n'connections' => [\n\n    'mongodb' => [\n        'driver'   => 'mongodb',\n        'host'     => env('DB_HOST', 'localhost'),\n        'port'     => env('DB_PORT', 27017),\n        'database' => env('DB_DATABASE', 'database'),\n        'username' => '',\n        'password' => '',\n        'options'  => [\n            'database' => '',\n        ]\n    ],\n\n    // ...\n\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Laravel Database Connection\nDESCRIPTION: Example of setting the database host in Laravel's .env file to connect to the MySQL container.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_6\n\nLANGUAGE: env\nCODE:\n```\nDB_HOST=mysql\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server with npm\nDESCRIPTION: Runs the app in development mode, opening it in the browser at http://localhost:3000. The page will reload on edits and lint errors will be shown in the console.\nSOURCE: https://github.com/laradock/laradock/blob/master/react/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Customizing MySQL Configuration\nDESCRIPTION: Example of modifying the MySQL database name in the docker-compose.yml file.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n  environment:\n    MYSQL_DATABASE: laradock\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Cluster in Laravel\nDESCRIPTION: Example configuration for Redis Cluster in Laravel's config/database.php file using phpredis.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_17\n\nLANGUAGE: php\nCODE:\n```\n'redis' => [\n    'client' => 'phpredis',\n    'options' => [\n        'cluster' => 'redis',\n    ],\n    'clusters' => [\n        'default' => [\n            [\n                'host' => 'redis-cluster',\n                'password' => null,\n                'port' => 7000,\n                'database' => 0,\n            ],\n        ],\n    ],\n],\n```\n\n----------------------------------------\n\nTITLE: Standard Nginx Configuration in docker-compose.yml\nDESCRIPTION: Standard configuration for Nginx container with direct port exposure without using Traefik. This is the default configuration that exposes ports directly to the host.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nnginx:\n  build:\n    context: ./nginx\n    args:\n      - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}\n      - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}\n      - CHANGE_SOURCE=${CHANGE_SOURCE}\n  volumes:\n    - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}\n    - ${NGINX_HOST_LOG_PATH}:/var/log/nginx\n    - ${NGINX_SITES_PATH}:/etc/nginx/sites-available\n    - ${NGINX_SSL_PATH}:/etc/nginx/ssl\n  ports:\n    - \"${NGINX_HOST_HTTP_PORT}:80\"\n    - \"${NGINX_HOST_HTTPS_PORT}:443\"\n  depends_on:\n    - php-fpm\n  networks:\n    - frontend\n    - backend\n```\n\n----------------------------------------\n\nTITLE: Installing Supervisor in Laradock Workspace\nDESCRIPTION: Instructions for installing Supervisor, a client/server system for monitoring and controlling processes on UNIX-like systems, in the Laradock Workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Set WORKSPACE_INSTALL_SUPERVISOR and WORKSPACE_INSTALL_PYTHON to true.\n3 - Create supervisor configuration file (for ex., named laravel-worker.conf) for Laravel Queue Worker in php-worker/supervisord.d/ by simply copy from laravel-worker.conf.example\n4 - Re-build the container docker-compose build workspace Or docker-compose up --build -d workspace\n```\n\n----------------------------------------\n\nTITLE: Customizing Environment Configuration for China\nDESCRIPTION: Configuration changes to accelerate Docker builds in China by using local mirrors for package repositories.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_2\n\nLANGUAGE: env\nCODE:\n```\n# 开启ubuntu国内源\nCHANGE_SOURCE=true\n# composer镜像源\nWORKSPACE_COMPOSER_REPO_PACKAGIST=https://mirrors.aliyun.com/composer/\n# nvm镜像源\nWORKSPACE_NVM_NODEJS_ORG_MIRROR=https://npmmirror.com/mirrors/node\n# npm镜像源\nWORKSPACE_NPM_REGISTRY=https://registry.npmmirror.com\n```\n\n----------------------------------------\n\nTITLE: Mapping Custom Laravel Directory\nDESCRIPTION: Example of updating the docker-compose.yml file to map a custom Laravel application directory.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n    application:\n        build: ./application\n        volumes:\n            - ../my-cool-app/:/var/www\n```\n\n----------------------------------------\n\nTITLE: Installing Aerospike Extension in Laradock\nDESCRIPTION: Steps to install the Aerospike extension in both the Workspace and PHP-FPM containers of Laradock.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_50\n\nLANGUAGE: bash\nCODE:\n```\n1 - First install aerospike in the Workspace and the PHP-FPM Containers:\na) open the .env file\nb) search for the WORKSPACE_INSTALL_AEROSPIKE argument under the Workspace Container\nc) set it to true\nd) search for the PHP_FPM_INSTALL_AEROSPIKE argument under the PHP-FPM Container\ne) set it to true\n\n2 - Re-build the containers docker-compose build workspace php-fpm\n```\n\n----------------------------------------\n\nTITLE: Installing PHP Calendar Extension in Laradock PHP-FPM\nDESCRIPTION: Steps to install the PHP calendar extension in the Laradock PHP-FPM container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_52\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the PHP_FPM_INSTALL_CALENDAR argument under the PHP-FPM container\n3 - Set it to true\n4 - Re-build the containers docker-compose build php-fpm\n```\n\n----------------------------------------\n\nTITLE: Configuring Traefik with Nginx in docker-compose.yml\nDESCRIPTION: Configuration for Nginx container using Traefik as a reverse proxy with properly configured labels for HTTPS support, redirection, and host rules. This replaces the standard port exposure configuration with Traefik-specific settings.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nnginx:\n  build:\n    context: ./nginx\n    args:\n      - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}\n      - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}\n      - CHANGE_SOURCE=${CHANGE_SOURCE}\n  volumes:\n    - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}\n    - ${NGINX_HOST_LOG_PATH}:/var/log/nginx\n    - ${NGINX_SITES_PATH}:/etc/nginx/sites-available\n  depends_on:\n    - php-fpm\n  networks:\n    - frontend\n    - backend\n  labels:\n    - \"traefik.enable=true\"\n    - \"traefik.http.services.nginx.loadbalancer.server.port=80\"\n    # https router\n    - \"traefik.http.routers.https.rule=Host(`${ACME_DOMAIN}`, `www.${ACME_DOMAIN}`)\"\n    - \"traefik.http.routers.https.entrypoints=https\"\n    - \"traefik.http.routers.https.middlewares=www-redirectregex\"\n    - \"traefik.http.routers.https.service=nginx\"\n    - \"traefik.http.routers.https.tls.certresolver=letsencrypt\"\n    # http router\n    - \"traefik.http.routers.http.rule=Host(`${ACME_DOMAIN}`, `www.${ACME_DOMAIN}`)\"\n    - \"traefik.http.routers.http.entrypoints=http\"\n    - \"traefik.http.routers.http.middlewares=http-redirectscheme\"\n    - \"traefik.http.routers.http.service=nginx\"\n    # middlewares\n    - \"traefik.http.middlewares.www-redirectregex.redirectregex.permanent=true\"\n    - \"traefik.http.middlewares.www-redirectregex.redirectregex.regex=^https://www.(.*)\"\n    - \"traefik.http.middlewares.www-redirectregex.redirectregex.replacement=https://$$1\"\n    - \"traefik.http.middlewares.http-redirectscheme.redirectscheme.permanent=true\"\n    - \"traefik.http.middlewares.http-redirectscheme.redirectscheme.scheme=https\"\n```\n\n----------------------------------------\n\nTITLE: Installing YAML Extension in Laradock PHP-FPM\nDESCRIPTION: Steps to install the YAML PHP extension, which allows parsing and creating YAML structured data, in the Laradock PHP-FPM container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_54\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the PHP_FPM_INSTALL_YAML argument under the PHP-FPM container\n3 - Set it to true\n4 - Re-build the container docker-compose build php-fpm\n```\n\n----------------------------------------\n\nTITLE: Running Redis Cluster Container in Laradock\nDESCRIPTION: Command to start the Redis Cluster container using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d redis-cluster\n```\n\n----------------------------------------\n\nTITLE: Minio S3 Configuration\nDESCRIPTION: Laravel filesystem configuration for using Minio as an S3-compatible storage service with appropriate endpoint and access settings.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_30\n\nLANGUAGE: php\nCODE:\n```\n's3' => [\n    'driver' => 's3',\n    'key' => env('AWS_ACCESS_KEY_ID'),\n    'secret' => env('AWS_SECRET_ACCESS_KEY'),\n    'region' => env('AWS_DEFAULT_REGION'),\n    'bucket' => env('AWS_BUCKET'),\n    'endpoint' => env('AWS_URL'),\n    'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false)\n],\n```\n\n----------------------------------------\n\nTITLE: Configuring Varnish Proxy Server in Laradock\nDESCRIPTION: Environment variables setup for Varnish proxy server in the .env file.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nVARNISH_PROXY1_CACHE_SIZE=128m\nVARNISH_PROXY1_BACKEND_HOST=replace_with_your_domain.name\nVARNISH_PROXY1_SERVER=SERVER1\n```\n\n----------------------------------------\n\nTITLE: Running GitLab Container in Laradock\nDESCRIPTION: Command to start the GitLab container using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d gitlab\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for Preinstalling Plugins\nDESCRIPTION: Dockerfile to preinstall specific Jenkins plugins using the install-plugins.sh script.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_11\n\nLANGUAGE: docker\nCODE:\n```\nFROM jenkins\nRUN /usr/local/bin/install-plugins.sh docker-slaves github-branch-source:1.8\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Cron Jobs in Laradock\nDESCRIPTION: Example of adding custom cron jobs to the Laradock workspace container. This shows the Laravel scheduler cron job and a custom cron job that runs every minute.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_40\n\nLANGUAGE: bash\nCODE:\n```\n* * * * * laradock /usr/bin/php /var/www/artisan schedule:run >> /dev/null 2>&1\n\n# Custom cron\n* * * * * root echo \"Every Minute\" > /var/log/cron.log 2>&1\n```\n\n----------------------------------------\n\nTITLE: Installing AST PHP Extension in Laradock Workspace\nDESCRIPTION: Instructions for installing the AST PHP extension, which exposes the abstract syntax tree generated by PHP 7+, in the Laradock Workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_57\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_AST argument under the Workspace Container\n3 - Set it to true\n4 - Re-build the container docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Installing PHP Decimal Extension in Laradock\nDESCRIPTION: Steps to install the PHP Decimal extension, which adds support for correctly-rounded, arbitrary-precision decimal floating point arithmetic, in both Workspace and PHP-FPM containers.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_58\n\nLANGUAGE: bash\nCODE:\n```\n2 - Search for the WORKSPACE_INSTALL_PHPDECIMAL argument under the Workspace Container\n2 - Search for the PHP_FPM_INSTALL_PHPDECIMAL argument under the PHP-FPM container\n3 - Set it to true\n4 - Re-build the container docker-compose build workspace php-fpm\n```\n\n----------------------------------------\n\nTITLE: Configuring NGINX Server Name\nDESCRIPTION: Example of setting a custom server name in the NGINX configuration file. This defines which domain name the NGINX server should respond to when serving your application.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_45\n\nLANGUAGE: conf\nCODE:\n```\nserver_name laravel.test;\n```\n\n----------------------------------------\n\nTITLE: Running Tarantool and Admin Panel in Laradock\nDESCRIPTION: Command to start Tarantool (NoSQL database) and its admin panel in Laradock environment. Tarantool is an in-memory database and application server.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d tarantool tarantool-admin\n```\n\n----------------------------------------\n\nTITLE: Configuring D4M-NFS Mount Points\nDESCRIPTION: Configuration file content for d4m-nfs mount points to improve Docker performance on macOS by using NFS instead of osxfs.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_61\n\nLANGUAGE: txt\nCODE:\n```\n/Users:/Users\n```\n\n----------------------------------------\n\nTITLE: RethinkDB Database Configuration\nDESCRIPTION: Laravel database configuration for RethinkDB connection settings including host, port and database name.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_29\n\nLANGUAGE: php\nCODE:\n```\n'connections' => [\n\t'rethinkdb' => [\n\t\t'name'      => 'rethinkdb',\n\t\t'driver'    => 'rethinkdb',\n\t\t'host'      => env('DB_HOST', 'rethinkdb'),\n\t\t'port'      => env('DB_PORT', 28015),\n\t\t'database'  => env('DB_DATABASE', 'test'),\n\t]\n\t// ...\n],\n```\n\n----------------------------------------\n\nTITLE: Entering Running Container\nDESCRIPTION: Command to execute a bash shell in a specific running container.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec {container-name} bash\n```\n\n----------------------------------------\n\nTITLE: Running Adminer Container in Laradock\nDESCRIPTION: Command to start the Adminer container using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d adminer\n```\n\n----------------------------------------\n\nTITLE: Creating .gitlab-ci.yml for GitLab CI/CD\nDESCRIPTION: Example .gitlab-ci.yml file for setting up a basic GitLab CI/CD pipeline.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nbefore_script:\n  - echo Hello!\n\njob1:\n  scripts:\n    - echo job1\n```\n\n----------------------------------------\n\nTITLE: Entering MySQL Container Example\nDESCRIPTION: Specific example of accessing the MySQL container's bash shell.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec mysql bash\n```\n\n----------------------------------------\n\nTITLE: Working with MQTT Client for Subscribing to Topics\nDESCRIPTION: Command to subscribe to an MQTT topic using the MQTT client. This connects to a WebSocket MQTT broker on localhost port 9001 and subscribes to the 'test' topic.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nmqtt sub -t 'test' -h localhost -p 9001 -C 'ws' -v\n```\n\n----------------------------------------\n\nTITLE: Running Jenkins with Persistent Volume\nDESCRIPTION: Command to run Jenkins with a named volume for persistent data storage.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8080:8080 -p 50000:50000 -v jenkins_home:/var/jenkins_home jenkins\n```\n\n----------------------------------------\n\nTITLE: Running Keycloak Identity and Access Management\nDESCRIPTION: Command to start the Keycloak Identity and Access Management container in Laradock environment. Keycloak provides single sign-on capabilities with identity and access management.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d keycloak\n```\n\n----------------------------------------\n\nTITLE: Running Portainer Container in Laradock\nDESCRIPTION: Command to start the Portainer container using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d portainer\n```\n\n----------------------------------------\n\nTITLE: Setting Number of Executors in Jenkins\nDESCRIPTION: Groovy script to set the number of executors in Jenkins, typically used in a custom Dockerfile.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\nimport jenkins.model.*\nJenkins.instance.setNumExecutors(5)\n```\n\n----------------------------------------\n\nTITLE: Running pgAdmin Container in Laradock\nDESCRIPTION: Command to start the pgAdmin container with PostgreSQL using docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d postgres pgadmin\n```\n\n----------------------------------------\n\nTITLE: Running Jenkins with Custom JVM Parameters\nDESCRIPTION: Docker command to run Jenkins with custom JVM options, specifically setting a system property.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name myjenkins -p 8080:8080 -p 50000:50000 --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins\n```\n\n----------------------------------------\n\nTITLE: Modifying Redis Port\nDESCRIPTION: Example of changing the default Redis port mapping in the docker-compose.yml file.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n  ports:\n    - \"1111:6379\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Authentication\nDESCRIPTION: Commands for setting up Google Cloud authentication for Docker registry access. Includes both configuring Docker and logging into gcloud.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_60\n\nLANGUAGE: bash\nCODE:\n```\ngcloud auth configure-docker\n```\n\nLANGUAGE: bash\nCODE:\n```\ngcloud auth login\n```\n\n----------------------------------------\n\nTITLE: Configuring GitLab Runner in Laradock\nDESCRIPTION: Environment variable setup for GitLab Runner in the .env file and docker-compose.yml modifications.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\ngitlab-runner:\n      environment:\n        - RUNNER_EXECUTOR=docker\n        - DOCKER_IMAGE=alpine\n        - DOCKER_NETWORK_MODE=laradock_backend\n      networks:\n        - backend\n```\n\n----------------------------------------\n\nTITLE: Running Tests with npm\nDESCRIPTION: Launches the test runner in interactive watch mode. Refer to the Create React App documentation for more information on running tests.\nSOURCE: https://github.com/laradock/laradock/blob/master/react/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Stopping All Containers\nDESCRIPTION: Command to stop all running Docker containers managed by docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose stop\n```\n\n----------------------------------------\n\nTITLE: Ejecting from Create React App with npm\nDESCRIPTION: Removes the single build dependency and copies all configuration files and transitive dependencies into the project. This is a one-way operation and gives full control over the build process.\nSOURCE: https://github.com/laradock/laradock/blob/master/react/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run eject\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for Adding Groovy Init Scripts\nDESCRIPTION: Dockerfile to add custom Groovy init scripts to a Jenkins image.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_10\n\nLANGUAGE: docker\nCODE:\n```\nFROM jenkins\nCOPY custom.groovy /usr/share/jenkins/ref/init.groovy.d/custom.groovy\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for Changing Slave Agent Port\nDESCRIPTION: Dockerfile to create a Jenkins image with a custom slave agent port.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_7\n\nLANGUAGE: docker\nCODE:\n```\nFROM jenkins:1.565.3\nENV JENKINS_SLAVE_AGENT_PORT 50001\n```\n\n----------------------------------------\n\nTITLE: Removing All Containers\nDESCRIPTION: Command to stop and remove all containers, networks, and volumes created by docker-compose.\nSOURCE: https://github.com/laradock/laradock/blob/master/README-zh.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose down\n```\n\n----------------------------------------\n\nTITLE: Fetching Installed Plugin List from Jenkins Server\nDESCRIPTION: Bash command to retrieve the list of installed plugins from a running Jenkins server.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nJENKINS_HOST=username:password@myhost.com:port\ncurl -sSL \"http://$JENKINS_HOST/pluginManager/api/xml?depth=1&xpath=/*/*/shortName|/*/*/version&wrapper=plugins\" | perl -pe 's/.*?<shortName>([\\w-]+).*?<version>([^<]+)()(<\\/\\w+>)+/\\1 \\2\\n/g'|sed 's/ /:/'\n```\n\n----------------------------------------\n\nTITLE: Laravel Mix Browsersync Configuration\nDESCRIPTION: JavaScript configuration for using Browsersync with Laravel Mix\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nconst mix = require('laravel-mix')\n\n(...)\n\nmix.browserSync({\n  open: false,\n  proxy: 'nginx' // replace with your web server container\n})\n```\n\n----------------------------------------\n\nTITLE: Building the Production App with npm\nDESCRIPTION: Builds the app for production in the 'build' folder. It bundles React in production mode and optimizes the build for best performance. The output is minified and filenames include hashes.\nSOURCE: https://github.com/laradock/laradock/blob/master/react/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Running Jenkins Docker Container\nDESCRIPTION: Basic command to run a Jenkins Docker container, exposing web and agent ports.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 8080:8080 -p 50000:50000 jenkins\n```\n\n----------------------------------------\n\nTITLE: Embedding Bronze Sponsors Using OpenCollective Iframe\nDESCRIPTION: This HTML iframe embeds Bronze sponsors from OpenCollective. Similar to the Silver sponsors iframe, it uses specific styling parameters but with a smaller avatar height and taller iframe to accommodate more sponsors.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<iframe \n    src=\"https://opencollective.com/laradock/tiers/bronze-sponsors.svg?avatarHeight=55&width=800&format=svg&button=false&background=#1B1B1D&isActive=true\" \n    width=\"800\"\n    height=\"300\"\n    style={{ border: 'none', backgroundColor: '#1B1B1D' }}>\n  </iframe>\n```\n\n----------------------------------------\n\nTITLE: Enabling Apache2 compatibility for Mac M1 in .env file\nDESCRIPTION: This .env configuration enables compatibility for Apache2 container on Mac M1 machines. It's used to resolve issues with Apache2 not starting on Mac M1 architectures.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/help.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nAPACHE_FOR_MAC_M1=true\n```\n\n----------------------------------------\n\nTITLE: Adding Varnish Configuration to docker-compose.yml\nDESCRIPTION: Example configuration for adding a custom Varnish proxy to the docker-compose.yml file.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\ncustom_proxy_name:\n      container_name: custom_proxy_name\n      build: ./varnish\n      expose:\n        - ${VARNISH_PORT}\n      environment:\n        - VARNISH_CONFIG=${VARNISH_CONFIG}\n        - CACHE_SIZE=${VARNISH_PROXY2_CACHE_SIZE}\n        - VARNISHD_PARAMS=${VARNISHD_PARAMS}\n        - VARNISH_PORT=${VARNISH_PORT}\n        - BACKEND_HOST=${VARNISH_PROXY2_BACKEND_HOST}\n        - BACKEND_PORT=${VARNISH_BACKEND_PORT}\n        - VARNISH_SERVER=${VARNISH_PROXY2_SERVER}\n      ports:\n        - \"${VARNISH_PORT}:${VARNISH_PORT}\"\n      links:\n        - workspace\n      networks:\n        - frontend\n```\n\n----------------------------------------\n\nTITLE: Displaying Gold Sponsors with HTML Flex Layout\nDESCRIPTION: HTML code that creates a responsive flex layout to display Gold tier sponsors of the Laradock project. Each sponsor has a link to their website and displays their avatar image from OpenCollective.\nSOURCE: https://github.com/laradock/laradock/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div style=\"display: flex; flex-wrap: wrap; gap: 25px; justify-content: left; align-items: left;\">\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/0/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/0/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/1/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/1/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/2/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/2/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/3/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/3/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/4/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/4/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/5/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/5/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/6/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/6/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/7/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/7/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/8/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/8/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/9/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/9/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/10/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/10/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/11/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/11/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/12/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/12/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/13/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/13/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/14/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/14/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/15/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/15/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/16/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/16/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/17/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/17/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/18/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/18/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/19/website\" target=\"_blank\" rel=\"sponsored\"><img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/19/avatar.svg?avatarHeight=100\" height=\"115\" /></a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Running Mosquitto MQTT Broker in Laradock\nDESCRIPTION: Command to start the Mosquitto MQTT broker container in Laradock environment. Mosquitto is a message broker that implements the MQTT protocol versions 5.0, 3.1.1 and 3.1.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up -d mosquitto\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Project Headers\nDESCRIPTION: HTML markup for the project title, badges, and header section including alignment and styling attributes.\nSOURCE: https://github.com/laradock/laradock/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p align=\"center\">\n    <img src=\"/.github/home-page-images/laradock-logo.jpg?raw=true\" alt=\"Laradock Logo\"/>\n</p>\n\n<p align=\"center\">\n   <a href=\"https://laradock.io/contributing\"><img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"contributions welcome\"></a>\n   <a href=\"https://github.com/laradock/laradock/network\"><img src=\"https://img.shields.io/github/forks/laradock/laradock.svg\" alt=\"GitHub forks\"></a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Publishing Messages to MQTT Topics\nDESCRIPTION: Command to publish a message to an MQTT topic using the MQTT client. This connects to a WebSocket MQTT broker on localhost port 9001 and publishes 'Hello!' to the 'test' topic.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nmqtt pub -t 'test' -h localhost -p 9001 -C 'ws' -m 'Hello!'\n```\n\n----------------------------------------\n\nTITLE: Defining Markdown Front Matter for Porto SAP Page\nDESCRIPTION: This snippet defines the front matter for a Markdown page, setting the title for the Porto SAP documentation page. Front matter is commonly used in static site generators to provide metadata for pages.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/src/pages/markdown-page.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Porto SAP PAGE\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing Tarantool Console in Docker\nDESCRIPTION: Command to access the Tarantool console in interactive mode from within the Docker container. This allows you to run Tarantool commands directly from the console.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec tarantool console\n```\n\n----------------------------------------\n\nTITLE: Starting Docusaurus Server for Local Documentation\nDESCRIPTION: Command to start a local Docusaurus server for previewing documentation changes in real-time. This is used when updating the Laradock documentation.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/contributing.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Dependency Versions Declaration\nDESCRIPTION: Defines version numbers for Maven plugin (2.7.1) and Ant library (1.3) dependencies.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/tests/plugins/plugins.txt#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nmaven-plugin:2.7.1\nant:1.3\n```\n\n----------------------------------------\n\nTITLE: Installing wkhtmltopdf in Laradock Workspace\nDESCRIPTION: Instructions for installing wkhtmltopdf, a utility for outputting PDF from HTML, in the Laradock Workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_WKHTMLTOPDF argument under the Workspace Container and set it to true\n3 - Re-build the container docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Initializing SonarQube Database in Postgres\nDESCRIPTION: Commands to fix database errors when setting up SonarQube\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose exec --user=root postgres\nsource docker-entrypoint-initdb.d/init_sonarqube_db.sh\n```\n\n----------------------------------------\n\nTITLE: Installing Laravel Envoy in Laradock Workspace\nDESCRIPTION: Instructions for installing Laravel Envoy, a task runner, in the Laradock Workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_51\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_LARAVEL_ENVOY argument under the Workspace Container\n3 - Set it to true\n4 - Re-build the containers docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Installing GNU Parallel in Laradock Workspace\nDESCRIPTION: Steps to install GNU Parallel, a command line tool for running multiple processes in parallel, in the Laradock Workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_GNU_PARALLEL argument under the Workspace Container and set it to true\n3 - Re-build the container docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Rebasing and Force Pushing for Outdated Pull Requests\nDESCRIPTION: Git commands for rebasing a branch onto the latest master and force pushing to update an outdated pull request. This may be necessary if the maintainers request updates to a submitted PR.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/contributing.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit rebase master -i\ngit push origin my-fix-branch -f\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for Jenkins Executor Configuration\nDESCRIPTION: Dockerfile to create a custom Jenkins image with a specific number of executors.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_3\n\nLANGUAGE: docker\nCODE:\n```\nFROM jenkins\nCOPY executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up After Merged Pull Request\nDESCRIPTION: Series of Git commands for cleaning up after a pull request has been merged. This includes deleting the remote and local branches, and updating the local master branch.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/contributing.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin --delete my-fix-branch\ngit checkout master -f\ngit branch -D my-fix-branch\ngit pull --ff upstream master\n```\n\n----------------------------------------\n\nTITLE: Configuring Jenkins Logging\nDESCRIPTION: Commands to create a custom logging properties file and run Jenkins with this configuration.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir data\ncat > data/log.properties <<EOF\nhandlers=java.util.logging.ConsoleHandler\njenkins.level=FINEST\njava.util.logging.ConsoleHandler.level=FINEST\nEOF\ndocker run --name myjenkins -p 8080:8080 -p 50000:50000 --env JAVA_OPTS=\"-Djava.util.logging.config.file=/var/jenkins_home/log.properties\" -v `pwd`/data:/var/jenkins_home jenkins\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for HTTPS Configuration\nDESCRIPTION: Dockerfile to create a Jenkins image with HTTPS enabled using custom certificates.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_6\n\nLANGUAGE: docker\nCODE:\n```\nFROM jenkins:1.565.3\n\nCOPY https.pem /var/lib/jenkins/cert\nCOPY https.key /var/lib/jenkins/pk\nENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk\nEXPOSE 8083\n```\n\n----------------------------------------\n\nTITLE: Installing libfaketime in Laradock PHP-FPM\nDESCRIPTION: Instructions for installing libfaketime, which allows controlling the date and time returned by the operating system, in the Laradock PHP-FPM container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_53\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the PHP_FPM_INSTALL_FAKETIME argument under the PHP-FPM container\n3 - Set it to true\n4 - Search for the PHP_FPM_FAKETIME argument under the PHP-FPM container\n5 - Set it to the desired string\n6 - Re-build the containers docker-compose build php-fpm\n```\n\n----------------------------------------\n\nTITLE: Running Jenkins with Custom Slave Agent Port\nDESCRIPTION: Docker command to run Jenkins with a custom slave agent port.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name myjenkins -p 8080:8080 -p 50001:50001 --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins\n```\n\n----------------------------------------\n\nTITLE: Installing BBC Audio Waveform Image Generator in Laradock Workspace\nDESCRIPTION: Steps to install the BBC Audio Waveform Image Generator in the Laradock Workspace container. This tool generates waveform data from audio files in various formats.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_AUDIOWAVEFORM argument under the Workspace Container and set it to true\n3 - Re-build the container docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Custom Dockerfile for Installing Additional Tools\nDESCRIPTION: Dockerfile to create a Jenkins image with additional tools installed using apt-get.\nSOURCE: https://github.com/laradock/laradock/blob/master/jenkins/README.md#2025-04-22_snippet_9\n\nLANGUAGE: docker\nCODE:\n```\nFROM jenkins\n# if we want to install via apt\nUSER root\nRUN apt-get update && apt-get install -y ruby make more-thing-here\n# drop back to the regular jenkins user - good practice\nUSER jenkins\n```\n\n----------------------------------------\n\nTITLE: Embedding Silver Sponsors Using OpenCollective Iframe\nDESCRIPTION: This HTML iframe embeds Silver sponsors from OpenCollective. The iframe is configured with specific parameters for avatar height, width, and background color to maintain consistent styling with the page.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<iframe \n    src=\"https://opencollective.com/laradock/tiers/silver-sponsors.svg?avatarHeight=90&width=800&format=svg&button=false&background=#1B1B1D&isActive=true\" \n    width=\"800\"\n    height=\"200\"\n    style={{ border: 'none', backgroundColor: '#1B1B1D' }}>\n  </iframe>\n```\n\n----------------------------------------\n\nTITLE: Installing Git Bash Prompt in Laradock Workspace\nDESCRIPTION: Instructions for installing Git Bash Prompt, which displays information about the current git repository in the bash prompt, in the Laradock Workspace container.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/usage.md#2025-04-22_snippet_59\n\nLANGUAGE: bash\nCODE:\n```\n1 - Open the .env file\n2 - Search for the WORKSPACE_INSTALL_GIT_PROMPT argument under the Workspace Container\n3 - Set it to true\n4 - Re-build the container docker-compose build workspace\n```\n\n----------------------------------------\n\nTITLE: Displaying Gold Sponsors with Custom Links in HTML\nDESCRIPTION: This HTML code creates a flex container to display Gold sponsor logos with links to their websites. Each sponsor is represented by an image loaded from OpenCollective with custom attributes for height and styling. The rel=\"sponsored\" attribute is used instead of \"nofollow sponsored\" to allow SEO benefits for Gold sponsors.\nSOURCE: https://github.com/laradock/laradock/blob/master/DOCUMENTATION/docs/Intro.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', justifyContent: 'left', alignItems: 'left' }}>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/0/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/0/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/1/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/1/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/2/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/2/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/3/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/3/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/4/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/4/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/5/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/5/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n<a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/6/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/6/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/7/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/7/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/8/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/8/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/9/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/9/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/10/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/10/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/11/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/11/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/12/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/12/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/13/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/13/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/14/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/14/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/15/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/15/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/16/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/16/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/17/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/17/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/18/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/18/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n  <a href=\"https://opencollective.com/laradock/tiers/gold-sponsors/19/website\" target=\"_blank\" rel=\"sponsored\">\n    <img src=\"https://opencollective.com/laradock/tiers/gold-sponsors/19/avatar.svg?button=false&isActive=true&avatarHeight=100\" height=\"115\" />\n  </a>\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Default robots.txt Rules\nDESCRIPTION: This snippet defines the default rules for web crawlers in the robots.txt file. It allows all user agents to access the entire website without any restrictions.\nSOURCE: https://github.com/laradock/laradock/blob/master/react/public/robots.txt#2025-04-22_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\n# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\nDisallow:\n```\n\n----------------------------------------\n\nTITLE: Linking to Laradock Contribution Guide in Markdown\nDESCRIPTION: This snippet demonstrates how to create a hyperlink in Markdown, specifically linking to the Laradock project's contribution guide.\nSOURCE: https://github.com/laradock/laradock/blob/master/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[contribution guide](https://laradock.io/contributing)\n```"
  }
]
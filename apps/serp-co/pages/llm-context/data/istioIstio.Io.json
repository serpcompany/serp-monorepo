[
  {
    "owner": "istio",
    "repo": "istio.io",
    "content": "TITLE: Labeling Namespace for Istio Injection (Bash)\nDESCRIPTION: Labels the default namespace to enable automatic Envoy sidecar proxy injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Testing Bookinfo Application Accessibility from Within the Cluster\nDESCRIPTION: This command executes a curl request from within the ratings pod to the productpage service to verify the application is properly deployed and running within the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')\" -c ratings -- curl -sS productpage:9080/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n```\n\n----------------------------------------\n\nTITLE: Removing Standard Kubernetes Gateway API CRDs\nDESCRIPTION: Command to remove the standard version of Kubernetes Gateway API Custom Resource Definitions if the experimental version was not required for your Istio deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd?ref={{< k8s_gateway_api_version >}}\" | kubectl delete -f -\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace\nDESCRIPTION: Removes the Istio system namespace (istio-system by default) after uninstalling Istio when it's no longer needed.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Components\nDESCRIPTION: Series of commands to uninstall Istio components including gateway, discovery chart, base chart, and namespace cleanup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istio-ingress -n istio-ingress\n$ kubectl delete namespace istio-ingress\n$ helm delete istiod -n istio-system\n$ helm delete istio-base -n istio-system\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Ambient Mode Profile\nDESCRIPTION: Command to install Istio using the ambient profile, which includes support for ambient mode. This sets up Istio core components, Istiod, CNI, and Ztunnel.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=ambient --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Configuring Retries in Istio Virtual Service (YAML)\nDESCRIPTION: This snippet demonstrates how to configure retry behavior in an Istio Virtual Service. It sets up 3 retry attempts with a 2-second timeout for each retry when connecting to the ratings service subset v1 after an initial call failure.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n  - ratings\n  http:\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n    retries:\n      attempts: 3\n      perTryTimeout: 2s\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Demo Profile\nDESCRIPTION: Installs Istio using the demo profile, which is larger than the default profile and includes more features for evaluation purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=demo\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio External Authorization Configuration\nDESCRIPTION: This bash command removes the namespace 'foo' used for the external authorization demonstration, effectively cleaning up the resources created during the tutorial.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete namespace foo\n```\n\n----------------------------------------\n\nTITLE: User-Based Routing Virtual Service Configuration Example\nDESCRIPTION: This YAML output shows the configuration of a virtual service that routes traffic based on the 'end-user' header, directing requests from user 'jason' to reviews:v2 and all others to reviews:v1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\n...\nspec:\n  hosts:\n  - reviews\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Configuring Traffic Splitting by Weight in Istio Virtual Service\nDESCRIPTION: Example of traffic splitting in an Istio Virtual Service that distributes traffic by percentage weight between two service subsets, useful for A/B testing and canary deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n      weight: 75\n    - destination:\n        host: reviews\n        subset: v2\n      weight: 25\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Traffic Routing\nDESCRIPTION: Istio VirtualService and DestinationRule configuration to route all traffic to v1 of the httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n    - httpbin\n  http:\n  - route:\n    - destination:\n        host: httpbin\n        subset: v1\n      weight: 100\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: httpbin\nspec:\n  host: httpbin\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n```\n\n----------------------------------------\n\nTITLE: Configuring Traffic Mirroring with Istio VirtualService\nDESCRIPTION: Defines a VirtualService that routes 100% of traffic to httpbin v1 while mirroring all traffic to httpbin v2. The mirrored requests are sent with '-shadow' appended to their Host/Authority headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n    - httpbin\n  http:\n  - route:\n    - destination:\n        host: httpbin\n        subset: v1\n      weight: 100\n    mirror:\n      host: httpbin\n      subset: v2\n    mirrorPercentage:\n      value: 100.0\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Gateway for External Access\nDESCRIPTION: This command applies the Istio Gateway and VirtualService configuration to expose the Bookinfo application outside the Kubernetes cluster, enabling external access to the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/bookinfo-gateway.yaml@\ngateway.networking.istio.io/bookinfo-gateway created\nvirtualservice.networking.istio.io/bookinfo created\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Add-ons and Core Components\nDESCRIPTION: Commands to remove Istio add-ons and uninstall Istio core components with the purge option, which deletes RBAC permissions and all resources under the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/addons@\n$ istioctl uninstall -y --purge\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio External Authorization Provider for Standalone OPA\nDESCRIPTION: Adds an extensionProviders configuration to the Istio mesh configuration that defines a standalone OPA service as an external authorizer for Envoy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\ndata:\n  mesh: |-\n    # Add the following contents:\n    extensionProviders:\n    - name: \"opa.default\"\n      envoyExtAuthzGrpc:\n        service: \"opa.default.svc.cluster.local\"\n        port: \"9191\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Debug Logging\nDESCRIPTION: Command to install Istio with debug logging level enabled using istioctl command line interface.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set values.global.logging.level=debug\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Manifest with Multiple Overlay Files\nDESCRIPTION: This command shows an alternative way to generate an Istio manifest using multiple overlay files instead of a custom profile. It achieves the same result as the previous command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate --manifests mycharts/ -f manifests/profiles/custom1.yaml -f path-to-user-overlay.yaml\n```\n\n----------------------------------------\n\nTITLE: Applying Mesh-Wide Mutual TLS Policy in Istio\nDESCRIPTION: Applies a PeerAuthentication policy to enforce STRICT mutual TLS across the entire mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: default\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo Sample Application (Bash)\nDESCRIPTION: Deploys the Bookinfo sample application to the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Route in Istio Virtual Service\nDESCRIPTION: Example of a default route in an Istio Virtual Service that has no match conditions and directs all remaining traffic to a specific subset. This ensures all traffic has a matching route.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n- route:\n  - destination:\n      host: reviews\n      subset: v3\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Demo Profile (Bash)\nDESCRIPTION: Installs Istio using the demo configuration profile without default gateways.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f @samples/bookinfo/demo-profile-no-gateways.yaml@ -y\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Default Profile using Istioctl\nDESCRIPTION: Installs Istio using the default configuration profile with the istioctl command. The default profile provides a good starting point for production environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install\n```\n\n----------------------------------------\n\nTITLE: Installing East-West Gateway on Primary Cluster with IstioOperator\nDESCRIPTION: Command to generate and install an east-west gateway configuration on cluster1 using the gen-eastwest-gateway.sh script and istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ @samples/multicluster/gen-eastwest-gateway.sh@ \\\n    --network network1 | \\\n    istioctl --context=\"${CTX_CLUSTER1}\" install -y -f -\n```\n\n----------------------------------------\n\nTITLE: Creating a ServiceEntry for External HTTPS Access in Istio\nDESCRIPTION: This snippet demonstrates how to create a ServiceEntry resource to allow access to an external HTTPS service (www.google.com) from within the Istio service mesh. It defines the host, port, protocol, resolution method, and location as external to the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: google\nspec:\n  hosts:\n  - www.google.com\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\n  location: MESH_EXTERNAL\nEOF\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxy Configurations\nDESCRIPTION: Commands for retrieving various Envoy proxy configurations including cluster, bootstrap, listener, route, and endpoint configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config cluster <pod-name> [flags]\n$ istioctl proxy-config bootstrap <pod-name> [flags]\n$ istioctl proxy-config listener <pod-name> [flags]\n$ istioctl proxy-config route <pod-name> [flags]\n$ istioctl proxy-config endpoints <pod-name> [flags]\n```\n\n----------------------------------------\n\nTITLE: Verifying httpbin Workload and Ingress Gateway\nDESCRIPTION: Sends a request to the httpbin service through the ingress gateway to verify the setup is working correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/jwt-route/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"$INGRESS_HOST:$INGRESS_PORT\"/headers -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Configuring DENY Authorization Policy in Istio\nDESCRIPTION: Example of an authorization policy using DENY-with-negative-matching pattern to deny all requests except those to the /public path. This demonstrates an alternative approach to achieve the same security outcome.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo\nspec:\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/public\"]\n```\n\n----------------------------------------\n\nTITLE: Verifying Custom Metrics in Istio\nDESCRIPTION: This bash command checks if Istio is generating data for the new or modified dimensions by executing a curl command inside the Istio proxy container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/customize-metrics/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$(kubectl get pod -l app=productpage -o jsonpath='{.items[0].metadata.name}')\" -c istio-proxy -- curl -sS 'localhost:15000/stats/prometheus' | grep istio_requests_total\n```\n\n----------------------------------------\n\nTITLE: Adding External Service to Istio Mesh with Service Entry (YAML)\nDESCRIPTION: This Service Entry adds an external dependency (ext-svc.example.com) to Istio's service registry. It configures the service to be accessed via HTTPS on port 443, specifies it as external to the mesh, and sets DNS resolution for service discovery.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: svc-entry\nspec:\n  hosts:\n  - ext-svc.example.com\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n  location: MESH_EXTERNAL\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Applying AuthorizationPolicy to Require Valid Tokens (Gateway API)\nDESCRIPTION: This snippet demonstrates how to apply an AuthorizationPolicy using Gateway API to deny requests without valid JWT tokens. It targets a specific Gateway resource in the foo namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"frontend-ingress\"\n  namespace: foo\nspec:\n  targetRef:\n    kind: Gateway\n    group: gateway.networking.k8s.io\n    name: httpbin-gateway\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notRequestPrincipals: [\"*\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring DENY Authorization Policy in Istio\nDESCRIPTION: Example of an authorization policy using DENY-with-negative-matching pattern to deny all requests except those to the /public path. This demonstrates an alternative approach to achieve the same security outcome.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo\nspec:\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/public\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Port-Level mTLS Authentication in Istio\nDESCRIPTION: YAML configuration for disabling mutual TLS on port 80 for specific workload while inheriting namespace defaults for other ports. Targets workloads with label 'app: example-app'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-workload-policy\"\n  namespace: \"foo\"\nspec:\n  selector:\n     matchLabels:\n       app: example-app\n  portLevelMtls:\n    80:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Discovery Chart\nDESCRIPTION: Command to install the Istio discovery chart that deploys the istiod service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Adding istioctl to PATH (Bash)\nDESCRIPTION: Adds the istioctl client binary to the system PATH for Linux or macOS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export PATH=$PWD/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Configuring routing rules for egress gateway using Istio APIs\nDESCRIPTION: Sets up VirtualService routing rules to direct traffic from sidecars to the egress gateway and from the gateway to the external service using Istio APIs. This enables proper traffic flow through the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: direct-cnn-through-egress-gateway\nspec:\n  hosts:\n  - edition.cnn.com\n  gateways:\n  - istio-egressgateway\n  - mesh\n  http:\n  - match:\n    - gateways:\n      - mesh\n      port: 80\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: cnn\n        port:\n          number: 80\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 80\n    route:\n    - destination:\n        host: edition.cnn.com\n        port:\n          number: 80\n      weight: 100\nEOF\n```\n\n----------------------------------------\n\nTITLE: Downloading and Extracting Istio Release (Bash)\nDESCRIPTION: Downloads and extracts the latest Istio release for Linux or macOS using a curl command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | sh -\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Using External Charts\nDESCRIPTION: Uses external charts instead of the compiled-in charts for installation. This allows for experimentation with custom charts, though using compiled-in charts is recommended for compatibility.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --manifests=manifests/\n```\n\n----------------------------------------\n\nTITLE: Creating TLS Secrets for Ingress Gateway\nDESCRIPTION: Commands to create TLS secrets in Kubernetes for the ingress gateway credentials. These secrets contain the certificates and keys for httpbin and helloworld services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -n istio-system secret tls httpbin-credential \\\n  --key=example_certs1/httpbin.example.com.key \\\n  --cert=example_certs1/httpbin.example.com.crt\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -n istio-system secret tls helloworld-credential \\\n  --key=example_certs1/helloworld.example.com.key \\\n  --cert=example_certs1/helloworld.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Demo Profile\nDESCRIPTION: Command to install Istio using the demo configuration profile, which provides a good set of defaults for testing purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=demo -y\n✔ Istio core installed\n✔ Istiod installed\n✔ Egress gateways installed\n✔ Ingress gateways installed\n✔ Installation complete\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Discovery Chart\nDESCRIPTION: Command to install the Istio discovery chart that deploys the istiod service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Defining Canary Gateway Deployment in Istio\nDESCRIPTION: YAML configuration for creating a canary deployment of Istio gateway with specific revision label. This deployment runs alongside the existing gateway to enable gradual rollout of updates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: istio-ingressgateway-canary\n  namespace: istio-ingress\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  template:\n    metadata:\n      annotations:\n        inject.istio.io/templates: gateway\n      labels:\n        istio: ingressgateway\n        istio.io/rev: canary # Set to the control plane revision you want to deploy\n    spec:\n      containers:\n      - name: istio-proxy\n        image: auto\n```\n\n----------------------------------------\n\nTITLE: Deploying Kiali and Telemetry Addons in Istio\nDESCRIPTION: Commands to deploy Kiali dashboard along with other telemetry addons (Prometheus, Grafana, Jaeger) and verify the deployment completion by checking the rollout status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/addons@\n$ kubectl rollout status deployment/kiali -n istio-system\nWaiting for deployment \"kiali\" rollout to finish: 0 of 1 updated replicas are available...\ndeployment \"kiali\" successfully rolled out\n```\n\n----------------------------------------\n\nTITLE: Exposing Revision-Specific Control Plane for Remote Cluster Access\nDESCRIPTION: Command to expose a specific revision of the Istio control plane in cluster1 for remote cluster access using a template.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ sed 's/{{.Revision}}/rev/g' @samples/multicluster/expose-istiod-rev.yaml.tmpl@ | kubectl apply --context=\"${CTX_CLUSTER1}\" -n istio-system -f -\n```\n\n----------------------------------------\n\nTITLE: Setting Gateway API Secure Ingress Port\nDESCRIPTION: Commands to set environment variables for secure ingress host and port using Gateway API resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl get gtw my-gateway -o jsonpath='{.status.addresses[0].value}')\n$ export SECURE_INGRESS_PORT=$(kubectl get gtw my-gateway -o jsonpath='{.spec.listeners[?(@.name==\"https\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Using YAML Configuration File\nDESCRIPTION: Demonstrates installing Istio by creating a configuration file that enables access logging and using the -f flag with istioctl. This approach is recommended for production environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./my-config.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\nEOF\n$ istioctl install -f my-config.yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\n```\n\n----------------------------------------\n\nTITLE: Deploying Application and Verifying Sidecar Status - Bash\nDESCRIPTION: Commands to deploy a sample curl application and verify its deployment and pod status before sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n$ kubectl get deployment -o wide\n$ kubectl get pod\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Gateway API\nDESCRIPTION: This snippet shows how to extract the ingress host and port from a Gateway API resource for testing end-user authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl get gtw httpbin-gateway -n foo -o jsonpath='{.status.addresses[0].value}')\n$ export INGRESS_PORT=$(kubectl get gtw httpbin-gateway -n foo -o jsonpath='{.spec.listeners[?(@.name==\"http\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Sidecar Injection for a Pod with istioctl\nDESCRIPTION: Command to verify if Istio sidecar injection is configured correctly for a specific pod in a namespace. This helps diagnose why injection did or didn't occur.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/check-inject/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental check-inject -n <namespace> <pod-name>\n```\n\n----------------------------------------\n\nTITLE: Creating WorkloadGroup Template for VM Integration\nDESCRIPTION: Creates a WorkloadGroup template YAML file to define VM workload configuration including metadata, labels, service account and network settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: WorkloadGroup\nmetadata:\n  name: \"${VM_APP}\"\n  namespace: \"${VM_NAMESPACE}\"\nspec:\n  metadata:\n    labels:\n      app: \"${VM_APP}\"\n  template:\n    serviceAccount: \"${SERVICE_ACCOUNT}\"\n    network: \"${VM_NETWORK}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring DestinationRule for External Service\nDESCRIPTION: Creates a DestinationRule to disable TLS mode for the external service, allowing unencrypted traffic for demonstration purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: my-httpbin\nspec:\n  host: my-httpbin.default.svc.cluster.local\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Configuring Destination in Istio Virtual Service Route\nDESCRIPTION: Example of a destination configuration in an Istio Virtual Service route that directs traffic to a specific host and subset. The host must exist in Istio's service registry.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nroute:\n- destination:\n    host: reviews\n    subset: v2\n```\n\n----------------------------------------\n\nTITLE: Enable Analysis in Istio Installation\nDESCRIPTION: Install Istio with configuration analysis feature enabled\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set values.global.istiod.enableAnalysis=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Match Condition in Istio Virtual Service\nDESCRIPTION: Example of a match condition in an Istio Virtual Service that selects requests from a specific user (\"jason\") using header matching.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- match:\n   - headers:\n       end-user:\n         exact: jason\n```\n\n----------------------------------------\n\nTITLE: Installing Istioctl using Curl\nDESCRIPTION: Downloads and installs the latest Istioctl binary using curl and adds it to system PATH.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -sL https://istio.io/downloadIstioctl | sh -\n$ export PATH=$HOME/.istioctl/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Implementing Circuit Breakers in Istio DestinationRule (YAML)\nDESCRIPTION: This configuration sets up a circuit breaker for the reviews service workloads. It specifically limits the number of concurrent connections to the v1 subset of the reviews service to a maximum of 100, preventing overload of the service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n    trafficPolicy:\n      connectionPool:\n        tcp:\n          maxConnections: 100\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Gateway Name and Namespace for Helm Installation\nDESCRIPTION: Commands to set environment variables for the Istio ingress gateway name and namespace when installed using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_NAME=istio-ingress\n$ export INGRESS_NS=istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Configuring User-Based Traffic Routing with Istio Virtual Service in YAML\nDESCRIPTION: This example demonstrates a virtual service configuration that routes requests to different versions of a service based on the user making the request. Specifically, it routes requests from user 'jason' to subset v2, while routing all other requests to subset v3.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n  - reviews\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v3\n```\n\n----------------------------------------\n\nTITLE: Deploying HTTP Service with OPA Sidecar in Kubernetes\nDESCRIPTION: Kubernetes Deployment configuration that runs httpbin service alongside an OPA container in the same pod. The OPA container is configured to provide authorization decisions via gRPC on port 9191.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: httpbin-with-opa\n  labels:\n    app: httpbin-with-opa\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: httpbin-with-opa\n  template:\n    metadata:\n      labels:\n        app: httpbin-with-opa\n    spec:\n      containers:\n        - image: docker.io/kennethreitz/httpbin\n          imagePullPolicy: IfNotPresent\n          name: httpbin\n          ports:\n          - containerPort: 80\n        - name: opa\n          image: openpolicyagent/opa:latest-envoy\n          securityContext:\n            runAsUser: 1111\n          volumeMounts:\n          - readOnly: true\n            mountPath: /policy\n            name: opa-policy\n          args:\n          - \"run\"\n          - \"--server\"\n          - \"--addr=localhost:8181\"\n          - \"--diagnostic-addr=0.0.0.0:8282\"\n          - \"--set=plugins.envoy_ext_authz_grpc.addr=:9191\"\n          - \"--set=plugins.envoy_ext_authz_grpc.query=data.envoy.authz.allow\"\n          - \"--set=decision_logs.console=true\"\n          - \"--ignore=.*\"\n          - \"/policy/policy.rego\"\n          livenessProbe:\n            httpGet:\n              path: /health?plugins\n              scheme: HTTP\n              port: 8282\n            initialDelaySeconds: 5\n            periodSeconds: 5\n          readinessProbe:\n            httpGet:\n              path: /health?plugins\n              scheme: HTTP\n              port: 8282\n            initialDelaySeconds: 5\n            periodSeconds: 5\n      volumes:\n        - name: proxy-config\n          configMap:\n            name: proxy-config\n        - name: opa-policy\n          secret:\n            secretName: opa-policy\n```\n\n----------------------------------------\n\nTITLE: Deploying Application and Verifying Sidecar Status - Bash\nDESCRIPTION: Commands to deploy a sample curl application and verify its deployment and pod status before sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n$ kubectl get deployment -o wide\n$ kubectl get pod\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio VirtualService\nDESCRIPTION: Creates a VirtualService to define routing rules for the gateway, directing traffic to the httpbin service\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"httpbin.example.com\"\n  gateways:\n  - mygateway\n  http:\n  - match:\n    - uri:\n        prefix: /status\n    - uri:\n        prefix: /delay\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway with TLS\nDESCRIPTION: Defines an Istio Gateway resource that enables HTTPS traffic on port 443 using the created TLS credentials\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: httpbin-credential\n    hosts:\n    - httpbin.example.com\n```\n\n----------------------------------------\n\nTITLE: Istio Virtual Services Configuration Example\nDESCRIPTION: This YAML output shows the configuration of virtual services that route traffic to v1 of each microservice in the Bookinfo application, including details, productpage, ratings, and reviews services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n- apiVersion: networking.istio.io/v1\n  kind: VirtualService\n  ...\n  spec:\n    hosts:\n    - details\n    http:\n    - route:\n      - destination:\n          host: details\n          subset: v1\n- apiVersion: networking.istio.io/v1\n  kind: VirtualService\n  ...\n  spec:\n    hosts:\n    - productpage\n    http:\n    - route:\n      - destination:\n          host: productpage\n          subset: v1\n- apiVersion: networking.istio.io/v1\n  kind: VirtualService\n  ...\n  spec:\n    hosts:\n    - ratings\n    http:\n    - route:\n      - destination:\n          host: ratings\n          subset: v1\n- apiVersion: networking.istio.io/v1\n  kind: VirtualService\n  ...\n  spec:\n    hosts:\n    - reviews\n    http:\n    - route:\n      - destination:\n          host: reviews\n          subset: v1\n```\n\n----------------------------------------\n\nTITLE: Configuring DENY Authorization Policy\nDESCRIPTION: Creates a DENY policy with HTTP-only fields for the 'tcp-echo' workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: tcp-policy\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: tcp-echo\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Virtual Services for Cleanup\nDESCRIPTION: This command removes the virtual service configuration that routes all traffic to v1 of the Bookinfo microservices, reverting to the default behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo Application Components in Kubernetes\nDESCRIPTION: Deploy the Bookinfo application and its version-specific configurations using kubectl. These commands deploy multiple microservices including details, productpage, ratings, and reviews services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/deploy-sample-app/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/bookinfo/platform/kube/bookinfo.yaml@\nkubectl apply -f @samples/bookinfo/platform/kube/bookinfo-versions.yaml@\n```\n\n----------------------------------------\n\nTITLE: Creating IstioOperator Configuration for cluster2\nDESCRIPTION: Creates a YAML configuration file for installing Istio as a primary cluster on cluster2. The configuration specifies the same meshID but a different clusterName to identify this cluster in the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > cluster2.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    global:\n      meshID: mesh1\n      multiCluster:\n        clusterName: cluster2\n      network: network1\nEOF\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Services in the Deployment\nDESCRIPTION: This command displays all Kubernetes services running in the current namespace, showing the ClusterIP, external IP (if any), and ports for each service in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get services\nNAME          TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\ndetails       ClusterIP   10.0.0.31    <none>        9080/TCP   6m\nkubernetes    ClusterIP   10.0.0.1     <none>        443/TCP    7d\nproductpage   ClusterIP   10.0.0.120   <none>        9080/TCP   6m\nratings       ClusterIP   10.0.0.15    <none>        9080/TCP   6m\nreviews       ClusterIP   10.0.0.170   <none>        9080/TCP   6m\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Access Logs Using Command Line Option\nDESCRIPTION: Installs Istio with access logging enabled by setting the meshConfig.accessLogFile parameter to output logs to stdout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set meshConfig.accessLogFile=/dev/stdout\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Gateway API CRDs (Bash)\nDESCRIPTION: Installs the Kubernetes Gateway API Custom Resource Definitions if not already present.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || \\\n{ kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd?ref={{< k8s_gateway_api_version >}}\" | kubectl apply -f -; }\n```\n\n----------------------------------------\n\nTITLE: Configuring WasmPlugin for Gateway\nDESCRIPTION: YAML configuration for deploying a basic authentication WasmPlugin targeting the gateway\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/extend-waypoint-wasm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: basic-auth-at-gateway\nspec:\n  targetRefs:\n    - kind: Gateway\n      group: gateway.networking.k8s.io\n      name: bookinfo-gateway\n  url: oci://ghcr.io/istio-ecosystem/wasm-extensions/basic_auth:1.12.0\n  phase: AUTHN\n  pluginConfig:\n    basic_auth_rules:\n      - prefix: \"/productpage\"\n        request_methods:\n          - \"GET\"\n          - \"POST\"\n        credentials:\n          - \"ok:test\"\n          - \"YWRtaW4zOmFkbWluMw==\"\n```\n\n----------------------------------------\n\nTITLE: Creating Ratings-Viewer Authorization Policy in Istio\nDESCRIPTION: This snippet creates a policy to allow the reviews workload to access the ratings workload through GET methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"ratings-viewer\"\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: ratings\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals: [\"cluster.local/ns/default/sa/bookinfo-reviews\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing Ingress HTTP Access\nDESCRIPTION: Command to test the configured Ingress by sending an HTTP request to the exposed endpoint using curl. Demonstrates how to set the Host header for testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/kubernetes-ingress/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST:$INGRESS_PORT/status/200\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Selector Field in Istio Authentication Policy (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to use the selector field in an Istio authentication policy. It targets workloads with the label 'app: product-page'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nselector:\n  matchLabels:\n    app: product-page\n```\n\n----------------------------------------\n\nTITLE: Configuring Fault Injection with Delay in Istio (YAML)\nDESCRIPTION: This example demonstrates how to configure fault injection in Istio using a VirtualService. It introduces a 5-second delay for 0.1% (1 out of 1000) of requests to the ratings service, allowing testing of application resilience to increased latency.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      delay:\n        percentage:\n          value: 0.1\n        fixedDelay: 5s\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Creating IstioOperator Configuration for cluster1\nDESCRIPTION: Creates a YAML configuration file for installing Istio as a primary cluster on cluster1. The configuration specifies meshID, clusterName, and network settings required for multi-cluster operation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > cluster1.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    global:\n      meshID: mesh1\n      multiCluster:\n        clusterName: cluster1\n      network: network1\nEOF\n```\n\n----------------------------------------\n\nTITLE: Error Message from Failed mTLS Connection\nDESCRIPTION: This snippet shows the error output when a connection fails due to strict mTLS requirements being enforced on the target service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_10\n\nLANGUAGE: plain\nCODE:\n```\n...\ncurl.legacy to httpbin.bar: 000\ncommand terminated with exit code 56\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Allow-Read Authorization Policy in Istio\nDESCRIPTION: Example of an authorization policy that allows GET and HEAD access to workloads labeled with app: products in the default namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-read\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n         methods: [\"GET\", \"HEAD\"]\n```\n\n----------------------------------------\n\nTITLE: Testing Policy Precedence with Direct Request\nDESCRIPTION: This snippet shows testing policy precedence by making a direct request from legacy to httpbin.foo, confirming that the workload-specific policy (disabling mTLS) overrides the namespace-wide policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n legacy -o jsonpath={.items..metadata.name})\" -c curl -n legacy -- curl http://httpbin.foo:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPRoute for Gateway API\nDESCRIPTION: Defines an HTTPRoute resource to configure routing rules for the Gateway API gateway\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: httpbin\nspec:\n  parentRefs:\n  - name: mygateway\n    namespace: istio-system\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /status\n    - path:\n        type: PathPrefix\n        value: /delay\n    backendRefs:\n    - name: httpbin\n      port: 8000\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Traffic Routing with Gateway API in Istio\nDESCRIPTION: Example configuration showing how to route HTTP traffic between different service versions using Gateway API's HTTPRoute resource. The configuration demonstrates header-based routing and request header modification for the 'reviews' service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/gateway-mesh-ga/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - matches:\n    - headers:\n      - name: my-favorite-service-mesh\n        value: istio\n    filters:\n    - type: RequestHeaderModifier\n      requestHeaderModifier:\n      add:\n        - name: hello\n          value: world\n    backendRefs:\n    - name: reviews-v2\n      port: 9080\n  - backendRefs:\n    - name: reviews-v1\n      port: 9080\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace and Deploying Workloads in Kubernetes\nDESCRIPTION: Creates a namespace 'foo', enables Istio injection, and deploys httpbin and curl workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl label ns foo istio-injection=enabled\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n foo\n$ kubectl apply -f @samples/curl/curl.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: Applying Ingress Gateway Configuration for httpbin\nDESCRIPTION: This snippet shows how to apply an Ingress Gateway configuration to expose the httpbin.foo service for testing end-user authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin-gateway.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: Allow-All Authorization Policy\nDESCRIPTION: Policy that allows full access to the workload, though requests can still be denied by CUSTOM and DENY policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-all\nspec:\n  action: ALLOW\n  rules:\n  - {}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPRoute for Gateway API\nDESCRIPTION: Defines an HTTPRoute resource to configure routing rules for the Gateway API gateway\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: httpbin\nspec:\n  parentRefs:\n  - name: mygateway\n    namespace: istio-system\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /status\n    - path:\n        type: PathPrefix\n        value: /delay\n    backendRefs:\n    - name: httpbin\n      port: 8000\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Service for Reviews Traffic Routing\nDESCRIPTION: Applies a virtual service in cluster 1 that routes traffic for user 'jason' to versions v2 and v3 (running on cluster2) with 50/50 weight split. All other users' traffic is routed to the local version v1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --context=$CTX_CLUSTER1 -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews.default.svc.cluster.local\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews.default.global\n        subset: v2\n      weight: 50\n    - destination:\n        host: reviews.default.global\n        subset: v3\n      weight: 50\n  - route:\n    - destination:\n        host: reviews.default.svc.cluster.local\n        subset: v1\nEOF\n```\n\n----------------------------------------\n\nTITLE: JWT Validation per Host in Istio YAML\nDESCRIPTION: An authorization policy that requires different JWT issuers for different hosts at the ingress gateway. This allows fine-grained JWT validation where access to hosts is permitted only when the JWT principal matches specified patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/security/security-policy-examples/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: jwt-per-host\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        # the JWT token must have issuer with suffix \"@example.com\"\n        requestPrincipals: [\"*@example.com\"]\n    to:\n    - operation:\n        hosts: [\"example.com\", \"*.example.com\"]\n  - from:\n    - source:\n        # the JWT token must have issuer with suffix \"@another.org\"\n        requestPrincipals: [\"*@another.org\"]\n    to:\n    - operation:\n        hosts: [\".another.org\", \"*.another.org\"]\n```\n\n----------------------------------------\n\nTITLE: TCP Protocol Authorization Policy\nDESCRIPTION: Policy specifically configured for MongoDB workload using TCP protocol, demonstrating non-HTTP authorization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: mongodb-policy\n  namespace: default\nspec:\n selector:\n   matchLabels:\n     app: mongodb\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/bookinfo-ratings-v2\"]\n   to:\n   - operation:\n       ports: [\"27017\"]\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Bookinfo Sample Application\nDESCRIPTION: Executes the cleanup script to uninstall and remove all Bookinfo sample components from the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ samples/bookinfo/platform/kube/cleanup.sh\n```\n\n----------------------------------------\n\nTITLE: Binding Virtual Service to Gateway in Istio (YAML)\nDESCRIPTION: This Virtual Service binds to the previously defined Gateway (ext-host-gwy) to enable routing of external traffic from ext-host.example.com. This binding is necessary for the gateway to function properly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: virtual-svc\nspec:\n  hosts:\n  - ext-host.example.com\n  gateways:\n  - ext-host-gwy\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Manifest\nDESCRIPTION: Command to generate an Istio manifest file for the default profile that can be used with kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/istioctl/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl manifest generate > $HOME/generated-manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Gateway in Istio\nDESCRIPTION: Basic Gateway configuration for handling plaintext HTTP traffic on port 80.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/tls-configuration/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\n...\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n```\n\n----------------------------------------\n\nTITLE: Retrieving Destination Rules in Istio\nDESCRIPTION: This command displays the destination rule configurations that define subsets for each service version in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get destinationrules -o yaml\n```\n\n----------------------------------------\n\nTITLE: Routing Requests to Reviews Service V2 using Istio API\nDESCRIPTION: Kubernetes configuration to route traffic to version 2 of the reviews service using Istio VirtualService.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-timeouts/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v2\n```\n\n----------------------------------------\n\nTITLE: Allow-Nothing Authorization Policy\nDESCRIPTION: Policy that matches nothing, effectively denying all requests when no other ALLOW policies exist.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-nothing\nspec:\n  action: ALLOW\n```\n\n----------------------------------------\n\nTITLE: Allow-Nothing Authorization Policy\nDESCRIPTION: Policy that matches nothing, effectively denying all requests when no other ALLOW policies exist.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-nothing\nspec:\n  action: ALLOW\n```\n\n----------------------------------------\n\nTITLE: Enabling Strict Mutual TLS Mesh-wide\nDESCRIPTION: Applies a mesh-wide peer authentication policy to enforce strict mutual TLS for all workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"default\"\n  namespace: \"istio-system\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Configuring Primary Cluster with IstioOperator (YAML)\nDESCRIPTION: Creates an IstioOperator configuration for the primary cluster (cluster1) with multi-cluster and external istiod settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    global:\n      meshID: mesh1\n      multiCluster:\n        clusterName: cluster1\n      network: network1\n      externalIstiod: true\n```\n\n----------------------------------------\n\nTITLE: Example Output of Verified Deployment with Custom Configuration\nDESCRIPTION: Sample output from the deployed Istio ingress gateway showing that the custom sysctl configuration has been successfully applied. The securityContext section contains the specified sysctl parameter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  …\n  name: istio-ingress\n  namespace: istio-ingress\nspec:\n  template:\n    metadata:\n      …\n    spec:\n      securityContext:\n        sysctls:\n        - name: net.netfilter.nf_conntrack_tcp_timeout_close_wait\n          value: \"10\"\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService with Fault Injection and Retries\nDESCRIPTION: This snippet shows a VirtualService configuration with both fault injection and retry policies, which can lead to unexpected behavior. It then provides an alternative approach using EnvoyFilter for fault injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: helloworld\nspec:\n  hosts:\n    - \"*\"\n  gateways:\n  - helloworld-gateway\n  http:\n  - match:\n    - uri:\n        exact: /hello\n    fault:\n      abort:\n        httpStatus: 500\n        percentage:\n          value: 50\n    retries:\n      attempts: 5\n      retryOn: 5xx\n    route:\n    - destination:\n        host: helloworld\n        port:\n          number: 5000\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: hello-world-filter\nspec:\n  workloadSelector:\n    labels:\n      app: helloworld\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND # will match outbound listeners in all sidecars\n      listener:\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n    patch:\n      operation: INSERT_BEFORE\n      value:\n        name: envoy.fault\n        typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault\"\n          abort:\n            http_status: 500\n            percentage:\n              numerator: 50\n              denominator: HUNDRED\n```\n\n----------------------------------------\n\nTITLE: Querying Proxy Status\nDESCRIPTION: Retrieves an overview of the mesh using the proxy-status command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status\n```\n\n----------------------------------------\n\nTITLE: Installing Ingress Gateway using Helm in Istio\nDESCRIPTION: This snippet installs an Istio ingress gateway using Helm in the external-istiod namespace. It uses the default Istio gateway chart to deploy the gateway components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nhelm install istio-ingressgateway istio/gateway -n external-istiod --kube-context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: HTTPRoute Configuration Example with Gateway API\nDESCRIPTION: This YAML output shows the configuration of an HTTPRoute resource that routes traffic to the reviews-v1 service, including its status indicating that the route has been successfully accepted.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n...\nspec:\n  parentRefs:\n  - group: gateway.networking.k8s.io\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - group: \"\"\n      kind: Service\n      name: reviews-v1\n      port: 9080\n      weight: 1\n    matches:\n    - path:\n        type: PathPrefix\n        value: /\nstatus:\n  parents:\n  - conditions:\n    - lastTransitionTime: \"2022-11-08T19:56:19Z\"\n      message: Route was valid\n      observedGeneration: 8\n      reason: Accepted\n      status: \"True\"\n      type: Accepted\n    - lastTransitionTime: \"2022-11-08T19:56:19Z\"\n      message: All references resolved\n      observedGeneration: 8\n      reason: ResolvedRefs\n      status: \"True\"\n      type: ResolvedRefs\n    controllerName: istio.io/gateway-controller\n    parentRef:\n      group: gateway.networking.k8s.io\n      kind: Service\n      name: reviews\n      port: 9080\n```\n\n----------------------------------------\n\nTITLE: Authenticated Access Authorization Policy\nDESCRIPTION: Policy allowing access only to authenticated users for specified HTTP methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"*\"]\n   to:\n   - operation:\n       methods: [\"GET\", \"POST\"]\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespace for Istio Sidecar Injection in Kubernetes\nDESCRIPTION: This command labels the default namespace to enable automatic Istio sidecar injection for all pods deployed in that namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Gateway for Bookinfo (Bash)\nDESCRIPTION: Creates a Kubernetes Gateway resource for the Bookinfo application to expose it externally.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/gateway-api/bookinfo-gateway.yaml@\n```\n\n----------------------------------------\n\nTITLE: Routing Requests to Reviews Service V2 using Gateway API\nDESCRIPTION: Kubernetes configuration to route traffic to version 2 of the reviews service using Gateway API HTTPRoute.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-timeouts/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - name: reviews-v2\n      port: 9080\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on cluster1 using IstioOperator\nDESCRIPTION: Applies the IstioOperator configuration to install Istio on cluster1 using the istioctl command. This establishes cluster1 as a primary in the Istio mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER1}\" -f cluster1.yaml\n```\n\n----------------------------------------\n\nTITLE: Applying Generated Istio Manifest with kubectl\nDESCRIPTION: Command to apply the generated manifest file to create the istiod component in the target Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f istiod.yaml\n```\n\n----------------------------------------\n\nTITLE: Vulnerable Authorization Policy using DENY action and paths field in YAML\nDESCRIPTION: This YAML snippet demonstrates a vulnerable Istio authorization policy that uses the DENY action with a paths field. This pattern is susceptible to unexpected policy bypasses due to the described vulnerability.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-005/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-path-admin\nspec:\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        paths: [\"/admin\"]\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Pod Status\nDESCRIPTION: Command to verify if the Istio egress gateway pods are deployed in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod -l istio=egressgateway -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Installing Istio without Default Sampling Configuration\nDESCRIPTION: Installs Istio with tracing enabled and configures an OpenTelemetry collector extension provider without setting a default sampling rate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    extensionProviders:\n    - name: otel-tracing\n      opentelemetry:\n        port: 4317\n        service: opentelemetry-collector.observability.svc.cluster.local\n        resource_detectors:\n          environment: {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Basic Helm Installation Syntax\nDESCRIPTION: General syntax for installing Helm charts, showing the basic command structure with release name, chart, and namespace parameters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install <release> <chart> --namespace <namespace> --create-namespace [--set <other_parameters>]\n```\n\n----------------------------------------\n\nTITLE: Applying Destination Rules for Bookinfo Services\nDESCRIPTION: Creates default destination rules for the Bookinfo services using Istio's destination rules configuration. This defines service versions using subsets.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml\n```\n\n----------------------------------------\n\nTITLE: Basic Helm Installation Syntax\nDESCRIPTION: General syntax for installing Helm charts, showing the basic command structure with release name, chart, and namespace parameters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install <release> <chart> --namespace <namespace> --create-namespace [--set <other_parameters>]\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Minimum TLS Version Configuration\nDESCRIPTION: This snippet shows how to create an IstioOperator custom resource to set the minimum TLS version to 1.3 and install Istio using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/tls-configuration/workload-min-tls-version/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./istio.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    meshMTLS:\n      minProtocolVersion: TLSV1_3\nEOF\n$ istioctl install -f ./istio.yaml\n```\n\n----------------------------------------\n\nTITLE: Applying Generated Istio Manifest with kubectl\nDESCRIPTION: Command to apply the generated manifest file to create the istiod component in the target Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f istiod.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on Remote Cluster with IstioOperator\nDESCRIPTION: Command to apply the IstioOperator configuration to cluster2, installing Istio in remote mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER2}\" -f cluster2.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Request Timeout in Istio Virtual Service (YAML)\nDESCRIPTION: This Virtual Service configures a 10-second timeout for HTTP requests to the v1 subset of the ratings service. This allows fine-tuning of timeout settings on a per-service basis without modifying application code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n  - ratings\n  http:\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n    timeout: 10s\n```\n\n----------------------------------------\n\nTITLE: Configuring Mutual TLS for Ingress Gateway\nDESCRIPTION: Updates the httpbin-credential secret to include the CA certificate for client verification in mutual TLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system delete secret httpbin-credential\n$ kubectl create -n istio-system secret generic httpbin-credential \\\n  --from-file=tls.key=example_certs1/httpbin.example.com.key \\\n  --from-file=tls.crt=example_certs1/httpbin.example.com.crt \\\n  --from-file=ca.crt=example_certs1/example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Gateway with Helm\nDESCRIPTION: Creates a new namespace for the ingress gateway and installs it using Helm. Includes an optional command for OpenShift clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ helm install istio-ingressgateway istio/gateway -n istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Configuring an Istio Gateway with TLS Certificate in YAML\nDESCRIPTION: Creates an Istio Gateway resource that uses the TLS certificate generated by cert-manager. The credentialName should match the secretName defined in the Certificate resource, and the hosts should match the DNS names in the Certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/certmanager/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: ingress-cert # This should match the Certificate secretName\n    hosts:\n    - my.example.com # This should match a DNS name in the Certificate\n```\n\n----------------------------------------\n\nTITLE: Creating and Annotating istio-system Namespace in Remote Cluster\nDESCRIPTION: Commands to create the istio-system namespace in cluster2 and annotate it to specify cluster1 as its control plane cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --context=\"${CTX_CLUSTER2}\" create namespace istio-system\n$ kubectl --context=\"${CTX_CLUSTER2}\" annotate namespace istio-system topology.istio.io/controlPlaneClusters=cluster1\n```\n\n----------------------------------------\n\nTITLE: Testing X-Forwarded-For Header Handling\nDESCRIPTION: This curl command simulates a request with proxy addresses in the X-Forwarded-For header and displays the resulting header received by the httpbin workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -H 'X-Forwarded-For: 56.5.6.7, 72.9.5.6, 98.1.2.3' \"$GATEWAY_URL/get?show_env=true\" | jq '.headers[\"X-Forwarded-For\"][0]'\n  \"56.5.6.7, 72.9.5.6, 98.1.2.3,10.244.0.1\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway Resource\nDESCRIPTION: Defines a Gateway resource that selects the ingress gateway deployment using the specified label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  selector:\n    istio: ingressgateway\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthorizationPolicy with mTLS-only fields in YAML\nDESCRIPTION: Example of an ALLOW policy using mTLS-only fields to allow requests not from namespace 'foo'. This configuration may unexpectedly allow plain text requests from 'foo' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-004/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: allow-ns-not-foo\nspec:\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        notNamespaces: [\"foo\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Subsets with Destination Rule in Istio (YAML)\nDESCRIPTION: This Destination Rule configures three different subsets (v1, v2, v3) for the my-svc service, each identified by version labels. It defines a default traffic policy with RANDOM load balancing, while overriding the v2 subset to use ROUND_ROBIN load balancing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: my-destination-rule\nspec:\n  host: my-svc\n  trafficPolicy:\n    loadBalancer:\n      simple: RANDOM\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n    trafficPolicy:\n      loadBalancer:\n        simple: ROUND_ROBIN\n  - name: v3\n    labels:\n      version: v3\n```\n\n----------------------------------------\n\nTITLE: Installing Gateway API CRDs\nDESCRIPTION: Command to install Gateway API Custom Resource Definitions if they are not present on the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || \\\n  { kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd?ref={{< k8s_gateway_api_version >}}\" | kubectl apply -f -; }\n```\n\n----------------------------------------\n\nTITLE: Configuring ALLOW Authorization Policy\nDESCRIPTION: Creates an authorization policy to allow requests to ports 9000 and 9001 for the 'tcp-echo' workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: tcp-policy\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: tcp-echo\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        ports: [\"9000\", \"9001\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Istiod Metrics Scraping in Prometheus\nDESCRIPTION: Prometheus job configuration to scrape metrics from Istiod's http-monitoring port in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/prometheus/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- job_name: 'istiod'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - istio-system\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: istiod;http-monitoring\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Istioctl Describe Command\nDESCRIPTION: Shows the basic syntax for using the istioctl experimental describe command to get information about a pod's configuration in the Istio mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental describe pod <pod-name>[.<namespace>]\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Manifest with Default Revision for Validation\nDESCRIPTION: Generates an Istio manifest with the defaultRevision set, which enables validation via the istiod-default-validator webhook.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate --set values.defaultRevision=default\n```\n\n----------------------------------------\n\nTITLE: Accessing the Kiali Dashboard in Istio\nDESCRIPTION: Command to open the Kiali dashboard using the istioctl CLI tool, which provides visualization of the service mesh topology and traffic flow.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard kiali\n```\n\n----------------------------------------\n\nTITLE: Testing JWT Authorization\nDESCRIPTION: This snippet shows how to test the JWT authorization by sending a request without a token, which should result in a 403 error code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Applying Namespace-Level Mutual TLS Policy in Istio\nDESCRIPTION: Applies a PeerAuthentication policy to enforce STRICT mutual TLS in the 'foo' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: default\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Adding Delay to Ratings Service using Istio API\nDESCRIPTION: Configuration to inject a 2-second delay to all calls to the ratings service using Istio VirtualService fault injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-timeouts/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      delay:\n        percentage:\n          value: 100\n        fixedDelay: 2s\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Gateway API Resource\nDESCRIPTION: Configuration to create a Kubernetes Gateway API resource that exposes the httpbin service on port 80 with HTTP protocol. The gateway is configured with the Istio gateway class and accepts traffic for the host httpbin.example.com.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: http\n    hostname: \"httpbin.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: Same\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthorizationPolicy for Access Control in Istio\nDESCRIPTION: Apply Istio's AuthorizationPolicy to control access for workloads. This allows fine-grained control over which services can communicate with each other.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/secure-apps-with-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-specific-service\n  namespace: default\nspec:\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals: [\"cluster.local/ns/default/sa/service-account-name\"]\n  to:\n    - operation:\n        methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Workloads for External Authorization Demo\nDESCRIPTION: Commands to create a namespace 'foo', enable Istio injection, and deploy httpbin and curl test applications that will be used to demonstrate external authorization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl label ns foo istio-injection=enabled\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n foo\n$ kubectl apply -f @samples/curl/curl.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployments to Apply Revision Tag Changes\nDESCRIPTION: Restarts deployments in multiple namespaces to apply the updated revision tag associations, triggering sidecar re-injection with new control plane versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl rollout restart deployment -n app-ns-1\n$ kubectl rollout restart deployment -n app-ns-2\n```\n\n----------------------------------------\n\nTITLE: Enabling Tracing with Jaeger Provider\nDESCRIPTION: This command applies a Telemetry custom resource that enables tracing for the mesh using the previously configured Jaeger provider. This configuration is applied at the mesh level in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/jaeger/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n  - providers:\n    - name: jaeger\nEOF\n```\n\n----------------------------------------\n\nTITLE: Applying Mutual TLS Policy\nDESCRIPTION: Applies a PeerAuthentication policy to enforce strict mTLS for workloads in the 'foo' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n foo -f - <<EOF\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"default\"\nspec:\n  mtls:\n    mode: STRICT\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Repository for Istio Installation\nDESCRIPTION: Commands to add the Istio Helm repository and update it. This is a prerequisite step for installing Istio components using Helm charts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/all-in-one/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add istio https://istio-release.storage.googleapis.com/charts\n$ helm repo update\n```\n\n----------------------------------------\n\nTITLE: Splitting Traffic 50/50 Between v1 and v3 Using Gateway API\nDESCRIPTION: This command applies a Gateway API HTTPRoute to split traffic 50% to reviews:v1 and 50% to reviews:v3.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/gateway-api/route-reviews-50-v3.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway\nDESCRIPTION: Creates an Istio Gateway resource that defines the ingress configuration with TLS settings and host routing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/custom-ingress-gateway/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  annotations:\n  name: istio-custom-gateway\n  namespace: default\nspec:\n  selector:\n    istio: my-ingressgateway\n  servers:\n  - hosts:\n    - '*.mydemo.com'\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n    tls:\n      httpsRedirect: true\n  - hosts:\n    - '*.mydemo.com'\n    port:\n      name: https\n      number: 443\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      privateKey: /etc/istio/ingressgateway-certs/tls.key\n      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt\n```\n\n----------------------------------------\n\nTITLE: Installing Istiod Control Plane with Ambient Profile\nDESCRIPTION: Command to install the Istiod control plane component configured for ambient mode. Istiod manages and configures proxies to route traffic within the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod --namespace istio-system --set profile=ambient --wait\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OPA Configuration\nDESCRIPTION: Installs Istio and configures mesh options to enable OPA as an extension provider. This sets up the necessary infrastructure for integrating OPA with Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -y -f - <<'EOF'\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\n    accessLogFormat: |\n      [OPA DEMO] my-new-dynamic-metadata: \"%DYNAMIC_METADATA(envoy.filters.http.ext_authz)%\"\n    extensionProviders:\n    - name: \"opa.local\"\n      envoyExtAuthzGrpc:\n        service: \"opa.opa.svc.cluster.local\"\n        port: \"9191\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Resource for Namespace Scoping in Istio\nDESCRIPTION: This YAML configuration demonstrates how to use the Sidecar resource to limit which configurations a workload imports. It shows importing all configurations from the current namespace, all from the bookinfo namespace, and only example.com from the external-services namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/configuration-scoping/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Sidecar\nmetadata:\n  name: default\nspec:\n  egress:\n  - hosts:\n    - \"./*\" # Import all configuration from our own namespace\n    - \"bookinfo/*\" # Import all configuration from the bookinfo namespace\n    - \"external-services/example.com\" # Import only 'example.com' from the external-services namespace\n```\n\n----------------------------------------\n\nTITLE: Creating Destination Rule for Circuit Breaking in Istio\nDESCRIPTION: This YAML snippet defines a DestinationRule for the httpbin service, configuring circuit breaking settings including connection pool limits and outlier detection parameters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: httpbin\nspec:\n  host: httpbin\n  trafficPolicy:\n    connectionPool:\n      tcp:\n        maxConnections: 1\n      http:\n        http1MaxPendingRequests: 1\n        maxRequestsPerConnection: 1\n    outlierDetection:\n      consecutive5xxErrors: 1\n      interval: 1s\n      baseEjectionTime: 3m\n      maxEjectionPercent: 100\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CRDs using kubectl\nDESCRIPTION: Command to remove all Istio-related Custom Resource Definitions (CRDs) from the Kubernetes cluster. This permanently removes any Istio resources created in the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crd -oname | grep --color=never 'istio.io' | xargs kubectl delete\n```\n\n----------------------------------------\n\nTITLE: Testing External Service Access\nDESCRIPTION: Command to test external service access by making an HTTP request to httpbin.org from a pod in the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$SOURCE_POD\" -c curl -- curl -sS http://httpbin.org/headers\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CRDs using kubectl\nDESCRIPTION: Command to remove all Istio-related Custom Resource Definitions (CRDs) from the Kubernetes cluster. This permanently removes any Istio resources created in the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crd -oname | grep --color=never 'istio.io' | xargs kubectl delete\n```\n\n----------------------------------------\n\nTITLE: Creating a Mesh-wide Istio Authorization Policy in YAML\nDESCRIPTION: A v1beta1 AuthorizationPolicy in the root namespace (istio-config), which applies to workloads in all namespaces across the mesh. This demonstrates the root namespace functionality for creating mesh-wide policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: policy\n namespace: istio-config\nspec:\n rules:\n # omitted\n```\n\n----------------------------------------\n\nTITLE: Verifying 50/50 Traffic Split Configuration in Gateway API\nDESCRIPTION: This command retrieves the HTTPRoute configuration for the reviews service to verify the 50/50 traffic split between v1 and v3.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get httproute reviews -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\n...\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - group: \"\"\n      kind: Service\n      name: reviews-v1\n      port: 9080\n      weight: 50\n    - group: \"\"\n      kind: Service\n      name: reviews-v3\n      port: 9080\n      weight: 50\n    matches:\n    - path:\n        type: PathPrefix\n        value: /\nstatus:\n  parents:\n  - conditions:\n    - lastTransitionTime: \"2022-11-10T18:13:43Z\"\n      message: Route was valid\n      observedGeneration: 14\n      reason: Accepted\n      status: \"True\"\n      type: Accepted\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Traffic Mirroring with Gateway API HTTPRoute\nDESCRIPTION: Creates an HTTPRoute resource that routes traffic to httpbin-v1 while mirroring requests to httpbin-v2 using the Gateway API specification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: httpbin\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: httpbin\n    port: 8000\n  rules:\n  - filters:\n    - type: RequestMirror\n      requestMirror:\n        backendRef:\n          name: httpbin-v2\n          port: 80\n    backendRefs:\n    - name: httpbin-v1\n      port: 80\n```\n\n----------------------------------------\n\nTITLE: Configuring Double TLS in Istio\nDESCRIPTION: This snippet shows how to configure a ServiceEntry and DestinationRule for TLS origination to httpbin.org. It demonstrates the incorrect configuration that leads to double encryption and provides the correct configuration to fix the issue.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - httpbin.org\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: originate-tls\nspec:\n  host: httpbin.org\n  trafficPolicy:\n    tls:\n      mode: SIMPLE\n```\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  hosts:\n  - httpbin.org\n  ports:\n  - number: 443\n    name: http\n    protocol: HTTP\n```\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  hosts:\n  - httpbin.org\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n    targetPort: 443\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Ports for Node Port Configuration\nDESCRIPTION: Exports the node port values for HTTP and HTTPS when an external load balancer is not available.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].nodePort}')\nexport SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"https\")].nodePort}')\n```\n\n----------------------------------------\n\nTITLE: Generating Root Certificate and Key for TLS in Bash\nDESCRIPTION: Creates a root certificate and private key using OpenSSL to sign certificates for services. The certificate is valid for 365 days and uses RSA 2048-bit encryption.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example.com.key -out example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Creating Allow-Nothing Authorization Policy in Istio\nDESCRIPTION: This snippet creates an 'allow-nothing' policy in the default namespace, which denies all requests to workloads in that namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-nothing\n  namespace: default\nspec:\n  {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Exposing Istio Control Plane for Remote Cluster Access\nDESCRIPTION: Command to apply the expose-istiod.yaml configuration, which makes the Istio control plane in cluster1 accessible to services in cluster2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --context=\"${CTX_CLUSTER1}\" -n istio-system -f \\\n    @samples/multicluster/expose-istiod.yaml@\n```\n\n----------------------------------------\n\nTITLE: Verifying Prometheus Service in Kubernetes\nDESCRIPTION: Command to verify that the Prometheus service is running in the Istio system namespace. Shows how to check the service status including its cluster IP and port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/using-istio-dashboard/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get svc prometheus\n```\n\n----------------------------------------\n\nTITLE: Customizing Trace Sampling Rate in Istio\nDESCRIPTION: This snippet shows how to modify the default random sampling rate to 50% by updating the IstioOperator YAML. The sampling rate can be specified with a precision of 0.01 in the range of 0.0 to 100.0.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/mesh-and-proxy-config/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing:\n        sampling: 50\n```\n\n----------------------------------------\n\nTITLE: Restricting Access to Authenticated Users Only in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy that allows only authenticated users to access GET and POST methods on the httpbin service by setting the 'principals' field to '*', which matches any authenticated identity.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"*\"]\n   to:\n   - operation:\n       methods: [\"GET\", \"POST\"]\n```\n\n----------------------------------------\n\nTITLE: Namespace Isolation with mTLS in Istio YAML\nDESCRIPTION: Policies that enable strict mTLS on a namespace and allow traffic only from within the same namespace. This creates a secure boundary around the namespace, preventing access from other namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/security/security-policy-examples/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: default\n  namespace: foo\nspec:\n  mtls:\n    mode: STRICT\n---\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo-isolation\n  namespace: foo\nspec:\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        namespaces: [\"foo\"]\n```\n\n----------------------------------------\n\nTITLE: Creating a Mesh-wide Istio Authorization Policy in YAML\nDESCRIPTION: A v1beta1 AuthorizationPolicy in the root namespace (istio-config), which applies to workloads in all namespaces across the mesh. This demonstrates the root namespace functionality for creating mesh-wide policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: policy\n namespace: istio-config\nspec:\n rules:\n # omitted\n```\n\n----------------------------------------\n\nTITLE: Creating Egress Gateway and DestinationRule with Gateway API\nDESCRIPTION: Uses the Kubernetes Gateway API to configure an egress gateway for edition.cnn.com and creates a destination rule for TLS communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: cnn-egress-gateway\n  annotations:\n    networking.istio.io/service-type: ClusterIP\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: https-listener-for-tls-origination\n    hostname: edition.cnn.com\n    port: 80\n    protocol: HTTPS\n    tls:\n      mode: Terminate\n      options:\n        gateway.istio.io/tls-terminate-mode: ISTIO_MUTUAL\n    allowedRoutes:\n      namespaces:\n        from: Same\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-cnn\nspec:\n  host: cnn-egress-gateway-istio.default.svc.cluster.local\n  trafficPolicy:\n    loadBalancer:\n      simple: ROUND_ROBIN\n    portLevelSettings:\n    - port:\n        number: 80\n      tls:\n        mode: ISTIO_MUTUAL\n        sni: edition.cnn.com\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing External Authorization with Allowed Request in Istio\nDESCRIPTION: This bash command tests the external authorization by sending a request to the '/headers' path with a header that should be allowed by the external authorizer. It also pipes the output through jq to format the response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl \"http://httpbin.foo:8000/headers\" -H \"x-ext-authz: allow\" -s | jq '.headers'\n```\n\n----------------------------------------\n\nTITLE: Disabling Sensitive HTTP Hosts in Istio VirtualService\nDESCRIPTION: This VirtualService configuration explicitly disables access to sensitive hosts when accessed through non-matching SNI connections. It returns HTTP 421 status code for all requests to admin.example.com that come through the guest gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: disable-sensitive\nspec:\n  hosts:\n  - \"admin.example.com\"\n  gateways:\n  - guestgateway\n  http:\n  - match:\n    - uri:\n        prefix: /\n    fault:\n      abort:\n        percentage:\n          value: 100\n        httpStatus: 421\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: dest.default.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cluster with IstioOperator (YAML)\nDESCRIPTION: Creates an IstioOperator configuration for the remote cluster (cluster2) with remote pilot address and injection path settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: remote\n  values:\n    istiodRemote:\n      injectionPath: /inject/cluster/cluster2/net/network2\n    global:\n      remotePilotAddress: ${DISCOVERY_ADDRESS}\n```\n\n----------------------------------------\n\nTITLE: Verifying 50/50 Traffic Split Configuration in Gateway API\nDESCRIPTION: This command retrieves the HTTPRoute configuration for the reviews service to verify the 50/50 traffic split between v1 and v3.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get httproute reviews -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\n...\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - group: \"\"\n      kind: Service\n      name: reviews-v1\n      port: 9080\n      weight: 50\n    - group: \"\"\n      kind: Service\n      name: reviews-v3\n      port: 9080\n      weight: 50\n    matches:\n    - path:\n        type: PathPrefix\n        value: /\nstatus:\n  parents:\n  - conditions:\n    - lastTransitionTime: \"2022-11-10T18:13:43Z\"\n      message: Route was valid\n      observedGeneration: 14\n      reason: Accepted\n      status: \"True\"\n      type: Accepted\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Origination in Istio with ServiceEntry and DestinationRule\nDESCRIPTION: Sets up TLS origination by applying a ServiceEntry that redirects HTTP requests to port 443 and a DestinationRule that configures SIMPLE TLS mode for port 80. This enables the sidecar proxy to initiate HTTPS connections for HTTP requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: edition-cnn-com\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 80\n    name: http-port\n    protocol: HTTP\n    targetPort: 443\n  - number: 443\n    name: https-port\n    protocol: HTTPS\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: edition-cnn-com\nspec:\n  host: edition.cnn.com\n  trafficPolicy:\n    portLevelSettings:\n    - port:\n        number: 80\n      tls:\n        mode: SIMPLE # initiates HTTPS when accessing edition.cnn.com\nEOF\n```\n\n----------------------------------------\n\nTITLE: Customizing Pilot Resources and HPA\nDESCRIPTION: YAML configuration for customizing Pilot's resource requests and horizontal pod autoscaling settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  components:\n    pilot:\n      k8s:\n        resources:\n          requests:\n            cpu: 1000m # override from default 500m\n            memory: 4096Mi # ... default 2048Mi\n        hpaSpec:\n          maxReplicas: 10 # ... default 5\n          minReplicas: 2  # ... default 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Mutual TLS Gateway in Istio\nDESCRIPTION: Gateway configuration for mutual TLS authentication, requiring and validating client certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/tls-configuration/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\n...\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: MUTUAL\n      caCertificates: ...\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Gateway with IstioOperator\nDESCRIPTION: Creates a new namespace for the ingress gateway and installs it using the IstioOperator configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ istioctl install -f ingress.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Istio CNI Node Agent with IstioOperator\nDESCRIPTION: This command deploys the Istio CNI node agent using IstioOperator configuration. It enables the CNI component in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/cni/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > istio-cni.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  components:\n    cni:\n      namespace: istio-system\n      enabled: true\nEOF\n$ istioctl install -f istio-cni.yaml -y\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Minimal Profile for Gateway API\nDESCRIPTION: Command to install Istio using the minimal profile, which doesn't include the istio-ingressgateway component. This is useful when you plan to use Gateway API instead of the default Istio Gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=minimal\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for External Service Using Gateway API HTTPRoute\nDESCRIPTION: This snippet creates a Gateway API HTTPRoute resource to set a 3-second timeout for requests to httpbin.org. It's an alternative to using Istio VirtualService, demonstrating the Gateway API approach to traffic management for external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: httpbin-ext\nspec:\n  parentRefs:\n  - kind: ServiceEntry\n    group: networking.istio.io\n    name: httpbin-ext\n  hostnames:\n  - httpbin.org\n  rules:\n  - timeouts:\n      request: 3s\n    backendRefs:\n    - kind: Hostname\n      group: networking.istio.io\n      name: httpbin.org\n      port: 80\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Values for Istio Dual-Stack Support\nDESCRIPTION: This YAML configuration enables dual-stack support in Istio using Helm values. It sets the necessary proxy metadata and environment variables, and optionally configures gateways for dual-stack.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  defaultConfig:\n    proxyMetadata:\n      ISTIO_DUAL_STACK: \"true\"\nvalues:\n  pilot:\n    env:\n      ISTIO_DUAL_STACK: \"true\"\n  # The below values are optional and can be used based on your requirements\n  gateways:\n    istio-ingressgateway:\n      ipFamilyPolicy: RequireDualStack\n    istio-egressgateway:\n      ipFamilyPolicy: RequireDualStack\n```\n\n----------------------------------------\n\nTITLE: Checking Virtual Service Configuration\nDESCRIPTION: Shows how to apply virtual services that route traffic to v1 pods and then verify the configuration using the describe command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n$ export REVIEWS_V1_POD=$(kubectl get pod -l app=reviews,version=v1 -o jsonpath='{.items[0].metadata.name}')\n$ istioctl x describe pod $REVIEWS_V1_POD\n...\nVirtualService: reviews\n   1 HTTP route(s)\n```\n\n----------------------------------------\n\nTITLE: Installing Loki with Istio for Access Log Collection\nDESCRIPTION: Commands to install Grafana Loki for log collection in an Istio environment. This installs the OpenTelemetry collector configuration and Loki as a log storage backend in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f @samples/open-telemetry/loki/iop.yaml@ --skip-confirmation\n$ kubectl apply -f @samples/addons/loki.yaml@ -n istio-system\n$ kubectl apply -f @samples/open-telemetry/loki/otel.yaml@ -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Detecting Virtual Service Routing Issues\nDESCRIPTION: Shows how istioctl describe provides warnings when virtual services are configured but traffic won't reach certain pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ export REVIEWS_V2_POD=$(kubectl get pod -l app=reviews,version=v2 -o jsonpath='{.items[0].metadata.name}')\n$ istioctl x describe pod $REVIEWS_V2_POD\n...\nVirtualService: reviews\n   WARNING: No destinations match pod subsets (checked 1 HTTP routes)\n      Route to non-matching subset v1 for (everything)\n```\n\n----------------------------------------\n\nTITLE: Deploying Httpbin Service with TLS Configuration\nDESCRIPTION: Deploys the httpbin service with the necessary volume mount configurations for certificate access, exposing both HTTPS and HTTP ports.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n test apply -f - <<EOF\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: httpbin\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  labels:\n    app: httpbin\n    service: httpbin\nspec:\n  ports:\n  - port: 8443\n    name: https\n    targetPort: 9080\n  - port: 8080\n    name: http\n    targetPort: 9081\n  selector:\n    app: httpbin\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: httpbin\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: httpbin\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: httpbin\n        version: v1\n      annotations:\n        sidecar.istio.io/userVolume: '{\"tls-secret\":{\"secret\":{\"secretName\":\"httpbin-mtls-termination\",\"optional\":true}},\"tls-ca-secret\":{\"secret\":{\"secretName\":\"httpbin-mtls-termination-cacert\"}}}'  \n        sidecar.istio.io/userVolumeMount: '{\"tls-secret\":{\"mountPath\":\"/etc/istio/tls-certs/\",\"readOnly\":true},\"tls-ca-secret\":{\"mountPath\":\"/etc/istio/tls-ca-certs/\",\"readOnly\":true}}'\n    spec:\n      serviceAccountName: httpbin\n      containers:\n      - image: docker.io/kennethreitz/httpbin\n        imagePullPolicy: IfNotPresent\n        name: httpbin\n        ports:\n        - containerPort: 80\nEOF\n```\n\n----------------------------------------\n\nTITLE: Restricting VirtualService Visibility to Current Namespace\nDESCRIPTION: Example of a VirtualService that restricts its visibility to the current namespace using the exportTo field. This prevents the routing rules from affecting workloads in other namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myservice\nspec:\n  hosts:\n  - myservice.com\n  exportTo:\n  - \".\"\n  http:\n  - route:\n    - destination:\n        host: myservice\n```\n\n----------------------------------------\n\nTITLE: Applying a Waypoint for a Pod in Istio Ambient Mesh (Bash)\nDESCRIPTION: This command creates a waypoint named 'reviews-v2-pod-waypoint' specifically for workload targeting rather than the default service targeting behavior. It uses the 'istioctl waypoint apply' command with the '--for workload' parameter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint apply -n default --name reviews-v2-pod-waypoint --for workload\n```\n\n----------------------------------------\n\nTITLE: Setting Default Kubernetes Context\nDESCRIPTION: Command to switch the current Kubernetes context to the Kind cluster\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config use-context kind-istio-testing\n```\n\n----------------------------------------\n\nTITLE: Implementing Global Local Rate Limit EnvoyFilter\nDESCRIPTION: EnvoyFilter configuration that applies local rate limiting to all traffic through the productpage service, allowing 4 requests per minute.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/policy-enforcement/rate-limit/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: filter-local-ratelimit-svc\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      app: productpage\n  configPatches:\n    - applyTo: HTTP_FILTER\n      match:\n        context: SIDECAR_INBOUND\n        listener:\n          filterChain:\n            filter:\n              name: \"envoy.filters.network.http_connection_manager\"\n      patch:\n        operation: INSERT_BEFORE\n        value:\n          name: envoy.filters.http.local_ratelimit\n          typed_config:\n            \"@type\": type.googleapis.com/udpa.type.v1.TypedStruct\n            type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit\n            value:\n              stat_prefix: http_local_rate_limiter\n              token_bucket:\n                max_tokens: 4\n                tokens_per_fill: 4\n                fill_interval: 60s\n              filter_enabled:\n                runtime_key: local_rate_limit_enabled\n                default_value:\n                  numerator: 100\n                  denominator: HUNDRED\n              filter_enforced:\n                runtime_key: local_rate_limit_enforced\n                default_value:\n                  numerator: 100\n                  denominator: HUNDRED\n              response_headers_to_add:\n                - append: false\n                  header:\n                    key: x-local-rate-limit\n                    value: 'true'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Querying Requests to Productpage Service in Prometheus\nDESCRIPTION: This Prometheus query counts all requests to the productpage service in the default namespace. It demonstrates how to filter metrics for a specific service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_4\n\nLANGUAGE: plain\nCODE:\n```\nistio_requests_total{destination_service=\"productpage.default.svc.cluster.local\"}\n```\n\n----------------------------------------\n\nTITLE: Accessing Httpbin Service via Ingress\nDESCRIPTION: Command to access the httpbin service through the ingress gateway using curl, setting the Host header.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST:$INGRESS_PORT/status/200\"\n```\n\n----------------------------------------\n\nTITLE: Labeling Istio System Namespace\nDESCRIPTION: Labels the namespace where Istio control plane and egress gateway are running.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace istio-system istio=system\n```\n\n----------------------------------------\n\nTITLE: Testing Gateway Access\nDESCRIPTION: This snippet demonstrates how to test access to the httpbin service through the configured gateway before applying JWT authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPRoute for Service-Specific Traffic Routing\nDESCRIPTION: YAML configuration for an HTTPRoute that manages traffic routing for the 'reviews' service, splitting traffic between two backend versions with different weights.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/l7-features/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\n  namespace: default\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - name: reviews-v1\n      port: 9080\n      weight: 90\n    - name: reviews-v2\n      port: 9080\n      weight: 10\n```\n\n----------------------------------------\n\nTITLE: Creating Allow-List Authorization Policy with remoteIpBlocks (Istio APIs)\nDESCRIPTION: Creates an authorization policy using remoteIpBlocks for scenarios using X-Forwarded-For or PROXY Protocol. Applied to the Istio ingress gateway for controlling access based on original client IP addresses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ingress-policy\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      app: istio-ingressgateway\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        remoteIpBlocks: [\"1.2.3.4\", \"5.6.7.0/24\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Egress Gateway via IstioOperator\nDESCRIPTION: YAML configuration to enable the Istio egress gateway component using IstioOperator.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  components:\n    egressGateways:\n    - name: istio-egressgateway\n      enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-Pod Sampling with Annotations\nDESCRIPTION: Example of overriding mesh-wide sampling settings by adding the proxy.istio.io/config annotation to a Pod specification with a sampling rate of 20%.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: curl\nspec:\n  ...\n  template:\n    metadata:\n      ...\n      annotations:\n        ...\n        proxy.istio.io/config: |\n          tracing:\n            sampling: 20\n    spec:\n      ...\n```\n\n----------------------------------------\n\nTITLE: Enabling Strict Mutual TLS for a Namespace\nDESCRIPTION: Applies a namespace-wide peer authentication policy to enforce strict mutual TLS for all workloads in the 'foo' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"default\"\n  namespace: \"foo\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Configure Kiali Gateway and Routing\nDESCRIPTION: Kubernetes configurations to expose Kiali securely via HTTPS using Gateway, VirtualService, and DestinationRule resources\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: kiali-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https-kiali\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: telemetry-gw-cert\n    hosts:\n    - \"kiali.${INGRESS_DOMAIN}\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: kiali-vs\n  namespace: istio-system\nspec:\n  hosts:\n  - \"kiali.${INGRESS_DOMAIN}\"\n  gateways:\n  - kiali-gateway\n  http:\n  - route:\n    - destination:\n        host: kiali\n        port:\n          number: 20001\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: kiali\n  namespace: istio-system\nspec:\n  host: kiali\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Enabling Access Logs Using istioctl Command in Istio\nDESCRIPTION: This command enables access logging in Istio by setting the meshConfig.accessLogFile parameter to output logs to standard output when installing or upgrading Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install <flags-you-used-to-install-Istio> --set meshConfig.accessLogFile=/dev/stdout\n```\n\n----------------------------------------\n\nTITLE: Testing Path Mismatch with JWT Token for Standalone OPA Setup\nDESCRIPTION: Tests accessing the /get endpoint with a JWT token that only authorizes /headers, expecting a 403 Forbidden response due to path mismatch.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin:8000/get -H \"Authorization: Bearer $TOKEN_PATH_HEADERS\" -s -o /dev/null -w \"%{http_code}\\n\"\n403\n```\n\n----------------------------------------\n\nTITLE: Verifying 50/50 Traffic Split Configuration in Istio APIs\nDESCRIPTION: This command retrieves the VirtualService configuration for the reviews service to verify the 50/50 traffic split between v1 and v3.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get virtualservice reviews -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\n...\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n      weight: 50\n    - destination:\n        host: reviews\n        subset: v3\n      weight: 50\n```\n\n----------------------------------------\n\nTITLE: Using tcpdump to Verify Encrypted Traffic in Istio\nDESCRIPTION: Demonstrates how to use tcpdump to verify that traffic is encrypted when mutual TLS is enforced.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -nfoo \"$(kubectl get pod -nfoo -lapp=httpbin -ojsonpath={.items..metadata.name})\" -c istio-proxy -- sudo tcpdump dst port 80  -A\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret from cluster2 to cluster1\nDESCRIPTION: Creates and applies a remote secret that provides cluster1 with access to cluster2's API server. This establishes bi-directional endpoint discovery between the two clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl create-remote-secret \\\n    --context=\"${CTX_CLUSTER2}\" \\\n    --name=cluster2 | \\\n    kubectl apply -f - --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Applying Per-Path Token Requirement (Gateway API)\nDESCRIPTION: This snippet shows how to modify the AuthorizationPolicy to require JWT tokens only for the /headers path using Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"frontend-ingress\"\n  namespace: foo\nspec:\n  targetRef:\n    kind: Gateway\n    group: gateway.networking.k8s.io\n    name: httpbin-gateway\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notRequestPrincipals: [\"*\"]\n    to:\n    - operation:\n        paths: [\"/headers\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for www.wikipedia.org\nDESCRIPTION: This snippet creates a ServiceEntry for the destination server www.wikipedia.org, defining the host, port, and protocol for the external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: www-wikipedia\nspec:\n  hosts:\n  - www.wikipedia.org\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway, VirtualService, and DestinationRules for Traffic Management\nDESCRIPTION: Kubernetes configuration that sets up an Istio Gateway, VirtualService with 50/50 traffic splitting between reviews v1 and v2, and DestinationRules that map subsets to service versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f -\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: reviews-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default controller\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - reviews-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /reviews\n    route:\n    - destination:\n        host: reviews\n        subset: v1\n      weight: 50\n    - destination:\n        host: reviews\n        subset: v2\n      weight: 50\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n  - name: v3\n    labels:\n      version: v3\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying Ingress Host and Ports\nDESCRIPTION: Displays the values of the environment variables to verify they were set correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\necho \"$INGRESS_HOST\"\n```\n\nLANGUAGE: bash\nCODE:\n```\necho \"$INGRESS_PORT\"\n```\n\nLANGUAGE: bash\nCODE:\n```\necho \"$SECURE_INGRESS_PORT\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Destination Rule Configuration\nDESCRIPTION: Demonstrates how to apply destination rules with mutual TLS and then inspect how they affect a pod's configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/destination-rule-all-mtls.yaml@\n$ istioctl x describe pod $RATINGS_POD\nPod: ratings-v1-f745cf57b-qrxl2\n   Pod Ports: 9080 (ratings), 15090 (istio-proxy)\n--------------------\nService: ratings\n   Port: http 9080/HTTP\nDestinationRule: ratings for \"ratings\"\n   Matching subsets: v1\n      (Non-matching subsets v2,v2-mysql,v2-mysql-vm)\n   Traffic Policy TLS Mode: ISTIO_MUTUAL\n```\n\n----------------------------------------\n\nTITLE: Customizing IstioControlPlane Configuration in YAML\nDESCRIPTION: Example showing how to customize an IstioControlPlane resource by disabling telemetry while using the demo profile. This demonstrates how to modify specific features in the Istio installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha2\nkind: IstioControlPlane\nmetadata:\n  namespace: istio-operator\n  name: example-istiocontrolplane\nspec:\n  profile: demo\n  telemetry:\n    enabled: false\n```\n\n----------------------------------------\n\nTITLE: Adding Environment Variable-based Tags to Traces\nDESCRIPTION: This snippet shows how to add a custom tag whose value is derived from a workload proxy environment variable. An optional default value can be specified for when the environment variable is not available.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/mesh-and-proxy-config/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing:\n        custom_tags:\n          my_tag_env:\n            environment:\n              name: <ENV_VARIABLE_NAME>\n              defaultValue: <VALUE>      # optional\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on cluster2 using IstioOperator\nDESCRIPTION: Applies the IstioOperator configuration to install Istio on cluster2 using the istioctl command. This establishes cluster2 as a primary in the Istio mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER2}\" -f cluster2.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Istio AuthorizationPolicy for OPA\nDESCRIPTION: Defines an Istio AuthorizationPolicy to protect services using OPA. This policy applies to services labeled with 'ext-authz: enabled' and uses the OPA provider for authorization decisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: my-opa-authz\n  namespace: istio-system # This enforce the policy on all the mesh being istio-system the mesh config namespace\nspec:\n  selector:\n    matchLabels:\n      ext-authz: enabled\n  action: CUSTOM\n  provider:\n    name: \"opa.local\"\n  rules: [{}] # Empty rules, it will apply to selectors with ext-authz: enabled label\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring JWT Authentication Policy\nDESCRIPTION: YAML configuration for creating a RequestAuthentication policy that accepts JWTs and copies claims to headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/claim-to-header/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: RequestAuthentication\nmetadata:\n  name: \"jwt-example\"\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  jwtRules:\n  - issuer: \"testing@secure.istio.io\"\n    jwksUri: \"{{< github_file >}}/security/tools/jwt/samples/jwks.json\"\n    outputClaimToHeaders:\n    - header: \"x-jwt-claim-foo\"\n      claim: \"foo\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Injection for a Namespace\nDESCRIPTION: Labels a namespace with 'istio-injection=enabled' to enable automatic sidecar injection. This command updates the label even if it already exists by using the --overwrite flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled --overwrite\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for External Istiod Access\nDESCRIPTION: Sets environment variables for the hostname of the ingress gateway on the external control plane cluster and the name of the TLS certificate secret. These are used to configure access to the external control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ export EXTERNAL_ISTIOD_ADDR=<your external istiod host>\n$ export SSL_SECRET_NAME=<your external istiod secret>\n```\n\n----------------------------------------\n\nTITLE: Adding Request Header-based Tags to Traces\nDESCRIPTION: This snippet demonstrates how to add a custom tag whose value is derived from an incoming client request header. An optional default value can be specified for when the header is not present in the request.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/mesh-and-proxy-config/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing:\n        custom_tags:\n          my_tag_header:\n            header:\n              name: <CLIENT-HEADER>\n              defaultValue: <VALUE>      # optional\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret for Istio Control Plane in Bash\nDESCRIPTION: Creates a secret with credentials for the external control plane to access the remote cluster's kube-apiserver.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl create-remote-secret \\\n  --context=\"${CTX_REMOTE_CLUSTER}\" \\\n  --type=config \\\n  --namespace=external-istiod \\\n  --service-account=istiod \\\n  --create-service-account=false | \\\n  kubectl apply -f - --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GatewayClass Defaults in Istio using IstioOperator\nDESCRIPTION: This YAML snippet demonstrates how to configure defaults for all Gateways of a specific GatewayClass using an IstioOperator resource. It sets the number of replicas to 2 for the 'istio' GatewayClass.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IstioOperator\nspec:\n  values:\n    gatewayClasses:\n      istio:\n        deployment:\n          spec:\n            replicas: 2\n```\n\n----------------------------------------\n\nTITLE: Verifying Cross-Cluster Traffic from Cluster2\nDESCRIPTION: Send requests from the curl pod on cluster2 to the HelloWorld service to verify cross-cluster load balancing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/verify/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec --context=\"${CTX_CLUSTER2}\" -n sample -c curl \\\n    \"$(kubectl get pod --context=\"${CTX_CLUSTER2}\" -n sample -l \\\n    app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n    -- curl -sS helloworld.sample:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Gateway Creation\nDESCRIPTION: This command lists the Istio gateways to confirm that the bookinfo-gateway was successfully created in the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get gateway\nNAME               AGE\nbookinfo-gateway   32s\n```\n\n----------------------------------------\n\nTITLE: Defining Headless Service and StatefulSet in Kubernetes with Istio\nDESCRIPTION: YAML configuration for creating a headless service and StatefulSet for Nginx in Kubernetes. The service has port 80 explicitly named 'http-web' which specifies the HTTP protocol. The StatefulSet creates 3 replicas of Nginx pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\n  labels:\n    app: nginx\nspec:\n  ports:\n  - port: 80\n    name: http-web  # Explicitly defining an http port\n  clusterIP: None   # Creates a Headless Service\n  selector:\n    app: nginx\n---\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: web\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  serviceName: \"nginx\"\n  replicas: 3\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: registry.k8s.io/nginx-slim:0.8\n        ports:\n        - containerPort: 80\n          name: web\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway for HTTP egress traffic using Istio APIs\nDESCRIPTION: Configures an egress gateway for edition.cnn.com on port 80 using Istio APIs. This includes creating a Gateway resource targeting the egress gateway and a DestinationRule to define the subset for the traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - edition.cnn.com\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-cnn\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n  - name: cnn\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Connection Limits for Istio Downstream Services\nDESCRIPTION: This YAML configuration sets a global downstream connection limit to prevent potential DoS attacks. It uses the Envoy runtime configuration to set maximum connections to 100,000 for all proxies in the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  defaultConfig:\n    runtimeValues:\n      \"overload.global_downstream_max_connections\": \"100000\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio for HTTP/HTTPS Load Balancer\nDESCRIPTION: YAML configuration for IstioOperator to handle client IP addresses from X-Forwarded-For headers when using HTTP/HTTPS load balancers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogEncoding: JSON\n    accessLogFile: /dev/stdout\n    defaultConfig:\n      gatewayTopology:\n        numTrustedProxies: 1\n```\n\n----------------------------------------\n\nTITLE: Setting Request Timeout for Reviews Service using Istio API\nDESCRIPTION: Configuration to set a 0.5-second timeout for requests to the reviews service using Istio VirtualService.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-timeouts/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v2\n    timeout: 0.5s\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Workloads in Kubernetes\nDESCRIPTION: This snippet demonstrates how to create a namespace and deploy httpbin and curl workloads with Istio sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/tls-configuration/workload-min-tls-version/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n foo\n```\n\n----------------------------------------\n\nTITLE: Installing Egress Gateway using Helm in Istio\nDESCRIPTION: This snippet installs an Istio egress gateway using Helm in the external-istiod namespace. It configures the service type as ClusterIP to keep the gateway internal to the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nhelm install istio-egressgateway istio/gateway -n external-istiod --kube-context=\"${CTX_REMOTE_CLUSTER}\" --set service.type=ClusterIP\n```\n\n----------------------------------------\n\nTITLE: Testing JWT Token Expiration with Clock Skew\nDESCRIPTION: This snippet demonstrates creating a JWT token with a short expiration time (5 seconds) and testing how Istio's 60-second clock skew affects token validation over time.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n$ TOKEN=$(python3 ./gen-jwt.py ./key.pem --expire 5)\n$ for i in $(seq 1 10); do curl --header \"Authorization: Bearer $TOKEN\" \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"; sleep 10; done\n200\n200\n200\n200\n200\n200\n200\n401\n401\n401\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables for Testing\nDESCRIPTION: Commands to wait for the Gateway to be programmed and set up the ingress host environment variable for testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl wait -n istio-ingress --for=condition=programmed gateways.gateway.networking.k8s.io gateway\n$ export INGRESS_HOST=$(kubectl get gateways.gateway.networking.k8s.io gateway -n istio-ingress -ojsonpath='{.status.addresses[0].value}')\n```\n\n----------------------------------------\n\nTITLE: Updating Layer 4 Authorization Policy for Istio Ambient Mesh\nDESCRIPTION: This snippet updates the Layer 4 authorization policy to allow connections from both the gateway and the waypoint proxy to the 'productpage' service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/enforce-auth-policies/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: productpage-ztunnel\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: productpage\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals:\n        - cluster.local/ns/default/sa/bookinfo-gateway-istio\n        - cluster.local/ns/default/sa/waypoint\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo Application with Kubernetes\nDESCRIPTION: This command uses kubectl to deploy the Bookinfo application components from a YAML manifest. It launches all four microservices (productpage, details, reviews, ratings) including all three versions of the reviews service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo.yaml@\n```\n\n----------------------------------------\n\nTITLE: Enabling Tracing Provider without Specifying Sampling Rate\nDESCRIPTION: Creates a Telemetry resource that enables the otel-tracing provider without explicitly setting a sampling rate, which uses the rate from MeshConfig.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n  - providers:\n    - name: otel-tracing\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Gateway for External Access\nDESCRIPTION: Command to apply the Istio gateway configuration, which exposes the Bookinfo application to external traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/bookinfo-gateway.yaml@\ngateway.networking.istio.io/bookinfo-gateway created\nvirtualservice.networking.istio.io/bookinfo created\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for External Service Using Istio VirtualService\nDESCRIPTION: This snippet creates a VirtualService resource to set a 3-second timeout for requests to httpbin.org external service. It demonstrates how to apply traffic management rules to external services accessed through ServiceEntry resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin-ext\nspec:\n  hosts:\n  - httpbin.org\n  http:\n  - timeout: 3s\n    route:\n    - destination:\n        host: httpbin.org\n      weight: 100\nEOF\n```\n\n----------------------------------------\n\nTITLE: Listing Installed Istio Helm Charts\nDESCRIPTION: Command to list all Istio Helm charts installed in the istio-system namespace to verify the installation status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/helm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm ls -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Setting Default Access Log Filtering for Error Responses and Special Clusters\nDESCRIPTION: Configuration to filter access logs at the mesh level to only show logs for error responses (code >= 400) or when traffic goes to BlackHoleCluster or PassthroughCluster. Requires Istio 1.16.2+.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f -\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: default-exception-logging\n  namespace: istio-system\nspec:\n  accessLogging:\n  - providers:\n    - name: otel\n    filter:\n      expression: \"response.code >= 400 || xds.cluster_name == 'BlackHoleCluster' ||  xds.cluster_name == 'PassthroughCluster' \"\n\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Dual-Stack Kind Cluster for Istio\nDESCRIPTION: This snippet shows how to create a dual-stack Kubernetes cluster using Kind for testing Istio's dual-stack functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kind create cluster --name istio-ds --config - <<EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnetworking:\n  ipFamily: dual\nEOF\n```\n\n----------------------------------------\n\nTITLE: Enabling PROXY Protocol on Istio Gateway TCP Listeners\nDESCRIPTION: This YAML snippet demonstrates how to enable PROXY protocol on all TCP listeners of Istio gateways using an IstioOperator resource. This configuration is necessary when the external TCP load balancer uses PROXY protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      gatewayTopology:\n        proxyProtocol: {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Egress Gateway and Destination Rule\nDESCRIPTION: Configures an egress Gateway for external service access and creates a DestinationRule for sidecar routing through the gateway using ISTIO_MUTUAL TLS mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - my-nginx.mesh-external.svc.cluster.local\n    tls:\n      mode: ISTIO_MUTUAL\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-nginx\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n  - name: nginx\n    trafficPolicy:\n      loadBalancer:\n        simple: ROUND_ROBIN\n      portLevelSettings:\n      - port:\n          number: 443\n        tls:\n          mode: ISTIO_MUTUAL\n          sni: my-nginx.mesh-external.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Disabling REQUEST_COUNT Metrics for Server Only (YAML)\nDESCRIPTION: Telemetry API configuration to disable the REQUEST_COUNT metric only in server mode, leaving client-side metrics enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: remove-server\n  namespace: istio-system\nspec:\n  metrics:\n    - providers:\n        - name: prometheus\n      overrides:\n        - disabled: true\n          match:\n            mode: SERVER\n            metric: REQUEST_COUNT\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Helm\nDESCRIPTION: Installs Istio components using Helm 3 in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace istio-system\nhelm install istio-base istio/base -n istio-system --wait\nhelm install istiod istio/istiod -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Configuring routing rules for egress gateway using Gateway API\nDESCRIPTION: Sets up HTTPRoute rules to direct traffic to and from the egress gateway using the Gateway API. Two routes are defined: one to direct traffic to the gateway and one to forward from the gateway to the external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: direct-cnn-to-egress-gateway\nspec:\n  parentRefs:\n  - kind: ServiceEntry\n    group: networking.istio.io\n    name: cnn\n  rules:\n  - backendRefs:\n    - name: cnn-egress-gateway-istio\n      port: 80\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: forward-cnn-from-egress-gateway\nspec:\n  parentRefs:\n  - name: cnn-egress-gateway\n  hostnames:\n  - edition.cnn.com\n  rules:\n  - backendRefs:\n    - kind: Hostname\n      group: networking.istio.io\n      name: edition.cnn.com\n      port: 80\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Control Plane with Helm on Primary Cluster\nDESCRIPTION: Helm command to install the istiod chart on cluster1 with multi-cluster settings, enabling external istiod, and configuring mesh ID, cluster name, and network.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --kube-context \"${CTX_CLUSTER1}\" --set global.meshID=mesh1 --set global.externalIstiod=true --set global.multiCluster.clusterName=cluster1 --set global.network=network1\n```\n\n----------------------------------------\n\nTITLE: Path-Based Authorization Policy in Istio\nDESCRIPTION: Authorization policy allowing access to paths with /test/* prefix or */info suffix, demonstrating path matching patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: tester\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        paths: [\"/test/*\", \"*/info\"]\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up User Group 2 Resources in Istio using Istioctl and Kubectl\nDESCRIPTION: These commands uninstall the Istio revision for usergroup-2 and delete the associated namespaces. This cleanup removes all resources related to the second user group.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multiple-controlplanes/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --revision usergroup-2 --set values.global.istioNamespace=usergroup-2\n$ kubectl delete ns app-ns-2 app-ns-3 usergroup-2\n```\n\n----------------------------------------\n\nTITLE: Removing Loki and OpenTelemetry Components\nDESCRIPTION: Commands to remove the Loki logging backend and OpenTelemetry configuration from the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/addons/loki.yaml@ -n istio-system\n$ kubectl delete -f @samples/open-telemetry/loki/otel.yaml@ -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Deploying Layer 4 Authorization Policy for Istio Ambient Mesh\nDESCRIPTION: This snippet demonstrates how to create and apply a Layer 4 authorization policy that restricts access to the 'productpage' service. It allows calls only from a specific service account used by the Bookinfo gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/enforce-auth-policies/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: productpage-ztunnel\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: productpage\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals:\n        - cluster.local/ns/default/sa/bookinfo-gateway-istio\nEOF\n```\n\n----------------------------------------\n\nTITLE: Editing Mesh Configuration to Add Extension Providers\nDESCRIPTION: Command to edit the Istio ConfigMap to add extension provider definitions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl edit configmap istio -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-host Gateway using Gateway API\nDESCRIPTION: YAML configuration for setting up a Gateway API Gateway resource to handle HTTPS traffic for multiple hosts with different credentials.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\n  namespace: istio-system\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: https-httpbin\n    hostname: \"httpbin.example.com\"\n    port: 443\n    protocol: HTTPS\n    tls:\n      mode: Terminate\n      certificateRefs:\n      - name: httpbin-credential\n    allowedRoutes:\n      namespaces:\n        from: Selector\n        selector:\n          matchLabels:\n            kubernetes.io/metadata.name: default\n```\n\n----------------------------------------\n\nTITLE: Troubleshooting Ingress Host and Port Configuration\nDESCRIPTION: Commands to verify the ingress host and port environment variables are set correctly by inspecting the Istio services and echoing the variable values.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n istio-system\n$ echo \"INGRESS_HOST=$INGRESS_HOST, INGRESS_PORT=$INGRESS_PORT\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Gateway API Configuration with HTTP Route\nDESCRIPTION: YAML configuration that creates a Gateway resource in the istio-ingress namespace and an HTTPRoute resource that exposes the /get path of httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace istio-ingress\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\n  namespace: istio-ingress\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: default\n    hostname: \"*.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: http\n  namespace: default\nspec:\n  parentRefs:\n  - name: gateway\n    namespace: istio-ingress\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /get\n    backendRefs:\n    - name: httpbin\n      port: 8000\n```\n\n----------------------------------------\n\nTITLE: Configuring Workload-Level Aggregation Rules in Prometheus\nDESCRIPTION: These recording rules aggregate Istio metrics across instances and pods, preserving the full set of Istio Standard Metrics. They help control metrics cardinality via federation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/observability/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ngroups:\n- name: \"istio.recording-rules\"\n  interval: 5s\n  rules:\n  - record: \"workload:istio_requests_total\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_requests_total)\n\n  - record: \"workload:istio_request_duration_milliseconds_count\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_count)\n\n  - record: \"workload:istio_request_duration_milliseconds_sum\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_sum)\n\n  - record: \"workload:istio_request_duration_milliseconds_bucket\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_bucket)\n\n  - record: \"workload:istio_request_bytes_count\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_count)\n\n  - record: \"workload:istio_request_bytes_sum\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_sum)\n\n  - record: \"workload:istio_request_bytes_bucket\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_bucket)\n\n  - record: \"workload:istio_response_bytes_count\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_count)\n\n  - record: \"workload:istio_response_bytes_sum\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_sum)\n\n  - record: \"workload:istio_response_bytes_bucket\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_bucket)\n\n  - record: \"workload:istio_tcp_sent_bytes_total\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_sent_bytes_total)\n\n  - record: \"workload:istio_tcp_received_bytes_total\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_received_bytes_total)\n\n  - record: \"workload:istio_tcp_connections_opened_total\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_connections_opened_total)\n\n  - record: \"workload:istio_tcp_connections_closed_total\"\n    expr: |\n      sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_connections_closed_total)\n```\n\n----------------------------------------\n\nTITLE: AWS EKS Load Balancer Configuration - Istio APIs\nDESCRIPTION: IstioOperator configuration for AWS EKS showing how to set up a TCP/UDP Proxy Load Balancer with PROXY Protocol support.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogEncoding: JSON\n    accessLogFile: /dev/stdout\n  components:\n    ingressGateways:\n    - enabled: true\n      k8s:\n        hpaSpec:\n          maxReplicas: 10\n          minReplicas: 5\n        serviceAnnotations:\n          service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\n```\n\n----------------------------------------\n\nTITLE: Defining Service-Level Read Access in Istio Authorization\nDESCRIPTION: This YAML defines a 'book-reader' ServiceRole that allows READ access (GET method) to the '/books/*' resource path in the 'bookstore' service. This demonstrates method-level and path-level granularity for authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/istio-authorization/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: book-reader\n  namespace: default\nspec:\n  rules:\n  - services: [\"bookstore.default.svc.cluster.local\"]\n    paths: [\"/books/*\"]\n    methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Cleanup Gateway API Resources\nDESCRIPTION: Commands to remove Gateway API configurations including gateway, routes, and related resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete secret client-credential\nkubectl delete gtw nginx-egressgateway\nkubectl delete role nginx-egressgateway-istio-sds\nkubectl delete rolebinding nginx-egressgateway-istio-sds\nkubectl delete virtualservice direct-nginx-to-egress-gateway\nkubectl delete httproute forward-nginx-from-egress-gateway\nkubectl delete destinationrule originate-mtls-for-nginx\nkubectl delete destinationrule egressgateway-for-nginx\nkubectl delete referencegrant my-nginx-reference-grant -n mesh-external\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Using IstioOperator\nDESCRIPTION: Commands for uninstalling Istio completely from cluster1 and cluster2 using the istioctl uninstall command with the purge option, followed by removing the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --context=\"${CTX_CLUSTER1}\" -y --purge\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER1}\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --context=\"${CTX_CLUSTER2}\" -y --purge\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Details-Viewer Authorization Policy in Istio\nDESCRIPTION: This snippet creates a policy to allow the productpage workload to access the details workload through GET methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"details-viewer\"\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: details\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals: [\"cluster.local/ns/default/sa/bookinfo-productpage\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Jaeger Extension Provider\nDESCRIPTION: This command creates and applies an IstioOperator configuration that enables tracing and configures Jaeger as an extension provider. It sets up the connection to the Jaeger collector service running in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/jaeger/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./tracing.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing: {} # disable legacy MeshConfig tracing options\n    extensionProviders:\n    - name: jaeger\n      opentelemetry:\n        port: 4317\n        service: jaeger-collector.istio-system.svc.cluster.local\nEOF\n$ istioctl install -f ./tracing.yaml --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Manual Sidecar Injection Commands - Bash\nDESCRIPTION: Commands for manually injecting sidecars using istioctl kube-inject, including configuration extraction and application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl kube-inject -f @samples/curl/curl.yaml@ | kubectl apply -f -\n$ kubectl -n istio-system get configmap istio-sidecar-injector -o=jsonpath='{.data.config}' > inject-config.yaml\n$ kubectl -n istio-system get configmap istio-sidecar-injector -o=jsonpath='{.data.values}' > inject-values.yaml\n$ kubectl -n istio-system get configmap istio -o=jsonpath='{.data.mesh}' > mesh-config.yaml\n$ istioctl kube-inject \\\n    --injectConfigFile inject-config.yaml \\\n    --meshConfigFile mesh-config.yaml \\\n    --valuesFile inject-values.yaml \\\n    --filename @samples/curl/curl.yaml@ \\\n    | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway with Manual Service Linking\nDESCRIPTION: This YAML snippet shows how to manually link a Gateway to a Service by configuring the 'addresses' field to point to a single Hostname. This is useful when you want to manually deploy and manage the Gateway's underlying resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  addresses:\n  - value: ingress.istio-gateways.svc.cluster.local\n    type: Hostname\n...\n```\n\n----------------------------------------\n\nTITLE: Viewing Curl Pod's Access Logs in Istio\nDESCRIPTION: This command retrieves and displays the access logs from the Istio proxy (sidecar) container of the curl pod, showing the client-side logging of the HTTP request.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l app=curl -c istio-proxy\n[2020-11-25T21:26:18.409Z] \"GET /status/418 HTTP/1.1\" 418 - via_upstream - \"-\" 0 135 4 4 \"-\" \"curl/7.73.0-DEV\" \"84961386-6d84-929d-98bd-c5aee93b5c88\" \"httpbin:8000\" \"10.44.1.27:80\" outbound|8000||httpbin.foo.svc.cluster.local 10.44.1.23:37652 10.0.45.184:8000 10.44.1.23:46520 - default\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from Multiple Clusters Using Helm in Bash\nDESCRIPTION: This set of commands uninstalls Istio components installed via Helm from cluster1 and cluster2. It removes the Helm releases for istiod, istio-eastwestgateway, and istio-base, then deletes the istio-system namespace from both clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n$ helm delete istio-eastwestgateway -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n$ helm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER1}\"\n\n$ helm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n$ helm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Egress Gateway with Istio APIs\nDESCRIPTION: Defines Gateway, DestinationRule, and VirtualService resources to route HTTPS traffic through an egress gateway using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 443\n      name: tls\n      protocol: TLS\n    hosts:\n    - edition.cnn.com\n    tls:\n      mode: PASSTHROUGH\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-cnn\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n  - name: cnn\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: direct-cnn-through-egress-gateway\nspec:\n  hosts:\n  - edition.cnn.com\n  gateways:\n  - mesh\n  - istio-egressgateway\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: 443\n      sniHosts:\n      - edition.cnn.com\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: cnn\n        port:\n          number: 443\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n      sniHosts:\n      - edition.cnn.com\n    route:\n    - destination:\n        host: edition.cnn.com\n        port:\n          number: 443\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Testing External Access to the Bookinfo Application\nDESCRIPTION: This command uses curl to verify the Bookinfo application is accessible from outside the cluster by checking if the productpage responds with the expected title.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s \"http://${GATEWAY_URL}/productpage\" | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n```\n\n----------------------------------------\n\nTITLE: Checking Proxy Status\nDESCRIPTION: Command to view the status of all connected proxies using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-status\n```\n\n----------------------------------------\n\nTITLE: Configuring Egress Gateway Resources for MongoDB\nDESCRIPTION: Creates Gateway, DestinationRule, and VirtualService resources to route MongoDB traffic through the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: $EGRESS_GATEWAY_MONGODB_PORT\n      name: tcp\n      protocol: TCP\n    hosts:\n    - my-mongo.tcp.svc\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-mongo\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n  - name: mongo\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: mongo\nspec:\n  host: my-mongo.tcp.svc\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-mongo-through-egress-gateway\nspec:\n  hosts:\n  - my-mongo.tcp.svc\n  gateways:\n  - mesh\n  - istio-egressgateway\n  tcp:\n  - match:\n    - gateways:\n      - mesh\n      destinationSubnets:\n      - $MONGODB_IP/32\n      port: $MONGODB_PORT\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: mongo\n        port:\n          number: $EGRESS_GATEWAY_MONGODB_PORT\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: $EGRESS_GATEWAY_MONGODB_PORT\n    route:\n    - destination:\n        host: my-mongo.tcp.svc\n        port:\n          number: $MONGODB_PORT\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Checking East-West Gateway Service Status\nDESCRIPTION: Command to verify that the east-west gateway service has been assigned an external IP address on cluster1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --context=\"${CTX_CLUSTER1}\" get svc istio-eastwestgateway -n istio-system\nNAME                    TYPE           CLUSTER-IP    EXTERNAL-IP    PORT(S)   AGE\nistio-eastwestgateway   LoadBalancer   10.80.6.124   34.75.71.237   ...       51s\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up External Control Plane\nDESCRIPTION: Removes all Istio components and configurations from the external control plane cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f external-istiod-gw.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\nistioctl uninstall -y --purge -f external-istiod.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\nkubectl delete ns istio-system external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\nrm controlplane-gateway.yaml external-istiod.yaml external-istiod-gw.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Zipkin Extension Provider Configuration for Istio\nDESCRIPTION: Creates a configuration file to install Istio with Zipkin as an extension provider. This enables distributed tracing by connecting to the Zipkin service in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/zipkin/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./tracing.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing: {} # disable legacy MeshConfig tracing options\n    extensionProviders:\n    - name: zipkin\n      zipkin:\n        service: zipkin.istio-system.svc.cluster.local\n        port: 9411\nEOF\n$ istioctl install -f ./tracing.yaml --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Adding Environment Variable Custom Tag\nDESCRIPTION: YAML configuration for adding custom tags based on environment variables in the workload proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/telemetry-api/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n    - providers:\n      - name: \"zipkin\"\n      randomSamplingPercentage: 100.00\n      customTags:\n        \"cluster_id\":\n          environment:\n            name: ISTIO_META_CLUSTER_ID\n            defaultValue: Kubernetes # optional\n```\n\n----------------------------------------\n\nTITLE: Installing Istio CNI Node Agent with Helm\nDESCRIPTION: This command installs the Istio CNI node agent using Helm. It deploys the CNI component into the istio-system namespace and waits for the installation to complete.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/cni/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-cni istio/cni -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Token Request API Support in Istio\nDESCRIPTION: This bash command checks if the Kubernetes cluster supports third-party JWT tokens, which are more secure than first-party tokens. The command retrieves the API resources and filters for the TokenRequest API using jq.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get --raw /api/v1 | jq '.resources[] | select(.name | index(\"serviceaccounts/token\"))'\n{\n    \"name\": \"serviceaccounts/token\",\n    \"singularName\": \"\",\n    \"namespaced\": true,\n    \"group\": \"authentication.k8s.io\",\n    \"version\": \"v1\",\n    \"kind\": \"TokenRequest\",\n    \"verbs\": [\n        \"create\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Public Access Authorization Policy\nDESCRIPTION: Policy allowing public access to specified HTTP methods without authentication requirements.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - to:\n   - operation:\n       methods: [\"GET\", \"POST\"]\n```\n\n----------------------------------------\n\nTITLE: Getting Kubernetes Contexts\nDESCRIPTION: Lists all available Kubernetes contexts for kubectl configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config get-contexts\n```\n\n----------------------------------------\n\nTITLE: Testing IBM Cloud Domain Access\nDESCRIPTION: Tests access to IBM Cloud login page to demonstrate direct external access without gateway routing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c sleep -- sh -c 'curl -s https://cloud.ibm.com/login | grep -o \"<title>.*</title>\"'\n```\n\n----------------------------------------\n\nTITLE: Default Access Log Format in Istio\nDESCRIPTION: This is the default log format used by Istio's Envoy proxies when accessLogFormat is not explicitly specified. It includes details such as timestamps, request methods, response codes, and network information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\n[%START_TIME%] \\\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\\\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS%\n\\\"%UPSTREAM_TRANSPORT_FAILURE_REASON%\\\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \\\"%REQ(X-FORWARDED-FOR)%\\\" \\\"%REQ(USER-AGENT)%\\\" \\\"%REQ(X-REQUEST-ID)%\\\"\n\\\"%REQ(:AUTHORITY)%\\\" \\\"%UPSTREAM_HOST%\\\" %UPSTREAM_CLUSTER_RAW% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\\n\n```\n\n----------------------------------------\n\nTITLE: Creating Reviews-Viewer Authorization Policy in Istio\nDESCRIPTION: This snippet creates a policy to allow the productpage workload to access the reviews workload through GET methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"reviews-viewer\"\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: reviews\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals: [\"cluster.local/ns/default/sa/bookinfo-productpage\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway Resources for Mixed TLS Modes in Istio\nDESCRIPTION: This YAML configuration demonstrates how to set up multiple Gateway resources with different TLS modes for different hosts. It shows a SIMPLE TLS mode for wildcard hosts and MUTUAL TLS for specific admin hosts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Gateway\nmetadata:\n  name: guestgateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - \"*.example.com\"\n    tls:\n      mode: SIMPLE\n---\nkind: Gateway\nmetadata:\n  name: admingateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - admin.example.com\n    tls:\n      mode: MUTUAL\n```\n\n----------------------------------------\n\nTITLE: Installing East-West Gateway on cluster1 with Helm\nDESCRIPTION: Installs an east-west gateway on cluster1 using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-eastwestgateway istio/gateway -n istio-system --kube-context \"${CTX_CLUSTER1}\" --set name=istio-eastwestgateway --set networkGateway=network1\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for external service in Istio\nDESCRIPTION: Defines a ServiceEntry for edition.cnn.com to allow direct traffic to this external service. The configuration specifies HTTP and HTTPS ports and uses DNS resolution to properly direct traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: cnn\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 80\n    name: http-port\n    protocol: HTTP\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Waypoint Proxy for productpage Service in Istio\nDESCRIPTION: This snippet demonstrates how to use Kubernetes Gateway API to deploy a waypoint proxy for the productpage service, which will mediate, enforce, and observe L7 traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: Gateway\nmetadata:\n name: productpage\n annotations:\n   istio.io/service-account: bookinfo-productpage\nspec:\n gatewayClassName: istio-mesh\nEOF\n```\n\n----------------------------------------\n\nTITLE: Extracting Tracing Headers in Python\nDESCRIPTION: This Python code snippet demonstrates how to extract and forward tracing headers from incoming HTTP requests using OpenTelemetry libraries. It handles various tracing headers including B3 format, W3C standard, and commercial observability tool headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/overview/index.md#2025-04-08_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef getForwardHeaders(request):\n    headers = {}\n\n    # x-b3-*** headers can be populated using the OpenTelemetry span\n    ctx = propagator.extract(carrier={k.lower(): v for k, v in request.headers})\n    propagator.inject(headers, ctx)\n\n    # ...\n\n        incoming_headers = ['x-request-id',\n        'x-ot-span-context',\n        'x-datadog-trace-id',\n        'x-datadog-parent-id',\n        'x-datadog-sampling-priority',\n        'traceparent',\n        'tracestate',\n        'x-cloud-trace-context',\n        'grpc-trace-bin',\n        'user-agent',\n        'cookie',\n        'authorization',\n        'jwt',\n    ]\n\n    # ...\n\n    for ihdr in incoming_headers:\n        val = request.headers.get(ihdr)\n        if val is not None:\n            headers[ihdr] = val\n\n    return headers\n```\n\n----------------------------------------\n\nTITLE: Creating Rate Limit ConfigMap\nDESCRIPTION: Kubernetes ConfigMap that defines rate limiting rules for different paths. Sets limits of 1 req/min for /productpage, 2 req/min for api endpoints, and 100 req/min for all other requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/policy-enforcement/rate-limit/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ratelimit-config\ndata:\n  config.yaml: |\n    domain: ratelimit\n    descriptors:\n      - key: PATH\n        value: \"/productpage\"\n        rate_limit:\n          unit: minute\n          requests_per_unit: 1\n      - key: PATH\n        value: \"api\"\n        rate_limit:\n          unit: minute\n          requests_per_unit: 2\n      - key: PATH\n        rate_limit:\n          unit: minute\n          requests_per_unit: 100\n```\n\n----------------------------------------\n\nTITLE: Upgrading Istio Using istioctl Upgrade Command\nDESCRIPTION: Command to upgrade an Istio installation to a new version using the istioctl x upgrade feature with configuration changes. This replaces the upgrade method for installations not initially installed with Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x upgrade -f <your-istiocontrolplane-config-changes>\n```\n\n----------------------------------------\n\nTITLE: Error Message for Missing caCertificates in Istio DestinationRule\nDESCRIPTION: Example error message that occurs when a DestinationRule has TLS mode set to SIMPLE but lacks caCertificates to validate server identity.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0129/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nError [IST0129] (DestinationRule db-tls.default) DestinationRule default/db-tls in namespace default has TLS mode set to SIMPLE but no caCertificates are set to validate server identity for host: mydbserver.prod.svc.cluster.local at port number:443\n```\n\n----------------------------------------\n\nTITLE: Verifying CA Certificate\nDESCRIPTION: Compares the CA certificate from the pod with the one specified by the administrator.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl x509 -in certs/cluster1/ca-cert.pem -text -noout > /tmp/ca-cert.crt.txt\n$ openssl x509 -in ./proxy-cert-2.pem -text -noout > /tmp/pod-cert-chain-ca.crt.txt\n$ diff -s /tmp/ca-cert.crt.txt /tmp/pod-cert-chain-ca.crt.txt\n```\n\n----------------------------------------\n\nTITLE: Setting SOURCE_POD Environment Variable\nDESCRIPTION: Command to set the SOURCE_POD environment variable to the name of the deployed curl pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath='{.items..metadata.name}')\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Manifest Before Installation\nDESCRIPTION: Generates an Istio installation manifest without installing it, allowing for inspection of the resources that would be created. The manifest can be applied later using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate > $HOME/generated-manifest.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Reviews-Viewer Authorization Policy in Istio\nDESCRIPTION: This snippet creates a policy to allow the productpage workload to access the reviews workload through GET methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"reviews-viewer\"\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: reviews\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals: [\"cluster.local/ns/default/sa/bookinfo-productpage\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring ALLOW Authorization Policy in Istio\nDESCRIPTION: Example of an authorization policy using ALLOW-with-positive-matching pattern to explicitly allow requests to the /public path. This demonstrates the recommended approach of explicitly listing allowed paths for better security.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo\nspec:\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        paths: [\"/public\"]\n```\n\n----------------------------------------\n\nTITLE: Verification Commands\nDESCRIPTION: Commands for verifying the metric generation and troubleshooting configuration issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/classify-metrics/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec pod-name -c istio-proxy -- curl -sS 'localhost:15000/stats/prometheus' | grep istio_\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs pod-name -c istio-proxy | grep -e \"Config Error\" -e \"envoy wasm\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods pod-name\n```\n\n----------------------------------------\n\nTITLE: Checking egress gateway logs with Gateway API\nDESCRIPTION: Inspects the logs of the egress gateway pod created using Gateway API to verify that the HTTP request was processed by the gateway. Includes an optional tip for checking certificates when using mutual TLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l gateway.networking.k8s.io/gateway-name=cnn-egress-gateway -c istio-proxy | tail\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl pc secret \"$(kubectl get pod -l gateway.networking.k8s.io/gateway-name=cnn-egress-gateway -o jsonpath='{.items[0].metadata.name}')\" -ojson | jq '[.dynamicActiveSecrets[] | select(.name == \"default\")][0].secret.tlsCertificate.certificateChain.inlineBytes' -r | base64 -d | openssl x509 -text -noout | grep 'Subject Alternative Name' -A 1\n            X509v3 Subject Alternative Name: critical\n                URI:spiffe://cluster.local/ns/default/sa/cnn-egress-gateway-istio\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Custom Tracing Configuration\nDESCRIPTION: This snippet demonstrates how to install Istio with custom tracing configuration by creating an IstioOperator YAML file. It sets a 100% sampling rate, 256 character path tag length limit, and adds a custom tag for clusterID based on an environment variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/mesh-and-proxy-config/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./tracing.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing:\n        sampling: 100.0\n        max_path_tag_length: 256\n        custom_tags:\n          clusterID:\n            environment:\n              name: ISTIO_META_CLUSTER_ID\nEOF\n$ istioctl install -f ./tracing.yaml\n```\n\n----------------------------------------\n\nTITLE: Patching Istio Output Manifest using IstioOperator API\nDESCRIPTION: This YAML file demonstrates how to use the IstioOperator API to patch the output manifest. It shows various ways to modify Kubernetes resources, including list item selection, value overrides, and deletions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: empty\n  hub: docker.io/istio\n  tag: 1.1.6\n  components:\n    pilot:\n      enabled: true\n      namespace: istio-control\n      k8s:\n        overlays:\n          - kind: Deployment\n            name: istiod\n            patches:\n              # Select list item by value\n              - path: spec.template.spec.containers.[name:discovery].args.[30m]\n                value: \"60m\" # overridden from 30m\n              # Select list item by key:value\n              - path: spec.template.spec.containers.[name:discovery].ports.[containerPort:8080].containerPort\n                value: 1234\n              # Override with object (note | on value: first line)\n              - path: spec.template.spec.containers.[name:discovery].env.[name:POD_NAMESPACE].valueFrom\n                value: |\n                  fieldRef:\n                    apiVersion: v2\n                    fieldPath: metadata.myPath\n              # Deletion of list item\n              - path: spec.template.spec.containers.[name:discovery].env.[name:REVISION]\n              # Deletion of map item\n              - path: spec.template.spec.containers.[name:discovery].securityContext\n          - kind: Service\n            name: istiod\n            patches:\n              - path: spec.ports.[name:https-dns].port\n                value: 11111 # OVERRIDDEN\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio Gateway and VirtualService Resources\nDESCRIPTION: Commands to remove the gateway configuration and routes using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete gateway mygateway\n$ kubectl delete virtualservice httpbin helloworld\n```\n\n----------------------------------------\n\nTITLE: Creating Egress Gateway and DestinationRule with Istio APIs\nDESCRIPTION: Configures an Istio egress gateway for edition.cnn.com with ISTIO_MUTUAL TLS mode and creates a destination rule to direct traffic to the gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 80\n      name: https-port-for-tls-origination\n      protocol: HTTPS\n    hosts:\n    - edition.cnn.com\n    tls:\n      mode: ISTIO_MUTUAL\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-cnn\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n  - name: cnn\n    trafficPolicy:\n      loadBalancer:\n        simple: ROUND_ROBIN\n      portLevelSettings:\n      - port:\n          number: 80\n        tls:\n          mode: ISTIO_MUTUAL\n          sni: edition.cnn.com\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring ALLOW Authorization Policy in Istio\nDESCRIPTION: Example of an authorization policy using ALLOW-with-positive-matching pattern to explicitly allow requests to the /public path. This demonstrates the recommended approach of explicitly listing allowed paths for better security.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo\nspec:\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        paths: [\"/public\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring ECC Signature Algorithm with Helm\nDESCRIPTION: This YAML snippet shows how to use Helm values to change the signature algorithm to ECDSA for sidecar certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/manage-mesh-certificates/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  defaultConfig:\n    proxyMetadata:\n      ECC_SIGNATURE_ALGORITHM: \"ECDSA\"\n```\n\n----------------------------------------\n\nTITLE: Comparing Certificate Hashes Between Webhook Configuration and Istio CA\nDESCRIPTION: Verifies if the caBundle in the mutating webhook configuration matches the root certificate mounted in the istiod pod. These certificates must match for the webhook to function properly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfiguration istio-sidecar-injector -o yaml -o jsonpath='{.webhooks[0].clientConfig.caBundle}' | md5sum\n4b95d2ba22ce8971c7c92084da31faf0  -\n$ kubectl -n istio-system get configmap istio-ca-root-cert -o jsonpath='{.data.root-cert\\.pem}' | base64 -w 0 | md5sum\n4b95d2ba22ce8971c7c92084da31faf0  -\n```\n\n----------------------------------------\n\nTITLE: Creating TLS Secret for Ingress Gateway\nDESCRIPTION: Creates a Kubernetes secret in the istio-system namespace containing TLS credentials for the ingress gateway\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create -n istio-system secret tls httpbin-credential \\\n  --key=example_certs1/httpbin.example.com.key \\\n  --cert=example_certs1/httpbin.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Applying Istio-Injected Kubernetes Deployment\nDESCRIPTION: Shows how to apply a Kubernetes deployment YAML that has been modified to include Istio sidecar containers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f demo-red-injected.yaml\n```\n\n----------------------------------------\n\nTITLE: Fix Istio Injection in Default Namespace\nDESCRIPTION: Enable Istio injection in the default namespace by adding the required label\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Fix Istio Injection in Default Namespace\nDESCRIPTION: Enable Istio injection in the default namespace by adding the required label\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway API Resource for External Access\nDESCRIPTION: This command applies the Kubernetes Gateway API configuration to expose the Bookinfo application outside the cluster, creating both Gateway and HTTPRoute resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/gateway-api/bookinfo-gateway.yaml@\ngateway.gateway.networking.k8s.io/bookinfo-gateway created\nhttproute.gateway.networking.k8s.io/bookinfo created\n```\n\n----------------------------------------\n\nTITLE: Verifying Mutual TLS Enforcement in Istio\nDESCRIPTION: Sends HTTP requests to verify that the mutual TLS policy is enforced, showing that legacy clients fail to connect.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ for from in \"foo\" \"bar\" \"legacy\"; do for to in \"foo\" \"bar\"; do kubectl exec \"$(kubectl get pod -l app=curl -n ${from} -o jsonpath={.items..metadata.name})\" -c curl -n ${from} -- curl http://httpbin.${to}:8000/ip -s -o /dev/null -w \"curl.${from} to httpbin.${to}: %{http_code}\\n\"; done; done\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Cluster-Local Rules with Exceptions in Istio\nDESCRIPTION: YAML configuration showing how to set global cluster-local rules while allowing specific exceptions for certain namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/multicluster/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nserviceSettings:\n- settings:\n    clusterLocal: true\n  hosts:\n  - \"*\"\n- settings:\n    clusterLocal: false\n  hosts:\n  - \"*.myns.svc.cluster.local\"\n```\n\n----------------------------------------\n\nTITLE: Listing k3d Clusters\nDESCRIPTION: Displays the list of available k3d clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nk3d cluster list\n```\n\n----------------------------------------\n\nTITLE: Using request.headers Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use the request.headers condition to match HTTP User-Agent headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkey: request.headers[User-Agent]\nvalues: [\"Mozilla/*\"]\n```\n\n----------------------------------------\n\nTITLE: Importing Istio Dashboards to Existing Grafana (Bash)\nDESCRIPTION: Bash script to automatically import all Istio dashboards into an existing Grafana instance. The script retrieves dashboard configurations matching the Istio version from grafana.com and imports them with proper data source configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/grafana/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ # Address of Grafana\n$ GRAFANA_HOST=\"http://localhost:3000\"\n$ # Login credentials, if authentication is used\n$ GRAFANA_CRED=\"USER:PASSWORD\"\n$ # The name of the Prometheus data source to use\n$ GRAFANA_DATASOURCE=\"Prometheus\"\n$ # The version of Istio to deploy\n$ VERSION={{< istio_full_version >}}\n$ # Import all Istio dashboards\n$ for DASHBOARD in 7639 11829 7636 7630 7645 13277; do\n$     REVISION=\"$(curl -s https://grafana.com/api/dashboards/${DASHBOARD}/revisions -s | jq \".items[] | select(.description | contains(\\\"${VERSION}\\\")) | .revision\" | tail -n 1)\"\n$     curl -s https://grafana.com/api/dashboards/${DASHBOARD}/revisions/${REVISION}/download > /tmp/dashboard.json\n$     echo \"Importing $(cat /tmp/dashboard.json | jq -r '.title') (revision ${REVISION}, id ${DASHBOARD})...\"\n$     curl -s -k -u \"$GRAFANA_CRED\" -XPOST \\\n$         -H \"Accept: application/json\" \\\n$         -H \"Content-Type: application/json\" \\\n$         -d \"{\\\"dashboard\\\":$(cat /tmp/dashboard.json),\\\"overwrite\\\":true, \\\n$             \\\"inputs\\\":[{\\\"name\\\":\\\"DS_PROMETHEUS\\\",\\\"type\\\":\\\"datasource\\\", \\\n$             \\\"pluginId\\\":\\\"prometheus\\\",\\\"value\\\":\\\"$GRAFANA_DATASOURCE\\\"}]}\" \\\n$         $GRAFANA_HOST/api/dashboards/import\n$     echo -e \"\\nDone\\n\"\n$ done\n```\n\n----------------------------------------\n\nTITLE: Opening SkyWalking Dashboard\nDESCRIPTION: Command to access the SkyWalking dashboard using istioctl port-forwarding.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/skywalking/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl dashboard skywalking\n```\n\n----------------------------------------\n\nTITLE: Viewing Istio Proxy Logs\nDESCRIPTION: Command to tail both error and standard output logs from the Istio proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntail /var/log/istio/istio.err.log /var/log/istio/istio.log -Fq -n 100\n```\n\n----------------------------------------\n\nTITLE: Configuring WasmPlugin for HTTP Basic Auth\nDESCRIPTION: Demonstrates how to create a WasmPlugin resource that configures HTTP Basic authentication using a remote Wasm module. The configuration targets the ingress gateway and specifies authentication rules for the /productpage endpoint.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/extensibility/wasm-module-distribution/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: basic-auth\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  url: oci://ghcr.io/istio-ecosystem/wasm-extensions/basic_auth:1.12.0\n  phase: AUTHN\n  pluginConfig:\n    basic_auth_rules:\n      - prefix: \"/productpage\"\n        request_methods:\n          - \"GET\"\n          - \"POST\"\n        credentials:\n          - \"ok:test\"\n          - \"YWRtaW4zOmFkbWluMw==\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on Primary Cluster (Bash)\nDESCRIPTION: Applies the IstioOperator configuration to install Istio on the primary cluster (cluster1).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --context=\"${CTX_CLUSTER1}\" -f cluster1.yaml\n```\n\n----------------------------------------\n\nTITLE: Enabling Envoy Access Logging\nDESCRIPTION: Command to enable Envoy's access logging using istioctl installation flags.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install <flags-you-used-to-install-Istio> --set meshConfig.accessLogFile=/dev/stdout\n```\n\n----------------------------------------\n\nTITLE: Creating an Istio Gateway for HTTP Traffic\nDESCRIPTION: Configuration to create an Istio Gateway resource that exposes the httpbin service on port 80 with HTTP protocol. The gateway is configured to accept traffic for the host httpbin.example.com.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  # The selector matches the ingress gateway pod labels.\n  # If you installed Istio using Helm following the standard documentation, this would be \"istio=ingress\"\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"httpbin.example.com\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Updating Virtual Service for JWT Claim Based Routing\nDESCRIPTION: Modifies the virtual service to route requests based on the validated JWT claims, specifically the 'groups' claim.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/jwt-route/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - httpbin-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /headers\n      headers:\n        \"@request.auth.claims.groups\":\n          exact: group1\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Ingress with TLS Certificate in YAML\nDESCRIPTION: Creates a Kubernetes Ingress resource that uses the Istio ingress class and references a TLS certificate generated by cert-manager. The secretName should match the Certificate's secretName, and the hosts should match the DNS names in the Certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/certmanager/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress\n  annotations:\n    kubernetes.io/ingress.class: istio\nspec:\n  rules:\n  - host: my.example.com\n    http: ...\n  tls:\n  - hosts:\n    - my.example.com # This should match a DNS name in the Certificate\n    secretName: ingress-cert # This should match the Certificate secretName\n```\n\n----------------------------------------\n\nTITLE: Installing cert-manager with Helm\nDESCRIPTION: Deploys cert-manager in the Kubernetes cluster using Helm, enabling the experimental CertificateSigningRequest feature.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add jetstack https://charts.jetstack.io\n$ helm repo update\n$ helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set featureGates=\"ExperimentalCertificateSigningRequestControllers=true\" --set installCRDs=true\n```\n\n----------------------------------------\n\nTITLE: Deleting Certificates and Keys\nDESCRIPTION: Command to remove the directory containing example certificates and keys used in the setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ rm -rf ./example_certs\n```\n\n----------------------------------------\n\nTITLE: Verifying Mutual TLS Enforcement for a Pod in Istio\nDESCRIPTION: This command uses istioctl to describe a pod and verify that it enforces mutual TLS. It checks if the pod is configured to use mTLS and if clients are communicating using mTLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x describe pod $RATINGS_POD\nPilot reports that pod enforces mTLS and clients speak mTLS\n```\n\n----------------------------------------\n\nTITLE: Filtering Out Health Check Access Logs Using CEL Expression\nDESCRIPTION: Configuration to filter out access logs generated by Amazon Route 53 Health Check Service. Uses CEL expression with type checking for the request.useragent field to ensure TCP traffic isn't broken.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f -\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: filter-health-check-logging\nspec:\n  accessLogging:\n  - providers:\n    - name: otel\n    filter:\n      expression: \"!has(request.useragent) || !(request.useragent.startsWith(\\\"Amazon-Route53-Health-Check-Service\\\"))\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Making a Request to External HTTPS Service in Istio\nDESCRIPTION: This snippet shows how to make a request to an external HTTPS service (www.google.com) from a pod in the Istio mesh. It executes a curl command in the SOURCE_POD and filters the output to show only the HTTP status line.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$SOURCE_POD\" -c curl -- curl -sSI https://www.google.com | grep  \"HTTP/\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Zipkin Tracing with Istio Telemetry API\nDESCRIPTION: Applies a Telemetry custom resource to enable tracing across the service mesh using the configured Zipkin provider. This connects the mesh-wide tracing to the Zipkin instance.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/zipkin/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n  - providers:\n    - name: zipkin\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtual Service for Traffic Routing\nDESCRIPTION: Creates a VirtualService to route traffic through the egress gateway, handling both mesh-internal and gateway-specific routing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: direct-nginx-through-egress-gateway\nspec:\n  hosts:\n  - my-nginx.mesh-external.svc.cluster.local\n  gateways:\n  - istio-egressgateway\n  - mesh\n  http:\n  - match:\n    - gateways:\n      - mesh\n      port: 80\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: nginx\n        port:\n          number: 443\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n    route:\n    - destination:\n        host: my-nginx.mesh-external.svc.cluster.local\n        port:\n          number: 443\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Viewing Ztunnel TLS Certificates in Istio\nDESCRIPTION: Demonstrates how to view the TLS certificates received by the ztunnel proxy from the Istiod control plane for mTLS communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-ztunnel/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl ztunnel-config certificates \"$ZTUNNEL\".istio-system\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway for HTTP egress traffic using Gateway API\nDESCRIPTION: Configures an egress gateway for edition.cnn.com on port 80 using the Kubernetes Gateway API. This Gateway resource defines the listener and hostname for the egress traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: cnn-egress-gateway\n  annotations:\n    networking.istio.io/service-type: ClusterIP\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: http\n    hostname: edition.cnn.com\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: Same\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio Sample Application and Resources\nDESCRIPTION: Series of kubectl delete commands to remove the Bookinfo sample application, authorization policies, and related deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/cleanup/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete httproute reviews\n$ kubectl delete authorizationpolicy productpage-viewer\n$ kubectl delete -f @samples/curl/curl.yaml@\n$ kubectl delete -f @samples/bookinfo/platform/kube/bookinfo.yaml@\n$ kubectl delete -f @samples/bookinfo/platform/kube/bookinfo-versions.yaml@\n$ kubectl delete -f @samples/bookinfo/gateway-api/bookinfo-gateway.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring secure DENY AuthorizationPolicy in YAML\nDESCRIPTION: Updated DENY policy that explicitly rejects plain text traffic in addition to requests from namespace 'foo'. This configuration ensures proper handling of both mTLS and plain text traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-004/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: reject-ns-foo\nspec:\n  action: DENY\n  rules:\n  - from:\n    - source:\n        namespaces: [\"foo\"]\n  # Add the following rule to explicitly reject plain text traffic.\n  - from:\n    - source:\n        notNamespaces: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Second Istio Control Plane\nDESCRIPTION: Creates and configures the second Istio control plane in the usergroup-2 namespace using minimal profile and discoverySelectors.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multiple-controlplanes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns usergroup-2\nkubectl label ns usergroup-2 usergroup=usergroup-2\nistioctl install -y -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: usergroup-2\nspec:\n  profile: minimal\n  revision: usergroup-2\n  meshConfig:\n    discoverySelectors:\n      - matchLabels:\n          usergroup: usergroup-2\n  values:\n    global:\n      istioNamespace: usergroup-2\nEOF\n```\n\n----------------------------------------\n\nTITLE: Using destination.port Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use destination.port condition to match destination workload instance ports. Must be in range 0-65535.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkey: destination.port\nvalues: [\"80\", \"443\"]\n```\n\n----------------------------------------\n\nTITLE: Examining Detailed Outbound Listener JSON Configuration\nDESCRIPTION: Shows detailed JSON configuration for the virtualOutbound listener on port 15001, including filter chains and Wasm filter configuration for stats collection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config listeners productpage-v1-6c886ff494-7vxhs --port 15001 -o json\n```\n\n----------------------------------------\n\nTITLE: Creating Dry-Run Authorization Policy in Istio\nDESCRIPTION: Applies an AuthorizationPolicy with the dry-run annotation to deny access to the /headers path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-path-headers\n  annotations:\n    \"istio.io/dry-run\": \"true\"\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        paths: [\"/headers\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Dry-Run Authorization Policy in Istio\nDESCRIPTION: Applies an AuthorizationPolicy with the dry-run annotation to deny access to the /headers path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-path-headers\n  annotations:\n    \"istio.io/dry-run\": \"true\"\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        paths: [\"/headers\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Sail Operator with Helm\nDESCRIPTION: This snippet shows how to add the Sail Operator Helm repository, update it, create a namespace for the operator, and install it using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add sail-operator https://istio-ecosystem.github.io/sail-operator\n$ helm repo update\n$ kubectl create namespace sail-operator\n$ helm install sail-operator sail-operator/sail-operator --version 1.0.0 -n sail-operator\n```\n\n----------------------------------------\n\nTITLE: Retrieving kubectl Credentials\nDESCRIPTION: Fetches kubernetes credentials for cluster access using gcloud command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gke/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngcloud container clusters get-credentials $CLUSTER_NAME \\\n    --zone $ZONE \\\n    --project $PROJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Using tcpdump for mTLS validation on Kubernetes worker nodes\nDESCRIPTION: This command uses tcpdump to capture traffic on the network interface, focusing on specific application and HBONE ports to validate mTLS encryption.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/verify-mtls-enabled/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ tcpdump -nAi eth0 port 9080 or port 15008\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Multicluster Istio Installation\nDESCRIPTION: Sets up environment variables for two Kubernetes cluster contexts to be used in the Istio multicluster installation process. These variables simplify referencing the clusters throughout the installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/before-you-begin/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export CTX_CLUSTER1=<your cluster1 context>\n$ export CTX_CLUSTER2=<your cluster2 context>\n```\n\n----------------------------------------\n\nTITLE: Comparing Root Certificates in Istio Multicluster Setup\nDESCRIPTION: This command compares the root certificates between two Istio clusters. It's used to verify that both clusters are using the same root of trust, which is crucial for secure cross-cluster communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndiff \\\n   <(kubectl --context=\"${CTX_CLUSTER1}\" -n istio-system get secret cacerts -ojsonpath='{.data.root-cert\\.pem}') \\\n   <(kubectl --context=\"${CTX_CLUSTER2}\" -n istio-system get secret cacerts -ojsonpath='{.data.root-cert\\.pem}')\n```\n\n----------------------------------------\n\nTITLE: Testing Gateway Connectivity to Helloworld Application\nDESCRIPTION: This command tests connectivity to the helloworld application through the ingress gateway. It uses curl to send a request to the /hello endpoint using the previously set GATEWAY_URL variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s \"http://${GATEWAY_URL}/hello\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio Gateway for Helloworld Application\nDESCRIPTION: This command applies the Istio Gateway configuration to expose the helloworld application. It uses the pre-defined gateway configuration from the Istio samples.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/helloworld/helloworld-gateway.yaml@ -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Testing TLS Origination by Sending HTTP Request to CNN\nDESCRIPTION: Verifies TLS origination is working by sending an HTTP request to edition.cnn.com/politics which should directly return a 200 status without redirects.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${SOURCE_POD}\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\n```\n\n----------------------------------------\n\nTITLE: Generating Dashboard Token\nDESCRIPTION: Creates and stores the Dashboard access token.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ntoken=$(kubectl -n kubernetes-dashboard create token admin-user)\necho $token\n```\n\n----------------------------------------\n\nTITLE: JWT Authentication Exclusion Policy for Health Checks\nDESCRIPTION: Policy that requires JWT authentication for all paths except /healthz, demonstrating exclusion matching.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: disable-jwt-for-healthz\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/healthz\"]\n    from:\n    - source:\n        requestPrincipals: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Working Directory in Bash\nDESCRIPTION: Creates a working directory for storing VM integration files and certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir -p \"${WORK_DIR}\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Metric Generation for Productpage Service (Bash)\nDESCRIPTION: Bash command using istioctl to verify metric generation and examine the istio_requests_total metric for the productpage service, filtering out destination reporter and TYPE entries.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x es \"$(kubectl get pod -l app=productpage -o jsonpath='{.items[0].metadata.name}')\" -oprom | grep istio_requests_total | grep -v TYPE |grep -v 'reporter=\"destination\"'\n```\n\n----------------------------------------\n\nTITLE: Applying Per-Path Token Requirement (Istio APIs)\nDESCRIPTION: This snippet demonstrates how to modify the AuthorizationPolicy to require JWT tokens only for the /headers path using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"frontend-ingress\"\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notRequestPrincipals: [\"*\"]\n    to:\n    - operation:\n        paths: [\"/headers\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Retrieving Certificate Chain\nDESCRIPTION: Retrieves the certificate chain from the httpbin pod's sidecar proxy using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ sleep 20; kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c istio-proxy -n foo -- openssl s_client -showcerts -connect httpbin.foo:8000 > httpbin-proxy-cert.txt\n```\n\n----------------------------------------\n\nTITLE: Verifying Network Connectivity\nDESCRIPTION: Tests network connectivity between httpbin and curl services within and across namespaces to verify certificate signing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ export CURL_POD_FOO=$(kubectl get pod -n foo -l app=curl -o jsonpath={.items..metadata.name})\n$ kubectl exec \"$CURL_POD_FOO\" -n foo -c curl -- curl http://httpbin.foo:8000/html\n$ kubectl exec \"$CURL_POD_FOO\" -n foo -c curl -- curl http://httpbin.bar:8000/html\n```\n\n----------------------------------------\n\nTITLE: Installing Ztunnel DaemonSet\nDESCRIPTION: Command to install the ztunnel DaemonSet, which is the node proxy component of Istio's ambient mode. This component handles traffic interception and security at the node level.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install ztunnel istio/ztunnel -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Verifying ServiceEntry configuration with curl\nDESCRIPTION: Tests the ServiceEntry configuration by sending an HTTP request to edition.cnn.com/politics from a source pod. The output shows the expected 301 redirect to HTTPS and a subsequent 200 response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\n...\nHTTP/1.1 301 Moved Permanently\n...\nlocation: https://edition.cnn.com/politics\n...\n\nHTTP/2 200\nContent-Type: text/html; charset=utf-8\n...\n```\n\n----------------------------------------\n\nTITLE: Disabling Access Logging for Specific Workloads\nDESCRIPTION: Configuration to disable access logging for a specific workload (curl service) using the Telemetry API. This selectively turns off logging based on workload labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n default -f -\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: disable-curl-logging\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: curl\n  accessLogging:\n  - providers:\n    - name: otel\n    disabled: true\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Namespace-scoped Telemetry in Istio\nDESCRIPTION: This YAML snippet demonstrates how to configure namespace-scoped telemetry in Istio. It overrides the mesh-wide configuration for the 'myapp' namespace, setting a custom tag based on a request header.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/telemetry/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: namespace-override\n  namespace: myapp\nspec:\n  tracing:\n  - customTags:\n      userId:\n        header:\n          name: userId\n          defaultValue: unknown\n```\n\n----------------------------------------\n\nTITLE: Verifying Destination Rule Configuration in Istio\nDESCRIPTION: This bash command retrieves and displays the created DestinationRule for httpbin, showing the configured circuit breaking settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get destinationrule httpbin -o yaml\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for CNN Domain with Istio\nDESCRIPTION: Defines a ServiceEntry resource for edition.cnn.com with HTTP and HTTPS port configurations to enable external access from the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: cnn\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenTelemetry Extension Provider in YAML\nDESCRIPTION: YAML configuration for adding an OpenTelemetry provider named 'otel' to MeshConfig with service and port specifications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/otel-provider/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nextensionProviders:\n- name: otel\n  envoyOtelAls:\n    service: opentelemetry-collector.observability.svc.cluster.local\n    port: 4317\n```\n\n----------------------------------------\n\nTITLE: Creating Dual Stack KinD Cluster Configuration\nDESCRIPTION: YAML configuration for creating a Kubernetes in Docker (KinD) cluster with dual stack networking enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/experimental-dual-stack/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kind create cluster --name istio-ds --config - <<EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnetworking:\n  ipFamily: dual\nEOF\n```\n\n----------------------------------------\n\nTITLE: Filtering Access Logs by Workload Mode\nDESCRIPTION: Configuration to disable inbound (SERVER mode) access logging for the httpbin service while keeping outbound logging enabled. This uses the mode selector in the Telemetry API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n default -f -\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: disable-httpbin-logging\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  accessLogging:\n  - providers:\n    - name: otel\n    match:\n      mode: SERVER\n    disabled: true\nEOF\n```\n\n----------------------------------------\n\nTITLE: Routing All Traffic to v3 Using Gateway API\nDESCRIPTION: This command applies a Gateway API HTTPRoute to route 100% of traffic to the v3 version of the reviews service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/gateway-api/route-reviews-v3.yaml@\n```\n\n----------------------------------------\n\nTITLE: Checking and Setting Cluster Network Labels\nDESCRIPTION: Commands to check and set network topology labels for the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER1}\" get ns istio-system -ojsonpath='{.metadata.labels.topology\\.istio\\.io/network}'\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER1}\" label namespace istio-system topology.istio.io/network=network1\n```\n\n----------------------------------------\n\nTITLE: Adding Request Header Custom Tag\nDESCRIPTION: YAML configuration for adding custom tags based on incoming client request headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/telemetry-api/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n    - providers:\n      - name: \"zipkin\"\n      randomSamplingPercentage: 100.00\n      customTags:\n        my_tag_header:\n          header:\n            name: <CLIENT-HEADER>\n            defaultValue: <VALUE>      # optional\n```\n\n----------------------------------------\n\nTITLE: Adding Literal Custom Tag\nDESCRIPTION: YAML configuration for adding a static literal custom tag to tracing spans.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/telemetry-api/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\nname: mesh-default\nnamespace: istio-system\nspec:\n  tracing:\n  - providers:\n    - name: \"zipkin\"\n    randomSamplingPercentage: 100.00\n    customTags:\n      \"provider\":\n        literal:\n          value: \"zipkin\"\n```\n\n----------------------------------------\n\nTITLE: Installing Canary Version of Istio Discovery\nDESCRIPTION: Install a canary version of the Istio discovery chart with a specific revision label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod-canary istio/istiod \\\n    --set revision=canary \\\n    -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Testing Direct Pod-to-Pod Communication in Istio Multicluster\nDESCRIPTION: This snippet demonstrates how to test direct communication between pods in different clusters. It uses curl to send a request from a pod in one cluster to a pod IP in another cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec --context=\"${CTX_CLUSTER1}\" -n uninjected-sample -c curl \\\n    \"$(kubectl get pod --context=\"${CTX_CLUSTER1}\" -n uninjected-sample -l \\\n    app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n    -- curl -sS $REMOTE_POD_IP:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands\nDESCRIPTION: Command to remove the test namespace and all associated resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/claim-to-header/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace foo\n```\n\n----------------------------------------\n\nTITLE: Splitting Traffic 50/50 Between v1 and v3 Using Istio APIs\nDESCRIPTION: This command applies a VirtualService to split traffic 50% to reviews:v1 and 50% to reviews:v3 using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-50-v3.yaml@\n```\n\n----------------------------------------\n\nTITLE: Creating a Role for Read Access to istio-system Namespace in YAML\nDESCRIPTION: Defines a Kubernetes Role that provides read access to resources in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: istio-system-access\n  namespace: istio-system\nrules:\n- apiGroups: [\"\", \"extensions\", \"apps\"]\n  resources: [\"*\"]\n  verbs: [\"get\", \"list\"]\n```\n\n----------------------------------------\n\nTITLE: Installing New Istio Control Plane\nDESCRIPTION: Command to install Istio 1.10.0 control plane with a specific revision\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --revision 1-10-0 -y\n```\n\n----------------------------------------\n\nTITLE: Checking Namespace Istio Injection Labels\nDESCRIPTION: Displays all namespaces with their corresponding 'istio-injection' label status. This helps identify which namespaces are configured for automatic sidecar injection based on the webhook's namespace selector.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get namespace -L istio-injection\nNAME           STATUS    AGE       ISTIO-INJECTION\ndefault        Active    18d       enabled\nistio-system   Active    3d\nkube-public    Active    18d\nkube-system    Active    18d\n```\n\n----------------------------------------\n\nTITLE: Defining DENY Authorization Policy with Negative Path Matching in Istio\nDESCRIPTION: This YAML snippet demonstrates a secure authorization policy using the DENY-with-negative-matching pattern, which explicitly denies requests to all paths except \"/public\".\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/best-practices/security/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo\nspec:\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/public\"]\n```\n\n----------------------------------------\n\nTITLE: Complete v1beta1 AuthorizationPolicy for httpbin Service\nDESCRIPTION: Fully migrated v1beta1 AuthorizationPolicy that incorporates the rules from the original ServiceRole and ServiceRoleBinding. It allows GET requests from the sleep service account using the new v1beta1 syntax.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Accessing Wikipedia via Kubernetes Service with Endpoints\nDESCRIPTION: Shows how to access Wikipedia through the Kubernetes service with endpoints from pods with and without Istio sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD_WITHOUT_ISTIO\" -n without-istio -c curl -- curl -sS --resolve en.wikipedia.org:443:\"$(kubectl get service my-wikipedia -o jsonpath='{.spec.clusterIP}')\" https://en.wikipedia.org/wiki/Main_Page | grep -o \"<title>.*</title>\"\n```\n\n----------------------------------------\n\nTITLE: Deploying External TCP Services\nDESCRIPTION: Commands to deploy two sample TCP applications in separate namespaces to simulate external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns external-1\n$ kubectl -n external-1 apply -f samples/tcp-echo/tcp-echo.yaml\n$ kubectl create ns external-2\n$ kubectl -n external-2 apply -f samples/tcp-echo/tcp-echo.yaml\n```\n\n----------------------------------------\n\nTITLE: Applying Virtual Services for Traffic Routing in Istio\nDESCRIPTION: Commands to apply Istio virtual services that route all traffic to v1 services and route reviews traffic to v2 for the test user 'jason'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/fault-injection/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml@\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio by Generating and Deleting Manifests\nDESCRIPTION: Alternative approach to uninstall Istio by generating the same manifest that was used for installation and piping it to kubectl delete.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate <your original installation options> | kubectl delete --ignore-not-found=true -f -\n```\n\n----------------------------------------\n\nTITLE: Testing Helloworld Service Access with Curl\nDESCRIPTION: This snippet uses curl to test access to the helloworld service through the configured ingress. It sends multiple requests to demonstrate load balancing between v1 and v2 versions of the service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ for run in {1..10}; do curl -HHost:helloworld.sample.com http://$INGRESS_HOST/hello; done\n```\n\n----------------------------------------\n\nTITLE: Configuring Discovery Selectors in Istio Installation YAML\nDESCRIPTION: This YAML configuration updates the Istio installation to use discovery selectors, limiting discovery to namespaces with the label 'istio-discovery=enabled'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/discovery-selectors/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\nnamespace: istio-system\nspec:\n# You may override parts of meshconfig by uncommenting the following lines.\n  meshConfig:\n    discoverySelectors:\n      - matchLabels:\n          istio-discovery: enabled\n```\n\n----------------------------------------\n\nTITLE: Defining ExternalName Service in Kubernetes YAML\nDESCRIPTION: Example YAML configuration for creating an ExternalName service that acts as a DNS alias, mapping 'alias' to 'concrete.example.com'. This demonstrates how to set up service aliasing in a Kubernetes environment with Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/traffic-routing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: alias\nspec:\n  type: ExternalName\n  externalName: concrete.example.com\n```\n\n----------------------------------------\n\nTITLE: Continuous Monitoring of Bookinfo Application Response Codes\nDESCRIPTION: Command that sends requests continuously to the Bookinfo application and displays only the HTTP status code, useful for generating consistent traffic patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ watch -n 1 curl -o /dev/null -s -w %{http_code} $GATEWAY_URL/productpage\n```\n\n----------------------------------------\n\nTITLE: Configuring NGINX Server for Mutual TLS in Bash\nDESCRIPTION: Creates an NGINX configuration file that sets up the server to use mutual TLS. It specifies the server certificate, key, and CA certificate locations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<\\EOF > ./nginx.conf\nevents {\n}\n\nhttp {\n  log_format main '$remote_addr - $remote_user [$time_local]  $status '\n  '\"$request\" $body_bytes_sent \"$http_referer\" '\n  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  access_log /var/log/nginx/access.log main;\n  error_log  /var/log/nginx/error.log;\n\n  server {\n    listen 443 ssl;\n\n    root /usr/share/nginx/html;\n    index index.html;\n\n    server_name my-nginx.mesh-external.svc.cluster.local;\n    ssl_certificate /etc/nginx-server-certs/tls.crt;\n    ssl_certificate_key /etc/nginx-server-certs/tls.key;\n    ssl_client_certificate /etc/nginx-ca-certs/example.com.crt;\n    ssl_verify_client on;\n  }\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istiod Chart on OpenShift with Helm\nDESCRIPTION: Command to install the Istiod Helm chart on OpenShift with the ambient profile. The global.platform=openshift setting is required for compatibility with OpenShift.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --set profile=ambient --set global.platform=openshift --wait\n```\n\n----------------------------------------\n\nTITLE: Testing Traffic Mirroring Configuration\nDESCRIPTION: Commands to test the traffic mirroring setup by sending requests and checking logs from both v1 and v2 services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec deploy/curl -c curl -- curl -sS http://httpbin:8000/headers\n```\n\n----------------------------------------\n\nTITLE: Deploying Wasm Extension with wasme CLI\nDESCRIPTION: Command to deploy a WebAssembly extension to all workloads in the bookinfo namespace using the wasme CLI tool.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/deploy-wasm-declarative/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwasme deploy istio webassemblyhub.io/ceposta/demo-add-header:v0.2 \\\n  --id=myfilter \\\n  --namespace=bookinfo \\\n  --config 'tomorrow'\n```\n\n----------------------------------------\n\nTITLE: Enabling Automatic Sidecar Injection - Bash\nDESCRIPTION: Commands to enable automatic sidecar injection by labeling the namespace and verifying the injection status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled --overwrite\n$ kubectl get namespace -L istio-injection\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService for Egress Gateway Routing with Istio APIs\nDESCRIPTION: Creates a VirtualService to route traffic from the mesh to the egress gateway and from the gateway to the external service with TLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: direct-cnn-through-egress-gateway\nspec:\n  hosts:\n  - edition.cnn.com\n  gateways:\n  - istio-egressgateway\n  - mesh\n  http:\n  - match:\n    - gateways:\n      - mesh\n      port: 80\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: cnn\n        port:\n          number: 80\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 80\n    route:\n    - destination:\n        host: edition.cnn.com\n        port:\n          number: 443\n      weight: 100\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway Resource for Ingress Traffic in Kubernetes\nDESCRIPTION: This snippet creates a Gateway resource in the sample-ingress namespace to define the ingress entry point for the helloworld service. It uses the Istio gateway controller and allows routes for all namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace sample-ingress\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: Gateway\nmetadata:\n  name: sample-gateway\n  namespace: sample-ingress\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: http\n    hostname: \"*.sample.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\nEOF\n```\n\n----------------------------------------\n\nTITLE: Retrieving IP CIDR Ranges in Google Kubernetes Engine\nDESCRIPTION: This command retrieves the cluster and services IP CIDR ranges from a GKE cluster. These values are needed to configure Istio's includeIPRanges parameter for direct access to external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\ngcloud container clusters describe XXXXXXX --zone=XXXXXX | grep -e clusterIpv4Cidr -e servicesIpv4Cidr\n```\n\n----------------------------------------\n\nTITLE: Testing External Service with Timeout Configuration in Istio\nDESCRIPTION: This command makes a request to the /delay/5 endpoint of httpbin.org after setting a 3-second timeout. It demonstrates how the Istio timeout configuration cuts off the request after 3 seconds, resulting in a 504 Gateway Timeout response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$SOURCE_POD\" -c curl -- time curl -o /dev/null -sS -w \"%{http_code}\\n\" http://httpbin.org/delay/5\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Upgrade Compatibility using Precheck Command\nDESCRIPTION: The 'istioctl x precheck' command checks if upgrading Istio is compatible with your current environment, ensuring safe installation or upgrade.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x precheck\n✔ No issues found when checking the cluster. Istio is safe to install or upgrade!\n  To get started, check out https://istio.io/latest/docs/setup/getting-started/\n```\n\n----------------------------------------\n\nTITLE: Checking East-West Gateway Service Status\nDESCRIPTION: Command to inspect the status of the east-west gateway service in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system get service -l \"istio=eastwestgateway\"\n```\n\n----------------------------------------\n\nTITLE: Cleanup: Removing Namespace and Request Authentication\nDESCRIPTION: Commands to remove the created namespace and request authentication resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/jwt-route/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace foo\n$ kubectl delete requestauthentication ingress-jwt -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Validating mTLS using ztunnel configurations in Istio\nDESCRIPTION: This command uses istioctl to view the ztunnel configurations for workloads, showing if HBONE (HTTP-Based Overlay Network Environment) is configured, indicating mTLS enablement.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/verify-mtls-enabled/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl ztunnel-config workloads\n```\n\n----------------------------------------\n\nTITLE: Kubernetes API Server Proxy Settings Example\nDESCRIPTION: Shows an example of proxy settings in the Kubernetes API server that can cause sidecar injection failures. Proxy configurations can prevent the API server from reaching the sidecar injection webhook.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  - name: http_proxy\n    value: http://proxy-wsa.esl.foo.com:80\n  - name: https_proxy\n    value: http://proxy-wsa.esl.foo.com:80\n  - name: no_proxy\n    value: 127.0.0.1,localhost,dockerhub.foo.com,devhub-docker.foo.com,10.84.100.125,10.84.100.126,10.84.100.127\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret from cluster1 to cluster2\nDESCRIPTION: Creates and applies a remote secret that provides cluster2 with access to cluster1's API server. This enables endpoint discovery between clusters for the Istio mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl create-remote-secret \\\n    --context=\"${CTX_CLUSTER1}\" \\\n    --name=cluster1 | \\\n    kubectl apply -f - --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Defining L7 Authorization Policy in Istio\nDESCRIPTION: This YAML snippet shows an authorization policy with Layer 7 conditions, specifically checking for the HTTP GET method. This policy will be denied by ztunnel due to the presence of L7 attributes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/l4-policy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: allow-curl-to-httpbin\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals:\n       - cluster.local/ns/ambient-demo/sa/curl\n   to:\n   - operation:\n       methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Run Istio configuration analysis\nDESCRIPTION: Command to analyze Istio configuration for validation issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl analyze\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway with Kubernetes YAML\nDESCRIPTION: Defines a Service, Deployment, Role, and RoleBinding for an Istio ingress gateway. Sets up gateway injection, unique labels, and necessary RBAC permissions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: istio-ingressgateway\n  namespace: istio-ingress\nspec:\n  type: LoadBalancer\n  selector:\n    istio: ingressgateway\n  ports:\n  - port: 80\n    name: http\n  - port: 443\n    name: https\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: istio-ingressgateway\n  namespace: istio-ingress\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  template:\n    metadata:\n      annotations:\n        # Select the gateway injection template (rather than the default sidecar template)\n        inject.istio.io/templates: gateway\n      labels:\n        # Set a unique label for the gateway. This is required to ensure Gateways can select this workload\n        istio: ingressgateway\n        # Enable gateway injection. If connecting to a revisioned control plane, replace with \"istio.io/rev: revision-name\"\n        sidecar.istio.io/inject: \"true\"\n    spec:\n      # Allow binding to all ports (such as 80 and 443)\n      securityContext:\n        sysctls:\n        - name: net.ipv4.ip_unprivileged_port_start\n          value: \"0\"\n      containers:\n      - name: istio-proxy\n        image: auto # The image will automatically update each time the pod starts.\n        # Drop all privileges, allowing to run as non-root\n        securityContext:\n          capabilities:\n            drop:\n            - ALL\n          runAsUser: 1337\n          runAsGroup: 1337\n---\n# Set up roles to allow reading credentials for TLS\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: istio-ingressgateway-sds\n  namespace: istio-ingress\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: istio-ingressgateway-sds\n  namespace: istio-ingress\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: istio-ingressgateway-sds\nsubjects:\n- kind: ServiceAccount\n  name: default\n```\n\n----------------------------------------\n\nTITLE: Deploying Layer 7 Authorization Policy for Istio Ambient Mesh\nDESCRIPTION: This snippet creates a Layer 7 authorization policy that allows the 'curl' service to send GET requests to the 'productpage' service while restricting other operations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/enforce-auth-policies/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: productpage-waypoint\n  namespace: default\nspec:\n  targetRefs:\n  - kind: Service\n    group: \"\"\n    name: productpage\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals:\n        - cluster.local/ns/default/sa/curl\n    to:\n    - operation:\n        methods: [\"GET\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployments for Upgrade\nDESCRIPTION: Command to restart deployments in a namespace to apply the new Istio version\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployments -n …\n```\n\n----------------------------------------\n\nTITLE: NGINX HTTP/1.1 Configuration\nDESCRIPTION: NGINX configuration to enable HTTP/1.1 protocol for compatibility with Envoy proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_5\n\nLANGUAGE: plain\nCODE:\n```\nupstream http_backend {\n    server 127.0.0.1:8080;\n\n    keepalive 16;\n}\n\nserver {\n    ...\n\n    location /http/ {\n        proxy_pass http://http_backend;\n        proxy_http_version 1.1;\n        proxy_set_header Connection \"\";\n        ...\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Istio Sidecar Injector Service\nDESCRIPTION: Shows how to list the Istio sidecar injector service in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc --namespace=istio-system | grep sidecar-injector\nistio-sidecar-injector   ClusterIP   10.102.70.184   <none>        443/TCP             24d\n```\n\n----------------------------------------\n\nTITLE: Creating a Shell Script Bridge Between Helm Post-renderer and Kustomize\nDESCRIPTION: Implements a shell script that bridges between Helm's post-renderer (which uses stdin/stdout) and Kustomize (which uses files). The script reads from stdin, writes to a base.yaml file, and executes kubectl kustomize.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat > kustomize.sh <<EOF\n#!/bin/sh\ncat > base.yaml\nexec kubectl kustomize # you can also use \"kustomize build .\" if you have it installed.\nEOF\n$ chmod +x ./kustomize.sh\n```\n\n----------------------------------------\n\nTITLE: Applying WorkloadGroup Configuration\nDESCRIPTION: Applies the WorkloadGroup configuration to the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --namespace \"${VM_NAMESPACE}\" apply -f workloadgroup.yaml\n```\n\n----------------------------------------\n\nTITLE: Downloading and Setting Up Istio CLI\nDESCRIPTION: Commands to download the Istio CLI, navigate to the Istio directory, and add the CLI to the system PATH. This is required for configuring and managing Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | sh -\n$ cd istio-{{< istio_full_version >}}\n$ export PATH=$PWD/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Creating HTTPRoute for Helloworld Service in Kubernetes\nDESCRIPTION: This snippet creates an HTTPRoute resource to expose and route traffic to the helloworld service. It attaches the route to the sample-gateway and specifies the hostname and path for routing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n sample -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: HTTPRoute\nmetadata:\n  name: helloworld\nspec:\n  parentRefs:\n  - name: sample-gateway\n    namespace: sample-ingress\n  hostnames: [\"helloworld.sample.com\"]\n  rules:\n  - matches:\n    - path:\n        type: Exact\n        value: /hello\n    backendRefs:\n    - name: helloworld\n      port: 5000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Processes\nDESCRIPTION: Commands to terminate any running istioctl processes after completing the tracing setup and testing. Ensures clean removal of port-forwarding and other temporary resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/zipkin/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ killall istioctl\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Auto-Injection Label\nDESCRIPTION: Removes the label that instructs Istio to automatically inject Envoy sidecar proxies from the default namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace default istio-injection-\n```\n\n----------------------------------------\n\nTITLE: Storing East-West Gateway Address for Remote Configuration\nDESCRIPTION: Command to extract and store the external IP address of the east-west gateway from cluster1 for later use in remote cluster configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ export DISCOVERY_ADDRESS=$(kubectl \\\n    --context=\"${CTX_CLUSTER1}\" \\\n    -n istio-system get svc istio-eastwestgateway \\\n    -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n```\n\n----------------------------------------\n\nTITLE: Split Virtual Service Configuration in Istio\nDESCRIPTION: Demonstration of splitting a monolithic VirtualService into multiple fragments per backend service, enabling better separation of concerns and team ownership.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myapp-service1\nspec:\n  hosts:\n  - myapp.com\n  gateways:\n  - myapp-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /service1\n    route:\n    - destination:\n        host: service1.default.svc.cluster.local\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myapp-service2\nspec:\n  hosts:\n  - myapp.com\n  gateways:\n  - myapp-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /service2\n    route:\n    - destination:\n        host: service2.default.svc.cluster.local\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myapp-...\n```\n\n----------------------------------------\n\nTITLE: Inspecting Istio Service-level Metrics in JSON Format\nDESCRIPTION: Example of an Istio service-level metric 'istio_requests_total' that shows detailed information about service communications including source and destination workloads, protocols, and response codes. These metrics cover the four basic monitoring needs: latency, traffic, errors, and saturation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/observability/index.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\nistio_requests_total{\n  connection_security_policy=\"mutual_tls\",\n  destination_app=\"details\",\n  destination_canonical_service=\"details\",\n  destination_canonical_revision=\"v1\",\n  destination_principal=\"cluster.local/ns/default/sa/default\",\n  destination_service=\"details.default.svc.cluster.local\",\n  destination_service_name=\"details\",\n  destination_service_namespace=\"default\",\n  destination_version=\"v1\",\n  destination_workload=\"details-v1\",\n  destination_workload_namespace=\"default\",\n  reporter=\"destination\",\n  request_protocol=\"http\",\n  response_code=\"200\",\n  response_flags=\"-\",\n  source_app=\"productpage\",\n  source_canonical_service=\"productpage\",\n  source_canonical_revision=\"v1\",\n  source_principal=\"cluster.local/ns/default/sa/default\",\n  source_version=\"v1\",\n  source_workload=\"productpage-v1\",\n  source_workload_namespace=\"default\"\n} 214\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate and Key in Bash\nDESCRIPTION: Creates a client certificate and private key using OpenSSL. The certificate is signed by the root certificate and is valid for 365 days.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out client.example.com.csr -newkey rsa:2048 -nodes -keyout client.example.com.key -subj \"/CN=client.example.com/O=client organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 1 -in client.example.com.csr -out client.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Installing East-West Gateway on cluster1 with IstioOperator\nDESCRIPTION: Installs an east-west gateway on cluster1 using a generated configuration and istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ @samples/multicluster/gen-eastwest-gateway.sh@ \\\n    --network network1 | \\\n    istioctl --context=\"${CTX_CLUSTER1}\" install -y -f -\n```\n\n----------------------------------------\n\nTITLE: Testing HTTP Request with mTLS Origination in Istio\nDESCRIPTION: This command sends an HTTP request to the external service through the Istio sidecar, which will perform mutual TLS origination. It executes a curl command from within the curl pod to verify the configuration works correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\" -c curl -- curl -sS http://my-nginx.mesh-external.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Certificates\nDESCRIPTION: Creates a Kubernetes secret 'cacerts' in the istio-system namespace with the generated certificates and keys.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-system\n$ kubectl create secret generic cacerts -n istio-system \\\n      --from-file=cluster1/ca-cert.pem \\\n      --from-file=cluster1/ca-key.pem \\\n      --from-file=cluster1/root-cert.pem \\\n      --from-file=cluster1/cert-chain.pem\n```\n\n----------------------------------------\n\nTITLE: Configuring Waypoint Processing Label in YAML\nDESCRIPTION: Add the 'istio.io/waypoint-for' label to a Gateway to specify what types of endpoints the waypoint will process traffic for. Valid values are 'service', 'workload', 'none', or 'all'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    istio.io/waypoint-for: service\n```\n\n----------------------------------------\n\nTITLE: Configuring Revisioned Control Planes with CNI\nDESCRIPTION: This YAML configuration shows how to enable CNI support when installing revisioned Istio control planes. Setting values.pilot.cni.enabled=true ensures the sidecar injector doesn't attempt to inject the istio-init container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/cni/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  revision: REVISION_NAME\n  ...\n  values:\n    pilot:\n      cni:\n        enabled: true\n  ...\n```\n\n----------------------------------------\n\nTITLE: Applying DestinationRule for Weighted Distribution in Istio\nDESCRIPTION: This YAML snippet defines a DestinationRule for the HelloWorld service, configuring outlier detection and weighted distribution across different localities. It sets specific traffic percentages for different regions and zones.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/distribute/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: helloworld\nspec:\n  host: helloworld.sample.svc.cluster.local\n  trafficPolicy:\n    loadBalancer:\n      localityLbSetting:\n        enabled: true\n        distribute:\n        - from: region1/zone1/*\n          to:\n            \"region1/zone1/*\": 70\n            \"region1/zone2/*\": 20\n            \"region3/zone4/*\": 10\n    outlierDetection:\n      consecutive5xxErrors: 100\n      interval: 1s\n      baseEjectionTime: 1m\n```\n\n----------------------------------------\n\nTITLE: Checking Envoy Version\nDESCRIPTION: Command to check the version of Envoy being used by executing into the proxy container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it productpage-v1-6b746f74dc-9stvs -c istio-proxy -n default  -- pilot-agent request GET server_info --log_as_json | jq {version}\n```\n\n----------------------------------------\n\nTITLE: Example Status Field Output Structure\nDESCRIPTION: Sample YAML output showing the structure of a status field, including conditions and validation messages for a virtual service with configuration issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/config-status/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstatus:\n  conditions:\n  - lastProbeTime: null\n    lastTransitionTime: \"2019-12-26T22:06:56Z\"\n    message: \"1 Error and 1 Warning found. See validationMessages field for details\"\n    reason: \"errorsFound\"\n    status: \"False\"\n    type: PassedAnalysis\n  validationMessages:\n  - code: IST0101\n    level: Error\n    message: 'Referenced gateway not found: \"bogus-gateway\"'\n  - code: IST0102\n    level: Warn\n    message: 'mTLS not enabled for virtual service'\n```\n\n----------------------------------------\n\nTITLE: Updating Ratings in MySQL Database\nDESCRIPTION: Command to modify a rating in the database and verify the change. This demonstrates how changes to the database are reflected in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ mysql -u root -ppassword test -e  \"update ratings set rating=1 where reviewid=1;select * from ratings;\"\n+----------+--------+\n| ReviewID | Rating |\n+----------+--------+\n|        1 |      1 |\n|        2 |      4 |\n+----------+--------+\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Authorization Policy\nDESCRIPTION: Defines an authorization policy requiring valid JWT with specific requestPrincipal\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-jwt/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: require-jwt\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n       requestPrincipals: [\"testing@secure.istio.io/testing@secure.istio.io\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret for cluster2 in cluster1\nDESCRIPTION: Creates a remote secret in cluster1 to access cluster2's API server, enabling endpoint discovery.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl create-remote-secret \\\n  --context=\"${CTX_CLUSTER2}\" \\\n  --name=cluster2 | \\\n  kubectl apply -f - --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Cross-Cluster Traffic from Cluster1\nDESCRIPTION: Send requests from the curl pod on cluster1 to the HelloWorld service to verify cross-cluster load balancing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/verify/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec --context=\"${CTX_CLUSTER1}\" -n sample -c curl \\\n    \"$(kubectl get pod --context=\"${CTX_CLUSTER1}\" -n sample -l \\\n    app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n    -- curl -sS helloworld.sample:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Enrolling Namespace with Waypoint\nDESCRIPTION: Command to deploy a waypoint proxy and automatically enroll the namespace to use it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint apply -n default --enroll-namespace\n```\n\n----------------------------------------\n\nTITLE: Configuring secure ALLOW AuthorizationPolicy in YAML\nDESCRIPTION: Updated ALLOW policy that explicitly only allows mTLS traffic and rejects plain text traffic. This configuration ensures that requests from namespace 'foo' are properly handled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-004/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: allow-ns-not-foo\nspec:\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        notNamespaces: [\"foo\"]\n        # Add the following to explicitly only allow mTLS traffic.\n        namespaces: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Correcting Authorization Policy YAML Structure in Istio\nDESCRIPTION: Example of a problematic Istio AuthorizationPolicy resource where an unintended list structure creates an overly permissive policy. This demonstrates a common YAML syntax mistake that can lead to authorization policies with unexpected behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: example\n  namespace: foo\nspec:\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        paths:\n        - /foo\n  - from:\n    - source:\n        namespaces:\n        - foo\n```\n\n----------------------------------------\n\nTITLE: Defining a WasmPlugin Resource in YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the new WasmPlugin Custom Resource Definition (CRD) to deploy a Wasm module to Istio workloads. It specifies the selector, injection phase, priority, plugin configuration, and the URL for the Wasm module.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/wasm-api-alpha/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: your-filter\nspec:\n  selector:\n    matchLabels:\n      app: server\n  phase: AUTHN\n  priority: 10\n  pluginConfig:\n    someSetting: true\n    someOtherSetting: false\n    youNameIt:\n    - first\n    - second\n  url: docker.io/your-org/your-filter:1.0.0\n```\n\n----------------------------------------\n\nTITLE: Downloading Kubernetes Cluster Configuration\nDESCRIPTION: This command downloads the configuration for the created Kubernetes cluster. Users should replace <cluster-name> with the name of their cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/ibm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ibmcloud ks cluster config --cluster <cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Installing Ingress Gateway\nDESCRIPTION: Commands to create a namespace and install the Istio ingress gateway component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ helm install istio-ingress istio/gateway -n istio-ingress --wait\n```\n\n----------------------------------------\n\nTITLE: Reverting to Previous Version\nDESCRIPTION: Command to revert back to the previous Istio version in case of issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x revision tag set prod --revision 1-8-5\n```\n\n----------------------------------------\n\nTITLE: Enabling Authorization Debug Logging in Istio Proxy\nDESCRIPTION: Turns on authorization debug logging in the Istio proxy for the httpbin deployment. This allows detailed logging of authorization decisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config log deploy/httpbin --level \"rbac:debug\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Clusters for Reviews Waypoint Proxy in Istio\nDESCRIPTION: This command retrieves and displays the Envoy clusters for the reviews waypoint proxy. It shows service FQDNs, ports, subsets, directions, and types for various clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/waypoint-proxy-made-simple/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config clusters deploy/bookinfo-reviews-istio-waypoint\n```\n\n----------------------------------------\n\nTITLE: Creating Dashboard Admin Access\nDESCRIPTION: Creates ServiceAccount and ClusterRoleBinding for Dashboard admin access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create serviceaccount -n kubernetes-dashboard admin-user\nkubectl create clusterrolebinding -n kubernetes-dashboard admin-user --clusterrole cluster-admin --serviceaccount=kubernetes-dashboard:admin-user\n```\n\n----------------------------------------\n\nTITLE: Querying Total Istio Requests in Prometheus\nDESCRIPTION: This Prometheus query retrieves the total count of all requests processed by Istio. It's a basic query to get started with Istio metrics in Prometheus.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\nistio_requests_total\n```\n\n----------------------------------------\n\nTITLE: Querying Requests to Reviews Microservice with Prometheus PromQL\nDESCRIPTION: This query retrieves requests specifically for the 'reviews' microservice in the specified namespace using the istio_requests_total metric. It filters for the destination service namespace, reporter, and service name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/logs-istio/index.md#2025-04-08_snippet_2\n\nLANGUAGE: promql\nCODE:\n```\nistio_requests_total{destination_service_namespace=\"tutorial\", reporter=\"destination\",destination_service_name=\"reviews\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring DiscoverySelectors in Istio MeshConfig\nDESCRIPTION: This YAML configuration demonstrates how to use discoverySelectors in meshConfig to control which namespaces are visible to the Istio control plane. It shows filtering for namespaces with the 'istio-discovery=enabled' label and the kube-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/configuration-scoping/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  discoverySelectors:\n    - matchLabels:\n        # Allow any namespaces with `istio-discovery=enabled`\n        istio-discovery: enabled\n    - matchLabels:\n        # Allow \"kube-system\"; Kubernetes automatically adds this label to each namespace\n        kubernetes.io/metadata.name: kube-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Grafana HTTP Access in Istio\nDESCRIPTION: Creates Gateway, VirtualService, and DestinationRule resources to expose Grafana on port 80 through Istio ingress gateway. Configures HTTP routing to Grafana service running on port 3000.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: grafana-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http-grafana\n      protocol: HTTP\n    hosts:\n    - \"grafana.${INGRESS_DOMAIN}\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: grafana-vs\n  namespace: istio-system\nspec:\n  hosts:\n  - \"grafana.${INGRESS_DOMAIN}\"\n  gateways:\n  - grafana-gateway\n  http:\n  - route:\n    - destination:\n        host: grafana\n        port:\n          number: 3000\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: grafana\n  namespace: istio-system\nspec:\n  host: grafana\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Dashboard\nDESCRIPTION: Command to install the Kubernetes Dashboard UI for cluster visualization\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving CIDR Ranges in Azure Kubernetes Service with Kubenet\nDESCRIPTION: This command retrieves the service CIDR and pod CIDR from an AKS cluster using Kubenet networking. These values are used to configure Istio's includeIPRanges parameter for direct access to external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group \"${RESOURCE_GROUP}\" --name \"${CLUSTER}\" | grep Cidr\n```\n\n----------------------------------------\n\nTITLE: JWT Requirement Policy for Admin Access\nDESCRIPTION: Policy that denies access to /admin path for requests without valid JWT principals.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: enable-jwt-for-admin\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        paths: [\"/admin\"]\n    from:\n    - source:\n        notRequestPrincipals: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status\nDESCRIPTION: Command to list pods and verify the deployment status including Istio sidecars\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Verifying Mutual TLS Usage\nDESCRIPTION: Checks for the presence of the X-Forwarded-Client-Cert header to confirm mutual TLS usage between services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl -s http://httpbin.foo:8000/headers -s | jq '.headers[\"X-Forwarded-Client-Cert\"][0]' | sed 's/Hash=[a-z0-9]*;/Hash=<redacted>;/'\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.legacy:8000/headers -s | grep X-Forwarded-Client-Cert\n```\n\n----------------------------------------\n\nTITLE: Creating k3d Cluster with Traefik Disabled\nDESCRIPTION: Command to create a k3d cluster with disabled Traefik to prevent conflicts with Istio ingress gateways.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ k3d cluster create --api-port 6550 -p '9080:80@loadbalancer' -p '9443:443@loadbalancer' --agents 2 --k3s-arg '--disable=traefik@server:*'\n```\n\n----------------------------------------\n\nTITLE: Viewing HTTPRoute Configuration with Gateway API\nDESCRIPTION: This command displays the details of the HTTPRoute resource for the reviews service, showing how traffic is being routed to reviews-v1 service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get httproute reviews -o yaml\n```\n\n----------------------------------------\n\nTITLE: Defining a WasmPlugin Resource in YAML\nDESCRIPTION: This YAML snippet demonstrates how to use the new WasmPlugin Custom Resource Definition (CRD) to deploy a Wasm module to Istio workloads. It specifies the selector, injection phase, priority, plugin configuration, and the URL for the Wasm module.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/wasm-api-alpha/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: your-filter\nspec:\n  selector:\n    matchLabels:\n      app: server\n  phase: AUTHN\n  priority: 10\n  pluginConfig:\n    someSetting: true\n    someOtherSetting: false\n    youNameIt:\n    - first\n    - second\n  url: docker.io/your-org/your-filter:1.0.0\n```\n\n----------------------------------------\n\nTITLE: Creating AuthorizationPolicy for Same-Pod OPA Integration\nDESCRIPTION: Creates an Istio AuthorizationPolicy that enables external authorization via OPA for all paths except /ip on the httpbin-with-opa service. Uses the CUSTOM action to delegate authorization to OPA.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: httpbin-opa\nspec:\n  selector:\n    matchLabels:\n      app: httpbin-with-opa\n  action: CUSTOM\n  provider:\n    name: \"opa.local\"\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/ip\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating User-Based Routing with Gateway API HTTPRoute\nDESCRIPTION: This command creates an HTTPRoute resource that routes traffic to reviews-v2 service for requests with the 'end-user: jason' header, while routing all other traffic to reviews-v1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - matches:\n    - headers:\n      - name: end-user\n        value: jason\n    backendRefs:\n    - name: reviews-v2\n      port: 9080\n  - backendRefs:\n    - name: reviews-v1\n      port: 9080\nEOF\n```\n\n----------------------------------------\n\nTITLE: Inspecting Envoy Logs in Kubernetes\nDESCRIPTION: Command to view Istio proxy logs for debugging request rejections in Kubernetes pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs PODNAME -c istio-proxy -n NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Multiple CLI Commands with Output\nDESCRIPTION: Shows how to format multiple CLI commands with their output in a single code block.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ echo \"Hello\" >file.txt\n$ cat file.txt\nHello\n```\n\n----------------------------------------\n\nTITLE: Configuring Client-Side mTLS with DestinationRule in Istio\nDESCRIPTION: Creates a DestinationRule to enable client-side mutual TLS for gRPC services using Istio's ISTIO_MUTUAL mode, which configures the client to use certificates managed by Istio for secure communications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f -\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: echo-mtls\n  namespace: echo-grpc\nspec:\n  host: echo.echo-grpc.svc.cluster.local\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret for cluster1 in cluster2\nDESCRIPTION: Creates a remote secret in cluster2 to access cluster1's API server, enabling endpoint discovery.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl create-remote-secret \\\n  --context=\"${CTX_CLUSTER1}\" \\\n  --name=cluster1 | \\\n  kubectl apply -f - --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Opening Prometheus Dashboard in Istio\nDESCRIPTION: This command uses istioctl to open the Prometheus dashboard. It provides a web-based interface for querying Istio metrics.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard prometheus\n```\n\n----------------------------------------\n\nTITLE: Running Istio Bug Report Command for Collecting Cluster State\nDESCRIPTION: This command generates a compressed archive containing relevant state information from your Kubernetes cluster to help with debugging Istio issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl bug-report\n```\n\n----------------------------------------\n\nTITLE: Querying Total Request Rate by Destination Service in Prometheus\nDESCRIPTION: This query calculates the total rate of requests averaged over the past minute, grouped by destination service name and namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/observability/index.md#2025-04-08_snippet_4\n\nLANGUAGE: plain\nCODE:\n```\nsum(irate(istio_requests_total{reporter=\"source\"}[1m]))\nby (\n    destination_canonical_service,\n    destination_workload_namespace\n)\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample Application with Automatic Sidecar Injection in Istio\nDESCRIPTION: Deploys the curl sample application that will be used as a test source for external calls, using automatic sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Curl Service\nDESCRIPTION: Command to remove the curl service deployment used for testing external access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Accessing Jaeger Dashboard with Port Forwarding\nDESCRIPTION: This command uses istioctl to set up port forwarding to the Jaeger dashboard. This provides temporary access to the Jaeger UI for viewing traces without needing to configure a gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/jaeger/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard jaeger\n```\n\n----------------------------------------\n\nTITLE: Applying DestinationRule for Locality Failover in Istio\nDESCRIPTION: This YAML configuration defines a DestinationRule that sets up outlier detection, failover policy between regions, and connection pool settings for the HelloWorld service. It's crucial for enabling and controlling locality failover behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/failover/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: helloworld\nspec:\n  host: helloworld.sample.svc.cluster.local\n  trafficPolicy:\n    connectionPool:\n      http:\n        maxRequestsPerConnection: 1\n    loadBalancer:\n      simple: ROUND_ROBIN\n      localityLbSetting:\n        enabled: true\n        failover:\n          - from: region1\n            to: region2\n    outlierDetection:\n      consecutive5xxErrors: 1\n      interval: 1s\n      baseEjectionTime: 1m\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Controller in Kubernetes\nDESCRIPTION: Commands to install the alpha Istio controller and a default Istio configuration using kubectl. This allows for experimentation with the controller-based operator functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f https://<repo URL>/operator.yaml\n$ kubectl apply -f https://<repo URL>/default-cr.yaml\n```\n\n----------------------------------------\n\nTITLE: Querying Istio Sidecar Injector ConfigMap in Kubernetes\nDESCRIPTION: Retrieves the configuration for sidecar injection from the istio-sidecar-injector ConfigMap in the istio-system namespace. This config defines the init and proxy containers that will be injected.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system get configmap istio-sidecar-injector -o=jsonpath='{.data.config}'\n```\n\nLANGUAGE: yaml\nCODE:\n```\npolicy: enabled\ntemplate: |-\n  initContainers:\n  - name: istio-init\n    image: docker.io/istio/proxy_init:1.0.2\n    args:\n    - \"-p\"\n    - [[ .MeshConfig.ProxyListenPort ]]\n    - \"-u\"\n    - 1337\n    .....\n    imagePullPolicy: IfNotPresent\n    securityContext:\n      capabilities:\n        add:\n        - NET_ADMIN\n    restartPolicy: Always\n\n  containers:\n  - name: istio-proxy\n    image: [[ if (isset .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\") -]]\n    \"[[ index .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\" ]]\"\n    [[ else -]]\n    docker.io/istio/proxyv2:1.0.2\n    [[ end -]]\n    args:\n    - proxy\n    - sidecar\n    .....\n    env:\n    .....\n    - name: ISTIO_META_INTERCEPTION_MODE\n      value: [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String ]]\n    imagePullPolicy: IfNotPresent\n    securityContext:\n      readOnlyRootFilesystem: true\n      [[ if eq (or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String) \"TPROXY\" -]]\n      capabilities:\n        add:\n        - NET_ADMIN\n    restartPolicy: Always\n    .....\n```\n\n----------------------------------------\n\nTITLE: Exporting Kubernetes Resources for Troubleshooting\nDESCRIPTION: This command exports all pods, services, deployments, and endpoints across all namespaces to help with debugging.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods,services,deployments,endpoints --all-namespaces -o yaml > k8s_resources.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing Prometheus metrics for mTLS validation in Istio\nDESCRIPTION: This snippet shows an example of Prometheus metrics that can be used to validate mTLS, including connection security policy and identity information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/verify-mtls-enabled/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\nistio_tcp_connections_opened_total{\n  app=\"ztunnel\",\n  connection_security_policy=\"mutual_tls\",\n  destination_principal=\"spiffe://cluster.local/ns/default/sa/bookinfo-details\",\n  destination_service=\"details.default.svc.cluster.local\",\n  reporter=\"source\",\n  request_protocol=\"tcp\",\n  response_flags=\"-\",\n  source_app=\"curl\",\n  source_principal=\"spiffe://cluster.local/ns/default/sa/curl\",source_workload_namespace=\"default\",\n  ...}\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace\nDESCRIPTION: Removes the istio-system namespace after uninstalling Istio components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Retrieving and Examining Ratings Virtual Service Configuration\nDESCRIPTION: Command to view the configuration of the ratings virtual service with delay fault injection, showing the 7-second delay that applies to user 'jason'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/fault-injection/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get virtualservice ratings -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\n...\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      delay:\n        fixedDelay: 7s\n        percentage:\n          value: 100\n    match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Querying Istio Sidecar Injector ConfigMap in Kubernetes\nDESCRIPTION: Retrieves the configuration for sidecar injection from the istio-sidecar-injector ConfigMap in the istio-system namespace. This config defines the init and proxy containers that will be injected.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system get configmap istio-sidecar-injector -o=jsonpath='{.data.config}'\n```\n\nLANGUAGE: yaml\nCODE:\n```\npolicy: enabled\ntemplate: |-\n  initContainers:\n  - name: istio-init\n    image: docker.io/istio/proxy_init:1.0.2\n    args:\n    - \"-p\"\n    - [[ .MeshConfig.ProxyListenPort ]]\n    - \"-u\"\n    - 1337\n    .....\n    imagePullPolicy: IfNotPresent\n    securityContext:\n      capabilities:\n        add:\n        - NET_ADMIN\n    restartPolicy: Always\n\n  containers:\n  - name: istio-proxy\n    image: [[ if (isset .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\") -]]\n    \"[[ index .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\" ]]\"\n    [[ else -]]\n    docker.io/istio/proxyv2:1.0.2\n    [[ end -]]\n    args:\n    - proxy\n    - sidecar\n    .....\n    env:\n    .....\n    - name: ISTIO_META_INTERCEPTION_MODE\n      value: [[ or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String ]]\n    imagePullPolicy: IfNotPresent\n    securityContext:\n      readOnlyRootFilesystem: true\n      [[ if eq (or (index .ObjectMeta.Annotations \"sidecar.istio.io/interceptionMode\") .ProxyConfig.InterceptionMode.String) \"TPROXY\" -]]\n      capabilities:\n        add:\n        - NET_ADMIN\n    restartPolicy: Always\n    .....\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Canary Control Plane\nDESCRIPTION: This command uninstalls a canary revision of the Istio control plane during a rollback scenario. The -y flag automatically confirms the uninstallation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --revision=canary -y\n```\n\n----------------------------------------\n\nTITLE: Retrieving AKS Cluster Credentials in Azure CLI\nDESCRIPTION: This command fetches the kubeconfig credentials for the newly created AKS cluster. It requires replacing 'myResourceGroup' and 'myAKSCluster' with the names used in the previous step.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/azure/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ az aks get-credentials --resource-group myResourceGroup --name myAKSCluster\n```\n\n----------------------------------------\n\nTITLE: Sending Traffic to the Bookinfo Sample Application (Bash)\nDESCRIPTION: Bash command to generate traffic to the Bookinfo productpage through the gateway URL for testing metric collection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"http://$GATEWAY_URL/productpage\"\n```\n\n----------------------------------------\n\nTITLE: Creating GKE Cluster for Istio\nDESCRIPTION: Creates a new GKE cluster with required specifications for Istio installation. Sets up a cluster with 4 nodes using n1-standard-2 machine type in specified zone.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gke/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport PROJECT_ID=`gcloud config get-value project` && \\\nexport M_TYPE=n1-standard-2 && \\\nexport ZONE=us-west2-a && \\\nexport CLUSTER_NAME=${PROJECT_ID}-${RANDOM} && \\\ngcloud services enable container.googleapis.com && \\\ngcloud container clusters create $CLUSTER_NAME \\\n--cluster-version latest \\\n--machine-type=$M_TYPE \\\n--num-nodes 4 \\\n--zone $ZONE \\\n--project $PROJECT_ID\n```\n\n----------------------------------------\n\nTITLE: Mutual TLS Traffic Policy Configuration\nDESCRIPTION: YAML configuration for enabling mutual TLS in Istio DestinationRule to prevent 503 errors.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntrafficPolicy:\n  tls:\n    mode: ISTIO_MUTUAL\n```\n\n----------------------------------------\n\nTITLE: Defining TCP ServiceEntry for MongoDB in Istio\nDESCRIPTION: Creates a ServiceEntry resource to enable TCP access to an external MongoDB instance. Configures static routing with specified IP and port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: mongo\nspec:\n  hosts:\n  - my-mongo.tcp.svc\n  addresses:\n  - $MONGODB_IP/32\n  ports:\n  - number: $MONGODB_PORT\n    name: tcp\n    protocol: TCP\n  location: MESH_EXTERNAL\n  resolution: STATIC\n  endpoints:\n  - address: $MONGODB_IP\n```\n\n----------------------------------------\n\nTITLE: Testing dynamic metadata with authorized request\nDESCRIPTION: Makes an authorized request to test the dynamic metadata feature of the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -I httpbin:8000/get -H \"x-force-authorized: true\"\n```\n\n----------------------------------------\n\nTITLE: Starting Dashboard Proxy\nDESCRIPTION: Starts the kubectl proxy to access the Kubernetes Dashboard.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl proxy\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Processes\nDESCRIPTION: This command forcefully terminates all running istioctl processes. It's used as part of the cleanup process after completing the Prometheus querying task.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ killall istioctl\n```\n\n----------------------------------------\n\nTITLE: Deploying MongoDB Service for Bookinfo Application in Kubernetes\nDESCRIPTION: Command to deploy the MongoDB service that will be used by the Bookinfo ratings-v2 service for data persistence.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo-db.yaml@\nservice/mongodb created\ndeployment.apps/mongodb-v1 created\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtual Service Routes for Istio Gateway\nDESCRIPTION: Configuration to create an Istio VirtualService that defines routing rules for traffic entering through the httpbin-gateway. The rules allow traffic for paths /status and /delay to be routed to the httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"httpbin.example.com\"\n  gateways:\n  - httpbin-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /status\n    - uri:\n        prefix: /delay\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\nEOF\n```\n\n----------------------------------------\n\nTITLE: Certificate File Structure Output\nDESCRIPTION: Example output showing the expected certificate files and their permissions in the mounted directory, including cert-chain.pem, key.pem, and root-cert.pem.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxy-cert/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n-rwxr-xr-x    1 root     root          2209 Feb 25 13:06 cert-chain.pem\n-rwxr-xr-x    1 root     root          1679 Feb 25 13:06 key.pem\n-rwxr-xr-x    1 root     root          1054 Feb 25 13:06 root-cert.pem\n```\n\n----------------------------------------\n\nTITLE: Verifying Kiali Service in Kubernetes Cluster\nDESCRIPTION: Command to check if the Kiali service is running in the Istio system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get svc kiali\n```\n\n----------------------------------------\n\nTITLE: Creating Egress Gateway and Route Rules for *.wikipedia.org (Gateway API)\nDESCRIPTION: This snippet creates an egress Gateway for *.wikipedia.org using the Gateway API. It sets up a Gateway, TLSRoutes, and a ServiceEntry to handle traffic to the wildcard domain.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: wikipedia-egress-gateway\n  annotations:\n    networking.istio.io/service-type: ClusterIP\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: tls\n    hostname: \"*.wikipedia.org\"\n    port: 443\n    protocol: TLS\n    tls:\n      mode: Passthrough\n    allowedRoutes:\n      namespaces:\n        from: Same\n---\napiVersion: gateway.networking.k8s.io/v1alpha2\nkind: TLSRoute\nmetadata:\n  name: direct-wikipedia-to-egress-gateway\nspec:\n  parentRefs:\n  - kind: ServiceEntry\n    group: networking.istio.io\n    name: wikipedia\n  rules:\n  - backendRefs:\n    - name: wikipedia-egress-gateway-istio\n      port: 443\n---\napiVersion: gateway.networking.k8s.io/v1alpha2\nkind: TLSRoute\nmetadata:\n  name: forward-wikipedia-from-egress-gateway\nspec:\n  parentRefs:\n  - name: wikipedia-egress-gateway\n  hostnames:\n  - \"*.wikipedia.org\"\n  rules:\n  - backendRefs:\n    - kind: Hostname\n      group: networking.istio.io\n      name: www.wikipedia.org\n      port: 443\n---\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: wikipedia\nspec:\n  hosts:\n  - \"*.wikipedia.org\"\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Triggering Failover by Draining Envoy Sidecar in Istio\nDESCRIPTION: This Bash command drains the Envoy sidecar proxy for a HelloWorld pod, triggering a failover to the next locality as per the configured failover rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/failover/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_R1_Z1}\" exec \\\n  \"$(kubectl get pod --context=\"${CTX_R1_Z1}\" -n sample -l app=helloworld \\\n  -l version=region1.zone1 -o jsonpath='{.items[0].metadata.name}')\" \\\n  -n sample -c istio-proxy -- curl -sSL -X POST 127.0.0.1:15000/drain_listeners\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt with Conditional Sitemap for Istio.io\nDESCRIPTION: A robots.txt file that allows all web crawlers to access the entire website and conditionally includes a sitemap reference if the site is not configured as an archive landing page.\nSOURCE: https://github.com/istio/istio.io/blob/master/layouts/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\n{{ if not .Site.Data.args.archive_landing -}}\nSitemap: {{ .Site.BaseURL }}/sitemap.xml\n{{- end -}}\n```\n\n----------------------------------------\n\nTITLE: Installing Istio CNI and Ztunnel Charts on OpenShift\nDESCRIPTION: Commands to install the Istio CNI and Ztunnel components in the kube-system namespace on OpenShift. Both components must be installed in kube-system with the global.platform=openshift setting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-cni istio/cni -n kube-system --set profile=ambient --set global.platform=openshift --wait\n$ helm install ztunnel istio/ztunnel -n kube-system --set profile=ambient --set global.platform=openshift --wait\n```\n\n----------------------------------------\n\nTITLE: Updating Authorization Policy with Group Claims\nDESCRIPTION: Updates the authorization policy to require specific group claim values\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-jwt/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: require-jwt\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n       requestPrincipals: [\"testing@secure.istio.io/testing@secure.istio.io\"]\n    when:\n    - key: request.auth.claims[groups]\n      values: [\"group1\"]\n```\n\n----------------------------------------\n\nTITLE: JSON Output of Configuration Diff in Istio\nDESCRIPTION: This JSON snippet shows a portion of the configuration diff between Envoy and Istiod. It highlights differences in cluster configurations, helping identify specific areas of mismatch.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"cluster\": {\n    \"name\": \"outbound|443||public-cr0bdc785ce3f14722918080a97e1f26be-alb1.kube-system.svc.cluster.local\",\n    \"type\": \"EDS\",\n    \"edsClusterConfig\": {\n      \"edsConfig\": {\n        \"ads\": {}\n      },\n      \"serviceName\": \"outbound|443||public-cr0bdc785ce3f14722918080a97e1f26be-alb1.kube-system.svc.cluster.local\"\n    },\n    \"connectTimeout\": \"1.000s\",\n    \"circuitBreakers\": {\n      \"thresholds\": [{}]\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Analyzing TLS Certificate Details\nDESCRIPTION: Extracts the full certificate content from Istio secrets and uses OpenSSL to display detailed information about the certificate, including the Subject Alternative Name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config secret curl-8f795f47d-4s4t7 -o json | jq '[.dynamicActiveSecrets[] | select(.name == \"default\")][0].secret.tlsCertificate.certificateChain.inlineBytes' -r | base64 -d | openssl x509 -noout -text\n```\n\n----------------------------------------\n\nTITLE: Deploying Waypoint Proxy for reviews Service in Istio\nDESCRIPTION: This snippet shows how to deploy a waypoint proxy for the reviews service using Kubernetes Gateway API, allowing traffic mediation for the reviews service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: Gateway\nmetadata:\n name: reviews\n annotations:\n   istio.io/service-account: bookinfo-reviews\nspec:\n gatewayClassName: istio-mesh\nEOF\n```\n\n----------------------------------------\n\nTITLE: Adding GitHub Links with Hugo Shortcodes in Markdown\nDESCRIPTION: Shows how to reference content or files on GitHub using specific shortcodes for files, directory trees, and source blobs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[liveness]({{</* github_file */>}}/samples/health-check/liveness-command.yaml)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[httpbin]({{</* github_tree */>}}/samples/httpbin)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[RawVM MySQL]({{</* github_blob */>}}/samples/rawvm/README.md)\n```\n\n----------------------------------------\n\nTITLE: Accessing Kiali Dashboard using Istioctl in Bash\nDESCRIPTION: This command opens the Kiali dashboard using istioctl, allowing users to visualize the application and traffic metrics.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/secure-and-visualize/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard kiali\n```\n\n----------------------------------------\n\nTITLE: Applying Delay Fault Injection Rule in Istio\nDESCRIPTION: Command to apply a virtual service that injects a 7-second delay in calls to the ratings service for user 'jason'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/fault-injection/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-ratings-test-delay.yaml@\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Gateway API CRDs using kubectl\nDESCRIPTION: This command checks if the Gateway API CRDs are installed, and if not, applies them from the official GitHub release. It uses kubectl to interact with the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/gateway-api-install-crds.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || \\\n  kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/{{< k8s_gateway_api_version >}}/standard-install.yaml\n```\n\n----------------------------------------\n\nTITLE: Sending Traffic to Istio Mesh\nDESCRIPTION: This command sends a request to the Bookinfo application's product page. It uses the GATEWAY_URL variable, which should be set to the appropriate gateway URL for the Bookinfo example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"http://$GATEWAY_URL/productpage\"\n```\n\n----------------------------------------\n\nTITLE: Adding Links in Istio Documentation Markdown\nDESCRIPTION: Demonstrates different types of links (external, relative, and absolute) and their syntax in Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[Descriptive text for the link](https://mysite/myfile.html)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[This links to a sibling or child page](./sub-dir/child-page.html)\n```\n\nLANGUAGE: markdown\nCODE:\n```\n[This links to a page on the about section](/about/page/)\n```\n\n----------------------------------------\n\nTITLE: Deleting k3d Cluster\nDESCRIPTION: Removes the k3d cluster and associated resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nk3d cluster delete k3s-default\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring httpbin Namespace\nDESCRIPTION: These bash commands create a new namespace called httpbin and enable Istio sidecar injection for it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace httpbin\nnamespace/httpbin created\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label --overwrite namespace httpbin istio-injection=enabled\nnamespace/httpbin labeled\n```\n\n----------------------------------------\n\nTITLE: Configuring v1alpha1 Authentication Policy for httpbin Service\nDESCRIPTION: Defines a Policy resource that enables mTLS in permissive mode and JWT authentication for the httpbin service on port 8000, with specific path-based trigger rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/migrate-alpha-policy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: authentication.istio.io/v1alpha1\nkind: Policy\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  targets:\n  - name: httpbin\n    ports:\n    - number: 8000\n  peers:\n  - mtls:\n      mode: PERMISSIVE\n  origins:\n  - jwt:\n      issuer: testing@example.com\n      jwksUri: https://www.example.com/jwks.json\n      triggerRules:\n      - includedPaths:\n        - prefix: /admin/\n        excludedPaths:\n        - exact: /admin/status\n  principalBinding: USE_ORIGIN\n```\n\n----------------------------------------\n\nTITLE: Viewing x509 Certificate Error in Pod Creation\nDESCRIPTION: Shows a typical error message when pod creation fails due to x509 certificate issues with the sidecar injection webhook. This usually indicates a problem with the caBundle configuration in the webhook.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_8\n\nLANGUAGE: plain\nCODE:\n```\nWarning  FailedCreate  3m (x17 over 8m)  replicaset-controller  Error creating: Internal error occurred: \\\n    failed calling admission webhook \"sidecar-injector.istio.io\": Post https://istiod.istio-system.svc:443/inject: \\\n    x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying \\\n    to verify candidate authority certificate \"Kubernetes.cluster.local\")\n```\n\n----------------------------------------\n\nTITLE: Creating Kind Cluster for Istio\nDESCRIPTION: Command to create a new Kind cluster specifically for Istio testing\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name istio-testing\n```\n\n----------------------------------------\n\nTITLE: Verifying Secrets for Cluster Issuers\nDESCRIPTION: Checks if secrets are created for each cluster issuer using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get secret -n cert-manager -l controller.cert-manager.io/fao=true\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Service for MySQL Database\nDESCRIPTION: YAML configuration to create a Kubernetes service that exposes the MySQL database running on the VM to the mesh. This allows the ratings service to connect to the database using the service name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f - -n vm\napiVersion: v1\nkind: Service\nmetadata:\n  name: mysqldb\n  labels:\n    app: mysqldb\nspec:\n  ports:\n  - port: 3306\n    name: tcp\n  selector:\n    app: mysqldb\nEOF\n```\n\n----------------------------------------\n\nTITLE: Exposing Services Across Clusters\nDESCRIPTION: Applies configuration to expose services through the east-west gateway for cross-cluster communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER1}\" apply -n istio-system -f \\\n    @samples/multicluster/expose-services.yaml@\n```\n\n----------------------------------------\n\nTITLE: Examining VirtualService Configuration\nDESCRIPTION: YAML configuration showing the VirtualService setup for TCP traffic splitting between service versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nspec:\n  tcp:\n  - match:\n    - port: 31400\n    route:\n    - destination:\n        host: tcp-echo\n        port:\n          number: 9000\n        subset: v1\n      weight: 80\n    - destination:\n        host: tcp-echo\n        port:\n          number: 9000\n        subset: v2\n      weight: 20\n```\n\n----------------------------------------\n\nTITLE: Testing unauthenticated request with custom status code\nDESCRIPTION: Tests a request with the x-force-unauthenticated header to trigger a 401 status code with custom body as defined in the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-unauthenticated: true\"\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Ports for Istio Gateway in Bash\nDESCRIPTION: Commands to export the HTTP, HTTPS, and TCP node ports from the Istio ingress gateway service. These environment variables will be used for accessing the ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_PORT=$(kubectl -n \"${INGRESS_NS}\" get service \"${INGRESS_NAME}\" -o jsonpath='{.spec.ports[?(@.name==\"http2\")].nodePort}')\n$ export SECURE_INGRESS_PORT=$(kubectl -n \"${INGRESS_NS}\" get service \"${INGRESS_NAME}\" -o jsonpath='{.spec.ports[?(@.name==\"https\")].nodePort}')\n$ export TCP_INGRESS_PORT=$(kubectl -n \"${INGRESS_NS}\" get service \"${INGRESS_NAME}\" -o jsonpath='{.spec.ports[?(@.name==\"tcp\")].nodePort}')\n```\n\n----------------------------------------\n\nTITLE: HTTP Headers Output with Proxy Protocol Enabled\nDESCRIPTION: CURL output showing HTTP/2 request headers and TLS handshake details when proxy protocol is enabled. Shows how the actual client IP is preserved in X-Forwarded-For header.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n//////with proxy_protocal enabled in the stack\n*   Trying YY.XXX.141.26...\n* TCP_NODELAY set\n* Connection failed\n* connect to YY.XXX.141.26 port 443 failed: Operation timed out\n*   Trying YY.XXX.205.117...\n* TCP_NODELAY set\n* Connected to a25fa0b4835b.elb.us-west-2.amazonaws.com (XX.YYY.205.117) port 443 (#0)\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n*   CAfile: new_certificates/example.com.crt\n  CApath: none\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS change cipher, Change cipher spec (1):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-CHACHA20-POLY1305\n* ALPN, server accepted to use h2\n* Server certificate:\n*  subject: CN=a25fa0b4835b.elb.us-west-2.amazonaws.com; O=httpbin organization\n*  start date: Oct 29 20:39:12 2020 GMT\n*  expire date: Oct 29 20:39:12 2021 GMT\n*  common name: a25fa0b4835b.elb.us-west-2.amazonaws.com (matched)\n*  issuer: O=example Inc.; CN=example.com\n*  SSL certificate verify ok.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* Using Stream ID: 1 (easy handle 0x7fc6c8810800)\n> GET /headers?show_env=1 HTTP/2\n> Host: a25fa0b4835b.elb.us-west-2.amazonaws.com\n> User-Agent: curl/7.64.1\n> Accept: */*\n>\n* Connection state changed (MAX_CONCURRENT_STREAMS == 2147483647)!\n< HTTP/2 200\n< server: istio-envoy\n< date: Thu, 29 Oct 2020 21:39:46 GMT\n< content-type: application/json\n< content-length: 629\n< access-control-allow-origin: *\n< access-control-allow-credentials: true\n< x-envoy-upstream-service-time: 2\n<\n{\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Content-Length\": \"0\",\n    \"Host\": \"a25fa0b4835b.elb.us-west-2.amazonaws.com\",\n    \"User-Agent\": \"curl/7.64.1\",\n    \"X-B3-Sampled\": \"0\",\n    \"X-B3-Spanid\": \"74f99a1c6fc29975\",\n    \"X-B3-Traceid\": \"85db86fe6aa322a074f99a1c6fc29975\",\n    \"X-Envoy-Attempt-Count\": \"1\",\n    \"X-Envoy-Decorator-Operation\": \"httpbin.default.svc.cluster.local:8000/headers*\",\n    \"X-Envoy-External-Address\": \"XX.110.54.41\",\n    \"X-Forwarded-For\": \"XX.110.54.41\",\n    \"X-Forwarded-Proto\": \"https\",\n    \"X-Request-Id\": \"5c3bc236-0c49-4401-b2fd-2dbfbce506fc\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway and VirtualService Resources\nDESCRIPTION: YAML configuration to create an Istio Gateway and VirtualService for the Bookinfo application. The Gateway defines how traffic enters the mesh, while the VirtualService routes specific URI paths to the productpage service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\nspec:\n  selector:\n    istio: ingressgateway # use Istio default gateway implementation\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - $MY_INGRESS_GATEWAY_HOST\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: bookinfo\nspec:\n  hosts:\n  - $MY_INGRESS_GATEWAY_HOST\n  gateways:\n  - bookinfo-gateway.$NAMESPACE.svc.cluster.local\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    - uri:\n        prefix: /static\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\nEOF\n```\n\n----------------------------------------\n\nTITLE: Examining Envoy Proxy-level Metrics in JSON Format\nDESCRIPTION: Example of Envoy proxy-level metrics that show internal statistics about upstream requests, SSL connections, and load balancing. These metrics provide detailed monitoring at the granularity of Envoy resources such as listeners and clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/observability/index.md#2025-04-08_snippet_0\n\nLANGUAGE: json\nCODE:\n```\nenvoy_cluster_internal_upstream_rq{response_code_class=\"2xx\",cluster_name=\"xds-grpc\"} 7163\n\nenvoy_cluster_upstream_rq_completed{cluster_name=\"xds-grpc\"} 7164\n\nenvoy_cluster_ssl_connection_error{cluster_name=\"xds-grpc\"} 0\n\nenvoy_cluster_lb_subsets_removed{cluster_name=\"xds-grpc\"} 0\n\nenvoy_cluster_internal_upstream_rq{response_code=\"503\",cluster_name=\"xds-grpc\"} 1\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Gateway on External Cluster\nDESCRIPTION: Installs the previously created gateway configuration in the istio-system namespace of the external cluster using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f controlplane-gateway.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging in Istiod\nDESCRIPTION: This command enables debug logging for authorization in Istiod, which helps in troubleshooting policy issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl admin log --level authorization:debug\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for 2018 Blog Posts Archive Page\nDESCRIPTION: YAML front matter configuration that defines metadata for the 2018 blog posts archive page. It sets the page title, description, weight for page ordering, and specifies that posts should be listed by publication date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 2018 Posts\ndescription: Blog posts for 2018.\nweight: 10\nlist_by_publishdate: true\n---\n```\n\n----------------------------------------\n\nTITLE: AWS EKS Load Balancer Configuration - Gateway API\nDESCRIPTION: Gateway API configuration for AWS EKS demonstrating Network Load Balancer setup with annotations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\nspec:\n  gatewayClassName: istio\n  ...\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio with Custom Cert-Signer Configuration\nDESCRIPTION: Installs Istio using istioctl with a custom configuration that specifies the default cert-signer and includes CA certificates for different issuers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    pilot:\n      env:\n        EXTERNAL_CA: ISTIOD_RA_KUBERNETES_API\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        ISTIO_META_CERT_SIGNER: istio-system\n    caCertificates:\n    - pem: |\n$ISTIOCA\n      certSigners:\n      - clusterissuers.cert-manager.io/istio-system\n    - pem: |\n$FOOCA\n      certSigners:\n      - clusterissuers.cert-manager.io/foo\n    - pem: |\n$BARCA\n      certSigners:\n      - clusterissuers.cert-manager.io/bar\n  components:\n    pilot:\n      k8s:\n        env:\n        - name: CERT_SIGNER_DOMAIN\n          value: clusterissuers.cert-manager.io\n        - name: PILOT_CERT_PROVIDER\n          value: k8s.io/clusterissuers.cert-manager.io/istio-system\n        overlays:\n          - kind: ClusterRole\n            name: istiod-clusterrole-istio-system\n            patches:\n              - path: rules[-1]\n                value: |\n                  apiGroups:\n                  - certificates.k8s.io\n                  resourceNames:\n                  - clusterissuers.cert-manager.io/foo\n                  - clusterissuers.cert-manager.io/bar\n                  - clusterissuers.cert-manager.io/istio-system\n                  resources:\n                  - signers\n                  verbs:\n                  - approve\n```\n\n----------------------------------------\n\nTITLE: Applying Mutual TLS Destination Rules in Istio\nDESCRIPTION: This command applies destination rules that configure clients to use mutual TLS, resolving potential conflicts with strict mTLS policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/destination-rule-all-mtls.yaml@\n```\n\n----------------------------------------\n\nTITLE: Defining JWT Configuration for Backend API Protection\nDESCRIPTION: YAML configuration for creating a JwtConfig resource that defines a JWT provider for backend application and API protection. This specifies the JWKS URL for token validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/app-identity-and-access-adapter/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.cloud.ibm.com/v1\"\nkind: JwtConfig\nmetadata:\n    name: my-jwt-config\n    namespace: sample-namespace\nspec:\n    jwksUrl: <the-jwks-url>\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService for Wikipedia Egress Traffic\nDESCRIPTION: Defines a VirtualService to route TLS traffic matching *.wikipedia.org SNI to the egress gateway. Includes TCP routing for gateway reference.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-wildcard-through-egress-gateway\n  namespace: istio-system\nspec:\n  hosts:\n    - \"*.wikipedia.org\"\n  gateways:\n  - mesh\n  - egressgateway\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: 443\n      sniHosts:\n        - \"*.wikipedia.org\"\n    route:\n    - destination:\n        host: egressgateway.istio-egress.svc.cluster.local\n        subset: wildcard\n  tcp:\n  - match:\n    - gateways:\n      - egressgateway\n      port: 8443\n    route:\n    - destination:\n        host: \"dummy.local\"\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Sample URL Modification for Quick Edit\nDESCRIPTION: Example showing how to modify an Istio documentation URL to access the preliminary editing interface\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/github/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://istio.io/about -> https://preliminary.istio.io/about\n```\n\n----------------------------------------\n\nTITLE: Checking Dashboard Deployment Status\nDESCRIPTION: Command to verify the status of Dashboard pods in the kubernetes-dashboard namespace\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -n kubernetes-dashboard\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Access with TLS Origination Enabled in Istio\nDESCRIPTION: Verifies that direct HTTPS requests still work when TLS origination is configured. This ensures that applications already using HTTPS continue to function normally alongside the TLS origination for HTTP requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${SOURCE_POD}\" -c curl -- curl -sSL -o /dev/null -D - https://edition.cnn.com/politics\nHTTP/2 200\n...\n```\n\n----------------------------------------\n\nTITLE: Opting Out of Trust Domain Validation in Istio 1.3\nDESCRIPTION: Helm flag to opt-out of trust domain validation when upgrading to Istio 1.3. This sets the PILOT_SKIP_VALIDATE_TRUST_DOMAIN environment variable for the pilot component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.3.x/announcing-1.3/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n--set pilot.env.PILOT_SKIP_VALIDATE_TRUST_DOMAIN=true\n```\n\n----------------------------------------\n\nTITLE: Querying Request Rate to Productpage Service in Prometheus\nDESCRIPTION: This Prometheus query calculates the rate of successful requests (HTTP 200) to the productpage service over the past 5 minutes. It demonstrates the use of the rate function and multiple filters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_6\n\nLANGUAGE: plain\nCODE:\n```\nrate(istio_requests_total{destination_service=~\"productpage.*\", response_code=\"200\"}[5m])\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Ambient Profile\nDESCRIPTION: Command to install Istio using the ambient profile configuration. Uses istioctl to deploy with skip-confirmation flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/istioctl/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --set profile=ambient --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Environment\nDESCRIPTION: Creates namespaces and deploys httpbin and curl services with and without Istio sidecar injection for testing authentication policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n foo\n$ kubectl create ns bar\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n bar\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n bar\n$ kubectl create ns legacy\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n legacy\n$ kubectl apply -f @samples/curl/curl.yaml@ -n legacy\n```\n\n----------------------------------------\n\nTITLE: Defining Istio Concepts Documentation Page Front Matter in Markdown\nDESCRIPTION: Front matter for an Istio documentation page that introduces users to Istio concepts. The page has a title, description, weight for ordering in the documentation, and a test parameter for table of contents.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Concepts\ndescription: Learn about the different parts of the Istio system and the abstractions it uses.\nweight: 10\ntest: table-of-contents\n---\n```\n\n----------------------------------------\n\nTITLE: Verifying Multicluster Istio Connectivity with istioctl\nDESCRIPTION: Use istioctl to check if Istiod can communicate with the Kubernetes control plane of remote clusters. The output should show all clusters as 'synced'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/verify/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl remote-clusters --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Proxy Stats Matcher in Istio\nDESCRIPTION: This YAML snippet configures the ProxyStatsMatcher in the IstioOperator custom resource to enable additional Envoy statistics globally.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/telemetry/envoy-stats/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyStatsMatcher:\n        inclusionRegexps:\n          - \".*outlier_detection.*\"\n          - \".*upstream_rq_retry.*\"\n          - \".*upstream_cx_.*\"\n        inclusionSuffixes:\n          - \"upstream_rq_timeout\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on Remote Cluster (Bash)\nDESCRIPTION: Applies the IstioOperator configuration to install Istio on the remote cluster (cluster2).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --context=\"${CTX_CLUSTER2}\" -f cluster2.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Sail Operator Pod Status\nDESCRIPTION: This command retrieves the status of pods in the sail-operator namespace to verify that the operator is running.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n sail-operator\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin-v1 Service in Kubernetes\nDESCRIPTION: Kubernetes deployment configuration for version 1 of the httpbin service with access logging enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: httpbin-v1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: httpbin\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: httpbin\n        version: v1\n    spec:\n      containers:\n      - image: docker.io/kennethreitz/httpbin\n        imagePullPolicy: IfNotPresent\n        name: httpbin\n        command: [\"gunicorn\", \"--access-logfile\", \"-\", \"-b\", \"0.0.0.0:80\", \"httpbin:app\"]\n        ports:\n        - containerPort: 80\n```\n\n----------------------------------------\n\nTITLE: Resulting Istio Sidecar Resource Configuration in YAML\nDESCRIPTION: This YAML snippet demonstrates the resulting resource configuration for the Istio sidecar proxy after applying the annotations from the previous example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  containers:\n  - name: istio-proxy\n    resources:\n      limits:\n        memory: 5Gi\n      requests:\n        cpu: 200m\n        memory: 5Gi\n      securityContext:\n        allowPrivilegeEscalation: false\n```\n\n----------------------------------------\n\nTITLE: Cleanup Port Forwarding\nDESCRIPTION: Command to clean up any kubectl port-forward processes that may be running.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/using-istio-dashboard/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ killall kubectl\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Custom Configuration File\nDESCRIPTION: Command to install Istio using a custom configuration file specified with the -f flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f samples/operator/pilot-k8s.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Egress Gateway using IstioOperator in Istio\nDESCRIPTION: This snippet creates an IstioOperator resource to install an egress gateway in the external-istiod namespace. It configures the gateway with the gateway injection template for proper functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > istio-egressgateway.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: egress-install\nspec:\n  profile: empty\n  components:\n    egressGateways:\n    - namespace: external-istiod\n      name: istio-egressgateway\n      enabled: true\n  values:\n    gateways:\n      istio-egressgateway:\n        injectionTemplate: gateway\nEOF\nistioctl install -f istio-egressgateway.yaml --set values.global.istioNamespace=external-istiod --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample App in Kubernetes with Istio\nDESCRIPTION: Commands to deploy the curl sample app in a Kubernetes cluster with Istio, using either automatic or manual sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample httpbin Application\nDESCRIPTION: Creates a namespace for the sample application, enables Istio injection, and deploys the httpbin application for testing HTTP requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns my-app\n$ kubectl label namespace my-app istio-injection=enabled\n$ kubectl apply -f {{< github_file >}}/samples/httpbin/httpbin.yaml -n my-app\n```\n\n----------------------------------------\n\nTITLE: Creating External HTTPS Ingress with Istio Gateway (YAML)\nDESCRIPTION: This Gateway configuration enables HTTPS traffic from ext-host.example.com to enter the mesh on port 443. It specifies a TLS configuration in SIMPLE mode and references a certificate named ext-host-cert.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: ext-host-gwy\nspec:\n  selector:\n    app: my-gateway-controller\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - ext-host.example.com\n    tls:\n      mode: SIMPLE\n      credentialName: ext-host-cert\n```\n\n----------------------------------------\n\nTITLE: Creating Request Authentication for JWT Validation\nDESCRIPTION: Applies a RequestAuthentication resource to enable JWT validation on the Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/jwt-route/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: RequestAuthentication\nmetadata:\n  name: ingress-jwt\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  jwtRules:\n  - issuer: \"testing@secure.istio.io\"\n    jwksUri: \"{{< github_file >}}/security/tools/jwt/samples/jwks.json\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway Topology with Pod Annotation\nDESCRIPTION: This YAML snippet demonstrates how to configure gateway topology settings for a specific gateway using a pod annotation. It sets the numTrustedProxies and forwardClientCertDetails values in the proxy.istio.io/config annotation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n...\n  metadata:\n    annotations:\n      \"proxy.istio.io/config\": '{\"gatewayTopology\" : { \"numTrustedProxies\": <VALUE>, \"forwardClientCertDetails\": <ENUM_VALUE> } }'\n```\n\n----------------------------------------\n\nTITLE: Configuring JWT Request Authentication Policy\nDESCRIPTION: Creates a RequestAuthentication policy that accepts JWTs issued by testing@secure.istio.io\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-jwt/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: RequestAuthentication\nmetadata:\n  name: \"jwt-example\"\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  jwtRules:\n  - issuer: \"testing@secure.istio.io\"\n    jwksUri: \"{{< github_file >}}/security/tools/jwt/samples/jwks.json\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Egress Gateway via Command Line\nDESCRIPTION: Alternative command line approach to enable the Istio egress gateway using istioctl install flags.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install <flags-you-used-to-install-Istio> \\\n                   --set \"components.egressGateways[0].name=istio-egressgateway\" \\\n                   --set \"components.egressGateways[0].enabled=true\"\n```\n\n----------------------------------------\n\nTITLE: Creating IstioOperator Config for Remote Cluster\nDESCRIPTION: Creates an IstioOperator configuration file for installing Istio on cluster2 as a remote cluster, specifying the connection to the primary cluster's control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > cluster2.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: remote\n  values:\n    istiodRemote:\n      injectionPath: /inject/cluster/cluster2/net/network1\n    global:\n      remotePilotAddress: ${DISCOVERY_ADDRESS}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio CNI Node Agent for Ambient Mode\nDESCRIPTION: Command to install the Istio CNI node agent with the ambient profile. This component detects pods belonging to the ambient mesh and configures traffic redirection between pods and the ztunnel node proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-cni istio/cni -n istio-system --set profile=ambient --wait\n```\n\n----------------------------------------\n\nTITLE: Setting Global Proxy Configuration to Hold Application Until Proxy Starts in Istio\nDESCRIPTION: This YAML configuration enables the holdApplicationUntilProxyStarts feature globally across the Istio mesh. When set to true, this option forces application containers to wait until the istio-proxy sidecar is ready, preventing network issues during application startup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nvalues.global.proxy.holdApplicationUntilProxyStarts: true\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kubernetes Gateway API Version in Plain Text\nDESCRIPTION: This snippet uses a custom shortcode to display the current version of the Kubernetes Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/boilerplates/args.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=gateway_api_version >}}\n{{< k8s_gateway_api_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Egress Gateway with Gateway API\nDESCRIPTION: Configures egress gateway using Gateway API resources including Gateway and TLSRoute definitions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: cnn-egress-gateway\n  annotations:\n    networking.istio.io/service-type: ClusterIP\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: tls\n    hostname: edition.cnn.com\n    port: 443\n    protocol: TLS\n    tls:\n      mode: Passthrough\n    allowedRoutes:\n      namespaces:\n        from: Same\n---\napiVersion: gateway.networking.k8s.io/v1alpha2\nkind: TLSRoute\nmetadata:\n  name: direct-cnn-to-egress-gateway\nspec:\n  parentRefs:\n  - kind: ServiceEntry\n    group: networking.istio.io\n    name: cnn\n  rules:\n  - backendRefs:\n    - name: cnn-egress-gateway-istio\n      port: 443\n---\napiVersion: gateway.networking.k8s.io/v1alpha2\nkind: TLSRoute\nmetadata:\n  name: forward-cnn-from-egress-gateway\nspec:\n  parentRefs:\n  - name: cnn-egress-gateway\n  hostnames:\n  - edition.cnn.com\n  rules:\n  - backendRefs:\n    - kind: Hostname\n      group: networking.istio.io\n      name: edition.cnn.com\n      port: 443\n```\n\n----------------------------------------\n\nTITLE: Testing Cross-Cluster Load Balancing in Istio\nDESCRIPTION: This snippet demonstrates how to test cross-cluster load balancing by sending multiple requests to a service and checking the responses. It helps identify if traffic is being distributed across clusters as expected.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfor i in $(seq 10); do kubectl --context=$CTX_CLUSTER1 -n sample exec curl-dd98b5f48-djwdw -c curl -- curl -s helloworld:5000/hello; done\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with DNS Proxying Configuration\nDESCRIPTION: Configures Istio installation with DNS capture enabled and discovery selectors to restrict mesh to namespaces with istio-injection enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        # Enable basic DNS proxying\n        ISTIO_META_DNS_CAPTURE: \"true\"\n    # discoverySelectors configuration below is just used for simulating the external service TCP scenario,\n    # so that we do not have to use an external site for testing.\n    discoverySelectors:\n    - matchLabels:\n        istio-injection: enabled\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deleting Kind Cluster\nDESCRIPTION: Command to remove the Kind cluster and clean up resources\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkind delete cluster --name istio-testing\n```\n\n----------------------------------------\n\nTITLE: Mirroring Istio Docker Images to a Private Registry\nDESCRIPTION: A bash script that pulls Istio images from Docker Hub and pushes them to a custom registry. The script handles multiple image types, versions, and variants to ensure all required Istio components are mirrored to avoid Docker Hub rate limiting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/docker-rate-limit/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ SOURCE_HUB=istio\n$ DEST_HUB=my-registry # Replace this with the destination hub\n$ IMAGES=( install-cni operator pilot proxyv2 ) # Images to mirror.\n$ VERSIONS=( 1.7.5 1.8.0 ) # Versions to copy\n$ VARIANTS=( \"\" \"-distroless\" ) # Variants to copy\n$ for image in $IMAGES; do\n$ for version in $VERSIONS; do\n$ for variant in $VARIANTS; do\n$   name=$image:$version$variant\n$   docker pull $SOURCE_HUB/$name\n$   docker tag $SOURCE_HUB/$name $DEST_HUB/$name\n$   docker push $DEST_HUB/$name\n$   docker rmi $SOURCE_HUB/$name\n$   docker rmi $DEST_HUB/$name\n$ done\n$ done\n$ done\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for MongoDB in Istio\nDESCRIPTION: This YAML snippet defines a ServiceEntry for the MongoDB service, specifying the host, ports, and protocol. It allows the mesh to send traffic to the external MongoDB instance.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: mongo\nspec:\n  hosts:\n  - $MONGODB_HOST\n  ports:\n  - number: $MONGODB_PORT\n    name: tls\n    protocol: TLS\n  - number: 443\n    name: tls-port-for-egress-gateway\n    protocol: TLS\n  resolution: DNS\n  location: MESH_EXTERNAL\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host IP for Docker For Desktop\nDESCRIPTION: Command to set the ingress host IP to localhost (127.0.0.1) for Docker For Desktop environments, which exposes node ports on the local machine.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=127.0.0.1\n```\n\n----------------------------------------\n\nTITLE: Creating Allow-List Authorization Policy with ipBlocks (Istio APIs)\nDESCRIPTION: Creates an authorization policy that allows access only from specified IP addresses using ipBlocks. The policy is applied to the Istio ingress gateway and supports both single IP addresses and CIDR notation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ingress-policy\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      app: istio-ingressgateway\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        ipBlocks: [\"1.2.3.4\", \"5.6.7.0/24\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Failover Rules\nDESCRIPTION: DestinationRule configuration for outlier detection and failover settings\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: DestinationRule\nmetadata:\n  name: mydynamodb\nspec:\n  host: mydb.com\n  trafficPolicy:\n    outlierDetection:\n      consecutive5xxErrors: 1\n      interval: 15s\n      baseEjectionTime: 1m\n```\n\n----------------------------------------\n\nTITLE: Cleaning up HTTP egress gateway with Istio APIs\nDESCRIPTION: Removes the previously created resources for the HTTP egress gateway scenario when using Istio APIs, including the ServiceEntry, Gateway, VirtualService, and DestinationRule.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry cnn\n$ kubectl delete gateway istio-egressgateway\n$ kubectl delete virtualservice direct-cnn-through-egress-gateway\n$ kubectl delete destinationrule egressgateway-for-cnn\n```\n\n----------------------------------------\n\nTITLE: Extracting Gateway Address and Port from Gateway API Resource\nDESCRIPTION: These commands extract the external IP address and HTTP port from the Kubernetes Gateway status and listener configuration, storing them in environment variables for later use.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl get gtw bookinfo-gateway -o jsonpath='{.status.addresses[0].value}')\n$ export INGRESS_PORT=$(kubectl get gtw bookinfo-gateway -o jsonpath='{.spec.listeners[?(@.name==\"http\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Deploying a Test Application\nDESCRIPTION: Command to deploy the httpbin test application that will be exposed through the Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Deploying a Test Application\nDESCRIPTION: Command to deploy the httpbin test application that will be exposed through the Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Creating a sysctl Patch File for Istio Ingress Gateway Customization in YAML\nDESCRIPTION: Defines a Kubernetes patch file that adds a sysctl configuration to the Istio ingress gateway deployment. This patch sets a custom value for the TCP connection timeout in close-wait state.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat > sysctl-ingress-gw-customization.yaml <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: istio-ingress\n  namespace: istio-ingress\nspec:\n  template:\n    spec:\n      securityContext:\n          sysctls:\n          - name: net.netfilter.nf_conntrack_tcp_timeout_close_wait\n            value: \"10\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Service Entry Configuration for Local External Authorizer\nDESCRIPTION: YAML configuration for a ServiceEntry that registers a local external authorizer service with the Istio service mesh, making it accessible to the proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: external-authz-grpc-local\nspec:\n  hosts:\n  - \"external-authz-grpc.local\" # The service name to be used in the extension provider in the mesh config.\n  endpoints:\n  - address: \"127.0.0.1\"\n  ports:\n  - name: grpc\n    number: 9191 # The port number to be used in the extension provider in the mesh config.\n    protocol: GRPC\n  resolution: STATIC\n```\n\n----------------------------------------\n\nTITLE: Extracting Istio Galley Configuration as YAML\nDESCRIPTION: A bash command that retrieves the Istio Galley ConfigMap using kubectl and formats the output as YAML. The command extracts the ValidatingWebhookConfiguration that defines admission control for Istio resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get configmap istio-galley-configuration -o jsonpath='{.data}'\nmap[validatingwebhookconfiguration.yaml:apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-galley\n  namespace: istio-system\n  labels:\n    app: istio-galley\n    chart: galley-1.0.0\n    release: istio\n    heritage: Tiller\nwebhooks:\n  - name: pilot.validation.istio.io\n    clientConfig:\n      service:\n        name: istio-galley\n        namespace: istio-system\n        path: \"/admitpilot\"\n      caBundle: \"\"\n    rules:\n      - operations:\n      (... snip ...)\n```\n\n----------------------------------------\n\nTITLE: Accessing Zipkin Dashboard via Port-Forwarding\nDESCRIPTION: Uses the istioctl command to set up port-forwarding to the Zipkin dashboard deployed in the istio-system namespace. This provides temporary access to the Zipkin UI for viewing trace data.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/zipkin/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard zipkin\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ConfigMap for Squid Proxy\nDESCRIPTION: Creates a Kubernetes ConfigMap to store the Squid proxy configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/http-proxy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap proxy-configmap -n external --from-file=squid.conf=./proxy.conf\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress Gateway\nDESCRIPTION: Gateway resource configuration for the ingress gateway, defining HTTP and HTTPS routes with TLS settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: Gateway\nmetadata:\n  name: my-ingressgateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - \"<my-proxied-service-hostname>\"\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n    tls:\n     httpsRedirect: true\n  - port:\n      number: 443\n      name: https\n      protocol: https\n    hosts:\n    - \"<my-proxied-service-hostname>\"\n    tls:\n      mode: SIMPLE\n      credentialName: <my-secret-name>\n```\n\n----------------------------------------\n\nTITLE: Overriding Istio Component Configuration in Helm\nDESCRIPTION: Examples of how to override default configuration values when installing Istio components using Helm, both for individual components and through the ambient wrapper chart.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/all-in-one/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod --set hub=gcr.io/istio-testing\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-ambient istio/ambient --set istiod.hub=gcr.io/istio-testing\n```\n\n----------------------------------------\n\nTITLE: Waiting for Gateway API Resource to be Ready\nDESCRIPTION: This command waits for the Kubernetes Gateway to be fully programmed, ensuring the gateway proxy is ready to accept traffic before proceeding.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl wait --for=condition=programmed gtw bookinfo-gateway\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Pod Status\nDESCRIPTION: Displays the status of the deployed Bookinfo application pods to verify successful deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\nNAME                            READY   STATUS    RESTARTS   AGE\ndetails-v1-6d86fd9949-q8rrf     1/1     Running   0          10s\nproductpage-v1-c9965499-tjdjx   1/1     Running   0          8s\nratings-v1-7bf577cb77-pq9kg     1/1     Running   0          9s\nreviews-v1-77c65dc5c6-kjvxs     1/1     Running   0          9s\n```\n\n----------------------------------------\n\nTITLE: Configuring WasmPlugin for Waypoint\nDESCRIPTION: YAML configuration for deploying a basic authentication WasmPlugin targeting the waypoint proxy\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/extend-waypoint-wasm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: basic-auth-at-waypoint\nspec:\n  targetRefs:\n    - kind: Gateway\n      group: gateway.networking.k8s.io\n      name: waypoint\n  url: oci://ghcr.io/istio-ecosystem/wasm-extensions/basic_auth:1.12.0\n  phase: AUTHN\n  pluginConfig:\n    basic_auth_rules:\n      - prefix: \"/productpage\"\n        request_methods:\n          - \"GET\"\n          - \"POST\"\n        credentials:\n          - \"ok:test\"\n          - \"YWRtaW4zOmFkbWluMw==\"\n```\n\n----------------------------------------\n\nTITLE: Routing All TCP Traffic to v1 (Gateway API)\nDESCRIPTION: Applies a TCPRoute to route all TCP traffic to the v1 version of tcp-echo microservice using Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/tcp-echo/gateway-api/tcp-echo-all-v1.yaml@ -n istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio with Custom Certificates\nDESCRIPTION: Installs Istio using the demo profile, which will use the custom certificates from the secret.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=demo\n```\n\n----------------------------------------\n\nTITLE: Exposing OpenShift Route for Ingress Gateway\nDESCRIPTION: This command exposes an OpenShift route for the Istio ingress gateway, allowing external traffic to reach the cluster. It operates in the istio-system namespace and exposes the http2 port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/openshift/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ oc -n istio-system expose svc/istio-ingressgateway --port=http2\n```\n\n----------------------------------------\n\nTITLE: Incorrect HTTP Port Configuration for HTTPS Traffic\nDESCRIPTION: YAML configuration showing an incorrect ServiceEntry that declares port 443 as HTTP protocol. This leads to errors when actual HTTPS traffic is sent to this port, as Envoy attempts to parse encrypted traffic as HTTP.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - httpbin.org\n  ports:\n  - number: 443\n    name: http\n    protocol: HTTP\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Inserting Boilerplate with Only a Shortcode in Hugo\nDESCRIPTION: Illustrates the insertion of a boilerplate that consists of only a shortcode. This snippet uses the 'test-2' boilerplate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil_and_lists/index.md#2025-04-08_snippet_2\n\nLANGUAGE: hugo\nCODE:\n```\n{{< boilerplate \"test-2\" >}}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Gateway Resources\nDESCRIPTION: Bash commands to uninstall the Istio ingress gateway and remove its namespace, performing complete cleanup of gateway resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --istioNamespace istio-ingress -y --purge\n$ kubectl delete ns istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for External HTTP Service\nDESCRIPTION: YAML configuration to create a ServiceEntry allowing access to an external HTTP service (httpbin.org).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: httpbin-ext\nspec:\n  hosts:\n  - httpbin.org\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: DNS\n  location: MESH_EXTERNAL\n```\n\n----------------------------------------\n\nTITLE: Exposing Istio Control Plane\nDESCRIPTION: Applies configuration to expose the Istio control plane services for VM access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n istio-system -f @samples/multicluster/expose-istiod.yaml@\n```\n\n----------------------------------------\n\nTITLE: Accessing Undefined URL via Ingress\nDESCRIPTION: Command to access an undefined URL through the ingress gateway, expecting a 404 error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST:$INGRESS_PORT/headers\"\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Gateway and VirtualService\nDESCRIPTION: Gateway and VirtualService configuration for HTTP traffic on port 80 routing to httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  selector:\n    istio: ingressgateway # use Istio default gateway implementation\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"a25fa0b4835b.elb.us-west-2.amazonaws.com\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"a25fa0b4835b.elb.us-west-2.amazonaws.com\"\n  gateways:\n  - httpbin-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /headers\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\n```\n\n----------------------------------------\n\nTITLE: Creating a ServiceAccount for Tutorial Participants in YAML\nDESCRIPTION: Defines a Kubernetes ServiceAccount for each participant in the tutorial namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: ${NAMESPACE}-user\n  namespace: $NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Destination Rules for Bookinfo Microservices\nDESCRIPTION: Command to apply destination rules that define service subsets corresponding to each version of Bookinfo microservices and their load balancing policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/destination-rule-all.yaml@\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Istio 1.21.x Release Page\nDESCRIPTION: YAML configuration block that defines the page metadata and layout settings for the Istio 1.21.x releases documentation page. Specifies the title, description, weight for sorting, layout type, and decorative elements.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.21.x Releases\ndescription: Announcements for the 1.21 release and its associated patch releases.\nweight: 8\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Defining an Istio httpbin Service in YAML\nDESCRIPTION: A Kubernetes Service definition for the httpbin service in the foo namespace, selecting pods with app: httpbin and version: v1 labels. This complements the AuthorizationPolicy example by showing the service that the policy is protecting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  selector:\n    app: httpbin\n    version: v1\n  ports:\n    # omitted\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace for Health Check Example\nDESCRIPTION: Creates and labels a Kubernetes namespace for the health check demonstration with Istio injection enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/app-health-check/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-io-health-rewrite\n$ kubectl label namespace istio-io-health-rewrite istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Kubernetes Resources\nDESCRIPTION: Commands to remove all Kubernetes resources created during the mTLS termination example, including secrets, services, deployments, and namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete secret httpbin-mtls-termination httpbin-mtls-termination-cacert -n test\n$ kubectl delete service httpbin curl -n test\n$ kubectl delete deployment httpbin curl -n test\n$ kubectl delete namespace test\n$ kubectl delete service curl\n$ kubectl delete deployment curl\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin with Manual Sidecar Injection in Istio\nDESCRIPTION: This command manually injects the Istio sidecar into the httpbin application before deployment. It uses istioctl to inject the sidecar and then applies the modified configuration using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/start-httpbin-service.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Namespace Isolation with Ingress Exception Using DENY Policy in Istio YAML\nDESCRIPTION: A DENY policy approach to enforce namespace isolation while allowing ingress gateway access. This denies requests that are neither from the specified namespace nor from the ingress gateway, providing mandatory enforcement.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/security/security-policy-examples/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ns-isolation-except-ingress\n  namespace: foo\nspec:\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notNamespaces: [\"foo\"]\n        notPrincipals: [\"cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account\"]\n```\n\n----------------------------------------\n\nTITLE: Checking Services in the Kubernetes Cluster\nDESCRIPTION: Command to list all services in the default namespace after deploying the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get services\nNAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE\ndetails       ClusterIP   10.0.0.212      <none>        9080/TCP   29s\nkubernetes    ClusterIP   10.0.0.1        <none>        443/TCP    25m\nproductpage   ClusterIP   10.0.0.57       <none>        9080/TCP   28s\nratings       ClusterIP   10.0.0.33       <none>        9080/TCP   29s\nreviews       ClusterIP   10.0.0.28       <none>        9080/TCP   29s\n```\n\n----------------------------------------\n\nTITLE: Creating a ServiceEntry for Auto-allocated Address (Kubernetes Resource)\nDESCRIPTION: This YAML snippet shows how to create a ServiceEntry without specifying an address, allowing Istio to auto-allocate an IP for DNS resolution.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: external-auto\nspec:\n  hosts:\n  - auto.internal\n  ports:\n  - name: http\n    number: 80\n    protocol: HTTP\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Proxy for HBONE in YAML\nDESCRIPTION: Set the 'ISTIO_META_ENABLE_HBONE' metadata to 'true' for sidecar proxies to use HBONE/mTLS signaling when communicating with ambient destinations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    proxy.istio.io/config: |\n      proxyMetadata:\n        ISTIO_META_ENABLE_HBONE: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Specific Istio Control Plane\nDESCRIPTION: Removes a specific Istio control plane by using the same installation options that were used to install it initially.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall <your original installation options>\n```\n\n----------------------------------------\n\nTITLE: Cleanup NGINX mTLS Server Resources\nDESCRIPTION: Commands to remove NGINX server certificates, configurations, and related Kubernetes resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete secret nginx-server-certs nginx-ca-certs -n mesh-external\nkubectl delete configmap nginx-configmap -n mesh-external\nkubectl delete service my-nginx -n mesh-external\nkubectl delete deployment my-nginx -n mesh-external\nkubectl delete namespace mesh-external\n```\n\n----------------------------------------\n\nTITLE: View complete waypoint proxy configuration\nDESCRIPTION: Command to view all Envoy configuration details for the waypoint proxy\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config all deploy/waypoint\n```\n\n----------------------------------------\n\nTITLE: Configuring cluster1 as Primary with IstioOperator YAML\nDESCRIPTION: Creates an IstioOperator configuration file for cluster1, specifying the mesh ID, cluster name, and network.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    global:\n      meshID: mesh1\n      multiCluster:\n        clusterName: cluster1\n      network: network1\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OTLP/HTTP Exporter Configuration\nDESCRIPTION: Configuration to install Istio with OpenTelemetry trace export via HTTP protocol. Includes custom headers and path configuration for the OpenTelemetry Collector.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/opentelemetry/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    extensionProviders:\n    - name: otel-tracing\n      opentelemetry:\n        port: 4318\n        service: opentelemetry-collector.observability.svc.cluster.local\n        http:\n          path: \"/v1/traces\"\n          timeout: 5s\n          headers:\n            - name: \"custom-header\"\n              value: \"custom value\"\n        resource_detectors:\n          environment: {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Rules in robots.txt for Istio Website\nDESCRIPTION: This robots.txt file defines access rules for web crawlers visiting the Istio website. It allows access to most content, disallows crawling of the '/v-0.1' path, and specifies the location of the sitemap.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.6/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\n\nDisallow: /v-0.1\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Gateway API Authorization Policy with IP Blocks\nDESCRIPTION: Implements IP-based access control using Gateway API specifications. This configuration targets a specific Gateway resource and controls access using ipBlocks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ingress-policy\n  namespace: foo\nspec:\n  targetRef:\n    kind: Gateway\n    group: gateway.networking.k8s.io\n    name: httpbin-gateway\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        ipBlocks: [\"1.2.3.4\", \"5.6.7.0/24\"]\n```\n\n----------------------------------------\n\nTITLE: Updating DENY Policy with TCP and HTTP Fields\nDESCRIPTION: Updates the DENY policy to include both TCP (ports) and HTTP (methods) fields.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: tcp-policy\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: tcp-echo\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        methods: [\"GET\"]\n        ports: [\"9000\"]\n```\n\n----------------------------------------\n\nTITLE: Testing authorized request with response header inspection\nDESCRIPTION: Tests a request with the x-force-authorized header to see the response headers including the custom header added by the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -I -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-authorized: true\"\n```\n\n----------------------------------------\n\nTITLE: Querying Envoy Cluster Configuration in Istio\nDESCRIPTION: Shows how to use istioctl proxy-config to view cluster configuration for an Istio ingress gateway pod. Displays service FQDNs, ports, subsets, direction and destination rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config cluster -n istio-system istio-ingressgateway-7d6874b48f-qxhn5\n```\n\n----------------------------------------\n\nTITLE: Creating TCP Mesh-External Service Entry for MySQL in Istio\nDESCRIPTION: This YAML snippet defines a TCP mesh-external service entry to allow egress traffic to an external MySQL database instance. It specifies the host, IP address, and port for the database.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: mysql-external\nspec:\n  hosts:\n  - $MYSQL_DB_HOST\n  addresses:\n  - $MYSQL_DB_IP/32\n  ports:\n  - name: tcp\n    number: $MYSQL_DB_PORT\n    protocol: tcp\n  location: MESH_EXTERNAL\nEOF\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istiod Logs\nDESCRIPTION: This command fetches the logs from the Istiod pod in the Istio system namespace, focusing on the discovery container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs $(kubectl -n istio-system get pods -l app=istiod -o jsonpath='{.items[0].metadata.name}') -c discovery -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Downloading and Extracting KubeSphere Installer in Bash\nDESCRIPTION: This snippet demonstrates how to download the KubeSphere installer, extract it, and navigate to the scripts directory. It uses curl to download the installer and tar to extract it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kubesphere/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://kubesphere.io/download/stable/latest > installer.tar.gz\n$ tar -xzf installer.tar.gz\n$ cd kubesphere-all-v2.1.1/scripts\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Metrics Configuration in Istio\nDESCRIPTION: This bash command applies the custom metrics configuration to the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/customize-metrics/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f custom_metrics.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining Single-line Snippet SNIP3 in Istio Documentation\nDESCRIPTION: A snippet block labeled 'SNIP3' containing a single line of text that can be referenced elsewhere in Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/snippet_example.txt#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# $snippet SNIP3\nThis is chunk 3\n# $endsnippet\n```\n\n----------------------------------------\n\nTITLE: View complete waypoint proxy configuration\nDESCRIPTION: Command to view all Envoy configuration details for the waypoint proxy\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config all deploy/waypoint\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart on cluster2 using Helm\nDESCRIPTION: Installs the Istio base chart on cluster2 using Helm. This is the first step in the Helm-based installation process for the second primary cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Using Experimental Filter Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use experimental.envoy.filters condition for metadata matching. No backward compatibility is guaranteed for experimental keys.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nkey: experimental.envoy.filters.network.mysql_proxy[db.table]\nvalues: [\"[update]\"]\n```\n\n----------------------------------------\n\nTITLE: Disabling Istio Injection for a Namespace\nDESCRIPTION: Labels a namespace with 'istio-injection=disabled' to prevent automatic sidecar injection. This command updates the label even if it already exists by using the --overwrite flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace istio-system istio-injection=disabled --overwrite\n```\n\n----------------------------------------\n\nTITLE: Checking Gateway Pod Status\nDESCRIPTION: Verify the presence of both default and canary versions of gateway pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/helm/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -L istio.io/rev -n istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Disabling Sidecar Injection for a Deployment\nDESCRIPTION: Example of a Kubernetes Deployment YAML that disables automatic sidecar injection using an annotation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: ignored\nspec:\n  template:\n    metadata:\n      annotations:\n        sidecar.istio.io/inject: \"false\"\n    spec:\n      containers:\n      - name: ignored\n        image: tutum/curl\n        command: [\"/bin/sleep\",\"infinity\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Warning Block with Hugo Shortcodes\nDESCRIPTION: Hugo template shortcode for displaying a warning message about experimental features. The warning is wrapped in double curly braces with warning directive.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/experimental-feature-warning.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< warning >}}\nThe following information describes an experimental feature, which is intended\nfor evaluation purposes only.\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Trusted Hops with EnvoyFilter in Istio (YAML)\nDESCRIPTION: A deprecated example of using EnvoyFilter to configure the number of trusted hops in the HTTP connection manager for an ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/upgrade-issues/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: ingressgateway-redirect-config\nspec:\n  configPatches:\n  - applyTo: NETWORK_FILTER\n    match:\n      context: GATEWAY\n      listener:\n        filterChain:\n          filter:\n            name: envoy.filters.network.http_connection_manager\n    patch:\n      operation: MERGE\n      value:\n        typed_config:\n          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\n          xff_num_trusted_hops: 1\n  workloadSelector:\n    labels:\n      istio: ingress-gateway\n```\n\n----------------------------------------\n\nTITLE: Testing Circuit Breaker with 3 Concurrent Connections in Istio\nDESCRIPTION: This snippet increases the number of concurrent connections to 3, sending 30 requests to the httpbin service. It shows how the circuit breaker starts to limit the number of successful requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$FORTIO_POD\" -c fortio -- /usr/bin/fortio load -c 3 -qps 0 -n 30 -loglevel Warning http://httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Configuring XFCC Header Handling in IstioOperator\nDESCRIPTION: This YAML snippet shows how to configure the forwardClientCertDetails field in an IstioOperator resource to control XFCC header handling. The ENUM_VALUE placeholder should be replaced with one of the specified options.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      gatewayTopology:\n        forwardClientCertDetails: <ENUM_VALUE>\n```\n\n----------------------------------------\n\nTITLE: Applying Global mTLS Policy\nDESCRIPTION: Configures a PeerAuthentication policy to enforce strict mTLS communication for all workloads within the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n test apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: default\nspec:\n  mtls:\n    mode: STRICT\nEOF\n```\n\n----------------------------------------\n\nTITLE: Enabling Alpha Gateway API in Istio Installation\nDESCRIPTION: This command installs Istio with the PILOT_ENABLE_ALPHA_GATEWAY_API environment variable set to true, allowing Istio to read alpha Gateway API resources. It uses a minimal profile for the installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/gateway-api-gamma-experimental.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set values.pilot.env.PILOT_ENABLE_ALPHA_GATEWAY_API=true --set profile=minimal -y\n```\n\n----------------------------------------\n\nTITLE: Creating IstioOperator Installation Spec\nDESCRIPTION: Generates the IstioOperator YAML configuration for installing Istio with VM integration support, including mesh ID and network settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: istio\nspec:\n  values:\n    global:\n      meshID: mesh1\n      multiCluster:\n        clusterName: \"${CLUSTER}\"\n      network: \"${CLUSTER_NETWORK}\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Secret Names in Istio System Namespace\nDESCRIPTION: This command lists all secrets in the istio-system namespace, which can be useful for troubleshooting authentication and certificate issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --namespace istio-system get secrets\n```\n\n----------------------------------------\n\nTITLE: Checking Dry-Run Results in Istio Proxy Logs\nDESCRIPTION: Retrieves and filters the Istio proxy logs to show dry-run policy matches.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs \"$(kubectl -n foo -l app=httpbin get pods -o jsonpath={.items..metadata.name})\" -c istio-proxy -n foo | grep \"shadow denied\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Reviews v2 for Production Traffic\nDESCRIPTION: This command adds the 'app=reviews' label to the v2 pod, making it addressable by the reviews service and allowing it to receive production traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label pods -l version=v2 app=reviews --overwrite\n```\n\n----------------------------------------\n\nTITLE: Retrieving Envoy Proxy Configuration with istioctl\nDESCRIPTION: A set of istioctl proxy-config commands to retrieve different aspects of Envoy proxy configuration including bootstrap, cluster, listener, route, and endpoint configurations. These commands help debug the configuration of specific pods in the service mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/metrics-and-logs/life-of-a-request.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n# Retrieve information about bootstrap configuration for the Envoy instance in the specified pod.\n$ istioctl proxy-config bootstrap productpage-v1-bb8d5cbc7-k7qbm\n\n# Retrieve information about cluster configuration for the Envoy instance in the specified pod.\n$ istioctl proxy-config cluster productpage-v1-bb8d5cbc7-k7qbm\n\n# Retrieve information about listener configuration for the Envoy instance in the specified pod.\n$ istioctl proxy-config listener productpage-v1-bb8d5cbc7-k7qbm\n\n# Retrieve information about route configuration for the Envoy instance in the specified pod.\n$ istioctl proxy-config route productpage-v1-bb8d5cbc7-k7qbm\n\n# Retrieve information about endpoint configuration for the Envoy instance in the specified pod.\n$ istioctl proxy-config endpoints productpage-v1-bb8d5cbc7-k7qbm\n\n# Try the following to discover more proxy-config commands\n$ istioctl proxy-config --help\n```\n\n----------------------------------------\n\nTITLE: Enable debug logs for waypoint proxy\nDESCRIPTION: Command to enable debug level logging for the waypoint proxy\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nistioctl pc log deploy/waypoint --level debug\n```\n\n----------------------------------------\n\nTITLE: Deleting Politics Source Pod in Istio\nDESCRIPTION: Command that uses sed to modify the sleep.yaml template by replacing 'sleep' with 'politics', then deletes the politics resources including serviceaccount, service, and deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ sed 's/: sleep/: politics/g' @samples/sleep/sleep.yaml@ | kubectl delete -f -\nserviceaccount \"politics\" deleted\nservice \"politics\" deleted\ndeployment \"politics\" deleted\n```\n\n----------------------------------------\n\nTITLE: Creating a Deny-All Authorization Policy in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy with an empty rule that always matches, combined with the DENY action to block all access to the workload, useful for temporary lockdown scenarios.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-all\nspec:\n  action: DENY\n  # rules 字段有一个空白规则，策略将始终匹配。\n  rules:\n  - {}\n```\n\n----------------------------------------\n\nTITLE: Detecting Missing Destination Rules\nDESCRIPTION: Demonstrates how istioctl describe shows warnings when virtual services reference subsets that aren't defined by destination rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/bookinfo/networking/destination-rule-all-mtls.yaml@\n$ istioctl x describe pod $REVIEWS_V1_POD\n...\nVirtualService: reviews\n   WARNING: No destinations match pod subsets (checked 1 HTTP routes)\n      Warning: Route to subset v1 but NO DESTINATION RULE defining subsets!\n```\n\n----------------------------------------\n\nTITLE: Creating AuthorizationPolicy for Standalone OPA Integration\nDESCRIPTION: Creates an Istio AuthorizationPolicy that enables external authorization via OPA for all paths except /ip on the httpbin service. Uses the CUSTOM action to delegate authorization to the standalone OPA service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: httpbin-opa\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: CUSTOM\n  provider:\n    name: \"opa.default\"\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/ip\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking Service Subnet in IBM Cloud Kubernetes Service\nDESCRIPTION: This command retrieves the Service Subnet CIDR for an IBM Cloud Kubernetes Service cluster. The output is used to configure Istio's includeIPRanges parameter for direct access to external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nibmcloud ks cluster get -c my-cluster | grep \"Service Subnet\"\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB Ratings Collection\nDESCRIPTION: MongoDB commands to create and populate the ratings collection with test data\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/egress-mongo/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | mongo --ssl --sslAllowInvalidCertificates $MONGODB_HOST:$MONGODB_PORT -u admin -p $MONGO_ADMIN_PASSWORD --authenticationDatabase admin\nuse test\ndb.createCollection(\"ratings\");\ndb.ratings.insert(\n  [{rating: 1},\n   {rating: 1}]\n);\nEOF\n```\n\n----------------------------------------\n\nTITLE: Examining Route Configuration\nDESCRIPTION: Demonstrates how to view the route configuration for port 9080 which shows virtual hosts and route matching rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config routes productpage-v1-6c886ff494-7vxhs --name 9080 -o json\n```\n\n----------------------------------------\n\nTITLE: Checking for Conflicting Istio Gateway Definitions\nDESCRIPTION: Command to check for other Istio gateway resources that might be defined on the same port across all namespaces, which could cause conflicts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get gateway --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Delete Certificates and Keys\nDESCRIPTION: Command to remove generated certificates and private keys used in the configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nrm example.com.crt example.com.key my-nginx.mesh-external.svc.cluster.local.crt my-nginx.mesh-external.svc.cluster.local.key my-nginx.mesh-external.svc.cluster.local.csr client.example.com.crt client.example.com.csr client.example.com.key\n```\n\n----------------------------------------\n\nTITLE: Restarting Istiod Pods for Certificate Update\nDESCRIPTION: Patches the istiod deployment to trigger a restart of the pods. This can resolve certificate mismatch issues by ensuring the latest certificates are used.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system patch deployment istiod \\\n    -p \"{\\\"spec\\\":{\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"date\\\":\\\"`date +'%s'`\\\"}}}}}\"\ndeployment.extensions \"istiod\" patched\n```\n\n----------------------------------------\n\nTITLE: Navigating to Istio Directory\nDESCRIPTION: Command to change directory to the downloaded Istio package folder.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/download-istio-release/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cd istio-{{< istio_full_version >}}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes API Server Webhook Failure Log\nDESCRIPTION: Shows a log entry from the kube-apiserver when it fails to call the sidecar injection webhook due to proxy issues. This indicates the API server cannot reach the webhook service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_16\n\nLANGUAGE: plain\nCODE:\n```\nW0227 21:51:03.156818       1 admission.go:257] Failed calling webhook, failing open sidecar-injector.istio.io: failed calling admission webhook \"sidecar-injector.istio.io\": Post https://istio-sidecar-injector.istio-system.svc:443/inject: Service Unavailable\n```\n\n----------------------------------------\n\nTITLE: Enable debug logs for waypoint proxy\nDESCRIPTION: Command to enable debug level logging for the waypoint proxy\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nistioctl pc log deploy/waypoint --level debug\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Metrics in Istio using YAML\nDESCRIPTION: This YAML configuration defines custom metrics for Istio, adding 'request_host' and 'destination_port' dimensions to the 'requests_total' metric for both gateways and sidecars.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/customize-metrics/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: namespace-metrics\nspec:\n  metrics:\n  - providers:\n    - name: prometheus\n    overrides:\n    - match:\n        metric: REQUEST_COUNT\n      tagOverrides:\n        destination_port:\n          value: \"string(destination.port)\"\n        request_host:\n          value: \"request.host\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Grafana Using Istio's Sample Configuration (Bash)\nDESCRIPTION: Command to apply Istio's basic Grafana sample installation that comes bundled with all Istio dashboards pre-installed. This is a quick deployment option intended for demonstration purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/grafana/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/addons/grafana.yaml\n```\n\n----------------------------------------\n\nTITLE: Removing Tags from REQUEST_COUNT Metric (YAML)\nDESCRIPTION: Telemetry API configuration to remove the grpc_response_status tag from the REQUEST_COUNT metric in both client and server mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: remove-tags\n  namespace: istio-system\nspec:\n  metrics:\n    - providers:\n        - name: prometheus\n      overrides:\n        - match:\n            mode: CLIENT_AND_SERVER\n            metric: REQUEST_COUNT\n          tagOverrides:\n            grpc_response_status:\n              operation: REMOVE\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Version\nDESCRIPTION: This command checks the installed Istio version to ensure it's 1.17.2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl version\n```\n\n----------------------------------------\n\nTITLE: Displaying Previous Istio Version in Documentation\nDESCRIPTION: This shortcode is used to show the previous version of Istio. It's useful for providing context in upgrade instructions or compatibility notes throughout the documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/args.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=istio_previous_version >}}\n{{< istio_previous_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Determining Service Cluster IP Range in Minikube and Other Platforms\nDESCRIPTION: This command inspects the kube-apiserver pod configuration to determine the service-cluster-ip-range value. This information is used to configure Istio's includeIPRanges parameter for direct access to external services in Minikube, Docker for Desktop, and bare metal installations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod kube-apiserver -n kube-system | grep 'service-cluster-ip-range'\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Logs (Gateway API)\nDESCRIPTION: Command to check logs from Gateway API-managed egress gateway pods filtered for NGINX external service requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -l gateway.networking.k8s.io/gateway-name=nginx-egressgateway | grep 'my-nginx.mesh-external.svc.cluster.local' | grep HTTP\n```\n\n----------------------------------------\n\nTITLE: Displaying Destination Rules Configuration\nDESCRIPTION: Retrieves and displays the configured destination rules in YAML format to verify the setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get destinationrules -o yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway with IstioOperator\nDESCRIPTION: Creates an IstioOperator configuration to deploy an ingress gateway in a separate namespace from the control plane. Enables gateway injection and sets a unique label for gateway selection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: ingress\nspec:\n  profile: empty # Do not install CRDs or the control plane\n  components:\n    ingressGateways:\n    - name: istio-ingressgateway\n      namespace: istio-ingress\n      enabled: true\n      label:\n        # Set a unique label for the gateway. This is required to ensure Gateways\n        # can select this workload\n        istio: ingressgateway\n  values:\n    gateways:\n      istio-ingressgateway:\n        # Enable gateway injection\n        injectionTemplate: gateway\n```\n\n----------------------------------------\n\nTITLE: Inspecting Sidecar TLS Certificates\nDESCRIPTION: Uses istioctl to verify that the TLS certificates are properly loaded and active in the httpbin sidecar proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config secret httpbin-5bbdbd6588-z9vbs.test\nRESOURCE NAME                                                           TYPE           STATUS     VALID CERT     SERIAL NUMBER                               NOT AFTER                NOT BEFORE\nfile-cert:/etc/istio/tls-certs/tls.crt~/etc/istio/tls-certs/tls.key     Cert Chain     ACTIVE     true           1                                           2023-02-14T09:51:56Z     2022-02-14T09:51:56Z\ndefault                                                                 Cert Chain     ACTIVE     true           329492464719328863283539045344215802956     2022-02-15T09:55:46Z     2022-02-14T09:53:46Z\nROOTCA                                                                  CA             ACTIVE     true           204427760222438623495455009380743891800     2032-02-07T16:58:00Z     2022-02-09T16:58:00Z\nfile-root:/etc/istio/tls-ca-certs/ca.crt                                Cert Chain     ACTIVE     true           14033888812979945197                        2023-02-14T09:51:56Z     2022-02-14T09:51:56Z\n```\n\n----------------------------------------\n\nTITLE: Disabling Istio In-Cluster Operator in Bash\nDESCRIPTION: Command to scale down the Istio Operator deployment to zero replicas, effectively disabling it without disrupting the control plane or mesh traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl scale deployment -n istio-system istio-operator –replicas 0\n```\n\n----------------------------------------\n\nTITLE: Checking Network Connectivity within 'foo' Namespace in Bash\nDESCRIPTION: This command executes a curl request from the 'curl' pod to the 'httpbin' service within the 'foo' namespace to verify connectivity.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$CURL_POD_FOO\" -n foo -c curl -- curl http://httpbin.foo:8000/html\n```\n\n----------------------------------------\n\nTITLE: Creating OPA Policy for JWT Path Validation\nDESCRIPTION: A Rego policy for OPA that allows requests if the path prefix matches a claim in the JWT token. It validates the token and checks if the action is allowed based on the path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_2\n\nLANGUAGE: rego\nCODE:\n```\npackage envoy.authz\n\nimport input.attributes.request.http as http_request\n\ndefault allow = false\n\ntoken = {\"valid\": valid, \"payload\": payload} {\n    [_, encoded] := split(http_request.headers.authorization, \" \")\n    [valid, _, payload] := io.jwt.decode_verify(encoded, {\"secret\": \"secret\"})\n}\n\nallow {\n    is_token_valid\n    action_allowed\n}\n\nis_token_valid {\n  token.valid\n  now := time.now_ns() / 1000000000\n  token.payload.nbf <= now\n  now < token.payload.exp\n}\n\naction_allowed {\n  startswith(http_request.path, base64url.decode(token.payload.path))\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace from Cluster1\nDESCRIPTION: Command to remove the istio-system namespace from cluster1 after uninstalling Istio components via Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Checking Istiod Service Endpoints\nDESCRIPTION: Examines the endpoints for the istiod service to ensure it has active endpoints. Without these endpoints, the webhook calls for sidecar injection will fail.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get endpoints istiod\nNAME           ENDPOINTS                                                  AGE\nistiod   10.244.2.8:15012,10.244.2.8:15010,10.244.2.8:15017 + 1 more...   3h18m\n```\n\n----------------------------------------\n\nTITLE: Installing Zipkin Using kubectl\nDESCRIPTION: Command to deploy the basic Zipkin sample installation to a Kubernetes cluster using kubectl. This deployment is intended for demonstration purposes and is not optimized for production use.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/zipkin/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/addons/extras/zipkin.yaml\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Circuit Breaker Configuration\nDESCRIPTION: These commands remove the DestinationRule for circuit breaking, and then delete the httpbin service and Fortio client deployments used for testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete destinationrule httpbin\n$ kubectl delete -f @samples/httpbin/sample-client/fortio-deploy.yaml@\n$ kubectl delete -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Applying Advanced Kyverno Authorization Policy in Kubernetes\nDESCRIPTION: Applies a Kyverno AuthorizationPolicy with variables and conditional expressions to control access based on request headers. The policy can return different status codes, modify request/response headers, and inject metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: envoy.kyverno.io/v1alpha1\nkind: AuthorizationPolicy\nmetadata:\n  name: demo-policy.example.com\nspec:\n  variables:\n  - name: force_authorized\n    expression: object.attributes.request.http.headers[?\"x-force-authorized\"].orValue(\"\") in [\"enabled\", \"true\"]\n  - name: force_unauthenticated\n    expression: object.attributes.request.http.headers[?\"x-force-unauthenticated\"].orValue(\"\") in [\"enabled\", \"true\"]\n  - name: metadata\n    expression: '{\"my-new-metadata\": \"my-new-value\"}'\n  authorizations:\n    # if force_unauthenticated -> 401\n  - expression: >\n      variables.force_unauthenticated\n        ? envoy\n            .Denied(401)\n            .WithBody(\"Authentication Failed\")\n            .Response()\n        : null\n    # if force_authorized -> 200\n  - expression: >\n      variables.force_authorized\n        ? envoy\n            .Allowed()\n            .WithHeader(\"x-validated-by\", \"my-security-checkpoint\")\n            .WithoutHeader(\"x-force-authorized\")\n            .WithResponseHeader(\"x-add-custom-response-header\", \"added\")\n            .Response()\n            .WithMetadata(variables.metadata)\n        : null\n    # else -> 403\n  - expression: >\n      envoy\n        .Denied(403)\n        .WithBody(\"Unauthorized Request\")\n        .Response()\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring SSL Certificate\nDESCRIPTION: Creates a Certificate resource to request and manage SSL certificates for *.mydemo.com domain using the configured ClusterIssuer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/custom-ingress-gateway/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: certmanager.k8s.io/v1alpha1\nkind: Certificate\nmetadata:\n  name: demo-certificate\n  namespace: istio-system\nspec:\n  acme:\n    config:\n    - dns01:\n        provider: your-dns\n      domains:\n      - '*.mydemo.com'\n  commonName: '*.mydemo.com'\n  dnsNames:\n  - '*.mydemo.com'\n  issuerRef:\n    kind: ClusterIssuer\n    name: letsencrypt-demo\n  secretName: istio-customingressgateway-certs\n```\n\n----------------------------------------\n\nTITLE: Setting Up Multi-Network Environment Variables in Bash\nDESCRIPTION: Defines environment variables for multi-network VM integration with Istio, including network-specific configurations for cluster and VM networks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ VM_APP=\"<the name of the application this VM will run>\"\n$ VM_NAMESPACE=\"<the name of your service namespace>\"\n$ WORK_DIR=\"<a certificate working directory>\"\n$ SERVICE_ACCOUNT=\"<name of the Kubernetes service account you want to use for your VM>\"\n$ CLUSTER_NETWORK=\"kube-network\"\n$ VM_NETWORK=\"vm-network\"\n$ CLUSTER=\"cluster1\"\n```\n\n----------------------------------------\n\nTITLE: Updating MongoDB URL for Ratings Service\nDESCRIPTION: Sets the MONGO_DB_URL environment variable in the ratings-v2 deployment to connect to the external MongoDB instance.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl set env deployment/ratings-v2 \"MONGO_DB_URL=mongodb://bookinfo:$BOOKINFO_PASSWORD@$MONGODB_HOST:$MONGODB_PORT/test?authSource=test&ssl=true\"\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio Support Announcements Page\nDESCRIPTION: This YAML frontmatter defines metadata for a documentation page about Istio support announcements. It sets the title, description, weight for ordering, and specifies that the list should be ordered by publish date. It also sets a data category for the content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/support/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Support Announcements\ndescription: Support window announcements.\nweight: 15\nlist_by_publishdate: true\ndata_category: Support Announcements\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Virtual Services for Ratings and Reviews\nDESCRIPTION: Command to apply virtual services that route traffic to the MongoDB-backed version of the ratings service and the related reviews service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-ratings-db.yaml@\nvirtualservice.networking.istio.io/reviews created\nvirtualservice.networking.istio.io/ratings created\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin-v2 Service in Kubernetes\nDESCRIPTION: Kubernetes deployment configuration for version 2 of the httpbin service with access logging enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: httpbin-v2\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: httpbin\n      version: v2\n  template:\n    metadata:\n      labels:\n        app: httpbin\n        version: v2\n    spec:\n      containers:\n      - image: docker.io/kennethreitz/httpbin\n        imagePullPolicy: IfNotPresent\n        name: httpbin\n        command: [\"gunicorn\", \"--access-logfile\", \"-\", \"-b\", \"0.0.0.0:80\", \"httpbin:app\"]\n        ports:\n        - containerPort: 80\n```\n\n----------------------------------------\n\nTITLE: Terminating a Single Microservice Pod in Kubernetes\nDESCRIPTION: This snippet shows how to forcefully terminate the 'details' service in a single pod using the pkill command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/production-testing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec $(kubectl get pods -l app=details -o jsonpath='{.items[0].metadata.name}') -- pkill ruby\n```\n\n----------------------------------------\n\nTITLE: Configuring Wildcard Gateway for Multiple Services\nDESCRIPTION: This snippet shows how to configure a single wildcard Gateway to avoid 404 errors when multiple gateways use the same TLS certificate. It demonstrates binding multiple VirtualServices to a single Gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n- port:\n    number: 443\n    name: https\n    protocol: HTTPS\n  hosts:\n  - \"*.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio WorkloadEntry\nDESCRIPTION: Generates necessary configuration files for VM integration using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x workload entry configure -f workloadgroup.yaml -o \"${WORK_DIR}\" --clusterID \"${CLUSTER}\" --autoregister\n```\n\n----------------------------------------\n\nTITLE: Using source.principal Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use source.principal condition to match the identity of source workloads. Requires mutual TLS to be enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkey: source.principal\nvalues: [\"cluster.local/ns/default/sa/productpage\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Server-Side mTLS with PeerAuthentication in Istio\nDESCRIPTION: Creates a PeerAuthentication resource to enforce STRICT mutual TLS mode for the entire namespace, requiring all incoming connections to use mTLS for authentication and encryption.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f -\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: echo-mtls\n  namespace: echo-grpc\nspec:\n  mtls:\n    mode: STRICT\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Jaeger in Istio using kubectl\nDESCRIPTION: This command applies the Jaeger sample addon configuration to quickly deploy Jaeger into a Kubernetes cluster running Istio. This deployment is intended for demonstration purposes only and is not optimized for performance or security.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/jaeger/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/addons/jaeger.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Self-Signed Cluster Issuers for cert-manager\nDESCRIPTION: Defines three self-signed cluster issuers (istio-system, foo, and bar) for cert-manager using YAML configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-bar-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: bar-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: bar\n  secretName: bar-ca-selfsigned\n  issuerRef:\n    name: selfsigned-bar-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: bar\nspec:\n  ca:\n    secretName: bar-ca-selfsigned\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-foo-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: foo-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: foo\n  secretName: foo-ca-selfsigned\n  issuerRef:\n    name: selfsigned-foo-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: foo\nspec:\n  ca:\n    secretName: foo-ca-selfsigned\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-istio-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: istio-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: istio-system\n  secretName: istio-ca-selfsigned\n  issuerRef:\n    name: selfsigned-istio-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: istio-system\nspec:\n  ca:\n    secretName: istio-ca-selfsigned\n```\n\n----------------------------------------\n\nTITLE: Creating Self-Signed Cluster Issuers for cert-manager\nDESCRIPTION: Defines three self-signed cluster issuers (istio-system, foo, and bar) for cert-manager using YAML configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-bar-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: bar-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: bar\n  secretName: bar-ca-selfsigned\n  issuerRef:\n    name: selfsigned-bar-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: bar\nspec:\n  ca:\n    secretName: bar-ca-selfsigned\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-foo-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: foo-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: foo\n  secretName: foo-ca-selfsigned\n  issuerRef:\n    name: selfsigned-foo-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: foo\nspec:\n  ca:\n    secretName: foo-ca-selfsigned\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-istio-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: istio-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: istio-system\n  secretName: istio-ca-selfsigned\n  issuerRef:\n    name: selfsigned-istio-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: istio-system\nspec:\n  ca:\n    secretName: istio-ca-selfsigned\n```\n\n----------------------------------------\n\nTITLE: Checking egress gateway logs with Istio APIs\nDESCRIPTION: Inspects the logs of the egress gateway pod to verify that the HTTP request to edition.cnn.com/politics was processed by the gateway. Includes an optional tip for checking certificates when using mutual TLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l istio=egressgateway -c istio-proxy -n istio-system | tail\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl pc secret -n istio-system \"$(kubectl get pod -l istio=egressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}')\" -ojson | jq '[.dynamicActiveSecrets[] | select(.name == \"default\")][0].secret.tlsCertificate.certificateChain.inlineBytes' -r | base64 -d | openssl x509 -text -noout | grep 'Subject Alternative Name' -A 1\n            X509v3 Subject Alternative Name: critical\n                URI:spiffe://cluster.local/ns/istio-system/sa/istio-egressgateway-service-account\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Ingress Gateway IP and Creating DNS Domain in Bash\nDESCRIPTION: These commands retrieve the external IP of the Istio ingress gateway service, create a DNS domain for it, and store the resulting domain name in an environment variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_GATEWAY_IP=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n$ echo INGRESS_GATEWAY_IP = $INGRESS_GATEWAY_IP\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ ibmcloud ks nlb-dns create classic --cluster $CLUSTER_NAME --ip $INGRESS_GATEWAY_IP --secret-namespace istio-system\nHost name subdomain is created as <some domain>\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_GATEWAY_DOMAIN=<the domain from the previous command>\n```\n\n----------------------------------------\n\nTITLE: Verifying Control Plane Mapping for User Group 1 using Istioctl in Bash\nDESCRIPTION: This command uses istioctl to verify that applications in app-ns-1 are managed by the usergroup-1 control plane. It displays the sync status of various Istio components for each pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multiple-controlplanes/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl ps -i usergroup-1\n```\n\n----------------------------------------\n\nTITLE: Annotating Existing AuthorizationPolicy for Dry-Run in Kubernetes\nDESCRIPTION: Adds the dry-run annotation to an existing AuthorizationPolicy named 'deny-path-headers'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl annotate --overwrite authorizationpolicies deny-path-headers -n foo istio.io/dry-run='true'\n```\n\n----------------------------------------\n\nTITLE: Creating Egress Gateway and Route Rules for *.wikipedia.org (Istio APIs)\nDESCRIPTION: This snippet creates an egress Gateway for *.wikipedia.org and sets up route rules to direct traffic through the egress gateway to the external service. It includes a Gateway, DestinationRule, and VirtualService configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - \"*.wikipedia.org\"\n    tls:\n      mode: PASSTHROUGH\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-wikipedia\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n    - name: wikipedia\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: direct-wikipedia-through-egress-gateway\nspec:\n  hosts:\n  - \"*.wikipedia.org\"\n  gateways:\n  - mesh\n  - istio-egressgateway\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: 443\n      sniHosts:\n      - \"*.wikipedia.org\"\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: wikipedia\n        port:\n          number: 443\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n      sniHosts:\n      - \"*.wikipedia.org\"\n    route:\n    - destination:\n        host: www.wikipedia.org\n        port:\n          number: 443\n      weight: 100\nEOF\n```\n\n----------------------------------------\n\nTITLE: Retrieving Mesh Overview with proxy-status Command in Istio\nDESCRIPTION: This command provides an overview of the mesh, showing the sync status of various components like CDS, LDS, EDS, and RDS for each proxy. It helps identify proxies that are out of sync or not receiving configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Request without Network Policy\nDESCRIPTION: Sends an HTTPS request to CNN from the curl pod before applying any network policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -n test-egress -l app=curl -o jsonpath={.items..metadata.name})\" -n test-egress -c curl -- curl -s -o /dev/null -w \"%{http_code}\\n\"  https://edition.cnn.com/politics\n```\n\n----------------------------------------\n\nTITLE: Virtual Inbound Configuration for Dual Stack\nDESCRIPTION: JSON configuration showing virtual inbound listener setup for both IPv4 and IPv6 addresses\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/experimental-dual-stack/index.md#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n    \"name\": \"virtualInbound\",\n    \"address\": {\n        \"socketAddress\": {\n            \"address\": \"0.0.0.0\",\n            \"portValue\": 15006\n        }\n    },\n    \"additionalAddresses\": [\n        {\n            \"address\": {\n                \"socketAddress\": {\n                    \"address\": \"::\",\n                    \"portValue\": 15006\n                }\n            }\n        }\n    ],\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Istio v1beta1 Authorization Policy for httpbin Service in YAML\nDESCRIPTION: An example of a v1beta1 AuthorizationPolicy that allows a specific principal to access the httpbin service using GET method when the request includes a specific version header. This policy applies to workloads with app: httpbin and version: v1 labels in the foo namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"]\n```\n\n----------------------------------------\n\nTITLE: Dropping MySQL Database and User\nDESCRIPTION: Commands to drop the test database and bookinfo user using mysqlsh with SSL mode required\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT -e \"drop database test; drop user bookinfo;\"\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Istio v1beta1 Authorization Policy for httpbin Service in YAML\nDESCRIPTION: An example of a v1beta1 AuthorizationPolicy that allows a specific principal to access the httpbin service using GET method when the request includes a specific version header. This policy applies to workloads with app: httpbin and version: v1 labels in the foo namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"]\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Sidecar Injection for a Deployment with istioctl\nDESCRIPTION: Command to verify if Istio sidecar injection is configured correctly for all pods in a specific deployment. Useful for checking injection configuration at the deployment level.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/check-inject/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental check-inject -n <namespace> deploy/<deployment-name>\n```\n\n----------------------------------------\n\nTITLE: Restarting Istio Sidecar Pods\nDESCRIPTION: Command to restart deployments after Istio upgrade to update the data plane\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/in-place/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart deployment\n```\n\n----------------------------------------\n\nTITLE: ConfigMap for Advanced Gateway Customization\nDESCRIPTION: Example ConfigMap that provides detailed customization for the Gateway's generated resources, including deployment, service, and scaling configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: gw-options\ndata:\n  horizontalPodAutoscaler: |\n    spec:\n      minReplicas: 2\n      maxReplicas: 2\n\n  deployment: |\n    metadata:\n      annotations:\n      additional-annotation: some-value\n    spec:\n      replicas: 4\n      template:\n        spec:\n          containers:\n          - name: istio-proxy\n            resources:\n              requests:\n                cpu: 1234m\n\n  service: |\n    spec:\n      ports:\n      - \"$patch\": delete\n        port: 15021\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Services\nDESCRIPTION: Deploys httpbin and curl sample services in the 'foo' namespace with Istio sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f samples/httpbin/httpbin.yaml) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f samples/curl/curl.yaml) -n foo\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio Gateway for Bookinfo\nDESCRIPTION: Deploy a Kubernetes Gateway API resource named bookinfo-gateway to enable external access to the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/deploy-sample-app/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/bookinfo/gateway-api/bookinfo-gateway.yaml@\n```\n\n----------------------------------------\n\nTITLE: Generating Application URL\nDESCRIPTION: Outputs the full URL to access the Bookinfo application's product page that can be used in a browser.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ echo http://$MYHOST/productpage\n```\n\n----------------------------------------\n\nTITLE: Routing All Traffic to v1 Using Gateway API\nDESCRIPTION: This command applies a Gateway API HTTPRoute to route all traffic to the v1 version of the reviews service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/gateway-api/route-reviews-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Istio v1beta1 Authorization Policy for httpbin Service in YAML\nDESCRIPTION: An example of a v1beta1 AuthorizationPolicy that allows a specific principal to access the httpbin service using GET method when the request includes a specific version header. This policy applies to workloads with app: httpbin and version: v1 labels in the foo namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"]\n```\n\n----------------------------------------\n\nTITLE: Creating Certificate with SubjectAltName (SAN) for Enhanced Security in Istio\nDESCRIPTION: Creates a configuration file for SAN validation and generates a certificate with extended key usage options. This provides enhanced security by allowing certificate validation based on the SubjectAltName field.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ cat > san.conf <<EOF\n[req]\ndistinguished_name = req_distinguished_name\nreq_extensions = v3_req\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = US\n[v3_req]\nkeyUsage = critical, digitalSignature, keyEncipherment\nextendedKeyUsage = serverAuth, clientAuth\nbasicConstraints = critical, CA:FALSE\nsubjectAltName = critical, @alt_names\n[alt_names]\nDNS = my-nginx.mesh-external.svc.cluster.local\nEOF\n$\n$ openssl req -out my-nginx.mesh-external.svc.cluster.local.csr -newkey rsa:4096 -nodes -keyout my-nginx.mesh-external.svc.cluster.local.key -subj \"/CN=my-nginx.mesh-external.svc.cluster.local/O=some organization\" -config san.conf\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in my-nginx.mesh-external.svc.cluster.local.csr -out my-nginx.mesh-external.svc.cluster.local.crt -extfile san.conf -extensions v3_req\n```\n\n----------------------------------------\n\nTITLE: Deploying HelloWorld V1 to Cluster1\nDESCRIPTION: Deploy the helloworld-v1 application to cluster1 and verify its pod status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/verify/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --context=\"${CTX_CLUSTER1}\" \\\n    -f @samples/helloworld/helloworld.yaml@ \\\n    -l version=v1 -n sample\n$ kubectl get pod --context=\"${CTX_CLUSTER1}\" -n sample -l app=helloworld\n```\n\n----------------------------------------\n\nTITLE: Creating Egress Gateway and Route Rules for *.wikipedia.org (Istio APIs)\nDESCRIPTION: This snippet creates an egress Gateway for *.wikipedia.org and sets up route rules to direct traffic through the egress gateway to the external service. It includes a Gateway, DestinationRule, and VirtualService configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - \"*.wikipedia.org\"\n    tls:\n      mode: PASSTHROUGH\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-wikipedia\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n    - name: wikipedia\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: direct-wikipedia-through-egress-gateway\nspec:\n  hosts:\n  - \"*.wikipedia.org\"\n  gateways:\n  - mesh\n  - istio-egressgateway\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: 443\n      sniHosts:\n      - \"*.wikipedia.org\"\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: wikipedia\n        port:\n          number: 443\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n      sniHosts:\n      - \"*.wikipedia.org\"\n    route:\n    - destination:\n        host: www.wikipedia.org\n        port:\n          number: 443\n      weight: 100\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying Injection Webhook Configuration Installation\nDESCRIPTION: Verifies that the mutating webhook configurations for sidecar injection have been properly installed on the remote cluster using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfiguration --context=\"${CTX_REMOTE_CLUSTER}\"\nNAME                                         WEBHOOKS   AGE\nistio-revision-tag-default-external-istiod   4          2m2s\nistio-sidecar-injector-external-istiod       4          2m5s\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Sidecar for Local Port Forwarding\nDESCRIPTION: Example of an Istio Sidecar configuration that enables forwarding traffic from the mesh to a localhost-bound application on port 8080.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0143/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Sidecar\nmetadata:\n  name: ratings\nspec:\n  workloadSelector:\n    labels:\n      app: netcat\n  ingress:\n  - port:\n      number: 8080\n      protocol: TCP\n      name: tcp\n    defaultEndpoint: 127.0.0.1:8080\n```\n\n----------------------------------------\n\nTITLE: Applying v1alpha3 Routing Rules in Istio\nDESCRIPTION: This command shows how to apply updated routing rules for a destination using Istio's v1alpha3 routing API. It uses kubectl to apply a YAML file containing the VirtualService resource with all rules for the destination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f my-updated-rules-for-destination-abc.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring IstioOperator for Dual-Stack Support\nDESCRIPTION: This YAML configuration enables dual-stack support in Istio using IstioOperator. It sets the necessary proxy metadata and environment variables, and optionally configures gateways for dual-stack.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        ISTIO_DUAL_STACK: \"true\"\n  values:\n    pilot:\n      env:\n        ISTIO_DUAL_STACK: \"true\"\n    # The below values are optional and can be used based on your requirements\n    gateways:\n      istio-ingressgateway:\n        ipFamilyPolicy: RequireDualStack\n      istio-egressgateway:\n        ipFamilyPolicy: RequireDualStack\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Istio Sidecar Injection Template in YAML\nDESCRIPTION: This YAML snippet shows how to define a custom Istio sidecar injection template using IstioOperator, which adds a GREETING environment variable to the istio-proxy container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: istio\nspec:\n  values:\n    sidecarInjectorWebhook:\n      templates:\n        custom: |\n          spec:\n            containers:\n            - name: istio-proxy\n              env:\n              - name: GREETING\n                value: hello-world\n```\n\n----------------------------------------\n\nTITLE: Proxy Protocol Configuration - Istio APIs\nDESCRIPTION: IstioOperator configuration showing how to enable PROXY Protocol support for ingress gateway on AWS EKS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogEncoding: JSON\n    accessLogFile: /dev/stdout\n    defaultConfig:\n      gatewayTopology:\n        proxyProtocol: {}\n  components:\n    ingressGateways:\n    - enabled: true\n      name: istio-ingressgateway\n      k8s:\n        hpaSpec:\n          maxReplicas: 10\n          minReplicas: 5\n        serviceAnnotations:\n          service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: \"*\"\n        ...\n```\n\n----------------------------------------\n\nTITLE: Installing East-West Gateway on Primary Cluster (Bash)\nDESCRIPTION: Installs the east-west gateway on the primary cluster (cluster1) using a generated configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n@samples/multicluster/gen-eastwest-gateway.sh@ \\\n    --network network1 | \\\n    istioctl --context=\"${CTX_CLUSTER1}\" install -y -f -\n```\n\n----------------------------------------\n\nTITLE: Applying Virtual Services for Reviews and Ratings in Istio Bookinfo\nDESCRIPTION: This bash command applies virtual services to route traffic to specific versions of the reviews and ratings services in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-ratings-mysql.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring CryptoMB Private Key Provider Mesh-wide in Istio\nDESCRIPTION: This snippet shows how to apply the CryptoMB private key provider configuration mesh-wide in Istio using IstioOperator custom resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/cryptomb-privatekeyprovider/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: istio-system\n  name: example-istiocontrolplane\nspec:\n  profile: demo\n  components:\n    egressGateways:\n    - name: istio-egressgateway\n      enabled: true\n    ingressGateways:\n    - name: istio-ingressgateway\n      enabled: true\n  meshConfig:\n    defaultConfig:\n      privateKeyProvider:\n        cryptomb:\n          pollDelay: 10ms\n```\n\n----------------------------------------\n\nTITLE: Viewing Detailed DLB Logs in Istio Ingress Gateway\nDESCRIPTION: This bash command retrieves and filters the logs from the Istio ingress gateway pod, focusing on DLB-related entries. It's useful for debugging and understanding the DLB behavior in detail.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -n istio-system ${POD} | grep dlb\n```\n\n----------------------------------------\n\nTITLE: Telemetry API Configuration\nDESCRIPTION: YAML configuration for enabling access logging using Telemetry API with OpenTelemetry provider.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/otel-provider/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: curl-logging\nspec:\n  selector:\n    matchLabels:\n      app: curl\n  accessLogging:\n    - providers:\n      - name: otel\n```\n\n----------------------------------------\n\nTITLE: Verifying MongoDB TLS Support\nDESCRIPTION: Command to check if MongoDB server supports TLS connection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nopenssl s_client -connect $MONGODB_HOST:$MONGODB_PORT -servername $MONGODB_HOST\n```\n\n----------------------------------------\n\nTITLE: Adding Images with Hugo Shortcode in Markdown\nDESCRIPTION: Demonstrates how to use the image shortcode to add images to Istio documentation. It shows the required fields and optional fields for the shortcode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{{</* image width=\"75%\" ratio=\"45.34%\"\n    link=\"./<image.svg>\"\n    caption=\"<The caption displayed under the image>\"\n    */>}}\n```\n\nLANGUAGE: html\nCODE:\n```\n{{</* image width=\"75%\" ratio=\"45.34%\"\n    link=\"./<image.svg>\"\n    alt=\"<Alternate text used by screen readers and when loading the image fails>\"\n    title=\"<Text that appears on mouse-over>\"\n    caption=\"<The caption displayed under the image>\"\n    */>}}\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Ingress Gateway\nDESCRIPTION: Command to install an optional Istio ingress gateway for handling incoming traffic to the mesh. Creates a dedicated namespace for the ingress gateway components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-ingress istio/gateway -n istio-ingress --create-namespace --wait\n```\n\n----------------------------------------\n\nTITLE: Verifying Application Access via Istio Ingress Gateway\nDESCRIPTION: Command to access the application's home page and extract the title, verifying that the Istio ingress gateway is correctly routing traffic to the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s $MY_INGRESS_GATEWAY_HOST:$INGRESS_PORT/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n```\n\n----------------------------------------\n\nTITLE: Testing mTLS Configuration with Cross-Namespace Requests\nDESCRIPTION: This snippet demonstrates how to test mTLS configuration by sending requests between different namespaces and observing which connections succeed or fail based on the applied policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ for from in \"foo\" \"bar\" \"legacy\"; do for to in \"foo\" \"bar\" \"legacy\"; do kubectl exec \"$(kubectl get pod -l app=curl -n ${from} -o jsonpath={.items..metadata.name})\" -c curl -n ${from} -- curl \"http://httpbin.${to}:8000/ip\" -s -o /dev/null -w \"curl.${from} to httpbin.${to}: %{http_code}\\n\"; done; done\ncurl.foo to httpbin.foo: 200\ncurl.foo to httpbin.bar: 200\ncurl.foo to httpbin.legacy: 200\ncurl.bar to httpbin.foo: 200\ncurl.bar to httpbin.bar: 200\ncurl.bar to httpbin.legacy: 200\ncurl.legacy to httpbin.foo: 000\ncommand terminated with exit code 56\ncurl.legacy to httpbin.bar: 000\ncommand terminated with exit code 56\ncurl.legacy to httpbin.legacy: 200\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS with Private Key in Envoy\nDESCRIPTION: This snippet shows a basic TLS configuration in Envoy using just a private key file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/cryptomb-privatekeyprovider/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntls_certificates:\n  certificate_chain: { \"filename\": \"/path/cert.pem\" }\n  private_key: { \"filename\": \"/path/key.pem\" }\n```\n\n----------------------------------------\n\nTITLE: Rendering Istio Gateway API Configuration Tips in HTML\nDESCRIPTION: This snippet uses Hugo shortcodes to render a tip box containing boilerplate content related to Istio Gateway API configuration. It includes information about future compatibility, API version selection, and CRD installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/boilerplates/gateway-api-support.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{{< tip >}}\n{{< boilerplate gateway-api-future >}}\n{{< boilerplate gateway-api-choose >}}\n\n{{< boilerplate gateway-api-install-crds >}}\n\n{{< /tip >}}\n```\n\n----------------------------------------\n\nTITLE: Setting Default Network for cluster1 in Bash\nDESCRIPTION: Sets the network label for the istio-system namespace in cluster1 to 'network1' if the namespace already exists.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --context=\"${CTX_CLUSTER1}\" get namespace istio-system && \\\n  kubectl --context=\"${CTX_CLUSTER1}\" label namespace istio-system topology.istio.io/network=network1\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access and Sitemap for Istio.io\nDESCRIPTION: This robots.txt file specifies rules for web crawlers accessing the Istio.io website. It allows unrestricted access to all pages and provides the location of the sitemap file for more efficient crawling.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.2/zh/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.2/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Gathering Multi-cluster Network Information\nDESCRIPTION: Collects cluster CIDR ranges and network tags for multi-cluster communication setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gke/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nfunction join_by { local IFS=\"$1\"; shift; echo \"$*\"; }\nALL_CLUSTER_CIDRS=$(gcloud --project $PROJECT_ID container clusters list --format='value(clusterIpv4Cidr)' | sort | uniq)\nALL_CLUSTER_CIDRS=$(join_by , $(echo \"${ALL_CLUSTER_CIDRS}\"))\nALL_CLUSTER_NETTAGS=$(gcloud --project $PROJECT_ID compute instances list --format='value(tags.items.[0])' | sort | uniq)\nALL_CLUSTER_NETTAGS=$(join_by , $(echo \"${ALL_CLUSTER_NETTAGS}\"))\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthorizationPolicy with CUSTOM Action in Istio\nDESCRIPTION: An example AuthorizationPolicy that uses the CUSTOM action to delegate authorization to an external service for requests to /admin/* paths on the ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: ext-authz\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      app: istio-ingressgateway\n  action: CUSTOM\n  provider:\n    name: \"my-ext-authz-service\"\n  rules:\n  - to:\n    - operation:\n        paths: [\"/admin/*\"]\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for Istio and Cert-Manager in Bash\nDESCRIPTION: This set of commands removes the created namespaces, uninstalls Istio and cert-manager, deletes related resources, and cleans up environment variables and files.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns foo\n$ kubectl delete ns bar\n$ istioctl uninstall --purge -y\n$ helm delete -n cert-manager cert-manager\n$ kubectl delete ns istio-system cert-manager\n$ unset ISTIOCA FOOCA BARCA\n$ rm -rf istio.yaml proxyconfig-foo.yaml proxyconfig-bar.yaml selfsigned-issuer.yaml\n```\n\n----------------------------------------\n\nTITLE: Examining Ratings Virtual Service with HTTP Abort Configuration\nDESCRIPTION: Command to view the configuration of the ratings virtual service with abort fault injection, showing the HTTP 500 error that applies to user 'jason'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/fault-injection/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get virtualservice ratings -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\n...\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      abort:\n        httpStatus: 500\n        percentage:\n          value: 100\n    match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Creating Web Application Protection Policy with OIDC\nDESCRIPTION: YAML configuration for creating a Policy resource that defines web application protection using OIDC. This includes target service, paths to protect, and optional token validation rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/app-identity-and-access-adapter/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.cloud.ibm.com/v1\"\nkind: Policy\nmetadata:\n    name: my-sample-web-policy\n    namespace: sample-namespace\nspec:\n    targets:\n    - serviceName: <kubernetes-service-name-to-protect>\n        paths:\n        - prefix: /webapp\n            method: ALL\n            policies:\n            - policyType: oidc\n                config: my-oidc-provider-config\n                rules: // optional\n                - claim: iss\n                    match: ALL\n                    source: access_token\n                    values:\n                    - <expected-issuer-id>\n                - claim: scope\n                    match: ALL\n                    source: access_token\n                    values:\n                    - openid\n```\n\n----------------------------------------\n\nTITLE: Configure Tracing Gateway and Routing\nDESCRIPTION: Kubernetes configurations to expose Tracing service securely via HTTPS using Gateway, VirtualService, and DestinationRule resources\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: tracing-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https-tracing\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: telemetry-gw-cert\n    hosts:\n    - \"tracing.${INGRESS_DOMAIN}\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: tracing-vs\n  namespace: istio-system\nspec:\n  hosts:\n  - \"tracing.${INGRESS_DOMAIN}\"\n  gateways:\n  - tracing-gateway\n  http:\n  - route:\n    - destination:\n        host: tracing\n        port:\n          number: 80\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: tracing\n  namespace: istio-system\nspec:\n  host: tracing\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Filtering Access Logs with CEL Expression by Response Code\nDESCRIPTION: Configuration to filter access logs using Common Expression Language (CEL) to only show logs when the response code is 500 or greater. This targets the curl service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n default -f -\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: filter-curl-logging\nspec:\n  selector:\n    matchLabels:\n      app: curl\n  accessLogging:\n  - providers:\n    - name: otel\n    filter:\n      expression: response.code >= 500\nEOF\n```\n\n----------------------------------------\n\nTITLE: Updated Workload Authorization Policy Reference\nDESCRIPTION: Configuration showing how workload references its authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workloads\": {\n    \"10.244.2.8\": {\n    \"workloadIp\": \"10.244.2.8\",\n    ...\n    \"authorizationPolicies\": [\n        \"default/hw-viewer\"\n    ],\n  }\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Group and AKS Cluster in Azure CLI\nDESCRIPTION: These commands create a resource group and deploy an AKS cluster. They require replacing 'myResourceGroup', 'myAKSCluster', 'my location', and potentially the Kubernetes version '1.28.3' with desired values.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/azure/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ az group create --name myResourceGroup --location \"my location\"\n$ az aks create --resource-group myResourceGroup --name myAKSCluster --node-count 3 --kubernetes-version 1.28.3 --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Zipkin Extension Provider\nDESCRIPTION: Configuration for installing Istio with Zipkin tracing extension provider. Sets up the connection to Zipkin service in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/telemetry-api/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./tracing.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing: {} # disable legacy MeshConfig tracing options\n    extensionProviders:\n    - name: \"zipkin\"\n      zipkin:\n        service: zipkin.istio-system.svc.cluster.local\n        port: 9411\nEOF\n$ istioctl install -f ./tracing.yaml --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Adding Istioctl Client to System Path\nDESCRIPTION: Command to add the istioctl client binary to the system path for easy access in Linux or macOS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export PATH=$PWD/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Deleting Previous Istio Gateway Configuration\nDESCRIPTION: Commands to remove existing gateway, virtual service, destination rule, and policy configurations for cleanup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete gateway istio-egressgateway --ignore-not-found=true\nkubectl delete virtualservice direct-mongo-through-egress-gateway --ignore-not-found=true\nkubectl delete destinationrule egressgateway-for-mongo mongo --ignore-not-found=true\nkubectl delete policy istio-egressgateway -n istio-system --ignore-not-found=true\n```\n\n----------------------------------------\n\nTITLE: Installing Istio CNI with GKE Platform Profile\nDESCRIPTION: Helm command to install Istio CNI with GKE-specific configuration overrides for nonstandard CNI binary locations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-cni istio/cni -n istio-system --set profile=ambient --set global.platform=gke --wait\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Custom Trust Domain\nDESCRIPTION: Installs Istio demo profile with a custom trust domain 'old-td' and mutual TLS enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-td-migration/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=demo --set meshConfig.trustDomain=old-td\n```\n\n----------------------------------------\n\nTITLE: Cleaning up HTTP egress gateway with Gateway API\nDESCRIPTION: Removes the previously created resources for the HTTP egress gateway scenario when using Gateway API, including the ServiceEntry, Gateway, and HTTPRoute resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry cnn\n$ kubectl delete gtw cnn-egress-gateway\n$ kubectl delete httproute direct-cnn-to-egress-gateway\n$ kubectl delete httproute forward-cnn-from-egress-gateway\n```\n\n----------------------------------------\n\nTITLE: Defining External Istiod IstioOperator Configuration in YAML\nDESCRIPTION: Creates an IstioOperator configuration that sets up the control plane in the external cluster's 'external-istiod' namespace with specific settings for external operation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > external-istiod.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: external-istiod\nspec:\n  profile: empty\n  meshConfig:\n    rootNamespace: external-istiod\n    defaultConfig:\n      discoveryAddress: $EXTERNAL_ISTIOD_ADDR:15012\n      proxyMetadata:\n        XDS_ROOT_CA: /etc/ssl/certs/ca-certificates.crt\n        CA_ROOT_CA: /etc/ssl/certs/ca-certificates.crt\n  components:\n    pilot:\n      enabled: true\n      k8s:\n        overlays:\n        - kind: Deployment\n          name: istiod\n          patches:\n          - path: spec.template.spec.volumes[100]\n            value: |-\n              name: config-volume\n              configMap:\n                name: istio\n          - path: spec.template.spec.volumes[100]\n            value: |-\n              name: inject-volume\n              configMap:\n                name: istio-sidecar-injector\n          - path: spec.template.spec.containers[0].volumeMounts[100]\n            value: |-\n              name: config-volume\n              mountPath: /etc/istio/config\n          - path: spec.template.spec.containers[0].volumeMounts[100]\n            value: |-\n              name: inject-volume\n              mountPath: /var/lib/istio/inject\n        env:\n        - name: INJECTION_WEBHOOK_CONFIG_NAME\n          value: \"\"\n        - name: VALIDATION_WEBHOOK_CONFIG_NAME\n          value: \"\"\n        - name: EXTERNAL_ISTIOD\n          value: \"true\"\n        - name: LOCAL_CLUSTER_SECRET_WATCHER\n          value: \"true\"\n        - name: CLUSTER_ID\n          value: ${REMOTE_CLUSTER_NAME}\n        - name: SHARED_MESH_CONFIG\n          value: istio\n  values:\n    global:\n      caAddress: $EXTERNAL_ISTIOD_ADDR:15012\n      istioNamespace: external-istiod\n      operatorManageWebhooks: true\n      configValidation: false\n      meshID: mesh1\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Control Plane on cluster1 using Helm\nDESCRIPTION: Installs the Istio control plane (istiod) on cluster1 using Helm with multi-cluster configuration parameters including meshID, clusterName, and network settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --kube-context \"${CTX_CLUSTER1}\" --set global.meshID=mesh1 --set global.multiCluster.clusterName=cluster1 --set global.network=network1\n```\n\n----------------------------------------\n\nTITLE: Corrected Virtual Service for TLS Termination Gateway\nDESCRIPTION: YAML snippet showing the correct virtual service configuration to use with a gateway that terminates TLS. It uses HTTP routing instead of TLS routing since the gateway has already terminated TLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  ...\n  http:\n  - match:\n    - headers:\n        \":authority\":\n          regex: \"*.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Prometheus TCP Connections Opened Metric Example\nDESCRIPTION: Example of the istio_tcp_connections_opened_total metric as displayed in Prometheus. This shows TCP connections opened to the ratings-v2 service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_8\n\nLANGUAGE: plain\nCODE:\n```\nistio_tcp_connections_opened_total{\ndestination_version=\"v1\",\ninstance=\"172.17.0.18:42422\",\njob=\"istio-mesh\",\ncanonical_service_name=\"ratings-v2\",\ncanonical_service_revision=\"v2\"}\n```\n\n----------------------------------------\n\nTITLE: Deleting the MySQL Service During Cleanup\nDESCRIPTION: Command to delete the MySQL service during cleanup. This is part of the teardown process for the example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete service mysqldb\n```\n\n----------------------------------------\n\nTITLE: Listing Multiple Revision Tags\nDESCRIPTION: Command to list all revision tags after setting up both stable and canary versions. This shows how different namespaces can use different control plane revisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x revision tag list\n\nTAG         REVISION NAMESPACES\nprod-stable 1-9-5    istioinaction\nprod-canary 1-10-0   istioinaction-canary\n```\n\n----------------------------------------\n\nTITLE: Deploying Custom Egress Gateway\nDESCRIPTION: Bash command to generate and apply the manifest for the custom egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate -f egress.yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Test Workload\nDESCRIPTION: Kubernetes deployment configuration for a curl container that will be used to test the httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: curl\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: curl\n  template:\n    metadata:\n      labels:\n        app: curl\n    spec:\n      containers:\n      - name: curl\n        image: curlimages/curl\n        command: [\"/bin/sleep\",\"3650d\"]\n        imagePullPolicy: IfNotPresent\n```\n\n----------------------------------------\n\nTITLE: Routing All Traffic to v1 Using Istio APIs\nDESCRIPTION: This command applies a VirtualService to route all traffic to the v1 version of the reviews service using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Port-Level mTLS Settings in Peer Authentication\nDESCRIPTION: This snippet demonstrates how to create a PeerAuthentication policy that enables strict mTLS on all ports except for port 8080, which has mTLS disabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n bar -f -\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"httpbin\"\n  namespace: \"bar\"\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  mtls:\n    mode: STRICT\n  portLevelMtls:\n    8080:\n      mode: DISABLE\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Traffic Shifting with VirtualService in Istio for gRPC Services\nDESCRIPTION: Creates a VirtualService resource to split traffic between two service versions (v1 and v2) with 20% going to v1 and 80% going to v2. This demonstrates weighted traffic distribution for gRPC services using Istio's traffic management.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -f -\napiVersion: networking.istio.io/v1beta1\nkind: VirtualService\nmetadata:\n  name: echo-weights\n  namespace: echo-grpc\nspec:\n  hosts:\n  - echo.echo-grpc.svc.cluster.local\n  http:\n  - route:\n    - destination:\n        host: echo.echo-grpc.svc.cluster.local\n        subset: v1\n      weight: 20\n    - destination:\n        host: echo.echo-grpc.svc.cluster.local\n        subset: v2\n      weight: 80\nEOF\n```\n\n----------------------------------------\n\nTITLE: Labeling Application for Policy Enforcement\nDESCRIPTION: Adds the required label to the application deployment to enable policy enforcement.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl patch deploy httpbin -n my-app --type=merge -p='{\n  \"spec\": {\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"ext-authz\": \"enabled\"\n        }\n      }\n    }\n  }\n}'\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio using Helm\nDESCRIPTION: Commands to remove Istio components from both clusters using Helm, including namespace and CRD cleanup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nhelm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER1}\"\nhelm delete istio-eastwestgateway -n istio-system --kube-context \"${CTX_CLUSTER1}\"\nhelm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER1}\"\nkubectl delete ns istio-system --context=\"${CTX_CLUSTER1}\"\nhelm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER2}\"\nhelm delete istio-eastwestgateway -n istio-system --kube-context \"${CTX_CLUSTER2}\"\nhelm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER2}\"\nkubectl delete ns istio-system --context=\"${CTX_CLUSTER2}\"\nkubectl get crd -oname --context \"${CTX_CLUSTER1}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER1}\"\nkubectl get crd -oname --context \"${CTX_CLUSTER2}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Updating Policy with HTTP-only Field\nDESCRIPTION: Updates the authorization policy to include an HTTP-only field 'methods' for port 9000.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: tcp-policy\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: tcp-echo\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        methods: [\"GET\"]\n        ports: [\"9000\"]\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Release Documentation\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.15.5 release announcement page, including title, publication date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.15.x/announcing-1.15.5/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.15.5\nlinktitle: 1.15.5\nsubtitle: Patch Release\ndescription: Istio 1.15.5 patch release.\npublishdate: 2023-01-30\nrelease: 1.15.5\naliases:\n    - /news/announcing-1.15.5\n---\n```\n\n----------------------------------------\n\nTITLE: Setting the MYHOST Environment Variable in Bash\nDESCRIPTION: Sets an environment variable to hold the URL of the Bookinfo application based on the current Kubernetes context namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export MYHOST=$(kubectl config view -o jsonpath={.contexts..namespace}).bookinfo.com\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Gateway API CRDs\nDESCRIPTION: This command installs the Kubernetes Gateway API Custom Resource Definitions (CRDs) if they don't already exist in the cluster. It uses kustomize to fetch the CRDs from the kubernetes-sigs repository.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crd gateways.gateway.networking.k8s.io --context=\"${CTX_REMOTE_CLUSTER}\" &> /dev/null || \\\n  { kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd?ref={{< k8s_gateway_api_version >}}\" | kubectl apply -f - --context=\"${CTX_REMOTE_CLUSTER}\"; }\n```\n\n----------------------------------------\n\nTITLE: Configuring Hosts Field in Istio Virtual Service\nDESCRIPTION: Example of configuring the hosts field in an Istio Virtual Service, which specifies the destination(s) that routing rules apply to. This can be an IP address, DNS name, or a Kubernetes service short name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhosts:\n- reviews\n```\n\n----------------------------------------\n\nTITLE: Checking Cross-Namespace Network Connectivity in Bash\nDESCRIPTION: This command attempts to connect from the 'curl' pod in the 'foo' namespace to the 'httpbin' service in the 'bar' namespace, expecting a failure due to certificate verification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$CURL_POD_FOO\" -n foo -c curl -- curl http://httpbin.bar:8000/html\n```\n\n----------------------------------------\n\nTITLE: Configuring Hosts Field in Istio Virtual Service\nDESCRIPTION: Example of configuring the hosts field in an Istio Virtual Service, which specifies the destination(s) that routing rules apply to. This can be an IP address, DNS name, or a Kubernetes service short name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhosts:\n- reviews\n```\n\n----------------------------------------\n\nTITLE: Modifying CNN Access Policy Rule\nDESCRIPTION: Updates the handle-cnn-access rule to include path checking using the configured listchecker adapter. This rule manages both logging and access control for CNN domain requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: \"config.istio.io/v1alpha2\"\nkind: rule\nmetadata:\n  name: handle-cnn-access\n  namespace: istio-system\nspec:\n  match: request.host.endsWith(\".cnn.com\") && context.reporter.uid.startsWith(\"kubernetes://istio-egressgateway\")\n  actions:\n  - handler: egress-access-logger.stdio\n    instances:\n      - egress-access.logentry\n  - handler: path-checker.listchecker\n    instances:\n      - request-path.listentry\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio-injected Workloads\nDESCRIPTION: Creates a namespace 'foo' and deploys Istio-injected 'tcp-echo' and 'curl' workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/tcp-echo/tcp-echo.yaml@) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n foo\n```\n\n----------------------------------------\n\nTITLE: Enabling Basic Tracing Configuration\nDESCRIPTION: Basic configuration to enable tracing in Istio using the Telemetry API with Zipkin provider.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/telemetry-api/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n  - providers:\n    - name: \"zipkin\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio 1.25.x Release Page\nDESCRIPTION: YAML frontmatter configuration that defines the structure and metadata for the Istio 1.25.x releases documentation page. Specifies the title, description, weight for navigation ordering, layout template, and visual decoration style.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.25.x Releases\ndescription: Announcements for the 1.25 release and its associated patch releases.\nweight: 6\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Tracing Providers in Istio MeshConfig\nDESCRIPTION: This YAML snippet demonstrates how to configure tracing providers in Istio's MeshConfig. It defines two providers: 'localtrace' using Zipkin and 'cloudtrace' using Stackdriver.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/telemetry/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  mesh: |-\n      extensionProviders: # The following content defines two example tracing providers.\n      - name: \"localtrace\"\n        zipkin:\n          service: \"zipkin.istio-system.svc.cluster.local\"\n          port: 9411\n          maxTagLength: 56\n      - name: \"cloudtrace\"\n        stackdriver:\n          maxTagLength: 256\n```\n\n----------------------------------------\n\nTITLE: Setting up MySQL Authentication\nDESCRIPTION: Commands to configure MySQL authentication by granting full privileges to the root user and allowing connections from any IP. This enables the ratings service to connect to the database from Kubernetes pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | sudo mysql\n# Grant access to root\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY 'password' WITH GRANT OPTION;\n# Grant root access to other IPs\nCREATE USER 'root'@'%' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;\nFLUSH PRIVILEGES;\nquit;\nEOF\n$ sudo systemctl restart mysql\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Istio System Namespace with PSA\nDESCRIPTION: Commands to create istio-system namespace and label it for privileged pod security policy enforcement.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/pod-security-admission/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-system\n$ kubectl label --overwrite ns istio-system \\\n    pod-security.kubernetes.io/enforce=privileged \\\n    pod-security.kubernetes.io/enforce-version=latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Mutual TLS Policy for Egress Gateway\nDESCRIPTION: Kubernetes configuration to enforce mutual TLS authentication for the istio-egressgateway service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: authentication.istio.io/v1alpha1\nkind: Policy\nmetadata:\n  name: istio-egressgateway\n  namespace: istio-system\nspec:\n  targets:\n  - name: istio-egressgateway\n  peers:\n  - mtls: {}\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Custom K3s CNI Paths\nDESCRIPTION: Helm command to install Istio with custom CNI configuration paths for K3s environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-cni istio/cni -n istio-system --set profile=ambient --wait --set cniConfDir=/var/lib/rancher/k3s/agent/etc/cni/net.d --set cniBinDir=/var/lib/rancher/k3s/data/current/bin/\n```\n\n----------------------------------------\n\nTITLE: Cilium ClusterWide Network Policy for Ambient Mode Compatibility\nDESCRIPTION: YAML definition for a CiliumClusterwideNetworkPolicy that allows SNAT-ed kubelet health check probes into ambient pods. This policy is required when using Cilium with default-deny NetworkPolicies alongside Istio ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"cilium.io/v2\"\nkind: CiliumClusterwideNetworkPolicy\nmetadata:\n  name: \"allow-ambient-hostprobes\"\nspec:\n  description: \"Allows SNAT-ed kubelet health check probes into ambient pods\"\n  enableDefaultDeny:\n    egress: false\n    ingress: false\n  endpointSelector: {}\n  ingress:\n  - fromCIDR:\n    - \"169.254.7.127/32\"\n```\n\n----------------------------------------\n\nTITLE: Simulating Constant User Traffic\nDESCRIPTION: Creates an infinite loop that sends requests to the Bookinfo application every second to simulate real-world user traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ while :; do curl -s $MYHOST/productpage | grep -o \"<title>.*</title>\"; sleep 1; done\n<title>Simple Bookstore App</title>\n<title>Simple Bookstore App</title>\n<title>Simple Bookstore App</title>\n<title>Simple Bookstore App</title>\n...\n```\n\n----------------------------------------\n\nTITLE: Limiting Service Mesh Communication with Istio Sidecar (YAML)\nDESCRIPTION: This Sidecar configuration restricts all services in the bookinfo namespace to only communicate with other services in the same namespace and services in the istio-system namespace. This helps optimize mesh performance by limiting unnecessary proxy configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Sidecar\nmetadata:\n  name: default\n  namespace: bookinfo\nspec:\n  egress:\n  - hosts:\n    - \"./*\"\n    - \"istio-system/*\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Control Plane on cluster2 using Helm\nDESCRIPTION: Installs the Istio control plane (istiod) on cluster2 using Helm with multi-cluster configuration parameters, ensuring it shares the same meshID but has its own unique clusterName.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --kube-context \"${CTX_CLUSTER2}\" --set global.meshID=mesh1 --set global.multiCluster.clusterName=cluster2 --set global.network=network1\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Destination Rules with Mutual TLS for Bookinfo\nDESCRIPTION: Alternative command to apply destination rules with mutual TLS enabled for Bookinfo microservices. This should be used only if mutual TLS is enabled in the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/destination-rule-all-mtls.yaml@\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespace for Istio Discovery in Bash\nDESCRIPTION: This command labels the default namespace with 'istio-discovery=enabled' to include it in the Istio service mesh discovery.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/discovery-selectors/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-discovery=enabled\n```\n\n----------------------------------------\n\nTITLE: Accessing Headless Service with Domain Name\nDESCRIPTION: Bash commands showing how to access a specific pod of a headless service using its domain name instead of Pod IP. This approach provides a reliable way to reach individual StatefulSet pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath='{.items..metadata.name}')\n$ kubectl exec -it $SOURCE_POD -c curl -- curl web-0.nginx.default -s -o /dev/null -w \"%{http_code}\"\n  200\n```\n\n----------------------------------------\n\nTITLE: Getting Cluster2 Gateway Address\nDESCRIPTION: Command to retrieve the public IP address of the Istio ingress gateway in the second cluster, which will be used as an endpoint for cross-cluster communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ export CLUSTER2_GW_ADDR=$(kubectl get --context=$CTX_CLUSTER2 svc --selector=app=istio-ingressgateway \\\n    -n istio-system -o jsonpath=\"{.items[0].status.loadBalancer.ingress[0].ip}\")\n```\n\n----------------------------------------\n\nTITLE: Configuring CryptoMB Private Key Provider for Istio Sidecar using Pod Annotations\nDESCRIPTION: This snippet shows how to apply the CryptoMB private key provider configuration to specific application pods using pod annotations in a Kubernetes Deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/cryptomb-privatekeyprovider/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: httpbin\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  labels:\n    app: httpbin\n    service: httpbin\nspec:\n  ports:\n  - name: http\n    port: 8000\n    targetPort: 80\n  selector:\n    app: httpbin\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: httpbin\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: httpbin\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: httpbin\n        version: v1\n      annotations:\n        proxy.istio.io/config: |\n          privateKeyProvider:\n            cryptomb:\n              pollDelay: 10ms\n    spec:\n      serviceAccountName: httpbin\n      containers:\n      - image: docker.io/kennethreitz/httpbin\n        imagePullPolicy: IfNotPresent\n        name: httpbin\n        ports:\n        - containerPort: 80\n```\n\n----------------------------------------\n\nTITLE: Enforcing mTLS with Istio PeerAuthentication in YAML\nDESCRIPTION: Creates a PeerAuthentication object to enforce mutual TLS (mTLS) for service-to-service communication within the mesh. It sets the mTLS mode to STRICT for the httpbin namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"PeerAuthentication\"\nmetadata:\n  name: \"httpbin-egress\"\n  namespace: \"httpbin\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus TLS Certificate Volume Mounts\nDESCRIPTION: Kubernetes configuration for mounting TLS certificates in Prometheus container for secure metrics collection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/prometheus/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncontainers:\n  - name: prometheus-server\n    ...\n    volumeMounts:\n      mountPath: /etc/prom-certs/\n      name: istio-certs\nvolumes:\n  - emptyDir:\n      medium: Memory\n    name: istio-certs\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart\nDESCRIPTION: Command to install the Istio base chart containing cluster-wide Custom Resource Definitions (CRDs) with default revision setting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --set defaultRevision=default --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Testing Port-Level mTLS Configuration\nDESCRIPTION: This snippet shows testing of the port-level mTLS configuration by sending requests between different namespaces, demonstrating that mTLS requirements can be applied selectively by port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ for from in \"foo\" \"bar\" \"legacy\"; do for to in \"foo\" \"bar\" \"legacy\"; do kubectl exec \"$(kubectl get pod -l app=curl -n ${from} -o jsonpath={.items..metadata.name})\" -c curl -n ${from} -- curl \"http://httpbin.${to}:8000/ip\" -s -o /dev/null -w \"curl.${from} to httpbin.${to}: %{http_code}\\n\"; done; done\ncurl.foo to httpbin.foo: 200\ncurl.foo to httpbin.bar: 200\ncurl.foo to httpbin.legacy: 200\ncurl.bar to httpbin.foo: 200\ncurl.bar to httpbin.bar: 200\ncurl.bar to httpbin.legacy: 200\ncurl.legacy to httpbin.foo: 000\ncommand terminated with exit code 56\ncurl.legacy to httpbin.bar: 200\ncurl.legacy to httpbin.legacy: 200\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway and VirtualService for Mutual TLS in YAML\nDESCRIPTION: These YAML configurations define an Istio Gateway resource to enable mutual TLS on port 443 and a VirtualService to route incoming traffic to the appropriate service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: default-ingress-gateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default ingress gateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: MUTUAL\n      credentialName: $INGRESS_GATEWAY_SECRET\n    hosts:\n    - \"$INGRESS_GATEWAY_DOMAIN\"\n    - \"httpbin.$ALB_INGRESS_DOMAIN\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: default-ingress\nspec:\n  hosts:\n  - \"$INGRESS_GATEWAY_DOMAIN\"\n  - \"httpbin.$ALB_INGRESS_DOMAIN\"\n  gateways:\n  - default-ingress-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /status\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin.httptools.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Upgrading Istio Base CRDs\nDESCRIPTION: Upgrades the Istio Custom Resource Definitions using Helm\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-base istio/base -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Modifying Remote Config Cluster Configuration for IP-based Addresses\nDESCRIPTION: Modifies the remote-config-cluster.yaml file using sed to replace URLs with direct address settings when using IP addresses instead of DNS hostnames. This is not recommended for production environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ sed  -i'.bk' \\\n  -e \"s|injectionURL: https://${EXTERNAL_ISTIOD_ADDR}:15017|injectionPath: |\" \\\n  -e \"/istioNamespace:/a\\\\\n      remotePilotAddress: ${EXTERNAL_ISTIOD_ADDR}\" \\\n  -e '/base:/,+1d' \\\n  remote-config-cluster.yaml; rm remote-config-cluster.yaml.bk\n```\n\n----------------------------------------\n\nTITLE: Fixed Deployment with Valid UID Configuration in Istio\nDESCRIPTION: Corrected Kubernetes Deployment that uses UID 1338 instead of the reserved 1337 value. This configuration avoids conflicts with Istio's proxy container by using a different UID for the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0144/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: deploy-con-sec-uid\n  labels:\n    app: helloworld\n    version: v1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: helloworld\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: helloworld\n        version: v1\n    spec:\n      securityContext:\n        runAsUser: 1338\n      containers:\n      - name: helloworld\n        image: docker.io/istio/examples-helloworld-v1\n        securityContext:\n          runAsUser: 1338\n        resources:\n          requests:\n            cpu: \"100m\"\n        imagePullPolicy: IfNotPresent #Always\n        ports:\n        - containerPort: 5000\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for External Service Access in Istio\nDESCRIPTION: Defines a ServiceEntry resource to enable access to edition.cnn.com via both HTTP (port 80) and HTTPS (port 443) protocols. This configuration allows applications within the mesh to communicate with this external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: edition-cnn-com\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 80\n    name: http-port\n    protocol: HTTP\n  - number: 443\n    name: https-port\n    protocol: HTTPS\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Downloading Specific Istio Version for Target Architecture\nDESCRIPTION: Command to download a specific version of Istio for a particular processor architecture by passing variables to the download script.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | ISTIO_VERSION={{< istio_full_version >}} TARGET_ARCH=x86_64 sh -\n```\n\n----------------------------------------\n\nTITLE: Applying Waypoint Proxy\nDESCRIPTION: Command to directly deploy a waypoint proxy to the default namespace using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint apply -n default\n```\n\n----------------------------------------\n\nTITLE: Running Istio Precheck for Upgrade Compatibility\nDESCRIPTION: This command runs the 'istioctl x precheck' to ensure the upgrade is compatible with the current environment. It verifies that there are no issues before proceeding with the Istio installation or upgrade.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/all-in-one/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x precheck\n```\n\n----------------------------------------\n\nTITLE: Handling Tracing Headers in Java REST Endpoint\nDESCRIPTION: This Java code snippet shows how to handle tracing headers in a REST endpoint for a reviews application. It demonstrates passing the request headers to downstream services, which is crucial for maintaining the tracing context across service calls.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/overview/index.md#2025-04-08_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@GET\n@Path(\"/reviews/{productId}\")\npublic Response bookReviewsById(@PathParam(\"productId\") int productId, @Context HttpHeaders requestHeaders) {\n\n  // ...\n\n  if (ratings_enabled) {\n    JsonObject ratingsResponse = getRatings(Integer.toString(productId), requestHeaders);\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Manifest with Custom Profile and Overlay\nDESCRIPTION: This command generates an Istio manifest using a custom profile and user overlay file. It demonstrates how to use local charts and apply multiple configuration layers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate --manifests mycharts/ --set profile=custom1 -f path-to-user-overlay.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring robots.txt for Istio Documentation Website\nDESCRIPTION: This configuration allows all user agents unrestricted access to the website and specifies the location of the sitemap. It ensures that search engines can properly index the Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.19/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.19/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Viewing Istio Access Logs in Plain Text Format\nDESCRIPTION: Example of an Istio access log entry that provides a detailed record of a single request, including timestamp, HTTP method, status code, and service information. Access logs allow operators to monitor and understand behavior from the perspective of individual workload instances.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/observability/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n[2019-03-06T09:31:27.360Z] \"GET /status/418 HTTP/1.1\" 418 - \"-\" 0 135 5 2 \"-\" \"curl/7.60.0\" \"d209e46f-9ed5-9b61-bbdd-43e22662702a\" \"httpbin:8000\" \"127.0.0.1:80\" inbound|8000|http|httpbin.default.svc.cluster.local - 172.30.146.73:80 172.30.146.82:38618 outbound_.8000_._.httpbin.default.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Disabling REQUEST_COUNT Metrics for Client Only (YAML)\nDESCRIPTION: Telemetry API configuration to disable the REQUEST_COUNT metric only in client mode, leaving server-side metrics enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: remove-client\n  namespace: istio-system\nspec:\n  metrics:\n    - providers:\n        - name: prometheus\n      overrides:\n        - disabled: true\n          match:\n            mode: CLIENT\n            metric: REQUEST_COUNT\n```\n\n----------------------------------------\n\nTITLE: Downloading Specific Istio Version\nDESCRIPTION: Command to download a specific version of Istio with custom architecture specification. Example shows downloading for x86_64 architecture.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/download-istio-release/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | ISTIO_VERSION={{< istio_full_version >}} TARGET_ARCH=x86_64 sh -\n```\n\n----------------------------------------\n\nTITLE: Enabling Automatic Sidecar Injection in Default Namespace\nDESCRIPTION: Command to label the default namespace for automatic Envoy sidecar proxy injection when deploying applications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\nnamespace/default labeled\n```\n\n----------------------------------------\n\nTITLE: Configuring ingress-nginx Service Routing Annotation\nDESCRIPTION: YAML configuration for enabling service routing in ingress-nginx through an Ingress resource annotation. This allows proper mTLS functionality when using ingress-nginx with Istio sidecars.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/loadbalancers/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nnginx.ingress.kubernetes.io/service-upstream: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Istio Service Entry and TLS Configuration\nDESCRIPTION: Kubernetes configuration for creating ServiceEntry, VirtualService, and DestinationRule to enable and configure TLS origination for external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: googleapis\nspec:\n  hosts:\n  - www.googleapis.com\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  - number: 443\n    name: https\n    protocol: HTTPS\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: rewrite-port-for-googleapis\nspec:\n  hosts:\n  - www.googleapis.com\n  http:\n  - match:\n    - port: 80\n    route:\n    - destination:\n        host: www.googleapis.com\n        port:\n          number: 443\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: originate-tls-for-googleapis\nspec:\n  host: www.googleapis.com\n  trafficPolicy:\n    loadBalancer:\n      simple: ROUND_ROBIN\n    portLevelSettings:\n    - port:\n        number: 443\n      tls:\n        mode: SIMPLE # initiates HTTPS when accessing www.googleapis.com\n```\n\n----------------------------------------\n\nTITLE: Creating Tenant Application Namespace (YAML)\nDESCRIPTION: This YAML snippet creates a namespace for deploying a tenant's application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: ns-1\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from cluster1 using IstioOperator\nDESCRIPTION: Removes the Istio installation from cluster1 using istioctl uninstall command with purge option, followed by deleting the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --context=\"${CTX_CLUSTER1}\" -y --purge\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Analyzing Istio Configuration for Issues\nDESCRIPTION: Command to analyze the Istio configuration and check for any validation issues in the default namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze\n✔ No validation issues found when analyzing namespace: default.\n```\n\n----------------------------------------\n\nTITLE: Enabling Ambient Mesh for Namespace\nDESCRIPTION: Labels a namespace to enable ambient mesh for all pods within it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl label namespace default istio.io/dataplane-mode=ambient\n```\n\n----------------------------------------\n\nTITLE: Testing Istio Ingress Gateway with DLB\nDESCRIPTION: This bash script tests the Istio ingress gateway with DLB enabled. It sends a request to a specific endpoint and checks the response. The script also demonstrates how to set custom headers for testing purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport HOST=\"<YOUR-HOST-IP>\"\nexport PORT=\"$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].nodePort}')\"\ncurl -s -I -HHost:httpbin.example.com \"http://${HOST}:${PORT}/status/200\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart\nDESCRIPTION: Command to install the Istio base chart containing cluster-wide Custom Resource Definitions (CRDs) with default revision setting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --set defaultRevision=default --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Checking Istiod Endpoints\nDESCRIPTION: This command checks the endpoints for the Istiod service in the istio-system namespace. It helps verify if the Istio control plane is properly exposed and ready to handle requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/validation/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get endpoints istiod\nNAME           ENDPOINTS                          AGE\nistiod         10.48.6.108:15014,10.48.6.108:443   3d\n```\n\n----------------------------------------\n\nTITLE: Accessing the Ratings Service API in Bash\nDESCRIPTION: Uses curl to send a request to the ratings service running in the Docker container and displays the response. This verifies that the service is running correctly and accessible.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ curl localhost:9081/ratings/7\n{\"id\":7,\"ratings\":{\"Reviewer1\":5,\"Reviewer2\":4}}\n```\n\n----------------------------------------\n\nTITLE: Configuring an Istio Authorization Policy for Ingress Gateway in YAML\nDESCRIPTION: A v1beta1 AuthorizationPolicy that applies to Istio ingress gateway workloads, demonstrating the new capability to enforce access control on traffic entering the mesh through the ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: ingress\n namespace: istio-system\nspec:\n selector:\n   matchLabels:\n     app: istio-ingressgateway\n rules:\n # omitted\n```\n\n----------------------------------------\n\nTITLE: Configuring an Istio Authorization Policy for Ingress Gateway in YAML\nDESCRIPTION: A v1beta1 AuthorizationPolicy that applies to Istio ingress gateway workloads, demonstrating the new capability to enforce access control on traffic entering the mesh through the ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: ingress\n namespace: istio-system\nspec:\n selector:\n   matchLabels:\n     app: istio-ingressgateway\n rules:\n # omitted\n```\n\n----------------------------------------\n\nTITLE: Checking Ztunnel Proxy Logs for In-Pod Redirection\nDESCRIPTION: This command retrieves logs from the ztunnel daemonset in the istio-system namespace, filtering for 'inpod' related entries to confirm traffic redirection in ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/architecture/traffic-redirection/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs ds/ztunnel -n istio-system  | grep inpod\n```\n\n----------------------------------------\n\nTITLE: Monolithic Virtual Service Configuration in Istio\nDESCRIPTION: Example of a single VirtualService resource that handles path-based routing for multiple backend services through an ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myapp\nspec:\n  hosts:\n  - myapp.com\n  gateways:\n  - myapp-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /service1\n    route:\n    - destination:\n        host: service1.default.svc.cluster.local\n  - match:\n    - uri:\n        prefix: /service2\n    route:\n    - destination:\n        host: service2.default.svc.cluster.local\n  - match:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Setting KUBECONFIG Environment Variable in Bash\nDESCRIPTION: Sets the KUBECONFIG environment variable to use the newly generated configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBECONFIG=$PWD/${NAMESPACE}-user-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Gateway API Resource for httpbin\nDESCRIPTION: This snippet demonstrates how to create a Gateway API resource to expose the httpbin.foo service and wait for it to be fully configured.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/gateway-api/httpbin-gateway.yaml@ -n foo\n$ kubectl wait --for=condition=programmed gtw -n foo httpbin-gateway\n```\n\n----------------------------------------\n\nTITLE: Installing App Identity and Access Adapter with Helm from Local Repository\nDESCRIPTION: Commands to clone the App Identity and Access Adapter repository from GitHub and install it locally using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/app-identity-and-access-adapter/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:ibm-cloud-security/app-identity-and-access-adapter.git\n$ helm install ./helm/appidentityandaccessadapter --name appidentityandaccessadapter.\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio Performance Benchmarking Article\nDESCRIPTION: YAML frontmatter defining metadata for an article about benchmarking Istio service mesh performance. It includes title, description, publish date, last update date, authors, and keywords.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/performance-best-practices/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Best Practices: Benchmarking Service Mesh Performance\"\ndescription: \"Tools and guidance for evaluating Istio's data plane performance.\"\npublishdate: 2019-07-09\nlast_update: 2019-09-05\nsubtitle:\nattribution: Megan O'Keefe (Google), John Howard (Google), Mandar Jog (Google)\nkeywords: [performance,scalability,scale,benchmarks]\n---\n```\n\n----------------------------------------\n\nTITLE: Installing External Istio Configuration in Bash\nDESCRIPTION: Applies the Istio configuration on the external cluster using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f external-istiod.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Certificates with Helm\nDESCRIPTION: This YAML snippet demonstrates how to use Helm values to modify sidecar certificate settings, specifically changing the RSA key size.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/manage-mesh-certificates/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  defaultConfig:\n    proxyMetadata:\n      CITADEL_SELF_SIGNED_CA_RSA_KEY_SIZE: 4096\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart on cluster1 using Helm\nDESCRIPTION: Installs the Istio base chart on cluster1 using Helm. This is the first step in the Helm-based installation process for creating a primary Istio cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status without Istio Sidecar\nDESCRIPTION: Verifies that the deployed curl pod has a single container without an Istio sidecar attached.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod \"$(kubectl get pod -n test-egress -l app=curl -o jsonpath={.items..metadata.name})\" -n test-egress\n```\n\n----------------------------------------\n\nTITLE: Setting Helm Values via Command Line\nDESCRIPTION: Example of setting Helm configuration values through istioctl command line using the values prefix.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set values.pilot.traceSampling=0.1\n```\n\n----------------------------------------\n\nTITLE: Configuring ServiceEntry for Wikipedia Domains\nDESCRIPTION: Registers *.wikipedia.org domains in the service registry to enable TLS traffic on port 443.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: wildcard\n  namespace: istio-system\nspec:\n  hosts:\n    - \"*.wikipedia.org\"\n  ports:\n  - number: 443\n    name: tls\n    protocol: TLS\n```\n\n----------------------------------------\n\nTITLE: Upgrading Istio Base Chart\nDESCRIPTION: Upgrade the Istio base chart to update cluster-wide resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/helm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-base istio/base -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Enabling DNS Proxying in Sidecar Mode (Istio Installation)\nDESCRIPTION: This snippet shows how to enable DNS proxying during Istio installation in sidecar mode using IstioOperator custom resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        # Enable basic DNS proxying\n        ISTIO_META_DNS_CAPTURE: \"true\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Restoring Service Port Configuration\nDESCRIPTION: kubectl command to restore the details service port name back to http\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch service details -n bookinfo --type json -p '[{\"op\":\"replace\",\"path\":\"/spec/ports/0/name\", \"value\":\"http\"}]'\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Egress Gateway in YAML\nDESCRIPTION: Defines an Istio Gateway object for operating the egress gateway. It specifies the selector for the egress gateway and configures the server to handle HTTP traffic on port 80 for a specific host.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: \"httpbin-egress\"\n  namespace: \"httpbin\"\nspec:\n  selector:\n    istio: egressgateway\n    service.istio.io/canonical-name: \"httpbin-egress\"\n  servers:\n  - hosts:\n    - \"<my-proxied-service-hostname>\"\n    port:\n      number: 80\n      name: http\n      protocol: HTTP\n```\n\n----------------------------------------\n\nTITLE: Deploying Squid Proxy in Kubernetes\nDESCRIPTION: Deploys a Squid proxy container in the 'external' namespace using a Kubernetes Deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/http-proxy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: squid\n  namespace: external\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: squid\n  template:\n    metadata:\n      labels:\n        app: squid\n    spec:\n      volumes:\n      - name: proxy-config\n        configMap:\n          name: proxy-configmap\n      containers:\n      - name: squid\n        image: sameersbn/squid:3.5.27\n        imagePullPolicy: IfNotPresent\n        volumeMounts:\n        - name: proxy-config\n          mountPath: /etc/squid\n          readOnly: true\n```\n\n----------------------------------------\n\nTITLE: Applying Istio Route Rule in Multi-Tenant Environment\nDESCRIPTION: Demonstrates how to apply an Istio route rule in a multi-tenant environment using kubectl. The command scopes the rule to the correct Istio control plane namespace and tenant application namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl –i istio-system1 apply -n ns-1 -f route_rule_v2.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Rate Limit EnvoyFilter\nDESCRIPTION: EnvoyFilter that enables global rate limiting on the ingress gateway by adding the envoy.filters.http.ratelimit filter to the HTTP filter chain.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/policy-enforcement/rate-limit/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: filter-ratelimit\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      istio: ingressgateway\n  configPatches:\n    - applyTo: HTTP_FILTER\n      match:\n        context: GATEWAY\n        listener:\n          filterChain:\n            filter:\n              name: \"envoy.filters.network.http_connection_manager\"\n              subFilter:\n                name: \"envoy.filters.http.router\"\n      patch:\n        operation: INSERT_BEFORE\n        value:\n          name: envoy.filters.http.ratelimit\n          typed_config:\n            \"@type\": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit\n            domain: ratelimit\n            failure_mode_deny: true\n            timeout: 10s\n            rate_limit_service:\n              grpc_service:\n                envoy_grpc:\n                  cluster_name: outbound|8081||ratelimit.default.svc.cluster.local\n                  authority: ratelimit.default.svc.cluster.local\n              transport_api_version: V3\n```\n\n----------------------------------------\n\nTITLE: Configuring Header-based Authorization with Custom Conditions in Istio\nDESCRIPTION: This YAML snippet creates an AuthorizationPolicy that allows access based on request headers, specifically permitting GET requests from a specific principal when the 'version' header is either 'v1' or 'v2'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/curl\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"]\n```\n\n----------------------------------------\n\nTITLE: Applying Istio Route Rule in Multi-Tenant Environment\nDESCRIPTION: Demonstrates how to apply an Istio route rule in a multi-tenant environment using kubectl. The command scopes the rule to the correct Istio control plane namespace and tenant application namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl –i istio-system1 apply -n ns-1 -f route_rule_v2.yaml\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from cluster2 using IstioOperator\nDESCRIPTION: Removes the Istio installation from cluster2 using istioctl uninstall command with purge option, followed by deleting the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --context=\"${CTX_CLUSTER2}\" -y --purge\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Setting Gateway API Ingress Host and Port\nDESCRIPTION: Commands to set environment variables for ingress host and port using Gateway API resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl get gtw httpbin-gateway -o jsonpath='{.status.addresses[0].value}')\n$ export INGRESS_PORT=$(kubectl get gtw httpbin-gateway -o jsonpath='{.spec.listeners[?(@.name==\"http\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace with Istio Sidecar Injection in Bash\nDESCRIPTION: Commands to create a Kubernetes namespace called 'httptools' and enable Istio sidecar injection on it. This is the initial setup required before deploying applications into the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace httptools\n$ kubectl label namespace httptools istio-injection=enabled\nnamespace/httptools created\nnamespace/httptools labeled\n```\n\n----------------------------------------\n\nTITLE: Inspecting Envoy Listeners for Dual-Stack Configuration\nDESCRIPTION: This command uses istioctl to inspect the Envoy listeners configuration for a dual-stack service, showing how listeners are bound to multiple IP addresses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config listeners \"$(kubectl get pod -n dual-stack -l app=tcp-echo -o jsonpath='{.items[0].metadata.name}')\" -n dual-stack --port 9000 -ojson | jq '.[] | {name: .name, address: .address, additionalAddresses: .additionalAddresses}'\n```\n\n----------------------------------------\n\nTITLE: MacOS Zsh Completions Setup\nDESCRIPTION: Commands for installing and configuring Zsh completions on MacOS, including package installation and permissions setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ brew list zsh-completions\n$ brew install zsh-completions\n$ rm -f ~/.zcompdump; compinit\n$ chmod -R go-w \"$(brew --prefix)/share\"\n```\n\n----------------------------------------\n\nTITLE: Controlling Output Level for Istioctl Analyze Command in Bash\nDESCRIPTION: This command demonstrates how to use the --log_output_level option with istioctl analyze to control the output level for different scopes. It sets the 'klog' scope to 'none' and the 'cli' scope to 'info'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/component-logging/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --log_output_level klog:none,cli:info\n```\n\n----------------------------------------\n\nTITLE: Detailed Route Configuration for Reviews Service in Istio\nDESCRIPTION: This command retrieves and displays detailed YAML configuration for the inbound route of the reviews service. It shows weight-based routing, retry policies, and timeout configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/waypoint-proxy-made-simple/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config routes deploy/bookinfo-reviews-istio-waypoint --name \"inbound-vip|9080|http|reviews.default.svc.cluster.local\" -o yaml\n```\n\n----------------------------------------\n\nTITLE: Binding Role to Service Account in Istio RBAC with mTLS\nDESCRIPTION: This ServiceRoleBinding grants the 'book-reader' role to the 'bookstore-frontend' service account when using mutual TLS authentication. It demonstrates how to use authenticated service identities in Istio authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/istio-authorization/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: book-reader\n  namespace: default\nspec:\n  subjects:\n  - user: \"cluster.local/ns/default/sa/bookstore-frontend\"\n  roleRef:\n    kind: ServiceRole\n    name: \"book-reader\"\n```\n\n----------------------------------------\n\nTITLE: Testing External Service Latency Before Timeout Configuration in Istio\nDESCRIPTION: This command makes a request to the /delay/5 endpoint of httpbin.org from a pod in the Istio mesh, measuring the time it takes to complete. It demonstrates the baseline behavior before adding timeout configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$SOURCE_POD\" -c curl -- time curl -o /dev/null -sS -w \"%{http_code}\\n\" http://httpbin.org/delay/5\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Sidecar Injection in Kubernetes Pods\nDESCRIPTION: Demonstrates how to check if the Istio sidecar has been successfully injected into a Kubernetes pod by looking at the container count.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods | grep demo-red\n```\n\n----------------------------------------\n\nTITLE: Setting External Istiod Address Using Load Balancer IP (Alternative)\nDESCRIPTION: An alternative method to set the EXTERNAL_ISTIOD_ADDR using the load balancer IP of the ingress gateway, for testing environments without a DNS hostname.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ export EXTERNAL_ISTIOD_ADDR=$(kubectl -n istio-system --context=\"${CTX_EXTERNAL_CLUSTER}\" get svc istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n$ export SSL_SECRET_NAME=NONE\n```\n\n----------------------------------------\n\nTITLE: Testing Gateway with Valid JWT Token\nDESCRIPTION: This snippet demonstrates fetching a valid JWT token from the Istio GitHub repository and using it to successfully authenticate a request.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ TOKEN=$(curl {{< github_file >}}/security/tools/jwt/samples/demo.jwt -s)\n$ curl --header \"Authorization: Bearer $TOKEN\" \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Control Plane with Revision Label\nDESCRIPTION: This command uninstalls an old Istio control plane with a specific revision label. The -y flag automatically confirms the uninstallation without prompting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --revision {{< istio_previous_version_revision >}}-1 -y\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Application with PSA Configuration\nDESCRIPTION: Command to deploy the Bookinfo sample application using PSA-enabled configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/pod-security-admission/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo-psa.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService for NGINX Traffic Routing\nDESCRIPTION: Sets up routing rules for traffic coming through the Gateway to the NGINX service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: nginx\nspec:\n  hosts:\n  - nginx.example.com\n  gateways:\n  - mygateway\n  tls:\n  - match:\n    - port: 443\n      sniHosts:\n      - nginx.example.com\n    route:\n    - destination:\n        host: my-nginx\n        port:\n          number: 443\n```\n\n----------------------------------------\n\nTITLE: Creating Dashboard Admin Access\nDESCRIPTION: Commands to create service account and cluster role binding for Dashboard admin access\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create serviceaccount -n kubernetes-dashboard admin-user\nkubectl create clusterrolebinding -n kubernetes-dashboard admin-user --clusterrole cluster-admin --serviceaccount=kubernetes-dashboard:admin-user\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Bootstrap Runtime Config Map in Istio\nDESCRIPTION: Creates a config map in the istio-system namespace using a predefined YAML file. This config map contains settings for global downstream max connections.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/cve-2020-007-configmap.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system apply -f custom-bootstrap-runtime.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining Istio ServiceEntry for External Service in YAML\nDESCRIPTION: Creates a ServiceEntry to allow communication to the upstream service. It defines the external service 'httpbin.org' and configures it to use TLS protocol on port 443.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: \"httpbin-egress\"\n  namespace: \"httpbin\"\nspec:\n  hosts:\n  - \"httpbin.org\"\n  location: MESH_EXTERNAL\n  ports:\n  - number: 443\n    name: https\n    protocol: TLS\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio in MicroK8s\nDESCRIPTION: This command enables Istio in the MicroK8s environment. After running this, you'll be prompted to choose whether to enforce mutual TLS authentication among sidecars.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/MicroK8s/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ microk8s.enable istio\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Destination Rules in Kubernetes\nDESCRIPTION: Command to display all configured Istio destination rules in the cluster in YAML format for verification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get destinationrules -o yaml\n```\n\n----------------------------------------\n\nTITLE: Inspecting Envoy Listener Configuration\nDESCRIPTION: Demonstrates how to view listener configuration for a productpage pod, showing address bindings, ports, and routing destinations for both inbound and outbound traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config listeners productpage-v1-6c886ff494-7vxhs\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Kubernetes Service for Network Access\nDESCRIPTION: Example of a Kubernetes Service configuration that exposes port 8080 for TCP traffic with netcat selector.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0143/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: netcat\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n  selector:\n    app: netcat\n```\n\n----------------------------------------\n\nTITLE: Performing Rolling Update of Kops Cluster\nDESCRIPTION: Commands to initiate a rolling update of the Kops cluster to apply the configuration changes. The first command previews the rolling update, while the second command executes it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kops/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kops rolling-update cluster\n$ kops rolling-update cluster --yes\n```\n\n----------------------------------------\n\nTITLE: Configuring Mutual TLS Origination DestinationRule\nDESCRIPTION: Creates a DestinationRule to enable mutual TLS origination using the previously created client credentials.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: originate-mtls-for-nginx\nspec:\n  host: my-nginx.mesh-external.svc.cluster.local\n  trafficPolicy:\n    loadBalancer:\n      simple: ROUND_ROBIN\n    portLevelSettings:\n    - port:\n        number: 443\n      tls:\n        mode: MUTUAL\n        credentialName: client-credential\n        sni: my-nginx.mesh-external.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Creating and Labeling Sample Namespace in Multiple Clusters\nDESCRIPTION: Create the 'sample' namespace in both clusters and enable automatic sidecar injection for this namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/verify/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create --context=\"${CTX_CLUSTER1}\" namespace sample\n$ kubectl create --context=\"${CTX_CLUSTER2}\" namespace sample\n$ kubectl label --context=\"${CTX_CLUSTER1}\" namespace sample \\\n    istio-injection=enabled\n$ kubectl label --context=\"${CTX_CLUSTER2}\" namespace sample \\\n    istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ConfigMap for NGINX Configuration in Bash\nDESCRIPTION: Creates a Kubernetes ConfigMap to hold the NGINX server configuration in the mesh-external namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap nginx-configmap -n mesh-external --from-file=nginx.conf=./nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Quoting PCI Standard on Outbound Traffic in Markdown\nDESCRIPTION: This snippet shows how to use Markdown syntax to quote the PCI Data Security Standard specific requirements for outbound traffic control.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/egress-traffic-control-in-istio-part-1/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< quote >}}\n_1.3.4 Do not allow unauthorized outbound traffic from the cardholder data environment to the Internet... All traffic outbound from the cardholder data environment should be evaluated to ensure that it follows established, authorized rules. Connections should be inspected to restrict traffic to only authorized communications (for example by restricting source/destination addresses/ports, and/or blocking of content)._\n{{< /quote >}}\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CRDs\nDESCRIPTION: Command to identify and delete all Custom Resource Definitions (CRDs) installed by Istio. This will delete all created Istio resources and is an optional cleanup step.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd -oname | grep --color=never 'istio.io' | xargs kubectl delete\n```\n\n----------------------------------------\n\nTITLE: Verifying Application Functionality within Cluster\nDESCRIPTION: Command to execute a curl request from the ratings pod to the productpage service to verify the application is working correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')\" -c ratings -- curl -sS productpage:9080/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n```\n\n----------------------------------------\n\nTITLE: Setting Minikube Driver in Bash\nDESCRIPTION: Sets the hypervisor driver for minikube to KVM2. This command is used when a non-default driver is installed.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/minikube/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ minikube config set driver kvm2\n```\n\n----------------------------------------\n\nTITLE: Checking Iptables Rules\nDESCRIPTION: Command to verify the Istio iptables rules are properly configured.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsudo iptables-save\n```\n\n----------------------------------------\n\nTITLE: Running istioctl proxy-status on Remote Cluster\nDESCRIPTION: Demonstrates the error message when attempting to run istioctl proxy-status on a remote cluster without proper configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status\nError: unable to find any Istiod instances\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up External Service Resources with Istio APIs\nDESCRIPTION: This command removes the ServiceEntry and VirtualService resources created for controlling access to external services. It cleans up the configuration used for the httpbin.org and google.com external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry httpbin-ext google\nkubectl delete virtualservice httpbin-ext --ignore-not-found=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Pilot for Namespace-Specific Service Discovery (YAML)\nDESCRIPTION: This YAML snippet shows how to configure Pilot to watch a specific namespace for service discovery in a tenant's Istio control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-pilot\n  namespace: istio-system1\n  annotations:\n    sidecar.istio.io/inject: \"false\"\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        istio: pilot\n    spec:\n      serviceAccountName: istio-pilot-service-account\n      containers:\n      - name: discovery\n        image: docker.io/<user ID>/pilot:<tag>\n        imagePullPolicy: IfNotPresent\n        args: [\"discovery\", \"-v\", \"2\", \"--admission-service\", \"istio-pilot\", \"--appNamespace\", \"ns-1\"]\n        ports:\n        - containerPort: 8080\n        - containerPort: 443\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ConfigMap for NGINX Configuration\nDESCRIPTION: Stores the NGINX configuration as a Kubernetes ConfigMap.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create configmap nginx-configmap --from-file=nginx.conf=./nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Testing Circuit Breaker with 2 Concurrent Connections in Istio\nDESCRIPTION: This snippet uses Fortio to test the circuit breaker by sending 20 requests with 2 concurrent connections to the httpbin service. It demonstrates how the istio-proxy allows some leeway in the circuit breaking rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$FORTIO_POD\" -c fortio -- /usr/bin/fortio load -c 2 -qps 0 -n 20 -loglevel Warning http://httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Undeploying Reviews v2 (Rollback)\nDESCRIPTION: These commands demonstrate how to quickly undeploy the new version if issues are encountered in production.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete deployment reviews-v2\n$ kubectl delete pod -l app=reviews,version=v2\n```\n\n----------------------------------------\n\nTITLE: Verifying Test Workload Connectivity\nDESCRIPTION: Command to verify that the curl pod can access the httpbin service, which should return a 200 status code before applying any authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.foo:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Deploying Sleep Pod for Testing without Istio Sidecar\nDESCRIPTION: Command to deploy a sleep pod that can be used for testing with curl, without the Istio sidecar container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/sleep/sleep.yaml@\n```\n\n----------------------------------------\n\nTITLE: Verifying Fixed Namespace Configuration\nDESCRIPTION: Command to re-analyze the default namespace after enabling Istio injection, which should show that the validation issues have been resolved.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --namespace default\n✔ No validation issues found when analyzing namespace: default.\n```\n\n----------------------------------------\n\nTITLE: Rendering Release Note Shortcode in Markdown\nDESCRIPTION: A markdown shortcode that renders release notes for Istio 1.14. This shortcode is used to include standardized release information in the announcement page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< relnote >}}\n```\n\n----------------------------------------\n\nTITLE: Deleting Gateway API Resources in Istio\nDESCRIPTION: Commands to remove the gateway configuration and routes using Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -n istio-system gtw mygateway\n$ kubectl delete httproute httpbin helloworld\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Proxy Version\nDESCRIPTION: This command uses istioctl to check the proxy status and version of the deployed sample application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status\n```\n\n----------------------------------------\n\nTITLE: Verifying Sidecar Injection - Bash\nDESCRIPTION: Commands to verify successful sidecar injection by deleting and inspecting new pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete pod -l app=curl\n$ kubectl get pod -l app=curl\n$ kubectl describe pod -l app=curl\n```\n\n----------------------------------------\n\nTITLE: Configuring Kiali HTTP Access in Istio\nDESCRIPTION: Creates Gateway, VirtualService, and DestinationRule resources to expose Kiali on port 80 through Istio ingress gateway. Configures HTTP routing to Kiali service running on port 20001.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: kiali-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http-kiali\n      protocol: HTTP\n    hosts:\n    - \"kiali.${INGRESS_DOMAIN}\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: kiali-vs\n  namespace: istio-system\nspec:\n  hosts:\n  - \"kiali.${INGRESS_DOMAIN}\"\n  gateways:\n  - kiali-gateway\n  http:\n  - route:\n    - destination:\n        host: kiali\n        port:\n          number: 20001\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: kiali\n  namespace: istio-system\nspec:\n  host: kiali\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Configuring X-Forwarded-For Header EnvoyFilter\nDESCRIPTION: EnvoyFilter configuration to enable X-Forwarded-For header handling in the HTTP connection manager.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: ingressgateway-settings\n  namespace: istio-system\nspec:\n  configPatches:\n  - applyTo: NETWORK_FILTER\n    match:\n      listener:\n        filterChain:\n          filter:\n            name: envoy.http_connection_manager\n    patch:\n      operation: MERGE\n      value:\n        name: envoy.http_connection_manager\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n          skip_xff_append: false\n          use_remote_address: true\n          xff_num_trusted_hops: 1\n```\n\n----------------------------------------\n\nTITLE: Querying Ratings from MySQL Database\nDESCRIPTION: Command to verify the current ratings data in the MySQL database. This shows the default ratings values that will be displayed in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ mysql -u root -ppassword test -e \"select * from ratings;\"\n+----------+--------+\n| ReviewID | Rating |\n+----------+--------+\n|        1 |      5 |\n|        2 |      4 |\n+----------+--------+\n```\n\n----------------------------------------\n\nTITLE: Updating GKE Firewall Rules\nDESCRIPTION: Updates firewall rules to allow necessary ports (10250, 443, 15017) for master access in private GKE clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gke/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute firewall-rules update <firewall-rule-name> --allow tcp:10250,tcp:443,tcp:15017\n```\n\n----------------------------------------\n\nTITLE: Disabling Auto-allocation for a ServiceEntry (Kubernetes Resource)\nDESCRIPTION: This YAML snippet demonstrates how to update a ServiceEntry to disable auto-allocation of IP addresses using a label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: external-auto\n  labels:\n    networking.istio.io/enable-autoallocate-ip: \"false\"\nspec:\n  hosts:\n  - auto.internal\n  ports:\n  - name: http\n    number: 80\n    protocol: HTTP\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Sidecar Status using systemctl\nDESCRIPTION: Command to verify the running status of the Istio sidecar service using systemd.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status istio\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-Zone Kind Cluster Configuration\nDESCRIPTION: Creates a local Kubernetes cluster using Kind with multiple worker nodes for testing locality load balancing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/before-you-begin/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n- role: worker\n- role: worker\n- role: worker\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on cluster1 with IstioOperator in Bash\nDESCRIPTION: Applies the IstioOperator configuration to install Istio on cluster1 using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER1}\" -f cluster1.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating WorkloadEntry and ServiceEntry in Istio YAML\nDESCRIPTION: This YAML snippet shows how to create a WorkloadEntry to describe a non-Pod endpoint and a ServiceEntry that uses a WorkloadSelector to include the WorkloadEntry. It demonstrates the new approach in Istio 1.6 for managing non-Kubernetes workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/workload-entry/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\napiVersion: networking.istio.io/v1alpha3\nkind: WorkloadEntry\nmetadata:\n  name: vm1\n  namespace: ns1\nspec:\n  address: 1.1.1.1\n  labels:\n    app: foo\n    instance-id: vm-78ad2\n    class: vm\n---\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: svc1\n  namespace: ns1\nspec:\n  hosts:\n  - svc1.internal.com\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: STATIC\n  workloadSelector:\n    labels:\n      app: foo\n```\n\n----------------------------------------\n\nTITLE: Deploying Gateway Resource for Waypoint\nDESCRIPTION: YAML configuration for deploying a Gateway resource that defines a waypoint proxy with HBONE protocol on port 15008.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  labels:\n    istio.io/waypoint-for: service\n  name: waypoint\n  namespace: default\nspec:\n  gatewayClassName: istio-waypoint\n  listeners:\n  - name: mesh\n    port: 15008\n    protocol: HBONE\n```\n\n----------------------------------------\n\nTITLE: BSD Socket API System Calls\nDESCRIPTION: Demonstrates the key system calls that AppSwitch instruments in the BSD socket API, including fcntl and ioctl for socket operations. These are referenced in the context of AppSwitch's instrumentation capabilities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/appswitch/index.md#2025-04-08_snippet_0\n\nLANGUAGE: C\nCODE:\n```\nfcntl()\nioctl()\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Ztunnel Component\nDESCRIPTION: Command to remove the ztunnel Helm chart from the istio-system namespace. This removes the ambient mode node proxy component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete ztunnel -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Creating RequestAuthentication for Gateway API\nDESCRIPTION: This snippet shows how to create a RequestAuthentication policy that requires JWT validation for requests through a Gateway API resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: RequestAuthentication\nmetadata:\n  name: \"jwt-example\"\n  namespace: foo\nspec:\n  targetRef:\n    kind: Gateway\n    group: gateway.networking.k8s.io\n    name: httpbin-gateway\n  jwtRules:\n  - issuer: \"testing@secure.istio.io\"\n    jwksUri: \"{{< github_file >}}/security/tools/jwt/samples/jwks.json\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying OpenSSL Version for Istio TLS Operations\nDESCRIPTION: Checks that the OpenSSL version is 1.1 or later, which is required for the TLS operations in this task.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl version -a | grep OpenSSL\nOpenSSL 1.1.1g  21 Apr 2020\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Namespace for Baseline Security\nDESCRIPTION: Command to label the default namespace to enforce baseline pod security policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/pod-security-admission/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label --overwrite ns default \\\n    pod-security.kubernetes.io/enforce=baseline \\\n    pod-security.kubernetes.io/enforce-version=latest\n```\n\n----------------------------------------\n\nTITLE: Labeling a Pod to Use a Specific Waypoint in Istio (Bash)\nDESCRIPTION: This command adds the 'istio.io/use-waypoint' label to the 'reviews-v2' pod to configure it to use the 'reviews-v2-pod-waypoint' waypoint for L7 processing and policy enforcement.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label pod -l version=v2,app=reviews istio.io/use-waypoint=reviews-v2-pod-waypoint\n```\n\n----------------------------------------\n\nTITLE: Helm-Style Configuration with istioctl\nDESCRIPTION: Example of using Helm-compatible configuration with istioctl by prefixing options with 'values.' This helps with migration from Helm-based installations to the new operator-based approach.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest generate ... --set values.global.mtls.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up External Service Resources with Gateway API\nDESCRIPTION: This command removes the ServiceEntry and HTTPRoute resources created when using Gateway API for controlling access to external services. It cleans up the configuration used for the httpbin.org external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry httpbin-ext\nkubectl delete httproute httpbin-ext --ignore-not-found=true\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Namespace and Deploying Minimal Istio\nDESCRIPTION: Commands to create the istio-system namespace and apply the minimal Istio configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-system\n$ kubectl apply -f istio-minimal.yaml\n```\n\n----------------------------------------\n\nTITLE: Downloading Istio with Version Variable\nDESCRIPTION: Commands to set Istio version and download the distribution package using curl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export ISTIO_VERSION=1.5.2\n$ curl -L https://istio.io/downloadIstio | sh -\n```\n\n----------------------------------------\n\nTITLE: Release Note Shortcode in Markdown\nDESCRIPTION: Hugo shortcode for rendering release notes content\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14.2/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< relnote >}}\n```\n\n----------------------------------------\n\nTITLE: Deploying Authorization Policy for httpbin\nDESCRIPTION: Applies an authorization policy to deny all requests to httpbin except from curl in the curl-allow namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-td-migration/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: service-httpbin.default.svc.cluster.local\n  namespace: default\nspec:\n  rules:\n  - from:\n    - source:\n        principals:\n        - old-td/ns/curl-allow/sa/curl\n    to:\n    - operation:\n        methods:\n        - GET\n  selector:\n    matchLabels:\n      app: httpbin\n```\n\n----------------------------------------\n\nTITLE: Scaling Kubernetes Deployments\nDESCRIPTION: Scales all deployments to 1 replica for the purpose of the tutorial.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/enable-istio-all-microservices/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl scale deployments --all --replicas 1\n```\n\n----------------------------------------\n\nTITLE: Verifying TLS 1.2 is Not Allowed\nDESCRIPTION: This command uses OpenSSL to confirm that TLS 1.2 is not allowed for communication between Istio workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/tls-configuration/workload-min-tls-version/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c istio-proxy -n foo -- openssl s_client -alpn istio -tls1_2 -connect httpbin.foo:8000 | grep \"Cipher is (NONE)\"\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Logging Configuration\nDESCRIPTION: Kubernetes configuration that defines Istio logging rules for monitoring egress traffic. Includes logentry definition, stdio handlers for error and info logging, and rules for matching CNN.com traffic patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Log entry for egress access\napiVersion: \"config.istio.io/v1alpha2\"\nkind: logentry\nmetadata:\n  name: egress-access\n  namespace: istio-system\nspec:\n  severity: '\"info\"'\n  timestamp: request.time\n  variables:\n    destination: request.host | \"unknown\"\n    path: request.path | \"unknown\"\n    responseCode: response.code | 0\n    responseSize: response.size | 0\n    reporterUID: context.reporter.uid | \"unknown\"\n    sourcePrincipal: source.principal | \"unknown\"\n  monitored_resource_type: '\"UNSPECIFIED\"'\n---\n# Handler for error egress access entries\napiVersion: \"config.istio.io/v1alpha2\"\nkind: stdio\nmetadata:\n  name: egress-error-logger\n  namespace: istio-system\nspec:\n severity_levels:\n   info: 2 # output log level as error\n outputAsJson: true\n---\n# Rule to handle access to *.cnn.com/politics\napiVersion: \"config.istio.io/v1alpha2\"\nkind: rule\nmetadata:\n  name: handle-politics\n  namespace: istio-system\nspec:\n  match: request.host.endsWith(\"cnn.com\") && request.path.startsWith(\"/politics\") && context.reporter.uid.startsWith(\"kubernetes://istio-egressgateway\")\n  actions:\n  - handler: egress-error-logger.stdio\n    instances:\n    - egress-access.logentry\n---\n# Handler for info egress access entries\napiVersion: \"config.istio.io/v1alpha2\"\nkind: stdio\nmetadata:\n  name: egress-access-logger\n  namespace: istio-system\nspec:\n  severity_levels:\n    info: 0 # output log level as info\n  outputAsJson: true\n---\n# Rule to handle access to *.cnn.com\napiVersion: \"config.istio.io/v1alpha2\"\nkind: rule\nmetadata:\n  name: handle-cnn-access\n  namespace: istio-system\nspec:\n  match: request.host.endsWith(\".cnn.com\") && context.reporter.uid.startsWith(\"kubernetes://istio-egressgateway\")\n  actions:\n  - handler: egress-access-logger.stdio\n    instances:\n      - egress-access.logentry\n```\n\n----------------------------------------\n\nTITLE: Deploying Httpbin and OPA in Kubernetes\nDESCRIPTION: Kubernetes manifest to deploy the httpbin application with OPA as a sidecar in the same pod. It includes a Service and a Deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin-with-opa\n  labels:\n    app: httpbin-with-opa\n    service: httpbin-with-opa\nspec:\n  ports:\n  - name: http\n    port: 8000\n    targetPort: 80\n  selector:\n    app: httpbin-with-opa\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Release Documentation\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.11.6 release documentation page, including title, publication date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11.6/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.11.6\nlinktitle: 1.11.6\nsubtitle: Patch Release\ndescription: Istio 1.11.6 patch release.\npublishdate: 2022-02-03\nrelease: 1.11.6\naliases:\n    - /news/announcing-1.11.6\n---\n```\n\n----------------------------------------\n\nTITLE: Downloading the Ratings Microservice Dockerfile in Bash\nDESCRIPTION: Downloads the Dockerfile for the ratings microservice from the Istio GitHub repository. This is the first step in preparing to build a Docker image for the service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/src/ratings/Dockerfile -o Dockerfile\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter with Explicit Priority\nDESCRIPTION: This snippet demonstrates how to configure an EnvoyFilter with an explicit priority to ensure proper ordering in the filter chain. It shows an example of inserting a filter before the istio.stats filter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  configPatches:\n  - applyTo: NETWORK_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n      listener:\n        portNumber: 443\n        filterChain:\n          filter:\n            name: istio.stats\n    patch:\n      operation: INSERT_BEFORE\n      value:\n        ...\n```\n\n----------------------------------------\n\nTITLE: Installing Ingress Gateway using IstioOperator in Istio\nDESCRIPTION: This snippet creates an IstioOperator resource to install an ingress gateway in the external-istiod namespace. It configures the gateway with the gateway injection template for proper functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > istio-ingressgateway.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: ingress-install\nspec:\n  profile: empty\n  components:\n    ingressGateways:\n    - namespace: external-istiod\n      name: istio-ingressgateway\n      enabled: true\n  values:\n    gateways:\n      istio-ingressgateway:\n        injectionTemplate: gateway\nEOF\nistioctl install -f istio-ingressgateway.yaml --set values.global.istioNamespace=external-istiod --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Setting Revision Tag for Default Installation\nDESCRIPTION: Command to create a revision tag 'stable' for installations without an associated revision\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x revision tag set stable --revision default\n```\n\n----------------------------------------\n\nTITLE: VirtualService Configuration in Istio\nDESCRIPTION: Modern v1alpha3 VirtualService configuration that consolidates routing rules for the reviews service, demonstrating header-based routing to different service versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews\n  http:\n  - match:\n    - headers:\n        cookie:\n          regex: \"^(.*?;)?(user=jason)(;.*)?$\"\n    route:\n    - destination:\n        host: reviews\n        subset: v2\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Enabling Minikube Tunnel for Load Balancing in Bash\nDESCRIPTION: Activates the minikube tunnel feature to provide load balancer functionality for Istio. This command blocks the terminal to output diagnostic information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/minikube/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ minikube tunnel\n```\n\n----------------------------------------\n\nTITLE: Configuring CNI Component Upgrade with IstioOperator\nDESCRIPTION: YAML configuration for upgrading the CNI component independently using IstioOperator. Specifies an empty profile to avoid including other components and enables CNI with namespace exclusions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/cni/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: empty # Do not include other components\n  components:\n    cni:\n      enabled: true\n  values:\n    cni:\n      excludeNamespaces:\n        - istio-system\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Completely\nDESCRIPTION: Command to uninstall Istio completely from the cluster, removing all Istio components and configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --purge --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Generating Waypoint Proxy Configuration with istioctl in Istio Ambient Mode\nDESCRIPTION: This command uses istioctl to generate a Kubernetes Gateway resource that defines a waypoint proxy. The generated resource uses the istio-waypoint Gateway class and configures a listener on port 15008 with the HBONE protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/waypoint-proxy-made-simple/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental waypoint generate\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: Gateway\nmetadata:\n  name: namespace\nspec:\n  gatewayClassName: istio-waypoint\n  listeners:\n  - name: mesh\n    port: 15008\n    protocol: HBONE\n```\n\n----------------------------------------\n\nTITLE: Authorization Policy Before Upgrade (Istio 1.5 and prior)\nDESCRIPTION: An example of an authorization policy resource targeting ports 80 and 443 that would need to be updated when upgrading to Istio 1.6 or later. This policy denies access to the \"/admin\" path on the ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-002/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: block-admin-access\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  action: DENY\n  rules:\n  -  to:\n    - operation:\n        paths: [\"/admin\"]\n        ports: [ \"80\" ]\n  -  to:\n    - operation:\n        paths: [\"/admin\"]\n        ports: [ \"443\" ]\n```\n\n----------------------------------------\n\nTITLE: Executing Istio Precheck Command\nDESCRIPTION: Run the istioctl precheck command to verify upgrade compatibility with the current environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/helm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x precheck\n```\n\n----------------------------------------\n\nTITLE: Creating a TLS Secret for Istio Gateway in Bash\nDESCRIPTION: This command creates a Kubernetes TLS secret using kubectl. The secret contains a TLS certificate and private key, which are referenced by the credentialName in an Istio Gateway resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0161/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret tls my-tls-secret --cert=path/to/cert.pem --key=path/to/key.pem -n <namespace>\n```\n\n----------------------------------------\n\nTITLE: Creating OKE Cluster using OCI CLI\nDESCRIPTION: Command to create a new Oracle Container Engine for Kubernetes (OKE) cluster using the OCI CLI. Requires cluster name, Kubernetes version, compartment ID, and VCN ID as parameters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/oci/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\noci ce cluster create \\\n      --name <oke-cluster-name> \\\n      --kubernetes-version <kubernetes-version> \\\n      --compartment-id <compartment-ocid> \\\n      --vcn-id <vcn-ocid>\n```\n\n----------------------------------------\n\nTITLE: Using Boilerplate Text with Hugo Shortcodes in Markdown\nDESCRIPTION: Shows how to use the boilerplate shortcode to include reusable content from separate files in Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* boilerplate example */>}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway and VirtualService for Egress Traffic\nDESCRIPTION: YAML configuration for defining an Istio Gateway that enforces mTLS on inbound connections, and a VirtualService to instruct sidecars to route outgoing traffic. This sets up the routing rules for the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: egressgateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 8443\n      name: tls-egress\n      protocol: TLS\n    hosts:\n      - \"*\"\n    tls:\n      mode: ISTIO_MUTUAL\n\n---\n# VirtualService that will instruct sidecars in the mesh to route the outgoing\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Ingress Gateway with Helm\nDESCRIPTION: Optional command to install an Istio ingress gateway using Helm. This creates a separate gateway deployment in the istio-ingress namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/all-in-one/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-ingress istio/gateway -n istio-ingress --create-namespace --wait\n```\n\n----------------------------------------\n\nTITLE: Testing Gateway with Invalid JWT Token\nDESCRIPTION: This snippet shows that requests with an invalid JWT token are rejected with a 401 Unauthorized error after applying RequestAuthentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ curl --header \"Authorization: Bearer deadbeef\" \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"\n401\n```\n\n----------------------------------------\n\nTITLE: Applying Individual Istio Settings with istioctl\nDESCRIPTION: Command to apply individual configuration settings using the --set flag with istioctl manifest apply. This allows for quick changes without editing the full IstioControlPlane resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest apply --set telemetry.enabled=false\n```\n\n----------------------------------------\n\nTITLE: Implementing Kyverno Authorization Policy\nDESCRIPTION: Defines the authorization rules using CEL expressions to control access based on HTTP headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: envoy.kyverno.io/v1alpha1\nkind: AuthorizationPolicy\nmetadata:\n  name: demo-policy.example.com\nspec:\n  failurePolicy: Fail\n  variables:\n  - name: force_authorized\n    expression: object.attributes.request.http.?headers[\"x-force-authorized\"].orValue(\"\")\n  - name: allowed\n    expression: variables.force_authorized in [\"enabled\", \"true\"]\n  authorizations:\n  - expression: >\n      variables.allowed\n        ? envoy.Allowed().Response()\n        : envoy.Denied(403).Response()\n```\n\n----------------------------------------\n\nTITLE: Creating Waypoint Proxy\nDESCRIPTION: Command to deploy a waypoint proxy in the bookinfo namespace\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/extend-waypoint-wasm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint apply --enroll-namespace --wait\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Ingress Gateway\nDESCRIPTION: Installs the optional Istio ingress gateway component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhelm install istio-ingressgateway istio/gateway -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Applying Version-Specific Service Definitions for Helloworld\nDESCRIPTION: This snippet applies the version-specific service definitions for helloworld-v1 and helloworld-v2, which are required for the weight-based routing configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n sample -f @samples/helloworld/gateway-api/helloworld-versions.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Frontmatter for Istio Release Page\nDESCRIPTION: YAML frontmatter configuration for a Hugo page that displays early Istio release announcements. Specifies the page title, description, weight for sorting, and uses a release-grid layout with chronological ordering.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/0.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 0.x Releases\ndescription: Announcements for the early releases of Istio.\nweight: 30\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Setting MySQL Environment Variables\nDESCRIPTION: Sets environment variables for MySQL database host and port configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export MYSQL_DB_HOST=<your MySQL database host>\n$ export MYSQL_DB_PORT=<your MySQL database port>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster 1 Service Entry in Istio\nDESCRIPTION: YAML configuration for a ServiceEntry in Cluster 1 that defines how the payments service is accessed across clusters with specific endpoints and localities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: payments.global-se\nspec:\n  addresses:\n  - 240.0.0.10\n  endpoints:\n  - address: ef394f...us-east-2.elb.amazonaws.com\n    locality: us-east-2\n    ports:\n      http: 15443\n  - address: ad38bc...us-west-2.elb.amazonaws.com\n    locality: us-west-2\n    ports:\n      http: 15443\n  hosts:\n  - payments.global\n  location: MESH_INTERNAL\n  ports:\n  - name: http\n    number: 80\n    protocol: http\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Ingress Resource\nDESCRIPTION: Creates a Kubernetes Ingress resource to enable external access to the Bookinfo application through defined HTTP paths and host rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: bookinfo\n  annotations:\n    kubernetes.io/ingress.class: istio\nspec:\n  rules:\n  - host: $MYHOST\n    http:\n      paths:\n      - path: /productpage\n        pathType: Prefix\n        backend:\n          service:\n            name: productpage\n            port:\n              number: 9080\n      - path: /login\n        pathType: Prefix\n        backend:\n          service:\n            name: productpage\n            port:\n              number: 9080\n      - path: /logout\n        pathType: Prefix\n        backend:\n          service:\n            name: productpage\n            port:\n              number: 9080\n      - path: /static\n        pathType: Prefix\n        backend:\n          service:\n            name: productpage\n            port:\n              number: 9080\nEOF\n```\n\n----------------------------------------\n\nTITLE: Modifying Service Port Name in Kubernetes\nDESCRIPTION: kubectl command to patch the details service port name from http to foo to demonstrate Kiali's validation features\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch service details -n bookinfo --type json -p '[{\"op\":\"replace\",\"path\":\"/spec/ports/0/name\", \"value\":\"foo\"}]'\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration for Istio Release Notes\nDESCRIPTION: YAML frontmatter configuration for the Istio 1.11.4 release documentation page, defining metadata like title, subtitle, publication date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11.4/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.11.4\nlinktitle: 1.11.4\nsubtitle: Patch Release\ndescription: Istio 1.11.4 patch release.\npublishdate: 2021-10-14\nrelease: 1.11.4\naliases:\n    - /news/announcing-1.11.4\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin Service for OPA Integration Testing\nDESCRIPTION: Deploys the httpbin service that will be used to test the OPA authorization policies. This standalone deployment will be protected by the OPA service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Settings for Istio in YAML\nDESCRIPTION: This snippet outlines the configuration options for Prometheus in Istio, including retention period, node selection, scrape interval, ingress settings, and security options.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nprometheus:\n  retention: 6h\n  nodeSelector: {}\n  scrapeInterval: 15s\n  contextPath: /prometheus\n  ingress:\n    enabled: false\n    hosts: prometheus.local\n  security:\n    enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Namespace Labels for Istio Revision Control\nDESCRIPTION: Example showing how to label namespaces with istio.io/rev label to specify which revision of the Istio control plane should manage the workloads in that namespace. This replaces the traditional istio-injection=enabled label when using revisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/multiple-control-planes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nistio.io/rev=canary\n```\n\n----------------------------------------\n\nTITLE: Inspecting Istio Sidecar Injector ConfigMap\nDESCRIPTION: Shows the configuration details of the istio-sidecar-injector ConfigMap including container specifications for istio-init and istio-proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\npolicy: enabled\ntemplate: |-\n  initContainers:\n  - name: istio-init\n    image: docker.io/istio/proxy_init:1.0.2\n    args:\n    - \"-p\"\n    - [[ .MeshConfig.ProxyListenPort ]]\n    - \"-u\"\n    - 1337\n    .....\n    imagePullPolicy: IfNotPresent\n    securityContext:\n      capabilities:\n        add:\n        - NET_ADMIN\n    restartPolicy: Always\n\n  containers:\n  - name: istio-proxy\n    image: [[ if (isset .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\") -]]\n    \"[[ index .ObjectMeta.Annotations \"sidecar.istio.io/proxyImage\" ]]\"\n    [[ else -]]\n    docker.io/istio/proxyv2:1.0.2\n    [[ end -]]\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for HTTPS External Service\nDESCRIPTION: Creates a ServiceEntry resource to allow access to edition.cnn.com through port 443 using TLS protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: cnn\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 443\n    name: tls\n    protocol: TLS\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Uninstalling OpenTelemetry Collector\nDESCRIPTION: Commands to uninstall the OpenTelemetry Collector and remove its namespace during cleanup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/open-telemetry/otel.yaml@ -n observability\n$ kubectl delete namespace observability\n```\n\n----------------------------------------\n\nTITLE: Managing Revision Tags\nDESCRIPTION: Apply revision tags for stable and canary versions using Helm templates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/helm/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template istiod istio/istiod -s templates/revision-tags.yaml --set revisionTags=\"{prod-stable}\" --set revision={{< istio_previous_version_revision >}}-1 -n istio-system | kubectl apply -f -\n$ helm template istiod istio/istiod -s templates/revision-tags.yaml --set revisionTags=\"{prod-canary}\" --set revision={{< istio_full_version_revision >}} -n istio-system | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Configuring Discovery Selectors in Istio YAML\nDESCRIPTION: Added meshConfig.discoverySelectors to dynamically restrict the set of namespaces for Services, Pods, and Endpoints that istiod processes when pushing xDS updates to improve performance on the data plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  discoverySelectors:\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Control Plane on cluster2 with Helm\nDESCRIPTION: Installs the Istio control plane (istiod) on cluster2 using Helm, configuring multi-cluster settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --kube-context \"${CTX_CLUSTER2}\" --set global.meshID=mesh1 --set global.multiCluster.clusterName=cluster2 --set global.network=network2\n```\n\n----------------------------------------\n\nTITLE: Setting Default Network for Remote Cluster (Bash)\nDESCRIPTION: Sets the network label for the istio-system namespace in the remote cluster (cluster2) to 'network2'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER2}\" label namespace istio-system topology.istio.io/network=network2\n```\n\n----------------------------------------\n\nTITLE: Generating Waypoint Proxy Configuration\nDESCRIPTION: Command to generate a Kubernetes Gateway resource for a waypoint proxy that can process service traffic in the default namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint generate --for service -n default\n```\n\n----------------------------------------\n\nTITLE: Testing Istio Egress Gateway from Inside Cluster\nDESCRIPTION: Executes a curl command from the sleep pod to test the egress gateway from inside the cluster, demonstrating service-to-service communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n httpbin \"$(kubectl get pod -n httpbin -l app=sleep -o jsonpath={.items..metadata.name})\" -- curl -vvv http://<my-proxied-service-hostname>/status/200\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Peer Authentication Policies\nDESCRIPTION: This snippet shows how to remove the PeerAuthentication policies created during the demonstration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete peerauthentication default overwrite-example -n foo\n$ kubectl delete peerauthentication httpbin -n bar\n```\n\n----------------------------------------\n\nTITLE: Gateway Configuration Example\nDESCRIPTION: Example of a Gateway configuration that defines allowed hosts, showing the mismatch with the Virtual Service configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0132/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: testing-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - testing.com\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n```\n\n----------------------------------------\n\nTITLE: Configuring Workload-Specific Peer Authentication Policy in Istio\nDESCRIPTION: This YAML snippet creates a workload-specific PeerAuthentication policy that disables mTLS on port 80 for workloads with the 'app: example-app' label, while using the namespace-level mTLS settings for all other ports.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-workload-policy\"\n  namespace: \"foo\"\nspec:\n  selector:\n     matchLabels:\n       app: example-app\n  portLevelMtls:\n    80:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Checking Gateway Logs\nDESCRIPTION: Inspects the egress gateway logs to verify traffic routing patterns and SNI handling for Wikipedia requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -n istio-egress $GATEWAY_POD\n```\n\n----------------------------------------\n\nTITLE: Opening Kiali Dashboard via Istioctl\nDESCRIPTION: Command to open the Kiali dashboard UI using the Istio command-line tool.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard kiali\n```\n\n----------------------------------------\n\nTITLE: Testing Per-Path JWT Authorization\nDESCRIPTION: These snippets demonstrate how to test the per-path JWT authorization by sending requests to different paths.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"$INGRESS_HOST:$INGRESS_PORT/ip\" -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Defining Basic IstioControlPlane Resource in YAML\nDESCRIPTION: Example of an IstioControlPlane custom resource that configures Istio using the demo profile. This represents the basic structure of the new operator API used for Istio installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha2\nkind: IstioControlPlane\nmetadata:\n  namespace: istio-operator\n  name: example-istiocontrolplane\nspec:\n  profile: demo\n```\n\n----------------------------------------\n\nTITLE: Shifting 20% Traffic to v2 (Istio APIs)\nDESCRIPTION: Applies a VirtualService to shift 20% of TCP traffic from tcp-echo:v1 to tcp-echo:v2 using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/tcp-echo/tcp-echo-20-v2.yaml@ -n istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Send requests to reviews v2 pod\nDESCRIPTION: Commands to get the reviews v2 pod IP and send curl requests directly to it\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport REVIEWS_V2_POD_IP=$(kubectl get pod -l version=v2,app=reviews -o jsonpath='{.items[0].status.podIP}')\nkubectl exec deploy/curl -- curl -s http://$REVIEWS_V2_POD_IP:9080/reviews/1\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample App with Automatic Sidecar Injection in Kubernetes\nDESCRIPTION: This command deploys the curl sample application in Kubernetes when automatic sidecar injection is enabled. It applies the curl.yaml configuration file to create the necessary resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/before-you-begin-egress.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Service for Authorization Policy Example\nDESCRIPTION: Kubernetes Service definition example that selects workloads with app: httpbin and version: v1 labels. This service definition is referenced in the authorization policy examples.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  selector:\n    app: httpbin\n    version: v1\n  ports:\n    # omitted\n```\n\n----------------------------------------\n\nTITLE: Defining Istio 1.16.x Release Page Structure in YAML Frontmatter\nDESCRIPTION: YAML frontmatter that configures the page title, description, weight for menu ordering, and display parameters for Istio 1.16.x release announcements. It specifies a list ordered by publication date and uses a dot decoration style in a release-grid layout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.16.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.16.x Releases\ndescription: Announcements for the 1.16 release and its associated patch releases.\nweight: 13\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Mixer Settings in YAML\nDESCRIPTION: This snippet defines configuration options for Istio Mixer, including environment variables, policy and telemetry settings, resource allocation, and adapter configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmixer:\n  env:\n    GODEBUG: gctrace=1\n    GOMAXPROCS: \"6\"\n  policy:\n    enabled: false\n    replicaCount: 1\n    autoscaleEnabled: true\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n  telemetry:\n    enabled: true\n    replicaCount: 1\n    autoscaleEnabled: true\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n    sessionAffinityEnabled: false\n    loadshedding:\n      mode: enforce\n      latencyThreshold: 100ms\n    resources:\n      requests:\n        cpu: 1000m\n        memory: 1G\n      limits:\n        cpu: 4800m\n        memory: 4G\n  podAnnotations: {}\n  nodeSelector: {}\n  adapters:\n    kubernetesenv:\n      enabled: true\n    stdio:\n      enabled: false\n      outputAsJson: true\n    prometheus:\n      enabled: true\n      metricsExpiryDuration: 10m\n    useAdapterCRDs: true\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate and Key for mTLS Authentication in Istio\nDESCRIPTION: Creates a client certificate and private key signed by the root certificate. These credentials will be used by clients to authenticate to the NGINX server in a mutual TLS setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out client.example.com.csr -newkey rsa:2048 -nodes -keyout client.example.com.key -subj \"/CN=client.example.com/O=client organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 1 -in client.example.com.csr -out client.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret for Istio Multi-Cluster Setup in Bash\nDESCRIPTION: This command generates a remote secret for cluster2 and applies it to cluster1, enabling the Istio control plane in cluster1 to access the API server in cluster2. This is crucial for authentication and service discovery in a multi-cluster setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl create-remote-secret \\\n    --context=\"${CTX_CLUSTER2}\" \\\n    --name=cluster2 | \\\n    kubectl apply -f - --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Kyverno Configuration\nDESCRIPTION: Installs Istio with specific mesh configuration to enable Kyverno integration and access logging.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -y -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\n    accessLogFormat: |\n      [KYVERNO DEMO] my-new-dynamic-metadata: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz)%'\n    extensionProviders:\n    - name: kyverno-authz-server\n      envoyExtAuthzGrpc:\n        service: kyverno-authz-server.kyverno.svc.cluster.local\n        port: '9081'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a Namespace for the Tutorial in Bash\nDESCRIPTION: Creates an environment variable for the namespace name and then creates the namespace in Kubernetes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export NAMESPACE=tutorial\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace $NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Cleanup Command\nDESCRIPTION: Command for removing the attribute generation configuration\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/classify-metrics/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system delete -f attribute_gen_service.yaml\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration\nDESCRIPTION: YAML frontmatter metadata configuration for the upgrade documentation page, specifying title, description, publish date and weight for page ordering.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.17.x/announcing-1.17/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.17 Upgrade Notes\ndescription: Important changes to consider when upgrading to Istio 1.17.\npublishdate: 2023-02-14\nweight: 20\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying the Sample External Authorizer\nDESCRIPTION: Command to deploy a sample external authorization service in the foo namespace that implements both HTTP and gRPC authorization check APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n foo -f {{< github_file >}}/samples/extauthz/ext-authz.yaml\nservice/ext-authz created\ndeployment.apps/ext-authz created\n```\n\n----------------------------------------\n\nTITLE: Deploying the Sample External Authorizer\nDESCRIPTION: Command to deploy a sample external authorization service in the foo namespace that implements both HTTP and gRPC authorization check APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n foo -f {{< github_file >}}/samples/extauthz/ext-authz.yaml\nservice/ext-authz created\ndeployment.apps/ext-authz created\n```\n\n----------------------------------------\n\nTITLE: New Sidecar Injector Webhook Configuration in YAML\nDESCRIPTION: Shows new configuration options for the sidecar injector webhook, including node selector and HTTP probe rewriting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsidecarInjectorWebhook:\n  nodeSelector: {}\n  rewriteAppHTTPProbe: false  # If true, webhook or istioctl injector will rewrite PodSpec for liveness\n                                # health check to redirect request to sidecar. This makes liveness check work\n                                # even when mTLS is enabled.\n```\n\n----------------------------------------\n\nTITLE: HTTP Proxy Listener Metrics for BlackHoleCluster in Istio\nDESCRIPTION: This JSON example shows how 'istio_requests_total' metrics are labeled when BlackHoleCluster is hit from an HTTP proxy listener. The destination_service_name is set to BlackHoleCluster while destination_service contains the external service hostname, with a response code of 502.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"metric\": {\n    \"__name__\": \"istio_requests_total\",\n    \"connection_security_policy\": \"unknown\",\n    \"destination_app\": \"unknown\",\n    \"destination_principal\": \"unknown\",\n    \"destination_service\": \"httpbin.org\",\n    \"destination_service_name\": \"BlackHoleCluster\",\n    \"destination_service_namespace\": \"unknown\",\n    \"destination_version\": \"unknown\",\n    \"destination_workload\": \"unknown\",\n    \"destination_workload_namespace\": \"unknown\",\n    \"instance\": \"100.96.2.183:42422\",\n    \"job\": \"istio-mesh\",\n    \"permissive_response_code\": \"none\",\n    \"permissive_response_policyid\": \"none\",\n    \"reporter\": \"source\",\n    \"request_protocol\": \"http\",\n    \"response_code\": \"502\",\n    \"response_flags\": \"-\",\n    \"source_app\": \"sleep\",\n    \"source_principal\": \"unknown\",\n    \"source_version\": \"unknown\",\n    \"source_workload\": \"sleep\",\n    \"source_workload_namespace\": \"default\"\n  },\n  \"value\": [\n    1567034251.717,\n    \"1\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Revision Tags for Stable and Canary Deployments\nDESCRIPTION: This snippet demonstrates how to create revision tags in Istio for managing stable and canary deployments. It creates two tags: 'prod-stable' for the older, stable version and 'prod-canary' for the newer version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/revision-tags-usage.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: istio-{{< istio_previous_version_revision >}}-1\nspec:\n  revision: {{< istio_previous_version_revision >}}-1\n---\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: istio-{{< istio_full_version_revision >}}\nspec:\n  revision: {{< istio_full_version_revision >}}\nEOF\n\nkubectl apply -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: RevisionTag\nmetadata:\n  name: prod-stable\n  namespace: istio-system\nspec:\n  revisionName: {{< istio_previous_version_revision >}}-1\n---\napiVersion: install.istio.io/v1alpha1\nkind: RevisionTag\nmetadata:\n  name: prod-canary\n  namespace: istio-system\nspec:\n  revisionName: {{< istio_full_version_revision >}}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying Grafana Service in Kubernetes\nDESCRIPTION: Command to verify that the Grafana service is running in the Istio system namespace. Shows how to check the service status including its cluster IP and port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/using-istio-dashboard/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get svc grafana\n```\n\n----------------------------------------\n\nTITLE: Verifying Grafana Service in Kubernetes\nDESCRIPTION: Command to verify that the Grafana service is running in the Istio system namespace. Shows how to check the service status including its cluster IP and port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/using-istio-dashboard/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get svc grafana\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS and Failover with DestinationRule in Istio\nDESCRIPTION: This YAML defines a DestinationRule that enables TLS origination, configures outlier detection, and specifies failover settings for HTTPS traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: DestinationRule\nmetadata:\n  name: mydynamodb\nspec:\n  host: mydb.com\n  trafficPolicy:\n    tls:\n      mode: SIMPLE\n    loadBalancer:\n      simple: ROUND_ROBIN\n      localityLbSetting:\n        enabled: true\n        failover:\n          - from: us-east1\n            to: us-west\n    outlierDetection:\n      consecutive5xxErrors: 1\n      interval: 15s\n      baseEjectionTime: 1m\n```\n\n----------------------------------------\n\nTITLE: Installing Kiali using Istio Sample Configuration\nDESCRIPTION: Quick start installation command for deploying Kiali into a Kubernetes cluster using Istio's basic sample configuration. This method is intended for demonstration purposes and is not recommended for production environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/kiali/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/addons/kiali.yaml\n```\n\n----------------------------------------\n\nTITLE: Uninstallation Commands for Cleanup\nDESCRIPTION: Series of commands to clean up the installation by removing sample app, namespace labels, and Istio components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/pod-security-admission/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f samples/bookinfo/platform/kube/bookinfo-psa.yaml\n$ kubectl label namespace default pod-security.kubernetes.io/enforce- pod-security.kubernetes.io/enforce-version-\n$ istioctl uninstall -y --purge\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Ambient Mode Label in YAML\nDESCRIPTION: Add the 'istio.io/dataplane-mode=ambient' label to a namespace or individual pod to enable ambient mode. This can be applied transparently without restarting applications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    istio.io/dataplane-mode: ambient\n```\n\n----------------------------------------\n\nTITLE: Configuring MOSN as Istio Sidecar\nDESCRIPTION: Command to apply Istio manifest with MOSN as the sidecar proxy, specifying the MOSN image and binary path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest apply  --set .values.global.proxy.image=\"mosnio/proxyv2:1.5.2-mosn\"   --set meshConfig.defaultConfig.binaryPath=\"/usr/local/bin/mosn\"\n```\n\n----------------------------------------\n\nTITLE: Creating Service Certificate and Key in Bash\nDESCRIPTION: Generates a certificate and private key for a specific service (my-nginx.mesh-external.svc.cluster.local) using OpenSSL. The certificate is signed by the previously created root certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out my-nginx.mesh-external.svc.cluster.local.csr -newkey rsa:2048 -nodes -keyout my-nginx.mesh-external.svc.cluster.local.key -subj \"/CN=my-nginx.mesh-external.svc.cluster.local/O=some organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in my-nginx.mesh-external.svc.cluster.local.csr -out my-nginx.mesh-external.svc.cluster.local.crt\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace and Deploying Curl Sample\nDESCRIPTION: Creates a namespace without Istio control and deploys a curl sample pod for testing external service access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace without-istio\n$ kubectl apply -f @samples/curl/curl.yaml@ -n without-istio\n$ export SOURCE_POD_WITHOUT_ISTIO=\"$(kubectl get pod -n without-istio -l app=curl -o jsonpath={.items..metadata.name})\"\n$ kubectl get pod \"$SOURCE_POD_WITHOUT_ISTIO\" -n without-istio\n```\n\n----------------------------------------\n\nTITLE: Adding Ingress Host to /etc/hosts File\nDESCRIPTION: Command to display the ingress host entry that should be added to the /etc/hosts file, enabling local resolution of the ingress gateway hostname.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ echo $INGRESS_HOST $MY_INGRESS_GATEWAY_HOST\n```\n\n----------------------------------------\n\nTITLE: Resetting Istio Configuration\nDESCRIPTION: Command to reset Istio installation to default configuration, removing the IP range bypass settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install <flags-you-used-to-install-Istio>\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Kyverno Configuration\nDESCRIPTION: Installs Istio with specific mesh configuration to enable Kyverno integration and access logging.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -y -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\n    accessLogFormat: |\n      [KYVERNO DEMO] my-new-dynamic-metadata: '%DYNAMIC_METADATA(envoy.filters.http.ext_authz)%'\n    extensionProviders:\n    - name: kyverno-authz-server\n      envoyExtAuthzGrpc:\n        service: kyverno-authz-server.kyverno.svc.cluster.local\n        port: '9081'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Prometheus and Kiali Addons for Istio in Bash\nDESCRIPTION: These commands deploy Prometheus and Kiali addons for Istio, which are used for metrics collection and visualization of the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/secure-and-visualize/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/addons/prometheus.yaml@\n$ kubectl apply -f @samples/addons/kiali.yaml@\n```\n\n----------------------------------------\n\nTITLE: Gateway Configuration with Infrastructure Customization\nDESCRIPTION: Example YAML configuration for customizing the automatically deployed Gateway resources using the infrastructure field.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  infrastructure:\n    annotations:\n      some-key: some-value\n    labels:\n      key: value\n    parametersRef:\n      group: \"\"\n      kind: ConfigMap\n      name: gw-options\n  gatewayClassName: istio\n```\n\n----------------------------------------\n\nTITLE: Removing Kiali from Kubernetes\nDESCRIPTION: kubectl command to delete Kiali from the Kubernetes cluster using the addon configuration file\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f {{< github_file >}}/samples/addons/kiali.yaml\n```\n\n----------------------------------------\n\nTITLE: Gateway Configuration with Infrastructure Customization\nDESCRIPTION: Example YAML configuration for customizing the automatically deployed Gateway resources using the infrastructure field.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  infrastructure:\n    annotations:\n      some-key: some-value\n    labels:\n      key: value\n    parametersRef:\n      group: \"\"\n      kind: ConfigMap\n      name: gw-options\n  gatewayClassName: istio\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Context\nDESCRIPTION: Sets the current context for kubectl to use k3d cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config use-context k3d-k3s-default\n```\n\n----------------------------------------\n\nTITLE: Demonstrating DNS Resolution with curl in Istio\nDESCRIPTION: This snippet shows the output of a curl command with verbose mode, demonstrating how a domain name (example.com) is resolved to an IP address (192.0.2.0) before Istio intercepts the traffic. This illustrates the first step in request processing where DNS resolution happens at the client level.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl example.com -v\n*   Trying 192.0.2.0:80...\n```\n\n----------------------------------------\n\nTITLE: New Istio CNI Configuration in YAML\nDESCRIPTION: Introduces the new istio_cni configuration option for enabling CNI in Istio 1.1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nistio_cni:\n  enabled: false\n```\n\n----------------------------------------\n\nTITLE: Verifying egress gateway functionality with curl\nDESCRIPTION: Tests that HTTP traffic is now flowing through the egress gateway by sending a request to edition.cnn.com/politics. The response should be the same as before, showing a 301 redirect followed by a 200 response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\n...\nHTTP/1.1 301 Moved Permanently\n...\nlocation: https://edition.cnn.com/politics\n...\n\nHTTP/2 200\nContent-Type: text/html; charset=utf-8\n...\n```\n\n----------------------------------------\n\nTITLE: Checking for Gateway API Automated Deployment Usage with kubectl and jq\nDESCRIPTION: This command checks if you are using the Gateway API Automated Deployment feature by looking for gateways with the 'istio' gatewayClassName that don't have addresses specified. It returns matching gateways with their namespace and name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.18.x/announcing-1.18/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get gateways.gateway.networking.k8s.io -ojson | jq -r '.items[] | select(.spec.gatewayClassName == \"istio\") | select((.spec.addresses | length) == 0) | \"Found managed gateway: \" + .metadata.namespace + \"/\" + .metadata.name'\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Istio Release Notes\nDESCRIPTION: YAML frontmatter metadata defining the release documentation properties including title, version, publication date and description.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.19.x/announcing-1.19.1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.19.1\nlinktitle: 1.19.1\nsubtitle: Patch Release\ndescription: Istio 1.19.1 patch release.\npublishdate: 2023-10-02\nrelease: 1.19.1\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host for Other Environments\nDESCRIPTION: Retrieves the host IP of the ingress gateway pod for environments not specifically covered.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].status.hostIP}')\n```\n\n----------------------------------------\n\nTITLE: Executing HTTP Request to Microservice in Kubernetes\nDESCRIPTION: This snippet demonstrates how to send an HTTP request to a specific microservice (ratings) from a testing pod in a Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/production-testing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec $(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}') -- curl -sS http://ratings:9080/ratings/7\n```\n\n----------------------------------------\n\nTITLE: Modifying Log Levels\nDESCRIPTION: Commands to modify the log levels for the Istio agent and proxy, followed by a service restart.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\necho \"ISTIO_AGENT_FLAGS=\\\"--log_output_level=dns:debug --proxyLogLevel=debug\\\"\" >> /var/lib/istio/envoy/cluster.env\nsystemctl restart istio\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Change Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.19.0 change notes documentation page, including title, subtitle, publish date and release version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.19.x/announcing-1.19/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.19.0 Change Notes\nlinktitle: 1.19.0\nsubtitle: Minor Release\ndescription: Istio 1.19.0 change notes.\npublishdate: 2023-09-05\nrelease: 1.19.0\nweight: 20\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Cluster Context Environment Variables\nDESCRIPTION: Commands to store Kubernetes cluster context names in environment variables and verify their values. Uses jsonpath to extract context names from kubectl config.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/kubectl-multicluster-contexts.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export CTX_CLUSTER1=$(kubectl config view -o jsonpath='{.contexts[0].name}')\n$ export CTX_CLUSTER2=$(kubectl config view -o jsonpath='{.contexts[1].name}')\n$ echo \"CTX_CLUSTER1 = ${CTX_CLUSTER1}, CTX_CLUSTER2 = ${CTX_CLUSTER2}\"\nCTX_CLUSTER1 = cluster1, CTX_CLUSTER2 = cluster2\n```\n\n----------------------------------------\n\nTITLE: Using request.auth.presenter Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use request.auth.presenter condition to match authorized presenter of JWT tokens. Requires request authentication policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkey: request.auth.presenter\nvalues: [\"123456789012.example.com\"]\n```\n\n----------------------------------------\n\nTITLE: Defining TCP Service Entry for MongoDB\nDESCRIPTION: Kubernetes configuration to define a ServiceEntry for external MongoDB access\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/egress-mongo/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: mongo\nspec:\n  hosts:\n  - my-mongo.tcp.svc\n  addresses:\n  - $MONGODB_IP/32\n  ports:\n  - number: $MONGODB_PORT\n    name: tcp\n    protocol: TCP\n  location: MESH_EXTERNAL\n  resolution: STATIC\n  endpoints:\n  - address: $MONGODB_IP\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Mutual TLS Origination Configuration in Istio\nDESCRIPTION: This command removes all the Kubernetes resources created for the mutual TLS origination setup, including secrets, ConfigMaps, services, deployments, ServiceEntry, and DestinationRule. It cleans up all components used in the demonstration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete secret nginx-server-certs nginx-ca-certs -n mesh-external\n$ kubectl delete secret client-credential\n$ kubectl delete rolebinding client-credential-role-binding\n$ kubectl delete role client-credential-role\n$ kubectl delete configmap nginx-configmap -n mesh-external\n$ kubectl delete service my-nginx -n mesh-external\n$ kubectl delete deployment my-nginx -n mesh-external\n$ kubectl delete namespace mesh-external\n$ kubectl delete serviceentry originate-mtls-for-nginx\n$ kubectl delete destinationrule originate-mtls-for-nginx\n```\n\n----------------------------------------\n\nTITLE: Restarting Kubernetes Deployments to Fix Missing Istio Proxy\nDESCRIPTION: This command performs a rolling restart of all deployments in the current namespace to ensure Istio sidecar proxies are properly injected into pods after enabling auto-injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0103/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl rollout restart deployment\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API Resources\nDESCRIPTION: Commands to create a namespace for the ingress gateway and apply the Gateway and HTTPRoute configurations to expose the httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\n  namespace: istio-ingress\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: default\n    hostname: \"*.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: http\n  namespace: default\nspec:\n  parentRefs:\n  - name: gateway\n    namespace: istio-ingress\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /get\n    backendRefs:\n    - name: httpbin\n      port: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Implementing Equivalent v1alpha1 RBAC Policies for httpbin Service in YAML\nDESCRIPTION: The v1alpha1 RBAC configuration equivalent to the v1beta1 example, requiring three separate resources: ClusterRbacConfig, ServiceRole, and ServiceRoleBinding. This demonstrates the complexity reduction achieved with v1beta1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ClusterRbacConfig\nmetadata:\n  name: default\nspec:\n  mode: 'ON_WITH_INCLUSION'\n  inclusion:\n    services: [\"httpbin.foo.svc.cluster.local\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  rules:\n  - services: [\"httpbin.foo.svc.cluster.local\"]\n    methods: [\"GET\"]\n    constraints:\n    - key: request.headers[version]\n      values: [\"v1\", \"v2\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  subjects:\n  - user: \"cluster.local/ns/default/sa/sleep\"\n  roleRef:\n    kind: ServiceRole\n    name: \"httpbin\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API Resources\nDESCRIPTION: Commands to create a namespace for the ingress gateway and apply the Gateway and HTTPRoute configurations to expose the httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\n  namespace: istio-ingress\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: default\n    hostname: \"*.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: http\n  namespace: default\nspec:\n  parentRefs:\n  - name: gateway\n    namespace: istio-ingress\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /get\n    backendRefs:\n    - name: httpbin\n      port: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating SPIRE Sidecar Registration\nDESCRIPTION: Creates a ClusterSPIFFEID resource for auto-registering Istio sidecar pods with SPIRE.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: spire.spiffe.io/v1alpha1\nkind: ClusterSPIFFEID\nmetadata:\n  name: istio-sidecar-reg\nspec:\n  spiffeIDTemplate: \"spiffe://{{ .TrustDomain }}/ns/{{ .PodMeta.Namespace }}/sa/{{ .PodSpec.ServiceAccountName }}\"\n  podSelector:\n    matchLabels:\n      spiffe.io/spire-managed-identity: \"true\"\n  workloadSelectorTemplates:\n    - \"k8s:ns:default\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Generating URL for Browser Access\nDESCRIPTION: Command to output the full URL for accessing the application's product page through the Istio ingress gateway, which can be pasted into a browser.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ echo http://$MY_INGRESS_GATEWAY_HOST:$INGRESS_PORT/productpage\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Ambient Profile\nDESCRIPTION: Installs Istio using the ambient profile with istioctl command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --set profile=ambient\n```\n\n----------------------------------------\n\nTITLE: Implementing Advanced OPA Policy Rule\nDESCRIPTION: Defines a more complex OPA policy rule with request/response modifications and dynamic metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: opa-policy\n  namespace: opa\ndata:\n  policy.rego: |\n    package mypackage.mysubpackage\n\n    import rego.v1\n\n    request_headers := input.attributes.request.http.headers\n\n    force_unauthenticated if request_headers[\"x-force-unauthenticated\"] == \"enabled\"\n\n    default allow := false\n\n    allow if {\n      not force_unauthenticated\n      request_headers[\"x-force-authorized\"] == \"true\"\n    }\n\n    default status_code := 403\n\n    status_code := 200 if allow\n\n    status_code := 401 if force_unauthenticated\n\n    default body := \"Unauthorized Request\"\n\n    body := \"Authentication Failed\" if force_unauthenticated\n\n    myrule := {\n      \"body\": body,\n      \"http_status\": status_code,\n      \"allowed\": allow,\n      \"headers\": {\"x-validated-by\": \"my-security-checkpoint\"},\n      \"response_headers_to_add\": {\"x-add-custom-response-header\": \"added\"},\n      \"request_headers_to_remove\": [\"x-force-authorized\"],\n      \"dynamic_metadata\": {\"my-new-metadata\": \"my-new-value\"},\n    }\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Compatibility Version using IstioOperator\nDESCRIPTION: This command installs Istio using the istioctl CLI, setting the compatibility version to the previous Istio version. This allows the new installation to behave like the previous version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/compatibility-versions/index.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ istioctl install --set values.compatibilityVersion={{< istio_previous_version >}}\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring System Namespace\nDESCRIPTION: Creates and annotates the external-istiod namespace on the remote cluster with control plane topology information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_39\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace external-istiod --context=\"${CTX_SECOND_CLUSTER}\"\nkubectl annotate namespace external-istiod \"topology.istio.io/controlPlaneClusters=${REMOTE_CLUSTER_NAME}\" --context=\"${CTX_SECOND_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Installing App Identity and Access Adapter with Helm from GitHub Repository\nDESCRIPTION: Commands to add the App Identity and Access Adapter Helm repository and install the adapter directly from GitHub using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/app-identity-and-access-adapter/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add appidentityandaccessadapter https://raw.githubusercontent.com/ibm-cloud-security/app-identity-and-access-adapter/master/helm/appidentityandaccessadapter\n$ helm install --name appidentityandaccessadapter appidentityandaccessadapter/appidentityandaccessadapter\n```\n\n----------------------------------------\n\nTITLE: Testing unauthorized request with custom body response\nDESCRIPTION: Tests a request that should be denied with a 403 status code and a custom body message of \"Unauthorized Request\" as defined in the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Overriding Namespace-Level Policy with Workload-Specific Policy\nDESCRIPTION: This snippet demonstrates how to create a workload-specific PeerAuthentication policy that overrides a namespace-wide policy, disabling mTLS for a specific service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n foo -f -\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"overwrite-example\"\n  namespace: \"foo\"\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  mtls:\n    mode: DISABLE\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking Ingress Gateway Service Status\nDESCRIPTION: Command to check the status of the Istio ingress gateway service and determine if an external load balancer is available.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc \"$INGRESS_NAME\" -n \"$INGRESS_NS\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API Resources\nDESCRIPTION: Commands to create a namespace for the ingress gateway and apply the Gateway and HTTPRoute configurations to expose the httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\n  namespace: istio-ingress\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: default\n    hostname: \"*.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: http\n  namespace: default\nspec:\n  parentRefs:\n  - name: gateway\n    namespace: istio-ingress\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /get\n    backendRefs:\n    - name: httpbin\n      port: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Contexts\nDESCRIPTION: Command to list available Kubernetes contexts showing the current context, cluster names, and authentication info.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/kubectl-multicluster-contexts.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config get-contexts\nCURRENT   NAME       CLUSTER    AUTHINFO       NAMESPACE\n*         cluster1   cluster1   user@foo.com   default\n          cluster2   cluster2   user@foo.com   default\n```\n\n----------------------------------------\n\nTITLE: Setting Default Network for cluster2 in Bash\nDESCRIPTION: Sets the network label for the istio-system namespace in cluster2 to 'network2' if the namespace already exists.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --context=\"${CTX_CLUSTER2}\" get namespace istio-system && \\\n  kubectl --context=\"${CTX_CLUSTER2}\" label namespace istio-system topology.istio.io/network=network2\n```\n\n----------------------------------------\n\nTITLE: Customizing Istio Sidecar Injection Settings in YAML\nDESCRIPTION: This YAML snippet demonstrates how to customize various Istio sidecar injection settings for a pod, including CPU requests, volume mounts, and lifecycle hooks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: example\nspec:\n  containers:\n  - name: hello\n    image: alpine\n  - name: istio-proxy\n    image: auto\n    resources:\n      requests:\n        cpu: \"100m\"\n    volumeMounts:\n    - mountPath: /etc/certs\n      name: certs\n    lifecycle:\n      preStop:\n        exec:\n          command: [\"curl\", \"10\"]\n  volumes:\n  - name: certs\n    secret:\n      secretName: istio-certs\n```\n\n----------------------------------------\n\nTITLE: Displaying NamespaceNotInjected Error Message in Istio\nDESCRIPTION: This snippet shows the error message displayed when a namespace is not enabled for Istio injection. It includes instructions for enabling or disabling injection using kubectl commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0102/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWarn [IST0102] (Namespace default) The namespace is not enabled for Istio\ninjection. Run 'kubectl label namespace default istio-injection=enabled' to\nenable it, or 'kubectl label namespace default istio-injection=disabled' to\nexplicitly mark it as not needing injection Error: Analyzer found issues.\n```\n\n----------------------------------------\n\nTITLE: Enabling Ambient Mode DNS Reconciliation when Upgrading CNI\nDESCRIPTION: Command to enable iptables reconciliation for existing pods when upgrading istio-cni. This will automatically enable DNS capture for existing ambient mode workloads without requiring pod restarts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/upgrade-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n--set cni.ambient.reconcileIptablesOnStartup=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cluster Installation (Previous Method)\nDESCRIPTION: YAML configuration for installing Istio on a remote cluster using an external control plane in Istio 1.10. This method requires disabling the base and pilot components while enabling the istiodRemote component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncomponents:\n  base:\n    enabled: false\n  pilot:\n    enabled: false\n  istiodRemote:\n    enabled: true\nvalues:\n  global:\n    externalIstiod: true\n```\n\n----------------------------------------\n\nTITLE: Setting up MySQL database for Bookinfo ratings\nDESCRIPTION: Initializes a MySQL database with rating data for the Bookinfo application. Creates a 'bookinfo' user with SELECT privileges on the ratings table.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/egress-tcp/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/src/mysql/mysqldb-init.sql | mysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ mysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT -e \"CREATE USER 'bookinfo' IDENTIFIED BY '<password you choose>'; GRANT SELECT ON test.ratings to 'bookinfo';\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Istio Attribute Examples in YAML\nDESCRIPTION: This code snippet shows examples of Istio attributes in YAML format. It includes attributes such as request path, size, time, source IP, and destination workload name, demonstrating the type of metadata Istio uses to describe traffic and environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/glossary/attribute.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrequest.path: xyz/abc\nrequest.size: 234\nrequest.time: 12:34:56.789 04/17/2017\nsource.ip: 192.168.0.1\ndestination.workload.name: example\n```\n\n----------------------------------------\n\nTITLE: Configuring CryptoMB Private Key Provider for Istio Gateways\nDESCRIPTION: This snippet demonstrates how to apply the CryptoMB private key provider configuration specifically to the Istio ingress gateway using IstioOperator custom resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/cryptomb-privatekeyprovider/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: istio-system\n  name: example-istiocontrolplane\nspec:\n  profile: demo\n  components:\n    egressGateways:\n    - name: istio-egressgateway\n      enabled: true\n    ingressGateways:\n    - name: istio-ingressgateway\n      enabled: true\n      k8s:\n        podAnnotations:\n          proxy.istio.io/config: |\n            privateKeyProvider:\n              cryptomb:\n                pollDelay: 10ms\n```\n\n----------------------------------------\n\nTITLE: Describing Istiod Pods\nDESCRIPTION: This command provides detailed information about all Istiod pods in the istio-system namespace. It's useful for investigating pod-level issues and configuration details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/validation/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ for pod in $(kubectl -n istio-system get pod -lapp=istiod -o name); do \\\n    kubectl -n istio-system describe ${pod} \\\ndone\n```\n\n----------------------------------------\n\nTITLE: Analyze Multiple YAML Files\nDESCRIPTION: Analyze Bookinfo sample configuration files for potential issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze @samples/bookinfo/networking/bookinfo-gateway.yaml@ @samples/bookinfo/networking/destination-rule-all.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio CNI Repair Mode Options in YAML\nDESCRIPTION: Configuration table showing different repair mode options for Istio CNI, including deletePods, labelPods, and repairPods modes, along with their required roles and behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2023-005/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvalues.cni.repair.deletePods: true   # Requires DELETE pods permissions\nvalues.cni.repair.labelPods: true    # Requires UPDATE pods permissions\nvalues.cni.repair.repairPods: true   # Requires no special permissions\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Example\nDESCRIPTION: Example of front matter configuration for an Istio documentation page, showing required metadata fields and formatting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/style-guide/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Style Guide\ndescription: Explains the style conventions used in the Istio documentation.\nweight: 11\naliases:\n    - /docs/welcome/contribute/style-guide.html\n    - /docs/reference/contribute/style-guide.html\n    - /about/contribute/style-guide\n    - /latest/about/contribute/style-guide\nkeywords: [contribute]\nowner: istio/wg-docs-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying NoMatchingWorkloadsFound Warning Message in Istio\nDESCRIPTION: This snippet shows the warning message that appears when an authorization policy's selector doesn't match any pods. It includes the policy name, namespace, and the unmatched labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0127/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWarning [IST0127] (AuthorizationPolicy httpbin-nopods.httpbin) No matching workloads for this resource with the following labels: app=bogus-label,version=v1\n```\n\n----------------------------------------\n\nTITLE: Displaying kubectl Service Output in Plain Text\nDESCRIPTION: A plain text block showing the output of kubectl get svc command in the istio-system namespace, displaying service information including NAME, TYPE, CLUSTER-IP, EXTERNAL-IP, and PORT(S).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n$ kubectl get svc -n istio-system\nNAME                     TYPE           CLUSTER-IP       EXTERNAL-IP     PORT(S)\ngrafana                  ClusterIP      172.21.211.123   <none>          3000/TCP\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster-Local Traffic Settings in Istio MeshConfig\nDESCRIPTION: YAML configurations demonstrating how to keep traffic local to a cluster using MeshConfig.serviceSettings. Shows examples for per-service, per-namespace, and global settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/multicluster/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nserviceSettings:\n- settings:\n    clusterLocal: true\n  hosts:\n  - \"mysvc.myns.svc.cluster.local\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\nserviceSettings:\n- settings:\n    clusterLocal: true\n  hosts:\n  - \"*.myns.svc.cluster.local\"\n```\n\nLANGUAGE: yaml\nCODE:\n```\nserviceSettings:\n- settings:\n    clusterLocal: true\n  hosts:\n  - \"*\"\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host for Hostname-based LoadBalancer\nDESCRIPTION: Command to set the INGRESS_HOST environment variable when the load balancer uses a hostname instead of an IP address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl -n \"$INGRESS_NS\" get service \"$INGRESS_NAME\" -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n```\n\n----------------------------------------\n\nTITLE: Python Application Connection Example\nDESCRIPTION: Reference to Python application making connection to memcached service IP, demonstrating the connection flow in a service mesh architecture.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/delayering-istio/index.md#2025-04-08_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# Python app making connection to memcached service IP\n# Example reference in discussion of connection flow\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on cluster2 with IstioOperator in Bash\nDESCRIPTION: Applies the IstioOperator configuration to install Istio on cluster2 using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER2}\" -f cluster2.yaml\n```\n\n----------------------------------------\n\nTITLE: Analyze Multiple YAML Files\nDESCRIPTION: Analyze Bookinfo sample configuration files for potential issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze @samples/bookinfo/networking/bookinfo-gateway.yaml@ @samples/bookinfo/networking/destination-rule-all.yaml@\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OPA Configuration\nDESCRIPTION: Installs Istio and configures mesh options to enable OPA as an extension provider for external authorization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -y -f - <<'EOF'\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\n    accessLogFormat: |\n      [OPA DEMO] my-new-dynamic-metadata: \"%DYNAMIC_METADATA(envoy.filters.http.ext_authz)%\"\n    extensionProviders:\n    - name: \"opa.local\"\n      envoyExtAuthzGrpc:\n        service: \"opa.opa.svc.cluster.local\"\n        port: \"9191\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Ambient Components with Helm\nDESCRIPTION: Command to install the Istio ambient control plane and data plane components using a single Helm chart. This installs all required components for ambient mode in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/all-in-one/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-ambient istio/ambient --namespace istio-system --create-namespace --wait\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.12.x Release Page\nDESCRIPTION: YAML front matter block that configures the layout and metadata for the Istio 1.12.x release documentation page. Specifies the title, description, weight for sorting, and display settings for the release grid.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.12.x Releases\ndescription: Announcements for the 1.12 release and its associated patch releases.\nweight: 17\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Retrieving Configuration Diff between Envoy and Istiod in Istio\nDESCRIPTION: This command retrieves the difference between Envoy's loaded configuration and Istiod's intended configuration for a specific proxy. It helps pinpoint exactly what is out of sync and where issues may lie.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status details-v1-6dcc6fbb9d-wsjz4.default\n```\n\n----------------------------------------\n\nTITLE: Verifying Sample Application Deployment in Bash\nDESCRIPTION: Checks the status of the deployed sample applications to ensure they are running with sidecars injected.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Destination Rule with Missing caCertificates in Istio\nDESCRIPTION: This YAML configuration demonstrates a destination rule that triggers the NoServerCertificateVerificationDestinationLevel error. It sets up TLS in SIMPLE mode but omits the caCertificates field needed for server identity validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0128/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: db-tls\nspec:\n  host: mydbserver.prod.svc.cluster.local\n  trafficPolicy:\n    tls:\n      mode: SIMPLE\n      clientCertificate: /etc/certs/myclientcert.pem\n      privateKey: /etc/certs/client_private_key.pem\n      # caCertificates not set\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Previous Istio Control Plane Revision\nDESCRIPTION: Command to remove the previous revision of the Istio control plane after confirming all data plane components are successfully using the new revision. This cleans up unneeded resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod-\"$OLD_REVISION\" -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Testing authorized request with header modifications\nDESCRIPTION: Tests a request with the x-force-authorized header to successfully access the endpoint with a 200 status code and modified headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-authorized: true\"\n```\n\n----------------------------------------\n\nTITLE: Configuring ProxyConfig for Custom Cert Signers\nDESCRIPTION: Creates ProxyConfig resources to define certificate signers for workloads in the bar and foo namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ProxyConfig\nmetadata:\n  name: barpc\n  namespace: bar\nspec:\n  environmentVariables:\n    ISTIO_META_CERT_SIGNER: bar\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ProxyConfig\nmetadata:\n  name: foopc\n  namespace: foo\nspec:\n  environmentVariables:\n    ISTIO_META_CERT_SIGNER: foo\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Auto-Injection Label from Namespace\nDESCRIPTION: Command to remove the istio-injection label from the default namespace, which was used to instruct Istio to automatically inject Envoy sidecar proxies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection-\n```\n\n----------------------------------------\n\nTITLE: Testing Access to Unexposed Path\nDESCRIPTION: Command to test access to an unexposed path, which should return a 404 error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST/headers\"\n```\n\n----------------------------------------\n\nTITLE: Testing Access to Unexposed Path\nDESCRIPTION: Command to test access to an unexposed path, which should return a 404 error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST/headers\"\n```\n\n----------------------------------------\n\nTITLE: Setting Control Plane for Remote Cluster (Bash)\nDESCRIPTION: Creates and annotates the istio-system namespace in the remote cluster (cluster2) to use the primary cluster's control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER2}\" create namespace istio-system\nkubectl --context=\"${CTX_CLUSTER2}\" annotate namespace istio-system topology.istio.io/controlPlaneClusters=cluster1\n```\n\n----------------------------------------\n\nTITLE: Testing Excluded Path with Standalone OPA Setup\nDESCRIPTION: Tests accessing the /ip endpoint which is excluded from authorization, expecting a 200 OK response regardless of token since this path bypasses OPA validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets for TLS Certificates in Istio\nDESCRIPTION: Creates Kubernetes Secrets to store the server certificates, key, and CA certificate. These secrets will be mounted as volumes in the NGINX pod to secure TLS communications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create -n mesh-external secret tls nginx-server-certs --key my-nginx.mesh-external.svc.cluster.local.key --cert my-nginx.mesh-external.svc.cluster.local.crt\n$ kubectl create -n mesh-external secret generic nginx-ca-certs --from-file=example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Displaying InvalidExternalControlPlaneConfig Warning Messages\nDESCRIPTION: These warning messages are displayed when the webhook configurations have missing or invalid URLs for the ingress gateway on the external control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0163/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0163] (MutatingWebhookConfiguration istio-sidecar-injector-external-istiod testing.yml:28) The hostname () that was provided for the webhook (rev.namespace.sidecar-injector.istio.io) to reach the ingress gateway on the external control plane cluster is blank. Traffic may not flow properly.\nWarning [IST0163] (ValidatingWebhookConfiguration istio-validator-external-istiod testing.yml:1) The hostname () that was provided for the webhook (rev.validation.istio.io) to reach the ingress gateway on the external control plane cluster is blank. Traffic may not flow properly.\n```\n\n----------------------------------------\n\nTITLE: Displaying Version Information with Hugo Shortcodes in Markdown\nDESCRIPTION: Demonstrates how to use shortcodes to display the current Istio version in documentation content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* istio_version */>}}\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* istio_full_version */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating External Namespace for Non-Istio Services\nDESCRIPTION: Creates a Kubernetes namespace for services that run outside the Istio service mesh. The namespace 'mesh-external' won't have automatic sidecar injection, simulating an external service environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace mesh-external\n```\n\n----------------------------------------\n\nTITLE: Upgrading CNI Component with Helm\nDESCRIPTION: Helm command to upgrade the istio-cni component in the istio-system namespace with wait functionality enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/cni/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-cni istio/cni -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Validator Webhook Configuration\nDESCRIPTION: This command retrieves the ValidatingWebhookConfiguration for Istio's validator in YAML format. It shows the webhook configuration details including API versions, client config, and validation rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/validation/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get validatingwebhookconfiguration istio-validator-istio-system -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  labels:\n    app: istiod\n    install.operator.istio.io/owning-resource-namespace: istio-system\n    istio: istiod\n    istio.io/rev: default\n    operator.istio.io/component: Pilot\n    operator.istio.io/managed: Reconcile\n    operator.istio.io/version: unknown\n    release: istio\n  name: istio-validator-istio-system\n  resourceVersion: \"615569\"\n  uid: 112fed62-93e7-41c9-8cb1-b2665f392dd7\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    # caBundle should be non-empty. This is periodically (re)patched\n    # every second by the webhook service using the ca-cert\n    # from the mounted service account secret.\n    caBundle: LS0t...\n    # service corresponds to the Kubernetes service that implements the webhook\n    service:\n      name: istiod\n      namespace: istio-system\n      path: /validate\n      port: 443\n  failurePolicy: Fail\n  matchPolicy: Equivalent\n  name: rev.validation.istio.io\n  namespaceSelector: {}\n  objectSelector:\n    matchExpressions:\n    - key: istio.io/rev\n      operator: In\n      values:\n      - default\n  rules:\n  - apiGroups:\n    - security.istio.io\n    - networking.istio.io\n    - telemetry.istio.io\n    - extensions.istio.io\n    apiVersions:\n    - '*'\n    operations:\n    - CREATE\n    - UPDATE\n    resources:\n    - '*'\n    scope: '*'\n  sideEffects: None\n  timeoutSeconds: 10\n```\n\n----------------------------------------\n\nTITLE: Defining Service Protocols in Kubernetes with appProtocol and Port Naming\nDESCRIPTION: This YAML example demonstrates how to define protocols for a Kubernetes Service using both the appProtocol field and port naming convention. It shows a service with an HTTPS port specified via appProtocol and an HTTP port specified via port naming.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/protocol-selection/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\nmetadata:\n  name: myservice\nspec:\n  ports:\n  - port: 3306\n    name: database\n    appProtocol: https\n  - port: 80\n    name: http-web\n```\n\n----------------------------------------\n\nTITLE: Configuring Telemetry with Both Selector and TargetRef in YAML\nDESCRIPTION: Demonstrates a Telemetry configuration that uses both selector and targetRef fields, which prevents the IneffectiveSelector warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0166/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: telemetry-example\n  namespace: default\nspec:\n  tracing:\n  - randomSamplingPercentage: 10.00\n  selector:\n    matchLabels:\n      gateway.networking.k8s.io/gateway-name: bookinfo-gateway\n  targetRef:\n    group: gateway.networking.k8s.io\n    kind: Gateway\n    name: bookinfo-gateway\n```\n\n----------------------------------------\n\nTITLE: Creating SPIRE Gateway Registration\nDESCRIPTION: Creates a ClusterSPIFFEID resource for auto-registering Istio Ingress gateway pods with SPIRE.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: spire.spiffe.io/v1alpha1\nkind: ClusterSPIFFEID\nmetadata:\n  name: istio-ingressgateway-reg\nspec:\n  spiffeIDTemplate: \"spiffe://{{ .TrustDomain }}/ns/{{ .PodMeta.Namespace }}/sa/{{ .PodSpec.ServiceAccountName }}\"\n  workloadSelectorTemplates:\n    - \"k8s:ns:istio-system\"\n    - \"k8s:sa:istio-ingressgateway-service-account\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Test Resources in Istio\nDESCRIPTION: This bash command removes the curl and httpbin services that were used for testing the access logging functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@\n$ kubectl delete -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Alternative TLS Gateway Configuration for Termination\nDESCRIPTION: YAML snippet showing an alternative fix for the TLS mismatch by changing the gateway to terminate TLS instead of passing it through. This allows HTTP routing in the virtual service to work correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  ...\n    tls:\n      credentialName: sds-credential\n      mode: SIMPLE\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Resources\nDESCRIPTION: Removes all created resources, including certificates, secrets, policies, and sample applications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ rm -rf certs\n$ kubectl delete secret cacerts -n istio-system\n$ kubectl delete peerauthentication -n foo default\n$ kubectl delete -f samples/curl/curl.yaml -n foo\n$ kubectl delete -f samples/httpbin/httpbin.yaml -n foo\n$ istioctl uninstall --purge -y\n$ kubectl delete ns foo istio-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Banner Display Period in YAML\nDESCRIPTION: YAML front matter configuration that defines the display period for a test banner, setting start and end dates for when the banner should be shown.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/test-banner.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Test banner\nperiod_start: 2021-03-07\nperiod_end: 2021-03-26\n---\n```\n\n----------------------------------------\n\nTITLE: Disabling Envoy Access Logging in Istio\nDESCRIPTION: This bash command reinstalls Istio with the default profile, which effectively disables access logging by removing the meshConfig.accessLogFile setting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=default\n✔ Istio core installed\n✔ Istiod installed\n✔ Ingress gateways installed\n✔ Installation complete\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Automated WorkloadEntry\nDESCRIPTION: Installs Istio using the generated operator spec with additional configuration for automated WorkloadEntry creation and health checks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f vm-cluster.yaml --set values.pilot.env.PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION=true --set values.pilot.env.PILOT_ENABLE_WORKLOAD_ENTRY_HEALTHCHECKS=true\n```\n\n----------------------------------------\n\nTITLE: Inspecting Cluster Configuration\nDESCRIPTION: Shows how to view cluster configuration for the reviews service using istioctl proxy-config cluster command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config cluster productpage-v1-6c886ff494-7vxhs --fqdn reviews.default.svc.cluster.local -o json\n```\n\n----------------------------------------\n\nTITLE: Installing East-West Gateway on cluster2 with IstioOperator\nDESCRIPTION: Installs an east-west gateway on cluster2 using a generated configuration and istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ @samples/multicluster/gen-eastwest-gateway.sh@ \\\n    --network network2 | \\\n    istioctl --context=\"${CTX_CLUSTER2}\" install -y -f -\n```\n\n----------------------------------------\n\nTITLE: Upgrading Ztunnel with Revision Support using Helm\nDESCRIPTION: Command to upgrade the ztunnel DaemonSet with revision support using Helm. This approach still causes brief traffic disruption despite using revisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade ztunnel istio/ztunnel -n istio-system --set revision=\"$REVISION\" --wait\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Ingress Gateway with Helm\nDESCRIPTION: Commands to create a dedicated namespace and install the Istio ingress gateway for handling incoming traffic to the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-ingress\n$ helm install istio-ingress istio/gateway -n istio-ingress --wait\n```\n\n----------------------------------------\n\nTITLE: Examining Dual-Stack Envoy Listener Configuration\nDESCRIPTION: This JSON snippet shows the Envoy listener configuration for a dual-stack service, demonstrating how it's set up to listen on both IPv6 and IPv4 addresses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n\"name\": \"fd00:10:96::f9fc_9000\",\n\"address\": {\n    \"socketAddress\": {\n        \"address\": \"fd00:10:96::f9fc\",\n        \"portValue\": 9000\n    }\n},\n\"additionalAddresses\": [\n    {\n        \"address\": {\n            \"socketAddress\": {\n                \"address\": \"10.96.106.11\",\n                \"portValue\": 9000\n            }\n        }\n    }\n],\n```\n\n----------------------------------------\n\nTITLE: HTTPS Failover DestinationRule Configuration\nDESCRIPTION: DestinationRule configuration with TLS settings and locality-based load balancing\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: DestinationRule\nmetadata:\n  name: mydynamodb\nspec:\n  host: mydb.com\n  trafficPolicy:\n    tls:\n      mode: SIMPLE\n    loadBalancer:\n      simple: ROUND_ROBIN\n      localityLbSetting:\n        enabled: true\n        failover:\n          - from: us-east1\n            to: us-west\n    outlierDetection:\n      consecutive5xxErrors: 1\n      interval: 15s\n      baseEjectionTime: 1m\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Tags to REQUEST_COUNT Metric (YAML)\nDESCRIPTION: Telemetry API configuration to add custom tags destination_x and source_x to the REQUEST_COUNT metric, using different values for client and server modes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: custom-tags\n  namespace: istio-system\nspec:\n  metrics:\n    - overrides:\n        - match:\n            metric: REQUEST_COUNT\n            mode: CLIENT\n          tagOverrides:\n            destination_x:\n              value: filter_state.upstream_peer.app\n        - match:\n            metric: REQUEST_COUNT\n            mode: SERVER\n          tagOverrides:\n            source_x:\n              value: filter_state.downstream_peer.app\n      providers:\n        - name: prometheus\n```\n\n----------------------------------------\n\nTITLE: Error Message in Envoy Logs for JWT Vulnerability\nDESCRIPTION: Error message that appears in Envoy logs when the JWT validation filter crashes due to a malformed JWT token, indicating a segmentation fault.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2019-002/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nEpoch 0 terminated with an error: signal: segmentation fault (core dumped)\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Client Credentials\nDESCRIPTION: Creates a Kubernetes secret containing client certificates for mutual TLS authentication. The secret includes the client key, client certificate, and CA certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret -n istio-system generic client-credential --from-file=tls.key=client.example.com.key \\\n  --from-file=tls.crt=client.example.com.crt --from-file=ca.crt=example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Sidecar Resources with Annotations in YAML\nDESCRIPTION: This YAML snippet shows how to use annotations to configure CPU and memory resources for the Istio sidecar proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/sidecar-injection/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  template:\n    metadata:\n      annotations:\n        sidecar.istio.io/proxyCPU: \"200m\"\n        sidecar.istio.io/proxyMemoryLimit: \"5Gi\"\n```\n\n----------------------------------------\n\nTITLE: Testing gRPC Resolver with Port Forwarding\nDESCRIPTION: These Bash commands set up port forwarding and use grpcurl to test the gRPC resolver with various service naming patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n echo-grpc port-forward $(kubectl -n echo-grpc get pods -l version=v1 -ojsonpath='{.items[0].metadata.name}') 17171 &\n\n$ grpcurl -plaintext -d '{\"url\": \"xds:///echo.echo-grpc.svc.cluster.local:7070\", \"count\": 5}' :17171 proto.EchoTestService/ForwardEcho | jq -r '.output | join(\"\")'  | grep Hostname\n```\n\n----------------------------------------\n\nTITLE: Confirming Socket States in Ambient Pod\nDESCRIPTION: This command uses kubectl debug to inspect the state of sockets on ports 15001, 15006, and 15008 in an ambient-enabled pod, verifying they are open and listening.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/architecture/traffic-redirection/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl debug $(kubectl get pod -l app=curl -n ambient-demo -o jsonpath='{.items[0].metadata.name}') -it -n ambient-demo  --image nicolaka/netshoot  -- ss -ntlp\n```\n\n----------------------------------------\n\nTITLE: Creating Per-Cluster Service Subsets with DestinationRule\nDESCRIPTION: YAML configuration for creating service subsets based on cluster topology using DestinationRule and topology labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/multicluster/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: mysvc-per-cluster-dr\nspec:\n  host: mysvc.myns.svc.cluster.local\n  subsets:\n  - name: cluster-1\n    labels:\n      topology.istio.io/cluster: cluster-1\n  - name: cluster-2\n    labels:\n      topology.istio.io/cluster: cluster-2\n```\n\n----------------------------------------\n\nTITLE: Calculating Request Rate for Reviews Microservice with Prometheus PromQL\nDESCRIPTION: This query calculates the rate of requests over the past 5 minutes for all instances of the 'reviews' microservice using the istio_requests_total metric. It uses the rate() function and filters for the destination service namespace, reporter, and service name.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/logs-istio/index.md#2025-04-08_snippet_3\n\nLANGUAGE: promql\nCODE:\n```\nrate(istio_requests_total{destination_service_namespace=\"tutorial\", reporter=\"destination\",destination_service_name=\"reviews\"}[5m])\n```\n\n----------------------------------------\n\nTITLE: Warning Callout Implementation in Hugo\nDESCRIPTION: Demonstrates three variations of warning callouts: single paragraph, two paragraphs, and with nested text block.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts_and_lists/index.md#2025-04-08_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{< warning >}}\nThis is a warning\n{{< /warning >}}\n\n{{< warning >}}\nThis is a warning\n\nwith two paragraphs\n{{< /warning >}}\n\n{{< warning >}}\nThis is a warning\n\nwith two paragraphs\n\n{{< text plain >}}\nA nested text block\n{{< /text >}}\n\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Quote Callout Templates in Istio Documentation\nDESCRIPTION: Examples of quote callouts demonstrating single paragraph, multiple paragraphs, and nested text block formats.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts/index.md#2025-04-08_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n{{< quote >}}\nThis is a quote\n{{< /quote >}}\n\n{{< quote >}}\nThis is a quote\n\nwith two paragraphs\n{{< /quote >}}\n\n{{< quote >}}\nThis is a quote\n\nwith two paragraphs\n\n{{< text plain >}}\nA nested text block\n{{< /text >}}\n\n{{< /quote >}}\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Control Plane\nDESCRIPTION: Command placeholder for removing a specific Istio control plane using original installation options.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/istioctl/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl uninstall <your original installation options>\n```\n\n----------------------------------------\n\nTITLE: Viewing Istio Revision Tags with istioctl in Bash\nDESCRIPTION: Command to list all Istio revision tags, showing which revision each tag points to and the associated namespaces. This helps operators understand the current mapping between tags, revisions, and namespaces during canary deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/revision-tags-middle.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl tag list\nTAG         REVISION NAMESPACES\ndefault     {{< istio_previous_version_revision >}}-1   ...\nprod-canary {{< istio_full_version_revision >}}   ...\nprod-stable {{< istio_previous_version_revision >}}-1   ...\n```\n\n----------------------------------------\n\nTITLE: Creating Backend Service Definitions for Reviews Service\nDESCRIPTION: Applies backend service definitions for three versions of the reviews service using Kubernetes Gateway API approach.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f samples/bookinfo/platform/kube/bookinfo-versions.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting MongoDB Admin Password\nDESCRIPTION: Commands to set environment variables for MongoDB admin credentials\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/egress-mongo/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export MONGO_ADMIN_PASSWORD=<your MongoDB admin password>\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Application for Canary Testing\nDESCRIPTION: Deploys a sample curl application in the test namespace to verify Istio sidecar injection and control plane association.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n test-ns -f samples/curl/curl.yaml\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Sidecar Injection by Label Selector with istioctl\nDESCRIPTION: Command to verify if Istio sidecar injection is configured correctly for pods matching specific labels. This allows checking multiple pods with common labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/check-inject/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental check-inject -n <namespace> -l <label-key>=<label-value>\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Sidecar Injection by Label Selector with istioctl\nDESCRIPTION: Command to verify if Istio sidecar injection is configured correctly for pods matching specific labels. This allows checking multiple pods with common labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/check-inject/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental check-inject -n <namespace> -l <label-key>=<label-value>\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Blog Directory Settings in YAML\nDESCRIPTION: YAML front matter that configures the blog section settings including title, description, sidebar properties, URL aliases, and output formats. This configuration is used to set up the blog landing page properties in the Istio documentation site.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Blog\ndescription: Read articles from contributors and users on all things Istio.\nlinktitle: Blog\nsidebar_multicard: true\ndecoration: pill\naliases:\n    - /blog/posts/index.html\noutputs:\n    - html\n    - rss\n```\n\n----------------------------------------\n\nTITLE: Checking Kiali Version in Istio System\nDESCRIPTION: This command retrieves the Kiali pod information and filters for the image version to check if the installation is vulnerable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system -l app=kiali -o yaml | grep image:\n```\n\n----------------------------------------\n\nTITLE: Inspecting Istio Secrets for TLS Certificates\nDESCRIPTION: Retrieves and displays the TLS certificates and keys used by Istio for a specific pod. This helps in verifying the correctness of certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config secret curl-8f795f47d-4s4t7\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host IP for GKE\nDESCRIPTION: Command to set the ingress host IP address for Google Kubernetes Engine (GKE) environments, using the worker node address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=worker-node-address\n```\n\n----------------------------------------\n\nTITLE: Testing Circuit Breaker with Fortio Client in Istio\nDESCRIPTION: This bash snippet shows how to use the Fortio client to send a request to the httpbin service, demonstrating the circuit breaker in action.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export FORTIO_POD=$(kubectl get pods -l app=fortio -o 'jsonpath={.items[0].metadata.name}')\n$ kubectl exec \"$FORTIO_POD\" -c fortio -- /usr/bin/fortio curl -quiet http://httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Verifying Virtual Inbound Listener for Dual-Stack\nDESCRIPTION: This command checks the virtual inbound listener configuration to ensure it's set up for both IPv4 and IPv6 traffic in a dual-stack environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config listeners \"$(kubectl get pod -n dual-stack -l app=tcp-echo -o jsonpath='{.items[0].metadata.name}')\" -n dual-stack -o json | jq '.[] | select(.name==\"virtualInbound\") | {name: .name, address: .address, additionalAddresses: .additionalAddresses}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Strict Mutual TLS\nDESCRIPTION: Applies strict mutual TLS authentication policy in the designated namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/app-health-check/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"default\"\n  namespace: \"istio-io-health\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Retrieving Envoy Stats from Istio Proxy\nDESCRIPTION: This command executes into the istio-proxy container of a pod and requests Envoy stats using the pilot-agent.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/telemetry/envoy-stats/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$POD\" -c istio-proxy -- pilot-agent request GET stats\n```\n\n----------------------------------------\n\nTITLE: Testing Circuit Breaker with Fortio Client in Istio\nDESCRIPTION: This bash snippet shows how to use the Fortio client to send a request to the httpbin service, demonstrating the circuit breaker in action.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export FORTIO_POD=$(kubectl get pods -l app=fortio -o 'jsonpath={.items[0].metadata.name}')\n$ kubectl exec \"$FORTIO_POD\" -c fortio -- /usr/bin/fortio curl -quiet http://httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Testing Helm Template with Post-renderer for Istio Gateway\nDESCRIPTION: Command to render the Istio Gateway Helm chart with the custom post-renderer and verify that the sysctl configuration is properly added. Uses grep to filter for the specific customization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template istio-ingress istio/gateway --namespace istio-ingress --post-renderer ./kustomize.sh | grep -B 2 -A 1 netfilter.nf_conntrack_tcp_timeout_close_wait\n```\n\n----------------------------------------\n\nTITLE: Displaying Bash Commands with Indentation in Hugo\nDESCRIPTION: Shows how to display bash commands with various levels of indentation using Hugo's text shortcode within a tab structure.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/test/tabs_and_lists/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ NoIndent:\n    FourIndent:\n        - EightIndent\n    FourIndentAgain:\n        - EightIndentAgain\n```\n\n----------------------------------------\n\nTITLE: Checking Default Service Account Capabilities in Default Namespace\nDESCRIPTION: This bash command specifically checks if the default service account in the default namespace has the necessary permissions to use pod security policies with NET_ADMIN and NET_RAW capabilities, which are required for Istio sidecar deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/deployment/application-requirements/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ for psp in $(kubectl get psp -o jsonpath=\"{range .items[*]}{@.metadata.name}{'\\n'}{end}\"); do if [ $(kubectl auth can-i use psp/$psp --as=system:serviceaccount:default:default) = yes ]; then kubectl get psp/$psp --no-headers -o=custom-columns=NAME:.metadata.name,CAPS:.spec.allowedCapabilities; fi; done\n```\n\n----------------------------------------\n\nTITLE: Testing Load Balancing Across Service Replicas in Istio Ambient Mode\nDESCRIPTION: This command executes a loop that sends 10 HTTP requests to the reviews service, allowing verification of load balancing across service replicas. It's run from a curl deployment pod in the default namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-ztunnel/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n default exec deploy/curl -- sh -c 'for i in $(seq 1 10); do curl -s -I http://reviews:9080/; done'\n```\n\n----------------------------------------\n\nTITLE: Highlighting TLS Mode Options in Istio DestinationRule\nDESCRIPTION: Demonstrates the two possible TLS mode configurations in Istio DestinationRules. ISTIO_MUTUAL automatically handles Istio certificates, while MUTUAL requires manual configuration of key, certificate, and trusted CA, enabling compatibility with non-Istio applications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/traffic-management/difference-between-mutual-and-istio-mutual.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nDestinationRule\n```\n\n----------------------------------------\n\nTITLE: Disabling Auto mTLS for Workload Level Peer Authentication\nDESCRIPTION: Environment variable to disable the Auto mTLS support for workload level peer authentication. By default, this feature eliminates the need to configure destination rules when servers have workload-level peer authentication policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12/change-notes/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_AUTO_MTLS_CHECK_POLICIES=false\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Change Notes\nDESCRIPTION: YAML metadata defining the document properties including title, subtitle, description, publish date, release version, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.14 Change Notes\nlinktitle: 1.14.0\nsubtitle: Minor Release\ndescription: Istio 1.14.0 change notes.\npublishdate: 2022-05-24\nrelease: 1.14.0\nweight: 10\naliases:\n- /news/announcing-1.14.0\n---\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate and Key\nDESCRIPTION: Creates a client certificate and private key for client.example.com using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out example_certs1/client.example.com.csr -newkey rsa:2048 -nodes -keyout example_certs1/client.example.com.key -subj \"/CN=client.example.com/O=client organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example_certs1/example.com.crt -CAkey example_certs1/example.com.key -set_serial 1 -in example_certs1/client.example.com.csr -out example_certs1/client.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Installation with Helm\nDESCRIPTION: Commands to check the status of Helm deployments and Kubernetes pods after installing Istio components. This helps verify that the installation was successful.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/all-in-one/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ helm ls -n istio-system\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Storing Curl Pod Name as Environment Variable in Istio\nDESCRIPTION: Creates a shell variable to hold the name of the source pod for sending requests to external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Testing External Service Access\nDESCRIPTION: Command to test the configured external service access through the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\" -c curl -- curl -sS http://my-nginx.mesh-external.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Verifying Traffic Split Weights\nDESCRIPTION: Demonstrates how to configure traffic splitting between service versions and verify the configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-90-10.yaml@\n$ istioctl x describe pod $REVIEWS_V1_POD\n...\nVirtualService: reviews\n   Weight 90%\n```\n\n----------------------------------------\n\nTITLE: Displaying Full Istio Version in Documentation\nDESCRIPTION: This snippet is a placeholder for displaying the full version of Istio. It uses a custom shortcode or template syntax to insert the version number dynamically.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/boilerplates/args.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=istio_full_version >}}\n{{< istio_full_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Removing Configuration Files from Istio mTLS Demo\nDESCRIPTION: This command removes the nginx configuration file generated during the mutual TLS origination demonstration. It cleans up the last configuration artifact from the filesystem.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ rm ./nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Checking Outlier Detection Status in Istio\nDESCRIPTION: This command checks the outlier detection status for endpoints of the external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl pc endpoints <sleep-pod> | grep mydb\n```\n\n----------------------------------------\n\nTITLE: Setting Default Istio Revision\nDESCRIPTION: Command to set a specific Istio revision as the default revision. The default revision has special privileges including sidecar injection based on namespace selectors, resource validation, and exclusive mesh responsibilities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/revision-tags-default-intro.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n{{< istio_full_version_revision >}}\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OpenShift Profile\nDESCRIPTION: This command installs Istio using the OpenShift profile, which is specifically configured for OpenShift environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/openshift/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=openshift\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Proxy Logs\nDESCRIPTION: Fetches the logs from the Istio proxy sidecar container in the httpbin pod to analyze authorization decisions and policy enforcement.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs $(kubectl get pods -l app=httpbin -o jsonpath='{.items[0].metadata.name}') -c istio-proxy\n```\n\n----------------------------------------\n\nTITLE: Getting Namespace Information\nDESCRIPTION: Command to output the current Kubernetes namespace name\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\necho $(kubectl config view -o jsonpath=\"{.contexts[?(@.name == \\\"$(kubectl config current-context)\\\")].context.namespace}\")\n```\n\n----------------------------------------\n\nTITLE: Sending Requests to reviews v2 Pod Directly\nDESCRIPTION: Gets the IP address of the 'reviews' v2 Pod and sends a direct request to it. This helps verify if Pod-level waypoint proxies are enforcing L7 policies correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport REVIEWS_V2_POD_IP=$(kubectl get pod -l version=v2,app=reviews -o jsonpath='{.items[0].status.podIP}')\nkubectl exec deploy/curl -- curl -s http://$REVIEWS_V2_POD_IP:9080/reviews/1\n```\n\n----------------------------------------\n\nTITLE: Enabling Ambient Mode for Namespace or Pod in YAML\nDESCRIPTION: Add the 'istio.io/dataplane-mode=ambient' label to a namespace or individual pod to enable Ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    istio.io/dataplane-mode: ambient\n```\n\n----------------------------------------\n\nTITLE: Upgrading Manually Deployed Gateway Chart\nDESCRIPTION: Command to upgrade a manually deployed Istio gateway using Helm. This is necessary for gateways that were deployed manually rather than through automatic injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-ingress istio/gateway -n istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Creating an Allow-All Authorization Policy in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy that allows all requests by using an empty rule with the ALLOW action, providing a way to temporarily grant full access to a workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-all\nspec:\n  action: ALLOW\n  # 这将匹配所有内容。\n  rules:\n  - {}\n```\n\n----------------------------------------\n\nTITLE: Scaling Up Reviews v2 Deployment\nDESCRIPTION: This command increases the number of replicas for the v2 deployment to gradually increase its traffic share.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl scale deployment reviews-v2 --replicas=3\n```\n\n----------------------------------------\n\nTITLE: Deploying NGINX Server in Kubernetes with Bash\nDESCRIPTION: Deploys an NGINX server as a Kubernetes Service and Deployment in the mesh-external namespace. The deployment includes volume mounts for the NGINX configuration and certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-nginx\n  namespace: mesh-external\n  labels:\n    run: my-nginx\n  annotations:\n    \"networking.istio.io/exportTo\": \".\" # simulate an external service by not exporting outside this namespace\nspec:\n  ports:\n  - port: 443\n    protocol: TCP\n  selector:\n    run: my-nginx\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-nginx\n  namespace: mesh-external\nspec:\n  selector:\n    matchLabels:\n      run: my-nginx\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        run: my-nginx\n    spec:\n      containers:\n      - name: my-nginx\n        image: nginx\n        ports:\n        - containerPort: 443\n        volumeMounts:\n        - name: nginx-config\n          mountPath: /etc/nginx\n          readOnly: true\n        - name: nginx-server-certs\n          mountPath: /etc/nginx-server-certs\n          readOnly: true\n        - name: nginx-ca-certs\n          mountPath: /etc/nginx-ca-certs\n          readOnly: true\n      volumes:\n      - name: nginx-config\n        configMap:\n          name: nginx-configmap\n      - name: nginx-server-certs\n        secret:\n          secretName: nginx-server-certs\n      - name: nginx-ca-certs\n        secret:\n          secretName: nginx-ca-certs\nEOF\n```\n\n----------------------------------------\n\nTITLE: Removing Gateway API HTTPRoute for Cleanup\nDESCRIPTION: This command removes the HTTPRoute resource for the reviews service, reverting to the default routing behavior in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete httproute reviews\n```\n\n----------------------------------------\n\nTITLE: Delete Configuration Files\nDESCRIPTION: Command to remove the generated NGINX configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\nrm ./nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Linking to Istio TLS Configuration Documentation in Markdown\nDESCRIPTION: This snippet demonstrates how to create a Markdown link to Istio's documentation for configuring the minimum TLS protocol version for workloads across the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/secure-apps-with-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[配置不同网格范围的最低 TLS 协议版本](/zh/docs/tasks/security/tls-configuration/workload-min-tls-version/)\n```\n\n----------------------------------------\n\nTITLE: Validating Istio Container Image with Cosign\nDESCRIPTION: This command uses Cosign to verify the signature of an Istio container image. It fetches the Istio public key from the specified URL and verifies the image against it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/image-signing-validation/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ./cosign-binary verify --key \"https://istio.io/misc/istio-key.pub\" {{< istio_docker_image \"pilot\" >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring istiod CA Certificate with Helm\nDESCRIPTION: This YAML snippet demonstrates how to modify the Helm values file to change the self-signed CA certificate's bit length for istiod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/manage-mesh-certificates/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npilot:\n  env:\n    CITADEL_SELF_SIGNED_CA_RSA_KEY_SIZE: 4096\n```\n\n----------------------------------------\n\nTITLE: Creating a Kustomization YAML File for Istio Customization\nDESCRIPTION: Defines a kustomization.yaml file that specifies the resources and patch files to be used by Kustomize. This includes the base YAML from Helm and the sysctl patch for the Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat > kustomization.yaml <<EOF\nresources:\n- base.yaml\npatchesStrategicMerge:\n- sysctl-ingress-gw-customization.yaml\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo Sample Application without Istio Sidecars\nDESCRIPTION: Command to deploy the Bookinfo sample application without Istio sidecar containers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo.yaml@\n```\n\n----------------------------------------\n\nTITLE: Introducing VirtualService Configuration Error\nDESCRIPTION: kubectl command to patch the bookinfo VirtualService with an invalid gateway name\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch vs bookinfo -n bookinfo --type json -p '[{\"op\":\"replace\",\"path\":\"/spec/gateways/0\", \"value\":\"bookinfo-gateway-invalid\"}]'\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Waypoint Configurations in Istio (Bash)\nDESCRIPTION: These commands remove all waypoints from a namespace. The first command deletes all waypoints in the default namespace, and the second command removes the namespace-level waypoint label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint delete --all -n default\n$ kubectl label ns default istio.io/use-waypoint-\n```\n\n----------------------------------------\n\nTITLE: Running Test Status Command\nDESCRIPTION: Command to check current test coverage and list tested/untested documents\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmake test_status\n```\n\n----------------------------------------\n\nTITLE: Defining Istio Day Europe Event Front Matter in Markdown\nDESCRIPTION: Front matter metadata for the Istio Day Europe event, containing the title, start and end dates, and a registration link. This YAML-formatted metadata is embedded at the top of a markdown file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/istio-day-eu-2024.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Istio Day Europe\nperiod_start: 2024-02-21\nperiod_end: 2024-03-19\nlink: https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/co-located-events/istio-day/\n---\n```\n\n----------------------------------------\n\nTITLE: NGINX Configuration File\nDESCRIPTION: NGINX server configuration with SSL settings for serving HTTPS traffic on port 443.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_1\n\nLANGUAGE: nginx\nCODE:\n```\nevents {\n}\n\nhttp {\n  log_format main '$remote_addr - $remote_user [$time_local]  $status '\n  '\"$request\" $body_bytes_sent \"$http_referer\" '\n  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  access_log /var/log/nginx/access.log main;\n  error_log  /var/log/nginx/error.log;\n\n  server {\n    listen 443 ssl;\n\n    root /usr/share/nginx/html;\n    index index.html;\n\n    server_name nginx.example.com;\n    ssl_certificate /etc/nginx-server-certs/tls.crt;\n    ssl_certificate_key /etc/nginx-server-certs/tls.key;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin Sample Application in Bash\nDESCRIPTION: Command to deploy the httpbin sample application to the httptools namespace. This deploys both a service and deployment resource for testing HTTP functionality within the Istio mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n httptools\nservice/httpbin created\ndeployment.apps/httpbin created\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Logs (Istio APIs)\nDESCRIPTION: Command to check logs from the Istio egress gateway pods filtered for specific NGINX external service requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -l istio=egressgateway -n istio-system | grep 'my-nginx.mesh-external.svc.cluster.local' | grep HTTP\n```\n\n----------------------------------------\n\nTITLE: Configuring ELB for Istio Ingress Gateway in Huawei Cloud\nDESCRIPTION: This snippet demonstrates how to bind an Elastic Load Balancer instance to the istio-ingressgateway service in Huawei Cloud. It includes annotations for specifying the ELB ID and load balancing algorithm, along with port configurations for various protocols used by Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/huaweicloud/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kubernetes.io/elb.class: union\n    kubernetes.io/elb.id: 4ee43d2b-cec5-4100-89eb-2f77837daa63 # ELB ID\n    kubernetes.io/elb.lb-algorithm: ROUND_ROBIN\n  labels:\n    app: istio-ingressgateway\n    install.operator.istio.io/owning-resource: unknown\n    install.operator.istio.io/owning-resource-namespace: istio-system\n    istio: ingressgateway\n    istio.io/rev: default\n    operator.istio.io/component: IngressGateways\n    operator.istio.io/managed: Reconcile\n    operator.istio.io/version: 1.9.0\n    release: istio\n  name: istio-ingressgateway\n  namespace: istio-system\nspec:\n  clusterIP: 10.247.7.192\n  externalTrafficPolicy: Cluster\n  loadBalancerIP: 119.8.36.132     ## ELB EIP\n  ports:\n  - name: status-port\n    nodePort: 32484\n    port: 15021\n    protocol: TCP\n    targetPort: 15021\n  - name: http2\n    nodePort: 30294\n    port: 80\n    protocol: TCP\n    targetPort: 8080\n  - name: https\n    nodePort: 31301\n    port: 443\n    protocol: TCP\n    targetPort: 8443\n  - name: tcp\n    nodePort: 30229\n    port: 31400\n    protocol: TCP\n    targetPort: 31400\n  - name: tls\n    nodePort: 32028\n    port: 15443\n    protocol: TCP\n    targetPort: 15443\n  selector:\n    app: istio-ingressgateway\n    istio: ingressgateway\n  sessionAffinity: None\n  type: LoadBalancer\nEOF\n```\n\n----------------------------------------\n\nTITLE: Exposing Istiod Through Ingress - Bash Command\nDESCRIPTION: Command to apply the configuration for exposing Istiod through ingress during mesh expansion setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.8.x/announcing-1.8/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/multicluster/expose-istiod.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot.txt for Istio Documentation Website\nDESCRIPTION: This snippet defines the robot.txt configuration for the Istio documentation website. It allows all user agents to access the site and specifies the location of the sitemap file.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.7/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.7/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Creating httpbin Kubernetes Service\nDESCRIPTION: Kubernetes service configuration for the httpbin application that will route traffic to the deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  labels:\n    app: httpbin\nspec:\n  ports:\n  - name: http\n    port: 8000\n    targetPort: 80\n  selector:\n    app: httpbin\n```\n\n----------------------------------------\n\nTITLE: Declarative FilterDeployment Configuration\nDESCRIPTION: YAML configuration for deploying a Wasm filter using the wasme operator's FilterDeployment custom resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/deploy-wasm-declarative/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: wasme.io/v1\nkind: FilterDeployment\nmetadata:\n  name: bookinfo-custom-filter\n  namespace: bookinfo\nspec:\n  deployment:\n    istio:\n      kind: Deployment\n      labels:\n        app: details\n  filter:\n    config: 'world'\n    image: webassemblyhub.io/ceposta/demo-add-header:v0.2\n```\n\n----------------------------------------\n\nTITLE: Configuring a cert-manager Issuer for Istio TLS in YAML\nDESCRIPTION: Creates a cert-manager Issuer resource that represents a certificate authority capable of generating signed certificates. This example configures a CA issuer in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/certmanager/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: ca-issuer\n  namespace: istio-system\nspec:\n  ca:\n    secretName: ca-key-pair\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes pods after Istio enablement\nDESCRIPTION: This command lists the Kubernetes pods to verify the deployment of productpage with Istio sidecar containers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Analyzing All Namespaces with istioctl\nDESCRIPTION: Command to analyze all namespaces in the current Kubernetes cluster using istioctl analyze. This checks the entire cluster for Istio configuration issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Access\nDESCRIPTION: Curl commands to test HTTPS access to the configured service using TLS certificates\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncurl -v -HHost:httpbin.example.com --resolve \"httpbin.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST\" \\\n  --cacert example_certs1/example.com.crt \"https://httpbin.example.com:$SECURE_INGRESS_PORT/status/418\"\n```\n\n----------------------------------------\n\nTITLE: Listing Istio Tags in the Cluster\nDESCRIPTION: Command to list all Istio tags in the cluster, displaying their associated revisions. This helps identify which tags need to be updated during a revisioned upgrade.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfigurations -l 'istio.io/tag' -L istio\\.io/tag,istio\\.io/rev\n```\n\n----------------------------------------\n\nTITLE: Checking ZooKeeper Server Status\nDESCRIPTION: Command to verify ZooKeeper server status within the ZooKeeper container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec my-release-zookeeper-1 -c zookeeper -- /opt/bitnami/zookeeper/bin/zkServer.sh status\n```\n\n----------------------------------------\n\nTITLE: Resetting VirtualService Configuration\nDESCRIPTION: Restores the original VirtualService configuration without path-based access control for edition.cnn.com.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-cnn-through-egress-gateway\nspec:\n  hosts:\n  - edition.cnn.com\n  gateways:\n  - istio-egressgateway\n  - mesh\n  http:\n  - match:\n    - gateways:\n      - mesh\n      port: 80\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: cnn\n        port:\n          number: 443\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n    route:\n    - destination:\n        host: edition.cnn.com\n        port:\n          number: 443\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Overriding Proxy Stats Configuration with Annotations\nDESCRIPTION: This YAML snippet shows how to use the proxy.istio.io/config annotation to override the global stats matching configuration for a specific proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/telemetry/envoy-stats/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    proxy.istio.io/config: |-\n      proxyStatsMatcher:\n        inclusionRegexps:\n        - \".*outlier_detection.*\"\n        - \".*upstream_rq_retry.*\"\n        - \".*upstream_cx_.*\"\n        inclusionSuffixes:\n        - \"upstream_rq_timeout\"\n```\n\n----------------------------------------\n\nTITLE: Installing Curl Sample App in Kubernetes\nDESCRIPTION: Command to deploy the curl sample application that will be used as a test source for sending requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Installing Istiod with Platform-Specific Configuration\nDESCRIPTION: Shows the Helm command to install Istiod with a specific profile and platform configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.24.x/announcing-1.24/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nhelm install istiod --set profile=ambient --set global.platform=k3s\n```\n\n----------------------------------------\n\nTITLE: Examining Reviews Service Code\nDESCRIPTION: Shows the Java code snippet from the reviews microservice that demonstrates how it calls the ratings service using Kubernetes DNS for service discovery.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_13\n\nLANGUAGE: java\nCODE:\n```\nprivate final static String ratings_service = \"http://ratings:9080/ratings\";\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Service for MySQL-based Ratings\nDESCRIPTION: Command to apply routing rules that direct traffic to the MySQL-backed ratings service. This ensures that the Bookinfo application uses the ratings from the MySQL database.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n bookinfo -f @samples/bookinfo/networking/virtual-service-ratings-mysql-vm.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring API Server for Service Account Token Projection\nDESCRIPTION: YAML configuration that needs to be added to the Kops cluster configuration to enable service account token projection. This sets the API audiences and service account issuer required by Istio SDS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kops/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkubeAPIServer:\n    apiAudiences:\n    - api\n    - istio-ca\n    serviceAccountIssuer: kubernetes.default.svc\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Ingress Gateway Pod Status\nDESCRIPTION: This command checks if the Istio ingress gateway pod is running properly in the external-istiod namespace by listing pods with the app=istio-ingressgateway label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -l app=istio-ingressgateway -n external-istiod --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Compliance Standards and Sensitive Data Table in Markdown\nDESCRIPTION: This code snippet shows a markdown table listing various compliance standards and the types of sensitive data they protect. It includes standards like PCI DSS, FedRAMP, HIPAA, and GDPR.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/isolated-clusters/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Standard|Sensitive data|\n| --- | --- |\n|[PCI DSS](https://www.pcisecuritystandards.org/pci_security)|payment card data|\n|[FedRAMP](https://www.fedramp.gov)|federal information, data and metadata|\n|[HIPAA](https://www.gpo.gov/fdsys/search/pagedetails.action?granuleId=CRPT-104hrpt736&packageId=CRPT-104hrpt736)|personal health data|\n|[GDPR](https://gdpr-info.eu)| personal data|\n```\n\n----------------------------------------\n\nTITLE: Setting CURL_POD_FOO Environment Variable in Bash\nDESCRIPTION: This command sets the CURL_POD_FOO environment variable to the name of the 'curl' pod in the 'foo' namespace using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ export CURL_POD_FOO=$(kubectl get pod -n foo -l app=curl -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Authorization Policy Configuration\nDESCRIPTION: Example of workload level authorization policy configuration pushed from Istiod to ztunnel.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"policies\": {\n    \"default/hw-viewer\": {\n      \"name\": \"hw-viewer\",\n      \"namespace\": \"default\",\n      \"scope\": \"WorkloadSelector\",\n      \"action\": \"Allow\",\n      \"groups\": [[[{\n        \"principals\": [{\"Exact\": \"cluster.local/ns/default/sa/sleep\"}]\n      }]]]\n    }\n  }\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Viewing Ztunnel Workload Configuration in Istio\nDESCRIPTION: Uses the istioctl ztunnel-config command to display discovered workloads as seen by a ztunnel proxy, including IP addresses, protocols, and associated waypoint proxies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-ztunnel/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl ztunnel-config workloads\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up istioctl Processes\nDESCRIPTION: This command terminates any running istioctl processes to clean up after using the port forwarding for the Jaeger dashboard.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/jaeger/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ killall istioctl\n```\n\n----------------------------------------\n\nTITLE: Configuring Latest Release Notification in YAML for Istio Website\nDESCRIPTION: This YAML configuration sets up a notification for the latest Istio release. It specifies the title as 'Latest Release', sets the display period to start from the latest release date for 7 days, limits impressions to 3, and links to the latest release page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/latest-release.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Latest Release\nperiod_start: latest_release\nperiod_duration: 7\nmax_impressions: 3\nlink: latest_release\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing External Service via Kubernetes ExternalName Service\nDESCRIPTION: Demonstrates how to access httpbin.org through the Kubernetes ExternalName service from pods with and without Istio sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD_WITHOUT_ISTIO\" -n without-istio -c curl -- curl -sS my-httpbin.default.svc.cluster.local/headers\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway Service Type (Bash)\nDESCRIPTION: Annotates the Bookinfo gateway to use ClusterIP service type instead of LoadBalancer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl annotate gateway bookinfo-gateway networking.istio.io/service-type=ClusterIP --namespace=default\n```\n\n----------------------------------------\n\nTITLE: Conflicting Service Definitions in Istio\nDESCRIPTION: Example showing two Kubernetes services (nginx-a and nginx-b) that create a conflict by selecting the same workload with identical targetPort (80) but different service ports (8080 and 80).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0137/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-a\nspec:\n  ports:\n    - port: 8080\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: nginx\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-b\nspec:\n  ports:\n    - port: 80\n      protocol: TCP\n      targetPort: 80\n  selector:\n    app: nginx\n```\n\n----------------------------------------\n\nTITLE: Testing added request header with curl\nDESCRIPTION: A curl command to access the newly exposed /headers endpoint and verify that the custom header is being added to the request.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -HHost:httpbin.example.com \"http://$INGRESS_HOST/headers\" | jq '.headers[\"My-Added-Header\"][0]'\n```\n\n----------------------------------------\n\nTITLE: Configuring Envoy Internal Address Handling - Per-proxy in YAML\nDESCRIPTION: This YAML snippet shows how to enable the 'envoy.reloadable_features.explicit_internal_address_config' flag for a specific proxy using annotations in Istio. This configuration helps mitigate the vulnerability related to x-envoy header manipulation on a per-proxy basis.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2024-006/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nannotations:\n  proxy.istio.io/config: |\n    runtimeValues:\n      \"envoy.reloadable_features.explicit_internal_address_config\": \"true\"\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Usage in Istio Configuration\nDESCRIPTION: Reference to PILOT_SIDECAR_USE_REMOTE_ADDRESS environment variable for configuring sidecar address handling when envoy.reloadable_features.explicit_internal_address_config is enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/announcing-1.21.6/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nPILOT_SIDECAR_USE_REMOTE_ADDRESS\n```\n\n----------------------------------------\n\nTITLE: Applying Virtual Services for Version-Specific Routing in Istio\nDESCRIPTION: This command applies the predefined YAML configuration that creates virtual services to route all traffic to v1 of each microservice in the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Sample Response from All Namespace Analysis\nDESCRIPTION: Example output from istioctl analyze showing an informational message that the default namespace is not enabled for Istio injection, which is a common issue.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nInfo [IST0102] (Namespace default) The namespace is not enabled for Istio injection. Run 'kubectl label namespace default istio-injection=enabled' to enable it, or 'kubectl label namespace default istio-injection=disabled' to explicitly mark it as not needing injection.\n```\n\n----------------------------------------\n\nTITLE: Configuring Waypoint Usage Label in YAML\nDESCRIPTION: Add the 'istio.io/use-waypoint' label to a Namespace, Service, or Pod to use a waypoint for L7 policy enforcement. The value should be the waypoint name or 'none'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    istio.io/use-waypoint: {waypoint-name}\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Service Type for Istio Ingress Gateway\nDESCRIPTION: Retrieves information about the Istio ingress gateway service to determine if it has an external load balancer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc istio-ingressgateway -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Balanced Load with Istio's HTTP Traffic Management\nDESCRIPTION: This bash snippet illustrates how Istio automatically detects and load balances HTTP traffic per request, resulting in a more even distribution across service replicas.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/zero-config-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl http://echo/{0..5} -s | grep Hostname\nHostname=echo-cb96f8d94-wf4xk\nHostname=echo-cb96f8d94-rpfqz\nHostname=echo-cb96f8d94-cgmxr\nHostname=echo-cb96f8d94-wf4xk\nHostname=echo-cb96f8d94-rpfqz\nHostname=echo-cb96f8d94-cgmxr\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Destination Rules\nDESCRIPTION: Command to apply default destination rules for the microservices\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting SOURCE_POD Environment Variable in Bash\nDESCRIPTION: This command sets the SOURCE_POD environment variable to the name of the deployed curl pod. It uses kubectl to get the pod name and jsonpath to extract it from the output.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/before-you-begin-egress.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Decommissioning Reviews v1\nDESCRIPTION: This command removes the old version (v1) of the reviews service from the deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete deployment reviews-v1\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Injection on Default Namespace\nDESCRIPTION: Command to fix the issue by enabling Istio injection on the default namespace using kubectl label command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Testing External Service Access in Kubernetes\nDESCRIPTION: This bash loop sends multiple requests to the external service to test routing behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ for i in {1..5}; do kubectl exec deploy/sleep -c sleep -- curl -sS http://mydb.com; echo; sleep 2; done\n```\n\n----------------------------------------\n\nTITLE: Check workload waypoint configuration\nDESCRIPTION: Command to view waypoint configuration for workloads\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl ztunnel-config workload\n```\n\n----------------------------------------\n\nTITLE: Check workload waypoint configuration\nDESCRIPTION: Command to view waypoint configuration for workloads\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl ztunnel-config workload\n```\n\n----------------------------------------\n\nTITLE: Alternative Multiple Rule Expression Pattern\nDESCRIPTION: YAML snippet showing how to use multiple authorization expressions where the first non-null response is used, allowing for rule delegation patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n[...]\n  authorizations:\n  # 当标头值匹配时允许请求\n  - expression: >\n      variables.allowed\n        ? envoy.Allowed().Response()\n        : null\n  # 否则拒绝请求\n  - expression: >\n      envoy.Denied(403).Response()\n[...]\n```\n\n----------------------------------------\n\nTITLE: NetworkPolicy Deny All Ingress Example\nDESCRIPTION: Example of a NetworkPolicy that blocks all ingress traffic to my-app, including kubelet health probes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: deny-ingress\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  policyTypes:\n  - Ingress\n```\n\n----------------------------------------\n\nTITLE: Creating a Standard Kubernetes Cluster on IBM Cloud\nDESCRIPTION: This command creates a standard Kubernetes cluster on IBM Cloud. It specifies the zone, machine type, number of workers, and cluster name. Users should replace <zone-name> and <cluster-name> with their desired values.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/ibm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ ibmcloud ks cluster create classic --zone <zone-name> --machine-type b3c.4x16 \\n      --workers 3 --name <cluster-name>\n```\n\n----------------------------------------\n\nTITLE: Removing Certificates and Keys\nDESCRIPTION: Command to delete all local certificates and private keys used in the mTLS example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ rm example.com.crt example.com.key httpbin.test.svc.cluster.local.crt httpbin.test.svc.cluster.local.key httpbin.test.svc.cluster.local.csr \\\n    client.test.svc.cluster.local.crt client.test.svc.cluster.local.key client.test.svc.cluster.local.csr\n```\n\n----------------------------------------\n\nTITLE: Configuring Per-Pod Tracing with Annotations\nDESCRIPTION: This snippet demonstrates how to add tracing configuration to individual pods using the proxy.istio.io/config annotation. It modifies a deployment to set a 10% sampling rate and add a custom tag based on the 'host' header.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/mesh-and-proxy-config/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: curl\nspec:\n  ...\n  template:\n    metadata:\n      ...\n      annotations:\n        ...\n        proxy.istio.io/config: |\n          tracing:\n            sampling: 10\n            custom_tags:\n              my_tag_header:\n                header:\n                  name: host\n    spec:\n      ...\n```\n\n----------------------------------------\n\nTITLE: Using netshoot container for tcpdump in Kubernetes pods\nDESCRIPTION: These commands use a debug container with netshoot image to run tcpdump within a Kubernetes pod, allowing mTLS validation without direct access to worker nodes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/verify-mtls-enabled/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ POD=$(kubectl get pods -l app=details -o jsonpath=\"{.items[0].metadata.name}\")\n$ kubectl debug $POD -i --image=nicolaka/netshoot -- tcpdump -nAi eth0 port 9080 or port 15008\n```\n\n----------------------------------------\n\nTITLE: Verifying TCP Communication\nDESCRIPTION: Checks if 'curl' can communicate with 'tcp-echo' on ports 9000 and 9001.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" \\\n    -c curl -n foo -- sh -c \\\n    'echo \"port 9000\" | nc tcp-echo 9000' | grep \"hello\" && echo 'connection succeeded' || echo 'connection rejected'\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" \\\n    -c curl -n foo -- sh -c \\\n    'echo \"port 9001\" | nc tcp-echo 9001' | grep \"hello\" && echo 'connection succeeded' || echo 'connection rejected'\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Virtual Services\nDESCRIPTION: Command to delete the virtual services configuration for ratings and reviews\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f @samples/bookinfo/networking/virtual-service-ratings-mysql.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring External Istio Control Plane in YAML\nDESCRIPTION: Creates the Istio configuration to install the control plane in the 'external-istiod' namespace of the external cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > external-istiod.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: external-istiod\nspec:\n  profile: empty\n  meshConfig:\n    rootNamespace: external-istiod\n    defaultConfig:\n      discoveryAddress: $EXTERNAL_ISTIOD_ADDR:15012\n      proxyMetadata:\n        XDS_ROOT_CA: /etc/ssl/certs/ca-certificates.crt\n        CA_ROOT_CA: /etc/ssl/certs/ca-certificates.crt\n  components:\n    pilot:\n      enabled: true\n      k8s:\n        overlays:\n        - kind: Deployment\n          name: istiod\n          patches:\n          - path: spec.template.spec.volumes[100]\n            value: |-\n              name: config-volume\n              configMap:\n                name: istio\n          - path: spec.template.spec.volumes[100]\n            value: |-\n              name: inject-volume\n              configMap:\n                name: istio-sidecar-injector\n          - path: spec.template.spec.containers[0].volumeMounts[100]\n            value: |-\n              name: config-volume\n              mountPath: /etc/istio/config\n          - path: spec.template.spec.containers[0].volumeMounts[100]\n            value: |-\n              name: inject-volume\n              mountPath: /var/lib/istio/inject\n        env:\n        - name: INJECTION_WEBHOOK_CONFIG_NAME\n          value: \"\"\n        - name: VALIDATION_WEBHOOK_CONFIG_NAME\n          value: \"\"\n        - name: EXTERNAL_ISTIOD\n          value: \"true\"\n        - name: LOCAL_CLUSTER_SECRET_WATCHER\n          value: \"true\"\n        - name: CLUSTER_ID\n          value: ${REMOTE_CLUSTER_NAME}\n        - name: SHARED_MESH_CONFIG\n          value: istio\n  values:\n    global:\n      externalIstiod: true\n      caAddress: $EXTERNAL_ISTIOD_ADDR:15012\n      istioNamespace: external-istiod\n      operatorManageWebhooks: true\n      configValidation: false\n      meshID: mesh1\n      multiCluster:\n        clusterName: ${REMOTE_CLUSTER_NAME}\n      network: network1\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying Bookinfo Pod Status\nDESCRIPTION: Check the status of deployed Bookinfo pods to ensure all components are running correctly. Shows the status of all microservice pods including details, productpage, ratings, and three versions of reviews.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/deploy-sample-app/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pods\nNAME                             READY   STATUS    RESTARTS   AGE\ndetails-v1-cf74bb974-nw94k       1/1     Running   0          42s\nproductpage-v1-87d54dd59-wl7qf   1/1     Running   0          42s\nratings-v1-7c4bbf97db-rwkw5      1/1     Running   0          42s\nreviews-v1-5fd6d4f8f8-66j45      1/1     Running   0          42s\nreviews-v2-6f9b55c5db-6ts96      1/1     Running   0          42s\nreviews-v3-7d99fd7978-dm6mx      1/1     Running   0          42s\n```\n\n----------------------------------------\n\nTITLE: Configuring Waypoint Usage Label in YAML\nDESCRIPTION: Add the 'istio.io/use-waypoint' label to a Namespace, Service, or Pod to use a waypoint for L7 policy enforcement. The value should be the waypoint name or 'none'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    istio.io/use-waypoint: {waypoint-name}\n```\n\n----------------------------------------\n\nTITLE: Applying Kubernetes Destination Rules\nDESCRIPTION: Command to apply default destination rules for the microservices\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f samples/bookinfo/networking/destination-rule-all.yaml\n```\n\n----------------------------------------\n\nTITLE: Waiting for Istio Configuration\nDESCRIPTION: Example of waiting for Istio configuration changes to propagate\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nsnip_config_50_v3 # Step 3: switch 50% traffic to v3\n_wait_for_istio virtualservice default reviews # wait for routing change to propagate\n```\n\n----------------------------------------\n\nTITLE: Checking Sidecar Proxy Logs for External HTTPS Requests in Istio\nDESCRIPTION: This command retrieves the logs from the istio-proxy sidecar container of the SOURCE_POD and displays the most recent entries, which should include information about the external HTTPS request to www.google.com.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs \"$SOURCE_POD\" -c istio-proxy | tail\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus TLS Settings\nDESCRIPTION: TLS configuration for Prometheus scraping jobs to enable secure metrics collection using Istio certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/prometheus/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nscheme: https\ntls_config:\n  ca_file: /etc/prom-certs/root-cert.pem\n  cert_file: /etc/prom-certs/cert-chain.pem\n  key_file: /etc/prom-certs/key.pem\n  insecure_skip_verify: true\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC for Tenant Isolation (YAML)\nDESCRIPTION: This YAML snippet defines a Role and RoleBinding to restrict a tenant administrator to a specific Istio namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: istio-system1\n  name: ns-access-for-sales-admin-istio-system1\nrules:\n- apiGroups: [\"\"] # \"\" indicates the core API group\n  resources: [\"*\"]\n  verbs: [\"*\"]\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: access-all-istio-system1\n  namespace: istio-system1\nsubjects:\n- kind: User\n  name: sales-admin\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: ns-access-for-sales-admin-istio-system1\n  apiGroup: rbac.authorization.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Exporting ConfigMaps from Istio System Namespace\nDESCRIPTION: This command exports all ConfigMaps from the istio-system namespace, which contain configuration data used by Istio components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --namespace istio-system get cm -o yaml\n```\n\n----------------------------------------\n\nTITLE: Exposing Services in cluster2\nDESCRIPTION: Applies a configuration to expose services on the east-west gateway in cluster2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --context=\"${CTX_CLUSTER2}\" apply -n istio-system -f \\\n    @samples/multicluster/expose-services.yaml@\n```\n\n----------------------------------------\n\nTITLE: Translating IstioOperator Config to Helm Values\nDESCRIPTION: 使用 istioctl 将 IstioOperator YAML 配置转换为 Helm Values。此命令生成一个 values.yaml 文件和用于安装等效 Helm Chart 的 shell 脚本。\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest translate -f istio.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating and Labeling Namespaces for Dual-Stack Testing\nDESCRIPTION: These Bash commands create and label namespaces for testing Istio's dual-stack functionality, including separate namespaces for dual-stack, IPv4-only, and IPv6-only deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace dual-stack\n$ kubectl create namespace ipv4\n$ kubectl create namespace ipv6\n$ kubectl label --overwrite namespace default istio-injection=enabled\n$ kubectl label --overwrite namespace dual-stack istio-injection=enabled\n$ kubectl label --overwrite namespace ipv4 istio-injection=enabled\n$ kubectl label --overwrite namespace ipv6 istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Creating and Labeling Namespaces for Dual-Stack Testing\nDESCRIPTION: These Bash commands create and label namespaces for testing Istio's dual-stack functionality, including separate namespaces for dual-stack, IPv4-only, and IPv6-only deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace dual-stack\n$ kubectl create namespace ipv4\n$ kubectl create namespace ipv6\n$ kubectl label --overwrite namespace default istio-injection=enabled\n$ kubectl label --overwrite namespace dual-stack istio-injection=enabled\n$ kubectl label --overwrite namespace ipv4 istio-injection=enabled\n$ kubectl label --overwrite namespace ipv6 istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Registry-Only Egress Policy (Istio APIs)\nDESCRIPTION: Command to install Istio with the demo profile, configured to enable access logging and set the outbound traffic policy to REGISTRY_ONLY mode, which blocks all external traffic by default.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=demo --set meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.22.0 Release Page\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.22.0 release announcement page, including title, publish date, release version, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.22.x/announcing-1.22/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.22.0\nlinktitle: 1.22.0\nsubtitle: Major Release\ndescription: Istio 1.22 Release Announcement.\npublishdate: 2024-05-13\nrelease: 1.22.0\naliases:\n- /news/announcing-1.22\n- /news/announcing-1.22.0\n---\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB Bookinfo User\nDESCRIPTION: MongoDB commands to create a new user for the Bookinfo application with read permissions\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/egress-mongo/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | mongo --ssl --sslAllowInvalidCertificates $MONGODB_HOST:$MONGODB_PORT -u admin -p $MONGO_ADMIN_PASSWORD --authenticationDatabase admin\nuse test\ndb.createUser(\n   {\n     user: \"bookinfo\",\n     pwd: \"$BOOKINFO_PASSWORD\",\n     roles: [ \"read\"]\n   }\n);\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing Advanced OPA Features\nDESCRIPTION: Collection of curl commands demonstrating various features of the advanced OPA policy including custom responses, header modifications, and metadata handling\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -n my-app curl -c curl  -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get\nkubectl exec -n my-app curl -c curl  -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-unauthenticated: enabled\"\nkubectl exec -n my-app curl -c curl  -- curl -s httpbin:8000/get -H \"x-force-authorized: true\"\nkubectl exec -n my-app curl -c curl  -- curl -s -I httpbin:8000/get -H \"x-force-authorized: true\"\nkubectl logs -n my-app deploy/httpbin -c istio-proxy --tail 1\n```\n\n----------------------------------------\n\nTITLE: Creating a Canary Revision Tag in Istio\nDESCRIPTION: Command to create a 'prod-canary' tag that points to the new '1-10-0' revision. This enables testing the new revision with select namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x revision tag set prod-canary --revision 1-10-0\n```\n\n----------------------------------------\n\nTITLE: Building the Ratings Docker Image in Bash\nDESCRIPTION: Builds a Docker image from the Dockerfile with the tag specified by the USER environment variable. This creates a container image with the ratings service installed and configured.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ docker build -t $USER/ratings .\n...\nStep 9/9 : CMD node /opt/microservices/ratings.js 9080\n---> Using cache\n---> 77c6a304476c\nSuccessfully built 77c6a304476c\nSuccessfully tagged user/ratings:latest\n```\n\n----------------------------------------\n\nTITLE: Deploying Multiple Istio Control Planes (Bash)\nDESCRIPTION: These commands deploy two separate Istio control planes using the default and tenant-specific manifest files.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f install/kubernetes/istio.yaml\n$ kubectl apply -f install/kubernetes/istio-system1.yaml\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Wildcard ServiceEntry Configuration\nDESCRIPTION: Command to delete the wikipedia ServiceEntry resource created earlier, removing the configuration that allowed direct access to Wikipedia subdomains.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry wikipedia\n```\n\n----------------------------------------\n\nTITLE: Viewing Istiod State for Ztunnel xDS Resources\nDESCRIPTION: Shows how to view the state of ztunnel proxy config resources maintained in the Istiod control plane using the xDS API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-ztunnel/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ export ISTIOD=$(kubectl get pods -n istio-system -l app=istiod -o=jsonpath='{.items[0].metadata.name}')\n$ kubectl debug -it $ISTIOD -n istio-system --image=curlimages/curl -- curl localhost:15014/debug/config_dump?proxyID=\"$ZTUNNEL\".istio-system\n```\n\n----------------------------------------\n\nTITLE: Examining a Pod in the Mesh\nDESCRIPTION: Shows how to check the configuration of a pod that is part of the Istio mesh, displaying its ports and services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export RATINGS_POD=$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')\n$ istioctl experimental describe pod $RATINGS_POD\nPod: ratings-v1-7dc98c7588-8jsbw\n   Pod Ports: 9080 (ratings), 15090 (istio-proxy)\n--------------------\nService: ratings\n   Port: http 9080/HTTP targets pod port 9080\n```\n\n----------------------------------------\n\nTITLE: Applying Merbridge to Istio-managed Kubernetes Cluster\nDESCRIPTION: Command to apply the Merbridge deployment to an Istio-managed Kubernetes cluster. This enables eBPF-based network acceleration by replacing iptables rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/merbridge/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/merbridge/merbridge/main/deploy/all-in-one.yaml\n```\n\n----------------------------------------\n\nTITLE: Using Glossary Terms with Hugo Shortcodes in Markdown\nDESCRIPTION: Shows how to use the gloss shortcode to include glossary terms with pop-up definitions in Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\nThe Istio component that programs the {{</*gloss*/>}}Envoy{{</*/gloss*/>}} proxies, responsible for service discovery, load balancing, and routing.\n```\n\nLANGUAGE: markdown\nCODE:\n```\n{{</*gloss envoy*/>}}Envoy's{{</*/gloss*/>}} HTTP support was designed to first and foremost be an HTTP/2 multiplexing proxy.\n```\n\n----------------------------------------\n\nTITLE: Suppress Analysis Messages\nDESCRIPTION: Suppress specific analyzer messages using annotations on Kubernetes resources\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl annotate deployment my-deployment galley.istio.io/analyze-suppress=IST0107,IST0002\n```\n\n----------------------------------------\n\nTITLE: Deploying Multiple Istio Control Planes (Bash)\nDESCRIPTION: These commands deploy two separate Istio control planes using the default and tenant-specific manifest files.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f install/kubernetes/istio.yaml\n$ kubectl apply -f install/kubernetes/istio-system1.yaml\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Component Manifest with Helm Template\nDESCRIPTION: Command to generate a manifest for the istiod component using helm template. Outputs the manifest to a YAML file for inspection or installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/helm/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhelm template istiod istio/istiod -n istio-system --kube-version {Kubernetes version of target cluster} > istiod.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining Istio ServiceEntry for HTTPS Proxy\nDESCRIPTION: Creates an Istio ServiceEntry to enable traffic from Istio-controlled pods to the external HTTPS proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/http-proxy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: proxy\nspec:\n  hosts:\n  - my-company-proxy.com # ignored\n  addresses:\n  - $PROXY_IP/32\n  ports:\n  - number: $PROXY_PORT\n    name: tcp\n    protocol: TCP\n  location: MESH_EXTERNAL\n  resolution: NONE\n```\n\n----------------------------------------\n\nTITLE: Verifying Updated Ratings with GET\nDESCRIPTION: Command to verify the updated ratings using GET endpoint\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/single/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ curl localhost:9080/ratings/7\n{\"id\":7,\"ratings\":{\"Reviewer1\":1,\"Reviewer2\":1}}\n```\n\n----------------------------------------\n\nTITLE: Checking TLS 1.3 Support with OpenSSL\nDESCRIPTION: This command uses OpenSSL to verify that TLS 1.3 is allowed for communication between Istio workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/tls-configuration/workload-min-tls-version/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c istio-proxy -n foo -- openssl s_client -alpn istio -tls1_3 -connect httpbin.foo:8000 | grep \"TLSv1.3\"\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Telemetry Configuration and Dependencies\nDESCRIPTION: Commands to remove all Telemetry API configurations, Loki deployment, and optionally uninstall Istio completely from the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete telemetry --all -A\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring Test Namespace\nDESCRIPTION: Creates a test namespace and enables Istio sidecar injection for it, which is required for the TLS termination functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns test\n$ kubectl label namespace test istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Waiting for Deployment\nDESCRIPTION: Example of waiting for Kubernetes deployment to complete\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n_wait_for_deployment default httpbin\n```\n\n----------------------------------------\n\nTITLE: Creating Test Environment in Kubernetes\nDESCRIPTION: Commands to set up the test namespace and deploy the required sample applications including curl client and tcp-echo services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace istio-io-tcp-traffic-shifting\n$ kubectl apply -f @samples/curl/curl.yaml@ -n istio-io-tcp-traffic-shifting\n$ kubectl apply -f @samples/tcp-echo/tcp-echo-services.yaml@ -n istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Operator with SPIRE Integration\nDESCRIPTION: YAML configuration for Istio Operator that enables SPIRE-managed identity for the Ingress Gateway and sidecars. Includes custom patches for CSI driver mounts and init container configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: istio-system\nspec:\n  profile: default\n  meshConfig:\n    trustDomain: example.org\n  values:\n    sidecarInjectorWebhook:\n      templates:\n        spire: |\n          labels:\n            spiffe.io/spire-managed-identity: \"true\"\n          spec:\n            containers:\n            - name: istio-proxy\n              volumeMounts:\n              - name: workload-socket\n                mountPath: /run/secrets/workload-spiffe-uds\n                readOnly: true\n            volumes:\n              - name: workload-socket\n                csi:\n                  driver: \"csi.spiffe.io\"\n                  readOnly: true\n  components:\n    ingressGateways:\n      - name: istio-ingressgateway\n        enabled: true\n        label:\n          istio: ingressgateway\n        k8s:\n          overlays:\n            - apiVersion: apps/v1\n              kind: Deployment\n              name: istio-ingressgateway\n              patches:\n                - path: spec.template.spec.volumes.[name:workload-socket]\n                  value:\n                    name: workload-socket\n                    csi:\n                      driver: \"csi.spiffe.io\"\n                      readOnly: true\n                - path: spec.template.spec.containers.[name:istio-proxy].volumeMounts.[name:workload-socket]\n                  value:\n                    name: workload-socket\n                    mountPath: \"/run/secrets/workload-spiffe-uds\"\n                    readOnly: true\n                - path: spec.template.spec.initContainers\n                  value:\n                    - name: wait-for-spire-socket\n                      image: busybox:1.36\n                      volumeMounts:\n                        - name: workload-socket\n                          mountPath: /run/secrets/workload-spiffe-uds\n                          readOnly: true\n                      env:\n                        - name: CHECK_FILE\n                          value: /run/secrets/workload-spiffe-uds/socket\n                      command:\n                        - sh\n                        - \"-c\"\n                        - |-\n                          echo \"$(date -Iseconds)\" Waiting for: ${CHECK_FILE}\n                          while [[ ! -e ${CHECK_FILE} ]] ; do\n                            echo \"$(date -Iseconds)\" File does not exist: ${CHECK_FILE}\n                            sleep 15\n                          done\n                          ls -l ${CHECK_FILE}\n```\n\n----------------------------------------\n\nTITLE: Shutdown Curl Service\nDESCRIPTION: Command to remove the curl service deployment from the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Response headers for authorized request\nDESCRIPTION: The header output of the authorized request showing the custom response header x-add-custom-response-header added by the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_14\n\nLANGUAGE: plain\nCODE:\n```\nHTTP/1.1 200 OK\n[...]\nx-add-custom-response-header: added\n[...]\nhttp_code=200\n```\n\n----------------------------------------\n\nTITLE: Creating YAML Override File for AWS NLB Configuration\nDESCRIPTION: This YAML configuration adds the necessary AWS-specific annotation to the Istio ingress gateway service to configure it to use a Network Load Balancer instead of the default Classic Load Balancer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/aws-nlb/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ngateways:\n  istio-ingressgateway:\n    serviceAnnotations:\n      service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\n```\n\n----------------------------------------\n\nTITLE: Testing Authorized Request\nDESCRIPTION: Command to test a request with the required authorization header, which should return a 200 status code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-authorized: true\"\n```\n\n----------------------------------------\n\nTITLE: Examining X.509 Certificate\nDESCRIPTION: Retrieves and decodes the X.509 certificate from the ztunnel DaemonSet.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl pc secret ds/ztunnel -n istio-system -o json | jq -r '.dynamicActiveSecrets[0].secret.tlsCertificate.certificateChain.inlineBytes' | base64 --decode | openssl x509 -noout -text -in /dev/stdin\n```\n\n----------------------------------------\n\nTITLE: Generating Root CA Certificate and Key\nDESCRIPTION: Creates a root certificate and private key for signing service certificates.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir example_certs\nopenssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example_certs/example.com.key -out example_certs/example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Checking Destination Rules\nDESCRIPTION: Verifies that no destination rules apply to the example services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get destinationrules.networking.istio.io --all-namespaces -o yaml | grep \"host:\"\n```\n\n----------------------------------------\n\nTITLE: Testing Traffic Distribution with grpcurl in Istio\nDESCRIPTION: Uses grpcurl to send 10 requests to a gRPC service and processes the output to demonstrate the traffic distribution between service versions based on the configured weights in the VirtualService.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ grpcurl -plaintext -d '{\"url\": \"xds:///echo.echo-grpc.svc.cluster.local:7070\", \"count\": 10}' :17171 proto.EchoTestService/ForwardEcho | jq -r '.output | join(\"\")'  | grep ServiceVersion\n```\n\n----------------------------------------\n\nTITLE: Testing the Bookinfo Application\nDESCRIPTION: Executes a curl command from the testing pod to verify that the Bookinfo application is running correctly by checking the returned HTML title.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec $(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}') -c curl -- curl -sS productpage:9080/productpage | grep -o \"<title>.*</title>\"\n<title>Simple Bookstore App</title>\n```\n\n----------------------------------------\n\nTITLE: Deploying HTTP Liveness Probe Example\nDESCRIPTION: Deploys a sample application with HTTP liveness probe configuration in Kubernetes using Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/app-health-check/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: liveness-http\n  namespace: istio-io-health-rewrite\nspec:\n  selector:\n    matchLabels:\n      app: liveness-http\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: liveness-http\n        version: v1\n    spec:\n      containers:\n      - name: liveness-http\n        image: docker.io/istio/health:example\n        ports:\n        - containerPort: 8001\n        livenessProbe:\n          httpGet:\n            path: /foo\n            port: 8001\n          initialDelaySeconds: 5\n          periodSeconds: 5\n```\n\n----------------------------------------\n\nTITLE: Generating Server Certificate and Key\nDESCRIPTION: Creates a certificate and private key for nginx.example.com signed by the root CA.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -out example_certs/nginx.example.com.csr -newkey rsa:2048 -nodes -keyout example_certs/nginx.example.com.key -subj \"/CN=nginx.example.com/O=some organization\"\nopenssl x509 -req -sha256 -days 365 -CA example_certs/example.com.crt -CAkey example_certs/example.com.key -set_serial 0 -in example_certs/nginx.example.com.csr -out example_certs/nginx.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Mutual TLS Migration Example\nDESCRIPTION: Removes the authentication policies and test namespaces created for the mutual TLS migration example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete peerauthentication -n foo default\n$ kubectl delete peerauthentication -n istio-system default\n$ kubectl delete ns foo bar legacy\n```\n\n----------------------------------------\n\nTITLE: Cleanup Network Policies using Gateway API\nDESCRIPTION: Commands to remove network policies, namespace labels, and test namespace when using Gateway API. Includes cleanup of curl deployment and network policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@ -n test-egress\n$ kubectl delete networkpolicy allow-egress-to-istio-system-and-kube-dns -n test-egress\n$ kubectl label namespace kube-system kube-system-\n$ kubectl label namespace istio-system istio-\n$ kubectl label namespace default gateway-\n$ kubectl delete namespace test-egress\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Config Cluster IstioOperator Configuration in YAML\nDESCRIPTION: Defines an IstioOperator configuration file for a remote cluster that will also serve as a config cluster. It configures the remote profile with settings for external istiod connectivity, including injection and validation URLs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > remote-config-cluster.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: external-istiod\nspec:\n  profile: remote\n  values:\n    global:\n      istioNamespace: external-istiod\n      configCluster: true\n    pilot:\n      configMap: true\n    istiodRemote:\n      injectionURL: https://${EXTERNAL_ISTIOD_ADDR}:15017/inject/cluster/${REMOTE_CLUSTER_NAME}/net/network1\n    base:\n      validationURL: https://${EXTERNAL_ISTIOD_ADDR}:15017/validate\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining an AuthorizationPolicy with Invalid Selector in YAML\nDESCRIPTION: Example of an AuthorizationPolicy resource with a selector that doesn't match any pods, specifically using an incorrect app label 'bogus-label' and version 'v1'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0127/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: httpbin-nopods\n  namespace: httpbin\nspec:\n  selector:\n    matchLabels:\n      app: bogus-label # 标签有误，没有匹配的工作负载\n      version: v1\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/default/sa/curl\"]\n        - source:\n            namespaces: [\"httpbin\"]\n      to:\n        - operation:\n            methods: [\"GET\"]\n            paths: [\"/info*\"]\n        - operation:\n            methods: [\"POST\"]\n            paths: [\"/data\"]\n      when:\n        - key: request.auth.claims[iss]\n          values: [\"https://accounts.google.com\"]\n```\n\n----------------------------------------\n\nTITLE: Redeploying Bookinfo with Istio Injection\nDESCRIPTION: Redeploys the Bookinfo application with Istio injection, excluding the productpage service which already has Istio enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/enable-istio-all-microservices/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/platform/kube/bookinfo.yaml | istioctl kube-inject -f - | kubectl apply -l app!=reviews -f -\n$ curl -s {{< github_file >}}/samples/bookinfo/platform/kube/bookinfo.yaml | istioctl kube-inject -f - | kubectl apply -l app=reviews,version=v2 -f -\n```\n\n----------------------------------------\n\nTITLE: Invalid VirtualService Configuration with Out-of-Range Weight Values in Istio\nDESCRIPTION: This YAML configuration demonstrates a VirtualService resource that fails schema validation because the weight values (999 and 888) exceed the permitted range of 0-100 for route weights.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0106/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: ratings-bogus-weight-default\n  namespace: default\nspec:\n  hosts:\n  - ratings\n  http:\n  - route:\n    - destination:\n        host: ratings\n        subset: v1\n      weight: 999\n    - destination:\n        host: ratings\n        subset: v2\n      weight: 888\n```\n\n----------------------------------------\n\nTITLE: Verifying Communication Between Workloads\nDESCRIPTION: This command executes a curl request from the curl pod to the httpbin service to verify successful communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/tls-configuration/workload-min-tls-version/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.foo:8000/ip -sS -o /dev/null -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Uninstalling SPIRE Components with Helm\nDESCRIPTION: Commands for removing SPIRE installation using Helm, including the main SPIRE components and CRDs from the spire-server namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete -n spire-server spire\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete -n spire-server spire-crds\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Sampling via MeshConfig\nDESCRIPTION: Installs Istio with tracing enabled and sets a global default sampling rate of 10% in the MeshConfig.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    defaultConfig:\n      tracing:\n        sampling: 10\n    extensionProviders:\n    - name: otel-tracing\n      opentelemetry:\n        port: 4317\n        service: opentelemetry-collector.observability.svc.cluster.local\n        resource_detectors:\n          environment: {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Remote Components with Helm on Remote Cluster\nDESCRIPTION: Helm command to install the istiod chart on cluster2 with remote configuration, specifying the connection to the primary cluster's control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --set profile=remote --set global.multiCluster.clusterName=cluster2 --set istiodRemote.injectionPath=/inject/cluster/cluster2/net/network1 --set global.configCluster=true --set global.remotePilotAddress=\"${DISCOVERY_ADDRESS}\" --kube-context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring ALB Ingress Resource for SSL Passthrough in YAML\nDESCRIPTION: This YAML configuration defines an Ingress resource for the ALB, enabling SSL passthrough to the Istio ingress gateway and specifying the necessary annotations for mutual TLS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: alb-ingress\n  namespace: istio-system\n  annotations:\n    ingress.bluemix.net/ssl-services: \"ssl-service=istio-ingressgateway ssl-secret=alb-certs proxy-ssl-name=$INGRESS_GATEWAY_DOMAIN\"\nspec:\n  tls:\n  - hosts:\n    - httpbin.$ALB_INGRESS_DOMAIN\n    secretName: $ALB_SECRET\n  rules:\n  - host: httpbin.$ALB_INGRESS_DOMAIN\n    http:\n      paths:\n      - path: /status\n        backend:\n          serviceName: istio-ingressgateway\n          servicePort: 443\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Testing Pod\nDESCRIPTION: Deploys a curl testing pod that can be used to send requests to the Bookinfo microservices from within the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/curl/curl.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Gateway Configuration\nDESCRIPTION: Defines an ingress gateway that configures ports 80 and 443 with PASSTHROUGH mode for TLS traffic on port 443. Sets up routing for httpbin.org and edition.cnn.com.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/proxy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: proxy\nspec:\n  selector:\n    istio: ingressgateway # use istio default ingress gateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - httpbin.org\n  - port:\n      number: 443\n      name: tls\n      protocol: TLS\n    tls:\n      mode: PASSTHROUGH\n    hosts:\n    - edition.cnn.com\n```\n\n----------------------------------------\n\nTITLE: Setting Default Network for Primary Cluster (Bash)\nDESCRIPTION: Sets the network label for the istio-system namespace in the primary cluster (cluster1) to 'network1'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER1}\" get namespace istio-system && \\\n  kubectl --context=\"${CTX_CLUSTER1}\" label namespace istio-system topology.istio.io/network=network1\n```\n\n----------------------------------------\n\nTITLE: Removing NGINX Resources and Configuration\nDESCRIPTION: Commands to delete NGINX-related Kubernetes resources including secrets, configmaps, services, and deployments. Also removes the local NGINX configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete secret nginx-server-certs\n$ kubectl delete configmap nginx-configmap\n$ kubectl delete service my-nginx\n$ kubectl delete deployment my-nginx\n$ rm ./nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Rendering Alpha Feature Warning in Istio Documentation\nDESCRIPTION: A Hugo shortcode template that renders a warning box in Istio documentation to indicate that a feature is in Alpha status according to Istio's feature lifecycle. It links to the feature lifecycle documentation for more information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/alpha.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< warning >}}\nThis feature is targeted at developers / expert users and is considered\n[Alpha](https://github.com/istio/community/blob/master/FEATURE-LIFECYCLE.md).\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Testing Service Response\nDESCRIPTION: Example of testing the httpbin service using curl and the response showing the request headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Content-Length\": \"0\",\n    \"Host\": \"httpbin:8000\",\n    \"User-Agent\": \"curl/7.35.0\",\n    \"X-B3-Parentspanid\": \"57784f8bff90ae0b\",\n    \"X-B3-Sampled\": \"1\",\n    \"X-B3-Spanid\": \"3289ae7257c3f159\",\n    \"X-B3-Traceid\": \"b56eebd279a76f0b57784f8bff90ae0b\",\n    \"X-Envoy-Attempt-Count\": \"1\",\n    \"X-Forwarded-Client-Cert\": \"By=spiffe://cluster.local/ns/default/sa/default;Hash=20afebed6da091c850264cc751b8c9306abac02993f80bdb76282237422bd098;Subject=\\\"\\\";URI=spiffe://cluster.local/ns/default/sa/default\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Removing NGINX Resources and Configuration\nDESCRIPTION: Commands to delete NGINX-related Kubernetes resources including secrets, configmaps, services, and deployments. Also removes the local NGINX configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete secret nginx-server-certs\n$ kubectl delete configmap nginx-configmap\n$ kubectl delete service my-nginx\n$ kubectl delete deployment my-nginx\n$ rm ./nginx.conf\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Sidecar Injection\nDESCRIPTION: Enables automatic Istio sidecar proxy injection in the test-egress namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace test-egress istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Verifying Envoy Endpoints for Dual-Stack Routing\nDESCRIPTION: This command checks the Envoy endpoint configuration to ensure proper routing for both IPv4 and IPv6 addresses in a dual-stack setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config endpoints \"$(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}')\" --port 9000\n```\n\n----------------------------------------\n\nTITLE: Configuring Certificate TTL in Istio Proxy Settings\nDESCRIPTION: YAML configuration snippet showing how to set the Secret TTL (Time To Live) for Istio certificates using proxyMetadata. The SECRET_TTL field can be set up to a maximum of 90 days.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/security/cert-lifetime-config.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nproxyMetadata:\n  SECRET_TTL: 48h\n```\n\n----------------------------------------\n\nTITLE: Setting ztunnel Helm Chart Resource Name\nDESCRIPTION: Command to override the resource name in ztunnel Helm chart back to the previous default name. This prevents downtime when upgrading to Istio 1.25 with a release name other than 'ztunnel'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/upgrade-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n--set resourceName=ztunnel\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService with API Routes\nDESCRIPTION: VirtualService configuration that defines routing rules for the bookinfo application, including a specific route for API endpoints.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/policy-enforcement/rate-limit/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: bookinfo\nspec:\n  gateways:\n  - bookinfo-gateway\n  hosts:\n  - '*'\n  http:\n  - match:\n    - uri:\n        exact: /productpage\n    - uri:\n        prefix: /static\n    - uri:\n        exact: /login\n    - uri:\n        exact: /logout\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\n  - match:\n    - uri:\n        prefix: /api/v1/products\n    route:\n    - destination:\n        host: productpage\n        port:\n          number: 9080\n    name: api\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Istio Documentation Site\nDESCRIPTION: This robots.txt file sets permissions for web crawlers accessing the Istio documentation site. It allows all user agents to access any part of the site and specifies the location of the sitemap for improved crawling efficiency.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.3/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.3/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Downloading JWT Generation Tools\nDESCRIPTION: This snippet shows how to download the necessary scripts and key files to generate custom JWT tokens for testing various aspects of JWT validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n$ wget --no-verbose {{< github_file >}}/security/tools/jwt/samples/gen-jwt.py\n```\n\n----------------------------------------\n\nTITLE: Testing TLS Origination with HTTP Request in Istio\nDESCRIPTION: Tests the TLS origination configuration by sending an HTTP request from the source pod. The response shows a direct 200 OK status, indicating that Istio successfully performed TLS origination without the redirect that occurred previously.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${SOURCE_POD}\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\nHTTP/1.1 200 OK\n...\n```\n\n----------------------------------------\n\nTITLE: Listing Istio Revisions\nDESCRIPTION: Retrieves current Istio revision information and sets environment variables for upgrade process\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfigurations -l 'istio.io/rev,!istio.io/tag' -L istio\\.io/rev\n$ # Store your revision and new revision in variables:\n$ export REVISION=istio-1-22-1\n$ export OLD_REVISION=istio-1-21-2\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter for SNI Forwarding\nDESCRIPTION: Sets up SNI forwarding configuration with dynamic forward proxy and detailed access logging for the gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: sni-magic\n  namespace: istio-system\nspec:\n  configPatches:\n  - applyTo: CLUSTER\n    match:\n      context: GATEWAY\n    patch:\n      operation: ADD\n      value:\n        name: sni_cluster\n        load_assignment:\n          cluster_name: sni_cluster\n          endpoints:\n          - lb_endpoints:\n            - endpoint:\n                address:\n                  envoy_internal_address:\n                    server_listener_name: sni_listener\n  - applyTo: CLUSTER\n    match:\n      context: GATEWAY\n    patch:\n      operation: ADD\n      value:\n        name: dynamic_forward_proxy_cluster\n        lb_policy: CLUSTER_PROVIDED\n        cluster_type:\n          name: envoy.clusters.dynamic_forward_proxy\n          typed_config:\n            \"@type\": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig\n            dns_cache_config:\n              name: dynamic_forward_proxy_cache_config\n              dns_lookup_family: V4_ONLY\n\n  - applyTo: LISTENER\n    match:\n      context: GATEWAY\n    patch:\n      operation: ADD\n      value:\n        name: sni_listener\n        internal_listener: {}\n        listener_filters:\n        - name: envoy.filters.listener.tls_inspector\n          typed_config:\n            \"@type\": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector\n\n        filter_chains:\n        - filter_chain_match:\n            server_names:\n            - \"*.wikipedia.org\"\n          filters:\n            - name: envoy.filters.network.sni_dynamic_forward_proxy\n              typed_config:\n                \"@type\": type.googleapis.com/envoy.extensions.filters.network.sni_dynamic_forward_proxy.v3.FilterConfig\n                port_value: 443\n                dns_cache_config:\n                  name: dynamic_forward_proxy_cache_config\n                  dns_lookup_family: V4_ONLY\n            - name: envoy.tcp_proxy\n              typed_config:\n                \"@type\": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy\n                stat_prefix: tcp\n                cluster: dynamic_forward_proxy_cluster\n                access_log:\n                - name: envoy.access_loggers.file\n                  typed_config:\n                    \"@type\": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog\n                    path: \"/dev/stdout\"\n                    log_format:\n                      text_format_source:\n                        inline_string: '[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\\n'\n  - applyTo: NETWORK_FILTER\n    match:\n      context: GATEWAY\n      listener:\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.tcp_proxy\"\n    patch:\n      operation: MERGE\n      value:\n        name: envoy.tcp_proxy\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy\n          stat_prefix: tcp\n          cluster: sni_cluster\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Certificates with Annotation\nDESCRIPTION: This YAML snippet shows how to use annotations in a Deployment to modify sidecar certificate settings for a specific workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/manage-mesh-certificates/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: curl\nspec:\n  ...\n  template:\n    metadata:\n      ...\n      annotations:\n        ...\n        proxy.istio.io/config: |\n          CITADEL_SELF_SIGNED_CA_RSA_KEY_SIZE: 4096\n    spec:\n      ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: Standard robots.txt configuration that allows all web crawlers access to most of the site, restricts access to the /v-0.1 directory, and specifies the sitemap location at https://istio.io/sitemap.xml.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.3/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\n\nDisallow: /v-0.1\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Base Component\nDESCRIPTION: Command to remove the Istio base Helm chart from the istio-system namespace. Note that this doesn't remove the installed CRDs by design.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istio-base -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Redeploying Curl with Istio Sidecar\nDESCRIPTION: Deletes and redeploys the curl deployment to include the Istio sidecar proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete deployment curl -n test-egress\n$ kubectl apply -f @samples/curl/curl.yaml@ -n test-egress\n```\n\n----------------------------------------\n\nTITLE: Deploying Tenant Application in Namespace (YAML)\nDESCRIPTION: This YAML snippet shows how to include the namespace reference in a tenant's application manifest.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\n  namespace: ns-1\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio and Test Workloads\nDESCRIPTION: These commands remove the deployed workloads, uninstall Istio, and delete the created namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/tls-configuration/workload-min-tls-version/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f samples/httpbin/httpbin.yaml -n foo\n$ kubectl delete -f samples/curl/curl.yaml -n foo\n$ istioctl uninstall --purge -y\n$ kubectl delete ns foo istio-system\n```\n\n----------------------------------------\n\nTITLE: Checking Peer Authentication Policies\nDESCRIPTION: Verifies that no peer authentication policies are present in the system.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get peerauthentication --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Displaying NoServerCertificateVerificationDestinationLevel Error in Istio\nDESCRIPTION: This code snippet shows the error message displayed when a destination rule lacks caCertificates for server identity validation in SIMPLE TLS mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0128/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nError [IST0128] (DestinationRule db-tls.default) DestinationRule default/db-tls in namespace default has TLS mode set to SIMPLE but no caCertificates are set to validate server identity for host: mydbserver.prod.svc.cluster.local\n```\n\n----------------------------------------\n\nTITLE: Analyzing Local YAML Files Without Kubernetes\nDESCRIPTION: Command to analyze local YAML files without connecting to a Kubernetes cluster using the --use-kube=false flag. This is useful for validating configurations before deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --use-kube=false samples/bookinfo/networking/*.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Gateway URL Environment Variable\nDESCRIPTION: Combines the ingress host and port into a single gateway URL environment variable for easier access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nexport GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT\n```\n\n----------------------------------------\n\nTITLE: Cleanup Command for Istioctl Processes\nDESCRIPTION: Command to terminate all running istioctl processes during cleanup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/skywalking/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkillall istioctl\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart with Helm on Remote Cluster\nDESCRIPTION: Helm command to install the Istio base chart on cluster2 with the remote profile.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --set profile=remote --kube-context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: EnvoyFilter Configuration - Legacy Syntax (1.6)\nDESCRIPTION: Example of EnvoyFilter configuration using the legacy 'config' syntax in Istio 1.6.x for adding Lua filter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.7.x/announcing-1.7/upgrade-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: lua-1.6\nspec:\n  configPatches:\n    - applyTo: HTTP_FILTER\n      match:\n        context: ANY\n        listener:\n          filterChain:\n            filter:\n              name: envoy.http_connection_manager\n        proxy:\n          proxyVersion: ^1\\.6.*\n      patch:\n        operation: INSERT_BEFORE\n        value:\n          name: envoy.lua\n          config:\n            inlineCode: |\n              function envoy_on_request(handle)\n                request_handle:headers():add(\"foo\", \"bar\")\n              end\n```\n\n----------------------------------------\n\nTITLE: Cleanup Procedures\nDESCRIPTION: These snippets show how to clean up the resources created during the JWT authorization setup, including removing policies, scripts, and test namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system delete requestauthentication jwt-example\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system delete authorizationpolicy frontend-ingress\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ rm -f ./gen-jwt.py ./key.pem\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns foo bar legacy\n```\n\n----------------------------------------\n\nTITLE: Creating Service Entries for External Services\nDESCRIPTION: Defines ServiceEntry resources for httpbin.org and edition.cnn.com to make them accessible from the ingress gateway with appropriate protocol and port configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/proxy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: httpbin-ext\nspec:\n  hosts:\n  - httpbin.org\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: DNS\n  location: MESH_EXTERNAL\n---\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: cnn\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 443\n    name: tls\n    protocol: TLS\n  resolution: DNS\n  location: MESH_EXTERNAL\n```\n\n----------------------------------------\n\nTITLE: Exposing Control Plane on Primary Cluster (Bash)\nDESCRIPTION: Applies a configuration to expose the Istio control plane on the primary cluster (cluster1).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --context=\"${CTX_CLUSTER1}\" -n istio-system -f \\\n    @samples/multicluster/expose-istiod.yaml@\n```\n\n----------------------------------------\n\nTITLE: Verifying Traffic Routing in Istio Locality Failover\nDESCRIPTION: This Bash command executes a curl request from a pod to the HelloWorld service, allowing verification of the current traffic routing based on locality settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/failover/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec --context=\"${CTX_R1_Z1}\" -n sample -c curl \\\n  \"$(kubectl get pod --context=\"${CTX_R1_Z1}\" -n sample -l \\\n  app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n  -- curl -sSL helloworld.sample:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Starting Minikube Tunnel for LoadBalancer Services\nDESCRIPTION: Command to start an external load balancer in Minikube for supporting LoadBalancer type services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ minikube tunnel\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio Base Chart\nDESCRIPTION: Command to remove the Istio Base Chart, noting that this will not remove the CRDs installed by the chart by design.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/helm/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istio-base -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Setting Up JWT Token for OPA Authorization Testing\nDESCRIPTION: Creates a test JWT token that has been signed by OPA with a path claim that allows access to the /headers endpoint. The token contains the base64-encoded path and validity timestamps.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ export TOKEN_PATH_HEADERS=\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXRoIjoiTDJobFlXUmxjbk09IiwibmJmIjoxNTAwMDAwMDAwLCJleHAiOjE5MDAwMDAwMDB9.9yl8LcZdq-5UpNLm0Hn0nnoBHXXAnK4e8RSl9vn6l98\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Applications in Bash\nDESCRIPTION: Deploys the sample 'helloworld' (v1) service and 'curl' pod in the sample namespace of the remote cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/helloworld/helloworld.yaml@ -l service=helloworld -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\nkubectl apply -f @samples/helloworld/helloworld.yaml@ -l version=v1 -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\nkubectl apply -f @samples/curl/curl.yaml@ -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Istio Installation Configuration\nDESCRIPTION: Creates a YAML configuration file for installing Istio on a remote cluster using an external control plane's injection webhook.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: external-istiod\nspec:\n  profile: remote\n  values:\n    global:\n      istioNamespace: external-istiod\n    istiodRemote:\n      injectionURL: https://${EXTERNAL_ISTIOD_ADDR}:15017/inject/cluster/${SECOND_CLUSTER_NAME}/net/network2\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Access and Sitemap for Istio.io Website\nDESCRIPTION: This robots.txt configuration allows all user agents (search engine crawlers) to access the entire website without restrictions and specifies the location of the sitemap file at /v1.7/sitemap.xml for improved search engine indexing.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.7/pt-br/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.7/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Namespaces and Deploying Sample Workloads in Istio\nDESCRIPTION: Creates namespaces 'foo' and 'bar', deploys httpbin and curl with sidecars, and creates a 'legacy' namespace with curl without a sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n foo\n$ kubectl create ns bar\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n bar\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n bar\n$ kubectl create ns legacy\n$ kubectl apply -f @samples/curl/curl.yaml@ -n legacy\n```\n\n----------------------------------------\n\nTITLE: Testing Tenant Admin's Restricted Access to Other Tenant Namespaces\nDESCRIPTION: Command showing that a tenant administrator cannot access another tenant's Istio control plane namespace, validating tenant isolation through RBAC.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system1\nError from server (Forbidden): pods is forbidden: User \"dev-admin\" cannot list pods in the namespace \"istio-system1\"\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC for Client Secret Access in Bash\nDESCRIPTION: Creates the necessary RBAC roles and bindings to allow the client pod (curl) to access the client credential secret.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create role client-credential-role --resource=secret --verb=list\n$ kubectl create rolebinding client-credential-role-binding --role=client-credential-role --serviceaccount=default:curl\n```\n\n----------------------------------------\n\nTITLE: Generating Root Certificate and Key\nDESCRIPTION: Creates a root certificate and private key for signing service certificates using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir example_certs1\n$ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example_certs1/example.com.key -out example_certs1/example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Example of Verifying Istio Pilot Image with Cosign\nDESCRIPTION: This is an example command demonstrating how to use Cosign to verify the Istio pilot image for version 1.12.0. It includes the expected output showing successful verification of the image signature.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/image-signing-validation/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cosign verify --key \"https://istio.io/misc/istio-key.pub\" gcr.io/istio-release/pilot:1.12.0\n\n\nVerification for gcr.io/istio-release/pilot:1.12.0 --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - The signatures were verified against the specified public key\n  - Any certificates were verified against the Fulcio roots.\n\n[{\"critical\":{\"identity\":{\"docker-reference\":\"gcr.io/istio-release/pilot\"},\"image\":{\"docker-manifest-digest\":\"sha256:c37fd83f6435ca0966d653dc6ac42c9fe5ac11d0d5d719dfe97de84acbf7a32d\"},\"type\":\"cosign container image signature\"},\"optional\":null}]\n```\n\n----------------------------------------\n\nTITLE: Listing Running Docker Containers in Bash\nDESCRIPTION: Uses the docker ps command to list all running containers, allowing you to see the running ratings container. The output shows container details including ID, image, command, status, and port mappings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ docker ps\nCONTAINER ID        IMAGE            COMMAND                  CREATED             STATUS              PORTS                    NAMES\n47e8c1fe6eca        user/ratings     \"docker-entrypoint.s…\"   2 minutes ago       Up 2 minutes        0.0.0.0:9081->9080/tcp   elated_stonebraker\n...\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Logs with Istio APIs\nDESCRIPTION: Examines the logs of the Istio egress gateway proxy to verify it's handling the traffic to CNN and performing TLS origination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l istio=egressgateway -c istio-proxy -n istio-system | tail\n```\n\n----------------------------------------\n\nTITLE: Testing Tenant Admin's Restricted Access to Other Tenant Namespaces\nDESCRIPTION: Command showing that a tenant administrator cannot access another tenant's Istio control plane namespace, validating tenant isolation through RBAC.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system1\nError from server (Forbidden): pods is forbidden: User \"dev-admin\" cannot list pods in the namespace \"istio-system1\"\n```\n\n----------------------------------------\n\nTITLE: Istio Error Message for Non-Compliant Port Name\nDESCRIPTION: The error message displayed by Istio when a service port name doesn't follow the required naming convention. This shows the specific format of the IST0118 message.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0118/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nInfo [IST0118] (Service httpbin.default) Port name foo-http (port: 80, targetPort: 80) doesn't follow the naming convention of Istio port.\n```\n\n----------------------------------------\n\nTITLE: Verifying Dual-Stack Traffic Routing in Istio\nDESCRIPTION: These Bash commands test the traffic routing to dual-stack, IPv4-only, and IPv6-only services using the deployed curl pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}')\" -- sh -c \"echo dualstack | nc tcp-echo.dual-stack 9000\"\n$ kubectl exec \"$(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}')\" -- sh -c \"echo ipv4 | nc tcp-echo.ipv4 9000\"\n$ kubectl exec \"$(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}')\" -- sh -c \"echo ipv6 | nc tcp-echo.ipv6 9000\"\n```\n\n----------------------------------------\n\nTITLE: OAuth2-Proxy Extension Provider Configuration\nDESCRIPTION: YAML configuration for an extension provider that integrates with OAuth2-proxy, specifying which headers to include in check requests and which to pass to upstream/downstream services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  mesh: |-\n    extensionProviders:\n    - name: \"oauth2-proxy\"\n      envoyExtAuthzHttp:\n        service: \"oauth2-proxy.foo.svc.cluster.local\"\n        port: \"4180\" # The default port used by oauth2-proxy.\n        includeRequestHeadersInCheck: [\"authorization\", \"cookie\"] # headers sent to the oauth2-proxy in the check request.\n        headersToUpstreamOnAllow: [\"authorization\", \"path\", \"x-auth-request-user\", \"x-auth-request-email\", \"x-auth-request-access-token\"] # headers sent to backend application when request is allowed.\n        headersToDownstreamOnAllow: [\"set-cookie\"] # headers sent back to the client when request is allowed.\n        headersToDownstreamOnDeny: [\"content-type\", \"set-cookie\"] # headers sent back to the client when request is denied.\n```\n\n----------------------------------------\n\nTITLE: Ztunnel Connection Logging Example\nDESCRIPTION: Log entry from Ztunnel showing an inbound connection request, including the source Pod IP (peer_ip) and destination Pod IP. This demonstrates the readable logging format provided by Ztunnel.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n2023-02-15T20:40:48.628251Z  INFO inbound{id=4399fa68cf25b8ebccd472d320ba733f peer_ip=10.244.2.5 peer_id=spiffe://cluster.local/ns/default/sa/sleep}: Ztunnel::proxy::inbound: got CONNECT request to 10.244.2.8:5000\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cluster Kubeconfig from Gardener\nDESCRIPTION: Command to download and decode the kubeconfig file for accessing the newly created Kubernetes cluster\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gardener/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --namespace shoot--my-project--my-cluster get secret kubecfg --output jsonpath={.data.kubeconfig} | base64 --decode > my-cluster.yaml\n```\n\n----------------------------------------\n\nTITLE: Restoring VirtualService Configuration\nDESCRIPTION: kubectl command to restore the bookinfo VirtualService gateway name to its original value\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch vs bookinfo -n bookinfo --type json -p '[{\"op\":\"replace\",\"path\":\"/spec/gateways/0\", \"value\":\"bookinfo-gateway\"}]'\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cluster as Config Cluster (Previous Method)\nDESCRIPTION: YAML configuration for installing Istio on a remote cluster that also serves as a config cluster for the external control plane in Istio 1.10. This requires enabling both base and istiodRemote components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ncomponents:\n  base:\n    enabled: true\n  pilot:\n    enabled: false\n  istiodRemote:\n    enabled: true\nvalues:\n  global:\n    externalIstiod: true\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Custom Gateway Topology Configuration\nDESCRIPTION: This bash script creates a YAML file with custom gateway topology settings and uses it to install Istio. It sets numTrustedProxies to 2 in the IstioOperator configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > topology.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      gatewayTopology:\n        numTrustedProxies: 2\nEOF\n$ istioctl install -f topology.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Standalone OPA Service in Kubernetes\nDESCRIPTION: Creates a standalone OPA service and deployment in Kubernetes. The OPA container is configured to provide Envoy external authorization decisions via gRPC and exposes port 9191 for service connections.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: opa\n  labels:\n    app: opa\nspec:\n  ports:\n  - name: grpc\n    port: 9191\n    targetPort: 9191\n  selector:\n    app: opa\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: opa\n  labels:\n    app: opa\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: opa\n  template:\n    metadata:\n      labels:\n        app: opa\n    spec:\n      containers:\n        - name: opa\n          image: openpolicyagent/opa:latest-envoy\n          securityContext:\n            runAsUser: 1111\n          volumeMounts:\n          - readOnly: true\n            mountPath: /policy\n            name: opa-policy\n          args:\n          - \"run\"\n          - \"--server\"\n          - \"--addr=localhost:8181\"\n          - \"--diagnostic-addr=0.0.0.0:8282\"\n          - \"--set=plugins.envoy_ext_authz_grpc.addr=:9191\"\n          - \"--set=plugins.envoy_ext_authz_grpc.query=data.envoy.authz.allow\"\n          - \"--set=decision_logs.console=true\"\n          - \"--ignore=.*\"\n          - \"/policy/policy.rego\"\n          ports:\n          - containerPort: 9191\n          livenessProbe:\n            httpGet:\n              path: /health?plugins\n              scheme: HTTP\n              port: 8282\n            initialDelaySeconds: 5\n            periodSeconds: 5\n          readinessProbe:\n            httpGet:\n              path: /health?plugins\n              scheme: HTTP\n              port: 8282\n            initialDelaySeconds: 5\n            periodSeconds: 5\n      volumes:\n        - name: proxy-config\n          configMap:\n            name: proxy-config\n        - name: opa-policy\n          secret:\n            secretName: opa-policy\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring ClusterIssuer for Let's Encrypt\nDESCRIPTION: Creates a ClusterIssuer resource to enable automatic certificate management through Let's Encrypt using DNS01 challenge with Route53 provider.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/custom-ingress-gateway/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: certmanager.k8s.io/v1alpha1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-demo\n  namespace: kube-system\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: <REDACTED>\n    privateKeySecretRef:\n      name: letsencrypt-demo\n    dns01:\n      providers:\n      - name: your-dns\n        route53:\n          accessKeyID: <REDACTED>\n          region: eu-central-1\n          secretAccessKeySecretRef:\n            name: prod-route53-credentials-secret\n            key: secret-access-key\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Gateway and VirtualService\nDESCRIPTION: Gateway and VirtualService configuration for HTTPS traffic on port 443 with TLS termination routing to httpbin service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: mygateway2\nspec:\n  selector:\n    istio: ingressgateway # use istio default ingress gateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: httpbin-credential # must be the same as secret\n    hosts:\n    - \"a25fa0b4835b.elb.us-west-2.amazonaws.com\"\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"a25fa0b4835b.elb.us-west-2.amazonaws.com\"\n  gateways:\n  - mygateway2\n  http:\n  - match:\n    - uri:\n        prefix: /headers\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\n```\n\n----------------------------------------\n\nTITLE: Applying Sample Namespace to Multiple Clusters\nDESCRIPTION: Bash command to apply the sample namespace configuration across all clusters in different regions and zones.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/before-you-begin/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nfor CTX in \"$CTX_PRIMARY\" \"$CTX_R1_Z1\" \"$CTX_R1_Z2\" \"$CTX_R2_Z3\" \"$CTX_R3_Z4\"; \\\n  do \\\n    kubectl --context=\"$CTX\" apply -f sample.yaml; \\\n  done\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio CNI Component\nDESCRIPTION: Command to remove the Istio CNI Helm chart from the istio-system namespace. This removes the CNI plugin responsible for traffic redirection in ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istio-cni -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio-enabled Productpage Service\nDESCRIPTION: Command to redeploy the productpage microservice with Istio sidecar injection, scaling to 3 replicas\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s samples/bookinfo/platform/kube/bookinfo.yaml | istioctl kube-inject -f - | sed 's/replicas: 1/replicas: 3/g' | kubectl apply -l app=productpage,version=v1 -f -\n```\n\n----------------------------------------\n\nTITLE: Verifying External Istiod Deployment in Bash\nDESCRIPTION: Checks that the external Istiod pod is running successfully in the external-istiod namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get po -n external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService with Path-Based Access Control\nDESCRIPTION: Defines a VirtualService that restricts access to only /health and /sport paths on edition.cnn.com through the Istio egress gateway with TLS origination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-cnn-through-egress-gateway\nspec:\n  hosts:\n  - edition.cnn.com\n  gateways:\n  - istio-egressgateway\n  - mesh\n  http:\n  - match:\n    - gateways:\n      - mesh\n      port: 80\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: cnn\n        port:\n          number: 443\n      weight: 100\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n      uri:\n        regex: \"/health|/sport\"\n    route:\n    - destination:\n        host: edition.cnn.com\n        port:\n          number: 443\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Displaying Endpoints for Reviews Waypoint Proxy in Istio\nDESCRIPTION: This command lists the endpoints for the reviews waypoint proxy, showing their status, outlier check results, and associated clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/waypoint-proxy-made-simple/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config endpoints deploy/bookinfo-reviews-istio-waypoint\n```\n\n----------------------------------------\n\nTITLE: Verifying Kubernetes Configuration\nDESCRIPTION: Command to verify the Kubernetes cluster configuration before upgrade\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/in-place/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config view\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Ingress Resource\nDESCRIPTION: Command to delete the Kubernetes Ingress resource, as it's being replaced by the Istio ingress gateway for controlling traffic into the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ingress bookinfo\ningress.extensions \"bookinfo\" deleted\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Sidecar Ingress TLS Support\nDESCRIPTION: Installs Istio with the default profile and enables the experimental feature for TLS termination on sidecar ingress.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=default --set values.pilot.env.ENABLE_TLS_ON_SIDECAR_INGRESS=true\n```\n\n----------------------------------------\n\nTITLE: Example Workload Deployment with SPIRE Integration\nDESCRIPTION: YAML configuration for deploying a sample workload with SPIRE integration. Shows how to configure the CSI driver volume and use the custom sidecar template.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: curl\nspec:\n  replicas: 1\n  selector:\n      matchLabels:\n        app: curl\n  template:\n      metadata:\n        labels:\n          app: curl\n        annotations:\n            inject.istio.io/templates: \"sidecar,spire\"\n      spec:\n        terminationGracePeriodSeconds: 0\n        serviceAccountName: curl\n        containers:\n        - name: curl\n          image: curlimages/curl\n          command: [\"/bin/sleep\", \"3650d\"]\n          imagePullPolicy: IfNotPresent\n          volumeMounts:\n            - name: tmp\n              mountPath: /tmp\n          securityContext:\n            runAsUser: 1000\n        volumes:\n          - name: tmp\n            emptyDir: {}\n          - name: workload-socket\n            csi:\n              driver: \"csi.spiffe.io\"\n              readOnly: true\n```\n\n----------------------------------------\n\nTITLE: Testing Disabled Auto-allocation (Kubernetes Command)\nDESCRIPTION: This bash command verifies that auto-allocation is disabled for a ServiceEntry by attempting to resolve the host.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec deploy/curl -- curl -sS -v auto.internal\n```\n\n----------------------------------------\n\nTITLE: Deleting curl service in default namespace\nDESCRIPTION: Command to remove the curl service from the default Kubernetes namespace using kubectl delete.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: HTTPS Failover ServiceEntry Configuration\nDESCRIPTION: ServiceEntry configuration for HTTPS endpoints with TLS origination\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ServiceEntry\nmetadata:\n  name: external-svc-dns\nspec:\n  hosts:\n  - mydb.com\n  ports:\n  - number: 80\n    name: http-port\n    protocol: HTTP\n    targetPort: 443\n  resolution: DNS\n  endpoints:\n  - address: dynamodb.us-east-1.amazonaws.com\n    locality: us-east1\n  - address: dynamodb.us-west-1.amazonaws.com\n    locality: us-west\n```\n\n----------------------------------------\n\nTITLE: Checking Istiod ClusterRole Permissions\nDESCRIPTION: This command retrieves the ClusterRole for Istiod in YAML format. It shows the RBAC permissions granted to Istiod, which are necessary for managing ValidatingWebhookConfigurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/validation/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get clusterrole istiod-istio-system -o yaml\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\n  name: istiod-istio-system\nrules:\n- apiGroups:\n  - admissionregistration.k8s.io\n  resources:\n  - validatingwebhookconfigurations\n  verbs:\n  - '*'\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Egress Gateway for MongoDB without Mutual TLS\nDESCRIPTION: This YAML configuration sets up an Istio egress gateway for MongoDB traffic without mutual TLS. It includes a Gateway, DestinationRule, and VirtualService to route traffic through the egress gateway in passthrough mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: istio-egressgateway\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 443\n      name: tls\n      protocol: TLS\n    hosts:\n    - $MONGODB_HOST\n    tls:\n      mode: PASSTHROUGH\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: egressgateway-for-mongo\nspec:\n  host: istio-egressgateway.istio-system.svc.cluster.local\n  subsets:\n  - name: mongo\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-mongo-through-egress-gateway\nspec:\n  hosts:\n  - $MONGODB_HOST\n  gateways:\n  - mesh\n  - istio-egressgateway\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: $MONGODB_PORT\n      sni_hosts:\n      - $MONGODB_HOST\n    route:\n    - destination:\n        host: istio-egressgateway.istio-system.svc.cluster.local\n        subset: mongo\n        port:\n          number: 443\n  - match:\n    - gateways:\n      - istio-egressgateway\n      port: 443\n      sni_hosts:\n      - $MONGODB_HOST\n    route:\n    - destination:\n        host: $MONGODB_HOST\n        port:\n          number: $MONGODB_PORT\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Testing HTTP Access to External Service in Istio\nDESCRIPTION: Executes a curl command from the source pod to the external HTTP service. The response shows a 301 redirect from HTTP to HTTPS, demonstrating the typical redirect flow that occurs without TLS origination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${SOURCE_POD}\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\nHTTP/1.1 301 Moved Permanently\n...\nlocation: https://edition.cnn.com/politics\n...\n\nHTTP/2 200\n...\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace and Deploying Workloads\nDESCRIPTION: Commands to create a namespace 'foo' and deploy httpbin and curl workloads with Istio injection\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-deny/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n foo\n```\n\n----------------------------------------\n\nTITLE: Inspecting iptables Rules in a Pod\nDESCRIPTION: Shows how to inspect the iptables rules set up by Istio within a pod's network namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ docker inspect b8de099d3510 --format '{{ .State.Pid }}'\n4125\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ nsenter -t 4215 -n iptables -t nat -S\n-P PREROUTING ACCEPT\n-P INPUT ACCEPT\n-P OUTPUT ACCEPT\n-P POSTROUTING ACCEPT\n-N ISTIO_INBOUND\n-N ISTIO_IN_REDIRECT\n-N ISTIO_OUTPUT\n-N ISTIO_REDIRECT\n-A PREROUTING -p tcp -j ISTIO_INBOUND\n-A OUTPUT -p tcp -j ISTIO_OUTPUT\n-A ISTIO_INBOUND -p tcp -m tcp --dport 80 -j ISTIO_IN_REDIRECT\n-A ISTIO_IN_REDIRECT -p tcp -j REDIRECT --to-ports 15001\n-A ISTIO_OUTPUT ! -d 127.0.0.1/32 -o lo -j ISTIO_REDIRECT\n-A ISTIO_OUTPUT -m owner --uid-owner 1337 -j RETURN\n-A ISTIO_OUTPUT -m owner --gid-owner 1337 -j RETURN\n-A ISTIO_OUTPUT -d 127.0.0.1/32 -j RETURN\n-A ISTIO_OUTPUT -j ISTIO_REDIRECT\n-A ISTIO_REDIRECT -p tcp -j REDIRECT --to-ports 15001\n```\n\n----------------------------------------\n\nTITLE: Testing HTTP Access to External Service in Istio\nDESCRIPTION: Executes a curl command from the source pod to the external HTTP service. The response shows a 301 redirect from HTTP to HTTPS, demonstrating the typical redirect flow that occurs without TLS origination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${SOURCE_POD}\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\nHTTP/1.1 301 Moved Permanently\n...\nlocation: https://edition.cnn.com/politics\n...\n\nHTTP/2 200\n...\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets for Certificates\nDESCRIPTION: Creates Kubernetes secrets in the test namespace to store the CA certificate and server TLS certificate/key pair.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n test create secret generic httpbin-mtls-termination-cacert --from-file=ca.crt=./example.com.crt\n$ kubectl -n test create secret tls httpbin-mtls-termination --cert ./httpbin.test.svc.cluster.local.crt --key ./httpbin.test.svc.cluster.local.key\n```\n\n----------------------------------------\n\nTITLE: Checking for Pods Binding to Localhost with Istio Precheck\nDESCRIPTION: This snippet demonstrates how to use the 'istioctl experimental precheck' command to identify pods that may be impacted by changes in inbound forwarding behavior in Istio 1.10. It checks for pods binding to localhost on ports exposed in a Service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental precheck\nError [IST0143] (Pod echo-local-849647c5bd-g9wxf.default) Port 443 is exposed in a Service but listens on localhost. It will not be exposed to other pods.\nError [IST0143] (Pod echo-local-849647c5bd-g9wxf.default) Port 7070 is exposed in a Service but listens on localhost. It will not be exposed to other pods.\nError: Issues found when checking the cluster. Istio may not be safe to install or upgrade.\nSee https://istio.io/latest/docs/reference/config/analysis for more information about causes and resolutions.\n```\n\n----------------------------------------\n\nTITLE: Creating External Istio Namespace in Bash\nDESCRIPTION: Creates the 'external-istiod' namespace in the external cluster to host the control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for Istio Configuration\nDESCRIPTION: Commands to remove the traffic mirroring configuration, services, and deployments from the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/mirroring/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete virtualservice httpbin\nkubectl delete destinationrule httpbin\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete httproute httpbin\nkubectl delete svc httpbin-v1 httpbin-v2\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete deploy httpbin-v1 httpbin-v2 curl\nkubectl delete svc httpbin\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Control Plane Services by Revision\nDESCRIPTION: Lists the Istio control plane services for different revisions, showing the services with the 'istiod' app label running simultaneously.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n istio-system -l app=istiod\nNAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                                 AGE\nistiod-{{< istio_previous_version_revision >}}-1   ClusterIP   10.96.93.151     <none>        15010/TCP,15012/TCP,443/TCP,15014/TCP   109s\nistiod-canary   ClusterIP   10.104.186.250   <none>        15010/TCP,15012/TCP,443/TCP,15014/TCP   87s\n```\n\n----------------------------------------\n\nTITLE: Setting Up Gateway URL for Istio API Gateway\nDESCRIPTION: These commands extract the ingress gateway's IP address and port, then set up the GATEWAY_URL environment variable for testing. It gets the load balancer IP and HTTP2 port from the istio-ingressgateway service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST=$(kubectl -n external-istiod --context=\"${CTX_REMOTE_CLUSTER}\" get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\nexport INGRESS_PORT=$(kubectl -n external-istiod --context=\"${CTX_REMOTE_CLUSTER}\" get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\nexport GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT\n```\n\n----------------------------------------\n\nTITLE: View waypoint proxy logs\nDESCRIPTION: Command to view logs from the waypoint deployment\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs deploy/waypoint\n```\n\n----------------------------------------\n\nTITLE: Defining ServiceEntry for Local OPA Service in Istio\nDESCRIPTION: Creates a ServiceEntry resource to allow Istio to connect to a local OPA service running on port 9191 for authorization decisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: local-opa-grpc\nspec:\n  hosts:\n  - \"local-opa-grpc.local\"\n  endpoints:\n  - address: \"127.0.0.1\"\n  ports:\n  - name: grpc\n    number: 9191\n    protocol: GRPC\n  resolution: STATIC\n```\n\n----------------------------------------\n\nTITLE: Labeling Kube-System Namespace\nDESCRIPTION: Labels the kube-system namespace for network policy targeting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label ns kube-system kube-system=true\n```\n\n----------------------------------------\n\nTITLE: Creating k3d Cluster\nDESCRIPTION: Creates a k3d cluster with 2 agent nodes and disabled Traefik, exposing ports 9080 and 9443 for loadbalancer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nk3d cluster create --api-port 6550 -p '9080:80@loadbalancer' -p '9443:443@loadbalancer' --agents 2 --k3s-arg '--disable=traefik@server:*'\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Component Manifest with Helm Template\nDESCRIPTION: This command generates a manifest for the istiod component using Helm template. It outputs the manifest to a file named istiod.yaml which can be inspected or tracked for changes over time.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template istiod istio/istiod -n istio-system --kube-version {Kubernetes version of target cluster} > istiod.yaml\n```\n\n----------------------------------------\n\nTITLE: Deploying Istio with Custom Certificate Signer Configuration\nDESCRIPTION: Creates an IstioOperator configuration file with custom certificate signer information and deploys Istio using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    pilot:\n      env:\n        EXTERNAL_CA: ISTIOD_RA_KUBERNETES_API\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        ISTIO_META_CERT_SIGNER: istio-system\n    caCertificates:\n    - pem: |\n$ISTIOCA\n      certSigners:\n      - clusterissuers.cert-manager.io/istio-system\n    - pem: |\n$FOOCA\n      certSigners:\n      - clusterissuers.cert-manager.io/foo\n    - pem: |\n$BARCA\n      certSigners:\n      - clusterissuers.cert-manager.io/bar\n  components:\n    pilot:\n      k8s:\n        env:\n        - name: CERT_SIGNER_DOMAIN\n          value: clusterissuers.cert-manager.io\n        - name: PILOT_CERT_PROVIDER\n          value: k8s.io/clusterissuers.cert-manager.io/istio-system\n        overlays:\n          - kind: ClusterRole\n            name: istiod-clusterrole-istio-system\n            patches:\n              - path: rules[-1]\n                value: |\n                  apiGroups:\n                  - certificates.k8s.io\n                  resourceNames:\n                  - clusterissuers.cert-manager.io/foo\n                  - clusterissuers.cert-manager.io/bar\n                  - clusterissuers.cert-manager.io/istio-system\n                  resources:\n                  - signers\n                  verbs:\n                  - approve\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --skip-confirmation -f ./istio.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Sample Pod Deployment in Bash\nDESCRIPTION: Checks that the sample pods are running with sidecar injection in the remote cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Status Field with istioctl\nDESCRIPTION: Command to enable status field tracking during Istio installation. Requires enabling both PILOT_ENABLE_STATUS and config_distribution_tracking.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/config-status/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set values.pilot.env.PILOT_ENABLE_STATUS=true --set values.global.istiod.enableAnalysis=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Service-Specific WasmPlugin\nDESCRIPTION: YAML configuration for deploying a basic authentication WasmPlugin targeting a specific service (reviews)\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/extend-waypoint-wasm/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: basic-auth-for-service\nspec:\n  targetRefs:\n    - kind: Service\n      group: \"\"\n      name: reviews\n  url: oci://ghcr.io/istio-ecosystem/wasm-extensions/basic_auth:1.12.0\n  phase: AUTHN\n  pluginConfig:\n    basic_auth_rules:\n      - prefix: \"/reviews\"\n        request_methods:\n          - \"GET\"\n          - \"POST\"\n        credentials:\n          - \"ok:test\"\n          - \"MXQtaW4zOmFkbWluMw==\"\n```\n\n----------------------------------------\n\nTITLE: Running Istio Precheck\nDESCRIPTION: Command to verify compatibility before upgrading Istio\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/in-place/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x precheck\n```\n\n----------------------------------------\n\nTITLE: Enabling Strict Mutual TLS for Ratings Service in Istio\nDESCRIPTION: This YAML configuration creates a PeerAuthentication resource to enable strict mutual TLS for the 'ratings' service in Istio. It selects pods with the label 'app: ratings' and sets the mTLS mode to STRICT.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: ratings-strict\nspec:\n  selector:\n    matchLabels:\n      app: ratings\n  mtls:\n    mode: STRICT\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Route for Service in Ambient Mesh\nDESCRIPTION: YAML configuration for an HTTPRoute resource that routes traffic from the 'echo' service to 'echo-v1' backend in an ambient mesh environment. This configuration is used to override default service routing behavior when using waypoint proxies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/architecture/data-plane/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: echo\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: echo\n  rules:\n  - backendRefs:\n    - name: echo-v1\n      port: 80\n```\n\n----------------------------------------\n\nTITLE: Analyzing Ztunnel Traffic Logs\nDESCRIPTION: Shows how to check the logs of ztunnel pods to confirm that traffic was sent over the HBONE tunnel.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-ztunnel/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system logs -l app=ztunnel | grep -E \"inbound|outbound\"\n```\n\n----------------------------------------\n\nTITLE: Testing Valid Authorization with JWT Token for Same-Pod OPA Setup\nDESCRIPTION: Tests accessing the /headers endpoint with a JWT token that authorizes this specific path, expecting a 200 OK response as the path matches the token's claim.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin-with-opa:8000/headers -H \"Authorization: Bearer $TOKEN_PATH_HEADERS\" -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Testing External HTTPS Access\nDESCRIPTION: Commands to test access to external HTTPS services from the source pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- curl -sSI https://www.google.com | grep  \"HTTP/\"; kubectl exec \"$SOURCE_POD\" -c curl -- curl -sI https://edition.cnn.com | grep \"HTTP/\"\n```\n\n----------------------------------------\n\nTITLE: Extracting ALB Certificates and Creating Kubernetes Secrets in Bash\nDESCRIPTION: These commands extract the ALB certificate and key, download a trusted certificate, and create Kubernetes secrets for mutual TLS authentication between the ALB and Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir alb_certs\n$ kubectl get secret $ALB_SECRET --namespace=default -o yaml | grep 'tls.key:' | cut -f2 -d: | base64 --decode > alb_certs/client.key\n$ kubectl get secret $ALB_SECRET --namespace=default -o yaml | grep 'tls.crt:' | cut -f2 -d: | base64 --decode > alb_certs/client.crt\n$ ls -al alb_certs\n-rw-r--r--   1 user  staff  3738 Sep 11 07:57 client.crt\n-rw-r--r--   1 user  staff  1675 Sep 11 07:57 client.key\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ curl https://letsencrypt.org/certs/trustid-x3-root.pem --output trusted.crt\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret generic alb-certs -n istio-system --from-file=trusted.crt --from-file=alb_certs/client.crt --from-file=alb_certs/client.key\nsecret \"alb-certs\" created\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create -n istio-system secret generic $INGRESS_GATEWAY_SECRET-cacert --from-file=ca.crt=trusted.crt\nsecret/cluster_name-hash-XXXX-cacert created\n```\n\n----------------------------------------\n\nTITLE: Checking Istiod Pod Status\nDESCRIPTION: Verify the presence of both default and canary versions of istiod pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/helm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -l app=istiod -L istio.io/rev -n istio-system\n```\n\n----------------------------------------\n\nTITLE: NetworkPolicy Allow Health Probes Example\nDESCRIPTION: NetworkPolicy configuration that allows kubelet health probes while denying other ingress traffic by allowing the link-local address used by ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: deny-ingress-allow-kubelet-healthprobes\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  ingress:\n    - from:\n      - ipBlock:\n          cidr: 169.254.7.127/32\n```\n\n----------------------------------------\n\nTITLE: Sending Test Request to Test Access Logging in Istio\nDESCRIPTION: This bash command sends an HTTP request from a curl pod to httpbin service to test and demonstrate the Envoy access logging functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- curl -sS -v httpbin:8000/status/418\n...\n< HTTP/1.1 418 Unknown\n...\n< server: envoy\n...\nI'm a teapot!\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring SubjectAltNames for TLS Certificate in Bash\nDESCRIPTION: Creates a configuration file for OpenSSL to include SubjectAltNames in the certificate. This is useful for enabling SAN validation for the destination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ cat > san.conf <<EOF\n[req]\ndistinguished_name = req_distinguished_name\nreq_extensions = v3_req\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = US\n[v3_req]\nkeyUsage = critical, digitalSignature, keyEncipherment\nextendedKeyUsage = serverAuth, clientAuth\nbasicConstraints = critical, CA:FALSE\nsubjectAltName = critical, @alt_names\n[alt_names]\nDNS = my-nginx.mesh-external.svc.cluster.local\nEOF\n$\n$ openssl req -out my-nginx.mesh-external.svc.cluster.local.csr -newkey rsa:4096 -nodes -keyout my-nginx.mesh-external.svc.cluster.local.key -subj \"/CN=my-nginx.mesh-external.svc.cluster.local/O=some organization\" -config san.conf\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in my-nginx.mesh-external.svc.cluster.local.csr -out my-nginx.mesh-external.svc.cluster.local.crt -extfile san.conf -extensions v3_req\n```\n\n----------------------------------------\n\nTITLE: Allowing HBONE Traffic with Kubernetes NetworkPolicy\nDESCRIPTION: This updated NetworkPolicy example shows how to allow both the application port (8080) and the Ambient mode port (15008) for proper communication in an Ambient mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: my-app-allow-ingress-web\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  ingress:\n  - ports:\n    - port: 8080\n      protocol: TCP\n    - port: 15008\n      protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Applying User-Based Routing with Istio Virtual Services\nDESCRIPTION: This command applies a configuration that routes traffic to reviews:v2 service for requests from a user named 'jason', while all other users are routed to reviews:v1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-test-v2.yaml@\n```\n\n----------------------------------------\n\nTITLE: EnvoyFilter Configuration - Updated Syntax (1.7)\nDESCRIPTION: Updated EnvoyFilter configuration using the new 'typed_config' syntax required in Istio 1.7.x for adding Lua filter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.7.x/announcing-1.7/upgrade-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: lua-1.7\nspec:\n  configPatches:\n    - applyTo: HTTP_FILTER\n      match:\n        context: ANY\n        listener:\n          filterChain:\n            filter:\n              name: envoy.http_connection_manager\n        proxy:\n          proxyVersion: ^1\\.7.*\n      patch:\n        operation: INSERT_BEFORE\n        value:\n          name: envoy.filters.http.lua\n          typed_config:\n            '@type': type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\n            inlineCode: |\n              function envoy_on_request(handle)\n                request_handle:headers():add(\"foo\", \"bar\")\n              end\n```\n\n----------------------------------------\n\nTITLE: Getting SPIRE Server Pod Name\nDESCRIPTION: Retrieves the name of the SPIRE server pod for manual registration commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nSPIRE_SERVER_POD=$(kubectl get pod -l statefulset.kubernetes.io/pod-name=spire-server-0 -n spire-server -o jsonpath=\"{.items[0].metadata.name}\")\n```\n\n----------------------------------------\n\nTITLE: Creating Route53 Credentials Secret\nDESCRIPTION: Defines a Kubernetes secret containing AWS Route53 credentials for DNS validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/custom-ingress-gateway/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: prod-route53-credentials-secret\ntype: Opaque\ndata:\n  secret-access-key: <REDACTED BASE64>\n```\n\n----------------------------------------\n\nTITLE: L4 Metrics Example\nDESCRIPTION: Sample TCP metrics output showing connection information with various labels including source and destination workload details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nistio_tcp_connections_opened_total{\n  reporter=\"source\",\n  source_workload=\"sleep\",\n  source_workload_namespace=\"default\",\n  source_principal=\"spiffe://cluster.local/ns/default/sa/sleep\",\n  destination_workload=\"helloworld-v1\",\n  destination_workload_namespace=\"default\",\n  destination_principal=\"spiffe://cluster.local/ns/default/sa/helloworld\",\n  request_protocol=\"tcp\",\n  connection_security_policy=\"mutual_tls\"\n  ...\n} 1\n```\n\n----------------------------------------\n\nTITLE: Configuring Service-attached parentRefs in Gateway API YAML\nDESCRIPTION: This YAML snippet demonstrates how to correctly configure a service-attached parentRef in a Gateway API route (HTTPRoute in this case) for Istio 1.19. It explicitly sets 'group: \"\"' for the Service parentRef, which is now required.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.19.x/announcing-1.19/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: HTTPRoute\nmetadata:\n  name: productpage\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: productpage\n    port: 9080\n```\n\n----------------------------------------\n\nTITLE: Running Fortio Load Test for Maximum QPS\nDESCRIPTION: This Fortio command runs a load test for 60 seconds with unlimited QPS and a variable number of connections. It's used to measure the maximum QPS achieved with different redirection methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/ambient-ebpf-redirection/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ fortio load -uniform -t 60s -qps 0 -c <num_connections> http://<fortio-svc-name>:8080\n```\n\n----------------------------------------\n\nTITLE: Waiting for Kubernetes Gateway Readiness\nDESCRIPTION: Command to wait for the Kubernetes Gateway resource to be fully programmed before proceeding, ensuring the gateway proxy service is properly deployed and configured.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl wait --for=condition=programmed gtw httpbin-gateway\n```\n\n----------------------------------------\n\nTITLE: NetworkPolicy Allow Health Probes Example\nDESCRIPTION: NetworkPolicy configuration that allows kubelet health probes while denying other ingress traffic by allowing the link-local address used by ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: deny-ingress-allow-kubelet-healthprobes\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  ingress:\n    - from:\n      - ipBlock:\n          cidr: 169.254.7.127/32\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Application with Istio\nDESCRIPTION: This command deploys a sample application (sleep) in the 'sample' namespace with Istio injection enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/sleep/sleep.yaml -n sample\n```\n\n----------------------------------------\n\nTITLE: Verifying Application Deployment\nDESCRIPTION: Command to verify the application deployment by checking the page title response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/pod-security-admission/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=ratings -o jsonpath='{.items[0].metadata.name}')\" -c ratings -- curl -sS productpage:9080/productpage | grep -o \"<title>.*</title>\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Systemd Logs\nDESCRIPTION: Command to view the systemd logs for the Istio proxy initialization details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -f -u istio -n 1000\n```\n\n----------------------------------------\n\nTITLE: Generating Certificate and Key for helloworld.example.com\nDESCRIPTION: Creates a certificate and private key for the helloworld.example.com domain using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out example_certs1/helloworld.example.com.csr -newkey rsa:2048 -nodes -keyout example_certs1/helloworld.example.com.key -subj \"/CN=helloworld.example.com/O=helloworld organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example_certs1/example.com.crt -CAkey example_certs1/example.com.key -set_serial 1 -in example_certs1/helloworld.example.com.csr -out example_certs1/helloworld.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Opening Grafana Dashboard\nDESCRIPTION: Command to open the Istio Dashboard via the Grafana UI using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/using-istio-dashboard/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard grafana\n```\n\n----------------------------------------\n\nTITLE: Opening Prometheus Dashboard with Istioctl\nDESCRIPTION: Command to set up port-forwarding for the Prometheus dashboard using istioctl to view Istio metrics.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard prometheus\n```\n\n----------------------------------------\n\nTITLE: Applying Traffic Policy at Host Level in Istio DestinationRule\nDESCRIPTION: Improved DestinationRule configuration that moves the traffic policy to the host level, ensuring it applies to all versions of the service regardless of routing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  trafficPolicy:\n    connectionPool:\n      tcp:\n        maxConnections: 100\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Disabling REQUEST_COUNT Metrics for Both Client and Server (YAML)\nDESCRIPTION: Telemetry API configuration to disable only the REQUEST_COUNT metric for both client and server modes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: remove-request-count\n  namespace: istio-system\nspec:\n  metrics:\n    - providers:\n        - name: prometheus\n      overrides:\n        - disabled: true\n          match:\n            mode: CLIENT_AND_SERVER\n            metric: REQUEST_COUNT\n```\n\n----------------------------------------\n\nTITLE: Checking Header-Based Routing\nDESCRIPTION: Shows how to configure and verify header-based routing rules that direct traffic to different service versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-jason-v2-v3.yaml@\n$ istioctl x describe pod $REVIEWS_V1_POD\n...\nVirtualService: reviews\n   WARNING: No destinations match pod subsets (checked 2 HTTP routes)\n      Route to non-matching subset v2 for (when headers are end-user=jason)\n      Route to non-matching subset v3 for (everything)\n```\n\n----------------------------------------\n\nTITLE: Viewing Waypoint Proxy Logs\nDESCRIPTION: Gets the logs from a waypoint deployment to help troubleshoot issues by examining the runtime behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs deploy/waypoint\n```\n\n----------------------------------------\n\nTITLE: Ambient Mode Security Context\nDESCRIPTION: Documentation block describing the security context of ambient mode operation and its advantages in limiting compromise scope.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/deployment/security-model/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nIn ambient mode, the node proxy is not co-located within the pod, and runs in another trust boundary as part of an independent pod.\n\nA compromised application may send arbitrary traffic.\nHowever, they do not have control over the node proxy, which will chose how to handle incoming and outbound traffic.\n\nAdditionally, as the pod itself doesn't have access to a service account token to request a mutual TLS certificate, lateral movement possibilities are reduced.\n```\n\n----------------------------------------\n\nTITLE: Creating Directory for Certificates\nDESCRIPTION: Creates a directory to store certificates and keys, then changes to that directory.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir -p certs\n$ pushd certs\n```\n\n----------------------------------------\n\nTITLE: Shutting Down the Curl Service\nDESCRIPTION: This command deletes the curl service used for testing the egress gateway configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Installing SPIRE with Istio Integration\nDESCRIPTION: Deploys SPIRE with configuration for Istio integration, setting the trust domain to 'example.org'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install -n spire-server spire spire --repo https://spiffe.github.io/helm-charts-hardened/ --wait --set global.spire.trustDomain=\"example.org\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Pilot Component Configuration\nDESCRIPTION: YAML configuration showing how to disable the Pilot component using IstioOperator API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  components:\n    pilot:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Migrating to v1beta1 Authorization Policies\nDESCRIPTION: Demonstrates migration of v1alpha1 RBAC policies to v1beta1 AuthorizationPolicy resources with default deny and specific allow rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/migrate-alpha-policy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: default\n  namespace: foo\nspec:\n  {}\n---\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n      version: v1\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        principals: [\"cluster.local/ns/foo/sa/sleep\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Testing the exposed HTTP route with curl\nDESCRIPTION: A curl command to access the exposed /get endpoint of the httpbin service through the Gateway, setting the Host header to match the configured hostname.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST/get\"\n```\n\n----------------------------------------\n\nTITLE: Testing ALB Ingress with curl in Bash\nDESCRIPTION: This command tests the ALB ingress configuration by sending a request to the configured endpoint.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ curl https://httpbin.$ALB_INGRESS_DOMAIN/status/418\n\n-=[ teapot ]=-\n\n   _...._\n .'  _ _ `.\n| .\"` ^ `\". _,\n\\_;`\"---\"`|//\n  |       ;/\n  \\_     _/\n    `\"\"\"`\n```\n\n----------------------------------------\n\nTITLE: Configuring Startup and Readiness Probes in Istio 1.20\nDESCRIPTION: This YAML configuration shows the recommended values for readiness and startup probes in Istio 1.20. It includes settings for readiness initial delay, period, failure threshold, and startup probe configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.20.x/announcing-1.20/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nreadinessInitialDelaySeconds: 0\nreadinessPeriodSeconds: 15\nreadinessFailureThreshold: 4\nstartupProbe:\nenabled: true\nfailureThreshold: 600\n```\n\n----------------------------------------\n\nTITLE: TCP Proxy Virtual Listener Metrics for BlackHoleCluster in Istio\nDESCRIPTION: This JSON example shows how 'istio_tcp_connections_closed_total' metrics are labeled when BlackHoleCluster is hit from a TCP proxy virtual listener. The destination_service_name is set to BlackHoleCluster and destination_ip shows the external service IP address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"metric\": {\n    \"__name__\": \"istio_tcp_connections_closed_total\",\n    \"connection_security_policy\": \"unknown\",\n    \"destination_app\": \"unknown\",\n    \"destination_ip\": \"52.22.188.80\",\n    \"destination_principal\": \"unknown\",\n    \"destination_service\": \"unknown\",\n    \"destination_service_name\": \"BlackHoleCluster\",\n    \"destination_service_namespace\": \"unknown\",\n    \"destination_version\": \"unknown\",\n    \"destination_workload\": \"unknown\",\n    \"destination_workload_namespace\": \"unknown\",\n    \"instance\": \"100.96.2.183:42422\",\n    \"job\": \"istio-mesh\",\n    \"reporter\": \"source\",\n    \"response_flags\": \"-\",\n    \"source_app\": \"sleep\",\n    \"source_principal\": \"unknown\",\n    \"source_version\": \"unknown\",\n    \"source_workload\": \"sleep\",\n    \"source_workload_namespace\": \"default\"\n  },\n  \"value\": [\n    1567034481.03,\n    \"1\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS NLB Service with Proxy Protocol\nDESCRIPTION: Kubernetes service configuration for Istio ingress gateway with AWS NLB annotations to enable proxy protocol and X-Forwarded-For headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: \"*\"\n    service.beta.kubernetes.io/aws-load-balancer-type: \"nlb\"\n    proxy.istio.io/config: '{\"gatewayTopology\" : { \"numTrustedProxies\": 2 } }'\n  labels:\n    app: istio-ingressgateway\n    istio: ingressgateway\n    release: istio\n  name: istio-ingressgateway\n```\n\n----------------------------------------\n\nTITLE: Implementing Recording Rules for Istio Metrics in Prometheus\nDESCRIPTION: This YAML configuration defines recording rules for Istio metrics in Prometheus. It includes rules for calculating request rates and latency percentiles, which can be used to optimize metrics collection and query performance.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/observability/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ngroups:\n- name: \"istio.recording-rules\"\n  interval: 5s\n  rules:\n  - record: \"istio:istio_requests:by_destination_service:rate1m\"\n    expr: |\n      sum(irate(istio_requests_total{reporter=\"destination\"}[1m]))\n      by (\n        destination_canonical_service,\n        destination_workload_namespace\n      )\n  - record: \"istio:istio_request_duration_milliseconds_bucket:p95:rate1m\"\n    expr: |\n      histogram_quantile(0.95,\n        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"source\"}[1m]))\n        by (\n          destination_canonical_service,\n          destination_workload_namespace,\n          source_canonical_service,\n          source_workload_namespace,\n          le\n        )\n      )\n```\n\n----------------------------------------\n\nTITLE: Creating Test Namespace for Canary Upgrade Testing\nDESCRIPTION: Creates a new Kubernetes namespace for testing the Istio canary upgrade process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns test-ns\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter with Deprecated XDS v2 API\nDESCRIPTION: Example of an EnvoyFilter configuration using the deprecated XDS v2 API that needs to be updated before upgrading to Istio 1.9.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: add-header\nspec:\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n      listener:\n        filterChain:\n          filter:\n            name: envoy.http_connection_manager\n            subFilter:\n              name: envoy.router\n    patch:\n      operation: INSERT_BEFORE\n      value:\n        name: envoy.lua\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.config.filter.http.lua.v2.Lua\n          inlineCode: |\n            function envoy_on_request(handle)\n              handle:headers():add(\"foo\", \"bar\")\n            end\n```\n\n----------------------------------------\n\nTITLE: Conflicting Virtual Services Configuration in Istio\nDESCRIPTION: Example showing two virtual services in different namespaces (team-1 and team-2) that conflict due to using the same host productpage.default.svc.cluster.local while being attached to the default mesh gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0109/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: productpage\n  namespace: team-1\nspec:\n  hosts:\n  - productpage.default.svc.cluster.local\n  http:\n  - route:\n    - destination:\n        host: productpage\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: custom\n  namespace: team-2\nspec:\n  hosts:\n  - productpage.default.svc.cluster.local\n  http:\n  - route:\n    - destination:\n        host: productpage.team-2.svc.cluster.local\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API for Wildcard Host\nDESCRIPTION: Kubernetes manifest to update the Gateway and HTTPRoute configurations without host names for browser access using Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: http\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: Same\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: httpbin\nspec:\n  parentRefs:\n  - name: httpbin-gateway\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /headers\n    backendRefs:\n    - name: httpbin\n      port: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Checking Namespace Label for Ambient Mode\nDESCRIPTION: Command to verify if a namespace is properly labeled for ambient mode operation by checking the istio.io/dataplane-mode label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get ns -L istio.io/dataplane-mode\n```\n\n----------------------------------------\n\nTITLE: Creating Istio and IstioRevisionTag Resources\nDESCRIPTION: This snippet creates an Istio resource with version v1.24.2 and an IstioRevisionTag resource, both using the Sail Operator's Custom Resource Definitions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns istio-system\n$ cat <<EOF | kubectl apply -f-\napiVersion: sailoperator.io/v1\nkind: Istio\nmetadata:\n  name: default\nspec:\n  namespace: istio-system\n  updateStrategy:\n    type: RevisionBased\n    inactiveRevisionDeletionGracePeriodSeconds: 30\n  version: v1.24.2\n---\napiVersion: sailoperator.io/v1\nkind: IstioRevisionTag\nmetadata:\n  name: default\nspec:\n  targetRef:\n    kind: Istio\n    name: default\nEOF\n```\n\n----------------------------------------\n\nTITLE: Labeling Application for Policy Enforcement\nDESCRIPTION: Labels the httpbin deployment to enable the OPA authorization policy. This step ensures that the policy is applied to the httpbin application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl patch deploy httpbin -n my-app --type=merge -p='{\n  \"spec\": {\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"ext-authz\": \"enabled\"\n        }\n      }\n    }\n  }\n}'\n```\n\n----------------------------------------\n\nTITLE: Upgrading Ztunnel In-Place with Helm\nDESCRIPTION: Command to perform an in-place upgrade of the ztunnel DaemonSet using Helm. This will briefly disrupt all ambient mesh traffic on the node.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade ztunnel istio/ztunnel -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Gateway Control Plane Association\nDESCRIPTION: Verifies which control plane revision the Istio ingress gateway is using by checking the istiod instance it's connected to.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status | grep \"$(kubectl -n istio-system get pod -l app=istio-ingressgateway -o jsonpath='{.items..metadata.name}')\" | awk -F '[[:space:]][[:space:]]+' '{print $8}'\nistiod-canary-6956db645c-vwhsk\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Control Plane with Original Installation Options\nDESCRIPTION: This command uninstalls an Istio control plane that doesn't have a revision label, using its original installation manifest file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall -f manifests/profiles/default.yaml -y\n```\n\n----------------------------------------\n\nTITLE: Configure Prometheus Gateway and Routing\nDESCRIPTION: Kubernetes configurations to expose Prometheus securely via HTTPS using Gateway, VirtualService, and DestinationRule resources\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: prometheus-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https-prom\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: telemetry-gw-cert\n    hosts:\n    - \"prometheus.${INGRESS_DOMAIN}\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: prometheus-vs\n  namespace: istio-system\nspec:\n  hosts:\n  - \"prometheus.${INGRESS_DOMAIN}\"\n  gateways:\n  - prometheus-gateway\n  http:\n  - route:\n    - destination:\n        host: prometheus\n        port:\n          number: 9090\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: prometheus\n  namespace: istio-system\nspec:\n  host: prometheus\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Verifying Traffic Distribution in Istio\nDESCRIPTION: This snippet shows how to confirm the traffic distribution between different versions of the reviews service by sending multiple requests and analyzing the responses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -it deploy/sleep -- sh -c 'for i in $(seq 1 100); do curl -s http://istio-ingressgateway.istio-system/productpage | grep reviews-v.-; done'\n```\n\n----------------------------------------\n\nTITLE: Viewing ztunnel logs for mTLS validation in Istio\nDESCRIPTION: This snippet shows an example of ztunnel logs that can be used to validate mTLS, including source and destination identity information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/verify-mtls-enabled/index.md#2025-04-08_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\n2024-08-21T15:32:05.754291Z info access connection complete src.addr=10.42.0.9:33772 src.workload=\"curl-7656cf8794-6lsm4\" src.namespace=\"default\"\nsrc.identity=\"spiffe://cluster.local/ns/default/sa/curl\" dst.addr=10.42.0.5:15008 dst.hbone_addr=10.42.0.5:9080 dst.service=\"details.default.svc.cluster.local\"\ndst.workload=\"details-v1-857849f66-ft8wx\" dst.namespace=\"default\" dst.identity=\"spiffe://cluster.local/ns/default/sa/bookinfo-details\"\ndirection=\"outbound\" bytes_sent=84 bytes_recv=358 duration=\"15ms\"\n```\n\n----------------------------------------\n\nTITLE: Defining External Authorization Provider in Istio Mesh Config\nDESCRIPTION: Configuration in the Istio mesh config to define the external authorization service provider, specifying its type and address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextensionProviders:\n- name: \"my-ext-authz-service\"\n  envoyExtAuthzGrpc:\n    service: \"ext-authz.istio-system.svc.cluster.local\"\n    port: 9000\n```\n\n----------------------------------------\n\nTITLE: Defining External Authorization Provider in Istio Mesh Config\nDESCRIPTION: Configuration in the Istio mesh config to define the external authorization service provider, specifying its type and address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextensionProviders:\n- name: \"my-ext-authz-service\"\n  envoyExtAuthzGrpc:\n    service: \"ext-authz.istio-system.svc.cluster.local\"\n    port: 9000\n```\n\n----------------------------------------\n\nTITLE: Creating Namespaces for Sample Applications\nDESCRIPTION: Creates 'bar' and 'foo' namespaces for deploying sample applications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns bar\n$ kubectl create ns foo\n```\n\n----------------------------------------\n\nTITLE: Unsetting environment variables\nDESCRIPTION: Command to unset the SOURCE_POD and SOURCE_POD_WITHOUT_ISTIO environment variables that were used during testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ unset SOURCE_POD SOURCE_POD_WITHOUT_ISTIO\n```\n\n----------------------------------------\n\nTITLE: Setting Up Gateway URL for Kubernetes Gateway API\nDESCRIPTION: These commands wait for the Gateway to be ready, extract its IP address, and set up the GATEWAY_URL environment variable for testing. It waits for the 'programmed' condition before extracting the address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n sample --context=\"${CTX_REMOTE_CLUSTER}\" wait --for=condition=programmed gtw helloworld-gateway\nexport INGRESS_HOST=$(kubectl -n sample --context=\"${CTX_REMOTE_CLUSTER}\" get gtw helloworld-gateway -o jsonpath='{.status.addresses[0].value}')\nexport GATEWAY_URL=$INGRESS_HOST:80\n```\n\n----------------------------------------\n\nTITLE: Testing Mutual TLS Connection with curl in Bash\nDESCRIPTION: This command tests the mutual TLS connection to the Istio ingress gateway using curl, providing the client certificate and key.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ curl https://$INGRESS_GATEWAY_DOMAIN/status/418 --cert alb_certs/client.crt  --key alb_certs/client.key\n\n-=[ teapot ]=-\n\n   _...._\n .'  _ _ `.\n| .\"` ^ `\". _,\n\\_;`\"---\"`|//\n  |       ;/\n  \\_     _/\n    `\"\"\"`\n```\n\n----------------------------------------\n\nTITLE: Setting SOURCE_POD Environment Variable\nDESCRIPTION: Sets the SOURCE_POD environment variable to the name of the source pod for testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Revision Tags\nDESCRIPTION: These commands clean up revision tags created during the canary upgrade process. Revision tags are used to direct traffic to specific control plane versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl tag remove prod-stable\n$ istioctl tag remove prod-canary\n```\n\n----------------------------------------\n\nTITLE: Removing Generated Files in Bash\nDESCRIPTION: This snippet removes the sample.yaml file and any helloworld-region*.zone*.yaml files that were generated during the locality load balancing tasks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/cleanup/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ rm -f sample.yaml helloworld-region*.zone*.yaml\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Gateway Configuration and Certificates\nDESCRIPTION: Deletes the ALB ingress, virtual service, gateway configuration, and certificate secrets. Also removes local certificate files and unsets environment variables.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ingress alb-ingress -n istio-system\n$ kubectl delete virtualservice default-ingress -n httptools\n$ kubectl delete gateway default-ingress-gateway -n httptools\n$ kubectl delete secrets alb-certs -n istio-system\n$ rm -rf alb_certs trusted.crt\n$ unset CLUSTER_NAME ALB_INGRESS_DOMAIN ALB_SECRET INGRESS_GATEWAY_DOMAIN INGRESS_GATEWAY_SECRET\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio 1.5.x Release Page in YAML\nDESCRIPTION: YAML front matter for configuring a webpage that lists Istio 1.5.x release announcements. It sets the page title, description, weight for ordering, and specifies to list items by publish date using a release-grid layout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.5.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.5.x Releases\ndescription: Announcements for the 1.5 release and its associated patch releases.\nweight: 24\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Operator Rules CRD for Istio Metrics Aggregation\nDESCRIPTION: This Custom Resource Definition (CRD) for Prometheus Operator defines rules for aggregating Istio metrics at the workload level, similar to the plain Prometheus rules but in a Kubernetes-native format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/observability/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: monitoring.coreos.com/v1\nkind: PrometheusRule\nmetadata:\n  name: istio-metrics-aggregation\n  labels:\n    app.kubernetes.io/name: istio-prometheus\nspec:\n  groups:\n  - name: \"istio.metricsAggregation-rules\"\n    interval: 5s\n    rules:\n    - record: \"workload:istio_requests_total\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_requests_total)\"\n\n    - record: \"workload:istio_request_duration_milliseconds_count\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_count)\"\n    - record: \"workload:istio_request_duration_milliseconds_sum\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_sum)\"\n    - record: \"workload:istio_request_duration_milliseconds_bucket\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_duration_milliseconds_bucket)\"\n\n    - record: \"workload:istio_request_bytes_count\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_count)\"\n    - record: \"workload:istio_request_bytes_sum\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_sum)\"\n    - record: \"workload:istio_request_bytes_bucket\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_request_bytes_bucket)\"\n\n    - record: \"workload:istio_response_bytes_count\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_count)\"\n    - record: \"workload:istio_response_bytes_sum\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_sum)\"\n    - record: \"workload:istio_response_bytes_bucket\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_response_bytes_bucket)\"\n\n    - record: \"workload:istio_tcp_sent_bytes_total\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_sent_bytes_total)\"\n    - record: \"workload:istio_tcp_received_bytes_total\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_received_bytes_total)\"\n    - record: \"workload:istio_tcp_connections_opened_total\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_connections_opened_total)\"\n    - record: \"workload:istio_tcp_connections_closed_total\"\n      expr: \"sum without(instance, kubernetes_namespace, kubernetes_pod_name) (istio_tcp_connections_closed_total)\"\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Installation Configuration\nDESCRIPTION: This YAML configuration sets up Istio with DLB enabled for the ingress gateway, allocating 4 CPUs and 1 DLB device.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: default\n  components:\n    ingressGateways:\n    - enabled: true\n      name: istio-ingressgateway\n      k8s:\n        overlays:\n          - kind: Deployment\n            name: istio-ingressgateway\n        podAnnotations:\n          proxy.istio.io/config: |\n            concurrency: 4\n        resources:\n          requests:\n            cpu: 4000m\n            memory: 4096Mi\n            dlb.intel.com/pf: '1'\n          limits:\n            cpu: 4000m\n            memory: 4096Mi\n            dlb.intel.com/pf: '1'\n        hpaSpec:\n          maxReplicas: 1\n          minReplicas: 1\n  values:\n    telemetry:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Deploying Reviews v2 with Modified Label in Kubernetes\nDESCRIPTION: This command deploys version 2 of the reviews microservice, replacing the 'app=reviews' label with 'app=reviews_test' to isolate it from production traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/platform/kube/bookinfo.yaml | sed 's/app: reviews/app: reviews_test/' | kubectl apply -l app=reviews_test,version=v2 -f -\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespaces for Istio Injection\nDESCRIPTION: Commands to remove the standard injection label and apply a revision-based label to a namespace. This associates the namespace with a specific Istio control plane revision.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label ns istioinaction istio-injection-\n$ kubectl label ns istioinaction istio.io/rev=prod-stable\n```\n\n----------------------------------------\n\nTITLE: Creating Istio VirtualService for httpbin Using kubectl\nDESCRIPTION: This snippet shows how to apply an Istio VirtualService configuration using kubectl. The VirtualService routes requests with URI paths '/headers' and '/status' to the httpbin service on port 8000 through the httpbin-gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/command_example.txt#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - httpbin-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /headers\n    - uri:\n        prefix: /status\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\nEOF\n```\n\n----------------------------------------\n\nTITLE: Sending HTTP Request to Bookinfo Application\nDESCRIPTION: Command to send a HTTP request to the Bookinfo productpage service to generate traffic that will be monitored by Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ curl http://\"$GATEWAY_URL/productpage\"\n```\n\n----------------------------------------\n\nTITLE: Upgrading Istio Ambient Control Plane and Data Plane\nDESCRIPTION: This command upgrades all Istio data plane and control plane components required for ambient mode using the Helm wrapper chart. It upgrades the 'istio-ambient' release in the 'istio-system' namespace and waits for completion.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/all-in-one/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-ambient istio/ambient -n istio-system --wait\n```\n\n----------------------------------------\n\nTITLE: Verifying Prometheus Service in Kubernetes\nDESCRIPTION: This command checks if the Prometheus service is running in the Istio system namespace of a Kubernetes cluster. It displays the service details including name, type, cluster IP, and port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get svc prometheus\n```\n\n----------------------------------------\n\nTITLE: Creating Root Certificate and Key with OpenSSL for Istio External Services\nDESCRIPTION: Creates a self-signed root certificate and private key that will be used to sign service certificates. The certificate uses RSA 2048 encryption, is valid for 365 days, and represents 'example Inc.' organization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example.com.key -out example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Editing Galley Deployment Configuration in Kubernetes\nDESCRIPTION: Updates the Galley deployment to disable validation by adding the '--enable-validation=false' option to the command section.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/announcing-1.6/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl edit deployment -n istio-system istio-galley\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions/v1beta1\nkind: Deployment\n...\nspec:\n...\n  template:\n    ...\n    spec:\n      ...\n      containers:\n      - command:\n        ...\n        - --log_output_level=default:info\n        - --enable-validation=false\n```\n\n----------------------------------------\n\nTITLE: Istio Gateway Configuration with RBAC Debug\nDESCRIPTION: Commands to apply gateway configuration and enable RBAC debugging in Envoy for the ingress gateway using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin-gateway.yaml@ -n foo\n$ kubectl get pods -n istio-system -o name -l istio=ingressgateway | sed 's|pod/||' | while read -r pod; do istioctl proxy-config log \"$pod\" -n istio-system --level rbac:debug; done\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Egress Gateway\nDESCRIPTION: IstioOperator manifest for deploying a custom egress gateway with a modified readiness probe to check the upstream service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: empty\n  tag: 1.8.0\n  namespace: httpbin\n  components:\n    egressGateways:\n    - name: httpbin-egress\n      enabled: true\n      label:\n        app: istio-egressgateway\n        istio: egressgateway\n        custom-egress: httpbin-egress\n      k8s:\n        overlays:\n        - kind: Deployment\n          name: httpbin-egress\n          patches:\n          - path: spec.template.spec.containers[0].readinessProbe\n            value:\n              failureThreshold: 30\n              exec:\n                command:\n                  - /bin/sh\n                  - -c\n                  - curl http://localhost:15021/healthz/ready && curl https://httpbin.org/status/200\n              initialDelaySeconds: 1\n              periodSeconds: 2\n              successThreshold: 1\n              timeoutSeconds: 1\n  values:\n    gateways:\n      istio-egressgateway:\n        runAsRoot: true\n```\n\n----------------------------------------\n\nTITLE: Importing gRPC xDS Support in Go\nDESCRIPTION: This code snippet imports the gRPC xDS package as a side effect to register xDS resolvers and balancers within gRPC. It should be added in the main package or where grpc.Dial is called.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport _ \"google.golang.org/grpc/xds\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster-Local Traffic with VirtualService\nDESCRIPTION: YAML configuration demonstrating how to create cluster-local traffic rules using VirtualService and subset routing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/multicluster/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: mysvc-cluster-local-vs\nspec:\n  hosts:\n  - mysvc.myns.svc.cluster.local\n  http:\n  - name: \"cluster-1-local\"\n    match:\n    - sourceLabels:\n        topology.istio.io/cluster: \"cluster-1\"\n    route:\n    - destination:\n        host: mysvc.myns.svc.cluster.local\n        subset: cluster-1\n  - name: \"cluster-2-local\"\n    match:\n    - sourceLabels:\n        topology.istio.io/cluster: \"cluster-2\"\n    route:\n    - destination:\n        host: mysvc.myns.svc.cluster.local\n        subset: cluster-2\n```\n\n----------------------------------------\n\nTITLE: Deploying Kubernetes Gateway API for Helloworld Application\nDESCRIPTION: This command applies the Kubernetes Gateway API configuration to expose the helloworld application. It uses the pre-defined gateway configuration from the Istio samples.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/helloworld/gateway-api/helloworld-gateway.yaml@ -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Specifying Waypoint Traffic Handling in YAML\nDESCRIPTION: Use the 'istio.io/waypoint-for' label on Gateway resources to specify the type of endpoints for which the waypoint will handle traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  labels:\n    istio.io/waypoint-for: \"service\"\n```\n\n----------------------------------------\n\nTITLE: Authorization Policies Reference in Workload Configuration\nDESCRIPTION: When authorization policies are applied to a workload, the workload configuration is updated to reference these policies, showing how Ztunnel maintains the mapping between workloads and their policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n{\n  \"workloads\": {\n    \"10.244.2.8\": {\n    \"workloadIp\": \"10.244.2.8\",\n    ...\n    \"authorizationPolicies\": [\n        \"default/hw-viewer\"\n    ],\n  }\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Exporting Root Certificates for Cluster Issuers\nDESCRIPTION: Retrieves and exports the root certificates for each cluster issuer (istio-system, foo, and bar) as environment variables.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export ISTIOCA=$(kubectl get clusterissuers istio-system -o jsonpath='{.spec.ca.secretName}' | xargs kubectl get secret -n cert-manager -o jsonpath='{.data.ca\\.crt}' | base64 -d | sed 's/^/        /')\n$ export FOOCA=$(kubectl get clusterissuers foo -o jsonpath='{.spec.ca.secretName}' | xargs kubectl get secret -n cert-manager -o jsonpath='{.data.ca\\.crt}' | base64 -d | sed 's/^/        /')\n$ export BARCA=$(kubectl get clusterissuers bar -o jsonpath='{.spec.ca.secretName}' | xargs kubectl get secret -n cert-manager -o jsonpath='{.data.ca\\.crt}' | base64 -d | sed 's/^/        /')\n```\n\n----------------------------------------\n\nTITLE: Removing Certificate Files from Istio mTLS Demo\nDESCRIPTION: This command deletes all the certificate and key files that were created for the mutual TLS origination demonstration. It removes both the server and client certificates and keys from the local filesystem.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ rm example.com.crt example.com.key my-nginx.mesh-external.svc.cluster.local.crt my-nginx.mesh-external.svc.cluster.local.key my-nginx.mesh-external.svc.cluster.local.csr client.example.com.crt client.example.com.csr client.example.com.key\n```\n\n----------------------------------------\n\nTITLE: Deploying istioctl Proxy Service\nDESCRIPTION: Demonstrates how to deploy the istioctl proxy service in the external cluster's control plane namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\" \\\n    -f https://raw.githubusercontent.com/istio-ecosystem/istioctl-proxy-sample/main/istioctl-proxy.yaml\nservice/istioctl-proxy created\nserviceaccount/istioctl-proxy created\nsecret/jwt-cert-key-secret created\ndeployment.apps/istioctl-proxy created\nrole.rbac.authorization.k8s.io/istioctl-proxy-role created\nrolebinding.rbac.authorization.k8s.io/istioctl-proxy-role created\n```\n\n----------------------------------------\n\nTITLE: Setting KUBECONFIG Environment Variable for Istio Tutorial in Bash\nDESCRIPTION: Sets the KUBECONFIG environment variable to point to the Kubernetes configuration file received from instructors or created in the previous module. This configuration is necessary for kubectl to access the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-local-computer/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBECONFIG=<the file you received or created in the previous module>\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Outbound Traffic Policy\nDESCRIPTION: Installs Istio with access logging enabled and blocking-by-default outbound traffic policy using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=demo --set meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY\n```\n\n----------------------------------------\n\nTITLE: Accessing Kubernetes Services from the Virtual Machine\nDESCRIPTION: Example of accessing a Kubernetes service (productpage) from the virtual machine using DNS proxying. This demonstrates that the VM is fully integrated into the service mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ curl productpage.bookinfo:9080/productpage\n...\n<title>Simple Bookstore App</title>\n...\n```\n\n----------------------------------------\n\nTITLE: Embedding Markdown in Boilerplate Shortcode\nDESCRIPTION: Example showing how to include a boilerplate containing markdown content and another shortcode using the 'test-1' identifier.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< boilerplate \"test-1\" >}}\n```\n\n----------------------------------------\n\nTITLE: Testing Excluded Path with Same-Pod OPA Setup\nDESCRIPTION: Tests accessing the /ip endpoint which is excluded from authorization, expecting a 200 OK response regardless of token since this path bypasses OPA validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin-with-opa:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Istio 1.4.x Release Page\nDESCRIPTION: This YAML snippet defines metadata for a web page about Istio 1.4.x releases. It specifies the page title, description, weight for ordering, and indicates that items should be listed by publish date. The layout is set to 'release-grid'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.4.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.4.x Releases\ndescription: Announcements for the 1.4 release and its associated patch releases.\nweight: 25\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Updating Helm Repository for Istio\nDESCRIPTION: This command updates the Helm repository for Istio, ensuring that the latest chart versions are available for the upgrade process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/all-in-one/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo update istio\n```\n\n----------------------------------------\n\nTITLE: Applying EnvoyFilter for DLB in Istio\nDESCRIPTION: This YAML configuration applies an EnvoyFilter to enable Dynamic Load Balancing (DLB) for the Istio ingress gateway. It configures the connection balance settings using the DLB extension.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: dlb\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      istio: ingressgateway\n  configPatches:\n  - applyTo: LISTENER\n    match:\n      context: GATEWAY\n    patch:\n      operation: MERGE\n      value:\n        connection_balance_config:\n            extend_balance:\n              name: envoy.network.connection_balance.dlb\n              typed_config:\n                \"@type\": type.googleapis.com/envoy.extensions.network.connection_balance.dlb.v3alpha.Dlb\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for TLS Configuration\nDESCRIPTION: Bash commands for cleaning up the TLS origination configuration and related Kubernetes resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry googleapis\n$ kubectl delete virtualservice rewrite-port-for-googleapis\n$ kubectl delete destinationrule originate-tls-for-googleapis\n$ kubectl delete -f @samples/bookinfo/networking/virtual-service-details-v2.yaml@\n$ kubectl delete -f @samples/bookinfo/platform/kube/bookinfo-details-v2.yaml@\n```\n\n----------------------------------------\n\nTITLE: Checking IPTables Rules in Ambient Pod\nDESCRIPTION: This command uses kubectl debug to view the iptables rules set up inside an application pod in the ambient mesh, showing the Istio-specific chains added for traffic redirection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/architecture/traffic-redirection/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl debug $(kubectl get pod -l app=curl -n ambient-demo -o jsonpath='{.items[0].metadata.name}') -it --image gcr.io/istio-release/base --profile=netadmin -n ambient-demo -- iptables-save\n```\n\n----------------------------------------\n\nTITLE: Verifying Istioctl Installation and Version in Bash\nDESCRIPTION: Confirms successful installation of the Istio command-line tool (istioctl) by checking its version. This ensures the tool is properly installed and ready for use in the tutorial.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-local-computer/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl version\nclient version: 1.22.0\ncontrol plane version: 1.22.0\ndata plane version: 1.22.0 (4 proxies)\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Connection Tracking in Envoy Drain\nDESCRIPTION: Enables Envoy to track active connections during drain and quit when active connections become zero instead of waiting for the entire drain duration. This feature can be enabled by setting the EXIT_ON_ZERO_ACTIVE_CONNECTIONS environment variable to true.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nEXIT_ON_ZERO_ACTIVE_CONNECTIONS=true\n```\n\n----------------------------------------\n\nTITLE: Checking External Authorizer Logs in Istio\nDESCRIPTION: This bash command retrieves and displays the logs from the external authorizer pod, showing the authorization decisions made for the previous requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs \"$(kubectl get pod -l app=ext-authz -n foo -o jsonpath={.items..metadata.name})\" -n foo -c ext-authz\n```\n\n----------------------------------------\n\nTITLE: Configuring Proxy Stats Matcher for Rate Limit Metrics\nDESCRIPTION: YAML configuration to enable rate limiting statistics collection through proxy annotations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/policy-enforcement/rate-limit/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntemplate:\n  metadata:\n    annotations:\n      proxy.istio.io/config: |-\n        proxyStatsMatcher:\n          inclusionRegexps:\n          - \".*http_local_rate_limit.*\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Applications for Dual-Stack Verification\nDESCRIPTION: These Bash commands deploy the tcp-echo sample application in different namespaces to test Istio's dual-stack, IPv4-only, and IPv6-only routing capabilities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --namespace dual-stack -f @samples/tcp-echo/tcp-echo-dual-stack.yaml@\n$ kubectl apply --namespace ipv4 -f @samples/tcp-echo/tcp-echo-ipv4.yaml@\n$ kubectl apply --namespace ipv6 -f @samples/tcp-echo/tcp-echo-ipv6.yaml@\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Applications for Dual-Stack Verification\nDESCRIPTION: These Bash commands deploy the tcp-echo sample application in different namespaces to test Istio's dual-stack, IPv4-only, and IPv6-only routing capabilities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/dual-stack/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --namespace dual-stack -f @samples/tcp-echo/tcp-echo-dual-stack.yaml@\n$ kubectl apply --namespace ipv4 -f @samples/tcp-echo/tcp-echo-ipv4.yaml@\n$ kubectl apply --namespace ipv6 -f @samples/tcp-echo/tcp-echo-ipv6.yaml@\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Test Resources\nDESCRIPTION: Removes the test namespace and optionally Prometheus and Zipkin deployments after completing the dry-run policy testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace foo\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Stable Validation Policy\nDESCRIPTION: This command installs Istio with the stable validation policy enabled. The policy ensures that only v1 APIs and fields are used with Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/v1-apis/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base -n istio-system --set experimental.stableValidationPolicy=true\n```\n\n----------------------------------------\n\nTITLE: Ztunnel HTTP Connect Log Entry\nDESCRIPTION: Example of ztunnel log showing HTTP Connect request with source and destination pod information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n2023-02-15T20:40:48.628251Z  INFO inbound{id=4399fa68cf25b8ebccd472d320ba733f peer_ip=10.244.2.5 peer_id=spiffe://cluster.local/ns/default/sa/sleep}: ztunnel::proxy::inbound: got CONNECT request to 10.244.2.8:5000\n```\n\n----------------------------------------\n\nTITLE: Detecting SDS Configuration in Istio Deployment with Bash\nDESCRIPTION: This Bash command checks if SDS (Secret Discovery Service) is enabled in the Istio system by examining the Pilot pod configuration for the SDS_ENABLED environment variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-003/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod -l app=pilot -o yaml | grep SDS_ENABLED -A 1\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Testing Pod with Automatic Sidecar Injection\nDESCRIPTION: Command to deploy a curl testing pod with automatic sidecar injection enabled, which will be used as a source for test requests to external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Deploying HTTPRoute for Traffic Splitting in Istio Ambient Mode\nDESCRIPTION: This snippet applies an HTTPRoute configuration to split traffic between reviews-v1 (90%) and reviews-v2 (10%) services. It uses the Kubernetes Gateway API to define the routing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/manage-traffic/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - name: reviews-v1\n      port: 9080\n      weight: 90\n    - name: reviews-v2\n      port: 9080\n      weight: 10\nEOF\n```\n\n----------------------------------------\n\nTITLE: Verifying External Istio Deployment in Bash\nDESCRIPTION: Confirms that the external istiod has been successfully deployed by checking the pod status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get po -n external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: RBAC Filter Configuration in Envoy Proxy\nDESCRIPTION: This configuration snippet shows the RBAC filter applied to the httpbin proxy, which enforces the authorization policy to deny access to the '/headers' path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_7\n\nLANGUAGE: plain\nCODE:\n```\n{\n \"name\": \"envoy.filters.http.rbac\",\n \"typed_config\": {\n  \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC\",\n  \"rules\": {\n   \"action\": \"DENY\",\n   \"policies\": {\n    \"ns[foo]-policy[deny-path-headers]-rule[0]\": {\n     \"permissions\": [\n      {\n       \"and_rules\": {\n        \"rules\": [\n         {\n          \"or_rules\": {\n           \"rules\": [\n            {\n             \"url_path\": {\n              \"path\": {\n               \"exact\": \"/headers\"\n              }\n             }\n            }\n           ]\n          }\n         }\n        ]\n       }\n      }\n     ],\n     \"principals\": [\n      {\n       \"and_ids\": {\n        \"ids\": [\n         {\n          \"any\": true\n         }\n        ]\n       }\n      }\n     ]\n    }\n   }\n  },\n  \"shadow_rules_stat_prefix\": \"istio_dry_run_allow_\"\n }\n},\n```\n\n----------------------------------------\n\nTITLE: Labeling Application for Policy Enforcement\nDESCRIPTION: Patches the httpbin deployment to add the ext-authz label, which enables the Istio AuthorizationPolicy to apply to the sample application pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl patch deploy httpbin -n my-app --type=merge -p='{\n  \"spec\": {\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"ext-authz\": \"enabled\"\n        }\n      }\n    }\n  }\n}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Squid Proxy in Bash\nDESCRIPTION: Creates a configuration file for the Squid proxy, defining port settings and access rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/http-proxy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./proxy.conf\nhttp_port 3128\n\nacl SSL_ports port 443\nacl CONNECT method CONNECT\n\nhttp_access deny CONNECT !SSL_ports\nhttp_access allow localhost manager\nhttp_access deny manager\nhttp_access allow all\n\ncoredump_dir /var/spool/squid\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a Revision Tag in Istio\nDESCRIPTION: Command to create a new 'prod-stable' tag that points to revision '1-9-5' of the Istio control plane. This enables easier management of control plane revisions without changing namespace labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x revision tag set prod-stable --revision 1-9-5\n```\n\n----------------------------------------\n\nTITLE: Displaying Kubernetes Gateway API Version in Istio Documentation\nDESCRIPTION: This snippet is a placeholder for displaying the Kubernetes Gateway API version. It uses a custom shortcode or template syntax to insert the version number dynamically.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/boilerplates/args.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=gateway_api_version >}}\n{{< k8s_gateway_api_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Testing Access without JWT Token for Same-Pod OPA Setup\nDESCRIPTION: Tests accessing the /headers endpoint without a JWT token, expecting a 403 Forbidden response since OPA rejects requests without valid tokens.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin-with-opa:8000/headers -s -o /dev/null -w \"%{http_code}\\n\"\n403\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.1.15 release announcement including title, publication date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1.15/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.1.15\nlinktitle: 1.1.15\nsubtitle: Patch Release\ndescription: Istio 1.1.15 patch release.\npublishdate: 2019-09-16\nrelease: 1.1.15\naliases:\n    - /about/notes/1.1.15\n    - /blog/2019/announcing-1.1.15\n    - /news/2019/announcing-1.1.15\n    - /news/announcing-1.1.15\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress IP and Ports for LoadBalancer\nDESCRIPTION: Commands to set environment variables for ingress IP, HTTP port, HTTPS port, and TCP port when an external load balancer is available.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl -n \"$INGRESS_NS\" get service \"$INGRESS_NAME\" -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n$ export INGRESS_PORT=$(kubectl -n \"$INGRESS_NS\" get service \"$INGRESS_NAME\" -o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\n$ export SECURE_INGRESS_PORT=$(kubectl -n \"$INGRESS_NS\" get service \"$INGRESS_NAME\" -o jsonpath='{.spec.ports[?(@.name==\"https\")].port}')\n$ export TCP_INGRESS_PORT=$(kubectl -n \"$INGRESS_NS\" get service \"$INGRESS_NAME\" -o jsonpath='{.spec.ports[?(@.name==\"tcp\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Generating Tenant-Specific Istio Manifest (Bash)\nDESCRIPTION: This command generates a new Istio manifest file with a different namespace for a second tenant's control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat istio.yaml | sed s/istio-system/istio-system1/g > istio-system1.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Components\nDESCRIPTION: Command to install the Istio base chart containing CRDs and cluster roles required for Istio setup. This should be installed before any other Istio component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --create-namespace --wait\n```\n\n----------------------------------------\n\nTITLE: Querying All Requests in Namespace with Prometheus PromQL\nDESCRIPTION: This query retrieves all requests in the specified namespace using the istio_requests_total metric. It filters for the destination service namespace and reporter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/logs-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: promql\nCODE:\n```\nistio_requests_total{destination_service_namespace=\"tutorial\", reporter=\"destination\"}\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration for Release Notes\nDESCRIPTION: YAML frontmatter configuration for the Istio 1.10.1 release notes page, defining metadata like title, publish date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10.1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.10.1\nlinktitle: 1.10.1\nsubtitle: Patch Release\ndescription: Istio 1.10.1 patch release.\npublishdate: 2021-06-09\nrelease: 1.10.1\naliases:\n    - /news/announcing-1.10.1\n---\n```\n\n----------------------------------------\n\nTITLE: Verifying Access from Curl to Httpbin in Kubernetes\nDESCRIPTION: Executes a curl command from the curl pod to the httpbin service to verify access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.foo:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Installing and Configuring MariaDB on a Virtual Machine\nDESCRIPTION: Commands to install MariaDB server on a VM and configure it to accept connections from any IP address. This is needed to allow the ratings service in the Kubernetes cluster to connect to the database.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo apt-get update && sudo apt-get install -y mariadb-server\n$ sudo sed -i '/bind-address/c\\bind-address  = 0.0.0.0' /etc/mysql/mariadb.conf.d/50-server.cnf\n```\n\n----------------------------------------\n\nTITLE: Referencing Istio API and Client-Go Libraries in Go\nDESCRIPTION: The istio.io/api and istio.io/client-go libraries have switched from using gogo/protobuf to golang/protobuf for API types. This change affects users importing Istio as a Go library and may cause compilation issues that are typically simple to address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nThe `istio.io/api` and `istio.io/client-go` libraries have switched from using the [`gogo/protobuf`](https://github.com/gogo/protobuf)\nto using the [`golang/protobuf`](https://github.com/golang/protobuf) library for API types.\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Control Plane Removal\nDESCRIPTION: This command checks if the old control plane has been removed by listing Istio pods in the istio-system namespace, filtering for the istiod app.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system -l app=istiod\nNAME                             READY   STATUS    RESTARTS   AGE\nistiod-canary-55887f699c-t8bh8   1/1     Running   0          27m\n```\n\n----------------------------------------\n\nTITLE: Updating Istio Resource with New Version in Bash\nDESCRIPTION: This command patches the Istio resource in the istio-system namespace to upgrade to version 1.24.3 using kubectl's patch operation with merge strategy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl patch istio default -n istio-system --type='merge' -p '{\"spec\":{\"version\":\"v1.24.3\"}}'\n```\n\n----------------------------------------\n\nTITLE: Installing Kyverno Authz Server\nDESCRIPTION: Deploys the Kyverno Authz Server in the cluster with Istio injection enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns kyverno\n$ kubectl label namespace kyverno istio-injection=enabled\n$ helm install kyverno-authz-server --namespace kyverno --wait --version 0.1.0 --repo https://kyverno.github.io/kyverno-envoy-plugin kyverno-authz-server\n```\n\n----------------------------------------\n\nTITLE: Testing External to Internal mTLS Connectivity on Port 8443\nDESCRIPTION: Command to verify external to internal mesh connectivity using mTLS authentication on port 8443. Uses copied certificates to establish secure connection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${EXTERNAL_CLIENT}\" -c curl -- curl -IsS --cacert /tmp/ca.crt --key /tmp/client.test.svc.cluster.local.key --cert /tmp/client.test.svc.cluster.local.crt -HHost:httpbin.test.svc.cluster.local \"https://httpbin.test.svc.cluster.local:8443/status/200\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio.io\nDESCRIPTION: This robots.txt file provides instructions for web crawlers visiting the Istio.io website. It allows all user agents complete access with no restrictions and points to a sitemap location for improved indexing.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.10/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.10/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Cipher Suites in Istio\nDESCRIPTION: List of supported TLS cipher suites that Istio configures for TLSv1_2 as the minimum version for both client and server communications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nECDHE-ECDSA-AES256-GCM-SHA384\nECDHE-RSA-AES256-GCM-SHA384\nECDHE-ECDSA-AES128-GCM-SHA256\nECDHE-RSA-AES128-GCM-SHA256\nAES256-GCM-SHA384\nAES128-GCM-SHA256\n```\n\n----------------------------------------\n\nTITLE: Defining Sidecar Volume Mount Annotations\nDESCRIPTION: YAML annotations that must be added to the deployment to mount the TLS certificates for the istio-proxy sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsidecar.istio.io/userVolume: '{\"tls-secret\":{\"secret\":{\"secretName\":\"httpbin-mtls-termination\",\"optional\":true}},\"tls-ca-secret\":{\"secret\":{\"secretName\":\"httpbin-mtls-termination-cacert\"}}}'  \nsidecar.istio.io/userVolumeMount: '{\"tls-secret\":{\"mountPath\":\"/etc/istio/tls-certs/\",\"readOnly\":true},\"tls-ca-secret\":{\"mountPath\":\"/etc/istio/tls-ca-certs/\",\"readOnly\":true}}'\n```\n\n----------------------------------------\n\nTITLE: Deploying Fortio Client with Istio Sidecar Injection\nDESCRIPTION: These bash commands demonstrate how to deploy the Fortio client with Istio sidecar injection, either automatically or manually.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/sample-client/fortio-deploy.yaml@\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/sample-client/fortio-deploy.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Creating Destination Rule for gRPC Service Subsets\nDESCRIPTION: This YAML configuration creates a DestinationRule in Kubernetes to define subsets for different versions of the gRPC echo service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: echo-versions\n  namespace: echo-grpc\nspec:\n  host: echo.echo-grpc.svc.cluster.local\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Cipher Suites in Istio\nDESCRIPTION: List of supported TLS cipher suites that Istio configures for TLSv1_2 as the minimum version for both client and server communications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nECDHE-ECDSA-AES256-GCM-SHA384\nECDHE-RSA-AES256-GCM-SHA384\nECDHE-ECDSA-AES128-GCM-SHA256\nECDHE-RSA-AES128-GCM-SHA256\nAES256-GCM-SHA384\nAES128-GCM-SHA256\n```\n\n----------------------------------------\n\nTITLE: Creating Kyverno AuthorizationPolicy with CEL Expressions\nDESCRIPTION: Defines a Kyverno AuthorizationPolicy that uses CEL language to analyze incoming requests and make authorization decisions based on request headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: envoy.kyverno.io/v1alpha1\nkind: AuthorizationPolicy\nmetadata:\n  name: demo-policy.example.com\nspec:\n  failurePolicy: Fail\n  variables:\n  - name: force_authorized\n    expression: object.attributes.request.http.?headers[\"x-force-authorized\"].orValue(\"\")\n  - name: allowed\n    expression: variables.force_authorized in [\"enabled\", \"true\"]\n  authorizations:\n  - expression: >\n      variables.allowed\n        ? envoy.Allowed().Response()\n        : envoy.Denied(403).Response()\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing Dry-Run Authorization Policy in Istio\nDESCRIPTION: Sends 20 requests from curl to httpbin to test the dry-run policy, including a tracing header.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ for i in {1..20}; do kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.foo:8000/headers -H \"X-B3-Sampled: 1\" -s -o /dev/null -w \"%{http_code}\\n\"; done\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio Docs\nDESCRIPTION: Basic robots.txt configuration that allows all web crawlers unrestricted access and specifies the sitemap location at /v1.7/sitemap.xml.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.7/zh/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.7/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway Routing for Wildcard Egress Traffic in Istio\nDESCRIPTION: This YAML configuration sets up the gateway routing rules, including a Gateway, VirtualService, DestinationRule, ServiceEntry, and Telemetry resource. It defines how traffic should be routed through the egress gateway and sets up SNI-based forwarding.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/egress-sni/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: egressgateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: egressgateway\n  servers:\n  - port:\n      number: 8443\n      name: tls-egress\n      protocol: TLS\n    hosts:\n      - \"*\"\n    tls:\n      mode: ISTIO_MUTUAL\n\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-wildcard-through-egress-gateway\n  namespace: istio-system\nspec:\n  hosts:\n    - \"*.wikipedia.org\"\n  gateways:\n  - mesh\n  - egressgateway\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: 443\n      sniHosts:\n        - \"*.wikipedia.org\"\n    route:\n    - destination:\n        host: egressgateway.istio-egress.svc.cluster.local\n        subset: wildcard\n  tcp:\n  - match:\n    - gateways:\n      - egressgateway\n      port: 8443\n    route:\n    - destination:\n        host: \"dummy.local\"\n      weight: 100\n\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: egressgateway\n  namespace: istio-system\nspec:\n  host: egressgateway.istio-egress.svc.cluster.local\n  subsets:\n  - name: wildcard\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n\n---\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: wildcard\n  namespace: istio-system\nspec:\n  hosts:\n    - \"*.wikipedia.org\"\n  ports:\n  - number: 443\n    name: tls\n    protocol: TLS\n\n---\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  accessLogging:\n    - providers:\n      - name: envoy\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Egress Gateway YAML Configuration\nDESCRIPTION: This command uses Helm to generate a YAML configuration for the Istio egress gateway with SNI proxy. It includes various Kubernetes resources like Deployment, Service, and RBAC configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | helm template install/kubernetes/helm/istio/ --name istio-egressgateway-with-sni-proxy --namespace istio-system -x charts/gateways/templates/deployment.yaml -x charts/gateways/templates/service.yaml -x charts/gateways/templates/serviceaccount.yaml -x charts/gateways/templates/autoscale.yaml -x charts/gateways/templates/role.yaml -x charts/gateways/templates/rolebindings.yaml --set global.mtls.enabled=true --set global.istioNamespace=istio-system -f - > ./istio-egressgateway-with-sni-proxy.yaml\ngateways:\n  enabled: true\n  istio-ingressgateway:\n    enabled: false\n  istio-egressgateway:\n    enabled: false\n  istio-egressgateway-with-sni-proxy:\n    enabled: true\n    labels:\n      app: istio-egressgateway-with-sni-proxy\n      istio: egressgateway-with-sni-proxy\n    replicaCount: 1\n    autoscaleMin: 1\n    autoscaleMax: 5\n    cpu:\n      targetAverageUtilization: 80\n    serviceAnnotations: {}\n    type: ClusterIP\n    ports:\n      - port: 443\n        name: https\n    secretVolumes:\n      - name: egressgateway-certs\n        secretName: istio-egressgateway-certs\n        mountPath: /etc/istio/egressgateway-certs\n      - name: egressgateway-ca-certs\n        secretName: istio-egressgateway-ca-certs\n        mountPath: /etc/istio/egressgateway-ca-certs\n    configVolumes:\n      - name: sni-proxy-config\n        configMapName: egress-sni-proxy-configmap\n    additionalContainers:\n    - name: sni-proxy\n      image: nginx\n      volumeMounts:\n      - name: sni-proxy-config\n        mountPath: /etc/nginx\n        readOnly: true\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl to Both Clusters\nDESCRIPTION: Deploy the curl application to both clusters and verify the pod status in each cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/verify/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --context=\"${CTX_CLUSTER1}\" \\\n    -f @samples/curl/curl.yaml@ -n sample\n$ kubectl apply --context=\"${CTX_CLUSTER2}\" \\\n    -f @samples/curl/curl.yaml@ -n sample\n$ kubectl get pod --context=\"${CTX_CLUSTER1}\" -n sample -l app=curl\n$ kubectl get pod --context=\"${CTX_CLUSTER2}\" -n sample -l app=curl\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Istio Website\nDESCRIPTION: Standard robots.txt configuration that allows all user agents to crawl the entire Istio website. It also specifies the location of the XML sitemap at /v1.9/sitemap.xml for search engine indexing.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.9/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.9/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Istio Security Documentation Front Matter\nDESCRIPTION: YAML front matter configuration for the Istio security documentation page, including metadata like title, description, keywords, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Security\ndescription: Describes Istio's authorization and authentication functionality.\nweight: 30\nkeywords: [security,policy,policies,authentication,authorization,rbac,access-control]\naliases:\n    - /docs/concepts/network-and-auth/auth.html\n    - /docs/concepts/security/authn-policy/\n    - /docs/concepts/security/mutual-tls/\n    - /docs/concepts/security/rbac/\n    - /docs/concepts/security/mutual-tls.html\n    - /docs/concepts/policies/\nowner: istio/wg-security-maintainers\ntest: n/a\n```\n\n----------------------------------------\n\nTITLE: Listing Certificate Files in Prometheus Pod\nDESCRIPTION: Command to list the provisioned key and certificate files in the /etc/istio-certs/ directory of a Prometheus pod within the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxy-cert/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it `kubectl get pod -l app=prometheus -n istio-system -o jsonpath='{.items[0].metadata.name}'` -c prometheus -n istio-system -- ls -la /etc/istio-certs/\n```\n\n----------------------------------------\n\nTITLE: Gateway with Infrastructure Customization\nDESCRIPTION: YAML configuration showing how to customize the generated infrastructure resources (Service, Deployment) by using the infrastructure field in a Gateway resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  infrastructure:\n    annotations:\n      some-key: some-value\n    labels:\n      key: value\n    parametersRef:\n      group: \"\"\n      kind: ConfigMap\n      name: gw-options\n  gatewayClassName: istio\n```\n\n----------------------------------------\n\nTITLE: Configuring Ambient Mesh Announcement Banner in YAML Front Matter\nDESCRIPTION: Front matter configuration for an announcement banner about ambient mesh. The configuration defines the announcement title, display period from September 8 to September 22, 2022, and limits impressions to 12 per user.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/announcing-ambient-mesh.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing ambient mesh\nperiod_start: 2022-09-08\nperiod_end: 2022-09-22\nmax_impressions: 12\n---\n```\n\n----------------------------------------\n\nTITLE: Checking MutatingWebhookConfiguration for Tags\nDESCRIPTION: Command to verify that a MutatingWebhookConfiguration has been created for a revision tag. Revision tags are implemented as webhook configurations in Kubernetes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get MutatingWebhookConfiguration\n\nNAME                             WEBHOOKS   AGE\nistio-revision-tag-prod-stable   2          75s\nistio-sidecar-injector           1          5m32s\n```\n\n----------------------------------------\n\nTITLE: Updating HTTPRoute to Expose Additional Path\nDESCRIPTION: Command to update the HTTPRoute to expose an additional path (/headers) and add a header to the request.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: http\n  namespace: default\nspec:\n  parentRefs:\n  - name: gateway\n    namespace: istio-ingress\n  hostnames: [\"httpbin.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: PathPrefix\n        value: /get\n    - path:\n        type: PathPrefix\n        value: /headers\n    filters:\n    - type: RequestHeaderModifier\n      requestHeaderModifier:\n        add:\n        - name: my-added-header\n          value: added-value\n    backendRefs:\n    - name: httpbin\n      port: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Restarting Deployments to Trigger Re-injection\nDESCRIPTION: Restarts all deployments in a namespace to trigger sidecar re-injection with the new Istio revision settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl rollout restart deployment -n test-ns\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio API Resources\nDESCRIPTION: Commands to delete Gateway and VirtualService configurations and shut down the httpbin service when using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete gateway httpbin-gateway\n$ kubectl delete virtualservice httpbin\n$ kubectl delete --ignore-not-found=true -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Article Metadata\nDESCRIPTION: YAML frontmatter block defining metadata for the article including title, subtitle, description, publish date, attribution and keywords.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/istiod/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: \"Introducing istiod: simplifying the control plane\"\nsubtitle: Consolidating Istio components into 'istiod' simplifies mesh operability, while retaining Istio's powerful functionality\ndescription: Istiod consolidates the Istio control plane components into a single binary.\npublishdate: 2020-03-19\nattribution: \"Craig Box (Google)\"\nkeywords: [istiod,control plane,operator]\n---\n```\n\n----------------------------------------\n\nTITLE: Querying Dry-Run Metrics in Prometheus\nDESCRIPTION: Opens the Prometheus dashboard and provides the query to find metrics related to the dry-run authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard prometheus\n```\n\n----------------------------------------\n\nTITLE: Setting Up Single-Network Environment Variables in Bash\nDESCRIPTION: Defines essential environment variables for single-network VM integration with Istio, including application name, namespace, working directory, and service account details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/virtual-machine/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ VM_APP=\"<the name of the application this VM will run>\"\n$ VM_NAMESPACE=\"<the name of your service namespace>\"\n$ WORK_DIR=\"<a certificate working directory>\"\n$ SERVICE_ACCOUNT=\"<name of the Kubernetes service account you want to use for your VM>\"\n$ CLUSTER_NETWORK=\"\"\n$ VM_NETWORK=\"\"\n$ CLUSTER=\"Kubernetes\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Envoy Internal Address Handling - Mesh-wide in YAML\nDESCRIPTION: This YAML snippet demonstrates how to enable the 'envoy.reloadable_features.explicit_internal_address_config' flag mesh-wide using the ProxyConfig in Istio. This configuration helps mitigate the vulnerability related to x-envoy header manipulation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2024-006/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  defaultConfig:\n    runtimeValues:\n      \"envoy.reloadable_features.explicit_internal_address_config\": \"true\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Injection for a Namespace using kubectl\nDESCRIPTION: This bash command demonstrates how to enable Istio injection for a specific namespace by adding the 'istio-injection=enabled' label using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0102/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace <namespace-name> istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Restarting Sample Deployment to Update Sidecar in Bash\nDESCRIPTION: This command triggers a rollout restart of all deployments in the sample namespace to update the sidecars to use the new Istio control plane version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl rollout restart deployment -n sample\n```\n\n----------------------------------------\n\nTITLE: Deploying a Pod that Exits After One Second\nDESCRIPTION: This YAML snippet defines a pod that exits after one second and doesn't restart, used to demonstrate how the new sidecar feature handles exiting pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/native-sidecars/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: sleep\nspec:\n  restartPolicy: Never\n  containers:\n- name: sleep\n  image: istio/base\n  command: [\"/bin/sleep\", \"1\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS ServiceEntry for MongoDB\nDESCRIPTION: Configuration for creating a ServiceEntry to enable TLS traffic to MongoDB service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: mongo\nspec:\n  hosts:\n  - $MONGODB_HOST\n  ports:\n  - number: $MONGODB_PORT\n    name: tls\n    protocol: TLS\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Adding Involvement Block in Istio Get Involved Page\nDESCRIPTION: This snippet illustrates the use of the involve_block shortcode to create sections on the Get Involved page. It includes a title, subtitle, icon, and content.\nSOURCE: https://github.com/istio/istio.io/blob/master/CUSTOM_PAGES.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{% involve_block title=\"This is title\" subtitle=\"This is subtitle\" icon=\"icon\" %}}\nContent\n{{% /involve_block %}}\n```\n\n----------------------------------------\n\nTITLE: Defining RBAC Role and RoleBinding for Tenant Administrator in YAML\nDESCRIPTION: YAML configuration that creates Role and RoleBinding resources to limit a tenant administrator's access to their specific Istio control plane namespace. This example restricts 'sales-admin' to the 'istio-system1' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: istio-system1\n  name: ns-access-for-sales-admin-istio-system1\nrules:\n- apiGroups: [\"\"] # \"\" 代表核心 API 资源组\n  resources: [\"*\"]\n  verbs: [\"*\"]\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: access-all-istio-system1\n  namespace: istio-system1\nsubjects:\n- kind: User\n  name: sales-admin\n  apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: Role\n  name: ns-access-for-sales-admin-istio-system1\n  apiGroup: rbac.authorization.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Simulating Real-World User Traffic\nDESCRIPTION: Command to create an infinite loop that sends requests to the application every second, simulating real-world user traffic for monitoring and visualization purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ while :; do curl -s <output of the previous command> | grep -o \"<title>.*</title>\"; sleep 1; done\n<title>Simple Bookstore App</title>\n<title>Simple Bookstore App</title>\n<title>Simple Bookstore App</title>\n<title>Simple Bookstore App</title>\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Allow Authorization Policy in Istio\nDESCRIPTION: YAML configuration for an authorization policy that allows specific service accounts and namespaces to access workloads with JWT token validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/curl\"]\n   - source:\n       namespaces: [\"dev\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.auth.claims[iss]\n     values: [\"https://accounts.google.com\"]\n```\n\n----------------------------------------\n\nTITLE: Starting Dashboard Proxy\nDESCRIPTION: Command to start the Kubernetes proxy for accessing the Dashboard UI\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl proxy\n```\n\n----------------------------------------\n\nTITLE: Configuring JWT-based Request Authentication in Istio\nDESCRIPTION: Example of an Istio RequestAuthentication resource that configures JWT validation for the httpbin application. It specifies the JWT issuer and the URI for the JSON Web Key Set (JWKS) used to verify the JWT signatures.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: RequestAuthentication\nmetadata:\n  name: \"example-3\"\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  jwtRules:\n  - issuer: \"testing@secure.istio.io\"\n    jwksUri: \"{{< github_file >}}/security/tools/jwt/samples/jwks.json\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio Website\nDESCRIPTION: This robots.txt configuration allows all web crawlers/user-agents to access the entire Istio website without restrictions. It also specifies the location of the sitemap for better search engine indexing at /v1.5/sitemap.xml.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.5/pt-br/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.5/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Cleanup TCP Egress Traffic Control\nDESCRIPTION: Commands to remove all configurations related to TCP egress traffic control.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry mongo\nkubectl delete gateway istio-egressgateway --ignore-not-found=true\nkubectl delete virtualservice direct-mongo-through-egress-gateway --ignore-not-found=true\nkubectl delete destinationrule egressgateway-for-mongo mongo --ignore-not-found=true\nkubectl delete policy istio-egressgateway -n istio-system --ignore-not-found=true\n```\n\n----------------------------------------\n\nTITLE: Removing Waypoint Proxies in Istio\nDESCRIPTION: Commands to remove all waypoint proxies by unlabeling the namespace and using the istioctl waypoint delete command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/cleanup/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio.io/use-waypoint-\n$ istioctl waypoint delete --all\n```\n\n----------------------------------------\n\nTITLE: Using request.auth.claims Condition in Istio Authorization Policy\nDESCRIPTION: Examples showing how to use request.auth.claims condition to match raw JWT claims including both simple and nested claims. Requires request authentication policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkey: request.auth.claims[iss]\nvalues: [\"*@foo.com\"]\n---\nkey: request.auth.claims[nested1][nested2]\nvalues: [\"some-value\"]\n```\n\n----------------------------------------\n\nTITLE: Listing Sidecar Injector Webhook Configurations\nDESCRIPTION: Shows the mutating webhook configurations for sidecar injection for different Istio revisions, including the new canary revision.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfigurations\nNAME                            WEBHOOKS   AGE\nistio-sidecar-injector-{{< istio_previous_version_revision >}}-1   2          2m16s\nistio-sidecar-injector-canary   2          114s\n```\n\n----------------------------------------\n\nTITLE: Listing Sidecar Injector Webhook Configurations\nDESCRIPTION: Shows the mutating webhook configurations for sidecar injection for different Istio revisions, including the new canary revision.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfigurations\nNAME                            WEBHOOKS   AGE\nistio-sidecar-injector-{{< istio_previous_version_revision >}}-1   2          2m16s\nistio-sidecar-injector-canary   2          114s\n```\n\n----------------------------------------\n\nTITLE: Committee Members Table in Markdown\nDESCRIPTION: Markdown table listing all current Steering Committee members, their companies, GitHub profiles, and seat types.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/steering-results/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< centered_block >}}\nName | Company | Profile | Seat type\n---|---|---|---\nCraig Box | Solo.io | [`craigbox`](https://github.com/craigbox) | Contribution seat\nRob Cernich | Red Hat | [`rcernich`](https://github.com/rcernich) | Contribution seat\nMitch Connors | Aviatrix | [`therealmitchconnors`](https://github.com/therealmitchconnors) | Community seat\nIris (Shaojun) Ding | Intel | [`irisdingbj`](https://github.com/irisdingbj) | Community seat\nCameron Etezadi | Google | [`cetezadi`](https://github.com/cetezadi) | Contribution seat\nJohn Howard | Google | [`howardjohn`](https://github.com/howardjohn) | Contribution seat\nFaseela K | Ericsson Software Technology | [`kfaseela`](https://github.com/kfaseela) | Community seat\nKebe Liu | DaoCloud | [`kebe7jun`](https://github.com/kebe7jun) | Contribution seat\nJamie Longmuir | Red Hat | [`longmuir`](https://github.com/longmuir) | Contribution seat\nKeith Mattix | Microsoft | [`keithmattix`](https://github.com/keithmattix) | Community seat\nJustin Pettit | Google | [`justinpettit`](https://github.com/justinpettit) | Contribution seat\nLin Sun | Solo.io | [`linsun`](https://github.com/linsun) | Contribution seat\nZhonghu Xu | Huawei | [`hzxuzhonghu`](https://github.com/hzxuzhonghu) | Contribution seat\n{{< /centered_block >}}\n```\n\n----------------------------------------\n\nTITLE: Installing Remote Config Cluster Configuration\nDESCRIPTION: Creates the external-istiod namespace and installs the IstioOperator configuration on the remote cluster using istioctl. Sets the default revision to 'default'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace external-istiod --context=\"${CTX_REMOTE_CLUSTER}\"\n$ istioctl install -f remote-config-cluster.yaml --set values.defaultRevision=default --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Testing Wikipedia Domain Access\nDESCRIPTION: Executes curl commands to test access to English and German Wikipedia domains, verifying the connection through the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c sleep -- sh -c 'curl -s https://en.wikipedia.org/wiki/Main_Page | grep -o \"<title>.*</title>\"; curl -s https://de.wikipedia.org/wiki/Wikipedia:Hauptseite | grep -o \"<title>.*</title>\"'\n```\n\n----------------------------------------\n\nTITLE: Testing an unexposed HTTP route with curl\nDESCRIPTION: A curl command demonstrating that accessing an unexposed path returns a 404 Not Found error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST/headers\"\n```\n\n----------------------------------------\n\nTITLE: Testing Valid Authorization with JWT Token for Standalone OPA Setup\nDESCRIPTION: Tests accessing the /headers endpoint with a JWT token that authorizes this specific path, expecting a 200 OK response as the path matches the token's claim.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin:8000/headers -H \"Authorization: Bearer $TOKEN_PATH_HEADERS\" -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Installing Remote Config Cluster Configuration\nDESCRIPTION: Creates the external-istiod namespace and installs the IstioOperator configuration on the remote cluster using istioctl. Sets the default revision to 'default'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace external-istiod --context=\"${CTX_REMOTE_CLUSTER}\"\n$ istioctl install -f remote-config-cluster.yaml --set values.defaultRevision=default --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling PROXY Protocol with Proxy Annotation in Istio (YAML)\nDESCRIPTION: The recommended approach to enable PROXY protocol using a proxy.istio.io/config annotation with gatewayTopology field on the ingress gateway pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/upgrade-issues/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    \"proxy.istio.io/config\": '{\"gatewayTopology\" : { \"proxyProtocol\": {} }}'\n```\n\n----------------------------------------\n\nTITLE: Implementing Route-Specific Rate Limit EnvoyFilter\nDESCRIPTION: EnvoyFilter configuration that applies local rate limiting specifically to port 9080 of the productpage service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/policy-enforcement/rate-limit/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: filter-local-ratelimit-svc\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      app: productpage\n  configPatches:\n    - applyTo: HTTP_FILTER\n      match:\n        context: SIDECAR_INBOUND\n        listener:\n          filterChain:\n            filter:\n              name: \"envoy.filters.network.http_connection_manager\"\n      patch:\n        operation: INSERT_BEFORE\n        value:\n          name: envoy.filters.http.local_ratelimit\n          typed_config:\n            \"@type\": type.googleapis.com/udpa.type.v1.TypedStruct\n            type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit\n            value:\n              stat_prefix: http_local_rate_limiter\n    - applyTo: HTTP_ROUTE\n      match:\n        context: SIDECAR_INBOUND\n        routeConfiguration:\n          vhost:\n            name: \"inbound|http|9080\"\n            route:\n              action: ANY\n      patch:\n        operation: MERGE\n        value:\n          typed_per_filter_config:\n            envoy.filters.http.local_ratelimit:\n              \"@type\": type.googleapis.com/udpa.type.v1.TypedStruct\n              type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit\n              value:\n                stat_prefix: http_local_rate_limiter\n                token_bucket:\n                  max_tokens: 4\n                  tokens_per_fill: 4\n                  fill_interval: 60s\n                filter_enabled:\n                  runtime_key: local_rate_limit_enabled\n                  default_value:\n                    numerator: 100\n                    denominator: HUNDRED\n                filter_enforced:\n                  runtime_key: local_rate_limit_enforced\n                  default_value:\n                    numerator: 100\n                    denominator: HUNDRED\n                response_headers_to_add:\n                  - append: false\n                    header:\n                      key: x-local-rate-limit\n                      value: 'true'\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing Traffic Split in Istio Ambient Mode\nDESCRIPTION: This command executes 100 curl requests to the productpage service and grep for the reviews version. It helps verify that roughly 10% of the traffic is routed to reviews-v2 as configured in the HTTPRoute.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/manage-traffic/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec deploy/curl -- sh -c \"for i in \\$(seq 1 100); do curl -s http://productpage:9080/productpage | grep reviews-v.-; done\"\n```\n\n----------------------------------------\n\nTITLE: Deleting curl service in without-istio namespace\nDESCRIPTION: Command to remove the curl service specifically from the without-istio namespace using kubectl delete with the namespace flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@ -n without-istio\n```\n\n----------------------------------------\n\nTITLE: Verifying L7 Authorization Policy in Istio\nDESCRIPTION: This snippet demonstrates how to test the applied L7 authorization policy by executing curl commands with different methods and from different deployments to verify access permissions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ # this should fail with an RBAC error because it is not a GET operation\n$ kubectl exec deploy/sleep -- curl -s http://productpage:9080/ -X DELETE | head -n1\n$ # this should fail with an RBAC error because the identity is not allowed\n$ kubectl exec deploy/notsleep -- curl -s http://productpage:9080/  | head -n1\n$ # this should continue to work\n$ kubectl exec deploy/sleep -- curl -s http://productpage:9080/ | head -n1\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Security Bulletin\nDESCRIPTION: YAML metadata defining the security bulletin properties including CVEs, CVSS scores, affected releases and publication date\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2023-003/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: ISTIO-SECURITY-2023-003\nsubtitle: Security Bulletin\ndescription: CVEs reported by Envoy.\ncves: [CVE-2023-35941,CVE-2023-35942,CVE-2023-35943,CVE-2023-35944]\ncvss: \"8.6\"\nvector: \"AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L\"\nreleases: [\"All releases prior to 1.16.0\", \"1.16.0 to 1.16.6\", \"1.17.0 to 1.17.4\", \"1.18.0 to 1.18.1\"]\npublishdate: 2023-07-25\nkeywords: [CVE]\nskip_seealso: true\n---\n```\n\n----------------------------------------\n\nTITLE: IstioOperator with GatewayClass defaults\nDESCRIPTION: YAML configuration showing how to set default values for all Gateways of a specific GatewayClass during Istio installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nkind: IstioOperator\nspec:\n  values:\n    gatewayClasses:\n      istio:\n        deployment:\n          spec:\n            replicas: 2\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart with Helm on Primary Cluster\nDESCRIPTION: Helm command to install the Istio base chart on cluster1 in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Checking Policy Enforcement Status in Istio\nDESCRIPTION: Command to check if policy enforcement is disabled in the Istio mesh configuration by examining the disablePolicyChecks setting in the istio ConfigMap.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2019-001/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get cm istio -o jsonpath=\"{@.data.mesh}\" | grep disablePolicyChecks\n```\n\n----------------------------------------\n\nTITLE: Advanced CNN Access Policy Configuration\nDESCRIPTION: Defines advanced access rules that exempt requests from the politics service account from monitoring and policy enforcement while maintaining restrictions for other users.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl apply -f -\napiVersion: \"config.istio.io/v1alpha2\"\nkind: rule\nmetadata:\n  name: handle-politics\n  namespace: istio-system\nspec:\n  match: request.host.endsWith(\"cnn.com\") && context.reporter.uid.startsWith(\"kubernetes://istio-egressgateway\") && request.path.startsWith(\"/politics\") && source.principal != \"cluster.local/ns/default/sa/politics\"\n  actions:\n  - handler: egress-error-logger.stdio\n    instances:\n    - egress-access.logentry\n---\napiVersion: \"config.istio.io/v1alpha2\"\nkind: rule\nmetadata:\n  name: handle-cnn-access\n  namespace: istio-system\nspec:\n  match: request.host.endsWith(\".cnn.com\") && context.reporter.uid.startsWith(\"kubernetes://istio-egressgateway\") && source.principal != \"cluster.local/ns/default/sa/politics\"\n  actions:\n  - handler: egress-access-logger.stdio\n    instances:\n      - egress-access.logentry\n  - handler: path-checker.listchecker\n    instances:\n      - request-path.listentry\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing DNS Resolution for ServiceEntry (Kubernetes Commands)\nDESCRIPTION: These bash commands demonstrate how to test DNS resolution for a ServiceEntry by deploying a curl pod and making a request to the defined host.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled --overwrite\n$ kubectl apply -f @samples/curl/curl.yaml@\n$ kubectl exec deploy/curl -- curl -sS -v address.internal\n```\n\n----------------------------------------\n\nTITLE: Verifying L4 Authorization Policy in Istio\nDESCRIPTION: This snippet shows how to test the applied L4 authorization policy by executing curl commands from different deployments to verify access permissions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ # this should succeed\n$ kubectl exec deploy/sleep -- curl -s http://istio-ingressgateway.istio-system/productpage | head -n1\n$ # this should succeed\n$ kubectl exec deploy/sleep -- curl -s http://productpage:9080/ | head -n1\n$ # this should fail with an empty reply\n$ kubectl exec deploy/notsleep -- curl -s http://productpage:9080/ | head -n1\n```\n\n----------------------------------------\n\nTITLE: Deny-All Authorization Policy\nDESCRIPTION: Policy that explicitly denies all access to the workload, taking precedence over ALLOW policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-all\nspec:\n  action: DENY\n  rules:\n  - {}\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Test Application\nDESCRIPTION: Command to deploy a curl container in the same namespace as the httpbin application for testing HTTP requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n my-app -f {{< github_file >}}/samples/curl/curl.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio CNI Node Pods\nDESCRIPTION: Command to check if istio-cni-node pods are running in the kube-system namespace to ensure proper CNI plugin functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/observability-issues/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n kube-system get pod -l k8s-app=istio-cni-node\n```\n\n----------------------------------------\n\nTITLE: Executing KubeSphere Installation Script in Bash\nDESCRIPTION: This snippet shows the command to run the KubeSphere installation script. The script creates a standard Kubernetes cluster and prompts the user to select the 'All-in-one' option.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kubesphere/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ./install.sh\n```\n\n----------------------------------------\n\nTITLE: Validating JWT Claim Based Routing\nDESCRIPTION: Series of curl commands to test the JWT claim based routing with different scenarios: no JWT, invalid JWT, valid JWT with matching claim, and valid JWT without matching claim.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/jwt-route/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I \"http://$INGRESS_HOST:$INGRESS_PORT/headers\"\n$ curl -s -I \"http://$INGRESS_HOST:$INGRESS_PORT/headers\" -H \"Authorization: Bearer some.invalid.token\"\n$ TOKEN_GROUP=$(curl {{< github_file >}}/security/tools/jwt/samples/groups-scope.jwt -s) && echo \"$TOKEN_GROUP\" | cut -d '.' -f2 - | base64 --decode\n$ curl -s -I \"http://$INGRESS_HOST:$INGRESS_PORT/headers\" -H \"Authorization: Bearer $TOKEN_GROUP\"\n$ TOKEN_NO_GROUP=$(curl {{< github_file >}}/security/tools/jwt/samples/demo.jwt -s) && echo \"$TOKEN_NO_GROUP\" | cut -d '.' -f2 - | base64 --decode\n$ curl -s -I \"http://$INGRESS_HOST:$INGRESS_PORT/headers\" -H \"Authorization: Bearer $TOKEN_NO_GROUP\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace\nDESCRIPTION: Command to remove the istio-system namespace. This is the final step in completely uninstalling Istio from the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Setting Up Backend Service and Istio Gateway\nDESCRIPTION: These commands apply the httpbin sample, create an Istio Gateway, and set up a VirtualService for routing HTTP traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f samples/httpbin/httpbin.yaml\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"httpbin.example.com\"\nEOF\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"httpbin.example.com\"\n  gateways:\n  - httpbin-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /status\n    - uri:\n        prefix: /delay\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Helm on GKE\nDESCRIPTION: Command to install the Istio control plane (istiod) on Google Kubernetes Engine using Helm with the default profile and GKE platform settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/config-profiles/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --set profile=default --set global.platform=gke --wait\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Helm on GKE\nDESCRIPTION: Command to install the Istio control plane (istiod) on Google Kubernetes Engine using Helm with the default profile and GKE platform settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/config-profiles/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --set profile=default --set global.platform=gke --wait\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Authorization Policy\nDESCRIPTION: Defines an Istio AuthorizationPolicy that specifies which services should be protected by Kyverno Authz Server.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: my-kyverno-authz\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      ext-authz: enabled\n  action: CUSTOM\n  provider:\n    name: kyverno-authz-server\n  rules: [{}]\n```\n\n----------------------------------------\n\nTITLE: Deploying gRPC Echo Application with Istio\nDESCRIPTION: These Bash commands create a namespace, enable Istio injection, and deploy the gRPC echo application in Kubernetes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace echo-grpc\n$ kubectl label namespace echo-grpc istio-injection=enabled\n$ kubectl -n echo-grpc apply -f samples/grpc-echo/grpc-echo.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTTP Ingress Resource in Kubernetes\nDESCRIPTION: Creates a Kubernetes Ingress resource to expose the httpbin service on port 80 with HTTP routing. The configuration includes host-based routing for httpbin.example.com and path-based routing for /status endpoint.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/kubernetes-ingress/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.io/ingress.class: istio\n  name: ingress\nspec:\n  rules:\n  - host: httpbin.example.com\n    http:\n      paths:\n      - path: /status\n        pathType: Prefix\n        backend:\n          service:\n            name: httpbin\n            port:\n              number: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Check service waypoint configuration\nDESCRIPTION: Command to view waypoint configuration for services\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nistioctl ztunnel-config service\n```\n\n----------------------------------------\n\nTITLE: Verifying Traffic Shift (Istio APIs)\nDESCRIPTION: Checks the VirtualService configuration to confirm the traffic split between v1 and v2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n$ kubectl get virtualservice tcp-echo -o yaml -n istio-io-tcp-traffic-shifting\napiVersion: networking.istio.io/v1\nkind: VirtualService\n  ...\nspec:\n  ...\n  tcp:\n  - match:\n    - port: 31400\n    route:\n    - destination:\n        host: tcp-echo\n        port:\n          number: 9000\n        subset: v1\n      weight: 80\n    - destination:\n        host: tcp-echo\n        port:\n          number: 9000\n        subset: v2\n      weight: 20\n```\n\n----------------------------------------\n\nTITLE: Check service waypoint configuration\nDESCRIPTION: Command to view waypoint configuration for services\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nistioctl ztunnel-config service\n```\n\n----------------------------------------\n\nTITLE: Verifying Setup with HTTP Requests in Istio\nDESCRIPTION: Sends HTTP requests from curl pods in different namespaces to httpbin services to verify the setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/mtls-migration/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ for from in \"foo\" \"bar\" \"legacy\"; do for to in \"foo\" \"bar\"; do kubectl exec \"$(kubectl get pod -l app=curl -n ${from} -o jsonpath={.items..metadata.name})\" -c curl -n ${from} -- curl http://httpbin.${to}:8000/ip -s -o /dev/null -w \"curl.${from} to httpbin.${to}: %{http_code}\\n\"; done; done\n```\n\n----------------------------------------\n\nTITLE: Modifying External Istio Configuration for IP Address in Bash\nDESCRIPTION: Modifies the Istio configuration when using an IP address instead of a DNS hostname for EXTERNAL_ISTIOD_ADDR.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ sed  -i'.bk' \\\n  -e '/proxyMetadata:/,+2d' \\\n  -e '/INJECTION_WEBHOOK_CONFIG_NAME/{n;s/value: \"\"/value: istio-sidecar-injector-external-istiod/;}' \\\n  -e '/VALIDATION_WEBHOOK_CONFIG_NAME/{n;s/value: \"\"/value: istio-validator-external-istiod/;}' \\\n  external-istiod.yaml ; rm external-istiod.yaml.bk\n```\n\n----------------------------------------\n\nTITLE: Manually Injecting Istio Sidecar Using istioctl\nDESCRIPTION: Demonstrates how to manually inject the Istio sidecar into a Kubernetes deployment using the istioctl command. This modifies the pod template to include the Istio proxy containers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl kube-inject -f demo-red.yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Deploying Waypoint Proxy for Istio Ambient Mesh\nDESCRIPTION: This command applies a waypoint proxy to handle Layer 7 traffic entering the namespace in an Istio ambient mesh environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/enforce-auth-policies/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl waypoint apply --enroll-namespace --wait\n```\n\n----------------------------------------\n\nTITLE: Viewing ControlZ Log Message in Plain Text\nDESCRIPTION: Example log message showing the IP address and port where ControlZ interface is available for an Istiod instance.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/controlz/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n2020-08-04T23:28:48.889370Z     info    ControlZ available at 100.76.122.230:9876\n```\n\n----------------------------------------\n\nTITLE: Deploying Open Policy Agent (OPA)\nDESCRIPTION: Deploys OPA in a dedicated namespace with necessary configurations. This includes the OPA deployment, service, and ConfigMaps for configuration and policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns opa\n$ kubectl label namespace opa istio-injection=enabled\n\n$ kubectl apply -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: opa\n  name: opa\n  namespace: opa\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: opa\n  template:\n    metadata:\n      labels:\n        app: opa\n    spec:\n      containers:\n      - image: openpolicyagent/opa:0.61.0-envoy\n        name: opa\n        args:\n          - \"run\"\n          - \"--server\"\n          - \"--disable-telemetry\"\n          - \"--config-file=/config/config.yaml\"\n          - \"--log-level=debug\" # Uncomment this line to enable debug logs\n          - \"--diagnostic-addr=0.0.0.0:8282\"\n          - \"/policy/policy.rego\" # Default policy\n        volumeMounts:\n          - mountPath: \"/config\"\n            name: opa-config\n          - mountPath: \"/policy\"\n            name: opa-policy\n      volumes:\n        - name: opa-config\n          configMap:\n            name: opa-config\n        - name: opa-policy\n          configMap:\n            name: opa-policy\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: opa-config\n  namespace: opa\ndata:\n  config.yaml: |\n    # Here the OPA configuration you can find in the offcial documention\n    decision_logs:\n      console: true\n    plugins:\n      envoy_ext_authz_grpc:\n        addr: \":9191\"\n        path: mypackage/mysubpackage/myrule # Default path for grpc plugin\n    # Here you can add your own configuration with services and bundles\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: opa\n  namespace: opa\n  labels:\n    app: opa\nspec:\n  ports:\n    - port: 9191\n      protocol: TCP\n      name: grpc\n  selector:\n    app: opa\n---\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining Istio 1.9 Release Metadata in YAML\nDESCRIPTION: YAML frontmatter defining metadata for the Istio 1.9 release announcement, including title, description, publish date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.9\nlinktitle: 1.9\nsubtitle: Major Update\ndescription: Istio 1.9 release announcement.\npublishdate: 2021-02-09\nrelease: 1.9.0\nskip_list: true\naliases:\n    - /news/announcing-1.9\n    - /news/announcing-1.9.0\n---\n```\n\n----------------------------------------\n\nTITLE: Restarting Kubernetes Deployment for Sidecar Version Update\nDESCRIPTION: Commands to update the sidecar version by redeploying applications. For Kubernetes 1.15+, you can use kubectl rollout restart, or alternatively modify the deployment template to force a new rollout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0158/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart <my-deployment>\n```\n\n----------------------------------------\n\nTITLE: Checking Istio CLI Version\nDESCRIPTION: Command to verify the installation of istioctl by checking its version. This also shows that Istio is not yet installed in the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl version\n```\n\n----------------------------------------\n\nTITLE: Reviewing GKE Firewall Rules\nDESCRIPTION: Lists firewall rules for master access in private GKE clusters to verify port 15017 access for istiod discovery validation webhook.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gke/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute firewall-rules list --filter=\"name~gke-${CLUSTER_NAME}-[0-9a-z]*-master\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Ingress for localhost Binding\nDESCRIPTION: Demonstrates how to use the Sidecar resource to explicitly configure port forwarding to localhost, preserving the old behavior for applications that bind to the loopback interface.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/upcoming-networking-changes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: Sidecar\nmetadata:\n  name: ratings\nspec:\n  workloadSelector:\n    labels:\n      app: ratings\n  ingress:\n  - port:\n      number: 8080\n      protocol: HTTP\n      name: http\n    defaultEndpoint: 127.0.0.1:8080\n```\n\n----------------------------------------\n\nTITLE: Istio Release Note Template Variable\nDESCRIPTION: Hugo template variable inclusion for rendering release note specific content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.23.x/announcing-1.23.3/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< relnote >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Fault Injection in Istio with VirtualService\nDESCRIPTION: This example demonstrates how to configure fault injection in Istio to test application resilience. It injects a 5-second delay into 0.1% of requests to the 'ratings' service, simulating network latency or an overloaded upstream service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/concepts/traffic-management/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: ratings\nspec:\n  hosts:\n  - ratings\n  http:\n  - fault:\n      delay:\n        percentage:\n          value: 0.1\n        fixedDelay: 5s\n    route:\n    - destination:\n        host: ratings\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Ambient-Enabled Workload Configuration\nDESCRIPTION: Configuration snippet showing HBONE protocol after the pod is included in ambient mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workloads\": {\n    \"10.244.2.8\": {\n      \"workloadIp\": \"10.244.2.8\",\n      \"protocol\": \"HBONE\",\n      ...\n}\n```\n\n----------------------------------------\n\nTITLE: Ambient-Enabled Workload Configuration\nDESCRIPTION: Configuration snippet showing HBONE protocol after the pod is included in ambient mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workloads\": {\n    \"10.244.2.8\": {\n      \"workloadIp\": \"10.244.2.8\",\n      \"protocol\": \"HBONE\",\n      ...\n}\n```\n\n----------------------------------------\n\nTITLE: TLS Mismatch: Gateway with TLS Passthrough and HTTP Virtual Service\nDESCRIPTION: YAML configuration showing a TLS mismatch where the gateway is passing through TLS traffic while the virtual service is trying to match HTTP patterns. This results in the virtual service configuration having no effect.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - \"*\"\n    port:\n      name: https\n      number: 443\n      protocol: HTTPS\n    tls:\n      mode: PASSTHROUGH\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: virtual-service\nspec:\n  gateways:\n  - gateway\n  hosts:\n  - httpbin.example.com\n  http:\n  - route:\n    - destination:\n        host: httpbin.org\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Sleep Container in Kubernetes\nDESCRIPTION: This command deploys a sleep container in Kubernetes for testing purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/sleep/sleep.yaml@\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Istio Traffic Management Documentation\nDESCRIPTION: YAML front matter metadata for the traffic management documentation page, including title, description, weight for ordering, and legacy URL aliases from previous versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/networking/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Traffic Management\ndescription: Describes how to configure HTTP/TCP routing features.\nweight: 30\naliases:\n    - /docs/reference/config/istio.routing.v1alpha1/\n    - /docs/reference/config/networking/\ntest: table-of-contents\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo v1 Services in Cluster1\nDESCRIPTION: Commands to enable Istio injection and deploy the productpage, details, and reviews-v1 services in the first Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label --context=$CTX_CLUSTER1 namespace default istio-injection=enabled\n$ kubectl apply --context=$CTX_CLUSTER1 -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage\n  labels:\n    app: productpage\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: productpage\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: productpage-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: productpage\n        version: v1\n    spec:\n      containers:\n      - name: productpage\n        image: istio/examples-bookinfo-productpage-v1:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: details\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: details-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: details\n        version: v1\n    spec:\n      containers:\n      - name: details\n        image: istio/examples-bookinfo-details-v1:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: reviews\n  labels:\n    app: reviews\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: reviews\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v1\n    spec:\n      containers:\n      - name: reviews\n        image: istio/examples-bookinfo-reviews-v1:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\nEOF\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Logging for Istio Ingress Gateway\nDESCRIPTION: This command uses istioctl to set the log level to debug for the Istio ingress gateway pod. It's useful for obtaining more detailed logs related to DLB and other components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nistioctl pc log ${POD}.istio-system --level debug\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Search Results Page\nDESCRIPTION: YAML front matter configuration for a search results page that disables the sidebar and skips the table of contents for a cleaner interface.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/search/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Search Results\nsidebar_none: true\nskip_toc: true\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Federation for Istio Metrics\nDESCRIPTION: This configuration sets up Prometheus federation to scrape the federation endpoint of the Istio Prometheus. It includes job configuration for collecting aggregated workload metrics and control plane metrics.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/observability/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- job_name: 'istio-prometheus'\n  honor_labels: true\n  metrics_path: '/federate'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['istio-system']\n  metric_relabel_configs:\n  - source_labels: [__name__]\n    regex: 'workload:(.*)'\n    target_label: __name__\n    action: replace\n  params:\n    'match[]':\n    - '{__name__=~\"workload:(.*)\"}'\n    - '{__name__=~\"pilot(.*)\"}'\n```\n\n----------------------------------------\n\nTITLE: Initializing Wasm Project with wasme\nDESCRIPTION: Command to initialize a new WebAssembly project for Istio using C++ with the wasme CLI tool.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/deploy-wasm-declarative/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nwasme init ./filter --language cpp --platform istio --platform-version 1.5.x\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for NGINX Server Certificate\nDESCRIPTION: Stores the NGINX server certificate and key as a Kubernetes Secret.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret tls nginx-server-certs \\\n  --key example_certs/nginx.example.com.key \\\n  --cert example_certs/nginx.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Creating TLS Secret for Istio Gateway using kubectl\nDESCRIPTION: This command creates a new TLS Secret using kubectl. It requires the path to a valid certificate and key file, and specifies the namespace where the Gateway workload is running.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0161/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create secret tls my-tls-secret --cert=path/to/cert.pem --key=path/to/key.pem -n <namespace>\n```\n\n----------------------------------------\n\nTITLE: NetworkPolicy Allow HBONE Traffic Example\nDESCRIPTION: Modified NetworkPolicy that allows both application traffic on port 8080 and HBONE traffic on port 15008 for ambient mode compatibility.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: my-app-allow-ingress-web\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  ingress:\n  - ports:\n    - port: 8080\n      protocol: TCP\n    - port: 15008\n      protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Deploying Basic Istio Workload Commands\nDESCRIPTION: Basic kubectl commands to create and configure a namespace with Istio sidecar injection and deploy httpbin workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl label namespace foo istio-injection=enabled\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: DestinationRule Configuration in Istio\nDESCRIPTION: Configuration for defining service subsets and traffic policies for the reviews service, including load balancing settings for different versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  trafficPolicy:\n    loadBalancer:\n      simple: RANDOM\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n    trafficPolicy:\n      loadBalancer:\n        simple: ROUND_ROBIN\n  - name: v3\n    labels:\n      version: v3\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Operator Resources in Bash\nDESCRIPTION: Commands to remove the Istio Operator deployment and custom resource definition after migration is complete. This finalizes the cleanup process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete deployment -n istio-system istio-operator\n$ kubectl delete customresourcedefinition istiooperator\n```\n\n----------------------------------------\n\nTITLE: Viewing Istiod Pod Logs for Troubleshooting\nDESCRIPTION: Collects logs from all istiod pods to help diagnose issues with the sidecar injection webhook. This can reveal errors or configuration problems affecting the webhook functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ for pod in $(kubectl -n istio-system get pod -lapp=istiod -o jsonpath='{.items[*].metadata.name}'); do \\\n    kubectl -n istio-system logs ${pod} \\\ndone\n\n\n$ for pod in $(kubectl -n istio-system get pod -l app=istiod -o name); do \\\nkubectl -n istio-system describe ${pod}; \\\ndone\n$\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API for Multiple Hosts\nDESCRIPTION: Defines a Gateway resource using the Gateway API with two listeners for httpbin and helloworld, specifying TLS termination and certificate references.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\n  namespace: istio-system\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: https-httpbin\n    hostname: \"httpbin.example.com\"\n    port: 443\n    protocol: HTTPS\n    tls:\n      mode: Terminate\n      certificateRefs:\n      - name: httpbin-credential\n    allowedRoutes:\n      namespaces:\n        from: Selector\n        selector:\n          matchLabels:\n            kubernetes.io/metadata.name: default\n  - name: https-helloworld\n    hostname: \"helloworld.example.com\"\n    port: 443\n    protocol: HTTPS\n    tls:\n      mode: Terminate\n      certificateRefs:\n      - name: helloworld-credential\n    allowedRoutes:\n      namespaces:\n        from: Selector\n        selector:\n          matchLabels:\n            kubernetes.io/metadata.name: default\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio 1.22.x Release Page\nDESCRIPTION: This YAML frontmatter configures the metadata for a webpage listing Istio 1.22.x release announcements. It specifies the title, description, weight for sorting, and layout options for displaying releases in a grid format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.22.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.22.x Releases\ndescription: Announcements for the 1.22 release and its associated patch releases.\nweight: 7\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Enabling Access Logs Using Mesh Config in Istio\nDESCRIPTION: This YAML configuration sets up access logging in Istio by configuring the meshConfig field in an IstioOperator configuration to output logs to standard output.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  meshConfig:\n    accessLogFile: /dev/stdout\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Validation Container Logs\nDESCRIPTION: This command displays logs from the istio-validation init container which tests if traffic redirection is properly set up. Connection refused errors indicate that the CNI plugin hasn't correctly configured network redirection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/cni/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs POD_NAME -n POD_NAMESPACE -c istio-validation\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Statistics (Istio APIs)\nDESCRIPTION: This command checks the statistics of the egress gateway's proxy for the counter corresponding to requests to *.wikipedia.org when using Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l istio=egressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}')\" -c istio-proxy -n istio-system -- pilot-agent request GET clusters | grep '^outbound|443||www.wikipedia.org.*cx_total:'\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespace for Istio Ambient Mesh in Bash\nDESCRIPTION: This command labels the default namespace to enable ambient mesh mode for all pods within it. It automatically secures communication between pods and enables TCP telemetry gathering.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/secure-and-visualize/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio.io/dataplane-mode=ambient\n```\n\n----------------------------------------\n\nTITLE: Viewing Istio Proxy Logs\nDESCRIPTION: Command to check the logs of the Istio sidecar proxy for the productpage service\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs -l app=productpage -c istio-proxy | grep GET\n```\n\n----------------------------------------\n\nTITLE: Removing Namespace from Istio Ambient Data Plane\nDESCRIPTION: Command to remove the label that includes applications in the ambient mesh by using kubectl label with a minus sign suffix.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/cleanup/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace default istio.io/dataplane-mode-\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Ingress Gateway Connection Limits\nDESCRIPTION: A series of commands to check if the new connection limits are in place. It retrieves the ingress gateway pod name, executes a curl command within the pod to fetch runtime configuration, and displays the results.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/cve-2020-007-configmap.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ ISTIO_INGRESS_PODNAME=$(kubectl get pods -l app=istio-ingressgateway -n istio-system  -o jsonpath=\"{.items[0].metadata.name}\")\n$ kubectl --namespace istio-system exec -i -t  \"${ISTIO_INGRESS_PODNAME}\" -c istio-proxy -- curl -sS http://localhost:15000/runtime\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n \"entries\": {\n  \"overload.global_downstream_max_connections\": {\n    \"layer_values\": [\n      \"\",\n      \"250000\",\n      \"\"\n    ],\n    \"final_value\": \"250000\"\n  }\n },\n \"layers\": [\n  \"static_layer_0\",\n  \"admin\"\n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring robots.txt for Istio.io Website\nDESCRIPTION: A standard robots.txt configuration that allows all user agents to access the entire website without restrictions. It also specifies the location of the sitemap file at /v1.14/sitemap.xml for search engine crawlers.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.14/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.14/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Validating Cosign Binary Signature with OpenSSL\nDESCRIPTION: This command uses OpenSSL to verify the signature of the downloaded Cosign binary. It fetches the public key from the Cosign GitHub repository and compares it with the provided signature file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/image-signing-validation/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl dgst -sha256 \\\n    -verify <(curl -ssL https://raw.githubusercontent.com/sigstore/cosign/main/release/release-cosign.pub) \\\n    -signature <(cat /path/to/cosign.sig | base64 -d) \\\n    /path/to/cosign-binary\n```\n\n----------------------------------------\n\nTITLE: Running Istio Analyze Command for Diagnostic Information\nDESCRIPTION: This command analyzes the Istio installation across all namespaces to identify potential issues or misconfigurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host for IBM Cloud Kubernetes Service\nDESCRIPTION: Retrieves worker nodes information and sets the ingress host to a public IP of a worker node for IBM Cloud Kubernetes Service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nibmcloud ks workers --cluster cluster-name-or-id\nexport INGRESS_HOST=public-IP-of-one-of-the-worker-nodes\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Security Bulletin\nDESCRIPTION: YAML metadata header defining the security bulletin properties including CVE number, CVSS score, affected releases and publication date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-007/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: ISTIO-SECURITY-2021-007\nsubtitle: Security Bulletin\ndescription: Istio contains a remotely exploitable vulnerability where credentials specified in the Gateway and DestinationRule credentialName field can be accessed from different namespaces.\ncves: [CVE-2021-34824]\ncvss: \"9.1\"\nvector: \"AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:L/A:L\"\nreleases: [\"All 1.8 patch releases\", \"1.9.0 to 1.9.5\", \"1.10.0 to 1.10.1\"]\npublishdate: 2021-06-24\nkeywords: [CVE]\nskip_seealso: true\n---\n```\n\n----------------------------------------\n\nTITLE: Checking Proxy Service Details\nDESCRIPTION: Displays the details of the istioctl-proxy service, including its ClusterIP and port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc istioctl-proxy -n external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\nNAME             TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nistioctl-proxy   ClusterIP   172.21.127.192   <none>        9090/TCP   11m\n```\n\n----------------------------------------\n\nTITLE: Deploying Test Workloads in Kubernetes\nDESCRIPTION: Creates a namespace 'foo', enables Istio injection, and deploys httpbin and curl workloads for testing authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl label ns foo istio-injection=enabled\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n foo\n$ kubectl apply -f @samples/curl/curl.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: Inserting Boilerplate with Markdown and Shortcode in Hugo\nDESCRIPTION: Shows how to insert a boilerplate that contains markdown and a shortcode. This example uses the 'test-1' boilerplate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil_and_lists/index.md#2025-04-08_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< boilerplate \"test-1\" >}}\n```\n\n----------------------------------------\n\nTITLE: Checking Service CIDR in IBM Cloud Private\nDESCRIPTION: This command retrieves the service_cluster_ip_range value from the IBM Cloud Private configuration file. This information is used to configure Istio to bypass external IP ranges for direct access to external services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ngrep service_cluster_ip_range cluster/config.yaml\n```\n\n----------------------------------------\n\nTITLE: Testing URL Access Control\nDESCRIPTION: Curl commands to test the access control configuration by attempting to access different URLs on edition.cnn.com.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it $SOURCE_POD -c sleep -- sh -c 'curl -sL -o /dev/null -w \"%{http_code}\\n\" http://edition.cnn.com/politics; curl -sL -o /dev/null -w \"%{http_code}\\n\" http://edition.cnn.com/sport; curl -sL -o /dev/null -w \"%{http_code}\\n\" http://edition.cnn.com/health'\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Bookinfo Resources in Kubernetes\nDESCRIPTION: These commands remove the Bookinfo application pods and configurations from the Kubernetes cluster. They delete the application deployment, gateway, destination rules, and virtual services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/bookinfo/platform/kube/bookinfo.yaml@\n$ kubectl delete -f @samples/bookinfo/networking/bookinfo-gateway.yaml@\n$ kubectl delete -f @samples/bookinfo/networking/destination-rule-all-mtls.yaml@\n$ kubectl delete -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Creating an Authorization Policy with Host Matching\nDESCRIPTION: This YAML defines an Authorization Policy that uses prefix matches for host names, demonstrating the correct way to write host match policies for Istio-generated configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ingress-host\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      app: istio-ingressgateway\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        hosts: [\"example.com\", \"example.com:*\"]\n```\n\n----------------------------------------\n\nTITLE: Verifying Control Plane Migration after Tag Update\nDESCRIPTION: Checks that all namespaces are now using the new Istio control plane revision after the revision tag update and deployment restart.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl ps\nNAME                                                   CLUSTER        CDS        LDS        EDS        RDS          ECDS         ISTIOD                             VERSION\ncurl-5984f48bc7-kmj6x.app-ns-1                         Kubernetes     SYNCED     SYNCED     SYNCED     SYNCED       NOT SENT     istiod-{{< istio_full_version_revision >}}-7f6fc6cfd6-jsktb     {{< istio_full_version >}}\ncurl-78ff5975c6-jldk4.app-ns-3                         Kubernetes     SYNCED     SYNCED     SYNCED     SYNCED       NOT SENT     istiod-{{< istio_full_version_revision >}}-7f6fc6cfd6-jsktb     {{< istio_full_version >}}\ncurl-7cdd8dccb9-5bq5n.app-ns-2                         Kubernetes     SYNCED     SYNCED     SYNCED     SYNCED       NOT SENT     istiod-{{< istio_full_version_revision >}}-7f6fc6cfd6-jsktb     {{< istio_full_version >}}\n```\n\n----------------------------------------\n\nTITLE: Disabling Protocol Sniffing in Istio 1.3 Upgrade\nDESCRIPTION: Command to disable protocol sniffing when upgrading to Istio 1.3 to maintain previous behavior. This Helm option sets the pilot.enableProtocolSniffing flag to false.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.3.x/announcing-1.3/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n--set pilot.enableProtocolSniffing=false\n```\n\n----------------------------------------\n\nTITLE: Embedding Event Image with Hugo Shortcode\nDESCRIPTION: Hugo shortcode for displaying the Istio Day promotional image with width specification and alt text\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/istio-at-kubecon-na/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< image width=\"100%\"\n    link=\"./istio-day-paris.jpg\"\n    alt=\"Istio Day Europe 2024\"\n    >}}\n```\n\n----------------------------------------\n\nTITLE: Setting Pod-Level Annotation to Hold Application Until Proxy Starts in Istio\nDESCRIPTION: This YAML annotation can be applied to individual Kubernetes pods to make application containers wait until the istio-proxy sidecar is ready. This prevents network connectivity issues during application startup without requiring global configuration changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nproxy.istio.io/config: '{ \"holdApplicationUntilProxyStarts\": true }'\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster with SidecarContainers Feature Enabled\nDESCRIPTION: This snippet demonstrates how to create a Kubernetes 1.28 cluster using kind, with the SidecarContainers feature gate enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/native-sidecars/index.md#2025-04-08_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ cat <<EOF | kind create cluster --name sidecars --image gcr.io/istio-testing/kind-node:v1.28.0 --config=-\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nfeatureGates:\n  SidecarContainers: true\nEOF\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for 2020 Blog Posts Archive\nDESCRIPTION: YAML frontmatter block that configures metadata for a blog posts archive page from 2020, setting the page title, description, navigation weight, and specifying posts should be sorted by publish date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 2020 Posts\ndescription: Blog posts for 2020.\nweight: 8\nlist_by_publishdate: true\n---\n```\n\n----------------------------------------\n\nTITLE: SSH into Minikube VM in Bash\nDESCRIPTION: Connects to the minikube virtual machine via SSH. This is useful for monitoring resource usage directly on the VM.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/minikube/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ minikube ssh\n```\n\n----------------------------------------\n\nTITLE: Listing AKS-Supported Regions in Azure CLI\nDESCRIPTION: This command lists all Azure regions that support AKS (Azure Kubernetes Service). It queries the Microsoft.ContainerService provider for managed clusters locations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/azure/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ az provider list --query \"[?namespace=='Microsoft.ContainerService'].resourceTypes[] | [?resourceType=='managedClusters'].locations[]\" -o tsv\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabbed Content Structure in Hugo\nDESCRIPTION: Shows how to create a tabbed interface using Hugo shortcodes with various content types including plain text, warnings, and markdown. Each tab demonstrates different formatting and content nesting capabilities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tabs/index.md#2025-04-08_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{< tabset category-name=\"test\" >}}\n\n{{< tab name=\"One\" category-value=\"one\" >}}\nOne paragraph\n{{< /tab >}}\n\n{{< tab name=\"Two\" category-value=\"two\" >}}\nThree\n\nseparate\n\nparagraphs\n{{< /tab >}}\n\n{{< tab name=\"Three\" category-value=\"three\" >}}\n{{< warning >}}\nWarning in a tab\n{{< /warning >}}\n{{< /tab >}}\n\n{{< tab name=\"Four\" category-value=\"four\" >}}\nSimple text\n\nIn two paragraphs\n\n{{< warning >}}\nWarning in a tab\n{{< /warning >}}\n{{< /tab >}}\n\n{{< tab name=\"Five\" category-value=\"five\" >}}\nSimple text\n\n{{< text plain >}}\nText block in a tab\n{{< /text >}}\n\n{{< /tab >}}\n\n{{< tab name=\"Six\" category-value=\"six\" >}}\nSimple text with _markdown_ in a tab\n\n{{< warning >}}\nWarning with _markdown_ in a tab\n\n{{< text plain >}}\nText block in a warning in a tab\n{{< /text >}}\n\nAnd more _markdown_\n{{< /warning >}}\n\n{{< /tab >}}\n\n{{< tab name=\"Seven\" category-value=\"seven\" >}}\nSimple text with _markdown_ in a tab\n\n{{< text plain >}}\nNoIndent:\n    FourIndent:\n        - EightIndent\n    FourIndentAgain:\n        - EightIndentAgain\n{{< /text >}}\n\nAnd more _markdown_\n{{< /tab >}}\n\n{{< /tabset >}}\n```\n\n----------------------------------------\n\nTITLE: Defining Peer Authentication Policy in Istio (YAML)\nDESCRIPTION: This YAML snippet defines a PeerAuthentication policy for Istio. It specifies that workloads with the label 'app: reviews' in the 'foo' namespace must use mutual TLS in STRICT mode for transport authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-peer-policy\"\n  namespace: \"foo\"\nspec:\n  selector:\n    matchLabels:\n      app: reviews\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret for Cluster Connection\nDESCRIPTION: Generates and applies a remote secret to enable cluster1's control plane to access cluster2's API Server for authentication and service discovery.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nistioctl create-remote-secret \\\n    --context=\"${CTX_CLUSTER2}\" \\\n    --name=cluster2 | \\\n    kubectl apply -f - --context=\"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring GRPC ALPN Settings for cert-manager compatibility\nDESCRIPTION: YAML configuration to disable GRPC ALPN enforcement for compatibility with cert-manager's istio-csr implementation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.24.x/announcing-1.24/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  defaultConfig:\n    proxyMetadata:\n      GRPC_ENFORCE_ALPN_ENABLED: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Defining Peer Authentication Policy in Istio (YAML)\nDESCRIPTION: This YAML snippet defines a PeerAuthentication policy for Istio. It specifies that workloads with the label 'app: reviews' in the 'foo' namespace must use mutual TLS in STRICT mode for transport authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-peer-policy\"\n  namespace: \"foo\"\nspec:\n  selector:\n    matchLabels:\n      app: reviews\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio 1.1.x Release Page\nDESCRIPTION: This YAML frontmatter defines metadata for a webpage listing Istio 1.1.x release announcements. It specifies the page title, description, weight for ordering, and layout template to be used.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.1.x Releases\ndescription: Announcements for the 1.1 release and its associated patch releases.\nweight: 28\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Viewing Endpoint Configuration\nDESCRIPTION: Demonstrates checking available endpoints for a specific cluster using the proxy-config endpoints command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config endpoints productpage-v1-6c886ff494-7vxhs --cluster \"outbound|9080||reviews.default.svc.cluster.local\"\n```\n\n----------------------------------------\n\nTITLE: Testing Weight-Based Version Routing with Curl\nDESCRIPTION: This snippet uses curl to test the weight-based version routing configuration. It sends multiple requests to demonstrate the 90/10 split between v1 and v2 versions of the helloworld service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ for run in {1..10}; do curl -HHost:helloworld.sample.com http://$INGRESS_HOST/hello; done\n```\n\n----------------------------------------\n\nTITLE: Configuring CORS Policy in Istio VirtualService\nDESCRIPTION: Example YAML configuration showing how to set up CORS policy in an Istio VirtualService to allow cross-origin requests from a specific domain. The configuration demonstrates allowing requests from 'attack.example.com' to 'bank.example.com' using exact origin matching.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/traffic-management/cors.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: bank\nspec:\n  hosts:\n  - bank.example.com\n  http:\n  - corsPolicy:\n      allowOrigins:\n      - exact: https://attack.example.com\n...\n```\n\n----------------------------------------\n\nTITLE: Verifying Distribution with curl in Istio\nDESCRIPTION: This bash command executes a curl request to the HelloWorld service from a curl pod in the sample namespace. It's used to verify the configured traffic distribution across localities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/distribute/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec --context=\"${CTX_R1_Z1}\" -n sample -c curl \\\n  \"$(kubectl get pod --context=\"${CTX_R1_Z1}\" -n sample -l \\\n  app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n  -- curl -sSL helloworld.sample:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Applying Workload-Specific Peer Authentication with Strict mTLS\nDESCRIPTION: This snippet shows how to create a PeerAuthentication policy that enables strict mutual TLS for a specific workload (httpbin.bar) using Kubernetes labels for targeting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n bar -f -\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"httpbin\"\n  namespace: \"bar\"\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  mtls:\n    mode: STRICT\nEOF\n```\n\n----------------------------------------\n\nTITLE: Initializing MySQL Database with mysqlsh\nDESCRIPTION: Initializes the MySQL database using mysqlsh client with SSL mode required.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/src/mysql/mysqldb-init.sql | mysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes ConfigMap for Nginx Configuration\nDESCRIPTION: This command creates a Kubernetes ConfigMap to store the Nginx SNI proxy configuration in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create configmap egress-sni-proxy-configmap -n istio-system --from-file=nginx.conf=./sni-proxy.conf\n```\n\n----------------------------------------\n\nTITLE: Deleting the without-istio namespace\nDESCRIPTION: Command to remove the entire without-istio namespace from the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace without-istio\n```\n\n----------------------------------------\n\nTITLE: Initializing MySQL Database with mysqlsh\nDESCRIPTION: Initializes the MySQL database using mysqlsh client with SSL mode required.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/src/mysql/mysqldb-init.sql | mysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istiod Logs for Troubleshooting\nDESCRIPTION: This command fetches logs from all Istiod pods in the istio-system namespace, which are the control plane components of Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -n istio-system -l app=istiod\n```\n\n----------------------------------------\n\nTITLE: Applying Discovery Selectors Configuration with Istioctl\nDESCRIPTION: This command applies the YAML configuration with discovery selectors to update the Istio installation using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/discovery-selectors/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --skip-confirmation -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\nnamespace: istio-system\nspec:\n# You may override parts of meshconfig by uncommenting the following lines.\n  meshConfig:\n    discoverySelectors:\n      - matchLabels:\n          istio-discovery: enabled\nEOF\n```\n\n----------------------------------------\n\nTITLE: Detecting mTLS Configuration in Istio with Bash\nDESCRIPTION: This Bash command checks if mutual TLS is enabled in the Istio system by examining DestinationRule resources across all namespaces for traffic policy settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-003/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get destinationrule --all-namespaces -o yaml | grep trafficPolicy -A 2\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning Message for Experimental Feature in Hugo\nDESCRIPTION: This snippet uses Hugo shortcodes to display a warning message about an experimental feature in the Istio.io project. It includes a link to the feature lifecycle documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/experimental.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< warning >}}\nThis feature is actively in development and is considered\n[experimental](https://github.com/istio/community/blob/master/FEATURE-LIFECYCLE.md).\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Verifying Listener Configuration\nDESCRIPTION: Command to verify that separate listeners are configured for each external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl pc listener deploy/curl | grep tcp-echo | awk '{printf \"ADDRESS=%s, DESTINATION=%s %s\\n\", $1, $4, $5}'\n```\n\n----------------------------------------\n\nTITLE: Resolved Virtual Services with Namespace Scoping in Istio\nDESCRIPTION: Solution showing how to resolve the conflict by adding the exportTo field set to '.' which scopes each virtual service to its own namespace, preventing conflicts across namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0109/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: productpage\n  namespace: team-1\nspec:\n  exportTo:\n  - \".\"\n  hosts:\n  - productpage.default.svc.cluster.local\n  http:\n  - route:\n    - destination:\n        host: productpage\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: custom\n  namespace: team-2\nspec:\n  exportTo:\n  - \".\"\n  hosts:\n  - productpage.default.svc.cluster.local\n  http:\n  - route:\n    - destination:\n        host: productpage.team-2.svc.cluster.local\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Security Bulletins Page in YAML\nDESCRIPTION: YAML front matter configuration for a security bulletins documentation page. Defines the page title, description, weight, sorting method and layout template.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Security Bulletins\ndescription: Disclosed security vulnerabilities and their mitigation.\nweight: 7\nlist_by_publishdate: true\nlayout: security-grid\ndata_category: Security Bulletins\n---\n```\n\n----------------------------------------\n\nTITLE: Delete Curl Resources\nDESCRIPTION: Command to remove the curl service and deployment using a sample configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_39\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Deployment in Istio Multicluster Setup\nDESCRIPTION: This command checks the status and IP of pods in the second cluster, specifically looking at the helloworld pod. It's used to gather information needed for cross-cluster communication testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER2}\" -n uninjected-sample get pod -o wide\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhook with Missing URLs in Istio\nDESCRIPTION: This YAML configuration shows ValidatingWebhookConfiguration and MutatingWebhookConfiguration with missing webhook URLs, which triggers the InvalidExternalControlPlaneConfig warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0163/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-validator-external-istiod\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url:\n  name: rev.validation.istio.io\n\n---\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istiod-default-validator\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com:15017/validate\n  failurePolicy: Ignore\n  name: validation.istio.io\n\n---\napiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: istio-sidecar-injector-external-istiod\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url:\n  failurePolicy: Fail\n  name: rev.namespace.sidecar-injector.istio.io\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: rev.object.sidecar-injector.istio.io\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: namespace.sidecar-injector.istio.io\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: object.sidecar-injector.istio.io\n```\n\n----------------------------------------\n\nTITLE: Canonical Service Labels in YAML\nDESCRIPTION: YAML configuration showing the canonical service labels used by Istio for both source and destination services. These labels help identify workload relationships and revisions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/metrics/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsource_canonical_service\nsource_canonical_revision\ndestination_canonical_service\ndestination_canonical_revision\n```\n\n----------------------------------------\n\nTITLE: Setting Up HorizontalPodAutoscaler\nDESCRIPTION: Configures automatic scaling for the custom ingress gateway deployment based on CPU utilization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/custom-ingress-gateway/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: my-ingressgateway\n  namespace: istio-system\nspec:\n  maxReplicas: 5\n  minReplicas: 1\n  scaleTargetRef:\n    apiVersion: apps/v1beta1\n    kind: Deployment\n    name: my-ingressgateway\n  targetCPUUtilizationPercentage: 80\nstatus:\n  currentCPUUtilizationPercentage: 0\n  currentReplicas: 1\n  desiredReplicas: 1\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Pods\nDESCRIPTION: Verifies that each pod now has two containers: the microservice and the Istio sidecar proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/enable-istio-all-microservices/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Using Istio Client-Go to List Virtual Services\nDESCRIPTION: Demonstrates how to create an Istio client and list Virtual Services in a specified namespace using the client-go library. Includes configuration setup and error handling.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/announcing-istio-client-go/index.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n  \"log\"\n  \"os\"\n\n  metav1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n  \"k8s.io/client-go/tools/clientcmd\"\n\n  versionedclient \"istio.io/client-go/pkg/clientset/versioned\"\n)\n\nfunc main() {\n  kubeconfig := os.Getenv(\"KUBECONFIG\")\n  namespace := os.Getenv(\"NAMESPACE\")\n  if len(kubeconfig) == 0 || len(namespace) == 0 {\n    log.Fatalf(\"Environment variables KUBECONFIG and NAMESPACE need to be set\")\n  }\n  restConfig, err := clientcmd.BuildConfigFromFlags(\"\", kubeconfig)\n  if err != nil {\n    log.Fatalf(\"Failed to create k8s rest client: %s\", err)\n  }\n\n  ic, err := versionedclient.NewForConfig(restConfig)\n  if err != nil {\n    log.Fatalf(\"Failed to create istio client: %s\", err)\n  }\n  // Print all VirtualServices\n  vsList, err := ic.NetworkingV1alpha3().VirtualServices(namespace).List(metav1.ListOptions{})\n  if err != nil {\n    log.Fatalf(\"Failed to get VirtualService in %s namespace: %s\", namespace, err)\n  }\n  for i := range vsList.Items {\n    vs := vsList.Items[i]\n    log.Printf(\"Index: %d VirtualService Hosts: %+v\\n\", i, vs.Spec.GetHosts())\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Tutorial Page\nDESCRIPTION: YAML frontmatter configuration block that defines the tutorial page metadata including title, description, weight, and display settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Learn Microservices using Kubernetes and Istio\ndescription: This modular tutorial provides new users with hands-on experience using Istio for common microservices scenarios, one step at a time.   \nweight: 100\nsimple_list: true\ncontent_above: true\ntest: table-of-contents\n---\n```\n\n----------------------------------------\n\nTITLE: Retrieving Full Istio Version in Plain Text\nDESCRIPTION: This snippet uses a custom shortcode to display the full version of Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/boilerplates/args.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=istio_full_version >}}\n{{< istio_full_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Applying Old Routing Rules in Istio\nDESCRIPTION: This command demonstrates how to apply a second routing rule for a destination using the old Istio routing system. It uses kubectl to apply a YAML file containing the rule definition.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f my-second-rule-for-destination-abc.yaml\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Completely with Purge Option\nDESCRIPTION: Completely removes Istio from a cluster including all cluster-scoped resources that might be shared with other Istio control planes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/istioctl/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --purge\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace\nDESCRIPTION: Command to remove the istio-system namespace from the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/istioctl/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Verifying Service Reachability\nDESCRIPTION: Executes curl commands to verify reachability between services in different namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n bar -o jsonpath={.items..metadata.name})\" -c curl -n bar -- curl http://httpbin.foo:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ for from in \"foo\" \"bar\" \"legacy\"; do for to in \"foo\" \"bar\" \"legacy\"; do kubectl exec \"$(kubectl get pod -l app=curl -n ${from} -o jsonpath={.items..metadata.name})\" -c curl -n ${from} -- curl -s \"http://httpbin.${to}:8000/ip\" -s -o /dev/null -w \"curl.${from} to httpbin.${to}: %{http_code}\\n\"; done; done\n```\n\n----------------------------------------\n\nTITLE: Configuring Hugo Front Matter for Non-Rendered Directory\nDESCRIPTION: This YAML front matter configuration tells Hugo not to render the files in the current directory tree as normal pages on the site. It uses the 'headless' property set to true to achieve this.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nheadless: true\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Case-Insensitive Path Normalization with EnvoyFilter\nDESCRIPTION: This EnvoyFilter resource adds a Lua filter to normalize request paths to lowercase, enabling case-insensitive path matching for authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: ingress-case-insensitive\n  namespace: istio-system\nspec:\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: GATEWAY\n      listener:\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n    patch:\n      operation: INSERT_FIRST\n      value:\n        name: envoy.lua\n        typed_config:\n            \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n            inlineCode: |\n              function envoy_on_request(request_handle)\n                local path = request_handle:headers():get(\":path\")\n                request_handle:headers():replace(\":path\", string.lower(path))\n              end\n```\n\n----------------------------------------\n\nTITLE: Verifying Egress Gateway Deployment\nDESCRIPTION: This command checks if the egress gateway pod is running correctly with two containers (Envoy proxy and SNI proxy).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod -l istio=egressgateway-with-sni-proxy -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Testing Pod with Manual Sidecar Injection\nDESCRIPTION: Command to manually inject the Istio sidecar before deploying the curl testing pod, used when automatic sidecar injection is not enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Istio Release Note Frontmatter in YAML\nDESCRIPTION: YAML frontmatter metadata for the Istio 1.23.3 release note document, specifying title, publication date, and version information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.23.x/announcing-1.23.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.23.3\nlinktitle: 1.23.3\nsubtitle: Patch Release\ndescription: Istio 1.23.3 patch release.\npublishdate: 2024-10-24\nrelease: 1.23.3\n---\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ingress Gateway Logs\nDESCRIPTION: This command obtains logs from the Istio ingress gateway, which handles incoming traffic to the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l istio=ingressgateway -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OpenShift-Ambient Profile using istioctl\nDESCRIPTION: Command to install Istio in ambient mode on OpenShift using istioctl with the openshift-ambient profile, which automatically configures all necessary OpenShift-specific settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=openshift-ambient --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Configuring CryptoMB Provider in Istio Installation\nDESCRIPTION: YAML configuration for an IstioOperator resource that enables the CryptoMB provider for cryptographic operations. It configures the ingress gateway with CryptoMB support and sets up sidecar injection templates for the CryptoMB provider.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/cryptomb-privatekeyprovider/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  components:\n    ingressGateways:\n    - enabled: true\n      name: istio-ingressgateway\n      k8s:\n        # this controls the SDS service which configures ingress gateway\n        podAnnotations:\n          proxy.istio.io/config: |\n            privateKeyProvider:\n              cryptomb:\n                pollDelay: 1ms\n  values:\n    # Annotate pods with\n    #     inject.istio.io/templates: sidecar, cryptomb\n    sidecarInjectorWebhook:\n      templates:\n        cryptomb: |\n          spec:\n            containers:\n            - name: istio-proxy\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio 1.10 Release Post\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.10 release announcement page, including title, publish date, release version, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.10\nlinktitle: \"1.10\"\nsubtitle: Major Update\ndescription: Istio 1.10 release announcement.\npublishdate: 2021-05-18\nrelease: 1.10.0\nskip_list: true\naliases:\n    - /news/announcing-1.10\n    - /news/announcing-1.10.0\n---\n```\n\n----------------------------------------\n\nTITLE: Generating a Minimal Istio Traffic Management Installation with Helm\nDESCRIPTION: Command to generate a minimal Istio installation YAML file using Helm, enabling only traffic management components (ingress gateway, egress gateway, and Pilot).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template install/kubernetes/helm/istio \\\n  --name istio \\\n  --namespace istio-system \\\n  --set security.enabled=false \\\n  --set galley.enabled=false \\\n  --set sidecarInjectorWebhook.enabled=false \\\n  --set mixer.enabled=false \\\n  --set prometheus.enabled=false \\\n  --set pilot.sidecar=false > istio-minimal.yaml\n```\n\n----------------------------------------\n\nTITLE: Deployment with Invalid UID Configuration in Istio\nDESCRIPTION: Example of an invalid Kubernetes Deployment that uses UID 1337 at both Pod and container levels. This configuration causes conflicts with Istio's proxy container which reserves this UID for itself.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0144/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: deploy-con-sec-uid\n  labels:\n    app: helloworld\n    version: v1\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: helloworld\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: helloworld\n        version: v1\n    spec:\n      securityContext:\n        runAsUser: 1337\n      containers:\n      - name: helloworld\n        image: docker.io/istio/examples-helloworld-v1\n        securityContext:\n          runAsUser: 1337\n        resources:\n          requests:\n            cpu: \"100m\"\n        imagePullPolicy: IfNotPresent #Always\n        ports:\n        - containerPort: 5000\n```\n\n----------------------------------------\n\nTITLE: Updating Kops Cluster Configuration\nDESCRIPTION: Commands to update the Kops cluster with the new configuration. The first command previews the changes, while the second command applies them.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kops/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kops update cluster\n$ kops update cluster --yes\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio 1.3.x Release Announcements Page with YAML Frontmatter\nDESCRIPTION: YAML frontmatter that configures a page for displaying Istio 1.3.x release announcements. The configuration sets the page title, description, weight for navigation ordering, and specifies that items should be listed by publish date using a release-grid layout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.3.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.3.x Releases\ndescription: Announcements for the 1.3 release and its associated patch releases.\nweight: 26\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Detecting Kubernetes Gateway CRD Installation\nDESCRIPTION: This command checks if the Kubernetes Gateway CRD is installed in the cluster. It's used to determine if the system might be vulnerable to the described privilege escalation attack.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2022-002/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crd gateways.gateway.networking.k8s.io\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from cluster1 using Helm\nDESCRIPTION: Removes Istio components from cluster1 by deleting the Helm releases for istiod and istio-base, followed by removing the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n$ helm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Ingress Gateway Installation\nDESCRIPTION: Checks the status of pods in the istio-system namespace of the external cluster to confirm that the ingress gateway and istiod are running.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get po -n istio-system --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Testing JWT Authentication\nDESCRIPTION: Commands to test JWT authentication with invalid and valid tokens.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/claim-to-header/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl \"http://httpbin.foo:8000/headers\" -sS -o /dev/null -H \"Authorization: Bearer invalidToken\" -w \"%{http_code}\\n\"\n$ TOKEN=$(curl {{< github_file >}}/security/tools/jwt/samples/demo.jwt -s) && echo \"$TOKEN\" | cut -d '.' -f2 - | base64 --decode -\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl \"http://httpbin.foo:8000/headers\" -sS -o /dev/null -H \"Authorization: Bearer $TOKEN\" -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Checking Scaled Pod Status\nDESCRIPTION: Displays the status of all pods after scaling, showing three pods for each microservice of the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\nNAME                            READY   STATUS    RESTARTS   AGE\ndetails-v1-6d86fd9949-fr59p     1/1     Running   0          50s\ndetails-v1-6d86fd9949-mksv7     1/1     Running   0          50s\ndetails-v1-6d86fd9949-q8rrf     1/1     Running   0          1m\nproductpage-v1-c9965499-hwhcn   1/1     Running   0          50s\nproductpage-v1-c9965499-nccwq   1/1     Running   0          50s\nproductpage-v1-c9965499-tjdjx   1/1     Running   0          1m\nratings-v1-7bf577cb77-cbdsg     1/1     Running   0          50s\nratings-v1-7bf577cb77-cz6jm     1/1     Running   0          50s\nratings-v1-7bf577cb77-pq9kg     1/1     Running   0          1m\nreviews-v1-77c65dc5c6-5wt8g     1/1     Running   0          49s\nreviews-v1-77c65dc5c6-kjvxs     1/1     Running   0          1m\nreviews-v1-77c65dc5c6-r55tl     1/1     Running   0          49s\n```\n\n----------------------------------------\n\nTITLE: Response output for unauthorized request\nDESCRIPTION: The output of the unauthorized request showing the custom response body \"Unauthorized Request\" and the 403 status code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_8\n\nLANGUAGE: plain\nCODE:\n```\nUnauthorized Request\nhttp_code=403\n```\n\n----------------------------------------\n\nTITLE: Updating Deny Policy with Header Conditions\nDESCRIPTION: Updates the authorization policy to deny GET requests only if x-token header is not 'admin'\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-deny/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-method-get\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        methods: [\"GET\"]\n    when:\n    - key: request.headers[x-token]\n      notValues: [\"admin\"]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Previous Istio Version in Plain Text\nDESCRIPTION: This snippet uses a custom shortcode to display the previous version of Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/boilerplates/args.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=istio_previous_version >}}\n{{< istio_previous_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Deny Authorization Policy in Istio\nDESCRIPTION: YAML configuration for an authorization policy that denies requests from sources outside the 'foo' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin-deny\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: DENY\n rules:\n - from:\n   - source:\n       notNamespaces: [\"foo\"]\n```\n\n----------------------------------------\n\nTITLE: Inspecting Ingress Host and Port in Istio\nDESCRIPTION: Commands to retrieve and display the Ingress host and secure port values in Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n istio-system\n$ echo \"INGRESS_HOST=$INGRESS_HOST, SECURE_INGRESS_PORT=$SECURE_INGRESS_PORT\"\n```\n\n----------------------------------------\n\nTITLE: NoMatchingWorkloadsFound Error Message in Istio\nDESCRIPTION: The warning message shown when an AuthorizationPolicy cannot be applied because no matching workloads have the specified labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0127/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0127] (AuthorizationPolicy httpbin-nopods.httpbin) No matching workloads for this resource with the following labels: app=bogus-label,version=v1\n```\n\n----------------------------------------\n\nTITLE: Checking HelloWorld Endpoints in Istio Cluster\nDESCRIPTION: Command to inspect the endpoints that the curl service has for helloworld using istioctl proxy-config.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nistioctl --context $CTX_CLUSTER1 proxy-config endpoint curl-dd98b5f48-djwdw.sample | grep helloworld\n```\n\n----------------------------------------\n\nTITLE: Applying HTTP Abort Fault Injection Rule in Istio\nDESCRIPTION: Command to apply a virtual service that injects an HTTP 500 error for calls to the ratings service for user 'jason'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/fault-injection/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-ratings-test-abort.yaml@\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo Ratings v2 in Kubernetes\nDESCRIPTION: Deploys the specification for the ratings v2 microservice that uses MongoDB in the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo-ratings-v2.yaml@\n```\n\n----------------------------------------\n\nTITLE: Response output for unauthorized request\nDESCRIPTION: The output of the unauthorized request showing the custom response body \"Unauthorized Request\" and the 403 status code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_8\n\nLANGUAGE: plain\nCODE:\n```\nUnauthorized Request\nhttp_code=403\n```\n\n----------------------------------------\n\nTITLE: Example Istio Proxy Log Output for mTLS Request\nDESCRIPTION: This is an example log output from the Istio proxy showing a successful request through mutual TLS origination. The log shows that the original HTTP request was upgraded to HTTPS and sent to the target service on port 443.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_20\n\nLANGUAGE: plain\nCODE:\n```\n[2022-05-19T10:01:06.795Z] \"GET / HTTP/1.1\" 200 - via_upstream - \"-\" 0 615 1 0 \"-\" \"curl/7.83.1-DEV\" \"96e8d8a7-92ce-9939-aa47-9f5f530a69fb\" \"my-nginx.mesh-external.svc.cluster.local:443\" \"10.107.176.65:443\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Secrets for Cluster Issuers\nDESCRIPTION: Checks if the secrets for each cluster issuer have been created in the cert-manager namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get secret -n cert-manager -l controller.cert-manager.io/fao=true\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host and Ports with External Load Balancer\nDESCRIPTION: Exports environment variables for the ingress host IP and ports by querying the Kubernetes service for the Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\nexport INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"http2\")].port}')\nexport SECURE_INGRESS_PORT=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name==\"https\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding ControlZ Interface Using Istioctl\nDESCRIPTION: Command to port-forward the ControlZ endpoint of an Istiod deployment to localhost for accessing the web interface through a local browser.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/controlz/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard controlz deployment/istiod.istio-system\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Egress Gateway Configuration\nDESCRIPTION: Commands to delete logging and policy check configurations in Istio system namespace, removing egress control elements like logentry, stdio handlers, rules, and custom checkers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete logentry egress-access -n istio-system\n$ kubectl delete stdio egress-error-logger -n istio-system\n$ kubectl delete stdio egress-access-logger -n istio-system\n$ kubectl delete rule handle-politics -n istio-system\n$ kubectl delete rule handle-cnn-access -n istio-system\n$ kubectl delete -n istio-system listchecker path-checker\n$ kubectl delete -n istio-system listentry request-path\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio 1.1.9 Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.1.9 release announcement page, including title, publication date, release version, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1.9/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.1.9\nlinktitle: 1.1.9\nsubtitle: Patch Release\ndescription: Istio 1.1.9 patch release.\npublishdate: 2019-06-17\nrelease: 1.1.9\naliases:\n    - /about/notes/1.1.9\n    - /blog/2019/announcing-1.1.9\n    - /news/2019/announcing-1.1.9\n    - /news/announcing-1.1.9\n---\n```\n\n----------------------------------------\n\nTITLE: EnvoyFilter with Absolute Operation (INSERT_FIRST)\nDESCRIPTION: The recommended solution using the absolute patch operation INSERT_FIRST to add a Lua filter. This approach ensures that filter application order is predictable and doesn't depend on the presence of other filters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0151/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-relative\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews2\n  configPatches:\n    # The first patch adds the Lua filter to the listener/http connection manager\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND\n      listener:\n        portNumber: 8080\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n            subFilter:\n              name: \"envoy.filters.http.router\"\n    patch:\n      operation: INSERT_FIRST\n      value: # Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              5000)\n            end\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables for Ingress\nDESCRIPTION: Commands to configure environment variables for ingress host and port using Gateway API configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl wait --for=condition=programmed gtw tcp-echo-gateway -n istio-io-tcp-traffic-shifting\n$ export INGRESS_HOST=$(kubectl get gtw tcp-echo-gateway -n istio-io-tcp-traffic-shifting -o jsonpath='{.status.addresses[0].value}')\n$ export TCP_INGRESS_PORT=$(kubectl get gtw tcp-echo-gateway -n istio-io-tcp-traffic-shifting -o jsonpath='{.spec.listeners[?(@.name==\"tcp-31400\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Removing ValidatingWebhookConfiguration in Kubernetes\nDESCRIPTION: Deletes the ValidatingWebhookConfiguration Custom Resource for Istio Galley in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/announcing-1.6/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ValidatingWebhookConfiguration istio-galley -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Querying Reviews Service via Istio Ingress Gateway in Bash\nDESCRIPTION: This snippet shows how to send requests to the reviews service through the Istio ingress gateway. It demonstrates how to access the service with the 50/50 traffic split configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ for i in `seq 4`; do \\\n  kubectl exec -it $SLEEP_POD curl http://istio-ingressgateway.istio-system/reviews/0 | \\\n  jq '.reviews|.[]|.rating?'; \\\n  done\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from cluster2 using Helm\nDESCRIPTION: Removes Istio components from cluster2 by deleting the Helm releases for istiod and istio-base, following the same process as for cluster1.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n$ helm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Generating Kubernetes Configuration File for Participants in Bash\nDESCRIPTION: Creates a Kubernetes configuration file for each participant, specifying cluster details, service account, credentials, and namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./${NAMESPACE}-user-config.yaml\napiVersion: v1\nkind: Config\npreferences: {}\n\nclusters:\n- cluster:\n    certificate-authority-data: $(kubectl get secret $(kubectl get sa ${NAMESPACE}-user -n $NAMESPACE -o jsonpath={.secrets..name}) -n $NAMESPACE -o jsonpath='{.data.ca\\.crt}')\n    server: $(kubectl config view -o jsonpath=\"{.clusters[?(.name==\\\"$(kubectl config view -o jsonpath=\"{.contexts[?(.name==\\\"$(kubectl config current-context)\\\")].context.cluster}\")\\\")].cluster.server}\")\n  name: ${NAMESPACE}-cluster\n\nusers:\n- name: ${NAMESPACE}-user\n  user:\n    as-user-extra: {}\n    client-key-data: $(kubectl get secret $(kubectl get sa ${NAMESPACE}-user -n $NAMESPACE -o jsonpath={.secrets..name}) -n $NAMESPACE -o jsonpath='{.data.ca\\.crt}')\n    token: $(kubectl get secret $(kubectl get sa ${NAMESPACE}-user -n $NAMESPACE -o jsonpath={.secrets..name}) -n $NAMESPACE -o jsonpath={.data.token} | base64 --decode)\n\ncontexts:\n- context:\n    cluster: ${NAMESPACE}-cluster\n    namespace: ${NAMESPACE}\n    user: ${NAMESPACE}-user\n  name: ${NAMESPACE}\n\ncurrent-context: ${NAMESPACE}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio TLS Ingress Gateway Resources\nDESCRIPTION: Commands to delete secrets, certificates, keys, and sample services used in the Istio TLS Ingress Gateway setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -n istio-system secret httpbin-credential helloworld-credential\n$ rm -rf ./example_certs1 ./example_certs2\n$ kubectl delete -f samples/httpbin/httpbin.yaml\n$ kubectl delete deployment helloworld-v1\n$ kubectl delete service helloworld\n```\n\n----------------------------------------\n\nTITLE: Starting Minikube Tunnel for Istio Ingress Gateway\nDESCRIPTION: Creates a Minikube tunnel to provide an external load balancer for the Istio ingress gateway service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nminikube tunnel\n```\n\n----------------------------------------\n\nTITLE: Verifying Proxy Sidecar Version After Pod Restart in Bash\nDESCRIPTION: This command checks the proxy status after pod restart, confirming that the workload is now connected to the new Istio control plane version 1.24.3.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status\nNAME                              CLUSTER        CDS              LDS              EDS              RDS              ECDS        ISTIOD                                      VERSION\nsleep-6f87fcf556-k9nh9.sample     Kubernetes     SYNCED (29s)     SYNCED (29s)     SYNCED (29s)     SYNCED (29s)     IGNORED     istiod-default-v1-24-3-68df97dfbb-v7ndm     1.24.3\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Cluster and ALB Configuration in Bash\nDESCRIPTION: These commands store the cluster name, ALB ingress domain, and ALB secret in environment variables for later use in the configuration process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export CLUSTER_NAME=<your cluster name>\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ ibmcloud ks cluster get --cluster $CLUSTER_NAME | grep Ingress\nIngress Subdomain:              <your ALB ingress domain>\nIngress Secret:                 <your ALB secret>\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ export ALB_INGRESS_DOMAIN=<your ALB ingress domain>\n$ export ALB_SECRET=<your ALB secret>\n```\n\n----------------------------------------\n\nTITLE: Deploying a Workload with Istio Injection\nDESCRIPTION: This snippet shows how to label a namespace for Istio injection and deploy a sample workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/native-sidecars/index.md#2025-04-08_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl label namespace default istio-injection=enabled\n$ kubectl apply -f samples/sleep/sleep.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio AuthorizationPolicy\nDESCRIPTION: Defines an Istio AuthorizationPolicy to protect services using OPA for external authorization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: my-opa-authz\n  namespace: istio-system # This will enforce the policy in all mesh config namespaces belonging to istio-system\nspec:\n  selector:\n    matchLabels:\n      ext-authz: enabled\n  action: CUSTOM\n  provider:\n    name: \"opa.local\"\n  rules: [{}] # Empty rules, it will apply to the selector with ext-authz: enabled label\nEOF\n```\n\n----------------------------------------\n\nTITLE: Analyzing an Entire Directory\nDESCRIPTION: Command to analyze all configuration files in the networking directory of the Bookinfo sample application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze samples/bookinfo/networking/\n```\n\n----------------------------------------\n\nTITLE: Verifying Client Credential Status in Istio Sidecar\nDESCRIPTION: This command verifies that the client credential is supplied to the sidecar and is active. It uses istioctl to check the secrets configuration of the curl deployment and filters for the client-credential entries.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config secret deploy/curl | grep client-credential\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster 2 Service Entry in Istio\nDESCRIPTION: YAML configuration for a ServiceEntry in Cluster 2 showing how the payments service is accessed with different endpoint configurations for local and remote access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: payments.global-se\nspec:\n  addresses:\n  - 240.0.0.10\n  endpoints:\n  - address: ef39xf...us-east-2.elb.amazonaws.com\n    locality: us-east-2\n    ports:\n      http: 15443\n  - address: payments.default.svc.cluster.local\n    locality: us-west-2\n    ports:\n      http: 80\n  hosts:\n  - payments.global\n  location: MESH_INTERNAL\n  ports:\n  - name: http\n    number: 80\n    protocol: http\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Testing POST Endpoint with cURL\nDESCRIPTION: Command to test the POST /ratings/{productID} endpoint using cURL to update ratings\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/single/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -X POST localhost:9080/ratings/7 -d '{\"Reviewer1\":1,\"Reviewer2\":1}'\n{\"id\":7,\"ratings\":{\"Reviewer1\":1,\"Reviewer2\":1}}\n```\n\n----------------------------------------\n\nTITLE: Checking DLB Device Resources in Kubernetes Nodes\nDESCRIPTION: This command describes the nodes in the Kubernetes cluster and filters for DLB resources, showing the available DLB devices.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl describe nodes | grep dlb.intel.com/pf\n```\n\n----------------------------------------\n\nTITLE: Checking Kiali Login Token Configuration\nDESCRIPTION: This command checks if the Kiali login token is unset by looking for the LOGIN_TOKEN_SIGNING_KEY in the deployment configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get deploy kiali -n istio-system -o yaml | grep LOGIN_TOKEN_SIGNING_KEY\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Extension Provider for Kyverno\nDESCRIPTION: YAML snippet defining the extensionProviders configuration that points to the Kyverno Authz server installation in the Istio mesh configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n[...]\n    extensionProviders:\n    - name: kyverno-authz-server\n      envoyExtAuthzGrpc:\n        service: kyverno-authz-server.kyverno.svc.cluster.local\n        port: '9081'\n[...]\n```\n\n----------------------------------------\n\nTITLE: Configuring Wildcard Host for Ingress Gateway\nDESCRIPTION: Kubernetes manifest to update the Gateway and VirtualService configurations with a wildcard host for browser access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  # The selector matches the ingress gateway pod labels.\n  # If you installed Istio using Helm following the standard documentation, this would be \"istio=ingress\"\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - httpbin-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /headers\n    route:\n    - destination:\n        port:\n          number: 8000\n        host: httpbin\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying a Pod with Network Request in Init Container\nDESCRIPTION: This YAML snippet defines a pod with an init container that makes a network request, demonstrating how the new sidecar feature allows init containers to access the network.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/native-sidecars/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: sleep\nspec:\n  initContainers:\n  - name: check-traffic\n    image: istio/base\n    command:\n    - curl\n    - httpbin.org/get\n  containers:\n  - name: sleep\n    image: istio/base\n    command: [\"/bin/sleep\", \"infinity\"]\n```\n\n----------------------------------------\n\nTITLE: Removing Application Routing Rules in Istio\nDESCRIPTION: Command to clean up by removing the application routing rules applied earlier in the tutorial.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/fault-injection/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Displaying Previous Istio Version in Documentation\nDESCRIPTION: This snippet is a placeholder for displaying the previous version of Istio. It uses a custom shortcode or template syntax to insert the version number dynamically.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/boilerplates/args.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=istio_previous_version >}}\n{{< istio_previous_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Upgrading Istiod with Revision\nDESCRIPTION: Installs a new revision of the Istio control plane alongside the existing one\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod-\"$REVISION\" istio/istiod -n istio-system --set revision=\"$REVISION\" --set profile=ambient --wait\n```\n\n----------------------------------------\n\nTITLE: Defining Tabset Structure for Istio Ecosystem in Markdown\nDESCRIPTION: This snippet creates a tabbed structure to display different categories of the Istio ecosystem: providers, professional services, and integrations. It uses custom shortcodes to render the content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/ecosystem/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tabset category-name=\"ecosystem-type\" class=\"tabset--ecosystem\" forget-tab=true >}}\n\n{{< tab\n    name=\"providers\"\n    category-value=\"providers\"\n    description=\"Many companies build platforms and services that install, manage, and implement Istio for you. In fact, Istio implementations are built in to many providers' Kubernetes services.\"\n>}}\n\n{{< companies items=\"providers\">}}\n\n{{< /tab >}}\n\n{{< tab\n    name=\"pro services\"\n    category-value=\"services\"\n    description=\"There are many people who can help you set up your Istio configuration. Here are some experts who can implement Istio for you, matching its capabilities to your requirements.\"\n>}}\n\n{{< interactive_panels items=\"pro_services\" >}}\n\n{{< /tab >}}\n\n{{< tab\n    name=\"integrations\"\n    category-value=\"integrations\"\n    description=\"Istio is a vibrant part of the cloud native stack. These are some of the projects and software that integrate with Istio to enable added functionality.\"\n>}}\n\n{{< interactive_panels items=\"integrations\" >}}\n\n{{< /tab >}}\n\n{{< /tabset >}}\n\n{{< interactive_panel_modal >}}\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for *.com Domain\nDESCRIPTION: Defines a ServiceEntry resource to allow external access to *.com domains over TLS and MongoDB ports.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: mongo\nspec:\n  hosts:\n  - \"*.com\"\n  ports:\n  - number: 443\n    name: tls\n    protocol: TLS\n  - number: $MONGODB_PORT\n    name: tls-mongodb\n    protocol: TLS\n  location: MESH_EXTERNAL\n```\n\n----------------------------------------\n\nTITLE: Configuring Cluster 2 Service Entry in Istio\nDESCRIPTION: YAML configuration for a ServiceEntry in Cluster 2 showing how the payments service is accessed with different endpoint configurations for local and remote access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: payments.global-se\nspec:\n  addresses:\n  - 240.0.0.10\n  endpoints:\n  - address: ef39xf...us-east-2.elb.amazonaws.com\n    locality: us-east-2\n    ports:\n      http: 15443\n  - address: payments.default.svc.cluster.local\n    locality: us-west-2\n    ports:\n      http: 80\n  hosts:\n  - payments.global\n  location: MESH_INTERNAL\n  ports:\n  - name: http\n    number: 80\n    protocol: http\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Updating a Revision Tag to a New Control Plane Version\nDESCRIPTION: Command to update the 'prod-stable' tag to point to the newer '1-10-0' revision. This switches all namespaces using the stable tag to the new control plane version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x revision tag set prod-stable --revision 1-10-0 --overwrite\n```\n\n----------------------------------------\n\nTITLE: Defining Kubernetes Gateway Pod in YAML\nDESCRIPTION: Demonstrates the YAML configuration for a Kubernetes Gateway pod that might trigger the IneffectiveSelector warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0166/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  annotations:\n    istio.io/rev: default\n  labels:\n    gateway.networking.k8s.io/gateway-name: bookinfo-gateway\n  name: bookinfo-gateway-istio-6ff4cf9645-xbqmc\n  namespace: default\nspec:\n  containers:\n  - image: proxyv2:1.21.0\n    name: istio-proxy\n```\n\n----------------------------------------\n\nTITLE: Updating Revision Tag to New Version\nDESCRIPTION: Command to update the 'stable' revision tag to point to the new 1.10.0 revision\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x revision tag set stable --revision 1-10-0 --overwrite\n```\n\n----------------------------------------\n\nTITLE: Checking Kiali Login Token Configuration\nDESCRIPTION: This command checks if the Kiali login token is unset by looking for the LOGIN_TOKEN_SIGNING_KEY in the deployment configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get deploy kiali -n istio-system -o yaml | grep LOGIN_TOKEN_SIGNING_KEY\n```\n\n----------------------------------------\n\nTITLE: Defining Gateway Configuration for External Istiod in YAML\nDESCRIPTION: Creates Gateway, VirtualService, and DestinationRule resources to route traffic from the Ingress Gateway to the external control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF > external-istiod-gw.yaml\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: external-istiod-gw\n  namespace: external-istiod\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n    - port:\n        number: 15012\n        protocol: https\n        name: https-XDS\n      tls:\n        mode: SIMPLE\n        credentialName: $SSL_SECRET_NAME\n      hosts:\n      - $EXTERNAL_ISTIOD_ADDR\n    - port:\n        number: 15017\n        protocol: https\n        name: https-WEBHOOK\n      tls:\n        mode: SIMPLE\n        credentialName: $SSL_SECRET_NAME\n      hosts:\n      - $EXTERNAL_ISTIOD_ADDR\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n   name: external-istiod-vs\n   namespace: external-istiod\nspec:\n    hosts:\n    - $EXTERNAL_ISTIOD_ADDR\n    gateways:\n    - external-istiod-gw\n    http:\n    - match:\n      - port: 15012\n      route:\n      - destination:\n          host: istiod.external-istiod.svc.cluster.local\n          port:\n            number: 15012\n    - match:\n      - port: 15017\n      route:\n      - destination:\n          host: istiod.external-istiod.svc.cluster.local\n          port:\n            number: 443\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: external-istiod-dr\n  namespace: external-istiod\nspec:\n  host: istiod.external-istiod.svc.cluster.local\n  trafficPolicy:\n    portLevelSettings:\n    - port:\n        number: 15012\n      tls:\n        mode: SIMPLE\n      connectionPool:\n        http:\n          h2UpgradePolicy: UPGRADE\n    - port:\n        number: 443\n      tls:\n        mode: SIMPLE\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace from Cluster2\nDESCRIPTION: Command to remove the istio-system namespace from cluster2 after uninstalling Istio components via Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Generating Certificate and Key for httpbin.example.com\nDESCRIPTION: Creates a certificate and private key for the httpbin.example.com domain using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out example_certs1/httpbin.example.com.csr -newkey rsa:2048 -nodes -keyout example_certs1/httpbin.example.com.key -subj \"/CN=httpbin.example.com/O=httpbin organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example_certs1/example.com.crt -CAkey example_certs1/example.com.key -set_serial 0 -in example_certs1/httpbin.example.com.csr -out example_certs1/httpbin.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands\nDESCRIPTION: Commands to remove all resources created during the tutorial including routing rules, applications, and namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/curl/curl.yaml@ -n istio-io-tcp-traffic-shifting\n$ kubectl delete -f @samples/tcp-echo/tcp-echo-services.yaml@ -n istio-io-tcp-traffic-shifting\n$ kubectl delete namespace istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Verbose Kubernetes Client Logging\nDESCRIPTION: Added verbose logging option for client-go operations using the vklog flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/change-notes/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nistioctl --vklog\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding Istio Ingress Gateway\nDESCRIPTION: Sets up port forwarding for the Istio ingress gateway service to allow external access for testing purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system port-forward svc/istio-ingressgateway 15443:443\n```\n\n----------------------------------------\n\nTITLE: TLS Mismatch: Gateway with TLS Termination and TLS Virtual Service\nDESCRIPTION: YAML configuration showing a TLS mismatch where the gateway is terminating TLS while the virtual service is configured with TLS routing. This leads to 404 errors as routing rules are evaluated after TLS termination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n      - \"*\"\n    tls:\n      mode: SIMPLE\n      credentialName: sds-credential\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"*.example.com\"\n  gateways:\n  - istio-system/gateway\n  tls:\n  - match:\n    - sniHosts:\n      - \"*.example.com\"\n    route:\n    - destination:\n        host: httpbin.org\n```\n\n----------------------------------------\n\nTITLE: Advanced Kyverno AuthorizationPolicy with Header Manipulation\nDESCRIPTION: Creates an advanced Kyverno AuthorizationPolicy that can modify request/response headers, change response bodies, and inject dynamic metadata based on different conditions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: envoy.kyverno.io/v1alpha1\nkind: AuthorizationPolicy\nmetadata:\n  name: demo-policy.example.com\nspec:\n  variables:\n  - name: force_authorized\n    expression: object.attributes.request.http.headers[?\"x-force-authorized\"].orValue(\"\") in [\"enabled\", \"true\"]\n  - name: force_unauthenticated\n    expression: object.attributes.request.http.headers[?\"x-force-unauthenticated\"].orValue(\"\") in [\"enabled\", \"true\"]\n  - name: metadata\n    expression: '{\"my-new-metadata\": \"my-new-value\"}'\n  authorizations:\n    # 如果 force_unauthenticated -> 401\n  - expression: >\n      variables.force_unauthenticated\n        ? envoy\n            .Denied(401)\n            .WithBody(\"Authentication Failed\")\n            .Response()\n        : null\n    # 如果 force_authorized -> 200\n  - expression: >\n      variables.force_authorized\n        ? envoy\n            .Allowed()\n            .WithHeader(\"x-validated-by\", \"my-security-checkpoint\")\n            .WithoutHeader(\"x-force-authorized\")\n            .WithResponseHeader(\"x-add-custom-response-header\", \"added\")\n            .Response()\n            .WithMetadata(variables.metadata)\n        : null\n    # 否则 -> 403\n  - expression: >\n      envoy\n        .Denied(403)\n        .WithBody(\"Unauthorized Request\")\n        .Response()\nEOF\n```\n\n----------------------------------------\n\nTITLE: Downloading Service Files with cURL\nDESCRIPTION: Commands to create a directory and download the ratings service JavaScript file and package.json using cURL\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/single/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir ratings\n$ cd ratings\n$ curl -s {{< github_file >}}/samples/bookinfo/src/ratings/ratings.js -o ratings.js\n$ curl -s {{< github_file >}}/samples/bookinfo/src/ratings/package.json -o package.json\n```\n\n----------------------------------------\n\nTITLE: Running Multicluster Documentation Tests\nDESCRIPTION: Command to execute multicluster documentation tests, specifying the container image details and kubeconfig paths for the three clusters in the test environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nHUB=gcr.io/istio-testing TAG=latest DOCTEST_KUBECONFIG='/work/artifacts/kubeconfig/primary,/work/artifacts/kubeconfig/remote,/work/artifacts/kubeconfig/cross-network-primary' make doc.test.multicluster TEST=./setup/install/external-controlplane/gtwapi_test.sh\n```\n\n----------------------------------------\n\nTITLE: Kubernetes NGINX Deployment Configuration\nDESCRIPTION: YAML configuration for deploying NGINX with SSL certificates as a Kubernetes service and deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-nginx\n  labels:\n    run: my-nginx\nspec:\n  ports:\n  - port: 443\n    protocol: TCP\n  selector:\n    run: my-nginx\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-nginx\nspec:\n  selector:\n    matchLabels:\n      run: my-nginx\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        run: my-nginx\n        sidecar.istio.io/inject: \"true\"\n    spec:\n      containers:\n      - name: my-nginx\n        image: nginx\n        ports:\n        - containerPort: 443\n        volumeMounts:\n        - name: nginx-config\n          mountPath: /etc/nginx\n          readOnly: true\n        - name: nginx-server-certs\n          mountPath: /etc/nginx-server-certs\n          readOnly: true\n      volumes:\n      - name: nginx-config\n        configMap:\n          name: nginx-configmap\n      - name: nginx-server-certs\n        secret:\n          secretName: nginx-server-certs\n```\n\n----------------------------------------\n\nTITLE: Setting Gateway URL Environment Variable\nDESCRIPTION: This bash command sets a local GATEWAY_URL environment variable based on the Istio ingress gateway's IP address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ export GATEWAY_URL=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n```\n\n----------------------------------------\n\nTITLE: Kubernetes NGINX Deployment Configuration\nDESCRIPTION: YAML configuration for deploying NGINX with SSL certificates as a Kubernetes service and deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-nginx\n  labels:\n    run: my-nginx\nspec:\n  ports:\n  - port: 443\n    protocol: TCP\n  selector:\n    run: my-nginx\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-nginx\nspec:\n  selector:\n    matchLabels:\n      run: my-nginx\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        run: my-nginx\n        sidecar.istio.io/inject: \"true\"\n    spec:\n      containers:\n      - name: my-nginx\n        image: nginx\n        ports:\n        - containerPort: 443\n        volumeMounts:\n        - name: nginx-config\n          mountPath: /etc/nginx\n          readOnly: true\n        - name: nginx-server-certs\n          mountPath: /etc/nginx-server-certs\n          readOnly: true\n      volumes:\n      - name: nginx-config\n        configMap:\n          name: nginx-configmap\n      - name: nginx-server-certs\n        secret:\n          secretName: nginx-server-certs\n```\n\n----------------------------------------\n\nTITLE: Removing Alpha Authentication Policies with kubectl in Istio\nDESCRIPTION: Command to safely delete all alpha authentication policies after replacing them with PeerAuthentication and RequestAuthentication in Istio 1.5. This removes both namespace-scoped policies and mesh-wide policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.5.x/announcing-1.5/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete policies.authentication.istio.io --all-namespaces --all\n$ kubectl delete meshpolicies.authentication.istio.io --all\n```\n\n----------------------------------------\n\nTITLE: Applying Base Istio Operator Configuration\nDESCRIPTION: Bash command to apply the base Istio Operator configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f operator.yaml\n```\n\n----------------------------------------\n\nTITLE: Accessing Kiali Dashboard\nDESCRIPTION: Opens the Kiali dashboard for visualizing the service mesh topology and analyzing traffic flow.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\nistioctl dashboard kiali\n```\n\n----------------------------------------\n\nTITLE: Configuring Subset Traffic Policy in Istio DestinationRule\nDESCRIPTION: Example of a DestinationRule that defines a traffic policy for a specific subset of the reviews service. This configuration has a limitation where the policy will not be applied unless explicitly routed to through a VirtualService.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n    trafficPolicy:\n      connectionPool:\n        tcp:\n          maxConnections: 100\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace-Level Deny-All Policy\nDESCRIPTION: Final step in migration: creating a deny-all v1beta1 AuthorizationPolicy for the foo namespace to match the original ClusterRbacConfig behavior. This ensures any traffic not explicitly allowed by other policies is denied.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: deny-all\n namespace: foo\nspec:\n {}\n```\n\n----------------------------------------\n\nTITLE: Starting the Node.js Service\nDESCRIPTION: Command to start the ratings service on port 9080 using npm start\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/single/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm start 9080\n> @ start /tmp/ratings\n> node ratings.js \"9080\"\nServer listening on: http://0.0.0.0:9080\n```\n\n----------------------------------------\n\nTITLE: Configuring Telemetry with Correct TargetRef for Kubernetes Gateway in YAML\nDESCRIPTION: Shows the correct way to configure a Telemetry resource for a Kubernetes Gateway using the targetRef field, resolving the IneffectiveSelector issue.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0166/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: telemetry-example\n  namespace: default\nspec:\n  tracing:\n  - randomSamplingPercentage: 10.00\n  targetRef:\n    group: gateway.networking.k8s.io\n    kind: Gateway\n    name: bookinfo-gateway\n```\n\n----------------------------------------\n\nTITLE: Sidecar Mode Security Context\nDESCRIPTION: Documentation block explaining the security implications of a compromised workload in sidecar mode, including potential attack vectors and limitations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/deployment/security-model/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nIn the sidecar model, the proxy is co-located with the pod, and runs within the same trust boundary.\nA compromised application can tamper with the proxy through the admin API or other surfaces, including exfiltration of private key material, allowing another agent to impersonate the workload.\nIt should be assumed that a compromised workload also includes a compromise of the sidecar proxy.\n```\n\n----------------------------------------\n\nTITLE: Listing Installed Istio Components\nDESCRIPTION: Command to verify the installation by listing all Istio Helm deployments in the istio-system namespace. Shows the revision, status, chart version, and application version of each component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ helm ls -n istio-system\nNAME            NAMESPACE       REVISION    UPDATED                                 STATUS      CHART           APP VERSION\nistio-base      istio-system    1           2024-04-17 22:14:45.964722028 +0000 UTC deployed    base-{{< istio_full_version >}}     {{< istio_full_version >}}\nistio-cni       istio-system    1           2024-04-17 22:14:45.964722028 +0000 UTC deployed    cni-{{< istio_full_version >}}      {{< istio_full_version >}}\nistiod          istio-system    1           2024-04-17 22:14:45.964722028 +0000 UTC deployed    istiod-{{< istio_full_version >}}   {{< istio_full_version >}}\nztunnel         istio-system    1           2024-04-17 22:14:45.964722028 +0000 UTC deployed    ztunnel-{{< istio_full_version >}}  {{< istio_full_version >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Resources to Use Cross-Namespace Waypoints in Istio (Bash)\nDESCRIPTION: These commands demonstrate how to configure a ServiceEntry to use a waypoint in another namespace. It applies two labels: 'istio.io/use-waypoint' to specify the waypoint name and 'istio.io/use-waypoint-namespace' to specify the namespace of the waypoint.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/waypoint/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label serviceentries.networking.istio.io istio-site istio.io/use-waypoint=egress-gateway\n$ kubectl label serviceentries.networking.istio.io istio-site istio.io/use-waypoint-namespace=common-infrastructure\n```\n\n----------------------------------------\n\nTITLE: Listing Revision Tags\nDESCRIPTION: Command to verify the current revision tag assignments\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x revision tag list\n```\n\n----------------------------------------\n\nTITLE: Analyzing TCP Proxy Metrics for PassthroughCluster in Istio\nDESCRIPTION: This JSON snippet demonstrates the structure of the 'istio_tcp_connections_closed_total' metric emitted when the PassthroughCluster is hit via a TCP proxy virtual listener. It includes labels for destination IP, service details, and connection information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"success\",\n  \"data\": {\n    \"resultType\": \"vector\",\n    \"result\": [\n      {\n        \"metric\": {\n          \"__name__\": \"istio_tcp_connections_closed_total\",\n          \"connection_security_policy\": \"unknown\",\n          \"destination_app\": \"unknown\",\n          \"destination_ip\": \"52.22.188.80\",\n          \"destination_principal\": \"unknown\",\n          \"destination_service\": \"unknown\",\n          \"destination_service_name\": \"PassthroughCluster\",\n          \"destination_service_namespace\": \"unknown\",\n          \"destination_version\": \"unknown\",\n          \"destination_workload\": \"unknown\",\n          \"destination_workload_namespace\": \"unknown\",\n          \"instance\": \"100.96.2.183:42422\",\n          \"job\": \"istio-mesh\",\n          \"reporter\": \"source\",\n          \"response_flags\": \"-\",\n          \"source_app\": \"sleep\",\n          \"source_principal\": \"unknown\",\n          \"source_version\": \"unknown\",\n          \"source_workload\": \"sleep\",\n          \"source_workload_namespace\": \"default\"\n        },\n        \"value\": [\n          1567033761.879,\n          \"1\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Gateway Configuration in Bash\nDESCRIPTION: Applies the Gateway, VirtualService, and DestinationRule configuration to the external cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f external-istiod-gw.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CRDs from Both Clusters\nDESCRIPTION: Optional commands for removing all Istio Custom Resource Definitions (CRDs) from both clusters. This permanently removes any Istio resources in the clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd -oname --context \"${CTX_CLUSTER1}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER1}\"\n$ kubectl get crd -oname --context \"${CTX_CLUSTER2}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Converting Domain Name to IP Address for Ingress Host\nDESCRIPTION: Commands to convert a domain name to an IP address for the Ingress host, specifically for cloud platforms like AWS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ nslookup ab52747ba608744d8afd530ffd975cbf-330887905.us-east-1.elb.amazonaws.com\n$ export INGRESS_HOST=3.225.207.109\n```\n\n----------------------------------------\n\nTITLE: Inspecting Bootstrap Configuration\nDESCRIPTION: Shows how to view Envoy's bootstrap configuration which contains Istiod connection details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config bootstrap -n istio-system istio-ingressgateway-7d6874b48f-qxhn5\n```\n\n----------------------------------------\n\nTITLE: Deploying Sleep Service for Testing\nDESCRIPTION: Applies the sleep service YAML file to deploy a test pod in the httpbin namespace for internal testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n httpbin -f  {{< github_file >}}/samples/sleep/sleep.yaml\n```\n\n----------------------------------------\n\nTITLE: Inspecting Istio Proxy Configuration for Inbound Traffic\nDESCRIPTION: Command using istioctl to inspect the Envoy proxy configuration for inbound traffic on port 3888, revealing that traffic is redirected to 127.0.0.1, which causes issues with applications that only listen on pod IPs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config cluster my-release-zookeeper-1 --port 3888 --direction inbound -o json\n[\n    {\n        \"name\": \"inbound|3888||\",\n        \"type\": \"STATIC\",\n        \"connectTimeout\": \"10s\",\n        \"loadAssignment\": {\n            \"clusterName\": \"inbound|3888||\",\n            \"endpoints\": [\n                {\n                    \"lbEndpoints\": [\n                        {\n                            \"endpoint\": {\n                                \"address\": {\n                                    \"socketAddress\": {\n                                        \"address\": \"127.0.0.1\",\n                                        \"portValue\": 3888\n                                    }\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        },\n...\n```\n\n----------------------------------------\n\nTITLE: Listing Istio Revision Tags\nDESCRIPTION: Command to list all revision tags in the Istio mesh. The output shows tag names, their associated revisions, and which namespaces are using each tag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x revision tag list\n\nTAG         REVISION NAMESPACES\nprod-stable 1-9-5    istioinaction\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry and DestinationRule for mTLS Origination in Istio\nDESCRIPTION: This configuration creates a ServiceEntry that redirects HTTP requests to port 443 and adds a DestinationRule to perform mutual TLS origination. The DestinationRule uses a client credential stored in a Kubernetes secret and applies specifically to workloads with the 'app: curl' label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: originate-mtls-for-nginx\nspec:\n  hosts:\n  - my-nginx.mesh-external.svc.cluster.local\n  ports:\n  - number: 80\n    name: http-port\n    protocol: HTTP\n    targetPort: 443\n  - number: 443\n    name: https-port\n    protocol: HTTPS\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: originate-mtls-for-nginx\nspec:\n  workloadSelector:\n    matchLabels:\n      app: curl\n  host: my-nginx.mesh-external.svc.cluster.local\n  trafficPolicy:\n    loadBalancer:\n      simple: ROUND_ROBIN\n    portLevelSettings:\n    - port:\n        number: 80\n      tls:\n        mode: MUTUAL\n        credentialName: client-credential # this must match the secret created earlier to hold client certs, and works only when DR has a workloadSelector\n        sni: my-nginx.mesh-external.svc.cluster.local\n        # subjectAltNames: # can be enabled if the certificate was generated with SAN as specified in previous section\n        # - my-nginx.mesh-external.svc.cluster.local\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying Kyverno Authz Server in Kubernetes\nDESCRIPTION: Commands to create a namespace for Kyverno, enable Istio injection, and install the Kyverno Authz server using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns kyverno\n$ kubectl label namespace kyverno istio-injection=enabled\n$ helm install kyverno-authz-server --namespace kyverno --wait --version 0.1.0 --repo https://kyverno.github.io/kyverno-envoy-plugin kyverno-authz-server\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Helm Components from Cluster2\nDESCRIPTION: Commands for removing Istio components installed via Helm from cluster2, including istiod, istio-eastwestgateway, and istio-base charts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n$ helm delete istio-eastwestgateway -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n$ helm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Checking Gateway Endpoints in Kubernetes\nDESCRIPTION: Bash command to retrieve and display endpoints for the Istio ingress gateway, showing both regular and canary deployment pods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/gateway/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get endpoints -n istio-ingress -o \"custom-columns=NAME:.metadata.name,PODS:.subsets[*].addresses[*].targetRef.name\"\n```\n\n----------------------------------------\n\nTITLE: Checking Kiali Signing Key Configuration\nDESCRIPTION: This command checks if the Kiali signing key is unset by looking for the signing_key in the ConfigMap.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get cm kiali -n istio-system -o yaml | grep signing_key\n```\n\n----------------------------------------\n\nTITLE: Creating a DestinationRule with Namespace Lookup Path Considerations\nDESCRIPTION: Example of a DestinationRule that demonstrates namespace lookup path considerations. When placed in a namespace other than the service's namespace or istio-system, it may not be applied to requests from all namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: myservice\nspec:\n  host: myservice.default.svc.cluster.local\n  trafficPolicy:\n    connectionPool:\n      tcp:\n        maxConnections: 100\n```\n\n----------------------------------------\n\nTITLE: Defining Correct Gateway Ports in Istio YAML\nDESCRIPTION: This YAML configuration shows the correct way to define Gateway ports that match the available ports in the Kubernetes Service. This resolves the GatewayPortNotDefinedOnService error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0162/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n# Gateway with correct ports\n\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-ingressgateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 8080\n      name: http2\n      protocol: HTTP\n    hosts:\n    - \"*\"\n  - port:\n      number: 8443\n      name: https\n      protocol: HTTP\n    hosts:\n    - \"*\"\n```\n\n----------------------------------------\n\nTITLE: Creating Nginx SNI Proxy Configuration\nDESCRIPTION: This snippet creates a configuration file for the Nginx SNI proxy. It sets up a stream block to handle TCP forwarding based on SNI.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > ./sni-proxy.conf\nuser www-data;\n\nevents {\n}\n\nstream {\n  log_format log_stream '\\$remote_addr [\\$time_local] \\$protocol [\\$ssl_preread_server_name]'\n  '\\$status \\$bytes_sent \\$bytes_received \\$session_time';\n\n  access_log /var/log/nginx/access.log log_stream;\n  error_log  /var/log/nginx/error.log;\n\n  # tcp forward proxy by SNI\n  server {\n    resolver 8.8.8.8 ipv6=off;\n    listen       127.0.0.1:$MONGODB_PORT;\n    proxy_pass   \\$ssl_preread_server_name:$MONGODB_PORT;\n    ssl_preread  on;\n  }\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Storing Kubernetes Namespace in Environment Variable\nDESCRIPTION: Command to store the current Kubernetes namespace in the NAMESPACE environment variable, which will be used to identify microservices in logs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/istio-ingress-gateway/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export NAMESPACE=$(kubectl config view -o jsonpath=\"{.contexts[?(@.name == \\\"$(kubectl config current-context)\\\")].context.namespace}\")\n$ echo $NAMESPACE\ntutorial\n```\n\n----------------------------------------\n\nTITLE: Corrected Port Protocol for HTTPS Traffic\nDESCRIPTION: YAML snippet showing the correct port protocol configuration for HTTPS traffic on port 443. This ensures that Envoy properly handles encrypted traffic on the standard HTTPS port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n```\n\n----------------------------------------\n\nTITLE: Sending Multiple Requests to Istio Service\nDESCRIPTION: Bash script to send 100 requests to the productpage service through the gateway URL. This helps generate enough traffic to see trace data given Istio's default 1% sampling rate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/trace-generation.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ for i in $(seq 1 100); do curl -s -o /dev/null \"http://$GATEWAY_URL/productpage\"; done\n```\n\n----------------------------------------\n\nTITLE: Cleanup for Egress Gateway Configuration (Istio APIs)\nDESCRIPTION: This set of commands removes the Istio API resources created for the egress gateway configuration, including ServiceEntry, Gateway, VirtualService, and DestinationRule.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry www-wikipedia\n$ kubectl delete gateway istio-egressgateway\n$ kubectl delete virtualservice direct-wikipedia-through-egress-gateway\n$ kubectl delete destinationrule egressgateway-for-wikipedia\n```\n\n----------------------------------------\n\nTITLE: Testing Access without JWT Token for Standalone OPA Setup\nDESCRIPTION: Tests accessing the /headers endpoint without a JWT token, expecting a 403 Forbidden response since OPA rejects requests without valid tokens.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin:8000/headers -s -o /dev/null -w \"%{http_code}\\n\"\n403\n```\n\n----------------------------------------\n\nTITLE: Configuring Path Checker and Request Path in Istio\nDESCRIPTION: Creates a listchecker adapter configuration for path-based access control and a listentry for capturing request paths. The listchecker is configured with a whitelist of allowed paths (/health and /sport).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | kubectl create -f -\napiVersion: \"config.istio.io/v1alpha2\"\nkind: listchecker\nmetadata:\n  name: path-checker\n  namespace: istio-system\nspec:\n  overrides: [\"/health\", \"/sport\"]  # overrides provide a static list\n  blacklist: false\n---\napiVersion: \"config.istio.io/v1alpha2\"\nkind: listentry\nmetadata:\n  name: request-path\n  namespace: istio-system\nspec:\n  value: request.path\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining External Service Endpoints\nDESCRIPTION: ServiceEntry configuration to define external endpoints with locality settings for DynamoDB\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ServiceEntry\nmetadata:\n  name: external-svc-dns\nspec:\n  hosts:\n  - mydb.com\n  location: MESH_EXTERNAL\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: DNS\n  endpoints:\n  - address: dynamodb.us-east-1.amazonaws.com\n    locality: us-east1\n    ports:\n      http: 80\n  - address: dynamodb.us-west-1.amazonaws.com\n    locality: us-west\n    ports:\n      http: 80\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Pod Status\nDESCRIPTION: Command to check the status of deployed Istio pods in the istio-system namespace. Useful for verifying that all components are properly running after installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\nNAME                             READY   STATUS    RESTARTS   AGE\nistio-cni-node-g97z5             1/1     Running   0          10m\nistiod-5f4c75464f-gskxf          1/1     Running   0          10m\nztunnel-c2z4s                    1/1     Running   0          10m\n```\n\n----------------------------------------\n\nTITLE: Send requests to productpage service via curl pod\nDESCRIPTION: Command to execute a curl request to the productpage service from a curl deployment pod\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec deploy/curl -- curl -s http://productpage:9080/productpage\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Request to Httpbin\nDESCRIPTION: Sends an HTTPS request to httpbin.example.com using curl, resolving the hostname and using the example certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -v -HHost:httpbin.example.com --resolve \"httpbin.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST\" \\\n  --cacert example_certs1/example.com.crt \"https://httpbin.example.com:$SECURE_INGRESS_PORT/status/418\"\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace for Egress Gateway\nDESCRIPTION: Bash command to create the namespace for the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns httpbin\n```\n\n----------------------------------------\n\nTITLE: Running Internal-Only Link Checks\nDESCRIPTION: Command to run linting tests while skipping external link verification, useful when internet connectivity is poor.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/build/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ make INTERNAL_ONLY=True lint\n```\n\n----------------------------------------\n\nTITLE: Basic Text Block Example\nDESCRIPTION: A simple nested text block example showing multi-line text formatting within a bullet point.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb_and_lists/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nA text block nested in a bullet\nwith a second line\n\nand a third line\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Network Metadata\nDESCRIPTION: Commands to verify network configuration metadata for pods in an Istio mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/multicluster/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod $CURL_POD_NAME -o jsonpath=\"{.spec.containers[*].env[?(@.name=='ISTIO_META_NETWORK')].value}\"\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod $HELLOWORLD_POD_NAME -o jsonpath=\"{.metadata.labels.topology\\.istio\\.io/network}\"\n```\n\n----------------------------------------\n\nTITLE: Confirming Final Istio Resource State in Bash\nDESCRIPTION: This command displays the final state of the Istio resource after the upgrade is complete, showing that only one revision remains active in the system.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get istio\nNAME      REVISIONS   READY   IN USE   ACTIVE REVISION   STATUS    VERSION   AGE\ndefault   1           1       1        default-v1-24-3   Healthy   v1.24.3   24m\n```\n\n----------------------------------------\n\nTITLE: Labeling a Namespace for Canary Testing\nDESCRIPTION: Command to label a namespace with the canary revision tag. This associates the namespace with the newer Istio control plane version for testing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label ns istioinaction-canary istio.io/rev=prod-canary\n```\n\n----------------------------------------\n\nTITLE: Rolling Back an Istio Tag to a Previous Revision\nDESCRIPTION: Command to roll back an Istio tag to a previous revision in case problems are detected after an upgrade. This resets the tag to point to the old revision.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template istiod istio/istiod -s templates/revision-tags.yaml --set revisionTags=\"{$MYTAG}\" --set revision=\"$OLD_REVISION\" -n istio-system | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Simulating Failure with Modified ServiceEntry in Istio\nDESCRIPTION: This YAML modifies the ServiceEntry to simulate a failure by setting an invalid port for one endpoint.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ServiceEntry\nmetadata:\n  name: external-svc-dns\nspec:\n  hosts:\n  - mydb.com\n  location: MESH_EXTERNAL\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: DNS\n  endpoints:\n  - address: dynamodb.us-east-1.amazonaws.com\n    locality: us-east1\n    ports:\n      http: 81 # INVALID - This is purposefully wrong to trigger failover\n  - address: dynamodb.us-west-1.amazonaws.com\n    locality: us-west\n    ports:\n      http: 80\n```\n\n----------------------------------------\n\nTITLE: Updating MySQL Ratings Data\nDESCRIPTION: Updates all ratings to value 1 using admin privileges.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ mysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT -e \"update test.ratings set rating=1; select * from test.ratings;\"\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host for Docker Desktop\nDESCRIPTION: Sets the ingress host to localhost for Docker Desktop environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST=127.0.0.1\n```\n\n----------------------------------------\n\nTITLE: Creating TLS Secret for Ingress\nDESCRIPTION: Bash command to create a TLS secret for secure ingress.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create -n istio-system secret tls <my-secret-name> --key=<key> --cert=<cert>\n```\n\n----------------------------------------\n\nTITLE: Verifying Tenant Admin's Access to Control Plane Pods\nDESCRIPTION: Command showing a tenant administrator's ability to access pods in their assigned Istio control plane namespace, confirming successful RBAC configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\nNAME                                      READY     STATUS    RESTARTS   AGE\ngrafana-78d649479f-8pqk9                  1/1       Running   0          1d\nistio-ca-ffbb75c6f-98w6x                  1/1       Running   0          1d\nistio-ingress-68d65fc5c6-dnvfl            1/1       Running   0          1d\nistio-mixer-5b9f8dffb5-8875r              3/3       Running   0          1d\nistio-pilot-678fc976c8-b8tv6              2/2       Running   0          1d\nistio-sidecar-injector-7587bd559d-5tgk6   1/1       Running   0          1d\nprometheus-cf8456855-hdcq7                1/1       Running   0          1d\n```\n\n----------------------------------------\n\nTITLE: Check proxy status\nDESCRIPTION: Command to check the status of Istio proxies\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-status\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Using istioctl Manifest Apply Command\nDESCRIPTION: Command to install Istio using the new istioctl manifest apply feature with a custom IstioControlPlane resource. This is the recommended way to use the Istio operator API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest apply -f <your-istiocontrolplane-customresource>\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio\nDESCRIPTION: Commands to completely uninstall Istio from the cluster using istioctl uninstall with the purge option and deleting the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/cleanup/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall -y --purge\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Configuring Trusted Hops with Proxy Annotation in Istio (YAML)\nDESCRIPTION: The recommended approach to configure the number of trusted hops using a proxy.istio.io/config annotation with gatewayTopology field on the ingress gateway pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/upgrade-issues/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    \"proxy.istio.io/config\": '{\"gatewayTopology\" : { \"numTrustedProxies\": 1 }}'\n```\n\n----------------------------------------\n\nTITLE: Testing GET Endpoint with cURL\nDESCRIPTION: Command to test the GET /ratings/{productID} endpoint using cURL\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/single/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ curl localhost:9080/ratings/7\n{\"id\":7,\"ratings\":{\"Reviewer1\":5,\"Reviewer2\":4}}\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample App in Kubernetes\nDESCRIPTION: Deploys the curl sample application to use as a test source for sending requests, with optional sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Configuring Port Exclusion in Istio\nDESCRIPTION: Demonstrates the annotation used to exclude inbound ports from Istio proxy handling, noting that this alone doesn't disable mutual TLS from the client side. A Destination Rule with TLS mode DISABLE is needed for plain text communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/security/automtls-exclude-port.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntraffic.sidecar.istio.io/excludeInboundPorts\n```\n\n----------------------------------------\n\nTITLE: Creating Initial v1beta1 AuthorizationPolicy with Workload Selector\nDESCRIPTION: First step in migration: creating a v1beta1 AuthorizationPolicy with the same workload selector as the httpbin service. This establishes the target for the authorization rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istiod Control Plane\nDESCRIPTION: Command to remove the Istiod control plane Helm chart from the istio-system namespace. This removes the core control plane component of Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/helm/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Check proxy status\nDESCRIPTION: Command to check the status of Istio proxies\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-status\n```\n\n----------------------------------------\n\nTITLE: Deploying TCP Echo Microservice Versions\nDESCRIPTION: Deploys v1 and v2 versions of the tcp-echo microservice.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/tcp-echo/tcp-echo-services.yaml@ -n istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample Application\nDESCRIPTION: Deploys the curl sample application as a test source for sending requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/curl/curl.yaml@ -n istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Testing Istio Egress Gateway from Outside Cluster\nDESCRIPTION: Sends a curl request to test the egress gateway from outside the cluster, using the forwarded ingress gateway port and resolving the hostname locally.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -vvv -k -HHost:<my-proxied-service-hostname> --resolve \"<my-proxied-service-hostname>:15443:127.0.0.1\" --cacert <cert> \"https://<my-proxied-service-hostname>:15443/status/200\"\n```\n\n----------------------------------------\n\nTITLE: Serving Istio Docs on Remote Server\nDESCRIPTION: Command to build and serve the Istio documentation website on a remote server by specifying the server's IP address or domain using ISTIO_SERVE_DOMAIN variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/build/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ make ISTIO_SERVE_DOMAIN=192.168.7.105 serve\n```\n\n----------------------------------------\n\nTITLE: Example Error Message for ExternalControlPlaneAddressIsNotAHostname in Istio\nDESCRIPTION: This snippet shows the error message that is displayed when the address provided for the ingress gateway on the external control plane is an IP address instead of a hostname.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0164/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nInfo [IST0164] (MutatingWebhookConfiguration istio-sidecar-injector-external-istiod testing.yml:28) The address (https://999.999.999.999:5100/inject/cluster/your-cluster-name/net/network1) that was provided for the webhook (rev.namespace.sidecar-injector.istio.io) to reach the ingress gateway on the external control plane cluster is an IP address. This is not recommended for a production environment.\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for istio.io\nDESCRIPTION: A standard robots.txt configuration that allows all web crawlers complete access to the istio.io website and specifies the sitemap location for improved indexing.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.1/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\n\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host from Hostname Instead of IP\nDESCRIPTION: Alternative command to export the ingress host using the hostname when an IP address is not available from the load balancer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST=$(kubectl -n istio-system get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')\n```\n\n----------------------------------------\n\nTITLE: Setting Istio Revision Label in Kubernetes YAML\nDESCRIPTION: This snippet demonstrates the injection of the 'istio.io/rev' annotation to sidecars and gateways for multi-revision observability in Kubernetes manifests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.18.x/announcing-1.18/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    istio.io/rev: <revision-name>\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Kubernetes Service for Gateway API Testing\nDESCRIPTION: Creates a namespace called 'sample' and deploys the Istio helloworld sample service without sidecar injection to serve as a target for ingress traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create ns sample\nkubectl apply -f @samples/helloworld/helloworld.yaml@ -n sample\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Default Profile\nDESCRIPTION: Installs Istio on a Kubernetes cluster using the default configuration profile.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=default\n```\n\n----------------------------------------\n\nTITLE: Defining External Endpoints with ServiceEntry in Istio\nDESCRIPTION: This YAML defines a ServiceEntry resource in Istio to specify external endpoints for a service, including their localities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ServiceEntry\nmetadata:\n  name: external-svc-dns\nspec:\n  hosts:\n  - mydb.com\n  location: MESH_EXTERNAL\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: DNS\n  endpoints:\n  - address: dynamodb.us-east-1.amazonaws.com\n    locality: us-east1\n    ports:\n      http: 80\n  - address: dynamodb.us-west-1.amazonaws.com\n    locality: us-west\n    ports:\n      http: 80\n```\n\n----------------------------------------\n\nTITLE: EnvoyFilter Configuration for Wasm\nDESCRIPTION: Generated EnvoyFilter resource that configures the Istio proxy to load and use the Wasm module.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/deploy-wasm-declarative/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: details-v1-myfilter\n  namespace: bookinfo\nspec:\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND\n      listener:\n        filterChain:\n          filter:\n            name: envoy.http_connection_manager\n            subFilter:\n              name: envoy.router\n    patch:\n      operation: INSERT_BEFORE\n      value:\n        config:\n          config:\n            configuration: tomorrow\n            name: myfilter\n            rootId: add_header\n            vmConfig:\n              code:\n                local:\n                  filename: /var/local/lib/wasme-cache/44bf95b368e78fafb663020b43cf099b23fc6032814653f2f47e4d20643e7267\n              runtime: envoy.wasm.runtime.v8\n              vmId: myfilter\n        name: envoy.filters.http.wasm\n  workloadSelector:\n    labels:\n      app: details\n      version: v1\n```\n\n----------------------------------------\n\nTITLE: Disabling In-Cluster Operator\nDESCRIPTION: 通过将副本数设置为 0 来禁用 In-Cluster Operator。此操作不会禁用控制平面或中断网格流量。\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl scale deployment -n istio-system istio-operator –replicas 0\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Gateway API Resources\nDESCRIPTION: Commands to delete HTTPRoute and Gateway configurations and shut down the httpbin service when using the Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete httproute httpbin\n$ kubectl delete gtw httpbin-gateway\n$ kubectl delete --ignore-not-found=true -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for Istio Telemetry Gateway Resources\nDESCRIPTION: Commands to remove all Gateway, VirtualService, and DestinationRule resources created for telemetry addon access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system delete gateway grafana-gateway kiali-gateway prometheus-gateway tracing-gateway\nkubectl -n istio-system delete virtualservice grafana-vs kiali-vs prometheus-vs tracing-vs\nkubectl -n istio-system delete destinationrule grafana kiali prometheus tracing\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Pilot for Specific Namespace Service Discovery in YAML\nDESCRIPTION: Portion of YAML that shows how to configure an Istio Pilot deployment to watch a specific tenant application namespace. The '--appNamespace' parameter restricts service discovery to the tenant's application namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: istio-pilot\n  namespace: istio-system1\n  annotations:\n    sidecar.istio.io/inject: \"false\"\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        istio: pilot\n    spec:\n      serviceAccountName: istio-pilot-service-account\n      containers:\n      - name: discovery\n        image: docker.io/<user ID>/pilot:<tag>\n        imagePullPolicy: IfNotPresent\n        args: [\"discovery\", \"-v\", \"2\", \"--admission-service\", \"istio-pilot\", \"--appNamespace\", \"ns-1\"]\n        ports:\n        - containerPort: 8080\n        - containerPort: 443\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry and DestinationRule for SNI Proxy\nDESCRIPTION: This snippet creates a ServiceEntry with a static address of 127.0.0.1 and a DestinationRule to disable mutual TLS for the SNI proxy traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: sni-proxy\nspec:\n  hosts:\n  - sni-proxy.local\n  location: MESH_EXTERNAL\n  ports:\n  - number: $MONGODB_PORT\n    name: tcp\n    protocol: TCP\n  resolution: STATIC\n  endpoints:\n  - address: 127.0.0.1\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: disable-mtls-for-sni-proxy\nspec:\n  host: sni-proxy.local\n  trafficPolicy:\n    tls:\n      mode: DISABLE\nEOF\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Requests to Wikipedia Subdomains\nDESCRIPTION: Sends HTTPS requests to English and German Wikipedia pages to verify the wildcard host configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- sh -c 'curl -s https://en.wikipedia.org/wiki/Main_Page | grep -o \"<title>.*</title>\"; curl -s https://de.wikipedia.org/wiki/Wikipedia:Hauptseite | grep -o \"<title>.*</title>\"'\n```\n\n----------------------------------------\n\nTITLE: Checking Gateway Status\nDESCRIPTION: Command to retrieve the gateway information in the Kubernetes cluster\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/extend-waypoint-wasm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get gateway\n```\n\n----------------------------------------\n\nTITLE: Uninstalling an Old Istio Revision\nDESCRIPTION: Command to uninstall an old Istio control plane revision after completing the upgrade. This removes components that are no longer needed after a successful migration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/revision-tags/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x uninstall --revision 1-9-5\n```\n\n----------------------------------------\n\nTITLE: Upgrading Manually Deployed Gateways in Revisioned Approach\nDESCRIPTION: Command to upgrade manually deployed Istio gateways when using a revisioned upgrade approach. This is needed because manually deployed gateways aren't updated through tag changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-ingress istio/gateway -n istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Requests to Wikipedia Subdomains\nDESCRIPTION: Sends HTTPS requests to English and German Wikipedia pages to verify the wildcard host configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- sh -c 'curl -s https://en.wikipedia.org/wiki/Main_Page | grep -o \"<title>.*</title>\"; curl -s https://de.wikipedia.org/wiki/Wikipedia:Hauptseite | grep -o \"<title>.*</title>\"'\n```\n\n----------------------------------------\n\nTITLE: Creating a New Setup Configuration Template for Istio Documentation Tests in Go\nDESCRIPTION: Template for creating a new setup configuration file for Istio documentation tests. The template requires two modifications: setting the appropriate setupSpec value and defining the setupConfig function according to the configuration requirements.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/setup/README.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n// Copyright Istio Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\npackage setupconfig\n\nimport (\n\t\"os\"\n\t\"testing\"\n\n\t\"istio.io/istio.io/pkg/test/istioio\"\n\t\"istio.io/istio/pkg/test/framework\"\n\t\"istio.io/istio/pkg/test/framework/components/istio\"\n)\n\nvar (\n\tinst      istio.Instance\n\tsetupSpec = \"profile=demo\" // this is to appear in test scripts following '# @setup'\n)\n\nfunc TestMain(m *testing.M) {\n\tif !istioio.NeedSetup(setupSpec) {\n\t\tos.Exit(0)\n\t}\n\n\tframework.\n\t\tNewSuite(m).\n\t\tSetup(istio.Setup(&inst, setupConfig)).\n\t\tRun()\n}\n\nfunc TestDocs(t *testing.T) {\n\tistioio.TestDocs(t, setupSpec)\n}\n\nfunc setupConfig(cfg *istio.Config) {\n\t// specify what your config requires\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Politics Service Account\nDESCRIPTION: Creates a deployment with a special 'politics' service account for testing privileged access to CNN domains.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nsed 's/: sleep/: politics/g' @samples/sleep/sleep.yaml@ | kubectl create -f -\n```\n\n----------------------------------------\n\nTITLE: Basic Message Format Structure for Istio Analyzer\nDESCRIPTION: Shows the basic structure of analyzer messages, consisting of level, code, affected resource, and message details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/message-format/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n<level> [<code>] (<affected-resource>) <message-details>\n```\n\n----------------------------------------\n\nTITLE: Adding Istio Helm Repository and Updating\nDESCRIPTION: Commands to add the official Istio Helm repository and update the local Helm repositories cache. This is necessary before installing or templating Istio components using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add istio https://istio-release.storage.googleapis.com/charts\n$ helm repo update\n```\n\n----------------------------------------\n\nTITLE: Migrating Import Path for Istio Client-Go\nDESCRIPTION: Shows how to update import statements when switching from Aspen Mesh client to official Istio client-go library.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/announcing-istio-client-go/index.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nimport (\n  ...\n  - versionedclient \"github.com/aspenmesh/istio-client-go/pkg/client/clientset/versioned\"\n  + versionedclient \"istio.io/client-go/pkg/clientset/versioned\"\n)\n```\n\n----------------------------------------\n\nTITLE: Reviewing Created Service Entry in Istio\nDESCRIPTION: This bash command retrieves and displays the YAML configuration of the created service entry for the external MySQL database.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get serviceentry mysql-external -o yaml\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n...\n```\n\n----------------------------------------\n\nTITLE: Deploying Helloworld Service in Kubernetes\nDESCRIPTION: Applies the helloworld-v1 sample to the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/helloworld/helloworld.yaml@ -l service=helloworld\n$ kubectl apply -f @samples/helloworld/helloworld.yaml@ -l version=v1\n```\n\n----------------------------------------\n\nTITLE: Defining v1alpha1 RBAC Policies for httpbin Service\nDESCRIPTION: Example of v1alpha1 RBAC policies that enable authorization for the httpbin service in the foo namespace. Includes a ClusterRbacConfig that activates RBAC for the foo namespace, a ServiceRole defining GET access to httpbin, and a ServiceRoleBinding granting the role to the sleep service account.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ClusterRbacConfig\nmetadata:\n  name: default\nspec:\n  mode: 'ON_WITH_INCLUSION'\n  inclusion:\n    namespaces: [\"foo\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  rules:\n  - services: [\"httpbin.foo.svc.cluster.local\"]\n    methods: [\"GET\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  subjects:\n  - user: \"cluster.local/ns/default/sa/sleep\"\n  roleRef:\n    kind: ServiceRole\n    name: \"httpbin\"\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from Multiple Clusters Using IstioOperator in Bash\nDESCRIPTION: These commands uninstall Istio from cluster1 and cluster2 using the IstioOperator. It purges all Istio components and deletes the istio-system namespace from both clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --context=\"${CTX_CLUSTER1}\" -y --purge\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER1}\"\n\n$ istioctl uninstall --context=\"${CTX_CLUSTER2}\" -y --purge\n$ kubectl delete ns istio-system --context=\"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Waiting for Istio CRDs to Complete in Kubernetes\nDESCRIPTION: This command waits for all jobs in the istio-system namespace to complete, indicating that all Istio CRDs have been properly created. It uses kubectl's wait command with the condition flag to ensure complete status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/verify-crds.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system wait --for=condition=complete job --all\n```\n\n----------------------------------------\n\nTITLE: Starting Minikube with Custom Resources in Bash\nDESCRIPTION: Starts minikube with 16384 MB of memory, 4 CPUs, and Kubernetes version 1.26.1. These resources are sufficient to run Istio and basic applications.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/minikube/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ minikube start --memory=16384 --cpus=4 --kubernetes-version=v1.26.1\n```\n\n----------------------------------------\n\nTITLE: Installing Istio CNI with Platform-Specific Configuration\nDESCRIPTION: Demonstrates how to install Istio CNI using Helm with a specific profile and platform configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.24.x/announcing-1.24/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nhelm install istio-cni --set profile=ambient --set global.platform=k3s\n```\n\n----------------------------------------\n\nTITLE: Applying L7 Authorization Policy for productpage Service in Istio\nDESCRIPTION: This snippet shows how to update the AuthorizationPolicy to allow specific service accounts to perform GET operations on the productpage service, demonstrating L7-level control.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: productpage-viewer\n namespace: default\nspec:\n selector:\n   matchLabels:\n     app: productpage\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\", \"cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining Simple OPA Policy Rule\nDESCRIPTION: Implements a basic OPA policy rule that allows requests with specific headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: opa-policy\n  namespace: opa\ndata:\n  policy.rego: |\n    package mypackage.mysubpackage\n\n    import rego.v1\n\n    default myrule := false\n\n    myrule if {\n      input.attributes.request.http.headers[\"x-force-authorized\"] == \"enabled\"\n    }\n\n    myrule if {\n      input.attributes.request.http.headers[\"x-force-authorized\"] == \"true\"\n    }\nEOF\n```\n\n----------------------------------------\n\nTITLE: Manual Sidecar Injection Commands\nDESCRIPTION: Commands for manually injecting Istio sidecar into Kubernetes deployments using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl kube-inject -f demo-red.yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Installing Istiod with CNI Support Using Helm\nDESCRIPTION: This command installs the Istiod component with Helm, specifically configuring pilot.cni.enabled=true to disable the privileged init container injection in favor of using the CNI plugin.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/cni/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istiod istio/istiod -n istio-system --set pilot.cni.enabled=true --wait\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Certificates with IstioOperator\nDESCRIPTION: This YAML snippet shows how to use IstioOperator to modify sidecar certificate settings, specifically changing the RSA key size.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/manage-mesh-certificates/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        CITADEL_SELF_SIGNED_CA_RSA_KEY_SIZE: 4096\n```\n\n----------------------------------------\n\nTITLE: Listing Pods in Istio Control Plane Namespace\nDESCRIPTION: Demonstrates that a tenant administrator can access pods in their assigned Istio control plane namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\nNAME                                      READY     STATUS    RESTARTS   AGE\ngrafana-78d649479f-8pqk9                  1/1       Running   0          1d\nistio-ca-ffbb75c6f-98w6x                  1/1       Running   0          1d\nistio-ingress-68d65fc5c6-dnvfl            1/1       Running   0          1d\nistio-mixer-5b9f8dffb5-8875r              3/3       Running   0          1d\nistio-pilot-678fc976c8-b8tv6              2/2       Running   0          1d\nistio-sidecar-injector-7587bd559d-5tgk6   1/1       Running   0          1d\nprometheus-cf8456855-hdcq7                1/1       Running   0          1d\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry and DestinationRule for Cross-Cluster Service Access\nDESCRIPTION: Commands to create a ServiceEntry and DestinationRule in the first cluster that enable access to the reviews service versions running in the second cluster, using the .global DNS name format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --context=$CTX_CLUSTER1 -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: reviews-default\nspec:\n  hosts:\n  - reviews.default.global\n  location: MESH_INTERNAL\n  ports:\n  - name: http1\n    number: 9080\n    protocol: http\n  resolution: DNS\n  addresses:\n  - 240.0.0.3\n  endpoints:\n  - address: ${CLUSTER2_GW_ADDR}\n    labels:\n      cluster: cluster2\n    ports:\n      http1: 15443 # Do not change this port value\n---\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews-global\nspec:\n  host: reviews.default.global\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n  subsets:\n  - name: v2\n    labels:\n      cluster: cluster2\n  - name: v3\n    labels:\n      cluster: cluster2\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CRDs from both clusters\nDESCRIPTION: Removes all Istio-related Custom Resource Definitions (CRDs) from both clusters. This is an optional step that permanently removes any Istio resources created in the clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd -oname --context \"${CTX_CLUSTER1}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER1}\"\n$ kubectl get crd -oname --context \"${CTX_CLUSTER2}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPRoutes for Egress Gateway with Gateway API\nDESCRIPTION: Uses Gateway API HTTPRoute resources to direct traffic from the mesh to the egress gateway and from the gateway to the external CNN service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: direct-cnn-to-egress-gateway\nspec:\n  parentRefs:\n  - kind: ServiceEntry\n    group: networking.istio.io\n    name: cnn\n  rules:\n  - backendRefs:\n    - name: cnn-egress-gateway-istio\n      port: 80\n---\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: forward-cnn-from-egress-gateway\nspec:\n  parentRefs:\n  - name: cnn-egress-gateway\n  hostnames:\n  - edition.cnn.com\n  rules:\n  - backendRefs:\n    - kind: Hostname\n      group: networking.istio.io\n      name: edition.cnn.com\n      port: 443\nEOF\n```\n\n----------------------------------------\n\nTITLE: Examining Ztunnel Logs to Verify Load Balancing\nDESCRIPTION: This command retrieves logs from ztunnel pods in the istio-system namespace and filters for outbound connections, showing how traffic is distributed across different service endpoints with relevant connection metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/troubleshoot-ztunnel/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system logs -l app=ztunnel | grep -E \"outbound\"\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands\nDESCRIPTION: Commands to remove all created Istio resources including gateway, virtual services, service entries, and destination rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/proxy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete gateway proxy\nkubectl delete virtualservice cnn httpbin\nkubectl delete serviceentry cnn httpbin-ext localhost\nkubectl delete destinationrule localhost\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for 2021 Istio Blog Post Archive\nDESCRIPTION: This YAML frontmatter block defines metadata for a page that will list Istio blog posts from 2021. It specifies the page title, description, weight for ordering in navigation, and instructs to list posts by publish date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 2021 Posts\ndescription: Blog posts for 2021.\nweight: 7\nlist_by_publishdate: true\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart on cluster2 with Helm\nDESCRIPTION: Installs the Istio base chart on cluster2 using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --kube-context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Generating Intermediate Certificate for Cluster\nDESCRIPTION: Creates intermediate certificates and keys for a specific cluster (e.g., cluster1).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ make -f ../tools/certs/Makefile.selfsigned.mk cluster1-cacerts\n```\n\n----------------------------------------\n\nTITLE: Verifying Admission Registration API Availability for Istio\nDESCRIPTION: Command to verify that the admissionregistration.k8s.io/v1 API is enabled in the Kubernetes cluster, which is required for Istio's webhooks to function properly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/webhook/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl api-versions | grep admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1\n```\n\n----------------------------------------\n\nTITLE: Adding istioctl to System PATH\nDESCRIPTION: Command to add the istioctl client binary to the system PATH environment variable in Linux or macOS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/download-istio-release/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export PATH=$PWD/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Editing Istio Configuration with kubectl\nDESCRIPTION: Command to edit an installed IstioControlPlane resource using kubectl. When using the Istio controller, changes made to this resource will automatically update the Istio installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl edit istiocontrolplane example-istiocontrolplane -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample Application with Manual Sidecar Injection in Istio\nDESCRIPTION: Deploys the curl sample application with manual sidecar injection for environments where automatic injection is not enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Testing HTTPS Request to Helloworld\nDESCRIPTION: Sends an HTTPS request to helloworld.example.com using curl, resolving the hostname and using the example certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -v -HHost:helloworld.example.com --resolve \"helloworld.example.com:$SECURE_INGRESS_PORT:$INGRESS_HOST\" \\\n  --cacert example_certs1/example.com.crt \"https://helloworld.example.com:$SECURE_INGRESS_PORT/hello\"\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Client with xDS Credentials in Go\nDESCRIPTION: This code sets up xDS credentials for the gRPC client, including fallback credentials for when istiod doesn't send security config. It's necessary for (m)TLS support.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nimport \"google.golang.org/grpc/credentials/xds\"\n\n...\n\ncreds, err := xds.NewClientCredentials(xds.ClientOptions{\nFallbackCreds: insecure.NewCredentials()\n})\n// handle err\nconn, err := grpc.DialContext(\nctx,\n\"xds:///foo.ns.svc.cluster.local:7070\",\ngrpc.WithTransportCredentials(creds),\n)\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio CRDs from Multiple Kubernetes Clusters in Bash\nDESCRIPTION: These commands delete all Custom Resource Definitions (CRDs) related to Istio from both cluster1 and cluster2. This step is optional but recommended for a complete cleanup, as it permanently removes any Istio resources created in the clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get crd -oname --context \"${CTX_CLUSTER1}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER1}\"\n$ kubectl get crd -oname --context \"${CTX_CLUSTER2}\" | grep --color=never 'istio.io' | xargs kubectl delete --context \"${CTX_CLUSTER2}\"\n```\n\n----------------------------------------\n\nTITLE: Bootstrap Configuration Short Output\nDESCRIPTION: New short output option for proxy-config bootstrap command that displays Istio and Envoy version summary.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/change-notes/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config bootstrap -o short\n```\n\n----------------------------------------\n\nTITLE: Virtual Service Status with Validation\nDESCRIPTION: Example of a Virtual Service configuration with validation status showing an error for an invalid gateway reference\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\n...\nspec:\n  gateways:\n  - bogus-gateway\n  hosts:\n  - ratings\n...\nstatus:\n  observedGeneration: \"1\"\n  validationMessages:\n  - documentationUrl: https://istio.io/v{{< istio_version >}}/docs/reference/config/analysis/ist0101/\n    level: ERROR\n    type:\n      code: IST0101\n```\n\n----------------------------------------\n\nTITLE: Virtual Service Status with Validation\nDESCRIPTION: Example of a Virtual Service configuration with validation status showing an error for an invalid gateway reference\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\n...\nspec:\n  gateways:\n  - bogus-gateway\n  hosts:\n  - ratings\n...\nstatus:\n  observedGeneration: \"1\"\n  validationMessages:\n  - documentationUrl: https://istio.io/v{{< istio_version >}}/docs/reference/config/analysis/ist0101/\n    level: ERROR\n    type:\n      code: IST0101\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with DLB Configuration\nDESCRIPTION: This command installs Istio using the custom configuration file and sets the ingress gateway to run as root.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -f config.yaml --set values.gateways.istio-ingressgateway.runAsRoot=true -y\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OTLP/gRPC Exporter Configuration\nDESCRIPTION: Configuration to install Istio with OpenTelemetry trace export via gRPC protocol. Includes environment resource detector setup targeting the OpenTelemetry Collector service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/opentelemetry/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    extensionProviders:\n    - name: otel-tracing\n      opentelemetry:\n        port: 4317\n        service: opentelemetry-collector.observability.svc.cluster.local\n        resource_detectors:\n          environment: {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OTLP/gRPC Exporter Configuration\nDESCRIPTION: Configuration to install Istio with OpenTelemetry trace export via gRPC protocol. Includes environment resource detector setup targeting the OpenTelemetry Collector service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/opentelemetry/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncat <<EOF | istioctl install -y -f -\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    enableTracing: true\n    extensionProviders:\n    - name: otel-tracing\n      opentelemetry:\n        port: 4317\n        service: opentelemetry-collector.observability.svc.cluster.local\n        resource_detectors:\n          environment: {}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating NGINX Configuration File\nDESCRIPTION: Defines the NGINX server configuration with SSL settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncat <<\\EOF > ./nginx.conf\nevents {\n}\n\nhttp {\n  log_format main '$remote_addr - $remote_user [$time_local]  $status '\n  '\"$request\" $body_bytes_sent \"$http_referer\" '\n  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  access_log /var/log/nginx/access.log main;\n  error_log  /var/log/nginx/error.log;\n\n  server {\n    listen 443 ssl;\n\n    root /usr/share/nginx/html;\n    index index.html;\n\n    server_name nginx.example.com;\n    ssl_certificate /etc/nginx-server-certs/tls.crt;\n    ssl_certificate_key /etc/nginx-server-certs/tls.key;\n  }\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Viewing Istiod Pod Logs\nDESCRIPTION: This command retrieves and displays logs from all Istiod pods in the istio-system namespace. It's useful for troubleshooting issues with the Istio control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/validation/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ for pod in $(kubectl -n istio-system get pod -lapp=istiod -o jsonpath='{.items[*].metadata.name}'); do \\\n    kubectl -n istio-system logs ${pod} \\\ndone\n```\n\n----------------------------------------\n\nTITLE: Configuring Workload-specific Telemetry in Istio\nDESCRIPTION: This YAML snippet shows how to configure workload-specific telemetry in Istio. It disables span reporting for the 'frontend' workload in the 'myapp' namespace using a selector.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/telemetry/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: workload-override\n  namespace: myapp\nspec:\n  selector:\n    matchLabels:\n      service.istio.io/canonical-name: frontend\n  tracing:\n  - disableSpanReporting: true\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Resource Status After Upgrade in Bash\nDESCRIPTION: This command retrieves the Istio resource status showing the revisions, readiness state, and active revision information after initiating the upgrade process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get istio\nNAME      REVISIONS   READY   IN USE   ACTIVE REVISION   STATUS    VERSION   AGE\ndefault   2           2       2        default-v1-24-3   Healthy   v1.24.3   10m\n```\n\n----------------------------------------\n\nTITLE: Listing Pods in Tenant's Application Namespace\nDESCRIPTION: Demonstrates that a tenant administrator can access and manage pods within their own application namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n ns-0\nNAME                              READY     STATUS    RESTARTS   AGE\ndetails-v1-64b86cd49-b7rkr        2/2       Running   0          1d\nproductpage-v1-84f77f8747-rf2mt   2/2       Running   0          1d\nratings-v1-5f46655b57-5b4c5       2/2       Running   0          1d\nreviews-v1-ff6bdb95b-pm5lb        2/2       Running   0          1d\nreviews-v2-5799558d68-b989t       2/2       Running   0          1d\nreviews-v3-58ff7d665b-lw5j9       2/2       Running   0          1d\n```\n\n----------------------------------------\n\nTITLE: Configuring MOSN as Istio Data Plane\nDESCRIPTION: Istioctl command to deploy Istio with MOSN as the data plane proxy, specifying the MOSN proxy image and binary path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest apply  --set .values.global.proxy.image=\"mosnio/proxyv2:1.5.2-mosn\"  --set meshConfig.defaultConfig.binaryPath=\"/usr/local/bin/mosn\"\n```\n\n----------------------------------------\n\nTITLE: Configuring NGINX for Mutual TLS in Istio Environment\nDESCRIPTION: Creates an NGINX configuration file that enables mutual TLS. The configuration specifies the server certificate, private key, CA certificate for client verification, and enables client certificate verification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<\\EOF > ./nginx.conf\nevents {\n}\n\nhttp {\n  log_format main '$remote_addr - $remote_user [$time_local]  $status '\n  '\"$request\" $body_bytes_sent \"$http_referer\" '\n  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n  access_log /var/log/nginx/access.log main;\n  error_log  /var/log/nginx/error.log;\n\n  server {\n    listen 443 ssl;\n\n    root /usr/share/nginx/html;\n    index index.html;\n\n    server_name my-nginx.mesh-external.svc.cluster.local;\n    ssl_certificate /etc/nginx-server-certs/tls.crt;\n    ssl_certificate_key /etc/nginx-server-certs/tls.key;\n    ssl_client_certificate /etc/nginx-ca-certs/example.com.crt;\n    ssl_verify_client on;\n  }\n}\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating ResourceQuota for GKE Node-Critical Pods\nDESCRIPTION: YAML configuration to create a ResourceQuota in the istio-system namespace to allow system-node-critical pods on GKE. This is required for Istio CNI node agent and ztunnel components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ResourceQuota\nmetadata:\n  name: gcp-critical-pods\n  namespace: istio-system\nspec:\n  hard:\n    pods: 1000\n  scopeSelector:\n    matchExpressions:\n    - operator: In\n      scopeName: PriorityClass\n      values:\n      - system-node-critical\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Bypass for External MongoDB in Istio\nDESCRIPTION: This code snippet shows how to configure the sidecar to bypass traffic to an external MongoDB by setting the init container argument with the CIDR of the MongoDB. This configuration makes the sidecar ignore messages to/from the specified IP address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/egress-performance/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- -x\n- \"169.47.232.211/32\"\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Contexts\nDESCRIPTION: Command to list available Kubernetes contexts, which will be used to identify and access the different clusters in a multicluster setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config get-contexts\nCURRENT   NAME       CLUSTER    AUTHINFO       NAMESPACE\n*         cluster1   cluster1   user@foo.com   default\n          cluster2   cluster2   user@foo.com   default\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Injection in Test Namespace\nDESCRIPTION: Labels a namespace with 'istio-injection=enabled' to enable automatic sidecar injection for all pods in that namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace test-ns istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Contexts\nDESCRIPTION: Command to list available Kubernetes contexts, which will be used to identify and access the different clusters in a multicluster setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config get-contexts\nCURRENT   NAME       CLUSTER    AUTHINFO       NAMESPACE\n*         cluster1   cluster1   user@foo.com   default\n          cluster2   cluster2   user@foo.com   default\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for MongoDB Configuration\nDESCRIPTION: Commands to remove all created Kubernetes resources and configuration files.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry mongo\nkubectl delete gateway istio-egressgateway-with-sni-proxy\nkubectl delete virtualservice direct-mongo-through-egress-gateway\nkubectl delete destinationrule mtls-for-egress-gateway\nkubectl delete envoyfilter forward-downstream-sni egress-gateway-sni-verifier\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host IP for Other Kubernetes Environments\nDESCRIPTION: Command to set the ingress host IP by retrieving the host IP of the ingress gateway pod for other Kubernetes environments not specifically mentioned.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_HOST=$(kubectl get po -l istio=ingressgateway -n \"${INGRESS_NS}\" -o jsonpath='{.items[0].status.hostIP}')\n```\n\n----------------------------------------\n\nTITLE: Scaling Kubernetes Deployments\nDESCRIPTION: Scales all deployments to run 3 pods each, increasing the capacity and availability of the Bookinfo application services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl scale deployments --all --replicas 3\ndeployment.apps/details-v1 scaled\ndeployment.apps/productpage-v1 scaled\ndeployment.apps/ratings-v1 scaled\ndeployment.apps/reviews-v1 scaled\n```\n\n----------------------------------------\n\nTITLE: Creating Proxy Protocol EnvoyFilter\nDESCRIPTION: EnvoyFilter configuration to enable proxy protocol and TLS inspector for the Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: proxy-protocol\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      istio: ingressgateway\n  configPatches:\n  - applyTo: LISTENER\n    patch:\n      operation: MERGE\n      value:\n        listener_filters:\n        - name: envoy.filters.listener.proxy_protocol\n        - name: envoy.filters.listener.tls_inspector\n```\n\n----------------------------------------\n\nTITLE: Cleanup of TLS Origination Configuration with Gateway API\nDESCRIPTION: Removes all Gateway API and Istio resources created for the TLS origination example, including gateway, service entry, HTTP routes, and destination rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry cnn\n$ kubectl delete gtw cnn-egress-gateway\n$ kubectl delete httproute direct-cnn-to-egress-gateway\n$ kubectl delete httproute forward-cnn-from-egress-gateway\n$ kubectl delete destinationrule egressgateway-for-cnn\n$ kubectl delete destinationrule originate-tls-for-edition-cnn-com\n```\n\n----------------------------------------\n\nTITLE: Generating Server Certificate with SAN Using OpenSSL\nDESCRIPTION: This bash script creates a configuration file for OpenSSL and then generates a certificate with Subject Alternative Name (SAN) for enhanced security and validation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncat > san.conf <<EOF\n[req]\ndistinguished_name = req_distinguished_name\nreq_extensions = v3_req\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = US\n[v3_req]\nkeyUsage = critical, digitalSignature, keyEncipherment\nextendedKeyUsage = serverAuth, clientAuth\nbasicConstraints = critical, CA:FALSE\nsubjectAltName = critical, @alt_names\n[alt_names]\nDNS = my-nginx.mesh-external.svc.cluster.local\nEOF\n\nopenssl req -out my-nginx.mesh-external.svc.cluster.local.csr -newkey rsa:4096 -nodes -keyout my-nginx.mesh-external.svc.cluster.local.key -subj \"/CN=my-nginx.mesh-external.svc.cluster.local/O=some organization\" -config san.conf\nopenssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in my-nginx.mesh-external.svc.cluster.local.csr -out my-nginx.mesh-external.svc.cluster.local.crt -extfile san.conf -extensions v3_req\n```\n\n----------------------------------------\n\nTITLE: Generating Server Certificate and Key with OpenSSL\nDESCRIPTION: These bash commands generate a certificate signing request and a signed certificate for my-nginx.mesh-external.svc.cluster.local using the previously created root certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -out my-nginx.mesh-external.svc.cluster.local.csr -newkey rsa:2048 -nodes -keyout my-nginx.mesh-external.svc.cluster.local.key -subj \"/CN=my-nginx.mesh-external.svc.cluster.local/O=some organization\"\nopenssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in my-nginx.mesh-external.svc.cluster.local.csr -out my-nginx.mesh-external.svc.cluster.local.crt\n```\n\n----------------------------------------\n\nTITLE: Validation Container Error Logs\nDESCRIPTION: This log snippet shows connection refused errors in the istio-validation container, indicating that traffic redirection is not working properly. The validation container attempts to connect to the redirection target ports and times out if unsuccessful.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/cni/index.md#2025-04-08_snippet_3\n\nLANGUAGE: plain\nCODE:\n```\n2021-07-20T05:30:17.111930Z     error   Error connecting to 127.0.0.6:15002: dial tcp 127.0.0.1:0->127.0.0.6:15002: connect: connection refused\n2021-07-20T05:30:18.112503Z     error   Error connecting to 127.0.0.6:15002: dial tcp 127.0.0.1:0->127.0.0.6:15002: connect: connection refused\n...\n2021-07-20T05:30:22.111676Z     error   validation timeout\n```\n\n----------------------------------------\n\nTITLE: Downloading Latest Istio Release\nDESCRIPTION: Command to automatically download and extract the latest Istio release for Linux or macOS systems.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/download-istio-release/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | sh -\n```\n\n----------------------------------------\n\nTITLE: Displaying ReferencedResourceNotFound Error Message in Istio\nDESCRIPTION: This snippet shows the error message format when a ReferencedResourceNotFound error occurs in Istio. It indicates that a VirtualService is referencing a non-existent gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0101/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nError [IST0101] (VirtualService httpbin.default) Referenced gateway not found: \"httpbin-gateway-bogus\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Listeners for Reviews Waypoint Proxy in Istio\nDESCRIPTION: This command uses istioctl to retrieve and display the listeners for the reviews waypoint proxy. It shows various listener chains, matches, and destinations for handling inbound traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/waypoint-proxy-made-simple/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config listener deploy/bookinfo-reviews-istio-waypoint --waypoint\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Kubernetes Cluster\nDESCRIPTION: This snippet demonstrates how to retrieve and display the status of all pods in the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/production-testing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Registry-Only Egress Policy (Gateway API)\nDESCRIPTION: Command to install Istio with minimal profile, enabling Gateway API alpha features, access logging, and setting the outbound traffic policy to REGISTRY_ONLY mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=minimal -y \\\n    --set values.pilot.env.PILOT_ENABLE_ALPHA_GATEWAY_API=true \\\n    --set meshConfig.accessLogFile=/dev/stdout \\\n    --set meshConfig.outboundTrafficPolicy.mode=REGISTRY_ONLY\n```\n\n----------------------------------------\n\nTITLE: Creating Virtual Services for External Service Routing\nDESCRIPTION: Configures virtual services for routing traffic to external services through the proxy gateway while blocking direct mesh access using localhost routing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/proxy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - httpbin.org\n  gateways:\n  - proxy\n  - mesh\n  http:\n  - match:\n    - gateways:\n      - proxy\n      port: 80\n      uri:\n        prefix: /status\n    route:\n    - destination:\n        host: httpbin.org\n        port:\n          number: 80\n  - match:\n    - gateways:\n      - mesh\n      port: 80\n    route:\n    - destination:\n        host: localhost.local\n        port:\n          number: 80\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: cnn\nspec:\n  hosts:\n  - edition.cnn.com\n  gateways:\n  - proxy\n  - mesh\n  tls:\n  - match:\n    - gateways:\n      - proxy\n      port: 443\n      sni_hosts:\n      - edition.cnn.com\n    route:\n    - destination:\n        host: edition.cnn.com\n        port:\n          number: 443\n  - match:\n    - gateways:\n      - mesh\n      port: 443\n      sni_hosts:\n      - edition.cnn.com\n    route:\n    - destination:\n        host: localhost.local\n        port:\n          number: 443\n```\n\n----------------------------------------\n\nTITLE: Configuring Authorization Policy for Istio Waypoint\nDESCRIPTION: YAML configuration for an AuthorizationPolicy that applies to a waypoint proxy named 'default'. It allows GET requests only from the 'default' and 'istio-system' namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/l7-features/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: view-only\n  namespace: default\nspec:\n  targetRefs:\n  - kind: Gateway\n    group: gateway.networking.k8s.io\n    name: default\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        namespaces: [\"default\", \"istio-system\"]\n    to:\n    - operation:\n        methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Testing Sample Application in Bash\nDESCRIPTION: Sends a request from the 'curl' pod to the 'helloworld' service to test the setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec --context=\"${CTX_REMOTE_CLUSTER}\" -n sample -c curl \\\n    \"$(kubectl get pod --context=\"${CTX_REMOTE_CLUSTER}\" -n sample -l app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n    -- curl -sS helloworld.sample:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Testing Sample Application in Bash\nDESCRIPTION: Sends a request from the 'curl' pod to the 'helloworld' service to test the setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec --context=\"${CTX_REMOTE_CLUSTER}\" -n sample -c curl \\\n    \"$(kubectl get pod --context=\"${CTX_REMOTE_CLUSTER}\" -n sample -l app=curl -o jsonpath='{.items[0].metadata.name}')\" \\\n    -- curl -sS helloworld.sample:5000/hello\n```\n\n----------------------------------------\n\nTITLE: Applying Traffic Control for reviews Service in Istio\nDESCRIPTION: This snippet demonstrates how to apply virtual service and destination rule to control traffic distribution between different versions of the reviews service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f samples/bookinfo/networking/virtual-service-reviews-90-10.yaml\n$ kubectl apply -f samples/bookinfo/networking/destination-rule-reviews.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring PeerAuthentication for Strict mTLS in Istio\nDESCRIPTION: Use Istio's PeerAuthentication policy to strictly enforce mTLS traffic acceptance for applications. This can be applied mesh-wide, per namespace, or per workload.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/secure-apps-with-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: default\n  namespace: istio-system\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio External Authorization Provider for Local OPA\nDESCRIPTION: Adds an extensionProviders configuration to the Istio mesh configuration that defines a local OPA service as an external authorizer for Envoy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\ndata:\n  mesh: |-\n    # Add the following contents:\n    extensionProviders:\n    - name: \"opa.local\"\n      envoyExtAuthzGrpc:\n        service: \"local-opa-grpc.local\"\n        port: \"9191\"\n```\n\n----------------------------------------\n\nTITLE: Checking Pod ENI Status on EKS\nDESCRIPTION: Command to verify if pod ENI trunking is enabled in an EKS cluster by checking the aws-node daemonset environment variables.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/install/platform-prerequisites/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl set env daemonset aws-node -n kube-system --list | grep ENABLE_POD_ENI\n```\n\n----------------------------------------\n\nTITLE: Quoting PCI Data Security Standard in Markdown\nDESCRIPTION: This snippet demonstrates how to use Markdown syntax to quote the PCI Data Security Standard requirements regarding inbound and outbound traffic control.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/egress-traffic-control-in-istio-part-1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< quote >}}\n_1.2.1 Restrict inbound and outbound traffic to that which is necessary for the cardholder data environment, and specifically deny all other traffic._\n{{< /quote >}}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Wildcard Host Configuration\nDESCRIPTION: Removes the ServiceEntry for the wildcard Wikipedia host configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete serviceentry wikipedia\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Authorization Policy using Istio APIs\nDESCRIPTION: This command deletes the 'ingress-policy' authorization policy from the 'istio-system' namespace using Kubernetes kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete authorizationpolicy ingress-policy -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Error Code Handling in Socket Operations\nDESCRIPTION: Shows the error codes returned by AppSwitch during non-blocking connect operations when services are not yet available. These codes are part of the BSD socket API semantics.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/appswitch/index.md#2025-04-08_snippet_1\n\nLANGUAGE: C\nCODE:\n```\nECONNREFUSED\nEAGAIN\n```\n\n----------------------------------------\n\nTITLE: Configuring Separate Gateway Installation\nDESCRIPTION: YAML configuration for installing a separate gateway with custom debug settings using an empty profile.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  profile: empty\n  components:\n    ingressGateways:\n      - name: ilb-gateway\n        namespace: user-ingressgateway-ns\n        enabled: true\n  values:\n    gateways:\n      istio-ingressgateway:\n        debug: error\n```\n\n----------------------------------------\n\nTITLE: Port-Forwarding Proxy Service\nDESCRIPTION: Shows how to use port-forwarding to expose the istioctl-proxy service on localhost for demonstration purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl port-forward -n external-istiod service/istioctl-proxy 9090:9090 --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-host Gateway using Istio APIs\nDESCRIPTION: YAML configuration for setting up an Istio Gateway and VirtualService to handle HTTPS traffic for multiple hosts with different credentials.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https-httpbin\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: httpbin-credential\n    hosts:\n    - httpbin.example.com\n  - port:\n      number: 443\n      name: https-helloworld\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: helloworld-credential\n    hosts:\n    - helloworld.example.com\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter with Incorrect ADD Operation in YAML\nDESCRIPTION: This YAML snippet demonstrates an EnvoyFilter configuration that incorrectly uses the ADD operation for ROUTE_CONFIGURATION. This configuration will be ignored by Istio as only MERGE operations are currently supported for ROUTE_CONFIGURATION.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0153/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-auth-2\n  namespace: bookinfo\nspec:\n  configPatches:\n  - applyTo: ROUTE_CONFIGURATION\n    match:\n      context: SIDECAR_INBOUND\n    patch:\n      operation: ADD\n      filterClass: AUTHZ # 此过滤器将在 Istio 的 authz 过滤器之后运行。\n      value:\n        name: envoy.filters.http.ext_authz\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz\n          grpc_service:\n            envoy_grpc:\n              cluster_name: acme-ext-authz\n            initial_metadata:\n            - key: foo\n              value: myauth.acme # required by local ext auth server.\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Ingress Resources for Istio Services in YAML\nDESCRIPTION: Defines Kubernetes Ingress resources for Grafana, Jaeger, Prometheus, and Kiali services in the Istio system.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: istio-system\n  namespace: istio-system\n  annotations:\n    kubernetes.io/ingress.class: istio\nspec:\n  rules:\n  - host: my-istio-dashboard.io\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: grafana\n            port:\n              number: 3000\n  - host: my-istio-tracing.io\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: tracing\n            port:\n              number: 9411\n  - host: my-istio-logs-database.io\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: prometheus\n            port:\n              number: 9090\n  - host: my-kiali.io\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: kiali\n            port:\n              number: 20001\n```\n\n----------------------------------------\n\nTITLE: Copying mTLS Certificates to External Client in Istio\nDESCRIPTION: Commands to export the external client pod name and copy the necessary CA certificate and client certificates/keys to a curl client running in the default namespace for mTLS verification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export EXTERNAL_CLIENT=$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\n$ kubectl cp client.test.svc.cluster.local.key default/\"${EXTERNAL_CLIENT}\":/tmp/\n$ kubectl cp client.test.svc.cluster.local.crt default/\"${EXTERNAL_CLIENT}\":/tmp/\n$ kubectl cp example.com.crt default/\"${EXTERNAL_CLIENT}\":/tmp/ca.crt\n```\n\n----------------------------------------\n\nTITLE: Viewing Workload Configuration in Ambient Mesh\nDESCRIPTION: Example of workload configuration output from ztunnel showing a helloworld v1 pod that is out-of-mesh, indicated by TCP protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workloads\": {\n    \"10.244.2.8\": {\n      \"workloadIp\": \"10.244.2.8\",\n      \"protocol\": \"TCP\",\n      \"name\": \"helloworld-v1-cross-node-55446d46d8-ntdbk\",\n      \"namespace\": \"default\",\n      \"serviceAccount\": \"helloworld\",\n      \"workloadName\": \"helloworld-v1-cross-node\",\n      \"workloadType\": \"deployment\",\n      \"canonicalName\": \"helloworld\",\n      \"canonicalRevision\": \"v1\",\n      \"node\": \"ambient-worker2\",\n      \"authorizationPolicies\": [],\n      \"status\": \"Healthy\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing a restricted curl request with Kubernetes\nDESCRIPTION: A kubectl command to execute a curl request from a pod in the my-app namespace to httpbin service, which returns a 403 status code due to authorization restrictions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Viewing Kubernetes Contexts\nDESCRIPTION: Command to list all available Kubernetes contexts including the newly created Kind cluster\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl config get-contexts\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Egress Gateway Ports\nDESCRIPTION: Helm command to update the istio-egressgateway service with additional MongoDB port configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhelm template install/kubernetes/helm/istio/ --name istio-egressgateway --namespace istio-system -x charts/gateways/templates/deployment.yaml -x charts/gateways/templates/service.yaml --set gateways.istio-ingressgateway.enabled=false --set gateways.istio-egressgateway.enabled=true --set gateways.istio-egressgateway.ports[0].port=80 --set gateways.istio-egressgateway.ports[0].name=http --set gateways.istio-egressgateway.ports[1].port=443 --set gateways.istio-egressgateway.ports[1].name=https --set gateways.istio-egressgateway.ports[2].port=$EGRESS_GATEWAY_MONGODB_PORT --set gateways.istio-egressgateway.ports[2].name=mongo | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with IP Range Configuration\nDESCRIPTION: Command to install Istio with specific IP ranges for proxy bypass configuration. This sets up the istio-sidecar-injector to only intercept traffic within specified IP ranges.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install <flags-you-used-to-install-Istio> --set values.global.proxy.includeIPRanges=\"10.0.0.1/24\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Istio Telemetry Logs in JSON Format\nDESCRIPTION: A bash command that extracts and filters Istio telemetry logs from the mixer container, focusing specifically on \"newlog.logentry\" instances while excluding certain destinations. The output is in JSON format showing request details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -n istio-system -l istio-mixer-type=telemetry -c mixer | grep \\\"instance\\\":\\\"newlog.logentry.istio-system\\\" | grep -v '\"destination\":\"telemetry\"' | grep -v '\"destination\":\"pilot\"' | grep -v '\"destination\":\"policy\"' | grep -v '\"destination\":\"unknown\"'\n{\"level\":\"warn\",\"time\":\"2018-09-15T20:46:36.009801Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"details\",\"latency\":\"13.601485ms\",\"responseCode\":200,\"responseSize\":178,\"source\":\"productpage\",\"user\":\"unknown\"}\n{\"level\":\"warn\",\"time\":\"2018-09-15T20:46:36.026993Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"reviews\",\"latency\":\"919.482857ms\",\"responseCode\":200,\"responseSize\":295,\"source\":\"productpage\",\"user\":\"unknown\"}\n{\"level\":\"warn\",\"time\":\"2018-09-15T20:46:35.982761Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"productpage\",\"latency\":\"968.030256ms\",\"responseCode\":200,\"responseSize\":4415,\"source\":\"istio-ingressgateway\",\"user\":\"unknown\"}\n```\n\n----------------------------------------\n\nTITLE: Testing External Authorization with Denied Request in Istio\nDESCRIPTION: This bash command tests the external authorization by sending a request to the '/headers' path with a header that should trigger a denial from the external authorizer.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl \"http://httpbin.foo:8000/headers\" -H \"x-ext-authz: deny\" -s\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace and Deploying Workloads\nDESCRIPTION: Commands to create and configure a namespace 'foo' with Istio injection enabled, and deploy httpbin and curl workloads.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/claim-to-header/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl label namespace foo istio-injection=enabled\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@ -n foo\n$ kubectl apply -f @samples/curl/curl.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Istio Egress Gateway Configuration for MongoDB\nDESCRIPTION: This bash script removes the Istio resources created for routing MongoDB traffic through the egress gateway, including the ServiceEntry, Gateway, VirtualService, and DestinationRule.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry mongo\nkubectl delete gateway istio-egressgateway\nkubectl delete virtualservice direct-mongo-through-egress-gateway\nkubectl delete destinationrule egressgateway-for-mongo\n```\n\n----------------------------------------\n\nTITLE: Defining Apache 2.0 License Header for Istio Project\nDESCRIPTION: This code snippet defines the standard Apache 2.0 license header used in Istio project files. It includes copyright information, license terms, and conditions for use, reproduction, and distribution of the software.\nSOURCE: https://github.com/istio/istio.io/blob/master/common/scripts/copyright-banner-go.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n// Copyright Istio Authors\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Checking Istiod Pod Status\nDESCRIPTION: This command checks the status of Istiod pods in the istio-system namespace. It helps verify if the Istio control plane is running correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/validation/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$  kubectl -n istio-system get pod -lapp=istiod\nNAME                            READY     STATUS    RESTARTS   AGE\nistiod-5dbbbdb746-d676g   1/1       Running   0          2d\n```\n\n----------------------------------------\n\nTITLE: Verifying Kubernetes Configuration in Bash\nDESCRIPTION: Prints the current namespace to verify that the configuration has taken effect.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl config view -o jsonpath=\"{.contexts[?(@.name==\\\"$(kubectl config current-context)\\\")].context.namespace}\"\n```\n\n----------------------------------------\n\nTITLE: Patching Gateway API Service for Network Load Balancer\nDESCRIPTION: Command to update the Gateway API service to use externalTrafficPolicy: Local for preserving original client source IP addresses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl patch svc httpbin-gateway-istio -n foo -p '{\"spec\":{\"externalTrafficPolicy\":\"Local\"}}'\n```\n\n----------------------------------------\n\nTITLE: Executing a restricted curl request with Kubernetes\nDESCRIPTION: A kubectl command to execute a curl request from a pod in the my-app namespace to httpbin service, which returns a 403 status code due to authorization restrictions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get\n```\n\n----------------------------------------\n\nTITLE: Istio Gateway Configuration with SNI Passthrough\nDESCRIPTION: Istio Gateway and VirtualService configurations for SNI passthrough to the NGINX service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: PASSTHROUGH\n    hosts:\n    - nginx.example.com\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: nginx\nspec:\n  hosts:\n  - nginx.example.com\n  gateways:\n  - mygateway\n  tls:\n  - match:\n    - port: 443\n      sniHosts:\n      - nginx.example.com\n    route:\n    - destination:\n        host: my-nginx\n        port:\n          number: 443\n```\n\n----------------------------------------\n\nTITLE: Istioctl Changelog Entries\nDESCRIPTION: A collection of changelog entries documenting additions and fixes to the Istioctl command line tool, including new analysis features, command improvements, and bug fixes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## istioctl\n\n- **Added** analysis interval to reduce the wasteful re-runs of analyzer.\n  ([Issue #30200](https://github.com/istio/istio/issues/30200))\n\n- **Added** the cluster id to `istioctl experimental ps`.\n  ([Issue #36290](https://github.com/istio/istio/issues/36290))\n\n- **Added** a new analyzer for envoy filter patch operations.\n  ([Issue #37415](https://github.com/istio/istio/issues/37415))\n\n- **Added** the pod full name to the IST0103 analysis message.\n\n- **Added** `istioctl ps` support for ECDS.\n\n- **Fixed** unexpected warning logs for `istioctl install --dry-run`.\n  ([Issue #37084](https://github.com/istio/istio/issues/37084))\n\n- **Fixed** nil pointer dereference panic when using `kube-inject` when\nnot passing a needed revision but also passing `injectConfigMapName`.  ([Issue #38083](https://github.com/istio/istio/issues/38083))\n\n- **Fixed** behavior for `istioctl create-remote-secret` on Kubernetes 1.24+. In these versions,\n  a Secret containing a `ServiceAccount` API token is no longer automatically created, so `istioctl`\n  will [create one](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#manually-create-a-service-account-api-token).\n```\n\n----------------------------------------\n\nTITLE: Exporting Istio Custom Configurations in Bash\nDESCRIPTION: This command exports all Istio custom configurations across all namespaces to a YAML file in the user's home directory. It uses kubectl to get all istio-io resources and saves them to a backup file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/helm-backup.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get istio-io --all-namespaces -oyaml > \"$HOME\"/istio_resource_backup.yaml\n```\n\n----------------------------------------\n\nTITLE: Istio Gateway Configuration with SNI Passthrough\nDESCRIPTION: Istio Gateway and VirtualService configurations for SNI passthrough to the NGINX service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: PASSTHROUGH\n    hosts:\n    - nginx.example.com\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: nginx\nspec:\n  hosts:\n  - nginx.example.com\n  gateways:\n  - mygateway\n  tls:\n  - match:\n    - port: 443\n      sniHosts:\n      - nginx.example.com\n    route:\n    - destination:\n        host: my-nginx\n        port:\n          number: 443\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host for GKE\nDESCRIPTION: Sets the ingress host to a worker node address for Google Kubernetes Engine.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nexport INGRESS_HOST=worker-node-address\n```\n\n----------------------------------------\n\nTITLE: Viewing Workload Configuration in Ambient Mesh\nDESCRIPTION: Example of workload configuration output from ztunnel showing a helloworld v1 pod that is out-of-mesh, indicated by TCP protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"workloads\": {\n    \"10.244.2.8\": {\n      \"workloadIp\": \"10.244.2.8\",\n      \"protocol\": \"TCP\",\n      \"name\": \"helloworld-v1-cross-node-55446d46d8-ntdbk\",\n      \"namespace\": \"default\",\n      \"serviceAccount\": \"helloworld\",\n      \"workloadName\": \"helloworld-v1-cross-node\",\n      \"workloadType\": \"deployment\",\n      \"canonicalName\": \"helloworld\",\n      \"canonicalRevision\": \"v1\",\n      \"node\": \"ambient-worker2\",\n      \"authorizationPolicies\": [],\n      \"status\": \"Healthy\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving IstioOperator Configuration in Bash\nDESCRIPTION: Commands to list and retrieve the IstioOperator custom resource configuration as YAML. This is used in the migration process to istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get IstioOperator\n$ kubectl get IstioOperator <name> -o yaml > istio.yaml\n```\n\n----------------------------------------\n\nTITLE: Istio Warning Message for Host Not Found in Gateway\nDESCRIPTION: The IST0132 warning message displayed when Istio detects a mismatch between VirtualService hosts and Gateway hosts, indicating that 'wrong.com' is not found in the referenced Gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0132/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0132] (VirtualService testing-service.default testing.yaml:8) one or more host [wrong.com] defined in VirtualService default/testing-service not found in Gateway istio-system/testing-gateway.\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio System Namespace\nDESCRIPTION: Command to remove the istio-system namespace after uninstalling Istio components.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/helm/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Testing Dry-Run Policy with Multiple Requests\nDESCRIPTION: Sends 20 requests to the /headers path of httpbin service to generate data for analyzing dry-run results.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ for i in {1..20}; do kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.foo:8000/headers -H \"X-B3-Sampled: 1\" -s -o /dev/null -w \"%{http_code}\\n\"; done\n```\n\n----------------------------------------\n\nTITLE: Testing Wasm Module Authentication\nDESCRIPTION: Shell commands to test the configured Wasm authentication module by making HTTP requests with and without credentials to verify proper access control.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/extensibility/wasm-module-distribution/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -o /dev/null -w \"%{http_code}\" \"http://$INGRESS_HOST:$INGRESS_PORT/productpage\"\n```\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s -o /dev/null -w \"%{http_code}\" -H \"Authorization: Basic YWRtaW4zOmFkbWluMw==\" \"http://$INGRESS_HOST:$INGRESS_PORT/productpage\"\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo Application to Kubernetes\nDESCRIPTION: Deploys the Bookinfo application to a Kubernetes cluster, excluding v2 and v3 versions of the services. This command creates the core services and v1 deployments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -l version!=v2,version!=v3 -f {{< github_file >}}/samples/bookinfo/platform/kube/bookinfo.yaml\nservice/details created\nserviceaccount/bookinfo-details created\ndeployment.apps/details-v1 created\nservice/ratings created\nserviceaccount/bookinfo-ratings created\ndeployment.apps/ratings-v1 created\nservice/reviews created\nserviceaccount/bookinfo-reviews created\ndeployment.apps/reviews-v1 created\nservice/productpage created\nserviceaccount/bookinfo-productpage created\ndeployment.apps/productpage-v1 created\n```\n\n----------------------------------------\n\nTITLE: Restarting OPA Deployment\nDESCRIPTION: Restarts the OPA deployment to apply the new policy. This ensures that the latest policy is loaded and active.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl rollout restart deployment -n opa\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Node Region\nDESCRIPTION: Command to inspect the region label of Kubernetes nodes\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl describe node | grep failure-domain.beta.kubernetes.io/region\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespaces with Revision Tags\nDESCRIPTION: Creates multiple namespaces and assigns them to specific Istio revision tags, allowing for tag-based control plane association.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns app-ns-1\n$ kubectl label ns app-ns-1 istio.io/rev=prod-stable\n$ kubectl create ns app-ns-2\n$ kubectl label ns app-ns-2 istio.io/rev=prod-stable\n$ kubectl create ns app-ns-3\n$ kubectl label ns app-ns-3 istio.io/rev=prod-canary\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Security Bulletin\nDESCRIPTION: YAML configuration metadata for the security bulletin page defining CVEs, CVSS scores, affected releases, and page properties.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-007/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: ISTIO-SECURITY-2020-007\nsubtitle: Security Bulletin\ndescription: Multiple denial of service vulnerabilities in Envoy.\ncves: [CVE-2020-12603, CVE-2020-12605, CVE-2020-8663, CVE-2020-12604]\ncvss: \"7.5\"\nvector: \"AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H\"\nreleases: [\"1.5 to 1.5.6\", \"1.6 to 1.6.3\"]\npublishdate: 2020-06-30\nkeywords: [CVE]\nskip_seealso: true\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Engine Crawler Access for Istio Documentation\nDESCRIPTION: This robots.txt file configuration allows unrestricted access to all web crawlers and points to the sitemap location for version 1.5 of the Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.5/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.5/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring ServiceEntry with Addresses and Endpoints in Istio\nDESCRIPTION: This YAML snippet demonstrates how to configure a ServiceEntry resource with separate addresses and endpoints. The address field (1.1.1.1) defines what traffic will be matched, while the endpoints (2.2.2.2 and 3.3.3.3) specify where the traffic will be sent according to load balancing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/traffic-routing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\naddresses: [1.1.1.1]\nresolution: STATIC\nendpoints:\n- address: 2.2.2.2\n- address: 3.3.3.3\n```\n\n----------------------------------------\n\nTITLE: Deploying NGINX Server\nDESCRIPTION: Creates a Kubernetes Service and Deployment for the NGINX server with SSL configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-nginx\n  labels:\n    run: my-nginx\nspec:\n  ports:\n  - port: 443\n    protocol: TCP\n  selector:\n    run: my-nginx\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-nginx\nspec:\n  selector:\n    matchLabels:\n      run: my-nginx\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        run: my-nginx\n        sidecar.istio.io/inject: \"true\"\n    spec:\n      containers:\n      - name: my-nginx\n        image: nginx\n        ports:\n        - containerPort: 443\n        volumeMounts:\n        - name: nginx-config\n          mountPath: /etc/nginx\n          readOnly: true\n        - name: nginx-server-certs\n          mountPath: /etc/nginx-server-certs\n          readOnly: true\n      volumes:\n      - name: nginx-config\n        configMap:\n          name: nginx-configmap\n      - name: nginx-server-certs\n        secret:\n          secretName: nginx-server-certs\n```\n\n----------------------------------------\n\nTITLE: Enabling Insecure Multicluster Kubeconfig Options in Istiod\nDESCRIPTION: Configures an environment variable in Istiod to enable insecure authentication methods for multicluster kubeconfig files, such as 'exec' authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/announcing-1.13/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nPILOT_INSECURE_MULTICLUSTER_KUBECONFIG_OPTIONS=exec\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Native Sidecar Support\nDESCRIPTION: This code snippet shows how to download and install a pre-release version of Istio 1.19, enabling the native sidecar support feature flag and turning on access logs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/native-sidecars/index.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ TAG=1.19.0-beta.0\n$ curl -L https://github.com/istio/istio/releases/download/$TAG/istio-$TAG-linux-amd64.tar.gz | tar xz\n$ ./istioctl install --set values.pilot.env.ENABLE_NATIVE_SIDECARS=true -y --set meshConfig.accessLogFile=/dev/stdout\n```\n\n----------------------------------------\n\nTITLE: Getting MongoDB IP Address\nDESCRIPTION: Retrieves the IP address of the MongoDB host using the 'host' command and stores it in an environment variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ export MONGODB_IP=$(host $MONGODB_HOST | grep \" has address \" | cut -d\" \" -f4)\n```\n\n----------------------------------------\n\nTITLE: Customizing Histogram Bucket Sizes with EnvoyFilter in Istio (YAML)\nDESCRIPTION: A deprecated example of using EnvoyFilter to configure histogram bucket sizes for metrics. This approach uses the BOOTSTRAP patch which is not recommended.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/upgrade-issues/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: envoy-stats-1\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      istio: ingressgateway\n  configPatches:\n  - applyTo: BOOTSTRAP\n    patch:\n      operation: MERGE\n      value:\n        stats_config:\n          histogram_bucket_settings:\n            - match:\n                prefix: istiocustom\n              buckets: [1,5,50,500,5000,10000]\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Addons in Bash\nDESCRIPTION: Applies the Istio addons (Kiali and Prometheus) to the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/setup-kubernetes-cluster/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/addons@\n```\n\n----------------------------------------\n\nTITLE: Request Classification YAML Configuration\nDESCRIPTION: YAML configuration for classifying requests using WasmPlugin and Telemetry resources. Defines operation types like ListReviews, GetReview, and CreateReview.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/classify-metrics/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: extensions.istio.io/v1alpha1\nkind: WasmPlugin\nmetadata:\n  name: istio-attributegen-filter\nspec:\n  selector:\n    matchLabels:\n      app: reviews\n  url: https://storage.googleapis.com/istio-build/proxy/attributegen-359dcd3a19f109c50e97517fe6b1e2676e870c4d.wasm\n  imagePullPolicy: Always\n  phase: AUTHN\n  pluginConfig:\n    attributes:\n    - output_attribute: \"istio_operationId\"\n      match:\n        - value: \"ListReviews\"\n          condition: \"request.url_path == '/reviews' && request.method == 'GET'\"\n        - value: \"GetReview\"\n          condition: \"request.url_path.matches('^/reviews/[[:alnum:]]*$') && request.method == 'GET'\"\n        - value: \"CreateReview\"\n          condition: \"request.url_path == '/reviews/' && request.method == 'POST'\"\n---\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: custom-tags\nspec:\n  metrics:\n    - overrides:\n        - match:\n            metric: REQUEST_COUNT\n            mode: CLIENT_AND_SERVER\n          tagOverrides:\n            request_operation:\n              value: filter_state['wasm.istio_operationId']\n      providers:\n        - name: prometheus\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Node Region\nDESCRIPTION: Command to inspect the region label of Kubernetes nodes\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/external-locality-failover/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl describe node | grep failure-domain.beta.kubernetes.io/region\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio DestinationRule for TLS Origination in YAML\nDESCRIPTION: Defines a DestinationRule to enable TLS origination for egress traffic. It sets up a subset for the external service and configures TLS settings for port 443.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: \"httpbin-egress\"\n  namespace: \"httpbin\"\nspec:\n  host: \"httpbin.org\"\n  subsets:\n  - name: \"http-egress-subset\"\n    trafficPolicy:\n      loadBalancer:\n        simple: ROUND_ROBIN\n      portLevelSettings:\n      - port:\n          number: 443\n        tls:\n          mode: SIMPLE\n```\n\n----------------------------------------\n\nTITLE: Verifying Deployment of Sample Kubernetes Pods\nDESCRIPTION: Checks that the helloworld service deployments (v1 and v2) are running properly in the 'sample' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get pod -n sample\n```\n\n----------------------------------------\n\nTITLE: Listing Istio Control Plane Pods by Revision\nDESCRIPTION: Shows how to check for multiple control plane deployments running simultaneously with different revisions, displaying the pods with the 'istiod' app label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system -l app=istiod\nNAME                             READY   STATUS    RESTARTS   AGE\nistiod-{{< istio_previous_version_revision >}}-1-bdf5948d5-htddg    1/1     Running   0          47s\nistiod-canary-84c8d4dcfb-skcfv   1/1     Running   0          25s\n```\n\n----------------------------------------\n\nTITLE: Checking Envoy configuration for ext_authz filter\nDESCRIPTION: A command to verify the presence of the ext_authz filter in the Envoy proxy configuration for the httpbin deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl pc all deploy/httpbin -n my-app -oyaml | grep envoy.filters.http.ext_authz\n```\n\n----------------------------------------\n\nTITLE: Applying Virtual Service for Details V2\nDESCRIPTION: Directs all traffic to the details v2 microservice.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/bookinfo/networking/virtual-service-details-v2.yaml@\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Authorization Policy using Gateway API\nDESCRIPTION: This command deletes the 'ingress-policy' authorization policy from the 'foo' namespace using Kubernetes kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete authorizationpolicy ingress-policy -n foo\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Sidecar Injector ConfigMap\nDESCRIPTION: Displays the default injection policy from the Istio sidecar injector ConfigMap.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get configmap istio-sidecar-injector -o=jsonpath='{.data.config}'\nSNIPPET from the output:\n\npolicy: enabled\ntemplate: |-\n  initContainers:\n  - name: istio-init\n    image: \"gcr.io/istio-release/proxy_init:1.0.2\"\n    args:\n    - \"-p\"\n    - [[ .MeshConfig.ProxyListenPort ]]\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Variables for Gateway API\nDESCRIPTION: Sets environment variables for ingress host and port using Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl wait --for=condition=programmed gtw tcp-echo-gateway -n istio-io-tcp-traffic-shifting\n$ export INGRESS_HOST=$(kubectl get gtw tcp-echo-gateway -n istio-io-tcp-traffic-shifting -o jsonpath='{.status.addresses[0].value}')\n$ export TCP_INGRESS_PORT=$(kubectl get gtw tcp-echo-gateway -n istio-io-tcp-traffic-shifting -o jsonpath='{.spec.listeners[?(@.name==\"tcp-31400\")].port}')\n```\n\n----------------------------------------\n\nTITLE: Limiting Service Visibility using exportTo Annotation in Istio\nDESCRIPTION: This YAML configuration shows how to use the networking.istio.io/exportTo annotation on a Kubernetes Service to control its visibility. In this example, the 'details' service is only made visible to its own namespace and the 'client' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/configuration-scoping/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  annotations:\n    networking.istio.io/exportTo: \".,client\"\nspec: ...\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio Gateway Configuration and Route\nDESCRIPTION: Commands to remove the Istio gateway and virtual service configurations. Two options are provided: one for Istio APIs and another for Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete gateway mygateway\n$ kubectl delete virtualservice nginx\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete gtw mygateway\n$ kubectl delete tlsroute nginx\n```\n\n----------------------------------------\n\nTITLE: Testing Simple Authorization Rule\nDESCRIPTION: Example commands showing how to test authorization rules with curl, demonstrating both authorized (200) and unauthorized (403) responses\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -n my-app curl -c curl  -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -n my-app curl -c curl  -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-authorized: enabled\"\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Routing Rules Using Istio APIs\nDESCRIPTION: This command removes the application routing rules created with Istio APIs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/traffic-shifting/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/bookinfo/networking/virtual-service-all-v1.yaml@\n```\n\n----------------------------------------\n\nTITLE: Sample httpbin manifest update for OpenShift\nDESCRIPTION: Documentation fix mentioned for the httpbin sample manifests to ensure proper deployment on OpenShift platforms.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/announcing-1.21/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Documentation changes\\n\\n- **Fixed** `httpbin` sample manifests to deploy correctly on OpenShift.\n```\n\n----------------------------------------\n\nTITLE: Auto-generated WorkloadEntry for Virtual Machine in Istio Mesh\nDESCRIPTION: This YAML snippet shows a WorkloadEntry resource that is automatically created by Istio's control plane when a virtual machine is added to the mesh. It contains the VM's IP address, labels, and service account information, allowing the VM to participate in the service mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/deployment/vm-architecture/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: WorkloadEntry\nmetadata:\n  annotations:\n    istio.io/autoRegistrationGroup: product-vm\n  labels:\n    app: product\n  name: product-vm-1.2.3.4\nspec:\n  address: 1.2.3.4\n  labels:\n    app: product\n  serviceAccount: default\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio to Opt-out from Fragment CVE Fix\nDESCRIPTION: YAML configuration to create an IstioOperator that disables the fix for the fragment URI path vulnerability (CVE-2021-39156). This sets the proxyMetadata field to disable HTTP fragment stripping, which is considered unsafe and should only be used after ensuring security policies accommodate for this behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-008/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  name: opt-out-fragment-cve-fix\n  namespace: istio-system\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        HTTP_STRIP_FRAGMENT_FROM_PATH_UNSAFE_IF_DISABLED: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Solving 503 Error with Proper Host Header\nDESCRIPTION: Bash commands demonstrating how to fix the 503 error by specifying the correct Host header when accessing a headless service pod directly. Using 'nginx.default' as the Host header allows successful access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath='{.items..metadata.name}')\n$ kubectl exec -it $SOURCE_POD -c curl -- curl -H \"Host: nginx.default\" 10.1.1.171 -s -o /dev/null -w \"%{http_code}\"\n  200\n```\n\n----------------------------------------\n\nTITLE: Querying Istio-Proxy Stats for Circuit Breaker Metrics\nDESCRIPTION: This command retrieves circuit breaker related statistics from the istio-proxy sidecar. It filters for httpbin-related metrics, focusing on pending requests and circuit breaker status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/circuit-breaking/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$FORTIO_POD\" -c istio-proxy -- pilot-agent request GET stats | grep httpbin | grep pending\n```\n\n----------------------------------------\n\nTITLE: Sample Extension Provider Configuration\nDESCRIPTION: YAML configuration to define two external authorization providers (gRPC and HTTP) that connect to the sample external authorizer service, specifying connection details and header handling.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ndata:\n  mesh: |-\n    # Add the following content to define the external authorizers.\n    extensionProviders:\n    - name: \"sample-ext-authz-grpc\"\n      envoyExtAuthzGrpc:\n        service: \"ext-authz.foo.svc.cluster.local\"\n        port: \"9000\"\n    - name: \"sample-ext-authz-http\"\n      envoyExtAuthzHttp:\n        service: \"ext-authz.foo.svc.cluster.local\"\n        port: \"8000\"\n        includeRequestHeadersInCheck: [\"x-ext-authz\"]\n```\n\n----------------------------------------\n\nTITLE: Testing Gateway Without JWT Token\nDESCRIPTION: This snippet demonstrates that requests without a JWT token are still accepted when only RequestAuthentication is applied without an Authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ curl \"$INGRESS_HOST:$INGRESS_PORT/headers\" -s -o /dev/null -w \"%{http_code}\\n\"\n200\n```\n\n----------------------------------------\n\nTITLE: Redeploying Reviews v2\nDESCRIPTION: This command redeploys version 2 of the reviews service after a rollback.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -l app=reviews,version=v2 -f {{< github_file >}}/samples/bookinfo/platform/kube/bookinfo.yaml\n```\n\n----------------------------------------\n\nTITLE: Enforcing JWT Authentication for Admin Path in Istio\nDESCRIPTION: This YAML snippet creates an AuthorizationPolicy that denies requests to the '/admin' path that don't have a request principal, effectively requiring JWT authentication for accessing the admin interface.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: enable-jwt-for-admin\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        paths: [\"/admin\"]\n    from:\n    - source:\n        notRequestPrincipals: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Navigating to Istio Directory\nDESCRIPTION: Command to change directory to the downloaded Istio package folder.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cd istio-$ISTIO_VERSION/\n```\n\n----------------------------------------\n\nTITLE: Updating Mesh Config with istioctl for Path Normalization\nDESCRIPTION: This command uses istioctl to update the mesh configuration and set the path normalization option to DECODE_AND_MERGE_SLASHES.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl upgrade --set meshConfig.pathNormalization.normalization=DECODE_AND_MERGE_SLASHES\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Gateway API CRDs with kubectl\nDESCRIPTION: Downloads and installs the Kubernetes Gateway API Custom Resource Definitions (CRDs) using kubectl, checking first if they already exist to avoid reinstallation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get crd gateways.gateway.networking.k8s.io &> /dev/null || \\\n  { kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd?ref={{< k8s_gateway_api_version >}}\" | kubectl apply -f -; }\n```\n\n----------------------------------------\n\nTITLE: Upgrading Manually Deployed Istio Gateway\nDESCRIPTION: This optional command upgrades manually deployed Istio gateways using Helm. It upgrades the 'istio-ingress' release in the 'istio-ingress' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/all-in-one/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-ingress istio/gateway -n istio-ingress\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Access Logging for the Mesh\nDESCRIPTION: Configuration to enable access logging at the mesh level using the Telemetry API. This applies the configuration to the istio-system namespace and uses the OpenTelemetry (otel) provider.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/telemetry-api/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | kubectl apply -n istio-system -f -\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-logging-default\nspec:\n  accessLogging:\n  - providers:\n    - name: otel\nEOF\n```\n\n----------------------------------------\n\nTITLE: Querying Mixer Logs\nDESCRIPTION: Command to retrieve and filter Istio Mixer logs for CNN.com access entries.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system logs -l istio-mixer-type=telemetry -c mixer | grep egress-access | grep cnn | tail -4\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Stable Validation Policy and Specific Revision\nDESCRIPTION: This command installs Istio with the stable validation policy enabled and sets a specific revision. It allows for more granular control over the Istio installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/v1-apis/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base -n istio-system --set experimental.stableValidationPolicy=true -set revision=x\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Namespace\nDESCRIPTION: This command removes the 'foo' namespace from the Kubernetes cluster using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace foo\n```\n\n----------------------------------------\n\nTITLE: Setting Up Multiple KinD Clusters for Testing\nDESCRIPTION: Command to create a multi-cluster environment using KinD with the default topology configuration, storing artifacts for later use.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nmkdir artifacts # create a directory for kubeconfigs and logs\nARTIFACTS=$PWD/artifacts ./prow/integ-suite-kind.sh --topology MULTICLUSTER --skip-cleanup\n```\n\n----------------------------------------\n\nTITLE: System Call Reference - Socket Operations\nDESCRIPTION: System call references for socket operations including connect(2), recvfrom(2) with MSG_PEEK option used for examining socket traffic without removing data from buffers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/delayering-istio/index.md#2025-04-08_snippet_2\n\nLANGUAGE: c\nCODE:\n```\nconnect(2)\nrecvfrom(2)\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Applications\nDESCRIPTION: Deploys the bookinfo sample application along with sleep and notsleep testing utilities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml\nkubectl apply -f https://raw.githubusercontent.com/linsun/sample-apps/main/sleep/sleep.yaml\nkubectl apply -f https://raw.githubusercontent.com/linsun/sample-apps/main/sleep/notsleep.yaml\n```\n\n----------------------------------------\n\nTITLE: Waiting for Gateway Readiness and Retrieving External Address\nDESCRIPTION: This snippet waits for the Gateway to be ready and then retrieves its external address. It uses kubectl commands to check the Gateway's condition and extract the address.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl wait -n sample-ingress --for=condition=programmed gateway sample-gateway\n$ export INGRESS_HOST=$(kubectl get -n sample-ingress gateway sample-gateway -o jsonpath='{.status.addresses[0].value}')\n```\n\n----------------------------------------\n\nTITLE: Preparing Namespace for Istio Injection\nDESCRIPTION: This snippet creates a new namespace called 'sample' and labels it to enable Istio injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace sample\n$ kubectl label namespace sample istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Operator Resources\nDESCRIPTION: 在完成迁移后，删除 Istio Operator 相关资源，包括 Operator 部署和 IstioOperator 自定义资源定义。\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete deployment -n istio-system istio-operator\n$ kubectl delete customresourcedefinition istiooperator\n```\n\n----------------------------------------\n\nTITLE: Disabling Startup Probe in Istio 1.20\nDESCRIPTION: This YAML configuration demonstrates how to disable the startup probe in Istio 1.20, reverting the behavior to match older Istio versions. It adjusts readiness probe settings and disables the startup probe.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.20.x/announcing-1.20/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nreadinessInitialDelaySeconds: 1\nreadinessPeriodSeconds: 2\nreadinessFailureThreshold: 30\nstartupProbe:\nenabled: false\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Unbalanced Load in Kubernetes HTTP Traffic\nDESCRIPTION: This bash snippet shows how Kubernetes' layer 4 load balancing can lead to unbalanced distribution of HTTP requests across service replicas.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/zero-config-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl http://echo/{0..5} -s | grep Hostname\nHostname=echo-cb96f8d94-2ssll\nHostname=echo-cb96f8d94-2ssll\nHostname=echo-cb96f8d94-2ssll\nHostname=echo-cb96f8d94-2ssll\nHostname=echo-cb96f8d94-2ssll\nHostname=echo-cb96f8d94-2ssll\n$ curl http://echo/{0..5} -s | grep Hostname\nHostname=echo-cb96f8d94-879sn\nHostname=echo-cb96f8d94-879sn\nHostname=echo-cb96f8d94-879sn\nHostname=echo-cb96f8d94-879sn\nHostname=echo-cb96f8d94-879sn\nHostname=echo-cb96f8d94-879sn\n```\n\n----------------------------------------\n\nTITLE: Configuring TCP Connection Timeout with Destination Rule in Istio (YAML)\nDESCRIPTION: This Destination Rule adjusts the TCP connection timeout for requests to the external service ext-svc.example.com to 1 second. It works in conjunction with a previously defined Service Entry for the same host.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/traffic-management/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: ext-res-dr\nspec:\n  host: ext-svc.example.com\n  trafficPolicy:\n    connectionPool:\n      tcp:\n        connectTimeout: 1s\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio Release Documentation\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.10.3 release announcement page, including title, publication date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.10.3\nlinktitle: 1.10.3\nsubtitle: Patch Release\ndescription: Istio 1.10.3 patch release.\npublishdate: 2021-07-16\nrelease: 1.10.3\naliases:\n    - /news/announcing-1.10.3\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on Primary Cluster with IstioOperator\nDESCRIPTION: Command to apply the IstioOperator configuration to cluster1, installing Istio as a primary control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER1}\" -f cluster1.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Istio on Primary Cluster with IstioOperator\nDESCRIPTION: Command to apply the IstioOperator configuration to cluster1, installing Istio as a primary control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --context=\"${CTX_CLUSTER1}\" -f cluster1.yaml\n```\n\n----------------------------------------\n\nTITLE: Verifying External Authorizer Deployment\nDESCRIPTION: Command to check the logs of the external authorization server to confirm it has started both HTTP and gRPC servers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs \"$(kubectl get pod -l app=ext-authz -n foo -o jsonpath={.items..metadata.name})\" -n foo -c ext-authz\n2021/01/07 22:55:47 Starting HTTP server at [::]:8000\n2021/01/07 22:55:47 Starting gRPC server at [::]:9000\n```\n\n----------------------------------------\n\nTITLE: Deleting Telemetry Resource\nDESCRIPTION: Command to remove the Telemetry resource during cleanup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete telemetry otel-demo\n```\n\n----------------------------------------\n\nTITLE: Deploying Ratings Service with MySQL Backend\nDESCRIPTION: Command to deploy version 2 of the ratings service that connects to the MySQL database on the VM. This replaces the default in-memory ratings implementation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n bookinfo -f @samples/bookinfo/platform/kube/bookinfo-ratings-v2-mysql-vm.yaml@\n```\n\n----------------------------------------\n\nTITLE: Analyzing Istio Configuration with istioctl\nDESCRIPTION: Uses the istioctl command to analyze the Istio configuration across all namespaces, verifying that all objects are correctly specified.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Disabling PeerAuthentication for External Port\nDESCRIPTION: Creates a PeerAuthentication policy to disable mTLS on the specific port (9080) that will be used for external TLS termination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n test apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: disable-peer-auth-for-external-mtls-port\n  namespace: test\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  mtls:\n    mode: STRICT\n  portLevelMtls:\n    9080:\n      mode: DISABLE\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating a Namespace-wide Istio Authorization Policy in YAML\nDESCRIPTION: A v1beta1 AuthorizationPolicy without a selector, which applies to all workloads in the bar namespace. This demonstrates how to create namespace-wide policies with the simplified API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: policy\n namespace: bar\nspec:\n rules:\n # omitted\n```\n\n----------------------------------------\n\nTITLE: Displaying Istio System Services with kubectl\nDESCRIPTION: A bash text block showing how to list services in the istio-system namespace using kubectl, with output displaying service information including their types, IPs, and ports.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n istio-system\nNAME                     TYPE           CLUSTER-IP       EXTERNAL-IP     PORT(S)\ngrafana                  ClusterIP      172.21.211.123   <none>          3000/TCP\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Operator for SkyWalking Tracing\nDESCRIPTION: YAML configuration for enabling SkyWalking tracing in Istio using IstioOperator. Sets SkyWalking as the default tracer and configures the backend service endpoint.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/skywalking/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultProviders:\n      tracing:\n      - \"skywalking\"\n    enableTracing: true\n    extensionProviders:\n    - name: \"skywalking\"\n      skywalking:\n        service: tracing.istio-system.svc.cluster.local\n        port: 11800\n```\n\n----------------------------------------\n\nTITLE: Exporting Kubernetes Context Environment Variables\nDESCRIPTION: Commands to export environment variables containing the Kubernetes context names for the two clusters used in the multicluster setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export CTX_CLUSTER1=<cluster1 context name>\n$ export CTX_CLUSTER2=<cluster2 context name>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP/HTTPS Request Logic in Ruby\nDESCRIPTION: Ruby code showing conditional HTTPS request handling based on environment variable DO_NOT_ENCRYPT. Uses net/http module to make requests to Google Books API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\nuri = URI.parse('https://www.googleapis.com/books/v1/volumes?q=isbn:' + isbn)\nhttp = Net::HTTP.new(uri.host, ENV['DO_NOT_ENCRYPT'] === 'true' ? 80:443)\n...\nunless ENV['DO_NOT_ENCRYPT'] === 'true' then\n     http.use_ssl = true\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving Client IP Address from Logs\nDESCRIPTION: Bash command to extract the client IP address from Istio ingress gateway logs. Used for verifying and debugging IP-based access control policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nCLIENT_IP=$(kubectl get pods -n istio-system -o name -l istio=ingressgateway | sed 's|pod/||' | while read -r pod; do kubectl logs \"$pod\" -n istio-system | grep remoteIP; done | tail -1 | awk -F, '{print $3}' | awk -F: '{print $2}' | sed 's/ //')\n```\n\n----------------------------------------\n\nTITLE: Running Documentation Tests Locally with KinD\nDESCRIPTION: Command to run documentation tests using KinD (Kubernetes in Docker) with host networking. Creates a Kubernetes cluster named 'istio-testing' and runs the documentation tests within it.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nTEST_ENV=kind ADDITIONAL_CONTAINER_OPTIONS=\"--network host\" make doc.test\n```\n\n----------------------------------------\n\nTITLE: Deploying Details V2 Service with HTTPS\nDESCRIPTION: Deploys a new version of the details microservice that uses HTTPS to access Google Books API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f @samples/bookinfo/platform/kube/bookinfo-details-v2.yaml@ --dry-run -o yaml | kubectl set env --local -f - 'DO_NOT_ENCRYPT=false' -o yaml | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Applying Istio Gateway Configuration in Bash\nDESCRIPTION: Applies the Istio Gateway configuration on the external cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f external-istiod-gw.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Checking Control Plane Pods During Upgrade in Bash\nDESCRIPTION: This command lists all pods in the istio-system namespace to verify that both old and new istiod control plane instances are running during the upgrade process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\nNAME                                      READY   STATUS    RESTARTS   AGE\nistiod-default-v1-24-2-bd8458c4-jl8zm     1/1     Running   0          16m\nistiod-default-v1-24-3-68df97dfbb-v7ndm   1/1     Running   0          6m32s\n```\n\n----------------------------------------\n\nTITLE: Configuring Nested JSON in Istio Access Log Format YAML\nDESCRIPTION: Fixed issue to allow nested JSON structure in meshConfig.accessLogFormat.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmeshConfig:\n  accessLogFormat:\n    nestedKey:\n      subKey: value\n```\n\n----------------------------------------\n\nTITLE: Applying DestinationRule using kubectl in Istio\nDESCRIPTION: This bash command applies the DestinationRule YAML configuration to the Kubernetes cluster using kubectl. It targets the 'sample' namespace in the primary context.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/distribute/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_PRIMARY}\" apply -n sample -f - <<EOF\n# YAML content here\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring JWT Public Key Refresh Interval in Istio YAML\nDESCRIPTION: Added an environment variable PILOT_JWT_PUB_KEY_REFRESH_INTERVAL to configure the interval of istiod fetching the jwks_uri for the JWKS public key. The default interval is 20m.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nvalues:\n  pilot:\n    env:\n      PILOT_JWT_PUB_KEY_REFRESH_INTERVAL: \"30m\"\n```\n\n----------------------------------------\n\nTITLE: Installing Bookinfo Ratings v2 Service in Kubernetes with Istio\nDESCRIPTION: Command to deploy version 2 of the Bookinfo ratings service, which is configured to use MongoDB as a backend database.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo-ratings-v2.yaml@\nserviceaccount/bookinfo-ratings-v2 created\ndeployment.apps/ratings-v2 created\n```\n\n----------------------------------------\n\nTITLE: Configuring ServiceEntry Resources\nDESCRIPTION: Creates ServiceEntry resources to enable communication with the external TCP services using DNS resolution.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: external-svc-1\nspec:\n  hosts:\n  - tcp-echo.external-1.svc.cluster.local\n  ports:\n  - name: external-svc-1\n    number: 9000\n    protocol: TCP\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: external-svc-2\nspec:\n  hosts:\n  - tcp-echo.external-2.svc.cluster.local\n  ports:\n  - name: external-svc-2\n    number: 9000\n    protocol: TCP\n  resolution: DNS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Rendered HTML Output of Tabbed Content in Istio Documentation\nDESCRIPTION: This snippet shows the HTML output produced by the tabbed content shortcodes. It demonstrates how the tabs are structured and rendered in the final documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n{{< tabset category-name=\"platform\" >}}\n\n{{< tab name=\"One\" category-value=\"one\" >}}\nONE\n{{< /tab >}}\n\n{{< tab name=\"Two\" category-value=\"two\" >}}\nTWO\n{{< /tab >}}\n\n{{< tab name=\"Three\" category-value=\"three\" >}}\nTHREE\n{{< /tab >}}\n\n{{< /tabset >}}\n```\n\n----------------------------------------\n\nTITLE: Testing Reviews v2 with Curl\nDESCRIPTION: This command sends a request to the new version of the reviews service to verify its functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec $(kubectl get pod -l app=curl -o jsonpath='{.items[0].metadata.name}') -- curl -sS \"$REVIEWS_V2_POD_IP:9080/reviews/7\"\n```\n\n----------------------------------------\n\nTITLE: Combined VirtualService Configuration\nDESCRIPTION: Comprehensive VirtualService configuration combining both internal and external traffic routing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myapp\nspec:\n  hosts:\n  - myapp.com\n  - helloworld.default.svc.cluster.local\n  gateways:\n  - mesh\n  - myapp-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /hello\n      gateways:\n      - myapp-gateway\n    route:\n    - destination:\n        host: helloworld.default.svc.cluster.local\n        subset: v1\n  - match:\n    - gateways:\n      - mesh\n    route:\n    - destination:\n        host: helloworld.default.svc.cluster.local\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Proxy Configuration for Httpbin Workload\nDESCRIPTION: This command retrieves the proxy configuration dump for the httpbin workload, which helps in verifying the correct application of authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec  $(kubectl get pods -l app=httpbin -o jsonpath='{.items[0].metadata.name}') -c istio-proxy -- pilot-agent request GET config_dump\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Logs\nDESCRIPTION: Examines the logs of the Istio egress gateway proxy to verify traffic flow.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l istio=egressgateway -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Initializing the Ratings Database in MySQL\nDESCRIPTION: Commands to download and execute the SQL script that initializes the ratings database in MySQL. This creates the tables and sample data that will be used by the Bookinfo ratings service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/virtual-machines/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -LO {{< github_file >}}/samples/bookinfo/src/mysql/mysqldb-init.sql\n$ mysql -u root -ppassword < mysqldb-init.sql\n```\n\n----------------------------------------\n\nTITLE: Deleting Istio Discovery Chart\nDESCRIPTION: Command to remove the Istio Discovery Chart (istiod) as part of the uninstallation process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/helm/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Verifying Command Output\nDESCRIPTION: Example of verifying command output matches expected results using _verify_same function\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n_verify_same snip_set_up_the_cluster_3 \"$snip_set_up_the_cluster_3_out\"\n```\n\n----------------------------------------\n\nTITLE: Basic VirtualService Configuration\nDESCRIPTION: Example VirtualService configuration for routing traffic through an ingress gateway to an internal service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: myapp\nspec:\n  hosts:\n  - \"myapp.com\"\n  gateways:\n  - myapp-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /hello\n    route:\n    - destination:\n        host: helloworld.default.svc.cluster.local\n  - match:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Policy for Product Page Service\nDESCRIPTION: Network policy to enforce fine-grained isolation by only allowing connections from Istio ingress to the product page service on port 9080.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2017/0.1-using-network-policy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: product-page-ingress\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      app: productpage\n  ingress:\n  - ports:\n    - protocol: TCP\n      port: 9080\n    from:\n    - podSelector:\n        matchLabels:\n          istio: ingress\n```\n\n----------------------------------------\n\nTITLE: Using destination.ip Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use destination.ip condition to match destination workload IP addresses using individual IP or CIDR notation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkey: destination.ip\nvalues: [\"10.1.2.3\", \"10.2.0.0/16\"]\n```\n\n----------------------------------------\n\nTITLE: Setting Trace Sampling Rate with Telemetry API\nDESCRIPTION: Kubernetes manifest to configure 100% trace sampling rate using Istio's Telemetry API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/skywalking/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n  - randomSamplingPercentage: 100.00\n```\n\n----------------------------------------\n\nTITLE: Analyzing HTTP Proxy Metrics for PassthroughCluster in Istio\nDESCRIPTION: This JSON snippet shows the structure of the 'istio_requests_total' metric emitted when the PassthroughCluster is hit via an HTTP proxy listener. It includes labels for destination service, workload details, and response information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"metric\": {\n    \"__name__\": \"istio_requests_total\",\n    \"connection_security_policy\": \"unknown\",\n    \"destination_app\": \"unknown\",\n    \"destination_principal\": \"unknown\",\n    \"destination_service\": \"httpbin.org\",\n    \"destination_service_name\": \"PassthroughCluster\",\n    \"destination_service_namespace\": \"unknown\",\n    \"destination_version\": \"unknown\",\n    \"destination_workload\": \"unknown\",\n    \"destination_workload_namespace\": \"unknown\",\n    \"instance\": \"100.96.2.183:42422\",\n    \"job\": \"istio-mesh\",\n    \"permissive_response_code\": \"none\",\n    \"permissive_response_policyid\": \"none\",\n    \"reporter\": \"source\",\n    \"request_protocol\": \"http\",\n    \"response_code\": \"200\",\n    \"response_flags\": \"-\",\n    \"source_app\": \"sleep\",\n    \"source_principal\": \"unknown\",\n    \"source_version\": \"unknown\",\n    \"source_workload\": \"sleep\",\n    \"source_workload_namespace\": \"default\"\n  },\n  \"value\": [\n    1567033080.282,\n    \"1\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Inspecting MySQL Ratings Data\nDESCRIPTION: Queries the ratings table to verify data using the bookinfo user.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ mysqlsh --sql --ssl-mode=REQUIRED -u bookinfo -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT -e \"select * from test.ratings;\"\n```\n\n----------------------------------------\n\nTITLE: Checking East-West Gateway Status\nDESCRIPTION: Verifies the deployment status and external IP assignment of the east-west gateway in cluster2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/primary-remote_multi-network/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl --context=\"${CTX_CLUSTER2}\" get svc istio-eastwestgateway -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Checking for Impacted Pods with Istioctl\nDESCRIPTION: Uses the 'istioctl experimental precheck' command to identify pods that may be affected by the networking changes in Istio 1.10. This command reports pods binding to localhost on ports exposed in a Service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/upcoming-networking-changes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental precheck\nError [IST0143] (Pod echo-local-849647c5bd-g9wxf.default) Port 443 is exposed in a Service but listens on localhost. It will not be exposed to other pods.\nError [IST0143] (Pod echo-local-849647c5bd-g9wxf.default) Port 7070 is exposed in a Service but listens on localhost. It will not be exposed to other pods.\nError: Issues found when checking the cluster. Istio may not be safe to install or upgrade.\nSee https://istio.io/latest/docs/reference/config/analysis for more information about causes and resolutions.\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands\nDESCRIPTION: Commands to remove the configured external service access and deployed services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry googleapis\nkubectl delete virtualservice googleapis\nkubectl delete -f @samples/bookinfo/networking/virtual-service-details-v2.yaml@\nkubectl delete -f @samples/bookinfo/platform/kube/bookinfo-details-v2.yaml@\n```\n\n----------------------------------------\n\nTITLE: Undeploying Ratings v2-mysql\nDESCRIPTION: Command to remove the ratings v2-mysql deployment from Kubernetes\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f @samples/bookinfo/platform/kube/bookinfo-ratings-v2-mysql.yaml@\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Download Name for Go Code Block in Istio Docs\nDESCRIPTION: Shows how to set a custom download name for a code block using the 'downloadas' attribute, which defines the filename when a user downloads the code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* text syntax=\"go\" downloadas=\"hello.go\" */>}}\nfunc HelloWorld() {\n  fmt.Println(\"Hello World\")\n}\n{{</* /text */>}}\n```\n\n----------------------------------------\n\nTITLE: Frontmatter Configuration in YAML\nDESCRIPTION: YAML frontmatter configuration for the Istio 1.10.6 release announcement page, defining metadata like title, description, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10.6/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.10.6\nlinktitle: 1.10.6\nsubtitle: Patch Release\ndescription: Istio 1.10.6 patch release.\npublishdate: 2021-11-29\nrelease: 1.10.6\naliases:\n    - /news/announcing-1.10.6\n---\n```\n\n----------------------------------------\n\nTITLE: Querying P95 Client Latency by Source and Destination in Prometheus\nDESCRIPTION: This query calculates the 95th percentile of client latency averaged over the past minute, grouped by source and destination service names and namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/observability/index.md#2025-04-08_snippet_5\n\nLANGUAGE: plain\nCODE:\n```\nhistogram_quantile(0.95,\n  sum(irate(istio_request_duration_milliseconds_bucket{reporter=\"source\"}[1m]))\n  by (\n    destination_canonical_service,\n    destination_workload_namespace,\n    source_canonical_service,\n    source_workload_namespace,\n    le\n  )\n)\n```\n\n----------------------------------------\n\nTITLE: Markdown Tip About Istio Version Compatibility with Kubernetes\nDESCRIPTION: Markdown shortcode that displays a tip about which Kubernetes versions are supported by the current Istio version. It uses Istio-specific shortcodes to dynamically insert version information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tip >}}\nIstio {{< istio_version >}} is [supported on these Kubernetes versions](/docs/releases/supported-releases#support-status-of-istio-releases): {{< supported_kubernetes_versions >}}.\n{{< /tip >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring ProxyConfig for 'foo' Namespace\nDESCRIPTION: Defines a ProxyConfig resource to set the cert-signer for workloads in the 'foo' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: ProxyConfig\nmetadata:\n  name: foopc\n  namespace: foo\nspec:\n  environmentVariables:\n    ISTIO_META_CERT_SIGNER: foo\n```\n\n----------------------------------------\n\nTITLE: Checking Pod-Level Injection Override Annotation\nDESCRIPTION: Examines a deployment to find the 'sidecar.istio.io/inject' label in the pod template spec. This annotation can override the default injection policy, with 'true' forcing injection and 'false' preventing it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get deployment curl -o yaml | grep \"sidecar.istio.io/inject:\" -B4\ntemplate:\n  metadata:\n    labels:\n      app: curl\n      sidecar.istio.io/inject: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Global mTLS with MeshPolicy in YAML\nDESCRIPTION: Example of a v1alpha1 MeshPolicy configuration that enables mutual TLS authentication globally across the mesh, including the foo namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/migrate-alpha-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# A MeshPolicy that enables mTLS globally, including the whole foo namespace\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"MeshPolicy\"\nmetadata:\n  name: \"default\"\nspec:\n  peers:\n  - mtls: {}\n```\n\n----------------------------------------\n\nTITLE: Verifying ServiceEntry Configuration for CNN Domain\nDESCRIPTION: Sends an HTTP request to edition.cnn.com/politics to verify the ServiceEntry is correctly configured by checking for the 301 redirect response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${SOURCE_POD}\" -c curl -- curl -sSL -o /dev/null -D - http://edition.cnn.com/politics\n```\n\n----------------------------------------\n\nTITLE: Verifying Authorization Debug Logging Enablement\nDESCRIPTION: Confirms that the RBAC (Role-Based Access Control) logging level has been set to debug in the Istio proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_9\n\nLANGUAGE: plain\nCODE:\n```\nactive loggers:\n  ... ...\n  rbac: debug\n  ... ...\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace for External Services in Bash\nDESCRIPTION: Creates a Kubernetes namespace called 'mesh-external' to represent services outside the Istio mesh. This namespace will not have automatic sidecar injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace mesh-external\n```\n\n----------------------------------------\n\nTITLE: Setting Up Port Forwarding for Gateway Access\nDESCRIPTION: Create a port forward from local port 8080 to the gateway service port 80 to enable browser access to the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/getting-started/deploy-sample-app/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward svc/bookinfo-gateway-istio 8080:80\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Disabled v2 Telemetry (YAML)\nDESCRIPTION: YAML configuration for installing Istio with an IstioOperator that disables v2 telemetry while keeping telemetry enabled, required for versions before 1.18.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    telemetry:\n      enabled: true\n      v2:\n        enabled: false\n```\n\n----------------------------------------\n\nTITLE: Socket Delegation System Calls\nDESCRIPTION: System calls used for implementing socket delegation, including socketpair(2) for creating pre-connected Unix sockets and accept(2) for connection handling.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/delayering-istio/index.md#2025-04-08_snippet_4\n\nLANGUAGE: c\nCODE:\n```\nsocketpair(2)  // Creates pair of pre-connected Unix sockets\naccept(2)      // Handles incoming connections\n```\n\n----------------------------------------\n\nTITLE: Deleting Httptools Namespace\nDESCRIPTION: Removes the httptools namespace and all resources within it.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace httptools\n```\n\n----------------------------------------\n\nTITLE: Go Function Example with Syntax Highlighting\nDESCRIPTION: Shows how to display Go code with proper syntax highlighting using the text shortcode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc HelloWorld() {\n  fmt.Println(\"Hello World\")\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Gateways\nDESCRIPTION: YAML configuration demonstrating how to configure multiple ingress gateways with custom settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  components:\n    ingressGateways:\n      - name: istio-ingressgateway\n        enabled: true\n      - namespace: user-ingressgateway-ns\n        name: ilb-gateway\n        enabled: true\n        k8s:\n          resources:\n            requests:\n              cpu: 200m\n          serviceAnnotations:\n            cloud.google.com/load-balancer-type: \"internal\"\n          service:\n            ports:\n            - port: 8060\n              targetPort: 8060\n              name: tcp-citadel-grpc-tls\n            - port: 5353\n              name: tcp-dns\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Gateways\nDESCRIPTION: YAML configuration demonstrating how to configure multiple ingress gateways with custom settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  components:\n    ingressGateways:\n      - name: istio-ingressgateway\n        enabled: true\n      - namespace: user-ingressgateway-ns\n        name: ilb-gateway\n        enabled: true\n        k8s:\n          resources:\n            requests:\n              cpu: 200m\n          serviceAnnotations:\n            cloud.google.com/load-balancer-type: \"internal\"\n          service:\n            ports:\n            - port: 8060\n              targetPort: 8060\n              name: tcp-citadel-grpc-tls\n            - port: 5353\n              name: tcp-dns\n```\n\n----------------------------------------\n\nTITLE: Configuring Weight-Based Version Routing for Helloworld Service\nDESCRIPTION: This snippet updates the HTTPRoute to implement weight-based traffic splitting between v1 and v2 versions of the helloworld service. It sets 90% of traffic to v1 and 10% to v2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n sample -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1beta1\nkind: HTTPRoute\nmetadata:\n  name: helloworld\nspec:\n  parentRefs:\n  - name: sample-gateway\n    namespace: sample-ingress\n  hostnames: [\"helloworld.sample.com\"]\n  rules:\n  - matches:\n    - path:\n        type: Exact\n        value: /hello\n    backendRefs:\n    - name: helloworld-v1\n      port: 5000\n      weight: 90\n    - name: helloworld-v2\n      port: 5000\n      weight: 10\nEOF\n```\n\n----------------------------------------\n\nTITLE: Displaying Bookinfo Application URL\nDESCRIPTION: Shows the full URL for accessing the Bookinfo product page through the Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\necho \"http://$GATEWAY_URL/productpage\"\n```\n\n----------------------------------------\n\nTITLE: ServiceEntry Example without Protocol and Addresses\nDESCRIPTION: An example of a ServiceEntry resource that triggers the IST0134 warning because it has an unset protocol and is missing the required addresses field. This configuration causes Istio to match all traffic on the defined port regardless of host.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0134/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: service-entry\n  namespace: default\nspec:\n  hosts:\n    - 'istio.io'\n  exportTo:\n    - \".\"\n  ports:\n    - number: 443\n      name: https\n  location: MESH_EXTERNAL\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPS Gateway in Istio v1alpha3 (YAML)\nDESCRIPTION: This snippet demonstrates how to configure a Gateway in Istio v1alpha3 to allow external HTTPS traffic for a specific host into the service mesh. It sets up a load balancer to expose port 443 with HTTPS protocol and specifies TLS settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: bookinfo-gateway\nspec:\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    hosts:\n    - bookinfo.com\n    tls:\n      mode: SIMPLE\n      serverCertificate: /tmp/tls.crt\n      privateKey: /tmp/tls.key\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Options to Mitigate DoS Vulnerability\nDESCRIPTION: Helm configuration options to prevent exploitation of the DoS vulnerability by disabling protocol detection timeouts in Istio pilot and global proxy settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2019-006/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n--set pilot.env.PILOT_INBOUND_PROTOCOL_DETECTION_TIMEOUT=0s --set global.proxy.protocolDetectionTimeout=0s\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pod IP for Reviews v2\nDESCRIPTION: This command retrieves the IP address of the newly deployed reviews v2 pod for testing purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/add-new-microservice-version/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ REVIEWS_V2_POD_IP=$(kubectl get pod -l app=reviews_test,version=v2 -o jsonpath='{.items[0].status.podIP}')\n$ echo $REVIEWS_V2_POD_IP\n```\n\n----------------------------------------\n\nTITLE: Verifying Pod Deployment Status\nDESCRIPTION: Checks the status of deployed pods in both the default and test namespaces to ensure they are running properly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\nNAME                     READY   STATUS    RESTARTS   AGE\ncurl-557747455f-xx88g    1/1     Running   0          4m14s\n```\n\n----------------------------------------\n\nTITLE: Hugo Shortcode Implementation\nDESCRIPTION: Hugo template shortcode for rendering release notes in the documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10.6/index.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{< relnote >}}\n```\n\n----------------------------------------\n\nTITLE: Parsing Certificate Chain\nDESCRIPTION: Extracts individual certificates from the certificate chain for verification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ sed -n '/-----BEGIN CERTIFICATE-----/{:start /-----END CERTIFICATE-----/!{N;b start};/.*/p}' httpbin-proxy-cert.txt > certs.pem\n$ awk 'BEGIN {counter=0;} /BEGIN CERT/{counter++} { print > \"proxy-cert-\" counter \".pem\"}' < certs.pem\n```\n\n----------------------------------------\n\nTITLE: Installing Intel DLB Device Plugin in Kubernetes\nDESCRIPTION: This command applies the Intel DLB device plugin to the Kubernetes cluster, enabling the use of DLB resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -k https://github.com/intel/intel-device-plugins-for-kubernetes/deployments/dlb_plugin?ref=v0.26.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio VirtualService for Egress in YAML\nDESCRIPTION: Creates a VirtualService that handles traffic for mesh, ingress, and egress gateways. It routes traffic from the mesh and ingress gateway to the egress gateway, and from the egress gateway to the external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: \"httpbin-egress\"\n  namespace: \"httpbin\"\nspec:\n  hosts:\n  - \"<my-proxied-service-hostname>\"\n  gateways:\n  - mesh\n  - \"istio-system/my-ingressgateway\"\n  - \"httpbin/httpbin-egress\"\n  http:\n  - match:\n    - gateways:\n      - \"istio-system/my-ingressgateway\"\n      - mesh\n      uri:\n        prefix: \"/\"\n    route:\n    - destination:\n        host: \"httpbin-egress.httpbin.svc.cluster.local\"\n        port:\n          number: 80\n  - match:\n    - gateways:\n      - \"httpbin/httpbin-egress\"\n      uri:\n        prefix: \"/\"\n    route:\n    - destination:\n        host: \"httpbin.org\"\n        subset: \"http-egress-subset\"\n        port:\n          number: 443\n```\n\n----------------------------------------\n\nTITLE: Creating HTTPRoute for Version-Specific Routing with Gateway API\nDESCRIPTION: This command creates an HTTPRoute resource that routes traffic to the reviews-v1 service. It's the Gateway API alternative to Istio virtual services for traffic routing.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - name: reviews-v1\n      port: 9080\nEOF\n```\n\n----------------------------------------\n\nTITLE: Deploying SkyWalking Add-on in Kubernetes with Istio\nDESCRIPTION: Command to apply the SkyWalking add-on to your Kubernetes cluster using kubectl. This will deploy a basic demonstration version of SkyWalking that works with Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/skywalking/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/addons/extras/skywalking.yaml@\n```\n\n----------------------------------------\n\nTITLE: Tip Callout Templates in Istio Documentation\nDESCRIPTION: Examples of tip callouts demonstrating single paragraph, multiple paragraphs, and nested text block formatting patterns.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts/index.md#2025-04-08_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{{< tip >}}\nThis is a tip\n{{< /tip >}}\n\n{{< tip >}}\nThis is a tip\n\nwith two paragraphs\n{{< /tip >}}\n\n{{< tip >}}\nThis is a tip\n\nwith two paragraphs\n\n{{< text plain >}}\nA nested text block\n{{< /text >}}\n\n{{< /tip >}}\n```\n\n----------------------------------------\n\nTITLE: HTTP Headers Output without Proxy Protocol\nDESCRIPTION: CURL output showing HTTP/2 request headers and TLS handshake details when proxy protocol is disabled. Shows how the internal IP is used in X-Forwarded-For header instead of actual client IP.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/show-source-ip/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n//////////without proxy_protocal\n*   Trying YY.XXX.141.26...\n* TCP_NODELAY set\n* Connection failed\n* connect to YY.XXX.141.26 port 443 failed: Operation timed out\n*   Trying YY.XXX.205.117...\n* TCP_NODELAY set\n* Connected to a25fa0b4835b.elb.us-west-2.amazonaws.com (YY.XXX.205.117) port 443 (#0)\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n*   CAfile: new_certificates/example.com.crt\n  CApath: none\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS change cipher, Change cipher spec (1):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-CHACHA20-POLY1305\n* ALPN, server accepted to use h2\n* Server certificate:\n*  subject: CN=a25fa0b4835b.elb.us-west-2.amazonaws.com; O=httpbin organization\n*  start date: Oct 29 20:39:12 2020 GMT\n*  expire date: Oct 29 20:39:12 2021 GMT\n*  common name: a25fa0b4835b.elb.us-west-2.amazonaws.com (matched)\n*  issuer: O=example Inc.; CN=example.com\n*  SSL certificate verify ok.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* Using Stream ID: 1 (easy handle 0x7fbf8c808200)\n> GET /headers?show_env=1 HTTP/2\n> Host: a25fa0b4835b.elb.us-west-2.amazonaws.com\n> User-Agent: curl/7.64.1\n> Accept: */*\n>\n* Connection state changed (MAX_CONCURRENT_STREAMS == 2147483647)!\n< HTTP/2 200\n< server: istio-envoy\n< date: Thu, 29 Oct 2020 20:44:01 GMT\n< content-type: application/json\n< content-length: 612\n< access-control-allow-origin: *\n< access-control-allow-credentials: true\n< x-envoy-upstream-service-time: 1\n<\n{\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Content-Length\": \"0\",\n    \"Host\": \"a25fa0b4835b.elb.us-west-2.amazonaws.com\",\n    \"User-Agent\": \"curl/7.64.1\",\n    \"X-B3-Sampled\": \"0\",\n    \"X-B3-Spanid\": \"69913a6e6e949334\",\n    \"X-B3-Traceid\": \"729d5da3618545da69913a6e6e949334\",\n    \"X-Envoy-Attempt-Count\": \"1\",\n    \"X-Envoy-Decorator-Operation\": \"httpbin.default.svc.cluster.local:8000/headers*\",\n    \"X-Envoy-Internal\": \"true\",\n    \"X-Forwarded-For\": \"172.16.5.30\",\n    \"X-Forwarded-Proto\": \"https\",\n    \"X-Request-Id\": \"299c7f8a-5f89-480a-82c9-028c76d45d84\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Istio proxy logs for dynamic metadata\nDESCRIPTION: Checks the Istio proxy logs for the httpbin deployment to verify that the dynamic metadata was properly set by the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -n my-app deploy/httpbin -c istio-proxy --tail 1\n```\n\n----------------------------------------\n\nTITLE: Using remote.ip Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use remote.ip condition to match client IP addresses from X-Forwarded-For or Proxy Protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nkey: remote.ip\nvalues: [\"10.1.2.3\", \"10.2.0.0/16\"]\n```\n\n----------------------------------------\n\nTITLE: Checking Pod Status in Remote Cluster\nDESCRIPTION: Shows how to verify the status of sample applications running in the remote cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pod -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\nNAME                             READY   STATUS    RESTARTS   AGE\nhelloworld-v1-776f57d5f6-tmpkd   2/2     Running   0          10s\nsleep-557747455f-v627d           2/2     Running   0          9s\n```\n\n----------------------------------------\n\nTITLE: Viewing Virtual Service Status with kubectl\nDESCRIPTION: Command to view the status field of a virtual service resource using kubectl get with YAML output format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/config-status/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get virtualservice <service-name> -o yaml\n```\n\n----------------------------------------\n\nTITLE: Disabling All Metrics (YAML)\nDESCRIPTION: Telemetry API configuration to disable all metrics across client and server modes using the ALL_METRICS match and setting disabled to true.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: remove-all-metrics\n  namespace: istio-system\nspec:\n  metrics:\n    - providers:\n        - name: prometheus\n      overrides:\n        - disabled: true\n          match:\n            mode: CLIENT_AND_SERVER\n            metric: ALL_METRICS\n```\n\n----------------------------------------\n\nTITLE: Displaying InvalidAnnotation Warning Message\nDESCRIPTION: Example of the warning message shown when an unknown Istio annotation is used.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0125/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0108] (Service httpbin.default) Unknown annotation: networking.istio.io/exportTwo\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Pod Names\nDESCRIPTION: Exports pod names for sleep and gateway pods into environment variables for easier reference in subsequent commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=sleep -o jsonpath={.items..metadata.name})\n$ export GATEWAY_POD=$(kubectl get pod -n istio-egress -l istio=egressgateway -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Accessing TCP Services with Direct Pod IP\nDESCRIPTION: Bash commands to test a TCP service access via direct Pod IP. When port name is set to TCP, the sidecar proxy uses TCP Proxy filter only, bypassing HTTP Connection Manager and not requiring headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath='{.items..metadata.name}')\n$ kubectl exec -it $SOURCE_POD -c curl -- curl 10.1.1.171 -s -o /dev/null -w \"%{http_code}\"\n  200\n```\n\n----------------------------------------\n\nTITLE: Deploying SkyWalking Add-on in Kubernetes with Istio\nDESCRIPTION: Command to apply the SkyWalking add-on to your Kubernetes cluster using kubectl. This will deploy a basic demonstration version of SkyWalking that works with Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/skywalking/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/addons/extras/skywalking.yaml@\n```\n\n----------------------------------------\n\nTITLE: Running Fortio Load Test for Latency Measurement\nDESCRIPTION: This Fortio command runs a load test for 60 seconds with a fixed QPS of 8000 and a variable number of connections. It's used to measure the latency under consistent load with different redirection methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/ambient-ebpf-redirection/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ fortio load -uniform -t 60s -qps 8000 -c <num_connections> http://<fortio-svc-name>:8080\n```\n\n----------------------------------------\n\nTITLE: Setting Gateway URL Environment Variable\nDESCRIPTION: This command combines the ingress host and port into a single environment variable, creating a complete URL for accessing the Bookinfo application from outside the cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ export GATEWAY_URL=$INGRESS_HOST:$INGRESS_PORT\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhook with Unresolvable Hostname in Istio\nDESCRIPTION: This YAML configuration shows ValidatingWebhookConfiguration and MutatingWebhookConfiguration using a hostname that cannot be resolved during a DNS lookup, triggering the InvalidExternalControlPlaneConfig warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0163/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-validator-external-istiod\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://thisisnotarealdomainname.com:15017/validate\n  name: rev.validation.istio.io\n\n---\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istiod-default-validator\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com:15017/validate\n  failurePolicy: Ignore\n  name: validation.istio.io\n\n---\napiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: istio-sidecar-injector-external-istiod\nwebhooks:\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: rev.namespace.sidecar-injector.istio.io\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: rev.object.sidecar-injector.istio.io\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: namespace.sidecar-injector.istio.io\n- admissionReviewVersions:\n  - v1beta1\n  - v1\n  clientConfig:\n    url: https://test.com/inject/cluster/your-cluster-name/net/network1\n  failurePolicy: Fail\n  name: object.sidecar-injector.istio.io\n```\n\n----------------------------------------\n\nTITLE: Corrected Virtual Service for TLS Passthrough Gateway\nDESCRIPTION: YAML snippet showing a corrected virtual service configuration for a gateway with TLS passthrough. It uses TLS routing with SNI hosts matching to properly route the encrypted traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  tls:\n  - match:\n    - sniHosts: [\"httpbin.example.com\"]\n    route:\n    - destination:\n        host: httpbin.org\n```\n\n----------------------------------------\n\nTITLE: Checking Kiali Signing Key Configuration\nDESCRIPTION: This command verifies if the Kiali signing key is set. An empty output suggests a possible security risk.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get cm kiali -n istio-system -o yaml | grep signing_key\n```\n\n----------------------------------------\n\nTITLE: Running the Ratings Microservice Container in Bash\nDESCRIPTION: Runs the ratings container with port mapping from container port 9080 to host port 9081. The command creates a named container that will be automatically removed when stopped.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ docker run --name my-ratings  --rm -d -p 9081:9080 $USER/ratings\n```\n\n----------------------------------------\n\nTITLE: Installing ZooKeeper with Bitnami Helm Charts and Istio Sleep Pod\nDESCRIPTION: Commands to add the Bitnami Helm repository, install ZooKeeper with three replicas, and deploy Istio's sleep pod for debugging purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add bitnami https://charts.bitnami.com/bitnami\n$ helm install my-release bitnami/zookeeper --set replicaCount=3\n$ kubectl apply -f {{< github_file >}}/samples/sleep/sleep.yaml\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.11.3 release announcement page, including title, publish date, and page aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.11.3\nlinktitle: 1.11.3\nsubtitle: Patch Release\ndescription: Istio 1.11.3 patch release.\npublishdate: 2021-09-23\nrelease: 1.11.3\naliases:\n    - /news/announcing-1.11.3\n---\n```\n\n----------------------------------------\n\nTITLE: Disabling Probe Rewrite Configuration\nDESCRIPTION: YAML configuration showing how to disable probe rewriting for HTTP and gRPC probes using pod annotations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/app-health-check/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: liveness-http\nspec:\n  selector:\n    matchLabels:\n      app: liveness-http\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: liveness-http\n        version: v1\n      annotations:\n        sidecar.istio.io/rewriteAppHTTPProbers: \"false\"\n    spec:\n      containers:\n      - name: liveness-http\n        image: docker.io/istio/health:example\n        ports:\n        - containerPort: 8001\n        livenessProbe:\n          httpGet:\n            path: /foo\n            port: 8001\n          initialDelaySeconds: 5\n          periodSeconds: 5\n```\n\n----------------------------------------\n\nTITLE: Disabling Probe Rewrite Configuration\nDESCRIPTION: YAML configuration showing how to disable probe rewriting for HTTP and gRPC probes using pod annotations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/mesh/app-health-check/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: liveness-http\nspec:\n  selector:\n    matchLabels:\n      app: liveness-http\n      version: v1\n  template:\n    metadata:\n      labels:\n        app: liveness-http\n        version: v1\n      annotations:\n        sidecar.istio.io/rewriteAppHTTPProbers: \"false\"\n    spec:\n      containers:\n      - name: liveness-http\n        image: docker.io/istio/health:example\n        ports:\n        - containerPort: 8001\n        livenessProbe:\n          httpGet:\n            path: /foo\n            port: 8001\n          initialDelaySeconds: 5\n          periodSeconds: 5\n```\n\n----------------------------------------\n\nTITLE: Dual Stack Listener Configuration Example\nDESCRIPTION: JSON configuration showing how Istio configures listeners for dual stack support with both IPv4 and IPv6 addresses\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/experimental-dual-stack/index.md#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n        \"name\": \"fd00:10:96::f9fc_9000\",\n        \"address\": {\n            \"socketAddress\": {\n                \"address\": \"fd00:10:96::f9fc\",\n                \"portValue\": 9000\n            }\n        },\n        \"additionalAddresses\": [\n            {\n                \"address\": {\n                    \"socketAddress\": {\n                        \"address\": \"10.96.106.11\",\n                        \"portValue\": 9000\n                    }\n                }\n            }\n        ],\n```\n\n----------------------------------------\n\nTITLE: Deploying Curl Sample to Test Namespace\nDESCRIPTION: Applies the curl sample deployment to the 'test-egress' namespace for testing purposes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -n test-egress -f @samples/curl/curl.yaml@\n```\n\n----------------------------------------\n\nTITLE: Defining Frontmatter for 2019 Istio Blog Posts Archive in Markdown\nDESCRIPTION: YAML frontmatter that defines metadata for a listing page of 2019 Istio blog posts. The configuration specifies the title, description, weight for ordering in navigation, and instructs the system to list posts by publication date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: 2019 Posts\ndescription: Blog posts for 2019.\nweight: 9\nlist_by_publishdate: true\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Istioctl Path\nDESCRIPTION: Command to add the istioctl client binary to the system PATH variable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export PATH=$PATH:$(pwd)/bin\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Traffic Documentation\nDESCRIPTION: YAML configuration block defining metadata for an Istio documentation page about traffic management features. Includes title, description, weight for ordering, and legacy URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Traffic Management\ndescription: Tasks that demonstrate Istio's traffic routing features.\nweight: 15\naliases:\n    - /docs/examples/intelligent-routing/\ntest: table-of-contents\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Using robots.txt\nDESCRIPTION: Basic robots.txt configuration that allows all web crawlers full access to the site and points to the XML sitemap. The file uses standard robots.txt syntax to define crawler behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.24/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.24//sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Advanced Code Block with JSON Output in Istio Documentation\nDESCRIPTION: Illustrates the use of advanced features in code blocks, including syntax highlighting for bash and specifying JSON output format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* text syntax=\"bash\" outputis=\"json\" */>}}\n$ kubectl -n istio-system logs $(kubectl -n istio-system get pods -l istio-mixer-type=telemetry -o jsonpath='{.items[0].metadata.name}') mixer | grep \\\"instance\\\":\\\"newlog.logentry.istio-system\\\"\n{\"level\":\"warn\",\"ts\":\"2017-09-21T04:33:31.249Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"details\",\"latency\":\"6.848ms\",\"responseCode\":200,\"responseSize\":178,\"source\":\"productpage\",\"user\":\"unknown\"}\n{\"level\":\"warn\",\"ts\":\"2017-09-21T04:33:31.291Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"ratings\",\"latency\":\"6.753ms\",\"responseCode\":200,\"responseSize\":48,\"source\":\"reviews\",\"user\":\"unknown\"}\n{\"level\":\"warn\",\"ts\":\"2017-09-21T04:33:31.263Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"reviews\",\"latency\":\"39.848ms\",\"responseCode\":200,\"responseSize\":379,\"source\":\"productpage\",\"user\":\"unknown\"}\n{\"level\":\"warn\",\"ts\":\"2017-09-21T04:33:31.239Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"productpage\",\"latency\":\"67.675ms\",\"responseCode\":200,\"responseSize\":5599,\"source\":\"ingress.istio-system.svc.cluster.local\",\"user\":\"unknown\"}\n{\"level\":\"warn\",\"ts\":\"2017-09-21T04:33:31.233Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"ingress.istio-system.svc.cluster.local\",\"latency\":\"74.47ms\",\"responseCode\":200,\"responseSize\":5599,\"source\":\"unknown\",\"user\":\"unknown\"}\n{{</* /text */>}}\n```\n\n----------------------------------------\n\nTITLE: Displaying External Istiod Configuration\nDESCRIPTION: Displays the values of the EXTERNAL_ISTIOD_ADDR and SSL_SECRET_NAME environment variables to verify their correct configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ echo \"$EXTERNAL_ISTIOD_ADDR\" \"$SSL_SECRET_NAME\"\n```\n\n----------------------------------------\n\nTITLE: Problematic Istio DestinationRule Configuration with Missing caCertificates\nDESCRIPTION: Example of a DestinationRule that triggers the NoServerCertificateVerificationPortLevel error due to missing caCertificates while using SIMPLE TLS mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0129/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: db-tls\nspec:\n  host: mydbserver.prod.svc.cluster.local\n  trafficPolicy:\n    portLevelSettings:\n      - port:\n          number: 443\n        tls:\n          mode: SIMPLE\n          clientCertificate: /etc/certs/myclientcert.pem\n          privateKey: /etc/certs/client_private_key.pem\n          sni: my-nginx.mesh-external.svc.cluster.local\n          # caCertificates not set\n```\n\n----------------------------------------\n\nTITLE: Labeling Namespace for Istio Injection using kubectl\nDESCRIPTION: This command labels a namespace to enable Istio sidecar injection. Replace <namespace-name> with the actual namespace you want to label. This explicit labeling is recommended to avoid common errors related to injection behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0102/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace <namespace-name> istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter with Incorrect REMOVE Operation in YAML\nDESCRIPTION: This YAML configuration demonstrates an EnvoyFilter using the REMOVE operation with ApplyTo set to ROUTE_CONFIGURATION. This configuration will be ignored as REMOVE is not supported for ROUTE_CONFIGURATION.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0154/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-remove-2\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: mysvc2\n  configPatches:\n  - applyTo: ROUTE_CONFIGURATION\n    match:\n      context: GATEWAY\n      listener:\n        filterChain:\n          sni: app.example.com\n          filter:\n            name: \"envoy.filters.network.http_connection_manager.InternalAddressConfig\"\n    patch:\n      operation: REMOVE\n```\n\n----------------------------------------\n\nTITLE: Setting YAML Frontmatter for Istio 1.13 Release Notes\nDESCRIPTION: YAML frontmatter defining metadata for the Istio 1.13.0 release notes page, including title, description, publish date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/announcing-1.13/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.13 Change Notes\nlinktitle: 1.13.0\nsubtitle: Minor Release\ndescription: Istio 1.13.0 change notes.\npublishdate: 2022-02-11\nrelease: 1.13.0\nweight: 10\naliases:\n    - /news/announcing-1.13.0\n---\n```\n\n----------------------------------------\n\nTITLE: Problematic Istio DestinationRule Configuration with Missing caCertificates\nDESCRIPTION: Example of a DestinationRule that triggers the NoServerCertificateVerificationPortLevel error due to missing caCertificates while using SIMPLE TLS mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0129/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: db-tls\nspec:\n  host: mydbserver.prod.svc.cluster.local\n  trafficPolicy:\n    portLevelSettings:\n      - port:\n          number: 443\n        tls:\n          mode: SIMPLE\n          clientCertificate: /etc/certs/myclientcert.pem\n          privateKey: /etc/certs/client_private_key.pem\n          sni: my-nginx.mesh-external.svc.cluster.local\n          # caCertificates not set\n```\n\n----------------------------------------\n\nTITLE: JSON Output from Reviews Service Query\nDESCRIPTION: This snippet shows the JSON output received from querying the reviews service. It demonstrates responses from different versions of the service, including those with and without ratings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"stars\": 5,\n  \"color\": \"black\"\n}\n{\n  \"stars\": 4,\n  \"color\": \"black\"\n}\nnull\nnull\n{\n  \"stars\": 5,\n  \"color\": \"red\"\n}\n{\n  \"stars\": 4,\n  \"color\": \"red\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing SPIRE CRDs with Helm\nDESCRIPTION: Installs the SPIRE Custom Resource Definitions using Helm charts from the SPIFFE repository.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm upgrade --install -n spire-server spire-crds spire-crds --repo https://spiffe.github.io/helm-charts-hardened/ --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Deployment Status\nDESCRIPTION: These commands check the status of the Istio deployment, including the istiod pods, Istio resource, and IstioRevisionTag resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\n$ kubectl get istio\n$ kubectl get istiorevisiontag\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Host IP for IBM Cloud Kubernetes Service\nDESCRIPTION: Commands to retrieve worker nodes and set the ingress host IP using the public IP of one of the worker nodes in IBM Cloud Kubernetes Service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ ibmcloud ks workers --cluster cluster-name-or-id\n$ export INGRESS_HOST=public-IP-of-one-of-the-worker-nodes\n```\n\n----------------------------------------\n\nTITLE: Warning Message for Multiple Injection Labels\nDESCRIPTION: Example of the warning message displayed when a namespace has conflicting injection labels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0123/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWarning [IST0123] (Namespace busted) The namespace has both new and legacy injection labels. Run 'kubectl label namespace busted istio.io/rev-' or 'kubectl label namespace busted istio-injection-'\n```\n\n----------------------------------------\n\nTITLE: Vulnerable Authorization Policy using ALLOW action and notPaths field in YAML\nDESCRIPTION: This YAML snippet shows another example of a vulnerable Istio authorization policy, this time using the ALLOW action with a notPaths field. This pattern is also susceptible to unexpected policy bypasses due to the described vulnerability.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-005/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-path-not-admin\nspec:\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/admin\"]\n```\n\n----------------------------------------\n\nTITLE: Migrating Legacy Istio CRDs for Helm Management\nDESCRIPTION: Shell script to update CRD labels and annotations for Helm management. The script identifies Istio CRDs and adds required Helm ownership metadata to allow successful upgrades.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/crd-upgrade-123.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfor crd in $(kubectl get crds -l chart=istio -o name && kubectl get crds -l app.kubernetes.io/part-of=istio -o name)\ndo\n   kubectl label \"$crd\" \"app.kubernetes.io/managed-by=Helm\"\n   kubectl annotate \"$crd\" \"meta.helm.sh/release-name=istio-base\"\n   kubectl annotate \"$crd\" \"meta.helm.sh/release-namespace=istio-system\"\ndone\n```\n\n----------------------------------------\n\nTITLE: Downloading Istio Automatically on Linux/macOS\nDESCRIPTION: Command to download and extract the latest Istio release automatically for Linux or macOS systems using curl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | sh -\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Applications in Bash\nDESCRIPTION: Deploys the 'helloworld' (v1) and 'curl' samples in the 'sample' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/helloworld/helloworld.yaml@ -l service=helloworld -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n$ kubectl apply -f @samples/helloworld/helloworld.yaml@ -l version=v1 -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n$ kubectl apply -f @samples/curl/curl.yaml@ -n sample --context=\"${CTX_REMOTE_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Prometheus Pod Template with Sidecar Annotations\nDESCRIPTION: Pod template annotations to configure certificate generation and traffic handling for Prometheus with Istio sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/prometheus/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  template:\n    metadata:\n      annotations:\n        traffic.sidecar.istio.io/includeInboundPorts: \"\"   # do not intercept any inbound ports\n        traffic.sidecar.istio.io/includeOutboundIPRanges: \"\"  # do not intercept any outbound traffic\n        proxy.istio.io/config: |  # configure an env variable `OUTPUT_CERTS` to write certificates to the given folder\n          proxyMetadata:\n            OUTPUT_CERTS: /etc/istio-output-certs\n        sidecar.istio.io/userVolumeMount: '[{\"name\": \"istio-certs\", \"mountPath\": \"/etc/istio-output-certs\"}]'\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Istio Release Post\nDESCRIPTION: YAML front matter configuration for the Istio 1.25.0 release announcement blog post. Defines metadata like title, description, publish date and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.25.0\nlinktitle: 1.25.0\nsubtitle: Major Release\ndescription: Istio 1.25 Release Announcement.\npublishdate: 2025-03-03\nrelease: 1.25.0\naliases:\n- /news/announcing-1.25\n- /news/announcing-1.25.0\n---\n```\n\n----------------------------------------\n\nTITLE: Viewing Defined Virtual Services in Istio\nDESCRIPTION: This command displays the YAML representation of the virtual services that have been configured, showing how traffic is routed to v1 of each microservice.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-routing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get virtualservices -o yaml\n```\n\n----------------------------------------\n\nTITLE: Checking ZooKeeper Cluster Status\nDESCRIPTION: Script to check status of all ZooKeeper pods in the cluster using the sleep container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it deploy/sleep -c sleep -- sh  -c 'for x in my-release-zookeeper-0.my-release-zookeeper-headless my-release-zookeeper-1.my-release-zookeeper-headless my-release-zookeeper-2.my-release-zookeeper-headless; do echo $x; echo srvr|nc $x 2181; echo; done'\n```\n\n----------------------------------------\n\nTITLE: Using request.auth.principal Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use request.auth.principal condition to match JWT token principal. Requires request authentication policy to be applied.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkey: request.auth.principal\nvalues: [\"issuer.example.com/subject-admin\"]\n```\n\n----------------------------------------\n\nTITLE: Creating a Simple Ingress Resource in Kubernetes with Istio\nDESCRIPTION: This snippet demonstrates how to create a simple Ingress resource that works out of the box with Istio. It specifies a host, path, and backend service without requiring additional route rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/traffic-management/ingress-with-no-route-rules.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create -f - <<EOF\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: simple-ingress\n  annotations:\n    kubernetes.io/ingress.class: istio\nspec:\n  rules:\n  - host: example.com\n    http:\n      paths:\n      - path: /helloworld\n        pathType: Prefix\n        backend:\n          service:\n            name: myservice\n            port:\n              number: 8000\nEOF\n```\n\n----------------------------------------\n\nTITLE: Using Boilerplate with Nested Shortcode\nDESCRIPTION: Example showing how to include a boilerplate that only contains another shortcode using the 'test-2' identifier.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil/index.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{< boilerplate \"test-2\" >}}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pod CIDR in Azure Kubernetes Service with Azure CNI\nDESCRIPTION: This series of commands retrieves the pod CIDR from an AKS cluster with Azure CNI by inspecting the virtual network. These commands help determine the address prefix needed for Istio's includeIPRanges parameter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\naz aks show --resource-group \"${RESOURCE_GROUP}\" --name \"${CLUSTER}\" | grep nodeResourceGroup\naz network vnet list -g MC_user-rg_user-cluster_region | grep name\naz network vnet show -g MC_user-rg_user-cluster_region -n aks-vnet-74242220 | grep addressPrefix\n```\n\n----------------------------------------\n\nTITLE: Querying Requests to Reviews Service V3 in Prometheus\nDESCRIPTION: This Prometheus query counts all requests to version 3 of the reviews service. It shows how to filter metrics by both service and version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/querying-metrics/index.md#2025-04-08_snippet_5\n\nLANGUAGE: plain\nCODE:\n```\nistio_requests_total{destination_service=\"reviews.default.svc.cluster.local\", destination_version=\"v3\"}\n```\n\n----------------------------------------\n\nTITLE: Verifying Credential Configuration\nDESCRIPTION: Command to verify that the client credentials are properly configured and active in the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nistioctl -n istio-system proxy-config secret deploy/istio-egressgateway | grep client-credential\n```\n\n----------------------------------------\n\nTITLE: Downloading Istio Automatically on Linux/macOS\nDESCRIPTION: Command to download and extract the latest Istio release automatically for Linux or macOS systems using curl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | sh -\n```\n\n----------------------------------------\n\nTITLE: Checking Network Connections\nDESCRIPTION: Command to examine network connections for ZooKeeper ports (2181, 2888, 3888) using netstat within the istio-proxy container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec my-release-zookeeper-1 -c istio-proxy -- netstat -na | grep -E '(2181|2888|3888)'\n```\n\n----------------------------------------\n\nTITLE: Displaying NamespaceNotInjected Error Message in Istio\nDESCRIPTION: This snippet shows an example of the error message displayed when a namespace is not enabled for Istio injection. It includes the warning code IST0102 and instructions for enabling or disabling injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0102/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWarn [IST0102] (Namespace default) The namespace is not enabled for Istio injection. Run 'kubectl label namespace default istio-injection=enabled' to enable it, or 'kubectl label namespace default istio-injection=disabled' to explicitly mark it as not needing injection Error: Analyzer found issues.\n```\n\n----------------------------------------\n\nTITLE: Configuring Grafana Settings for Istio in YAML\nDESCRIPTION: This snippet shows the configuration options for Grafana in Istio, including image settings, ingress configuration, persistence options, security settings, and datasource configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ngrafana:\n  image:\n    repository: grafana/grafana\n    tag: 5.4.0\n  ingress:\n    enabled: false\n    hosts: grafana.local\n  persist: false\n  storageClassName: \"\"\n  accessMode: ReadWriteMany\n  security:\n    secretName: grafana\n    usernameKey: username\n    passphraseKey: passphrase\n  nodeSelector: {}\n  contextPath: /grafana\n  datasources:\n    datasources:\n      apiVersion: 1\n      datasources:\n        type: prometheus\n        orgId: 1\n        url: http://prometheus:9090\n        access: proxy\n        isDefault: true\n        jsonData:\n          timeInterval: 5s\n        editable: true\n  dashboardProviders:\n    dashboardproviders:\n      apiVersion: 1\n      providers:\n        orgId: 1\n        folder: 'istio'\n        type: file\n        disableDeletion: false\n        options:\n          path: /var/lib/grafana/dashboards/istio\n```\n\n----------------------------------------\n\nTITLE: Detecting AUTO_PASSTHROUGH Gateways in Istio Cluster\nDESCRIPTION: This command lists all Istio gateways in the cluster, showing their namespace, name, and TLS mode. It helps identify if any gateways are configured with AUTO_PASSTHROUGH, which may be vulnerable to the security issue.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-006/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get gateways.networking.istio.io -A -o \"custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,TLS_MODE:.spec.servers[*].tls.mode\"\n```\n\n----------------------------------------\n\nTITLE: Attempting to List All Cluster Pods (Forbidden)\nDESCRIPTION: Shows that a tenant administrator cannot access pods across all namespaces in the cluster, demonstrating proper isolation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods --all-namespaces\nError from server (Forbidden): pods is forbidden: User \"dev-admin\" cannot list pods at the cluster scope\n```\n\n----------------------------------------\n\nTITLE: Defining Istio Release Metadata in YAML\nDESCRIPTION: YAML frontmatter defining metadata for the Istio 1.20.6 release documentation, including title, publication date, and version information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.20.x/announcing-1.20.6/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.20.6\nlinktitle: 1.20.6\nsubtitle: Patch Release\ndescription: Istio 1.20.6 patch release.\npublishdate: 2024-04-22\nrelease: 1.20.6\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying Gateway with HorizontalPodAutoscaler and PodDisruptionBudget\nDESCRIPTION: This YAML configuration sets up a Gateway with HTTP listeners and attaches a HorizontalPodAutoscaler and PodDisruptionBudget to it. The HPA scales based on CPU utilization, while the PDB ensures at least one pod is always available.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: default\n    hostname: \"*.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\n---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: gateway\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: gateway-istio\n  minReplicas: 2\n  maxReplicas: 5\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n---\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: gateway\nspec:\n  minAvailable: 1\n  selector:\n    matchLabels:\n      gateway.networking.k8s.io/gateway-name: gateway\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Istio Release Notes\nDESCRIPTION: YAML metadata block defining the document properties including title, description, release version, and publication date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.8.x/announcing-1.8/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.8 Change Notes\ndescription: Istio 1.8 release notes.\nweight: 10\nrelease: 1.8\nsubtitle: Minor Release\nlinktitle: 1.8 Change Notes\npublishdate: 2020-11-19\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Lua Filter as Mitigation for JWT Vulnerability\nDESCRIPTION: Commands to install a Lua filter as a mitigation for the JWT vulnerability. The filter checks and rejects requests with JWT tokens using the ES256 algorithm, preventing Envoy crashes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2019-002/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:istio/tools.git\n$ cd tools/examples/luacheck/\n$ ./setup.sh\n```\n\n----------------------------------------\n\nTITLE: Referencing istioctl analyze command in Markdown\nDESCRIPTION: Shows how to reference the istioctl analyze command that provides configuration analysis for Istio deployments. The command helps identify invalid or suboptimal configurations in the Istio setup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[`istioctl`](/docs/reference/commands/istioctl/#istioctl-analyze)\n```\n\n----------------------------------------\n\nTITLE: Fixed EnvoyFilter Configuration with Priority Values\nDESCRIPTION: A corrected version of the previous EnvoyFilter resources that adds priority values (10 and 20) to ensure consistent application order during upgrades, even when proxyVersion changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0155/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-replace-3\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews4\n  priority: 10\n  configPatches:\n    # The first patch adds the Lua filter to the listener/http connection manager\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n      proxy:\n        proxyVersion: '^1\\.11.*'\n      listener:\n        portNumber: 8080\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n            subFilter:\n              name: \"envoy.filters.http.router\"\n    patch:\n      operation: REPLACE\n      value: # Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              1000)\n            end\n\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-replace-4\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews4\n  priority: 20\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n    patch:\n      operation: REPLACE\n      value: #Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              5000)\n            end\n```\n\n----------------------------------------\n\nTITLE: Installing Experimental Gateway API CRDs in Kubernetes\nDESCRIPTION: This command installs the experimental version of the Gateway API Custom Resource Definitions (CRDs) using kubectl and kustomize.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/gateway-api-gamma-experimental.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd/experimental?ref={{< k8s_gateway_api_version >}}\" | kubectl apply -f -\n```\n\n----------------------------------------\n\nTITLE: Switching Namespace to Canary Revision\nDESCRIPTION: Updates a namespace to use the canary revision of Istio by removing the 'istio-injection' label and adding the 'istio.io/rev' label pointing to the canary revision.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace test-ns istio-injection- istio.io/rev=canary\n```\n\n----------------------------------------\n\nTITLE: Inspecting Test Namespace Services\nDESCRIPTION: Checks the services in the test namespace to confirm their correct configuration and port exposure.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n test\nNAME      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE\nhttpbin   ClusterIP   10.100.78.113   <none>        8443/TCP,8080/TCP   10m\ncurl      ClusterIP   10.110.35.153   <none>        80/TCP              8m49s\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Ambient Mode FAQ Page\nDESCRIPTION: YAML configuration block defining metadata for the Ambient Mode FAQ documentation page, including title, description, weight, layout and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/ambient-mode/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Ambient Mode FAQ\nlinktitle: Ambient Mode\ndescription: Ambient Mode Q & A.\nweight: 30\nlayout: faq\naliases:\n  - /help/faq/ambient-mode\n```\n\n----------------------------------------\n\nTITLE: Checking Egress Gateway Logs with Gateway API\nDESCRIPTION: Examines the logs of the Gateway API-configured egress gateway to verify it's handling the traffic to CNN and performing TLS origination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l gateway.networking.k8s.io/gateway-name=cnn-egress-gateway -c istio-proxy | tail\n```\n\n----------------------------------------\n\nTITLE: Traffic Distribution Response from gRPC Service\nDESCRIPTION: Shows the output from 10 requests to the gRPC service, displaying the distribution of traffic between v1 and v2 versions according to the 20/80 weight configuration in the VirtualService.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\n[0 body] ServiceVersion=v2\n[1 body] ServiceVersion=v2\n[2 body] ServiceVersion=v1\n[3 body] ServiceVersion=v2\n[4 body] ServiceVersion=v1\n[5 body] ServiceVersion=v2\n[6 body] ServiceVersion=v2\n[7 body] ServiceVersion=v2\n[8 body] ServiceVersion=v2\n[9 body] ServiceVersion=v2\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Services with Different Protocols for Same Port in Kubernetes YAML\nDESCRIPTION: This example demonstrates an incorrect configuration where two Kubernetes services select the same application pods on the same port (9080) but with different protocols (TCP and HTTP). This creates ambiguity that Istio warns about through the DeploymentAssociatedToMultipleServices analysis message.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0116/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage-tcp-v1\nspec:\n  ports:\n    - port: 9080\n      name: tcp\n      protocol: TCP\n  selector:\n    app: productpage\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage-http-v1\nspec:\n  ports:\n    - port: 9080\n      name: http\n      protocol: HTTP\n  selector:\n    app: productpage\n```\n\n----------------------------------------\n\nTITLE: Inspecting Pod Containers and Init Containers\nDESCRIPTION: This command retrieves and displays the names of containers and init containers in a pod, showing how Istio's proxy is now an init container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/native-sidecars/index.md#2025-04-08_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl get pod -o \"custom-columns=\\\n\"NAME:.metadata.name,\\\n\"INIT:.spec.initContainers[*].name,\\\n\"CONTAINERS:.spec.containers[*].name\"\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Deployment Command\nDESCRIPTION: Command to deploy the bookinfo application using kubectl in a Kubernetes environment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb_and_lists/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/platform/kube/bookinfo.yaml@\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio 1.14.1 Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.14.1 release announcement page, including title, subtitle, publish date and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14.1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.14.1\nlinktitle: 1.14.1\nsubtitle: Patch Release\ndescription: Istio 1.14.1 patch release.\npublishdate: 2022-06-09\nrelease: 1.14.1\naliases:\n    - /news/announcing-1.14.1\n---\n```\n\n----------------------------------------\n\nTITLE: Checking Dry-Run Results in Istio Proxy Logs\nDESCRIPTION: Examines the Istio proxy logs for the httpbin pod to find dry-run denial messages from the authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs \"$(kubectl -n foo -l app=httpbin get pods -o jsonpath={.items..metadata.name})\" -c istio-proxy -n foo | grep \"shadow denied\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Proxy Debug Logging for RBAC in Istio\nDESCRIPTION: Sets the logging level for RBAC to debug on the httpbin deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config log deploy/httpbin.foo --level \"rbac:debug\" | grep rbac\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster with Kind\nDESCRIPTION: Creates a Kubernetes cluster with one control-plane and two worker nodes using kind configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/get-started-ambient/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --config=- <<EOF\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: ambient\nnodes:\n- role: control-plane\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Enabling Proxy Debug Logging for RBAC in Istio\nDESCRIPTION: Sets the logging level for RBAC to debug on the httpbin deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-config log deploy/httpbin.foo --level \"rbac:debug\" | grep rbac\n```\n\n----------------------------------------\n\nTITLE: Configuring Traffic Routing with MetaRouter\nDESCRIPTION: YAML configuration demonstrating traffic splitting between different service versions using Aeraki's MetaRouter CRD. This example shows how to route 20% traffic to v1 and 80% to v2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/aeraki/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metaprotocol.aeraki.io/v1alpha1\nkind: MetaRouter\nmetadata:\n  name: test-metaprotocol-route\nspec:\n  hosts:\n    - thrift-sample-server.thrift.svc.cluster.local\n  routes:\n    - name: traffic-spilt\n      route:\n        - destination:\n            host: thrift-sample-server.thrift.svc.cluster.local\n            subset: v1\n          weight: 20\n        - destination:\n            host: thrift-sample-server.thrift.svc.cluster.local\n            subset: v2\n          weight: 80\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Istio FAQ Page\nDESCRIPTION: YAML front matter that configures the display and navigation settings for the Istio FAQ page. It sets the title, description, layout, and various display options like skipping table of contents, byline, and page navigation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: FAQ\ndescription: Frequently Asked Questions about Istio.\nsubtitle: In your search for information about Istio and service mesh technology, we hope this FAQ helps! \nweight: 1\nlayout: faq-landing\naliases:\n  - /docs/welcome/faq.html\n  - /docs/reference/faq.html\n  - /help/faq/\n  - /faq.html\nskip_toc: false\nskip_byline: true\nskip_pagenav: true\nsidebar_none: true\ndoc_type: about has-toc\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Istiod Accessibility for External Workloads\nDESCRIPTION: Modifies the MeshConfig to override the default cluster-local behavior for Istiod, allowing access from workloads in other clusters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/announcing-1.6/upgrade-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nvalues:\n  meshConfig:\n    serviceSettings:\n      - settings:\n          clusterLocal: false\n        hosts:\n          - \"istiod.istio-system.svc.cluster.local\"\n```\n\n----------------------------------------\n\nTITLE: Defining External Database Service Entries in Istio\nDESCRIPTION: This YAML snippet defines two ServiceEntry resources for external AWS RDS database instances. It demonstrates how Istio handles external TCP services without VIPs, which can lead to routing issues when services use the same port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/dns-proxy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: db1\n  namespace: ns1\nspec:\n  hosts:\n  - mysql-instance1.us-east-1.rds.amazonaws.com\n  ports:\n  - name: mysql\n    number: 3306\n    protocol: TCP\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: db2\n  namespace: ns1\nspec:\n  hosts:\n  - mysql-instance2.us-east-1.rds.amazonaws.com\n  ports:\n  - name: mysql\n    number: 3306\n    protocol: TCP\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Case Studies Page with YAML Front Matter\nDESCRIPTION: This YAML snippet defines the metadata and configuration for an Istio case studies web page. It specifies the page title, URL aliases for redirects, document type, and layout settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/case-studies/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Case studies\naliases:\n    - /case-studies\n    - /about/community/customers\n    - /latest/about/community/customers\ndoc_type: about\ntype: case-studies\nsidebar_none: true\n---\n```\n\n----------------------------------------\n\nTITLE: Starting httpbin Sample Service in Kubernetes\nDESCRIPTION: Applies the httpbin sample YAML configuration to the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Enabling MCS Cluster Local Behavior with Environment Variables\nDESCRIPTION: Configuration for experimental support of Kubernetes Multi-Cluster Services (MCS) spec behavior for cluster.local hosts. When enabled, requests to the cluster.local host will be routed only to endpoints in the same cluster as the client.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_MCS_CLUSTER_LOCAL=true\nENABLE_MCS_HOST=true\nENABLE_MCS_SERVICE_DISCOVERY=true\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Namespaces with Labels\nDESCRIPTION: Shows how to list Kubernetes namespaces and their labels, demonstrating the istio-injection label.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get namespaces --show-labels\nNAME           STATUS    AGE       LABELS\ndefault        Active    40d       <none>\nistio-dev      Active    19d       istio-injection=enabled\nistio-system   Active    24d       <none>\nkube-public    Active    40d       <none>\nkube-system    Active    40d       <none>\n```\n\n----------------------------------------\n\nTITLE: Creating a cert-manager Certificate for Istio Gateway in YAML\nDESCRIPTION: Defines a cert-manager Certificate resource that requests a certificate for a domain. The certificate will be stored in a Kubernetes secret that can be referenced by an Istio Gateway. This should be created in the same namespace as the istio-ingressgateway deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/certmanager/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ingress-cert\n  namespace: istio-system\nspec:\n  secretName: ingress-cert\n  commonName: my.example.com\n  dnsNames:\n  - my.example.com\n  ...\n```\n\n----------------------------------------\n\nTITLE: Defining VirtualService with Unreachable Rules in Istio YAML\nDESCRIPTION: This YAML configuration defines a VirtualService in Istio that triggers the VirtualServiceUnreachableRule warning. It includes two separate HTTP routes, one with a fault injection and another with mirroring, which causes the second rule to be unreachable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0130/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: sample-foo-cluster01\n  namespace: foo\nspec:\n  hosts:\n  - sample.foo.svc.cluster.local\n  http:\n  - fault:\n      delay:\n        fixedDelay: 5s\n        percentage:\n          value: 100\n    route:\n    - destination:\n        host: sample.foo.svc.cluster.local\n  - mirror:\n      host: sample.bar.svc.cluster.local\n    route:\n    - destination:\n        host: sample.bar.svc.cluster.local\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Legacy Webhook Configuration\nDESCRIPTION: When using the 'default' tag with a non-revisioned Istio installation, the legacy MutatingWebhookConfiguration named 'istio-sidecar-injector' should be removed to prevent injection conflicts between old and new control planes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/revision-tags-default-outro.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nMutatingWebhookConfiguration\n```\n\n----------------------------------------\n\nTITLE: Displaying Istio Route Rules in Multi-Tenant Environment\nDESCRIPTION: Shows how to list Istio route rules for a specific tenant in a multi-tenant setup. The command retrieves rules from the correct Istio control plane and tenant namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -i istio-system1 -n ns-1 get routerule\nNAME                  KIND                                  NAMESPACE\ndetails-Default       RouteRule.v1alpha2.config.istio.io    ns-1\nproductpage-default   RouteRule.v1alpha2.config.istio.io    ns-1\nratings-default       RouteRule.v1alpha2.config.istio.io    ns-1\nreviews-default       RouteRule.v1alpha2.config.istio.io    ns-1\n```\n\n----------------------------------------\n\nTITLE: Verifying OKE Cluster Access\nDESCRIPTION: Simple command to verify kubectl connectivity to the OKE cluster by listing all nodes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/oci/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Testing Undefined Ingress Path\nDESCRIPTION: Command to verify that undefined paths return 404 errors, demonstrating the Ingress path restriction functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/kubernetes-ingress/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s -I -HHost:httpbin.example.com \"http://$INGRESS_HOST:$INGRESS_PORT/headers\"\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio Feature Status Page\nDESCRIPTION: YAML frontmatter block defining metadata for a documentation page about Istio feature status. Includes title, description, weight for ordering, URL aliases for redirects, ownership information, and test status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/feature-stages/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Feature Status\ndescription: List of features and their release stages.\nweight: 10\naliases:\n    - /docs/reference/release-roadmap.html\n    - /docs/reference/feature-stages.html\n    - /docs/welcome/feature-stages.html\n    - /docs/home/roadmap.html\n    - /about/feature-stages\n    - /latest/about/feature-stages\nowner: istio/wg-docs-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-cluster Firewall Rules\nDESCRIPTION: Creates firewall rules to enable communication between all clusters in the project with specified protocols and priorities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gke/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute firewall-rules create istio-multicluster-pods \\\n    --allow=tcp,udp,icmp,esp,ah,sctp \\\n    --direction=INGRESS \\\n    --priority=900 \\\n    --source-ranges=\"${ALL_CLUSTER_CIDRS}\" \\\n    --target-tags=\"${ALL_CLUSTER_NETTAGS}\" --quiet\n```\n\n----------------------------------------\n\nTITLE: Defining httpbin Kubernetes Service\nDESCRIPTION: Kubernetes Service definition for httpbin application exposing port 8000 and mapping to container port 80.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/migrate-alpha-policy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  ports:\n  - name: http\n    port: 8000\n    targetPort: 80\n  selector:\n    app: httpbin\n```\n\n----------------------------------------\n\nTITLE: YAML Event Configuration for Istio Day North America\nDESCRIPTION: YAML frontmatter defining the event details including title, date range, and registration link for Istio Day North America 2024.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/istio-day-na-2024.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio Day North America\nperiod_start: 2024-10-28\nperiod_end: 2024-11-12\nlink: https://events.linuxfoundation.org/kubecon-cloudnativecon-north-america/co-located-events/istio-day/\n---\n```\n\n----------------------------------------\n\nTITLE: Format of Envoy OK Response\nDESCRIPTION: JSON structure showing the format of an OK response from the Envoy external authorization service, which can modify headers, query parameters, and include dynamic metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": {...},\n  \"ok_response\": {\n    \"headers\": [],\n    \"headers_to_remove\": [],\n    \"response_headers_to_add\": [],\n    \"query_parameters_to_set\": [],\n    \"query_parameters_to_remove\": []\n  },\n  \"dynamic_metadata\": {...}\n}\n```\n\n----------------------------------------\n\nTITLE: Stopping the Ratings Container in Bash\nDESCRIPTION: Uses the docker stop command to stop the running ratings container. This terminates the container process and, due to the --rm flag used when starting it, removes the container.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ docker stop my-ratings\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Injection for Namespace\nDESCRIPTION: Labels the httpbin namespace to enable Istio sidecar injection for all pods in the namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label namespace httpbin istio-injection=enabled --overwrite\n```\n\n----------------------------------------\n\nTITLE: Configuring ZooKeeper Quorum Communication in StatefulSets\nDESCRIPTION: Default configuration for ZooKeeper quorum communication that shows it doesn't listen on all IPs, which can cause issues with Istio prior to version 1.10.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nquorumListenOnAllIPs=false\n```\n\n----------------------------------------\n\nTITLE: Applying Istio Virtual Services for MongoDB\nDESCRIPTION: Applies Istio virtual services to route traffic to reviews v3 and ratings v2, which uses the external MongoDB database.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-ratings-db.yaml@\n```\n\n----------------------------------------\n\nTITLE: Creating Sample Namespace with Istio Injection\nDESCRIPTION: Generates YAML configuration for creating a namespace with automatic Istio sidecar injection enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/before-you-begin/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: sample\n  labels:\n    istio-injection: enabled\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Service Deployment\nDESCRIPTION: Command to check the status of Istio-related services in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Generating Root Certificate and Key with OpenSSL\nDESCRIPTION: This bash command generates a root certificate and private key using OpenSSL. The certificate is valid for 365 days and uses RSA 2048-bit encryption.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example.com.key -out example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Checking for v1alpha1 Security Policies in Kubernetes\nDESCRIPTION: Verifies the absence of deprecated v1alpha1 security policies in all namespaces using kubectl get commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/announcing-1.6/upgrade-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get policies.authentication.istio.io --all-namespaces\n$ kubectl get meshpolicies.authentication.istio.io --all-namespaces\n$ kubectl get rbacconfigs.rbac.istio.io --all-namespaces\n$ kubectl get clusterrbacconfigs.rbac.istio.io --all-namespaces\n$ kubectl get serviceroles.rbac.istio.io --all-namespaces\n$ kubectl get servicerolebindings.rbac.istio.io --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Modifying Istio Gateway Configuration for IP Address in Bash\nDESCRIPTION: Modifies the Istio Gateway configuration when using an IP address instead of a DNS hostname for EXTERNAL_ISTIOD_ADDR.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ sed  -i'.bk' \\\n  -e '55,$d' \\\n  -e 's/mode: SIMPLE/mode: PASSTHROUGH/' -e '/credentialName:/d' -e \"s/${EXTERNAL_ISTIOD_ADDR}/\\\"*\\\"/' \\\n  -e 's/http:/tls:/' -e 's/https/tls/' -e '/route:/i\\\n            sniHosts:\\\n            - \"*\"' \\\n  external-istiod-gw.yaml; rm external-istiod-gw.yaml.bk\n```\n\n----------------------------------------\n\nTITLE: Deploying Wasm Extension with Labels\nDESCRIPTION: Command to deploy a WebAssembly extension to specific workloads in the bookinfo namespace using label selectors.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/deploy-wasm-declarative/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwasme deploy istio webassemblyhub.io/ceposta/demo-add-header:v0.2 \\\n  --id=myfilter  \\\n  --namespace=bookinfo  \\\n  --config 'tomorrow' \\\n  --labels app=details\n```\n\n----------------------------------------\n\nTITLE: Defining ALLOW Authorization Policy with Positive Path Matching in Istio\nDESCRIPTION: This YAML snippet demonstrates a secure authorization policy using the ALLOW-with-positive-matching pattern, which explicitly allows requests to the \"/public\" path while denying all other requests by default.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/best-practices/security/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: foo\nspec:\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        paths: [\"/public\"]\n```\n\n----------------------------------------\n\nTITLE: Generating Second Set of Certificates and Keys\nDESCRIPTION: Creates a second set of certificates and keys for example.com and httpbin.example.com using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ mkdir example_certs2\n$ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=example Inc./CN=example.com' -keyout example_certs2/example.com.key -out example_certs2/example.com.crt\n$ openssl req -out example_certs2/httpbin.example.com.csr -newkey rsa:2048 -nodes -keyout example_certs2/httpbin.example.com.key -subj \"/CN=httpbin.example.com/O=httpbin organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example_certs2/example.com.crt -CAkey example_certs2/example.com.key -set_serial 0 -in example_certs2/httpbin.example.com.csr -out example_certs2/httpbin.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Envoy Feature Flag Configuration\nDESCRIPTION: Reference to Envoy configuration flag for explicit internal address configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/announcing-1.21.6/index.md#2025-04-08_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nenvoy.reloadable_features.explicit_internal_address_config\n```\n\n----------------------------------------\n\nTITLE: Displaying Istio Route Rules in Multi-Tenant Environment\nDESCRIPTION: Shows how to list Istio route rules for a specific tenant in a multi-tenant setup. The command retrieves rules from the correct Istio control plane and tenant namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -i istio-system1 -n ns-1 get routerule\nNAME                  KIND                                  NAMESPACE\ndetails-Default       RouteRule.v1alpha2.config.istio.io    ns-1\nproductpage-default   RouteRule.v1alpha2.config.istio.io    ns-1\nratings-default       RouteRule.v1alpha2.config.istio.io    ns-1\nreviews-default       RouteRule.v1alpha2.config.istio.io    ns-1\n```\n\n----------------------------------------\n\nTITLE: Viewing Certificate Status\nDESCRIPTION: Commands to check the status of mTLS certificates and view certificate files.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s localhost:15000/config_dump | ./istioctl proxy-config secret --file -\nls /etc/certs\n```\n\n----------------------------------------\n\nTITLE: Viewing Certificate Status\nDESCRIPTION: Commands to check the status of mTLS certificates and view certificate files.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s localhost:15000/config_dump | ./istioctl proxy-config secret --file -\nls /etc/certs\n```\n\n----------------------------------------\n\nTITLE: Defining Istio Authorization Policy with Non-Matching Selector\nDESCRIPTION: This YAML snippet defines an Istio AuthorizationPolicy that causes the NoMatchingWorkloadsFound warning. It uses a selector with a bogus label that doesn't match any existing pods, demonstrating the cause of the warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0127/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: httpbin-nopods\n  namespace: httpbin\nspec:\n  selector:\n    matchLabels:\n      app: bogus-label # Bogus label. No matching workloads\n      version: v1\n  rules:\n    - from:\n        - source:\n            principals: [\"cluster.local/ns/default/sa/curl\"]\n        - source:\n            namespaces: [\"httpbin\"]\n      to:\n        - operation:\n            methods: [\"GET\"]\n            paths: [\"/info*\"]\n        - operation:\n            methods: [\"POST\"]\n            paths: [\"/data\"]\n      when:\n        - key: request.auth.claims[iss]\n          values: [\"https://accounts.google.com\"]\n```\n\n----------------------------------------\n\nTITLE: Gateway Configuration - Updated Non-Root Port Binding\nDESCRIPTION: Modified gateway configuration for Istio 1.7.x showing how to bind to non-privileged ports while maintaining the same external port numbers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.7.x/announcing-1.7/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n    ingressGateways:\n    - name: istio-ingressgateway\n      enabled: true\n      k8s:\n        service:\n          ports:\n            - port: 15021\n              targetPort: 15021\n              name: status-port\n            - port: 80\n              name: http2\n              targetPort: 8080\n            - port: 443\n              name: https\n              targetPort: 8443\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Authorization Policies\nDESCRIPTION: This snippet shows how to remove all the authorization policies created in the previous steps.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete authorizationpolicy.security.istio.io/allow-nothing\n$ kubectl delete authorizationpolicy.security.istio.io/productpage-viewer\n$ kubectl delete authorizationpolicy.security.istio.io/details-viewer\n$ kubectl delete authorizationpolicy.security.istio.io/reviews-viewer\n$ kubectl delete authorizationpolicy.security.istio.io/ratings-viewer\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secrets for NGINX Server Certificates in Bash\nDESCRIPTION: Creates Kubernetes secrets to store the NGINX server's certificate, key, and CA certificate in the mesh-external namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create -n mesh-external secret tls nginx-server-certs --key my-nginx.mesh-external.svc.cluster.local.key --cert my-nginx.mesh-external.svc.cluster.local.crt\n$ kubectl create -n mesh-external secret generic nginx-ca-certs --from-file=example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio Change Log Page\nDESCRIPTION: YAML frontmatter configuration that sets up the page metadata, including title, description, weight, aliases, and various display flags. Defines ownership and testing parameters for the change log page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/log/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Website Content Changes\ndescription: List of recent changes to this website.\nweight: 110\naliases:\n    - /about/log\n    - /latest/about/log\nskip_seealso: true\nskip_byline: true\nowner: istio/wg-docs-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Promoting Revision Tag Command\nDESCRIPTION: The experimental revision tag command group has been promoted to a stable command under istioctl tag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl tag\n```\n\n----------------------------------------\n\nTITLE: Creating Test Client Pod for OPA Authorization Testing\nDESCRIPTION: Sets up a sleep pod to act as a client for testing the OPA authorization policies and stores the pod name in an environment variable for later use.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/sleep/sleep.yaml@\n$ export SLEEP_POD=$(kubectl get pod -l app=sleep -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Removing Istio Authorization Policies\nDESCRIPTION: This snippet shows how to remove all the authorization policies created in the previous steps.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-http/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete authorizationpolicy.security.istio.io/allow-nothing\n$ kubectl delete authorizationpolicy.security.istio.io/productpage-viewer\n$ kubectl delete authorizationpolicy.security.istio.io/details-viewer\n$ kubectl delete authorizationpolicy.security.istio.io/reviews-viewer\n$ kubectl delete authorizationpolicy.security.istio.io/ratings-viewer\n```\n\n----------------------------------------\n\nTITLE: Running Istio Pre-upgrade Check\nDESCRIPTION: Executes precheck command to verify cluster compatibility before Istio upgrade\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x precheck\n```\n\n----------------------------------------\n\nTITLE: Markdown Release Note Template\nDESCRIPTION: Markdown template containing release notes for Istio 1.17.1, including metadata and change descriptions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.17.x/announcing-1.17.1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Announcing Istio 1.17.1\nlinktitle: 1.17.1\nsubtitle: Patch Release\ndescription: Istio 1.17.1 patch release.\npublishdate: 2023-02-23T09:00:00-06:00\nrelease: 1.17.1\n---\n\nThis release contains bug fixes to improve robustness. This release note describes what's different between Istio 1.17.0 and Istio 1.17.1.\n\nThis release includes security fixes included in Go 1.20.1 (released 2023-02-14) for the `crypto/tls`, `mime/multipart`, `net/http`, and `path/filepath` packages.\n\n{{< relnote >}}\n\n## Changes\n\n- **Added** environment variables to support modifying gRPC keepalive values. [Issue #42398](https://github.com/istio/istio/pull/42398)\n\n- **Fixed** an issue where `ALL_METRICS` does not disable metrics as expected. [Issue #43178](https://github.com/istio/istio/issues/43178)\n\n- **Fixed** ignoring default CA certificate when `PeerCertificateVerifier` is created. [PR #43337](https://github.com/istio/istio/pull/43337)\n\n- **Fixed** istiod not reconciling Kubernetes Gateway deployments and services when they are changed. [Issue #43332](https://github.com/istio/istio/issues/43332)\n\n- **Fixed** reporting `Programmed` condition on Gateway API Gateway resources. [Issue #43498](https://github.com/istio/istio/issues/43498)\n\n- **Fixed** an issue where updating service `ExternalName` does not take effect. [Issue #43440](https://github.com/istio/istio/issues/43440)\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Release Notes\nDESCRIPTION: YAML metadata block defining the release note properties including title, version, publication date and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11.5/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.11.5\nlinktitle: 1.11.5\nsubtitle: Patch Release\ndescription: Istio 1.11.5 patch release.\npublishdate: 2021-12-02\nrelease: 1.11.5\naliases:\n    - /news/announcing-1.11.5\n---\n```\n\n----------------------------------------\n\nTITLE: Istio Release Metadata in YAML\nDESCRIPTION: YAML frontmatter defining metadata for the Istio 1.13.3 release announcement, including title, version information, publication date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/announcing-1.13.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.13.3\nlinktitle: 1.13.3\nsubtitle: Patch Release\ndescription: Istio 1.13.3 patch release.\npublishdate: 2022-04-18\nrelease: 1.13.3\naliases:\n    - /news/announcing-1.13.3\n---\n```\n\n----------------------------------------\n\nTITLE: Complete Istio ConfigMap Configuration\nDESCRIPTION: Full YAML configuration for Istio ConfigMap including OpenTelemetry extension provider settings and other mesh configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/otel-provider/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: istio\n  namespace: istio-system\ndata:\n  mesh: |-\n    accessLogFile: /dev/stdout\n    defaultConfig:\n      discoveryAddress: istiod.istio-system.svc:15012\n      proxyMetadata: {}\n      tracing:\n        zipkin:\n          address: zipkin.istio-system:9411\n    enablePrometheusMerge: true\n    extensionProviders:\n    - name: otel\n      envoyOtelAls:\n        service: opentelemetry-collector.observability.svc.cluster.local\n        port: 4317\n    rootNamespace: istio-system\n    trustDomain: cluster.local\n  meshNetworks: 'networks: {}'\n```\n\n----------------------------------------\n\nTITLE: Enabling Ambient Mode Pod Upgrade Reconciliation with istioctl\nDESCRIPTION: Command to enable reconciliation of in-pod iptables rules when upgrading to Istio 1.25 using istioctl. This feature inspects pods previously enrolled in ambient mesh and upgrades their rules if there's a difference.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --set values.cni.ambient.reconcileIptablesOnStartup=true\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo v2/v3 Services in Cluster2\nDESCRIPTION: Commands to enable Istio injection and deploy the ratings service and reviews-v2/v3 services in the second Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl label --context=$CTX_CLUSTER2 namespace default istio-injection=enabled\n$ kubectl apply --context=$CTX_CLUSTER2 -f - <<EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: ratings\n  labels:\n    app: ratings\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: ratings\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: ratings-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: ratings\n        version: v1\n    spec:\n      containers:\n      - name: ratings\n        image: istio/examples-bookinfo-ratings-v1:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: reviews\n  labels:\n    app: reviews\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: reviews\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v2\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v2\n    spec:\n      containers:\n      - name: reviews\n        image: istio/examples-bookinfo-reviews-v2:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: reviews-v3\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: reviews\n        version: v3\n    spec:\n      containers:\n      - name: reviews\n        image: istio/examples-bookinfo-reviews-v3:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\nEOF\n```\n\n----------------------------------------\n\nTITLE: Inspecting Envoy Proxy JWT Authentication Configuration with istioctl\nDESCRIPTION: Commands to verify the Envoy proxy configuration for JWT authentication using istioctl. This retrieves the listener configuration for the httpbin pod's inbound port 80 to check if the JWT authentication filter is properly configured.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ POD=$(kubectl get pod -l app=httpbin -n foo -o jsonpath={.items..metadata.name})\n$ istioctl proxy-config listener ${POD} -n foo --port 80 --type HTTP -o json\n<redacted>\n                                {\n                                    \"name\": \"envoy.filters.http.jwt_authn\",\n                                    \"typedConfig\": {\n                                        \"@type\": \"type.googleapis.com/envoy.config.filter.http.jwt_authn.v2alpha.JwtAuthentication\",\n                                        \"providers\": {\n                                            \"origins-0\": {\n                                                \"issuer\": \"testing@secure.istio.io\",\n                                                \"localJwks\": {\n                                                    \"inlineString\": \"*redacted*\"\n                                                },\n                                                \"payloadInMetadata\": \"testing@secure.istio.io\"\n                                            }\n                                        },\n                                        \"rules\": [\n                                            {\n                                                \"match\": {\n                                                    \"prefix\": \"/\"\n                                                },\n                                                \"requires\": {\n                                                    \"requiresAny\": {\n                                                        \"requirements\": [\n                                                            {\n                                                                \"providerName\": \"origins-0\"\n                                                            },\n                                                            {\n                                                                \"allowMissing\": {}\n                                                            }\n                                                        ]\n                                                    }\n                                                }\n                                            }\n                                        ]\n                                    }\n                                },\n<redacted>\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter with Updated XDS v3 API\nDESCRIPTION: Updated version of the EnvoyFilter configuration using the new XDS v3 API format required for Istio 1.9.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: add-header\nspec:\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n      listener:\n        filterChain:\n          filter:\n            name: envoy.filters.network.http_connection_manager\n            subFilter:\n              name: envoy.filters.http.router\n    patch:\n      operation: INSERT_BEFORE\n      value:\n        name: envoy.lua\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\n          inlineCode: |\n            function envoy_on_request(handle)\n              handle:headers():add(\"foo\", \"bar\")\n            end\n```\n\n----------------------------------------\n\nTITLE: Configuring DestinationRule for Egress Gateway mTLS\nDESCRIPTION: Sets up mutual TLS authentication between sidecars and the egress gateway using ISTIO_MUTUAL mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: egressgateway\n  namespace: istio-system\nspec:\n  host: egressgateway.istio-egress.svc.cluster.local\n  subsets:\n  - name: wildcard\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n```\n\n----------------------------------------\n\nTITLE: Example of Race Condition Repair Log Entry\nDESCRIPTION: This log excerpt shows the format of log entries when the CNI DaemonSet evicts a pod due to race condition mitigation, indicating that the pod started before the CNI plugin was ready.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/cni/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\n2021-07-21T08:32:17.362512Z     info   Deleting broken pod: service-graph00/svc00-0v1-95b5885bf-zhbzm\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Service with Endpoints for Wikipedia\nDESCRIPTION: Defines a Kubernetes service and endpoints to access Wikipedia using specific IP addresses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Service\napiVersion: v1\nmetadata:\n  name: my-wikipedia\nspec:\n  ports:\n  - protocol: TCP\n    port: 443\n    name: tls\n```\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Endpoints\napiVersion: v1\nmetadata:\n  name: my-wikipedia\nsubsets:\n  - addresses:\n      - ip: 198.35.26.96\n      - ip: 208.80.153.224\n    ports:\n      - port: 443\n        name: tls\n```\n\n----------------------------------------\n\nTITLE: Configuring Waypoint Resources in Istio Helm Chart\nDESCRIPTION: Shows how to configure Waypoint pod resources, affinity, topology spread constraints, tolerations, and node selector using Helm values in Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.24.x/announcing-1.24/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nglobal:\n  waypoint:\n    resources: {}\n    topologySpreadConstraints: []\n    tolerations: []\n    nodeSelector: {}\nwaypoint:\n  affinity: {}\n```\n\n----------------------------------------\n\nTITLE: JSON Output from Reviews Service Query via Ingress Gateway\nDESCRIPTION: This snippet displays the JSON output received from querying the reviews service through the Istio ingress gateway. It shows the expected 50/50 split between v1 (null ratings) and v2 (black star ratings) of the service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/incremental-traffic-management/index.md#2025-04-08_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"stars\": 5,\n  \"color\": \"black\"\n}\n{\n  \"stars\": 4,\n  \"color\": \"black\"\n}\nnull\nnull\n{\n  \"stars\": 5,\n  \"color\": \"black\"\n}\n{\n  \"stars\": 4,\n  \"color\": \"black\"\n}\nnull\nnull\n```\n\n----------------------------------------\n\nTITLE: Enabling PROXY Protocol with EnvoyFilter in Istio (YAML)\nDESCRIPTION: A deprecated example of using EnvoyFilter to enable PROXY protocol on ingress gateways. This approach is not recommended for newer Istio versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/upgrade-issues/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: proxy-protocol\nspec:\n  configPatches:\n  - applyTo: LISTENER_FILTER\n    patch:\n      operation: INSERT_FIRST\n      value:\n        name: proxy_protocol\n        typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol\"\n  workloadSelector:\n    labels:\n      istio: ingress-gateway\n```\n\n----------------------------------------\n\nTITLE: Displaying InvalidAnnotation Warning Message\nDESCRIPTION: This snippet shows the warning message that Istio generates when it encounters an invalid annotation. The message indicates the specific resource and the unknown annotation causing the issue.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0125/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nWarning [IST0108] (Service httpbin.default) Unknown annotation: networking.istio.io/exportTwo\n```\n\n----------------------------------------\n\nTITLE: Displaying Security Bulletin in Markdown\nDESCRIPTION: This code snippet uses a custom shortcode to display the security bulletin content. It's likely that '{{< security_bulletin >}}' is replaced with the actual bulletin content when the page is rendered.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2024-007/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< security_bulletin >}}\n```\n\n----------------------------------------\n\nTITLE: Extracting Istio Configuration Files\nDESCRIPTION: Commands to extract Istio sidecar injector and mesh configuration from ConfigMaps.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get configmap istio-sidecar-injector -o=jsonpath='{.data.config}' > inject-config.yaml\n$ kubectl -n istio-system get configmap istio -o=jsonpath='{.data.mesh}' > mesh-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Using request.auth.audiences Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use request.auth.audiences condition to match intended audiences of JWT tokens. Requires request authentication policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkey: request.auth.audiences\nvalues: [\"example.com\"]\n```\n\n----------------------------------------\n\nTITLE: Adding Icons with Hugo Shortcodes in Markdown\nDESCRIPTION: Shows how to embed common icons in Istio documentation content using specific shortcodes for each icon type.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* warning_icon */>}}\n{{</* idea_icon */>}}\n{{</* checkmark_icon */>}}\n{{</* cancel_icon */>}}\n{{</* tip_icon */>}}\n```\n\n----------------------------------------\n\nTITLE: Sending HTTP Request to Bookinfo Product Page\nDESCRIPTION: Command to send a single HTTP request to the Bookinfo application's product page to generate traffic in the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/kiali/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl http://$GATEWAY_URL/productpage\n```\n\n----------------------------------------\n\nTITLE: Defining httpbin Service Workload Selector\nDESCRIPTION: Example of a workload selector for the httpbin service that matches pods with app label 'httpbin' and version 'v1'. This selector is needed for creating targeted v1beta1 authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nselector:\n  app: httpbin\n  version: v1\n```\n\n----------------------------------------\n\nTITLE: Deploying OPA\nDESCRIPTION: Deploys the Open Policy Agent (OPA) with configuration for Envoy integration and policy rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns opa\n$ kubectl label namespace opa istio-injection=enabled\n\n$ kubectl apply -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: opa\n  name: opa\n  namespace: opa\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: opa\n  template:\n    metadata:\n      labels:\n        app: opa\n    spec:\n      containers:\n      - image: openpolicyagent/opa:0.61.0-envoy\n        name: opa\n        args:\n          - \"run\"\n          - \"--server\"\n          - \"--disable-telemetry\"\n          - \"--config-file=/config/config.yaml\"\n          - \"--log-level=debug\" # Uncomment this line to enable debug logging\n          - \"--diagnostic-addr=0.0.0.0:8282\"\n          - \"/policy/policy.rego\" # Default policy\n        volumeMounts:\n          - mountPath: \"/config\"\n            name: opa-config\n          - mountPath: \"/policy\"\n            name: opa-policy\n      volumes:\n        - name: opa-config\n          configMap:\n            name: opa-config\n        - name: opa-policy\n          configMap:\n            name: opa-policy\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: opa-config\n  namespace: opa\ndata:\n  config.yaml: |\n    # You can find OPA configuration in the official documentation\n    decision_logs:\n      console: true\n    plugins:\n      envoy_ext_authz_grpc:\n        addr: \":9191\"\n        path: mypackage/mysubpackage/myrule # Default path for gRPC plugin\n    # You can add your own services and bundle configuration here\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: opa\n  namespace: opa\n  labels:\n    app: opa\nspec:\n  ports:\n    - port: 9191\n      protocol: TCP\n      name: grpc\n  selector:\n    app: opa\n---\nEOF\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for 2022 Blog Posts\nDESCRIPTION: YAML frontmatter block that configures how 2022 blog posts should be displayed. Sets the page title, description, navigation weight, and specifies posts should be listed by publish date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 2022 Posts\ndescription: Blog posts for 2022.\nweight: 6\nlist_by_publishdate: true\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace for OpenTelemetry Collector in Kubernetes\nDESCRIPTION: This command creates a new Kubernetes namespace called 'observability' for deploying the OpenTelemetry Collector. It uses kubectl to interact with the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/start-otel-collector-service.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace observability\n```\n\n----------------------------------------\n\nTITLE: Patching Service Type for GKE\nDESCRIPTION: Changes the productpage service type to LoadBalancer for Google Kubernetes Engine (GKE) environments to enable external access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl patch svc productpage -p '{\"spec\": {\"type\": \"LoadBalancer\"}}'\nservice/productpage patched\n```\n\n----------------------------------------\n\nTITLE: JSON Output with CLI Commands\nDESCRIPTION: Example showing CLI commands with JSON output and appropriate syntax highlighting for both bash commands and JSON response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system logs $(kubectl -n istio-system get pods -l istio-mixer-type=telemetry -o jsonpath='{.items[0].metadata.name}') mixer | grep \\\"instance\\\":\\\"newlog.logentry.istio-system\\\"\n{\"level\":\"warn\",\"ts\":\"2017-09-21T04:33:31.249Z\",\"instance\":\"newlog.logentry.istio-system\",\"destination\":\"details\",\"latency\":\"6.848ms\",\"responseCode\":200,\"responseSize\":178,\"source\":\"productpage\",\"user\":\"unknown\"}\n```\n\n----------------------------------------\n\nTITLE: Testing gRPC Connection with Incompatible mTLS Configuration\nDESCRIPTION: Demonstrates a failed connection attempt when client-side mTLS is enabled but server-side mTLS is not yet configured, resulting in a connection error due to the security mismatch.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ grpcurl -plaintext -d '{\"url\": \"xds:///echo.echo-grpc.svc.cluster.local:7070\"}' :17171 proto.EchoTestService/ForwardEcho | jq -r '.output | join(\"\")'\n```\n\n----------------------------------------\n\nTITLE: Importing Istio API Package References\nDESCRIPTION: Internal API changes affect imports from istio.io/api and istio.io/client-go packages. In version 1.23, multiple API versions (v1alpha3, v1beta1, v1) have been consolidated to a single version, with the oldest version being retained and newer versions implemented as type aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.23.x/announcing-1.23/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: go\nCODE:\n```\n\"istio.io/api\"\n\"istio.io/client-go\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Workload in YAML for Ztunnel\nDESCRIPTION: This YAML snippet demonstrates the concise configuration format used for representing a single pod in the ztunnel's purpose-built configuration protocol. It includes essential information such as pod name, namespace, service account, node, protocol, status, and other metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: helloworld-v1-55446d46d8-ntdbk\nnamespace: default\nserviceAccount: helloworld\nnode: ambient-worker2\nprotocol: TCP\nstatus: Healthy\nwaypointAddresses: []\nworkloadIp: 10.244.2.8\ncanonicalName: helloworld\ncanonicalRevision: v1\nworkloadName: helloworld-v1\nworkloadType: deployment\n```\n\n----------------------------------------\n\nTITLE: Configuring Remote Cluster as Config Cluster (New Method in Istio 1.11)\nDESCRIPTION: Updated YAML configuration for installing Istio on a remote cluster that serves as a config cluster in Istio 1.11. This uses the new configCluster flag instead of enabling the base component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/upgrade-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncomponents:\n  base:\n    enabled: false\n  pilot:\n    enabled: false\n  istiodRemote:\n    enabled: true\nvalues:\n  global:\n    externalIstiod: true\n    configCluster: true\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.17 Release Post\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.17 release announcement post, including title, publication date, version information, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.17.x/announcing-1.17/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.17\nlinktitle: 1.17\nsubtitle: Major Update\ndescription: Istio 1.17 release annoucement.\npublishdate: 2023-02-14\nrelease: 1.17.0\naliases:\n    - /news/announcing-1.17\n    - /news/announcing-1.17.0\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Kind Cluster with Custom Configuration\nDESCRIPTION: Bash command to create a Kind cluster using the custom configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kind create cluster --name <my-cluster-name> --config config.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Routing for Echo Service in Kubernetes\nDESCRIPTION: This YAML configuration defines an HTTPRoute resource to route requests for the 'echo' service to the 'echo-v1' backend. It demonstrates how to override default service routing in an Ambient mesh with waypoint enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/architecture/data-plane/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: echo\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: echo\n  rules:\n  - backendRefs:\n    - name: echo-v1\n      port: 80\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Mesh Configuration\nDESCRIPTION: Command to display the Istio mesh configuration to verify the outbound traffic policy setting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-control/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get configmap istio -n istio-system -o yaml\n```\n\n----------------------------------------\n\nTITLE: Bash Script to Detect JWT Authentication Policy Vulnerability\nDESCRIPTION: Script that checks for JWT authentication policies in a Kubernetes cluster to determine if the system is vulnerable to CVE-2019-12995. The script searches for jwksUri in both policy and meshpolicy resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2019-002/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<'EOF' | bash -\nset -e\nset -u\nset -o pipefail\n\nred=`tput setaf 1`\ngreen=`tput setaf 2`\nreset=`tput sgr0`\n\necho \"Checking authentication policy...\"\n\nJWKS_URI=()\nJWKS_URI+=($(kubectl get policy --all-namespaces -o jsonpath='{range .items[*]}{.spec.origins[*].jwt.jwksUri}{\" \"}{end}'))\nJWKS_URI+=($(kubectl get meshpolicy --all-namespaces -o jsonpath='{range .items[*]}{.spec.origins[*].jwt.jwksUri}{\" \"}{end}'))\nif [ \"${#JWKS_URI[@]}\" != 0 ]; then\n  echo \"${red}Found JWT in authentication policy, YOU ARE AFFECTED${reset}\"\n  exit 1\nfi\n\necho \"${green}Did NOT find JWT in authentication policy, YOU ARE NOT AFFECTED${reset}\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Federated ClusterSPIFFEID Configuration in YAML\nDESCRIPTION: YAML configuration for creating federated SPIFFE entries using the SPIRE Controller Manager's ClusterSPIFFEID Custom Resource. This configuration allows pods to federate with specified trust domains and defines the SPIFFE ID template.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/spire/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: spire.spiffe.io/v1alpha1\nkind: ClusterSPIFFEID\nmetadata:\n  name: federation\nspec:\n  spiffeIDTemplate: \"spiffe://{{ .TrustDomain }}/ns/{{ .PodMeta.Namespace }}/sa/{{ .PodSpec.ServiceAccountName }}\"\n  podSelector:\n    matchLabels:\n      spiffe.io/spire-managed-identity: \"true\"\n  federatesWith: [\"example.io\", \"example.ai\"]\n```\n\n----------------------------------------\n\nTITLE: Istiod Log Output for Authorization Policy Processing\nDESCRIPTION: This log snippet shows Istiod processing authorization policies for different workloads, including the generation of HTTP and TCP filters based on the policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/security-issues/index.md#2025-04-08_snippet_5\n\nLANGUAGE: plain\nCODE:\n```\n2021-04-23T20:53:29.507314Z info ads Push debounce stable[31] 1: 100.981865ms since last change, 100.981653ms since last push, full=true\n2021-04-23T20:53:29.507641Z info ads XDS: Pushing:2021-04-23T20:53:29Z/23 Services:15 ConnectedEndpoints:2  Version:2021-04-23T20:53:29Z/23\n2021-04-23T20:53:29.507911Z debug authorization Processed authorization policy for httpbin-74fb669cc6-lpscm.foo with details:\n    * found 0 CUSTOM actions\n2021-04-23T20:53:29.508077Z debug authorization Processed authorization policy for curl-557747455f-6dxbl.foo with details:\n    * found 0 CUSTOM actions\n2021-04-23T20:53:29.508128Z debug authorization Processed authorization policy for httpbin-74fb669cc6-lpscm.foo with details:\n    * found 1 DENY actions, 0 ALLOW actions, 0 AUDIT actions\n    * generated config from rule ns[foo]-policy[deny-path-headers]-rule[0] on HTTP filter chain successfully\n    * built 1 HTTP filters for DENY action\n    * added 1 HTTP filters to filter chain 0\n    * added 1 HTTP filters to filter chain 1\n2021-04-23T20:53:29.508158Z debug authorization Processed authorization policy for curl-557747455f-6dxbl.foo with details:\n    * found 0 DENY actions, 0 ALLOW actions, 0 AUDIT actions\n2021-04-23T20:53:29.509097Z debug authorization Processed authorization policy for curl-557747455f-6dxbl.foo with details:\n    * found 0 CUSTOM actions\n2021-04-23T20:53:29.509167Z debug authorization Processed authorization policy for curl-557747455f-6dxbl.foo with details:\n    * found 0 DENY actions, 0 ALLOW actions, 0 AUDIT actions\n2021-04-23T20:53:29.509501Z debug authorization Processed authorization policy for httpbin-74fb669cc6-lpscm.foo with details:\n    * found 0 CUSTOM actions\n2021-04-23T20:53:29.509652Z debug authorization Processed authorization policy for httpbin-74fb669cc6-lpscm.foo with details:\n    * found 1 DENY actions, 0 ALLOW actions, 0 AUDIT actions\n    * generated config from rule ns[foo]-policy[deny-path-headers]-rule[0] on HTTP filter chain successfully\n    * built 1 HTTP filters for DENY action\n    * added 1 HTTP filters to filter chain 0\n    * added 1 HTTP filters to filter chain 1\n    * generated config from rule ns[foo]-policy[deny-path-headers]-rule[0] on TCP filter chain successfully\n    * built 1 TCP filters for DENY action\n    * added 1 TCP filters to filter chain 2\n    * added 1 TCP filters to filter chain 3\n    * added 1 TCP filters to filter chain 4\n2021-04-23T20:53:29.510903Z info ads LDS: PUSH for node:curl-557747455f-6dxbl.foo resources:18 size:85.0kB\n2021-04-23T20:53:29.511487Z info ads LDS: PUSH for node:httpbin-74fb669cc6-lpscm.foo resources:18 size:86.4kB\n```\n\n----------------------------------------\n\nTITLE: Verification Script Reference\nDESCRIPTION: Reference to a script that can be used to check if any existing authorization policies attached to the default Istio ingress gateway need to be updated before upgrading.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-002/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./check.sh\n```\n\n----------------------------------------\n\nTITLE: Linking to Different Istio Repository in Markdown Code Blocks\nDESCRIPTION: Shows how to link to files in a different Istio repository by using the 'repo' attribute in the code block shortcode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* text syntax=\"bash\" repo=\"api\" */>}}\n$ cat @README.md@\n{{</* /text */>}}\n```\n\n----------------------------------------\n\nTITLE: Checking Test Namespace Pods\nDESCRIPTION: Verifies that the httpbin and curl pods in the test namespace are running correctly with sidecars injected.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n test\nNAME                       READY   STATUS    RESTARTS   AGE\nhttpbin-5bbdbd6588-z9vbs   2/2     Running   0          8m44s\ncurl-557747455f-brzf6      2/2     Running   0          6m57s\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Istio Security Documentation\nDESCRIPTION: YAML frontmatter block that defines metadata for the security documentation page including the title, description, weight for ordering, and test status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Security\ndescription: Describes how to configure Istio's security features.\nweight: 40\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Warning Text Block Example\nDESCRIPTION: A text block nested within a warning section that is itself nested in a bullet point.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb_and_lists/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\nThis is a text block in a warning in a bullet\nwith a second line\n\nand a third line\n```\n\n----------------------------------------\n\nTITLE: Analyzing TCP Proxy Metrics for BlackHoleCluster in Istio\nDESCRIPTION: This JSON snippet shows the structure of the 'istio_tcp_connections_closed_total' metric emitted when the BlackHoleCluster is hit via a TCP proxy virtual listener. It includes labels for destination IP, service name (BlackHoleCluster), and connection details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"metric\": {\n    \"__name__\": \"istio_tcp_connections_closed_total\",\n    \"connection_security_policy\": \"unknown\",\n    \"destination_app\": \"unknown\",\n    \"destination_ip\": \"52.22.188.80\",\n    \"destination_principal\": \"unknown\",\n    \"destination_service\": \"unknown\",\n    \"destination_service_name\": \"BlackHoleCluster\",\n    \"destination_service_namespace\": \"unknown\",\n    \"destination_version\": \"unknown\",\n    \"destination_workload\": \"unknown\",\n    \"destination_workload_namespace\": \"unknown\",\n    \"instance\": \"100.96.2.183:42422\",\n    \"job\": \"istio-mesh\",\n    \"reporter\": \"source\",\n    \"response_flags\": \"-\",\n    \"source_app\": \"sleep\",\n    \"source_principal\": \"unknown\",\n    \"source_version\": \"unknown\",\n    \"source_workload\": \"sleep\",\n    \"source_workload_namespace\": \"default\"\n  },\n  \"value\": [\n    1567034481.03,\n    \"1\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for a Web Page\nDESCRIPTION: YAML front matter block that defines metadata for a web page or blog post. It includes the title, subtitle, description, publish date, attribution, and keywords for the content.\nSOURCE: https://github.com/istio/istio.io/blob/master/archetypes/blog.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: My Title\nsubtitle: My optional on-line subtitle\ndescription: My one-line description for the page.\npublishdate: 2017-05-24\nattribution: My Name (My Company Name)\nkeywords: [keyword1,keyword2]\n---\n```\n\n----------------------------------------\n\nTITLE: Using Basic Boilerplate Shortcode in Istio Documentation\nDESCRIPTION: Example showing how to include a plain boilerplate using the boilerplate shortcode with a 'test-0' identifier.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< boilerplate \"test-0\" >}}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating istioctl validate Command in Markdown\nDESCRIPTION: Shows the usage of the new istioctl validate command for offline validation of Istio Kubernetes resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[`istioctl validate`](/docs/reference/commands/istioctl/#istioctl-validate)\n```\n\n----------------------------------------\n\nTITLE: Listing Virtual Services with kubectl\nDESCRIPTION: A kubectl command to list all virtual services in the Kubernetes cluster. Virtual services define the routing rules that control traffic flow in the service mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/metrics-and-logs/life-of-a-request.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n# List all virtual services\n$ kubectl get virtualservices\n```\n\n----------------------------------------\n\nTITLE: Verifying Validation Webhook Configuration Installation\nDESCRIPTION: Verifies that the validation webhook configurations have been properly installed on the remote cluster using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get validatingwebhookconfiguration --context=\"${CTX_REMOTE_CLUSTER}\"\nNAME                              WEBHOOKS   AGE\nistio-validator-external-istiod   1          6m53s\nistiod-default-validator          1          6m53s\n```\n\n----------------------------------------\n\nTITLE: Using kubectl with Heredoc in Bash\nDESCRIPTION: A bash text block showing how to use kubectl apply with stdin redirection using a heredoc to create a ServiceEntry resource in Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\n```\n\n----------------------------------------\n\nTITLE: Initial YAML Frontmatter Configuration\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.11.0 release notes page, including title, publication date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Istio 1.11 Change Notes\nlinktitle: 1.11.0\nsubtitle: Minor Release\ndescription: Istio 1.11.0 release notes.\npublishdate: 2021-08-12\nrelease: 1.11.0\nweight: 10\naliases:\n    - /news/announcing-1.11.0\n```\n\n----------------------------------------\n\nTITLE: Specifying Service Dependencies with Admiral CRD in YAML\nDESCRIPTION: Example YAML configuration for Admiral's Dependency Custom Resource Definition (CRD). This shows how to define dependencies between services based on service identifiers, which helps optimize configuration distribution.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admiral.io/v1alpha1\nkind: Dependency\nmetadata:\n  name: dependency\n  namespace: admiral\nspec:\n  source: orders\n  identityLabel: identity\n  destinations:\n  - payments\n```\n\n----------------------------------------\n\nTITLE: Referencing Helm Template Command in Markdown\nDESCRIPTION: Provides a link to the Helm template documentation as an alternative to the deprecated istioctl gen-deploy command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/change-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[`helm template`](https://archive.istio.io/v1.1/docs/setup/kubernetes/install/helm/#option-1-install-with-helm-via-helm-template)\n```\n\n----------------------------------------\n\nTITLE: Enabling Client-side Certificate Verification\nDESCRIPTION: Environment variable to configure istiod to verify server certificates using the OS CA certificates when not using a DestinationRule caCertificates field, enhancing security for service-to-service communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12/change-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nVERIFY_CERT_AT_CLIENT=true\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Istio News Page\nDESCRIPTION: This YAML snippet defines the front matter for the News page in Istio documentation. It specifies the title, description, layout, and output formats for the page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: News\ndescription: Select security bulletins, release announcements, or support announcements to stay up to date.\nlinktitle: News\nsidebar_multicard: true\ndecoration: pill\nlayout: news-feed\noutputs:\n    - html\n    - rss\n---\n```\n\n----------------------------------------\n\nTITLE: Rendering Warning Message in Istio Documentation (Markdown)\nDESCRIPTION: This snippet uses Hugo shortcodes to render a warning message in the Istio documentation. It informs users that the content is under development and invites feedback through the Istio discussion forum.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/work-in-progress.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< warning >}}\nThis is work in progress. We will add its sections in pieces. Your feedback is welcome at [discuss.istio.io](https://discuss.istio.io).\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Istio Egress Page Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the Istio documentation page about egress traffic control. Defines metadata like title, description, weight for page ordering, and keywords for search optimization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Egress\ndescription: Controlling egress traffic for an Istio service mesh.\nweight: 71\nkeywords: [ingress,egress,gateway]\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Incorrect Envoy String Match Configuration\nDESCRIPTION: The incorrect Envoy configuration that Istio generates for the authorization policy, which fails to properly match principals.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-009/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nstringMatch:\n  suffix: spiffe:///ns/ns1/sa/foo\n```\n\n----------------------------------------\n\nTITLE: Configuring VirtualService in Istio v1alpha3 (YAML)\nDESCRIPTION: This snippet shows how to configure a VirtualService in Istio v1alpha3, binding it to a previously defined Gateway. It sets up routing rules for the 'bookinfo.com' host, specifically for requests with URI prefix '/reviews'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: bookinfo\nspec:\n  hosts:\n    - bookinfo.com\n  gateways:\n  - bookinfo-gateway # <---- bind to gateway\n  http:\n  - match:\n    - uri:\n        prefix: /reviews\n    route:\n    ...\n```\n\n----------------------------------------\n\nTITLE: Testing Headless Service Access with Direct Pod IP\nDESCRIPTION: Bash commands to test direct access to a headless service via Pod IP, which results in a 503 error. This demonstrates the problem when accessing Nginx pods directly without the proper Host header.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath='{.items..metadata.name}')\n$ kubectl exec -it $SOURCE_POD -c curl -- curl 10.1.1.171 -s -o /dev/null -w \"%{http_code}\"\n  503\n```\n\n----------------------------------------\n\nTITLE: Executing Snip Function\nDESCRIPTION: Example of calling a generated snip function for testing command execution\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nsnip_config_50_v3 # Step 3: switch 50% traffic to v3\n```\n\n----------------------------------------\n\nTITLE: Disabling Link Expansion in Markdown Code Blocks for Istio\nDESCRIPTION: Demonstrates how to disable the automatic link expansion feature for code blocks using the 'expandlinks' attribute set to false.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* text syntax=\"bash\" expandlinks=\"false\" */>}}\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-v3.yaml@\n{{</* /text */>}}\n```\n\n----------------------------------------\n\nTITLE: Inspecting Istio-Injected Kubernetes Pod Details\nDESCRIPTION: Shows how to retrieve detailed information about an Istio-injected Kubernetes pod, including the status of init containers and sidecar proxies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl describe pod demo-red-pod-8b5df99cc-pgnl7\n```\n\nLANGUAGE: yaml\nCODE:\n```\nName:               demo-red-pod-8b5df99cc-pgnl7\nNamespace:          default\n.....\nLabels:             app=demo-red\n                    pod-template-hash=8b5df99cc\n                    version=version-red\nAnnotations:        sidecar.istio.io/status={\"version\":\"3c0b8d11844e85232bc77ad85365487638ee3134c91edda28def191c086dc23e\",\"initContainers\":[\"istio-init\"],\"containers\":[\"istio-proxy\"],\"volumes\":[\"istio-envoy\",\"istio-certs...\nStatus:             Running\nIP:                 10.32.0.6\nControlled By:      ReplicaSet/demo-red-pod-8b5df99cc\nInit Containers:\n  istio-init:\n    Container ID:  docker://bef731eae1eb3b6c9d926cacb497bb39a7d9796db49cd14a63014fc1a177d95b\n    Image:         docker.io/istio/proxy_init:1.0.2\n    Image ID:      docker-pullable://docker.io/istio/proxy_init@sha256:e16a0746f46cd45a9f63c27b9e09daff5432e33a2d80c8cc0956d7d63e2f9185\n    .....\n    State:          Terminated\n      Reason:       Completed\n    .....\n    Ready:          True\nContainers:\n  demo-red:\n    Container ID:   docker://8cd9957955ff7e534376eb6f28b56462099af6dfb8b9bc37aaf06e516175495e\n    Image:          chugtum/blue-green-image:v3\n    Image ID:       docker-pullable://docker.io/chugtum/blue-green-image@sha256:274756dbc215a6b2bd089c10de24fcece296f4c940067ac1a9b4aea67cf815db\n    State:          Running\n      Started:      Sun, 09 Dec 2018 18:12:31 -0800\n    Ready:          True\n  istio-proxy:\n    Container ID:  docker://ca5d690be8cd6557419cc19ec4e76163c14aed2336eaad7ebf17dd46ca188b4a\n    Image:         docker.io/istio/proxyv2:1.0.2\n    Image ID:      docker-pullable://docker.io/istio/proxyv2@sha256:54e206530ba6ca9b3820254454e01b7592e9f986d27a5640b6c03704b3b68332\n    Args:\n      proxy\n      sidecar\n      .....\n    State:          Running\n      Started:      Sun, 09 Dec 2018 18:12:31 -0800\n    Ready:          True\n    .....\n```\n\n----------------------------------------\n\nTITLE: Installing Prometheus Quick Start in Istio\nDESCRIPTION: Basic command to deploy Prometheus using Istio's sample configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/prometheus/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/addons/prometheus.yaml\n```\n\n----------------------------------------\n\nTITLE: Example Istio Analyzer Error Message\nDESCRIPTION: Provides a complete example of an analyzer error message showing a VirtualService resource referencing a non-existent gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/message-format/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\nError [IST0101] (VirtualService httpbin.default) Referenced gateway not found: \"httpbin-gateway-bogus\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Istio Operator\nDESCRIPTION: Bash command to initialize the Istio Operator in the istio-operator namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl operator init --watchedNamespaces=istio-operator\n```\n\n----------------------------------------\n\nTITLE: Configuring Allow Any Route in Envoy for Istio\nDESCRIPTION: JSON configuration for the allow_any route in Envoy, used to route all traffic to the PassthroughCluster when allowing external traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"allow_any\",\n  \"domains\": [\n    \"*\"\n  ],\n  \"routes\": [\n    {\n      \"match\": {\n        \"prefix\": \"/\"\n      },\n      \"route\": {\n        \"cluster\": \"PassthroughCluster\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying a Very Tall Text Block\nDESCRIPTION: A plain text block example demonstrating how a block with many lines appears in the documentation, used for testing vertical space and scrolling behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_7\n\nLANGUAGE: plain\nCODE:\n```\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\nReally tall\n```\n\n----------------------------------------\n\nTITLE: Inspecting Envoy Listener Configuration\nDESCRIPTION: Shows how to examine the Envoy listener configuration for port 9080 using istioctl proxy-config command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/proxy-cmd/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nistioctl proxy-config listeners productpage-v1-6c886ff494-7vxhs -o json --address 0.0.0.0 --port 9080\n```\n\n----------------------------------------\n\nTITLE: Displaying VirtualServiceUnreachableRule Warning Message in Istio\nDESCRIPTION: This code snippet shows the warning message displayed when a VirtualService rule is not used due to being overridden by a previous rule or when multiple rules have no matches.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0130/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWarning [IST0130] (VirtualService sample-foo-cluster01.default) VirtualService rule #1 not used (only the last rule can have no matches).\n```\n\n----------------------------------------\n\nTITLE: Setting Helm Flags for Mixer Configuration Schemas in Istio 1.2 Upgrade\nDESCRIPTION: These Helm flags should be set during the upgrade of the main Helm chart if you are using the removed mixer configuration schemas. They enable the use of template and adapter Custom Resource Definitions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.2.x/announcing-1.2/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n--set mixer.templates.useTemplateCRDs=true --set mixer.adapters.useAdapterCRDs=true\n```\n\n----------------------------------------\n\nTITLE: Generating HelloWorld YAML for Each Locality\nDESCRIPTION: Generates HelloWorld application YAML configurations for different localities using the locality as the version identifier.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/locality-load-balancing/before-you-begin/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nfor LOC in \"region1.zone1\" \"region1.zone2\" \"region2.zone3\" \"region3.zone4\"; \\\n  do \\\n    ./@samples/helloworld/gen-helloworld.sh@ \\\n      --version \"$LOC\" > \"helloworld-${LOC}.yaml\"; \\\n  done\n```\n\n----------------------------------------\n\nTITLE: Configuring Trace Sampling Rate\nDESCRIPTION: Configuration to customize the sampling rate for tracing. Sets the sampling percentage to 100% for all requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/telemetry-api/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  tracing:\n  - providers:\n    - name: \"zipkin\"\n    randomSamplingPercentage: 100.00\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Explicit Localhost Forwarding with Istio Sidecar Resource\nDESCRIPTION: This YAML snippet shows how to use the Istio Sidecar resource to explicitly configure port 9080 to be forwarded to localhost. This can be used to control inbound traffic behavior regardless of the Istio version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.10.x/announcing-1.10/upgrade-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1beta1\nkind: Sidecar\nmetadata:\n  name: ratings\nspec:\n  workloadSelector:\n    labels:\n      app: ratings\n  ingress:\n  - port:\n      number: 9080\n      protocol: HTTP\n      name: http\n    defaultEndpoint: 127.0.0.1:9080\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Dependencies in Admiral\nDESCRIPTION: YAML configuration for Admiral's Dependency CRD that specifies service dependencies based on service identifiers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admiral.io/v1alpha1\nkind: Dependency\nmetadata:\n  name: dependency\n  namespace: admiral\nspec:\n  source: orders\n  identityLabel: identity\n  destinations:\n  - payments\n```\n\n----------------------------------------\n\nTITLE: Verifying LibreSSL-compiled curl on macOS\nDESCRIPTION: Checks if the curl command on macOS is compiled with LibreSSL, which is required for the task.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl --version | grep LibreSSL\n```\n\n----------------------------------------\n\nTITLE: Configuring Probe Keepalive Connection in Istio Proxy\nDESCRIPTION: Sets an environment variable in the Istio proxy to enable probe keepalive connections, reverting to the old behavior of connection reuse for health probes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/announcing-1.13/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nENABLE_PROBE_KEEPALIVE_CONNECTION=true\n```\n\n----------------------------------------\n\nTITLE: Internal Service VirtualService Configuration\nDESCRIPTION: VirtualService configuration for routing internal service traffic to a specific subset.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: helloworld\nspec:\n  hosts:\n  - helloworld.default.svc.cluster.local\n  http:\n  - route:\n    - destination:\n        host: helloworld.default.svc.cluster.local\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Namespaces After Revision Tags Example\nDESCRIPTION: This command deletes the namespaces used in the canary upgrade with revision tags example, removing all associated resources from multiple application namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns istio-system app-ns-1 app-ns-2 app-ns-3\n```\n\n----------------------------------------\n\nTITLE: Environment Variable Configuration in Kubernetes\nDESCRIPTION: Kubernetes deployment YAML configuration for setting the DO_NOT_ENCRYPT environment variable to enable plain HTTP requests.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n- name: DO_NOT_ENCRYPT\n  value: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Resources\nDESCRIPTION: Removes the 'foo' namespace and all associated resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-tcp/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace foo\n```\n\n----------------------------------------\n\nTITLE: Updated Global Proxy Configuration in YAML\nDESCRIPTION: Demonstrates changes in global proxy settings, including CPU requests, access log file, and Envoy statsd configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nglobal:\n  proxy:\n    resources:\n      requests:\n        cpu: 100m\n    accessLogFile: \"\"\n    enableCoreDump: false  # If set, newly injected sidecars will have core dumps enabled.\n    autoInject: enabled  # This controls the 'policy' in the sidecar injector.\n    envoyStatsd:\n      enabled: false  # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      host: \"\"  # example: statsd-svc.istio-system\n      port: \"\"  # example: 9125\n```\n\n----------------------------------------\n\nTITLE: Configuring Istiod to Auto-reload Plugin Certificates\nDESCRIPTION: Environment variable configuration to enable istiod to automatically notice and reload cacerts file changes, improving certificate management in production environments.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nAUTO_RELOAD_PLUGIN_CERTS=true\n```\n\n----------------------------------------\n\nTITLE: Creating a ServiceEntry for External Service (Kubernetes Resource)\nDESCRIPTION: This YAML snippet shows how to create a ServiceEntry for an external service with a specific IP address, enabling DNS resolution for the custom host.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: external-address\nspec:\n  addresses:\n  - 198.51.100.1\n  hosts:\n  - address.internal\n  ports:\n  - name: http\n    number: 80\n    protocol: HTTP\nEOF\n```\n\n----------------------------------------\n\nTITLE: Istio Galley ValidatingWebhookConfiguration YAML\nDESCRIPTION: This YAML defines the ValidatingWebhookConfiguration for Istio Galley. It specifies the webhook configuration for validating Istio resources, including the service endpoint and validation rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/command_yaml_example.txt#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admissionregistration.k8s.io/v1beta1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-galley\n  namespace: istio-system\n  labels:\n    app: istio-galley\n    chart: galley-1.0.0\n    release: istio\n    heritage: Tiller\nwebhooks:\n  - name: pilot.validation.istio.io\n    clientConfig:\n      service:\n        name: istio-galley\n        namespace: istio-system\n        path: \"/admitpilot\"\n      caBundle: \"\"\n    rules:\n      - operations:\n      (... snip ...)\n```\n\n----------------------------------------\n\nTITLE: Multi-line Command Example\nDESCRIPTION: Demonstrates how to format long commands using line continuation with backslash characters.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ echo \"Hello\" \\\n    >file.txt\n$ echo \"There\" >>file.txt\n$ cat file.txt\nHello\nThere\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio\nDESCRIPTION: Command to completely remove Istio from the cluster using the purge option.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --purge -y\n```\n\n----------------------------------------\n\nTITLE: Vulnerable Authorization Policy Configuration in YAML\nDESCRIPTION: Example of an Authorization Policy configuration that is vulnerable to CVE-2020-16844, where wildcard suffixes in principal fields are not properly enforced for TCP services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-009/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: foo\n namespace: foo\nspec:\n action: DENY\n rules:\n - from:\n   - source:\n       principals:\n       - */ns/ns1/sa/foo # indicating any trust domain, ns1 namespace, foo svc account\n```\n\n----------------------------------------\n\nTITLE: Inserting Plain Boilerplate in Hugo\nDESCRIPTION: Demonstrates how to insert a plain boilerplate using Hugo shortcodes. This snippet uses the 'test-0' boilerplate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil_and_lists/index.md#2025-04-08_snippet_0\n\nLANGUAGE: hugo\nCODE:\n```\n{{< boilerplate \"test-0\" >}}\n```\n\n----------------------------------------\n\nTITLE: Rolling Restart ZooKeeper StatefulSet\nDESCRIPTION: Command to restart the ZooKeeper StatefulSet to update pods with new sidecar proxy version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart statefulset my-release-zookeeper\n```\n\n----------------------------------------\n\nTITLE: Manually Injecting Istio Sidecar with Custom Configs\nDESCRIPTION: Demonstrates how to manually inject the Istio sidecar using custom injection and mesh configuration files. This allows for more control over the injection process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nistioctl kube-inject --injectConfigFile inject-config.yaml --meshConfigFile mesh-config.yaml --filename demo-red.yaml --output demo-red-injected.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Bookinfo Gateway in Cluster1\nDESCRIPTION: Command to apply the Bookinfo gateway configuration to the first cluster, which will allow external access to the application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply --context=$CTX_CLUSTER1 -f @samples/bookinfo/networking/bookinfo-gateway.yaml@\n```\n\n----------------------------------------\n\nTITLE: Displaying IneffectiveSelector Warning Message in Istio\nDESCRIPTION: Shows an example of the warning message displayed when an ineffective selector is used on a Kubernetes Gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0166/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWarning [IST0166] (AuthorizationPolicy default/ap-ineffective testdata/k8sgateway-selector.yaml:47) Ineffective selector on\nKubernetes Gateway bookinfo-gateway. Use the TargetRef field instead.\n```\n\n----------------------------------------\n\nTITLE: Defining Incorrect Gateway and Service Ports in Istio YAML\nDESCRIPTION: This YAML configuration demonstrates an incorrect setup where the Gateway defines ports that are not available in the corresponding Kubernetes Service. This will trigger the GatewayPortNotDefinedOnService error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0162/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Gateway with bogus ports\n\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: istio-ingressgateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - \"*\"\n  - port:\n      number: 8004\n      name: http2\n      protocol: HTTP\n    hosts:\n    - \"*\"\n---\n\n# Default Gateway Service\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: istio-ingressgateway\nspec:\n  selector:\n    istio: ingressgateway\n  ports:\n  - name: status-port\n    port: 15021\n    protocol: TCP\n    targetPort: 15021\n  - name: http2\n    port: 80\n    protocol: TCP\n    targetPort: 8080\n  - name: https\n    port: 443\n    protocol: TCP\n    targetPort: 8443\n```\n\n----------------------------------------\n\nTITLE: Ineffective Pod-Scoped Sidecar Policy Warning\nDESCRIPTION: Example of a warning message indicating that a Sidecar policy has no impact because the selected workload is in ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0167/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0167] (Sidecar ns-ambient/pod-scoped testdata/sidecar-default-selector.yaml:90) The policy has no impact:\\nselected workload is in ambient mode, the policy has no impact.\n```\n\n----------------------------------------\n\nTITLE: Referencing Envoy Default Cipher Suites in Markdown\nDESCRIPTION: This snippet shows how to reference Envoy's default cipher suites documentation using Markdown syntax. It specifically mentions TLS_AES_256_GCM_SHA384 as an example cipher suite in Istio 1.19.0.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/secure-apps-with-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[默认密码套件](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto)\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.6.3 release announcement page, including title, publication date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/announcing-1.6.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.6.3\nlinktitle: 1.6.3\nsubtitle: Patch Release\ndescription: Istio 1.6.3 patch release.\npublishdate: 2020-06-18\nrelease: 1.6.3\naliases:\n    - /news/announcing-1.6.3\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Global Traffic Policy in Admiral\nDESCRIPTION: YAML configuration for Admiral's GlobalTrafficPolicy CRD that controls traffic distribution between regions for the payments service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admiral.io/v1alpha1\nkind: GlobalTrafficPolicy\nmetadata:\n  name: payments-gtp\nspec:\n  selector:\n    identity: payments\n  policy:\n  - dns: default.payments.global\n    lbType: 1\n    target:\n    - region: us-west-2/*\n      weight: 10\n    - region: us-east-2/*\n      weight: 90\n```\n\n----------------------------------------\n\nTITLE: Gateway API Configuration with Debug\nDESCRIPTION: Commands to create and configure gateway using Gateway API, including waiting for gateway readiness and enabling RBAC debugging.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-ingress/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/gateway-api/httpbin-gateway.yaml@ -n foo\n$ kubectl wait --for=condition=programmed gtw -n foo httpbin-gateway\n$ kubectl get pods -n foo -o name -l gateway.networking.k8s.io/gateway-name=httpbin-gateway | sed 's|pod/||' | while read -r pod; do istioctl proxy-config log \"$pod\" -n foo --level rbac:debug; done\n```\n\n----------------------------------------\n\nTITLE: Excluding Inbound Ports from Istio Sidecar Traffic Capture\nDESCRIPTION: Applies an annotation to exclude specific inbound ports (e.g., port 22) from Istio sidecar traffic capture in Kubernetes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/announcing-1.13/upgrade-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntraffic.sidecar.istio.io/excludeInboundPorts: \"22\"\n```\n\n----------------------------------------\n\nTITLE: Enabling DNS Proxying for a Specific Pod (Kubernetes Deployment)\nDESCRIPTION: This YAML snippet demonstrates how to enable DNS proxying for a specific pod using the proxy.istio.io/config annotation in a Kubernetes Deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/dns-proxy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Deployment\nmetadata:\n  name: curl\nspec:\n...\n  template:\n    metadata:\n      annotations:\n        proxy.istio.io/config: |\n          proxyMetadata:\n            ISTIO_META_DNS_CAPTURE: \"true\"\n...\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.4.9 Release Documentation\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.4.9 release documentation page, including title, subtitle, publication date, version number, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.4.x/announcing-1.4.9/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Announcing Istio 1.4.9\nlinktitle: 1.4.9\nsubtitle: Patch Release\ndescription: Istio 1.4.9 patch release.\npublishdate: 2020-05-12\nrelease: 1.4.9\naliases:\n    - /news/announcing-1.4.9\n```\n\n----------------------------------------\n\nTITLE: Restarting Kubernetes Deployment to Update Istio Sidecar\nDESCRIPTION: Command for triggering a new rolling update on a Kubernetes Deployment to inject the new version of Istio sidecar. This approach is available for Kubernetes 1.15 or higher versions.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0158/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl rollout restart <my-deployment>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Egress Gateway Logs\nDESCRIPTION: This command obtains logs from the Istio egress gateway, which manages traffic exiting the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/bugs/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs -l istio=egressgateway -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Using Helm Profile Parameter for Istio Installation\nDESCRIPTION: Example of using the newly added 'profile' parameter with Helm installation to simplify Istio deployment with predefined configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/announcing-1.21/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n--set profile=demo\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin with Automatic Sidecar Injection in Istio\nDESCRIPTION: This command deploys the httpbin service using kubectl when automatic sidecar injection is enabled in the Istio mesh. It applies the httpbin.yaml configuration file from the samples directory.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/start-httpbin-service.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Galley Configuration using kubectl\nDESCRIPTION: This command retrieves the configuration data for the Istio Galley ConfigMap in the istio-system namespace using kubectl. It outputs the data field of the ConfigMap in JSON format.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/bash_yaml_example.txt#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl -n istio-system get configmap istio-galley-configuration -o jsonpath='{.data}'\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Redirects in YAML Front Matter\nDESCRIPTION: Shows how to set up multiple redirects for a single page using the 'aliases' field in the front matter, allowing access from various old URLs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/front-matter/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Frequently Asked Questions\ndescription: Questions Asked Frequently.\nweight: 13\naliases:\n    - /faq\n    - /faq2\n    - /faq3\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar to Bypass External MongoDB IP in Istio\nDESCRIPTION: YAML configuration for initializing a sidecar container with the -x parameter to bypass traffic to a specific MongoDB IP address (169.47.232.211/32), preventing the sidecar from intercepting this external traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/egress-performance/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- -x\n- \"169.47.232.211/32\"\n```\n\n----------------------------------------\n\nTITLE: Verifying Proxy Sidecar Version Before Pod Restart in Bash\nDESCRIPTION: This command uses istioctl to check the proxy status, showing that the workload is still connected to the old Istio control plane version before restarting the pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl proxy-status\nNAME                              CLUSTER        CDS                LDS                EDS                RDS                ECDS        ISTIOD                                    VERSION\nsleep-5fcd8fd6c8-q4c9x.sample     Kubernetes     SYNCED (6m40s)     SYNCED (6m40s)     SYNCED (6m40s)     SYNCED (6m40s)     IGNORED     istiod-default-v1-24-2-bd8458c4-jl8zm     1.24.2\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning Message for Untested Vendor Document in HTML\nDESCRIPTION: This code snippet uses Hugo shortcodes to display a warning message indicating that the vendor-provided document has not been tested on the Istio 1.9 release and may contain bugs.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/untested-document.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{{< warning >}}\nThis vendor-provided document has not been tested on the Istio 1.9 release and may contain bugs.\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with eBPF Redirection in Ambient Mode\nDESCRIPTION: This command installs Istio with the ambient profile and sets the redirection mode to eBPF. It uses the istioctl command-line tool to configure the installation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/ambient-ebpf-redirection/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set profile=ambient --set values.cni.ambient.redirectMode=\"ebpf\"\n```\n\n----------------------------------------\n\nTITLE: Creating MySQL User with Limited Privileges\nDESCRIPTION: Creates a bookinfo user with SELECT privilege on test.ratings table using mysqlsh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ mysqlsh --sql --ssl-mode=REQUIRED -u admin -p --host $MYSQL_DB_HOST --port $MYSQL_DB_PORT -e \"CREATE USER 'bookinfo' IDENTIFIED BY '<password you choose>'; GRANT SELECT ON test.ratings to 'bookinfo';\"\n```\n\n----------------------------------------\n\nTITLE: Creating VirtualService for Reviews Traffic Routing\nDESCRIPTION: Traffic routing rules to split traffic between different versions of the reviews service across clusters\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n    - reviews.default.svc.cluster.local\n  http:\n  - match:\n    - headers:\n        end-user:\n          exact: jason\n    route:\n    - destination:\n        host: reviews.default.global\n        subset: v2\n      weight: 50\n    - destination:\n        host: reviews.default.global\n        subset: v3\n      weight: 50\n  - route:\n    - destination:\n        host: reviews.default.svc.cluster.local\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Verifying Proxy Service Deployment\nDESCRIPTION: Shows how to check if the istioctl-proxy service is running alongside istiod in the external cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get po -n external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\nNAME                              READY   STATUS    RESTARTS   AGE\nistioctl-proxy-664bcc596f-9q8px   1/1     Running   0          15s\nistiod-666fb6694d-jklkt           1/1     Running   0          5m31s\n```\n\n----------------------------------------\n\nTITLE: Istio Analysis Error Message for Invalid Port Name\nDESCRIPTION: The error message shown when Istio detects an ExternalName service with an invalid port name. It warns that traffic forwarding for ports named TCP serving TCP protocol will be blocked due to mismatched flow.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0150/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n注意，当 [IST0150] (Service nginx.default) ExternalName 服务的端口名称无效。\n将收到代理对以 TCP 命名和服务于 TCP 协议的端口中的不匹配流量的正确转发进行阻止。\n```\n\n----------------------------------------\n\nTITLE: Configuring JWT Authorization Policy in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy that allows specific service accounts and namespaces to access the 'httpbin' workload when sending GET requests with a valid JWT token issued by Google accounts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/curl\"]\n   - source:\n       namespaces: [\"dev\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.auth.claims[iss]\n     values: [\"https://accounts.google.com\"]\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Using Helm\nDESCRIPTION: Commands for removing Istio components installed via Helm from cluster1 and cluster2, including istiod, istio-eastwestgateway, and istio-base charts.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multicluster/multi-primary_multi-network/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ helm delete istiod -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n$ helm delete istio-eastwestgateway -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n$ helm delete istio-base -n istio-system --kube-context \"${CTX_CLUSTER1}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Extension Metadata in YAML\nDESCRIPTION: YAML frontmatter configuration for an Istio documentation page about extensibility. Defines metadata like title, description, weight, keywords and aliases for the documentation page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/extensibility/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Extensibility\ndescription: Helps you manage extensions to the service mesh.\nweight: 45\nkeywords: [ops,extensibility,WebAssembly,Wasm]\naliases:\n    - /help/ops/extensibility\ntest: n/a\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Istio 1.7.x Releases Documentation Page\nDESCRIPTION: YAML front matter that configures the metadata and display properties for the Istio 1.7.x releases documentation page. It sets the title, description, weight for ordering in navigation, enables listing by publication date, and applies a release-grid layout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.7.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.7.x Releases\ndescription: Announcements for the 1.7 release and its associated patch releases.\nweight: 22\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Attempting to Access Another Tenant's Application Namespace (Forbidden)\nDESCRIPTION: Shows that a tenant administrator cannot access resources in another tenant's application namespace, further demonstrating proper isolation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n ns-1\nError from server (Forbidden): pods is forbidden: User \"dev-admin\" cannot list pods in the namespace \"ns-1\"\n```\n\n----------------------------------------\n\nTITLE: Equivalent Helm Command for Configuration\nDESCRIPTION: Example of a Helm command that would be equivalent to the istioctl command shown with the values prefix. This illustrates the difference between the old and new approaches.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/introducing-istio-operator/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template ... --set global.mtls.enabled=true\n```\n\n----------------------------------------\n\nTITLE: Defining Tip Block for Kubernetes Version Support in Markdown\nDESCRIPTION: A markdown tip block specifying that Istio 1.14.0 officially supports Kubernetes versions 1.21 to 1.24. This is important information for users planning to install or upgrade Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tip >}}\nIstio 1.14.0 is officially supported on Kubernetes versions `1.21` to `1.24`.\n{{< /tip >}}\n```\n\n----------------------------------------\n\nTITLE: Displaying a Very Wide Text Block\nDESCRIPTION: A plain text block example demonstrating how extremely long lines appear in the documentation, used for testing layout and formatting constraints.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_6\n\nLANGUAGE: plain\nCODE:\n```\nReeeeeaaaaaalllllllllly lllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllong\n```\n\n----------------------------------------\n\nTITLE: Installing Multiple Istio Revisions for Tag Management\nDESCRIPTION: Installs two different revisions of Istio control plane to demonstrate revision tag management functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --revision={{< istio_previous_version_revision >}}-1 --set profile=minimal --skip-confirmation\n$ istioctl install --revision={{< istio_full_version_revision >}} --set profile=minimal --skip-confirmation\n```\n\n----------------------------------------\n\nTITLE: Modifying Configuration for IP-based Discovery\nDESCRIPTION: Modifies the Istio configuration to use IP-based discovery instead of DNS-based injection URL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\nsed  -i'.bk' \\\n  -e \"s|injectionURL: https://${EXTERNAL_ISTIOD_ADDR}:15017|injectionPath: |\" \\\n  -e \"/istioNamespace:/a\\\\\n      remotePilotAddress: ${EXTERNAL_ISTIOD_ADDR}\" \\\n  second-remote-cluster.yaml; rm second-remote-cluster.yaml.bk\n```\n\n----------------------------------------\n\nTITLE: VirtualService Configuration with Mismatched Hosts\nDESCRIPTION: An example VirtualService configuration that references a host 'wrong.com' which is not declared in its associated Gateway, which triggers the IST0132 warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0132/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: testing-service\n  namespace: default\nspec:\n  gateways:\n  - istio-system/testing-gateway\n  hosts:\n  - wrong.com\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: ratings\n```\n\n----------------------------------------\n\nTITLE: Configuring Envoy Stats Scraping in Prometheus\nDESCRIPTION: Prometheus job configuration to scrape Envoy statistics from ports ending with -envoy-prom, including both sidecar and gateway proxies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/prometheus/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n    - job_name: 'envoy-stats'\n      metrics_path: /stats/prometheus\n      kubernetes_sd_configs:\n      - role: pod\n\n      relabel_configs:\n      - source_labels: [__meta_kubernetes_pod_container_port_name]\n        action: keep\n        regex: '.*-envoy-prom'\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Authorization Action in Istio YAML\nDESCRIPTION: Added experimental 'CUSTOM' action in AuthorizationPolicy for integration with external authorization systems.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\naction: CUSTOM\n```\n\n----------------------------------------\n\nTITLE: Monitoring Istio Deployment Progress in MicroK8s\nDESCRIPTION: This command allows you to watch the deployment progress of Istio in MicroK8s. It displays all resources across all namespaces and updates the view periodically.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/MicroK8s/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ watch microk8s.kubectl get all --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Viewing IneffectivePolicy Warning for Workload in Ambient Mode\nDESCRIPTION: An example warning message showing that a Sidecar policy has no impact because the selected workload is in Ambient mode, making the policy ineffective.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0167/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0167] (Sidecar ns-ambient/pod-scoped testdata/sidecar-default-selector.yaml:90) The policy has no impact:\nselected workload is in ambient mode, the policy has no impact.\n```\n\n----------------------------------------\n\nTITLE: Implementing Page Redirection with Aliases in YAML Front Matter\nDESCRIPTION: Demonstrates how to use the 'aliases' field in front matter to redirect users from old URLs to new page locations, ensuring existing links continue to work.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/front-matter/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Frequently Asked Questions\ndescription: Questions Asked Frequently.\nweight: 13\naliases:\n    - /help/faq\n---\n```\n\n----------------------------------------\n\nTITLE: Verifying IstioRevision Cleanup in Bash\nDESCRIPTION: This command checks the IstioRevision resources after cleanup, confirming that the old revision has been automatically removed by the Sail Operator.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get istiorevision\nNAME              TYPE   READY   STATUS    IN USE   VERSION   AGE\ndefault-v1-24-3          True    Healthy   True     v1.24.3   13m\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Gateway Deployment Customization\nDESCRIPTION: Command to retrieve and inspect the deployed Istio ingress gateway to verify that the custom sysctl configuration has been successfully applied to the deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation-helm/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-ingress get deployment istio-ingress -o yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot.txt Rules for Istio Docs\nDESCRIPTION: Basic robots.txt configuration that allows all user agents complete access and specifies the sitemap location for version 0.8 of the documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.8/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v0.8/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Cleanup Commands for Istio and Gateway API Resources\nDESCRIPTION: These bash commands demonstrate how to clean up the httpbin sample, gateway resources, uninstall Istio, and remove Gateway API CRDs. It's important to run these commands in the specified order to properly remove all deployed resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/httpbin/httpbin.yaml@\n$ kubectl delete httproute http\n$ kubectl delete gateways.gateway.networking.k8s.io gateway -n istio-ingress\n$ kubectl delete ns istio-ingress\n$ istioctl uninstall -y --purge\n$ kubectl delete ns istio-system\n$ kubectl kustomize \"github.com/kubernetes-sigs/gateway-api/config/crd?ref={{< k8s_gateway_api_version >}}\" | kubectl delete -f -\n```\n\n----------------------------------------\n\nTITLE: Testing HTTP Requests to CNN.com\nDESCRIPTION: Shell commands to test HTTP requests to different CNN.com endpoints and verify 200 OK responses.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-monitoring-access-control/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec -it $SOURCE_POD -c sleep -- sh -c 'curl -sL -o /dev/null -w \"%{http_code}\\n\" http://edition.cnn.com/politics; curl -sL -o /dev/null -w \"%{http_code}\\n\" http://edition.cnn.com/sport; curl -sL -o /dev/null -w \"%{http_code}\\n\" http://edition.cnn.com/health'\n```\n\n----------------------------------------\n\nTITLE: Creating Destination Rule for Reviews Service in Cluster 1\nDESCRIPTION: Applies a destination rule in the first cluster that defines three subsets (v1, v2, v3) for the reviews service with TLS set to ISTIO_MUTUAL. This enables mutual TLS authentication between services.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply --context=$CTX_CLUSTER1 -f - <<EOF\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: reviews\nspec:\n  host: reviews.default.svc.cluster.local\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n  subsets:\n  - name: v1\n    labels:\n      version: v1\n  - name: v2\n    labels:\n      version: v2\n  - name: v3\n    labels:\n      version: v3\nEOF\n```\n\n----------------------------------------\n\nTITLE: Generating Host Entries for /etc/hosts\nDESCRIPTION: Outputs the IP addresses and hostnames needed to add to the /etc/hosts file for local access to the Bookinfo application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/bookinfo-kubernetes/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ echo $(kubectl get ingress istio-system -n istio-system -o jsonpath='{..ip} {..host}') $(kubectl get ingress bookinfo -o jsonpath='{..host}')\n```\n\n----------------------------------------\n\nTITLE: ExternalName Service with Invalid Port Name Example in Kubernetes YAML\nDESCRIPTION: This example shows a Service of type ExternalName with an invalid port name 'tcp'. For ExternalName services, Istio requires proper protocol-based port naming since routing requires the SNI field as no service IP is defined.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0150/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  externalName: nginx.example.com\n  ports:\n  - name: tcp\n    port: 443\n    protocol: TCP\n    targetPort: 443\n  type: ExternalName\n```\n\n----------------------------------------\n\nTITLE: AppSwitch System Call Example\nDESCRIPTION: Example showing how AppSwitch intercepts and handles the connect(2) system call when an application connects to a Kubernetes service IP.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/delayering-istio/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nconnect(2)\n```\n\n----------------------------------------\n\nTITLE: Namespace Isolation with Ingress Exception in Istio YAML\nDESCRIPTION: Policies that enable strict mTLS on a namespace and allow traffic from both the same namespace and the ingress gateway. This secures namespace traffic while still allowing external access through the controlled ingress point.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/security/security-policy-examples/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: default\n  namespace: foo\nspec:\n  mtls:\n    mode: STRICT\n---\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ns-isolation-except-ingress\n  namespace: foo\nspec:\n  action: ALLOW\n  rules:\n  - from:\n    - source:\n        namespaces: [\"foo\"]\n    - source:\n        principals: [\"cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring DestinationRule for Wikipedia Service\nDESCRIPTION: Creates a DestinationRule to disable Istio's mutual TLS for the Wikipedia service, as the workload already uses HTTPS.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-kubernetes-services/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: my-wikipedia\nspec:\n  host: my-wikipedia.default.svc.cluster.local\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Istio 1.2.x Release Page\nDESCRIPTION: YAML front matter block defining metadata for an Istio documentation page about 1.2.x releases. It sets the page title, description, weight for sorting, and specifies a list sorted by publish date and a release-grid layout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.2.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.2.x Releases\ndescription: Announcements for the 1.2 release and its associated patch releases.\nweight: 27\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Verifying Tenant Admin's Access to Application Pods\nDESCRIPTION: Command showing a tenant administrator's ability to view application pods in their assigned application namespace, confirming proper namespace access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n ns-0\nNAME                              READY     STATUS    RESTARTS   AGE\ndetails-v1-64b86cd49-b7rkr        2/2       Running   0          1d\nproductpage-v1-84f77f8747-rf2mt   2/2       Running   0          1d\nratings-v1-5f46655b57-5b4c5       2/2       Running   0          1d\nreviews-v1-ff6bdb95b-pm5lb        2/2       Running   0          1d\nreviews-v2-5799558d68-b989t       2/2       Running   0          1d\nreviews-v3-58ff7d665b-lw5j9       2/2       Running   0          1d\n```\n\n----------------------------------------\n\nTITLE: Ambient Mode Installation - GKE Platform Configuration\nDESCRIPTION: Installation commands for setting up Istio on GKE platform with ambient mode. Shows both Helm and istioctl configuration options.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/change-notes/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n--set global.platform=gke\n--set values.global.platform=gke\n```\n\n----------------------------------------\n\nTITLE: Authorization Policy After Upgrade (Istio 1.6 and later)\nDESCRIPTION: The updated version of the authorization policy targeting ports 8080 and 8443 for Istio 1.6 and later. This policy maintains the same functionality of denying access to the \"/admin\" path on the ingress gateway after port changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-002/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: block-admin-access\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  action: DENY\n  rules:\n  -  to:\n    - operation:\n        paths: [\"/admin\"]\n        ports: [ \"8080\" ]\n  -  to:\n    - operation:\n        paths: [\"/admin\"]\n        ports: [ \"8443\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Telemetry for Access Logging\nDESCRIPTION: Enables access logging for the gateway using the Envoy provider.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1alpha1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  accessLogging:\n    - providers:\n      - name: envoy\n```\n\n----------------------------------------\n\nTITLE: Configure Grafana Gateway and Routing\nDESCRIPTION: Kubernetes configurations to expose Grafana securely via HTTPS using Gateway, VirtualService, and DestinationRule resources\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: grafana-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 443\n      name: https-grafana\n      protocol: HTTPS\n    tls:\n      mode: SIMPLE\n      credentialName: telemetry-gw-cert\n    hosts:\n    - \"grafana.${INGRESS_DOMAIN}\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: grafana-vs\n  namespace: istio-system\nspec:\n  hosts:\n  - \"grafana.${INGRESS_DOMAIN}\"\n  gateways:\n  - grafana-gateway\n  http:\n  - route:\n    - destination:\n        host: grafana\n        port:\n          number: 3000\n---\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: grafana\n  namespace: istio-system\nspec:\n  host: grafana\n  trafficPolicy:\n    tls:\n      mode: DISABLE\n```\n\n----------------------------------------\n\nTITLE: Example of Ineffective Match in Istio VirtualService\nDESCRIPTION: This YAML configuration shows a virtual service with two identical match conditions for different destinations. The second rule will never be used because it duplicates the match in the first rule, causing the IST0131 analyzer message.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0131/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: tls-routing\nspec:\n  hosts:\n  - www1.googleapis.com\n  - api1.facebook.com\n  tls:\n  - match:\n    - port: 2443\n      sniHosts:\n      - www1.googleapis.com\n    route:\n    - destination:\n        host: www1.googleapis.com\n  - match:\n    - port: 2443\n      sniHosts:\n      - www1.googleapis.com\n    route:\n    - destination:\n        host: api1.facebook.com\n```\n\n----------------------------------------\n\nTITLE: Verifying External mTLS Connectivity to Internal Service on Port 8443 in Istio\nDESCRIPTION: Command to test mTLS connectivity from an external client to the internal httpbin service on port 8443, showing a successful connection with proper certificates and expected headers in the response.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${EXTERNAL_CLIENT}\" -c curl -- curl -IsS --cacert /tmp/ca.crt --key /tmp/client.test.svc.cluster.local.key --cert /tmp/client.test.svc.cluster.local.crt -HHost:httpbin.test.svc.cluster.local \"https://httpbin.test.svc.cluster.local:8443/status/200\"\nserver: istio-envoy\ndate: Mon, 24 Oct 2022 09:05:31 GMT\ncontent-type: text/html; charset=utf-8\naccess-control-allow-origin: *\naccess-control-allow-credentials: true\ncontent-length: 0\nx-envoy-upstream-service-time: 4\nx-envoy-decorator-operation: ingress-sidecar.test:9080/*\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Operator with Multiple Egress Gateways\nDESCRIPTION: IstioOperator manifest showing how to configure multiple egress gateways. This allows deploying separate gateways for different upstream services, but can become unwieldy with many gateways.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\n[...]\nspec:\n    egressGateways:\n    - name: egressgateway-1\n      enabled: true\n    - name: egressgateway-2\n      enabled: true\n    [egressgateway-3, egressgateway-4, ...]\n    - name: egressgateway-N\n      enabled: true\n[...]\n```\n\n----------------------------------------\n\nTITLE: Enabling Ambient Mode Pod Upgrade Reconciliation with Helm\nDESCRIPTION: Command to enable reconciliation of in-pod iptables rules when upgrading to Istio 1.25 using Helm. This feature inspects pods previously enrolled in ambient mesh and upgrades their rules if there's a difference.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm install cni --set ambient.reconcileIptablesOnStartup=true\n```\n\n----------------------------------------\n\nTITLE: Affected Resource Format for Istio Analyzer\nDESCRIPTION: Defines the structure for specifying affected resources in analyzer messages, showing how resource kind, name, and namespace are formatted.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/message-format/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n<resource-kind> <resource-name>.<resource-namespace>\n```\n\n----------------------------------------\n\nTITLE: Tip Callout Implementation in Hugo\nDESCRIPTION: Shows how to create tip callouts with single and multi-paragraph content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts_and_lists/index.md#2025-04-08_snippet_1\n\nLANGUAGE: hugo\nCODE:\n```\n{{< tip >}}\nThis is a tip\n{{< /tip >}}\n\n{{< tip >}}\nThis is a tip\n\nwith two paragraphs\n{{< /tip >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Istio AuthorizationPolicy for Kyverno Integration\nDESCRIPTION: Defines an Istio AuthorizationPolicy that specifies which services should be protected by the Kyverno Authz server using a CUSTOM action and provider reference.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: my-kyverno-authz\n  namespace: istio-system # 这将在所有网格上强制执行该策略，istio-system 是网格根命名空间\nspec:\n  selector:\n    matchLabels:\n      ext-authz: enabled\n  action: CUSTOM\n  provider:\n    name: kyverno-authz-server\n  rules: [{}] # 空规则，它将应用于带有 ext-authz: enabled 标签的选择器\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating gRPC Connection with xDS Scheme in Go\nDESCRIPTION: This code demonstrates how to create a gRPC connection using the xDS scheme. The URL must use the 'xds:///' scheme when creating the connection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nconn, err := grpc.DialContext(ctx, \"xds:///foo.ns.svc.cluster.local:7070\")\n```\n\n----------------------------------------\n\nTITLE: Testing Tenant Admin's Restricted Access to All Namespaces\nDESCRIPTION: Command demonstrating that a tenant administrator cannot access pods across all namespaces, confirming RBAC restrictions are working correctly.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods --all-namespaces\nError from server (Forbidden): pods is forbidden: User \"dev-admin\" cannot list pods at the cluster scope\n```\n\n----------------------------------------\n\nTITLE: Pod Description After Sidecar Injection\nDESCRIPTION: Kubernetes pod description showing the state of containers after Istio sidecar injection, including init container and proxy container details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nName:               demo-red-pod-8b5df99cc-pgnl7\nNamespace:          default\n.....\nLabels:             app=demo-red\n                    pod-template-hash=8b5df99cc\n                    version=version-red\nAnnotations:        sidecar.istio.io/status={\"version\":\"3c0b8d11844e85232bc77ad85365487638ee3134c91edda28def191c086dc23e\",\"initContainers\":[\"istio-init\"],\"containers\":[\"istio-proxy\"],\"volumes\":[\"istio-envoy\",\"istio-certs...\n```\n\n----------------------------------------\n\nTITLE: Setting MongoDB User Password in Bash\nDESCRIPTION: Sets an environment variable for the password of a new MongoDB user 'bookinfo', with instructions to remove the command from Bash history for security.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export BOOKINFO_PASSWORD=<password>\n```\n\n----------------------------------------\n\nTITLE: Configuring Case-Insensitive Path Handling with EnvoyFilter in Istio\nDESCRIPTION: This EnvoyFilter configuration uses a Lua script to convert all request paths to lowercase before they're processed by authorization policies or sent to backend applications, enabling case-insensitive path matching.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/best-practices/security/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: ingress-case-insensitive\n  namespace: istio-system\nspec:\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: GATEWAY\n      listener:\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n    patch:\n      operation: INSERT_FIRST\n      value:\n        name: envoy.lua\n        typed_config:\n            \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n            inlineCode: |\n              function envoy_on_request(request_handle)\n                local path = request_handle:headers():get(\":path\")\n                request_handle:headers():replace(\":path\", string.lower(path))\n              end\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Sidecar Injector Webhook Configuration\nDESCRIPTION: Displays the configuration of the Istio sidecar injector mutating webhook, showing how it selects namespaces for injection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/data-plane-setup/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get mutatingwebhookconfiguration istio-sidecar-injector -o yaml\nSNIPPET from the output:\n\napiVersion: admissionregistration.k8s.io/v1beta1\nkind: MutatingWebhookConfiguration\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"admissionregistration.k8s.io/v1beta1\",\"kind\":\"MutatingWebhookConfiguration\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"istio-sidecar-injector\",\"chart\":\"sidecarInjectorWebhook-1.0.1\",\"heritage\":\"Tiller\",\"release\":\"istio-remote\"},\"name\":\"istio-sidecar-injector\",\"namespace\":\"\"},\"webhooks\":[{\"clientConfig\":{\"caBundle\":\"\",\"service\":{\"name\":\"istio-sidecar-injector\",\"namespace\":\"istio-system\",\"path\":\"/inject\"}},\"failurePolicy\":\"Fail\",\"name\":\"sidecar-injector.istio.io\",\"namespaceSelector\":{\"matchLabels\":{\"istio-injection\":\"enabled\"}},\"rules\":[{\"apiGroups\":[\"\"],\"apiVersions\":[\"v1\"],\"operations\":[\"CREATE\"],\"resources\":[\"pods\"]}]}]}\n  creationTimestamp: 2018-12-10T08:40:15Z\n  generation: 2\n  labels:\n    app: istio-sidecar-injector\n    chart: sidecarInjectorWebhook-1.0.1\n    heritage: Tiller\n    release: istio-remote\n  name: istio-sidecar-injector\n  .....\nwebhooks:\n- clientConfig:\n    service:\n      name: istio-sidecar-injector\n      namespace: istio-system\n      path: /inject\n  name: sidecar-injector.istio.io\n  namespaceSelector:\n    matchLabels:\n      istio-injection: enabled\n  rules:\n  - apiGroups:\n    - \"\"\n    apiVersions:\n    - v1\n    operations:\n    - CREATE\n    resources:\n    - pods\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Istio 1.20.x Releases Page\nDESCRIPTION: YAML frontmatter that configures the display and organization of Istio 1.20.x release announcements. It sets the page title, description, weight for navigation ordering, and specifies that content should be listed by publication date and displayed in a grid layout with dot decoration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.20.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.20.x Releases\ndescription: Announcements for the 1.20 release and its associated patch releases.\nweight: 9\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying OPA Rego Policy\nDESCRIPTION: Applies a simple Rego policy that allows requests with specific headers. This policy demonstrates basic authorization logic using OPA.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: opa-policy\n  namespace: opa\ndata:\n  policy.rego: |\n    package mypackage.mysubpackage\n\n    import rego.v1\n\n    default myrule := false\n\n    myrule if {\n      input.attributes.request.http.headers[\"x-force-authorized\"] == \"enabled\"\n    }\n\n    myrule if {\n      input.attributes.request.http.headers[\"x-force-authorized\"] == \"true\"\n    }\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring gRPC Server with xDS Credentials in Go\nDESCRIPTION: This code sets up xDS credentials for the gRPC server, including fallback credentials. It's necessary for enabling security support on the server side.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ncreds, err := xds.NewServerCredentials(xdscreds.ServerOptions{FallbackCreds: insecure.NewCredentials()})\n// handle err\nserver = xds.NewGRPCServer(grpc.Creds(creds))\n```\n\n----------------------------------------\n\nTITLE: Configuring Virtual Service for MongoDB Traffic\nDESCRIPTION: Sets up routing rules to direct MongoDB traffic through the egress gateway to SNI proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: direct-mongo-through-egress-gateway\nspec:\n  hosts:\n  - \"*.com\"\n  gateways:\n  - mesh\n  - istio-egressgateway-with-sni-proxy\n  tls:\n  - match:\n    - gateways:\n      - mesh\n      port: $MONGODB_PORT\n      sni_hosts:\n      - \"*.com\"\n    route:\n    - destination:\n        host: istio-egressgateway-with-sni-proxy.istio-system.svc.cluster.local\n        subset: mongo\n        port:\n          number: 443\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: Deploying Egress Gateway Service and Deployment in Istio\nDESCRIPTION: YAML configuration for creating an egress gateway Service, Deployment, and associated RBAC roles in the istio-egress namespace. This sets up the basic infrastructure for the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: egressgateway\n  namespace: istio-egress\nspec:\n  type: ClusterIP\n  selector:\n    istio: egressgateway\n  ports:\n  - port: 443\n    name: tls-egress\n    targetPort: 8443\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: istio-egressgateway\n  namespace: istio-egress\nspec:\n  selector:\n    matchLabels:\n      istio: egressgateway\n  template:\n    metadata:\n      annotations:\n        inject.istio.io/templates: gateway\n      labels:\n        istio: egressgateway\n        sidecar.istio.io/inject: \"true\"\n    spec:\n      containers:\n      - name: istio-proxy\n        image: auto # The image will automatically update each time the pod starts.\n        securityContext:\n          capabilities:\n            drop:\n            - ALL\n          runAsUser: 1337\n          runAsGroup: 1337\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: istio-egressgateway-sds\n  namespace: istio-egress\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n- apiGroups:\n  - security.openshift.io\n  resourceNames:\n  - anyuid\n  resources:\n  - securitycontextconstraints\n  verbs:\n  - use\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: istio-egressgateway-sds\n  namespace: istio-egress\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: istio-egressgateway-sds\nsubjects:\n- kind: ServiceAccount\n  name: default\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.14.x Releases Page\nDESCRIPTION: A YAML front matter block configuring the display of Istio 1.14.x releases. It sets the page title, description, weight for sorting, and specifies it should list items by publication date using a 'release-grid' layout with dot decoration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.14.x Releases\ndescription: Announcements for the 1.14 release and its associated patch releases.\nweight: 15\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring istioctl Environment Variables\nDESCRIPTION: Sets the necessary environment variables to configure istioctl to use the proxy service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/istioctl-proxy/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ export ISTIOCTL_XDS_ADDRESS=localhost:9090\n$ export ISTIOCTL_ISTIONAMESPACE=external-istiod\n$ export ISTIOCTL_PREFER_EXPERIMENTAL=true\n```\n\n----------------------------------------\n\nTITLE: Nested Text Block in List\nDESCRIPTION: Another example of a text block nested within a bullet point showing multi-line formatting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb_and_lists/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\nAnother nested text block\nwith a second line\n\nand a third line\n```\n\n----------------------------------------\n\nTITLE: Creating Tabbed Content in Markdown for Istio Documentation\nDESCRIPTION: This snippet demonstrates how to use the 'tabset' and 'tab' shortcodes to create tabbed content in Istio documentation. It shows the syntax for creating a tab set with multiple tabs, each containing different content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* tabset category-name=\"platform\" */>}}\n\n{{</* tab name=\"One\" category-value=\"one\" */>}}\nONE\n{{</* /tab */>}}\n\n{{</* tab name=\"Two\" category-value=\"two\" */>}}\nTWO\n{{</* /tab */>}}\n\n{{</* tab name=\"Three\" category-value=\"three\" */>}}\nTHREE\n{{</* /tab */>}}\n\n{{</* /tabset */>}}\n```\n\n----------------------------------------\n\nTITLE: Deploying Egress Gateway Service and Deployment in Istio\nDESCRIPTION: YAML configuration for creating an egress gateway Service, Deployment, and associated RBAC roles in the istio-egress namespace. This sets up the basic infrastructure for the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: egressgateway\n  namespace: istio-egress\nspec:\n  type: ClusterIP\n  selector:\n    istio: egressgateway\n  ports:\n  - port: 443\n    name: tls-egress\n    targetPort: 8443\n\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: istio-egressgateway\n  namespace: istio-egress\nspec:\n  selector:\n    matchLabels:\n      istio: egressgateway\n  template:\n    metadata:\n      annotations:\n        inject.istio.io/templates: gateway\n      labels:\n        istio: egressgateway\n        sidecar.istio.io/inject: \"true\"\n    spec:\n      containers:\n      - name: istio-proxy\n        image: auto # The image will automatically update each time the pod starts.\n        securityContext:\n          capabilities:\n            drop:\n            - ALL\n          runAsUser: 1337\n          runAsGroup: 1337\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: istio-egressgateway-sds\n  namespace: istio-egress\nrules:\n- apiGroups: [\"\"]\n  resources: [\"secrets\"]\n  verbs: [\"get\", \"watch\", \"list\"]\n- apiGroups:\n  - security.openshift.io\n  resourceNames:\n  - anyuid\n  resources:\n  - securitycontextconstraints\n  verbs:\n  - use\n\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: istio-egressgateway-sds\n  namespace: istio-egress\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: istio-egressgateway-sds\nsubjects:\n- kind: ServiceAccount\n  name: default\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Container Date\nDESCRIPTION: Commands to compare the date inside a Docker container with the host machine's date to diagnose time synchronization issues affecting Zipkin traces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/observability-issues/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --entrypoint date gcr.io/istio-testing/ubuntu-16-04-slave:latest\n```\n\nLANGUAGE: bash\nCODE:\n```\ndate -u\n```\n\n----------------------------------------\n\nTITLE: Enabling PROXY Protocol via Gateway Pod Annotation\nDESCRIPTION: This YAML snippet shows how to enable PROXY protocol on a specific gateway by adding an annotation to the gateway's pod metadata. This method can be used as an alternative to the IstioOperator configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nmetadata:\n  annotations:\n    \"proxy.istio.io/config\": '{\"gatewayTopology\" : { \"proxyProtocol\": {} }}'\n```\n\n----------------------------------------\n\nTITLE: Verifying Rejection of External mTLS Traffic on Port 8080 in Istio\nDESCRIPTION: Command to verify that port 8080 does not accept external mTLS traffic, demonstrating the security configuration that restricts external connections to only the designated secure port.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"${EXTERNAL_CLIENT}\" -c curl -- curl -IsS --cacert /tmp/ca.crt --key /tmp/client.test.svc.cluster.local.key --cert /tmp/client.test.svc.cluster.local.crt -HHost:httpbin.test.svc.cluster.local \"http://httpbin.test.svc.cluster.local:8080/status/200\"\ncurl: (56) Recv failure: Connection reset by peer\ncommand terminated with exit code 56\n```\n\n----------------------------------------\n\nTITLE: Adding Tip for Supported Kubernetes Versions in Markdown\nDESCRIPTION: Markdown shortcode to insert a tip about supported Kubernetes versions for Istio 1.9.0.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/_index.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tip >}}\nIstio 1.9.0 is officially supported on Kubernetes versions `1.17.0` to `1.20.x`.\n{{< /tip >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Auto Allocation in Istio YAML\nDESCRIPTION: A new experimental proxy option to control auto allocation of ServiceEntry addresses, separate from DNS capture.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nDNS_AUTO_ALLOCATE: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Istio Config CRDs in Helm Values YAML\nDESCRIPTION: Added enableIstioConfigCRDs to base to allow user to specify whether Istio CRDs will be installed.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/change-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nbase:\n  enableIstioConfigCRDs: true\n```\n\n----------------------------------------\n\nTITLE: Idea Callout Templates in Istio Documentation\nDESCRIPTION: Examples of idea callouts showing single paragraph, multiple paragraphs, and nested text block variations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts/index.md#2025-04-08_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n{{< idea >}}\nThis is an idea\n{{< /idea >}}\n\n{{< idea >}}\nThis is an idea\n\nwith two paragraphs\n\n{{< /idea >}}\n\n{{< idea >}}\nThis is an idea\n\nwith two paragraphs\n\n{{< text plain >}}\nA nested text block\n{{< /text >}}\n\n{{< /idea >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring DENY AuthorizationPolicy with mTLS-only fields in YAML\nDESCRIPTION: Example of a DENY policy using mTLS-only fields to reject requests from namespace 'foo'. This configuration may fail to reject plain text requests from 'foo' namespace as expected.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2021-004/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.istio.io/v1beta1\"\nkind: \"AuthorizationPolicy\"\nmetadata:\n  name: reject-ns-foo\nspec:\n  action: DENY\n  rules:\n  - from:\n    - source:\n        namespaces: [\"foo\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Injector Legacy Selectors in Helm Values YAML\nDESCRIPTION: Improved sidecar injector to better utilize pod labels, can be tested with a Helm value.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/change-notes/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nvalues:\n  sidecarInjectorWebhook:\n    useLegacySelectors: false\n```\n\n----------------------------------------\n\nTITLE: Viewing Pods Across Multiple Istio Control Planes\nDESCRIPTION: Command to view all pods across namespaces, showing the deployed control plane components for both tenants in their respective namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods --all-namespaces\nNAMESPACE       NAME                                       READY     STATUS    RESTARTS   AGE\nistio-system    istio-ca-ffbb75c6f-98w6x                   1/1       Running   0          15d\nistio-system    istio-ingress-68d65fc5c6-dnvfl             1/1       Running   0          15d\nistio-system    istio-mixer-5b9f8dffb5-8875r               3/3       Running   0          15d\nistio-system    istio-pilot-678fc976c8-b8tv6               2/2       Running   0          15d\nistio-system1   istio-ca-5f496fdbcd-lqhlk                  1/1       Running   0          15d\nistio-system1   istio-ingress-68d65fc5c6-2vldg             1/1       Running   0          15d\nistio-system1   istio-mixer-7d4f7b9968-66z44               3/3       Running   0          15d\nistio-system1   istio-pilot-5bb6b7669c-779vb               2/2       Running   0          15d\n```\n\n----------------------------------------\n\nTITLE: Creating and Labeling Sample Namespace in Bash\nDESCRIPTION: Creates and labels the 'sample' namespace for injection on the remote cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create --context=\"${CTX_REMOTE_CLUSTER}\" namespace sample\n$ kubectl label --context=\"${CTX_REMOTE_CLUSTER}\" namespace sample istio-injection=enabled\n```\n\n----------------------------------------\n\nTITLE: Configuring Network Policy for Istio Ingress\nDESCRIPTION: Network policy configuration to restrict incoming traffic to only ports 80 and 443 for the Istio ingress controller.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2017/0.1-using-network-policy/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: istio-ingress-lockdown\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      istio: ingress\n  ingress:\n  - ports:\n    - protocol: TCP\n      port: 80\n    - protocol: TCP\n      port: 443\n```\n\n----------------------------------------\n\nTITLE: Sending HTTPS Requests to Wikipedia Domains\nDESCRIPTION: This bash command sends HTTPS requests to en.wikipedia.org and de.wikipedia.org, extracting the title from the response to verify successful access through the egress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$SOURCE_POD\" -c curl -- sh -c 'curl -s https://en.wikipedia.org/wiki/Main_Page | grep -o \"<title>.*</title>\"; curl -s https://de.wikipedia.org/wiki/Wikipedia:Hauptseite | grep -o \"<title>.*</title>\"'\n```\n\n----------------------------------------\n\nTITLE: Using connection.sni Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use connection.sni condition to match server name indication. Requires TLS to be enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nkey: connection.sni\nvalues: [\"www.example.com\"]\n```\n\n----------------------------------------\n\nTITLE: NetworkPolicy Block HBONE Traffic Example\nDESCRIPTION: Example of a NetworkPolicy that would block incoming HBONE traffic to my-app on port 15008, which needs to be modified for ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: my-app-allow-ingress-web\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  ingress:\n  - ports:\n    - port: 8080\n      protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: NetworkPolicy Block HBONE Traffic Example\nDESCRIPTION: Example of a NetworkPolicy that would block incoming HBONE traffic to my-app on port 15008, which needs to be modified for ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: my-app-allow-ingress-web\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  ingress:\n  - ports:\n    - port: 8080\n      protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Checking ZooKeeper Pods and Services Status in Kubernetes\nDESCRIPTION: Kubernetes command to check the status of ZooKeeper pods and services after installation, showing that all pods are running with sidecar proxies attached.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods,svc\nNAME                             READY   STATUS    RESTARTS   AGE\nmy-release-zookeeper-0           2/2     Running   0          3h4m\nmy-release-zookeeper-1           2/2     Running   0          3h4m\nmy-release-zookeeper-2           2/2     Running   0          3h5m\npod/sleep-8f795f47d-qkgh4        2/2     Running   0          3h8m\n\nNAME                            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                            AGE\nmy-release-zookeeper            ClusterIP   10.100.1.113   <none>        2181/TCP,2888/TCP,3888/TCP         3h\nmy-release-zookeeper-headless   ClusterIP   None           <none>        2181/TCP,2888/TCP,3888/TCP         3h\nservice/sleep                   ClusterIP   10.100.9.26    <none>        80/TCP                             3h\n```\n\n----------------------------------------\n\nTITLE: Verifying Metric Generation for Details Service (Bash)\nDESCRIPTION: Bash command using istioctl to verify metric generation and examine the istio_requests_total metric for the details service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/telemetry-api/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x es \"$(kubectl get pod -l app=details -o jsonpath='{.items[0].metadata.name}')\" -oprom | grep istio_requests_total\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation of Istio Installation Methods\nDESCRIPTION: Structured documentation detailing three main Istio installation approaches with their advantages and disadvantages, including istioctl install, Helm installation, and manifest-based installation using kubectl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/setup/install-method-selection.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Which Istio installation method should I use?\nweight: 10\n---\n\nIn addition to the simple [getting started](/docs/setup/getting-started) evaluation install, there are several different\nmethods you can use to install Istio. Which one you should use depends on your production requirements.\nThe following lists some of the pros and cons of each of the available methods:\n\n1. [istioctl install](/docs/setup/install/istioctl/)\n\n    The simplest and most qualified installation and management path with high security.\n    This is the community recommended method for most use cases.\n\n    Pros:\n\n    - Thorough configuration validation and health verification.\n    - Uses the `IstioOperator` API which provides extensive configuration/customization options.\n\n    Cons:\n\n    - Multiple binaries must be managed, one per Istio minor version.\n    - The `istioctl` command can set values automatically based on your running environment,\n      thereby producing varying installations in different Kubernetes environments.\n\n1. [Install using Helm](/docs/setup/install/helm/)\n\n    Allows easy integration with Helm-based workflows and automated resource pruning during upgrades.\n\n    Pros:\n\n    - Familiar approach using industry standard tooling.\n    - Helm native release and upgrade management.\n\n    Cons:\n\n    - Fewer checks and validations compared to `istioctl install`.\n    - Some administrative tasks require more steps and have higher complexity.\n\n1. Apply a generated Kubernetes manifest\n\n    - [Generating Kubernetes manifests with `istioctl`](/docs/setup/install/istioctl/#generate-a-manifest-before-installation)\n    - [Generating Kubernetes manifests with `helm`](/docs/setup/install/helm/#generate-a-manifest-before-installation)\n\n    This method is suitable where strict auditing or augmentation of output manifests is required, or there are third-party tooling constraints.\n\n    Pros:\n\n    - Easier to integrate with tooling that doesn't use `helm` or `istioctl`.\n    - No installation tools required other than `kubectl`.\n\n    Cons:\n\n    - No install-time checks, environment detection, or validations supported by either of the above methods are performed.\n    - No installation management or upgrade capability is supported.\n    - UX is less streamlined.\n    - Error reporting during installation is not as robust.\n```\n\n----------------------------------------\n\nTITLE: Checking Ingress Gateway Logs for DLB\nDESCRIPTION: This bash command retrieves the pod name of the Istio ingress gateway and checks its logs for DLB-related entries. It demonstrates how to verify if DLB is properly configured and functioning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nexport POD=\"$(kubectl get pods -n istio-system | grep gateway | awk '{print $1}')\"\nkubectl logs -n istio-system ${POD} | grep dlb\n```\n\n----------------------------------------\n\nTITLE: Patched Istio Output Manifest\nDESCRIPTION: This YAML snippet shows the result of applying the patches from the previous IstioOperator configuration. It demonstrates the modified Deployment and Service resources with the applied changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: istiod\nspec:\n  template:\n    spec:\n      containers:\n      - args:\n        - 60m\n        env:\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v2\n              fieldPath: metadata.myPath\n        name: discovery\n        ports:\n        - containerPort: 1234\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: istiod\nspec:\n  ports:\n  - name: https-dns\n    port: 11111\n---\n```\n\n----------------------------------------\n\nTITLE: Adding Callouts with Hugo Shortcodes in Markdown\nDESCRIPTION: Demonstrates how to use shortcodes to create different types of callouts (warnings, ideas, tips, and quotes) in Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/shortcodes/index.md#2025-04-08_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* warning */>}}\nThis is an important warning\n{{</* /warning */>}}\n\n{{</* idea */>}}\nThis is a great idea\n{{</* /idea */>}}\n\n{{</* tip */>}}\nThis is a useful tip from an expert\n{{</* /tip */>}}\n\n{{</* quote */>}}\nThis is a quote from somewhere\n{{</* /quote */>}}\n```\n\n----------------------------------------\n\nTITLE: Creating External-Istiod Namespace in Bash\nDESCRIPTION: Creates a namespace called 'external-istiod' in the external cluster which will host the Istio control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create namespace external-istiod --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: ServiceEntry Example with TCP Protocol and Missing Addresses\nDESCRIPTION: An example of a ServiceEntry resource that triggers the IST0134 warning because it explicitly sets protocol to TCP but is missing the required addresses field. The addresses field is required when using TCP protocol in ServiceEntry resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0134/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: service-entry\n  namespace: default\nspec:\n  hosts:\n    - 'istio.io'\n  exportTo:\n    - \".\"\n  ports:\n    - number: 443\n      name: https\n      protocol: TCP\n  location: MESH_EXTERNAL\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Examining Pod Events for CNI Issues\nDESCRIPTION: This command shows detailed information about a pod including events that may indicate CNI plugin failures during network setup. Use this to diagnose pod startup failures related to the Istio CNI plugin.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/cni/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl describe pod POD_NAME -n POD_NAMESPACE\n```\n\n----------------------------------------\n\nTITLE: Enabling Analysis Feature in Istiod\nDESCRIPTION: Command to install Istio with the enableAnalysis feature turned on. This allows Istiod to perform configuration analysis and write validation messages to resource status fields.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set values.global.istiod.enableAnalysis=true\n```\n\n----------------------------------------\n\nTITLE: Gateway Router Mode Configuration - YAML\nDESCRIPTION: YAML configuration to set the router mode for ingressGateway to support AUTO_PASSTHROUGH functionality.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.8.x/announcing-1.8/upgrade-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ningressGateways:\n- name: istio-ingressgateway\n    enabled: true\n    k8s:\n    env:\n        - name: ISTIO_META_ROUTER_MODE\n          value: \"sni-dnat\"\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS with CryptoMB Private Key Provider in Envoy\nDESCRIPTION: This snippet demonstrates how to configure TLS in Envoy using the CryptoMB private key provider, specifying the private key file and poll delay.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/cryptomb-privatekeyprovider/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntls_certificates:\n  certificate_chain: { \"filename\": \"/path/cert.pem\" }\n  private_key_provider:\n    provider_name: cryptomb\n    typed_config:\n      \"@type\": type.googleapis.com/envoy.extensions.private_key_providers.cryptomb.v3alpha.CryptoMbPrivateKeyMethodConfig\n      private_key: { \"filename\": \"/path/key.pem\" }\n      poll_delay: 10ms\n```\n\n----------------------------------------\n\nTITLE: Configuring Block All Route in Envoy for Istio\nDESCRIPTION: JSON configuration for the block_all route in Envoy, used to return a 502 HTTP status code for unmatched routes when blocking external traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"block_all\",\n  \"domains\": [\n    \"*\"\n  ],\n  \"routes\": [\n    {\n      \"match\": {\n        \"prefix\": \"/\"\n      },\n      \"directResponse\": {\n        \"status\": 502\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Warning Callout Templates in Istio Documentation\nDESCRIPTION: Examples of warning callouts with different formats including single paragraph, multiple paragraphs, and nested text blocks. Shows various text wrapping scenarios.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts/index.md#2025-04-08_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{{< warning >}}\nThis is a warning\n{{< /warning >}}\n\n{{< warning >}}\nThis is a warning\n\nwith two paragraphs\n{{< /warning >}}\n\n{{< warning >}}\nThis is a warning with a reasonably long sentence.\n\nwith two paragraphs\n\n{{< text plain >}}\nA nested text block\n{{< /text >}}\n\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Legacy RouteRule Configuration in Istio\nDESCRIPTION: Example of the deprecated v1alpha2 RouteRule resources for routing traffic to different versions of the reviews service based on user cookie headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: config.istio.io/v1alpha2\nkind: RouteRule\nmetadata:\n  name: reviews-default\nspec:\n  destination:\n    name: reviews\n  precedence: 1\n  route:\n  - labels:\n      version: v1\n---\napiVersion: config.istio.io/v1alpha2\nkind: RouteRule\nmetadata:\n  name: reviews-test-v2\nspec:\n  destination:\n    name: reviews\n  precedence: 2\n  match:\n    request:\n      headers:\n        cookie:\n          regex: \"^(.*?;)?(user=jason)(;.*)?$\"\n  route:\n  - labels:\n      version: v2\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo v1 Services to Cluster1\nDESCRIPTION: YAML configuration for deploying productpage, details, and reviews-v1 services to the first cluster\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: productpage\n  labels:\n    app: productpage\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: productpage\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: productpage-v1\nspec:\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: productpage\n        version: v1\n    spec:\n      containers:\n      - name: productpage\n        image: istio/examples-bookinfo-productpage-v1:1.10.0\n        imagePullPolicy: IfNotPresent\n        ports:\n        - containerPort: 9080\n```\n\n----------------------------------------\n\nTITLE: Downloading and Setting Up Istio\nDESCRIPTION: These commands download Istio version 1.17.2, extract it, and add the Istio binaries to the system PATH.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/dlb-connection-balancing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.17.2 TARGET_ARCH=x86_64 sh -\n$ cd istio-1.17.2\n$ export PATH=$PWD/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Patching Istio Ingress Gateway Deployment\nDESCRIPTION: Applies a patch to the istio-ingressgateway deployment in the istio-system namespace using a predefined YAML file. This patch updates the gateway configuration to use the custom bootstrap runtime.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/cve-2020-007-configmap.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --namespace istio-system patch deployment istio-ingressgateway --patch \"$(cat gateway-patch.yaml)\"\n```\n\n----------------------------------------\n\nTITLE: Diagnosing TLS Conflicts in Istio\nDESCRIPTION: This command uses istioctl to describe a pod and identify potential TLS conflicts. It checks for mismatches between the pod's mTLS enforcement and the clients' communication protocol.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl x describe pod $RATINGS_POD\n...\nWARNING Pilot predicts TLS Conflict on ratings-v1-f745cf57b-qrxl2 port 9080 (pod enforces mTLS, clients speak HTTP)\n  Check DestinationRule ratings/default and AuthenticationPolicy ratings-strict/default\n```\n\n----------------------------------------\n\nTITLE: Configuring PeerAuthentication for Usergroup-2\nDESCRIPTION: Deploys a PeerAuthentication policy for usergroup-2 namespace to enforce strict mTLS traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multiple-controlplanes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"usergroup-2-peerauth\"\n  namespace: \"usergroup-2\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Disabling HTTP2 on Istio Ingress Gateway\nDESCRIPTION: EnvoyFilter configuration to disable HTTP2 support on the Ingress Gateway as a temporary workaround for CVE-2020-11080. This configuration is applicable when not exposing gRPC services through ingress.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-006/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: disable-ingress-h2\n  namespace: istio-system\nspec:\n  workloadSelector:\n    labels:\n      istio: ingressgateway\n  configPatches:\n  - applyTo: NETWORK_FILTER # http connection manager is a filter in Envoy\n    match:\n      context: GATEWAY\n      listener:\n        filterChain:\n          filter:\n            name: \"envoy.http_connection_manager\"\n    patch:\n      operation: MERGE\n      value:\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager\n          codec_type: HTTP1\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for External Service Access in Istio\nDESCRIPTION: This YAML snippet defines a ServiceEntry to enable access to edition.cnn.com on both HTTP and HTTPS ports. It allows the mesh to route traffic to this external service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: edition-cnn-com\nspec:\n  hosts:\n  - edition.cnn.com\n  ports:\n  - number: 80\n    name: http-port\n    protocol: HTTP\n  - number: 443\n    name: https-port\n    protocol: HTTPS\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Serving Istio Docs Website Locally\nDESCRIPTION: Command to build and serve the Istio documentation website locally using make. This starts a local web server at http://localhost:1313.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/build/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ make serve\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Dashboard\nDESCRIPTION: Deploys the Kubernetes Dashboard UI using Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/k3d/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/\nhelm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard\n```\n\n----------------------------------------\n\nTITLE: Blocking All Ingress Traffic with Kubernetes NetworkPolicy\nDESCRIPTION: This NetworkPolicy example demonstrates how to block all incoming traffic to a specific application, which could potentially interfere with kubelet health probes in an Ambient mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/networkpolicy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: deny-ingress\nspec:\n  podSelector:\n    matchLabels:\n      app.kubernetes.io/name: my-app\n  policyTypes:\n  - Ingress\n```\n\n----------------------------------------\n\nTITLE: Custom Header Condition Authorization Policy\nDESCRIPTION: Policy with custom conditions checking request header values, allowing specific version matches.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/curl\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"]\n```\n\n----------------------------------------\n\nTITLE: Testing Access to httpbin Service\nDESCRIPTION: Executes a curl command from the curl pod to verify access to the httpbin service before applying authorization policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec \"$(kubectl get pod -l app=curl -n foo -o jsonpath={.items..metadata.name})\" -c curl -n foo -- curl http://httpbin.foo:8000/ip -s -o /dev/null -w \"%{http_code}\\n\"\n```\n\n----------------------------------------\n\nTITLE: Listing Generated Certificates and Keys\nDESCRIPTION: Lists all the certificate and key files generated in the example_certs1 and example_certs2 directories.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ ls example_cert*\n```\n\n----------------------------------------\n\nTITLE: Monitoring Memory Usage in Minikube VM\nDESCRIPTION: Uses the 'top' command to monitor memory usage within the minikube virtual machine. This helps ensure sufficient resources are available for Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/minikube/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ top\n```\n\n----------------------------------------\n\nTITLE: Initiating Istio Upgrade\nDESCRIPTION: Command to start the Istio upgrade process\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/in-place/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl upgrade\n```\n\n----------------------------------------\n\nTITLE: Updating IstioOperator Configuration for IP Address in Bash\nDESCRIPTION: Modifies the IstioOperator configuration when using an IP address instead of DNS hostname by removing proxy metadata and updating webhook configuration environment variables.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsed  -i'.bk' \\\n  -e '/proxyMetadata:/,+2d' \\\n  -e '/INJECTION_WEBHOOK_CONFIG_NAME/{n;s/value: \"\"/value: istio-sidecar-injector-external-istiod/;}' \\\n  -e '/VALIDATION_WEBHOOK_CONFIG_NAME/{n;s/value: \"\"/value: istio-validator-external-istiod/;}' \\\n  external-istiod.yaml ; rm external-istiod.yaml.bk\n```\n\n----------------------------------------\n\nTITLE: Configuring DestinationRule with Missing caCertificates in Istio YAML\nDESCRIPTION: This YAML snippet shows a DestinationRule configuration for TLS traffic to a database server. It sets up SIMPLE TLS mode with client certificate and private key, but omits the required caCertificates field, which triggers the NoServerCertificateVerificationPortLevel error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0129/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: DestinationRule\nmetadata:\n  name: db-tls\nspec:\n  host: mydbserver.prod.svc.cluster.local\n  trafficPolicy:\n    portLevelSettings:\n      - port:\n          number: 443\n        tls:\n          mode: SIMPLE\n          clientCertificate: /etc/certs/myclientcert.pem\n          privateKey: /etc/certs/client_private_key.pem\n          sni: my-nginx.mesh-external.svc.cluster.local\n          # caCertificates 未设置\n```\n\n----------------------------------------\n\nTITLE: Migrating to v1beta1 Authentication Policies\nDESCRIPTION: Shows the migration of v1alpha1 authentication policies to v1beta1 PeerAuthentication and RequestAuthentication resources with corresponding AuthorizationPolicy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/migrate-alpha-policy/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: default\n  namespace: foo\nspec:\n  mtls:\n    mode: STRICT\n---\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  portLevelMtls:\n    80:\n      mode: PERMISSIVE\n--\napiVersion: security.istio.io/v1beta1\nkind: RequestAuthentication\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  jwtRules:\n  - issuer: testing@example.com\n    jwksUri: https://www.example.com/jwks.json\n---\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: httpbin-jwt\n  namespace: foo\nspec:\n  action: DENY\n  selector:\n    matchLabels:\n      app: httpbin\n  rules:\n  - from:\n    - source:\n        notRequestPrincipals: [\"*\"]\n    to:\n    - operation:\n        ports: [\"80\"]\n        paths: [\"/admin/*\"]\n        notPaths: [\"/admin/status\"]\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio Solutions Page\nDESCRIPTION: YAML frontmatter that configures the Istio solutions page. It sets the page title, description, subtitle, URL aliases, document type, and layout settings including disabling the sidebar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/solutions/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Solutions\ndescription: Solutions.\nsubtitle: Learn how to succeed at security, observability, and traffic management initiatives using Istio.\naliases:\n    - /solutions\ndoc_type: about\ntype: solutions\nsidebar_none: true\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Plain Text Block in Markdown\nDESCRIPTION: A nested text block using Hugo shortcode syntax to display plain text content within a markdown document.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/example.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nA sample nested text block in a boilerplate.\n```\n\n----------------------------------------\n\nTITLE: Deploying OpenTelemetry Collector in Kubernetes\nDESCRIPTION: This command applies the OpenTelemetry Collector configuration to the Kubernetes cluster. It uses a YAML file named 'otel.yaml' from the 'samples/open-telemetry/' directory and deploys it to the 'observability' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/start-otel-collector-service.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/open-telemetry/otel.yaml@ -n observability\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio ServiceEntry for Cross-Cluster Communication in YAML\nDESCRIPTION: Example YAML configurations for Istio ServiceEntry resources in two different clusters to enable cross-cluster communication for a payment service. The configurations demonstrate how endpoints and DNS resolution vary based on cluster context.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2020/multi-cluster-mesh-automation/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: payments.global-se\nspec:\n  addresses:\n  - 240.0.0.10\n  endpoints:\n  - address: ef394f...us-east-2.elb.amazonaws.com\n    locality: us-east-2\n    ports:\n      http: 15443\n  - address: ad38bc...us-west-2.elb.amazonaws.com\n    locality: us-west-2\n    ports:\n      http: 15443\n  hosts:\n  - payments.global\n  location: MESH_INTERNAL\n  ports:\n  - name: http\n    number: 80\n    protocol: http\n  resolution: DNS\n```\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: payments.global-se\nspec:\n  addresses:\n  - 240.0.0.10\n  endpoints:\n  - address: ef39xf...us-east-2.elb.amazonaws.com\n    locality: us-east-2\n    ports:\n      http: 15443\n  - address: payments.default.svc.cluster.local\n    locality: us-west-2\n    ports:\n      http: 80\n  hosts:\n  - payments.global\n  location: MESH_INTERNAL\n  ports:\n  - name: http\n    number: 80\n    protocol: http\n  resolution: DNS\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Istio Documentation Website\nDESCRIPTION: Standard robots.txt configuration that allows all user agents to access the Istio documentation website and points to the sitemap location. The configuration doesn't restrict any content from being crawled and provides the path to the XML sitemap.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.4/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.4/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Defining Crawler Access Rules in robots.txt for Istio.io\nDESCRIPTION: This robots.txt configuration allows unrestricted access to most of the Istio.io website, disallows access to the '/v-0.1' directory, and specifies the location of the sitemap. It helps search engines understand which parts of the site to crawl and index.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.7/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\n\nDisallow: /v-0.1\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Setting Ingress Gateway Name and Namespace\nDESCRIPTION: Commands to set environment variables for the Istio ingress gateway name and namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ export INGRESS_NAME=istio-ingressgateway\n$ export INGRESS_NS=istio-system\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Cluster Configuration\nDESCRIPTION: Sets environment variables for the external control plane cluster context, remote cluster context, and remote cluster name. These variables are used throughout the installation process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export CTX_EXTERNAL_CLUSTER=<your external cluster context>\n$ export CTX_REMOTE_CLUSTER=<your remote cluster context>\n$ export REMOTE_CLUSTER_NAME=<your remote cluster name>\n```\n\n----------------------------------------\n\nTITLE: Verifying Certificate Chain\nDESCRIPTION: Verifies the entire certificate chain from root to workload certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl verify -CAfile <(cat certs/cluster1/ca-cert.pem certs/cluster1/root-cert.pem) ./proxy-cert-1.pem\n```\n\n----------------------------------------\n\nTITLE: Defining Istio 1.15.x Releases Page Front Matter in YAML\nDESCRIPTION: YAML front matter that configures a webpage for Istio 1.15.x release announcements. The configuration specifies the page title, description, weight for navigation ordering, and layout settings including list ordering by publication date and visual presentation using a release-grid layout with dot decoration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.15.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.15.x Releases\ndescription: Announcements for the 1.15 release and its associated patch releases.\nweight: 14\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Generate SSL Certificates and Create Kubernetes Secret\nDESCRIPTION: Commands to generate self-signed SSL certificates using OpenSSL and create a Kubernetes secret for telemetry gateway certification\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/gateways/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ CERT_DIR=/tmp/certs\n$ mkdir -p ${CERT_DIR}\n$ openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj \"/O=example Inc./CN=*.${INGRESS_DOMAIN}\" -keyout ${CERT_DIR}/ca.key -out ${CERT_DIR}/ca.crt\n$ openssl req -out ${CERT_DIR}/cert.csr -newkey rsa:2048 -nodes -keyout ${CERT_DIR}/tls.key -subj \"/CN=*.${INGRESS_DOMAIN}/O=example organization\"\n$ openssl x509 -req -sha256 -days 365 -CA ${CERT_DIR}/ca.crt -CAkey ${CERT_DIR}/ca.key -set_serial 0 -in ${CERT_DIR}/cert.csr -out ${CERT_DIR}/tls.crt\n$ kubectl create -n istio-system secret tls telemetry-gw-cert --key=${CERT_DIR}/tls.key --cert=${CERT_DIR}/tls.crt\n```\n\n----------------------------------------\n\nTITLE: Configuring robots.txt for Istio Documentation Website\nDESCRIPTION: This snippet defines the robots.txt configuration for the Istio documentation website. It allows all user agents to access the site and specifies the location of the sitemap file.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.6/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.6/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with istioctl\nDESCRIPTION: Basic command to install Istio service mesh on a Kubernetes cluster using the istioctl command-line tool.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/deployment/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio 1.0 Announcement Page\nDESCRIPTION: YAML front matter defining metadata for the Istio 1.0 announcement page including title, publication date, release version, and URL aliases for redirection.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.0.x/announcing-1.0/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.0\nlinktitle: \"1.0\"\nsubtitle: The production ready service mesh\ndescription: Istio is ready for production use with its 1.0 release.\npublishdate: 2018-07-31\nrelease: 1.0.0\naliases:\n    - /about/notes/1.0\n    - /blog/2018/announcing-1.0\n    - /news/2018/announcing-1.0\n    - /news/announcing-1.0.0\n    - /news/announcing-1.0\n---\n```\n\n----------------------------------------\n\nTITLE: Enabling Access Logs Using Telemetry API in Istio\nDESCRIPTION: This YAML configuration enables access logging for the entire service mesh using Istio's Telemetry API with the default Envoy provider. This configuration can be applied at the mesh, namespace, or workload level for fine-grained control.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/access-log/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n  name: mesh-default\n  namespace: istio-system\nspec:\n  accessLogging:\n    - providers:\n      - name: envoy\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTPRoute for Helloworld using Gateway API\nDESCRIPTION: Defines an HTTPRoute resource to route traffic for helloworld.example.com through the mygateway Gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: helloworld\nspec:\n  parentRefs:\n  - name: mygateway\n    namespace: istio-system\n  hostnames: [\"helloworld.example.com\"]\n  rules:\n  - matches:\n    - path:\n        type: Exact\n        value: /hello\n    backendRefs:\n    - name: helloworld\n      port: 5000\n```\n\n----------------------------------------\n\nTITLE: Removing Leftover CRD in Istio 1.4 Upgrade\nDESCRIPTION: This command removes the unused 'authorizationpolicies.rbac.istio.io' CRD that may be left over from an internal implementation detail before Istio 1.4. It's safe to execute as part of the upgrade process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.4.x/announcing-1.4/upgrade-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete crd authorizationpolicies.rbac.istio.io --ignore-not-found=true\n```\n\n----------------------------------------\n\nTITLE: Installing Istio from IstioOperator Configuration in Bash\nDESCRIPTION: Applies the Istio configuration to the external cluster using the istioctl install command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install -f external-istiod.yaml --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Gateway Configuration for Manual Deployment\nDESCRIPTION: YAML configuration showing how to link a manually deployed Gateway to a Service using the addresses field with a Hostname reference.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  addresses:\n  - value: ingress.istio-gateways.svc.cluster.local\n    type: Hostname\n...\n```\n\n----------------------------------------\n\nTITLE: DestinationRule for External Service with mTLS\nDESCRIPTION: Configuration for enabling mutual TLS authentication when accessing an external service through ServiceEntry.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/v1alpha3-routing/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: DestinationRule\nmetadata:\n  name: foo-ext\nspec:\n  host: foo.com\n  trafficPolicy:\n    tls:\n      mode: MUTUAL\n      clientCertificate: /etc/certs/myclientcert.pem\n      privateKey: /etc/certs/client_private_key.pem\n      caCertificates: /etc/certs/rootcacerts.pem\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio Documentation\nDESCRIPTION: YAML frontmatter block defining metadata for an Istio documentation page, including title, description, weight for navigation ordering, and test property.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/overview/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Overview\ndescription: A high-level introduction to Istio and service mesh.\nweight: 5\ntest: table-of-contents\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a Shell Environment for Multicluster Testing\nDESCRIPTION: Command to create a shell environment with all required tools and packages for multicluster testing, including mounting SSH credentials for authentication.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nADDITIONAL_CONTAINER_OPTIONS=\"--network host\" ADDITIONAL_CONDITIONAL_HOST_MOUNTS=\"--mount type=bind,source=${HOME}/.ssh,destination=/home/user/.ssh,readonly \" make shell\n```\n\n----------------------------------------\n\nTITLE: Restoring Istio Custom Configurations in Bash\nDESCRIPTION: This command applies the previously exported Istio custom configurations from the backup file. It uses kubectl to apply the YAML file containing the backed-up resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/helm-backup.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f \"$HOME\"/istio_resource_backup.yaml\n```\n\n----------------------------------------\n\nTITLE: Debugging Istio Distroless Proxies with Kubernetes Ephemeral Containers\nDESCRIPTION: Command to attach a debug container to a running pod with a distroless Istio proxy. This uses Kubernetes Ephemeral Containers feature to attach a container with debugging tools to inspect the proxy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/security/harden-docker-images/index.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ kubectl debug --image istio/base --target istio-proxy -it app-65c6749c9d-t549t\nDefaulting debug container name to debugger-cdftc.\nIf you don't see a command prompt, try pressing enter.\nroot@app-65c6749c9d-t549t:/# curl example.com\n```\n\n----------------------------------------\n\nTITLE: Verifying Istio Deployment\nDESCRIPTION: Command to check if Istio-related pods and services are successfully deployed in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get svc -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Format of Envoy Denied Response\nDESCRIPTION: JSON structure showing the format of a Denied response from the Envoy external authorization service, which can include status, headers, body, and dynamic metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": {...},\n  \"denied_response\": {\n    \"status\": {...},\n    \"headers\": [],\n    \"body\": \"...\"\n  },\n  \"dynamic_metadata\": {...}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Allow Path IP Authorization Policy\nDESCRIPTION: Creates an authorization policy that allows requests to the /ip path on httpbin workload\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-deny/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-path-ip\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        paths: [\"/ip\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Canary Revision of Istio Control Plane\nDESCRIPTION: Installs a new revision of Istio labeled as 'canary' alongside the existing control plane, allowing for side-by-side deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set revision=canary\n```\n\n----------------------------------------\n\nTITLE: Checking for Istio Operator Installation in Bash\nDESCRIPTION: Commands to determine if the Istio In-Cluster Operator is installed in your cluster. This checks for the operator deployment and IstioOperator custom resource.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n istio-system istio-operator\nkubectl get IstioOperator\n```\n\n----------------------------------------\n\nTITLE: Configuring PassthroughCluster in Envoy for Istio\nDESCRIPTION: JSON configuration for the PassthroughCluster in Envoy, used when global.outboundTrafficPolicy.mode is set to ALLOW_ANY. This cluster uses original destination load balancing to allow all external traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/monitoring-external-service-traffic/index.md#2025-04-08_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"PassthroughCluster\",\n  \"type\": \"ORIGINAL_DST\",\n  \"connectTimeout\": \"10s\",\n  \"lbPolicy\": \"ORIGINAL_DST_LB\",\n  \"circuitBreakers\": {\n    \"thresholds\": [\n      {\n        \"maxConnections\": 102400,\n        \"maxRetries\": 1024\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Sidecar Proxy Logs\nDESCRIPTION: Examines the sidecar proxy logs to compare routing behavior between Wikipedia requests (through gateway) and IBM Cloud request (direct passthrough).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl logs $SOURCE_POD -c istio-proxy\n```\n\n----------------------------------------\n\nTITLE: Invalid EnvoyFilter REPLACE Operation Example\nDESCRIPTION: Example of an EnvoyFilter configuration that incorrectly uses the REPLACE operation with HTTP_FILTER ApplyTo setting. This configuration attempts to replace an HTTP filter with a Lua filter, but will be ignored due to invalid operation type combination.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0152/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-replace-2\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews2\n  priority: 10\n  configPatches:\n    # The first patch adds the Lua filter to the listener/http connection manager\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND\n      listener:\n        portNumber: 8080\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n            subFilter:\n              name: \"envoy.filters.http.router\"\n    patch:\n      operation: REPLACE\n      value: # Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              5000)\n            end\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the community involvement page, defining metadata like title, description, navigation settings and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/get-involved/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Get involved!\nlinktitle: Get involved\ndescription: Information on the various ways to participate and interact with the Istio community.\nsubtitle: Ask questions, be a part of the conversation, or contribute to Istio's growth. Istio is an open source project that is driven by the participation of users and contributors. Join in!\nsidebar_none: true\nweight: 15\nskip_toc: true\nskip_byline: true\nskip_pagenav: true\nskip_breadcrumb: true\naliases:\n    - /community\n    - /about/community\n    - /latest/about/community\n    - /about/community/join\n    - /latest/about/community/join\ndoc_type: get-involved\n---\n```\n\n----------------------------------------\n\nTITLE: Deleting Gardener Cluster\nDESCRIPTION: Commands to annotate and delete a Kubernetes cluster in Gardener using kubectl\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/gardener/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl --kubeconfig garden-my-project.yaml --namespace garden--my-project annotate shoot my-cluster confirmation.garden.sapcloud.io/deletion=true\n$ kubectl --kubeconfig garden-my-project.yaml --namespace garden--my-project delete shoot my-cluster\n```\n\n----------------------------------------\n\nTITLE: Checking if a Pod is in the Mesh\nDESCRIPTION: Demonstrates how to verify if a pod is part of the service mesh by examining a kube-dns pod, which returns a warning indicating it has no Istio sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBE_POD=$(kubectl -n kube-system get pod -l k8s-app=kube-dns -o jsonpath='{.items[0].metadata.name}')\n$ istioctl x describe pod -n kube-system $KUBE_POD\nPod: coredns-f9fd979d6-2zsxk\n   Pod Ports: 53/UDP (coredns), 53 (coredns), 9153 (coredns)\nWARNING: coredns-f9fd979d6-2zsxk is not part of mesh; no Istio sidecar\n--------------------\n2021-01-22T16:10:14.080091Z     error   klog    an error occurred forwarding 42785 -> 15000: error forwarding port 15000 to pod 692362a4fe313005439a873a1019a62f52ecd02c3de9a0957cd0af8f947866e5, uid : failed to execute portforward in network namespace \"/var/run/netns/cni-3c000d0a-fb1c-d9df-8af8-1403e6803c22\": failed to dial 15000: dial tcp4 127.0.0.1:15000: connect: connection refused[]\nError: failed to execute command on sidecar: failure running port forward process: Get \"http://localhost:42785/config_dump\": EOF\n```\n\n----------------------------------------\n\nTITLE: Checking if a Pod is in the Mesh\nDESCRIPTION: Demonstrates how to verify if a pod is part of the service mesh by examining a kube-dns pod, which returns a warning indicating it has no Istio sidecar.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ export KUBE_POD=$(kubectl -n kube-system get pod -l k8s-app=kube-dns -o jsonpath='{.items[0].metadata.name}')\n$ istioctl x describe pod -n kube-system $KUBE_POD\nPod: coredns-f9fd979d6-2zsxk\n   Pod Ports: 53/UDP (coredns), 53 (coredns), 9153 (coredns)\nWARNING: coredns-f9fd979d6-2zsxk is not part of mesh; no Istio sidecar\n--------------------\n2021-01-22T16:10:14.080091Z     error   klog    an error occurred forwarding 42785 -> 15000: error forwarding port 15000 to pod 692362a4fe313005439a873a1019a62f52ecd02c3de9a0957cd0af8f947866e5, uid : failed to execute portforward in network namespace \"/var/run/netns/cni-3c000d0a-fb1c-d9df-8af8-1403e6803c22\": failed to dial 15000: dial tcp4 127.0.0.1:15000: connect: connection refused[]\nError: failed to execute command on sidecar: failure running port forward process: Get \"http://localhost:42785/config_dump\": EOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API for Mutual TLS\nDESCRIPTION: Updates the Gateway resource using Gateway API to enable mutual TLS using an Istio-specific option.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\n  namespace: istio-system\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: https\n    hostname: \"httpbin.example.com\"\n    port: 443\n    protocol: HTTPS\n    tls:\n      mode: Terminate\n      certificateRefs:\n      - name: httpbin-credential\n      options:\n        gateway.istio.io/tls-terminate-mode: MUTUAL\n    allowedRoutes:\n      namespaces:\n        from: Selector\n        selector:\n          matchLabels:\n            kubernetes.io/metadata.name: default\n```\n\n----------------------------------------\n\nTITLE: Verifying Internal Mesh Connectivity on Port 8080\nDESCRIPTION: Commands to test internal mesh connectivity by sending HTTP requests to httpbin service on port 8080. Shows how to get the internal client pod name and execute a curl command to verify connectivity.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ export INTERNAL_CLIENT=$(kubectl -n test get pod -l app=curl -o jsonpath={.items..metadata.name})\n$ kubectl -n test exec \"${INTERNAL_CLIENT}\" -c curl -- curl -IsS \"http://httpbin:8080/status/200\"\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.13.x Release Page\nDESCRIPTION: YAML front matter block defining the configuration and metadata for the Istio 1.13.x releases documentation page. Specifies the title, description, weight for sorting, layout type, and visual decoration style.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.13.x Releases\ndescription: Announcements for the 1.13 release and its associated patch releases.\nweight: 16\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Exporting Root Certificates for Cluster Issuers\nDESCRIPTION: Exports root certificates for each cluster issuer into environment variables.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ export ISTIOCA=$(kubectl get clusterissuers istio-system -o jsonpath='{.spec.ca.secretName}' | xargs kubectl get secret -n cert-manager -o jsonpath='{.data.ca\\.crt}' | base64 -d | sed 's/^/        /')\n$ export FOOCA=$(kubectl get clusterissuers foo -o jsonpath='{.spec.ca.secretName}' | xargs kubectl get secret -n cert-manager -o jsonpath='{.data.ca\\.crt}' | base64 -d | sed 's/^/        /')\n$ export BARCA=$(kubectl get clusterissuers bar -o jsonpath='{.spec.ca.secretName}' | xargs kubectl get secret -n cert-manager -o jsonpath='{.data.ca\\.crt}' | base64 -d | sed 's/^/        /')\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabbed Content with Shortcodes in Markdown\nDESCRIPTION: This snippet showcases the structure of a tabset with multiple tabs using custom shortcodes. Each tab contains different types of content including plain text, warnings, text blocks, and markdown formatting.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/test/tabs/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tabset category-name=\"test\" >}}\n\n{{< tab name=\"One\" category-value=\"one\" >}}\nOne paragraph\n{{< /tab >}}\n\n{{< tab name=\"Two\" category-value=\"two\" >}}\nThree\n\nseparate\n\nparagraphs\n{{< /tab >}}\n\n{{< tab name=\"Three\" category-value=\"three\" >}}\n{{< warning >}}\nWarning in a tab\n{{< /warning >}}\n{{< /tab >}}\n\n{{< tab name=\"Four\" category-value=\"four\" >}}\nSimple text\n\nIn two paragraphs\n\n{{< warning >}}\nWarning in a tab\n{{< /warning >}}\n{{< /tab >}}\n\n{{< tab name=\"Five\" category-value=\"five\" >}}\nSimple text\n\n{{< text plain >}}\nText block in a tab\n{{< /text >}}\n\n{{< /tab >}}\n\n{{< tab name=\"Six\" category-value=\"six\" >}}\nSimple text with _markdown_ in a tab\n\n{{< warning >}}\nWarning with _markdown_ in a tab\n\n{{< text plain >}}\nText block in a warning in a tab\n{{< /text >}}\n\nAnd more _markdown_\n{{< /warning >}}\n\n{{< /tab >}}\n\n{{< tab name=\"Seven\" category-value=\"seven\" >}}\nSimple text with _markdown_ in a tab\n\n{{< text plain >}}\nNoIndent:\n    FourIndent:\n        - EightIndent\n    FourIndentAgain:\n        - EightIndentAgain\n{{< /text >}}\n\nAnd more _markdown_\n{{< /tab >}}\n\n{{< /tabset >}}\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio from the Cluster\nDESCRIPTION: Command to completely uninstall Istio from the Kubernetes cluster, purging all Istio-related components and configurations.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/ingress-sidecar-tls-termination/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl uninstall --purge -y\n```\n\n----------------------------------------\n\nTITLE: Configuring External Service Access\nDESCRIPTION: Defines ServiceEntry and VirtualService to enable HTTPS access to googleapis.com from within the mesh.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-https/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: googleapis\nspec:\n  hosts:\n  - www.googleapis.com\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\n  location: MESH_EXTERNAL\n  resolution: DNS\n---\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: googleapis\nspec:\n  hosts:\n  - www.googleapis.com\n  tls:\n  - match:\n    - port: 443\n      sni_hosts:\n      - www.googleapis.com\n    route:\n    - destination:\n        host: www.googleapis.com\n        port:\n          number: 443\n      weight: 100\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio Documentation\nDESCRIPTION: YAML frontmatter configuration block that defines metadata for the documentation page, including title, description, weight, aliases, keywords, owner and test status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/add-content/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Add New Documentation\ndescription: Details how to contribute new documentation to Istio.\nweight: 3\naliases:\n    - /docs/welcome/contribute/writing-a-new-topic.html\n    - /docs/reference/contribute/writing-a-new-topic.html\n    - /about/contribute/writing-a-new-topic.html\n    - /create\n    - /about/contribute/add-content\n    - /latest/about/contribute/add-content\nkeywords: [contribute]\nowner: istio/wg-docs-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Running Individual Documentation Tests\nDESCRIPTION: Command to run specific individual tests by listing their full paths separated by commas. This allows targeted testing of particular documentation examples.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nTEST_ENV=kind ADDITIONAL_CONTAINER_OPTIONS=\"--network host\" make doc.test TEST=tasks/traffic-management/request-routing,tasks/traffic-management/fault-injection\n```\n\n----------------------------------------\n\nTITLE: Identifying IstioOperator Resources\nDESCRIPTION: 列出集群中的 IstioOperator 自定义资源。此命令用于确认集群中是否正在使用 Istio In-Cluster Operator。\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get IstioOperator\n```\n\n----------------------------------------\n\nTITLE: Viewing the Contents of the Dockerfile in Bash\nDESCRIPTION: Displays the contents of the downloaded Dockerfile to understand how the container will be built. The Dockerfile contains instructions to copy files, install dependencies, and set the command to run the ratings service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat Dockerfile\n```\n\n----------------------------------------\n\nTITLE: Setting MongoDB Admin Password in Bash\nDESCRIPTION: Sets an environment variable for the MongoDB admin password, with instructions to remove the command from Bash history for security.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export MONGO_ADMIN_PASSWORD=<your MongoDB admin password>\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway API Resource\nDESCRIPTION: Creates a Kubernetes Gateway API resource with TLS termination configuration\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\n  namespace: istio-system\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: https\n    hostname: \"httpbin.example.com\"\n    port: 443\n    protocol: HTTPS\n    tls:\n      mode: Terminate\n      certificateRefs:\n      - name: httpbin-credential\n    allowedRoutes:\n      namespaces:\n        from: Selector\n        selector:\n          matchLabels:\n            kubernetes.io/metadata.name: default\n```\n\n----------------------------------------\n\nTITLE: Verifying Root Certificate\nDESCRIPTION: Compares the root certificate from the pod with the one specified by the administrator.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/cert-management/plugin-ca-cert/index.md#2025-04-08_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl x509 -in certs/cluster1/root-cert.pem -text -noout > /tmp/root-cert.crt.txt\n$ openssl x509 -in ./proxy-cert-3.pem -text -noout > /tmp/pod-root-cert.crt.txt\n$ diff -s /tmp/root-cert.crt.txt /tmp/pod-root-cert.crt.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Kind Cluster for Istio Installation\nDESCRIPTION: Kind cluster configuration to set up service account issuer and signing key. This is required for proper Istio installation when using Kind.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nkubeadmConfigPatches:\n  - |\n    apiVersion: kubeadm.k8s.io/v1beta2\n    kind: ClusterConfiguration\n    metadata:\n      name: config\n    apiServer:\n      extraArgs:\n        \"service-account-issuer\": \"kubernetes.default.svc\"\n        \"service-account-signing-key-file\": \"/etc/kubernetes/pki/sa.key\"\n```\n\n----------------------------------------\n\nTITLE: Referencing kubectl Command in Markdown\nDESCRIPTION: Provides a link to the kubectl documentation as an alternative to deprecated istioctl commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[`kubectl`](https://kubernetes.io/docs/tasks/tools/install-kubectl)\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Gateway Controller with Minimal Profile\nDESCRIPTION: Downloads the latest version of Istio and installs it with the minimal profile to enable Istio's gateway controller implementation for the Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2022/getting-started-gtwapi/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L https://istio.io/downloadIstio | sh -\ncd istio-{{< istio_full_version >}}\n./bin/istioctl install --set profile=minimal -y\n```\n\n----------------------------------------\n\nTITLE: Release Note Warning Block in Markdown\nDESCRIPTION: A warning block using Hugo shortcode syntax to alert users about CVE-2022-31045 and recommend against installing Istio 1.14.2.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14.2/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< warning >}}\nIstio 1.14.2 does not contain a fix for [CVE-2022-31045](/news/security/istio-security-2022-005/#cve-2022-31045). We recommend users to not install Istio 1.14.2\nand use Istio 1.14.1 for now. Istio 1.14.3 will be released later this week.\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: Ineffective Namespace-Scoped Sidecar Policy Warning\nDESCRIPTION: Example of a warning message indicating that a Sidecar policy has no impact because the targeted namespace is in ambient mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0167/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0167] (Sidecar ns-ambient/namespace-scoped testdata/sidecar-default-selector.yaml:84) The policy has no\\nimpact: namespace is in ambient mode, the policy has no impact.\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for 'About Istio' Documentation Page\nDESCRIPTION: This YAML frontmatter defines metadata for the 'About Istio' documentation page, including its title, description, and build configurations. The configuration specifies that the page has no sidebar, sets its weight for ordering, and includes cascade settings to control how it and its child pages are rendered and listed.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: About Istio\nlinktitle: About\ndescription: Get a bit more in-depth info about the Istio project.\nsidebar_none: true\nweight: 15\ndoc_type: about\ncascade:\n  _build:\n    render: always\n    list: always\n_build:\n  render: never\n  list: never\n---\n```\n\n----------------------------------------\n\nTITLE: Viewing Deployed Istio Pods (Bash)\nDESCRIPTION: This command lists all pods across namespaces, showing the two separate Istio control planes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Creating a Default Route with Istio VirtualService\nDESCRIPTION: Defining a VirtualService with a default route for the reviews service that explicitly sends traffic to the v1 subset, which ensures proper application of corresponding DestinationRule policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Creating a Default Route with Istio VirtualService\nDESCRIPTION: Defining a VirtualService with a default route for the reviews service that explicitly sends traffic to the v1 subset, which ensures proper application of corresponding DestinationRule policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/traffic-management/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: reviews\nspec:\n  hosts:\n  - reviews\n  http:\n  - route:\n    - destination:\n        host: reviews\n        subset: v1\n```\n\n----------------------------------------\n\nTITLE: Deploying Sample Application\nDESCRIPTION: Deploys the httpbin sample application to test HTTP requests and demonstrate request/response attribute usage.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2024/l7-policy-with-opa/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns my-app\n$ kubectl label namespace my-app istio-injection=enabled\n\n$ kubectl apply -f {{< github_file >}}/samples/httpbin/httpbin.yaml -n my-app\n```\n\n----------------------------------------\n\nTITLE: Defining OIDC Configuration for Web Application Protection\nDESCRIPTION: YAML configuration for creating an OidcConfig resource that defines an OIDC provider for web application protection. This includes discovery URL, client ID, and reference to client secret stored in Kubernetes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/app-identity-and-access-adapter/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"security.cloud.ibm.com/v1\"\nkind: OidcConfig\nmetadata:\n    name: my-oidc-provider-config\n    namespace: sample-namespace\nspec:\n    discoveryUrl: <discovery-url-from-oidc-provider>\n    clientId: <client-id-from-oidc-provider>\n    clientSecretRef:\n        name: <kubernetes-secret-name>\n        key: <kubernetes-secret-key>\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with OpenShift Profile using istioctl\nDESCRIPTION: This command demonstrates how to install Istio using the experimental OpenShift Kubernetes platform profile. It utilizes the 'istioctl install' command with the '--set profile=openshift' flag.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/news/releases/1.22.x/announcing-1.22/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --set profile=openshift\n```\n\n----------------------------------------\n\nTITLE: Retrieving Istio Galley Configuration with kubectl\nDESCRIPTION: This command uses kubectl to fetch the Istio Galley configuration from a ConfigMap in the istio-system namespace. It extracts the data field using jsonpath.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/command_yaml_example.txt#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get configmap istio-galley-configuration -o jsonpath='{.data}'\n```\n\n----------------------------------------\n\nTITLE: EnvoyFilter with Relative Operation (INSERT_BEFORE)\nDESCRIPTION: An example of an EnvoyFilter resource using the relative patch operation INSERT_BEFORE to add a Lua filter before the router filter. This approach can lead to unpredictable behavior when multiple EnvoyFilters are applied without priorities.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0151/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-relative\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews2\n  configPatches:\n    # The first patch adds the Lua filter to the listener/http connection manager\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND\n      listener:\n        portNumber: 8080\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n            subFilter:\n              name: \"envoy.filters.http.router\"\n    patch:\n      operation: INSERT_BEFORE\n      value: # Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              5000)\n            end\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.22.0 release notes page, including title, publication date, release version, and page aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.22.x/announcing-1.22/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.22.0 Change Notes\nlinktitle: 1.22.0\nsubtitle: Minor Release\ndescription: Istio 1.22.0 release notes.\npublishdate: 2024-05-13\nrelease: 1.22.0\nweight: 10\naliases:\n    - /news/announcing-1.22.0\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Full Istio Version in Documentation\nDESCRIPTION: This shortcode displays the full version of the current Istio release. It ensures that all references to the current Istio version throughout the documentation are consistent and up-to-date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/args.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=istio_full_version >}}\n{{< istio_full_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Pod Configuration in YAML for Ztunnel\nDESCRIPTION: A YAML representation of how a pod is configured in Ztunnel, showing workload metadata including name, namespace, service account, node, protocol, and other identifying information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: helloworld-v1-55446d46d8-ntdbk\nnamespace: default\nserviceAccount: helloworld\nnode: ambient-worker2\nprotocol: TCP\nstatus: Healthy\nwaypointAddresses: []\nworkloadIp: 10.244.2.8\ncanonicalName: helloworld\ncanonicalRevision: v1\nworkloadName: helloworld-v1\nworkloadType: deployment\n```\n\n----------------------------------------\n\nTITLE: Redeploying productpage with Istio sidecar injection\nDESCRIPTION: This command redeploys the productpage microservice with Istio sidecar injection enabled, using istioctl for manual injection and sed to modify the replica count.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/examples/microservices-istio/add-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -s {{< github_file >}}/samples/bookinfo/platform/kube/bookinfo.yaml | istioctl kube-inject -f - | sed 's/replicas: 1/replicas: 3/g' | kubectl apply -l app=productpage,version=v1 -f -\n```\n\n----------------------------------------\n\nTITLE: Configuring Egress Gateway with SNI Proxy\nDESCRIPTION: Creates an egress Gateway, DestinationRule, and EnvoyFilters to handle TLS traffic to *.com domains with SNI verification.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: istio-egressgateway-with-sni-proxy\nspec:\n  selector:\n    istio: egressgateway-with-sni-proxy\n  servers:\n  - port:\n      number: 443\n      name: tls\n      protocol: TLS\n    hosts:\n    - \"*.com\"\n    tls:\n      mode: MUTUAL\n      serverCertificate: /etc/certs/cert-chain.pem\n      privateKey: /etc/certs/key.pem\n      caCertificates: /etc/certs/root-cert.pem\n```\n\n----------------------------------------\n\nTITLE: Checking Istio Default Injection Policy\nDESCRIPTION: Retrieves the default injection policy from the istio-sidecar-injector configmap. The policy can be either 'enabled' or 'disabled' and applies when the webhook's namespaceSelector matches the target namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/injection/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system get configmap istio-sidecar-injector -o jsonpath='{.data.config}' | grep policy:\npolicy: enabled\n```\n\n----------------------------------------\n\nTITLE: Error Message Display for Virtual Service Host Mismatch\nDESCRIPTION: Example error message shown when a virtual service host is not found in the corresponding gateway configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0132/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0132] (VirtualService testing-service.default testing.yaml:8) one or more host [wrong.com] defined in VirtualService default/testing-service not found in Gateway istio-system/testing-gateway.\n```\n\n----------------------------------------\n\nTITLE: Executing an authorized curl request with Kubernetes\nDESCRIPTION: A kubectl command to execute a curl request from a pod with an authorization header that allows the request to succeed with a 200 status code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -n my-app deploy/curl -- curl -s -w \"\\nhttp_code=%{http_code}\" httpbin:8000/get -H \"x-force-authorized: true\"\n```\n\n----------------------------------------\n\nTITLE: Defining Basic L4 Authorization Policy in Istio\nDESCRIPTION: This YAML snippet demonstrates how to create a basic Layer 4 authorization policy in Istio. It allows traffic from a specific service account to the httpbin application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/l4-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: allow-curl-to-httpbin\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals:\n       - cluster.local/ns/ambient-demo/sa/curl\n```\n\n----------------------------------------\n\nTITLE: Defining Basic L4 Authorization Policy in Istio\nDESCRIPTION: This YAML snippet demonstrates how to create a basic Layer 4 authorization policy in Istio. It allows traffic from a specific service account to the httpbin application.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/usage/l4-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n name: allow-curl-to-httpbin\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n action: ALLOW\n rules:\n - from:\n   - source:\n       principals:\n       - cluster.local/ns/ambient-demo/sa/curl\n```\n\n----------------------------------------\n\nTITLE: Creating an Allow-Nothing Authorization Policy in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy that matches nothing (no rules specified), effectively creating a default deny condition as it's an ALLOW policy that never matches any request.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-nothing\nspec:\n  action: ALLOW\n  # 若不指定 rules 字段，则策略将从不匹配。\n```\n\n----------------------------------------\n\nTITLE: Enforcing mTLS at Authorization Layer in Istio YAML\nDESCRIPTION: An authorization policy that adds defense in depth by validating mTLS at the authorization layer. It denies requests with empty principals, which would occur if plain text communication is attempted.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/security/security-policy-examples/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: require-mtls\n  namespace: foo\nspec:\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notPrincipals: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio Commands Documentation\nDESCRIPTION: YAML front matter block defining metadata for an Istio documentation page about commands. Includes title, description, weight for ordering, and test status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/commands/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Commands\ndescription: Describes usage and options of the Istio commands and utilities.\nweight: 20\ntest: n/a\n```\n\n----------------------------------------\n\nTITLE: Istio Manual Sidecar Injection\nDESCRIPTION: Command for deploying the bookinfo application with manual Istio sidecar injection using istioctl.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb_and_lists/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f <(istioctl kube-inject -f @samples/bookinfo/platform/kube/bookinfo.yaml@)\n```\n\n----------------------------------------\n\nTITLE: Configuring Global and Pilot Settings\nDESCRIPTION: YAML configuration showing how to set global and Pilot-specific settings using the Helm API interface.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    pilot:\n      traceSampling: 0.1 # override from 1.0\n    global:\n      monitoringPort: 15014\n```\n\n----------------------------------------\n\nTITLE: Configuring Global and Pilot Settings\nDESCRIPTION: YAML configuration showing how to set global and Pilot-specific settings using the Helm API interface.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/customize-installation/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  values:\n    pilot:\n      traceSampling: 0.1 # override from 1.0\n    global:\n      monitoringPort: 15014\n```\n\n----------------------------------------\n\nTITLE: Generating Client Certificate and Key with OpenSSL\nDESCRIPTION: These bash commands generate a client certificate signing request and a signed client certificate using the previously created root certificate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/egress/egress-tls-origination/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nopenssl req -out client.example.com.csr -newkey rsa:2048 -nodes -keyout client.example.com.key -subj \"/CN=client.example.com/O=client organization\"\nopenssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 1 -in client.example.com.csr -out client.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Setting Request Timeout using Gateway API\nDESCRIPTION: Configuration to set a 500ms timeout for requests using Gateway API HTTPRoute.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/request-timeouts/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: HTTPRoute\nmetadata:\n  name: reviews\nspec:\n  parentRefs:\n  - group: \"\"\n    kind: Service\n    name: reviews\n    port: 9080\n  rules:\n  - backendRefs:\n    - name: reviews-v2\n      port: 9080\n    timeouts:\n      request: 500ms\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthorizationPolicy with Ineffective Selector in YAML\nDESCRIPTION: Shows an example of an AuthorizationPolicy with a selector that ineffectively targets a Kubernetes Gateway, triggering the warning.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0166/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  namespace: default\n  name: ap-ineffective\nspec:\n  selector:\n    matchLabels:\n      gateway.networking.k8s.io/gateway-name: bookinfo-gateway\n  action: DENY\n  rules:\n  - from:\n    - source:\n      namespaces: [\"dev\"]\n    to:\n    - operation:\n      methods: [\"POST\"]\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Dual Stack Support\nDESCRIPTION: IstioOperator configuration to enable experimental dual stack support in Istio 1.17.0+\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/experimental-dual-stack/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install -y -f - <<EOF\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nspec:\n  meshConfig:\n    defaultConfig:\n      proxyMetadata:\n        ISTIO_DUAL_STACK: \"true\"\n  values:\n    pilot:\n      env:\n        ISTIO_DUAL_STACK: \"true\"\nEOF\n```\n\n----------------------------------------\n\nTITLE: Defining Multi-line Snippet SNIP1 in Istio Documentation\nDESCRIPTION: A snippet block labeled 'SNIP1' containing a two-line text block that can be referenced elsewhere in Istio documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/snippet_example.txt#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# $snippet SNIP1\nThis is chunk 1\non two lines\n# $endsnippet\n```\n\n----------------------------------------\n\nTITLE: Problematic EnvoyFilter Configuration with REPLACE Operation and ProxyVersion\nDESCRIPTION: An example of two EnvoyFilter resources where one uses the REPLACE operation with proxyVersion specified, which can cause issues during upgrades because the order of application may change when the proxy version changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0155/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-replace-3\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews4\n  configPatches:\n    # The first patch adds the Lua filter to the listener/http connection manager\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n      proxy:\n        proxyVersion: '^1\\.11.*'\n      listener:\n        portNumber: 8080\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n            subFilter:\n              name: \"envoy.filters.http.router\"\n    patch:\n      operation: REPLACE\n      value: # Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              1000)\n            end\n\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-replace-4\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews4\n  configPatches:\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_OUTBOUND\n    patch:\n      operation: REPLACE\n      value: #Lua filter specification\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              5000)\n            end\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio 1.23.x Release Page\nDESCRIPTION: YAML frontmatter configuration block that defines the metadata and layout settings for the Istio 1.23.x release documentation page. Specifies the title, description, weight for ordering, and display settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.23.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.23.x Releases\ndescription: Announcements for the 1.23 release and its associated patch releases.\nweight: 6\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Kubernetes Gateway API Version in Istio Documentation\nDESCRIPTION: This shortcode is used to display the current version of the Kubernetes Gateway API supported by Istio. It helps maintain consistency across the documentation when referring to the Gateway API version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/args.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n{{< text syntax=plain snip_id=gateway_api_version >}}\n{{< k8s_gateway_api_version >}}\n{{< /text >}}\n```\n\n----------------------------------------\n\nTITLE: Checking ZooKeeper Server Status with Istio Sidecar\nDESCRIPTION: Command to verify the ZooKeeper server status, showing that the service is not running properly due to networking issues with Istio prior to version 1.10.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/statefulsets-made-easier/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec my-release-zookeeper-1 -c zookeeper -- /opt/bitnami/zookeeper/bin/zkServer.sh status\n/opt/bitnami/java/bin/java\nZooKeeper JMX enabled by default\nUsing config: /opt/bitnami/zookeeper/bin/../conf/zoo.cfg\nClient port found: 2181. Client address: localhost. Client SSL: false.\nError contacting service. It is probably not running.\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Front Matter for Istio 1.8.x Release Page\nDESCRIPTION: This YAML snippet defines the front matter for a page listing Istio 1.8.x release announcements. It sets the title, description, weight for ordering, and specifies a custom layout for displaying releases in a grid format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.8.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.8.x Releases\ndescription: Announcements for the 1.8 release and its associated patch releases.\nweight: 21\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Defining a Service Entry for VMs in Istio YAML\nDESCRIPTION: This YAML snippet demonstrates how to define a ServiceEntry in Istio to represent a service implemented by multiple VMs with static IP addresses. It shows the structure and key fields required for configuring a service with non-Kubernetes endpoints.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/workload-entry/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: ServiceEntry\nmetadata:\n  name: svc1\nspec:\n  hosts:\n  - svc1.internal.com\n  ports:\n  - number: 80\n    name: http\n    protocol: HTTP\n  resolution: STATIC\n  endpoints:\n  - address: 1.1.1.1\n  - address: 2.2.2.2\n  ....\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with CNI Enabled\nDESCRIPTION: Command to install Istio with Container Network Interface (CNI) component enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/pod-security-admission/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl install --set components.cni.enabled=true -y\n```\n\n----------------------------------------\n\nTITLE: Deploying East-West Gateways\nDESCRIPTION: Generates and applies configurations for east-west gateways on multiple remote clusters for cross-cluster communication.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_40\n\nLANGUAGE: bash\nCODE:\n```\n@samples/multicluster/gen-eastwest-gateway.sh@ \\\n    --network network1 > eastwest-gateway-1.yaml\nistioctl manifest generate -f eastwest-gateway-1.yaml \\\n    --set values.global.istioNamespace=external-istiod | \\\n    kubectl apply --context=\"${CTX_REMOTE_CLUSTER}\" -f -\n```\n\n----------------------------------------\n\nTITLE: Creating Test Namespace in Kubernetes\nDESCRIPTION: Creates a new Kubernetes namespace called 'test-egress' for testing egress policies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway/index.md#2025-04-08_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create namespace test-egress\n```\n\n----------------------------------------\n\nTITLE: Sending Requests to productpage Service from curl Pod\nDESCRIPTION: Executes a curl command from a deployment named 'curl' to the 'productpage' service on port 9080. This helps verify if traffic is being properly routed through waypoint proxies.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl exec deploy/curl -- curl -s http://productpage:9080/productpage\n```\n\n----------------------------------------\n\nTITLE: Navigating to Istio Package Directory\nDESCRIPTION: Command to change directory to the downloaded Istio package folder after extraction.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cd istio-{{< istio_full_version >}}\n```\n\n----------------------------------------\n\nTITLE: Defining Service in Tenant Namespace in YAML\nDESCRIPTION: Example of defining a Kubernetes service in a tenant's application namespace. The namespace specification ensures the service belongs to the correct tenant.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: details\n  labels:\n    app: details\n  namespace: ns-1\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Istio Documentation Website\nDESCRIPTION: Basic robots.txt configuration that allows all web crawlers to access the site and points to the XML sitemap location. No crawling restrictions are specified.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.1/zh/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.1/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Deploying Bookinfo v2 & v3 Services to Cluster2\nDESCRIPTION: YAML configuration for deploying ratings service and reviews-v2/v3 to the second cluster\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/multicluster-version-routing/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: ratings\n  labels:\n    app: ratings\nspec:\n  ports:\n  - port: 9080\n    name: http\n  selector:\n    app: ratings\n```\n\n----------------------------------------\n\nTITLE: Checking Control Plane Pods After Cleanup in Bash\nDESCRIPTION: This command lists pods in the istio-system namespace to verify that the old control plane pod has been automatically cleaned up by the Sail Operator after the grace period.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2025/sail-operator-ga/index.md#2025-04-08_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system\nNAME                                      READY   STATUS    RESTARTS   AGE\nistiod-default-v1-24-3-68df97dfbb-v7ndm   1/1     Running   0          10m\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Rules for Istio.io\nDESCRIPTION: Standard robots.txt configuration that allows general crawler access while blocking access to legacy v-0.1 content. Also specifies the location of the sitemap file.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.2/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\n\nDisallow: /v-0.1\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring EnvoyFilter with Invalid REPLACE Operation in Istio (YAML)\nDESCRIPTION: This YAML snippet demonstrates an EnvoyFilter configuration that incorrectly uses the REPLACE operation with HTTP_FILTER. The patch operation will be ignored because REPLACE is not valid for HTTP_FILTER and NETWORK_FILTER.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0152/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-replace-2\n  namespace: bookinfo\nspec:\n  workloadSelector:\n    labels:\n      app: reviews2\n  priority: 10\n  configPatches:\n    # 第一个补丁将 Lua 过滤器添加到 listener/http 连接管理器\n  - applyTo: HTTP_FILTER\n    match:\n      context: SIDECAR_INBOUND\n      listener:\n        portNumber: 8080\n        filterChain:\n          filter:\n            name: \"envoy.filters.network.http_connection_manager\"\n            subFilter:\n              name: \"envoy.filters.http.router\"\n    patch:\n      operation: REPLACE\n      value: # Lua 过滤器规范\n       name: envoy.lua\n       typed_config:\n          \"@type\": \"type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua\"\n          inlineCode: |\n            function envoy_on_request(request_handle)\n              -- Make an HTTP call to an upstream host with the following headers, body, and timeout.\n              local headers, body = request_handle:httpCall(\n               \"lua_cluster\",\n               {\n                [\":method\"] = \"POST\",\n                [\":path\"] = \"/acl\",\n                [\":authority\"] = \"internal.org.net\"\n               },\n              \"authorize call\",\n              5000)\n            end\n```\n\n----------------------------------------\n\nTITLE: Istio 1.0.1 Release Metadata in YAML\nDESCRIPTION: YAML frontmatter containing metadata for the Istio 1.0.1 release announcement, including title, release version, publication date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.0.x/announcing-1.0.1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.0.1\nlinktitle: 1.0.1\nsubtitle: Patch Release\ndescription: Istio 1.0.1 patch release.\npublishdate: 2018-08-29\nrelease: 1.0.1\naliases:\n    - /about/notes/1.0.1\n    - /blog/2018/announcing-1.0.1\n    - /news/2019/announcing-1.0.1\n    - /news/announcing-1.0.1\n---\n```\n\n----------------------------------------\n\nTITLE: Loading DNS Serving Certificate from Well-Known Locations in Istio Pilot\nDESCRIPTION: Shows the file paths where Pilot loads its DNS serving certificate. These paths are the preferred locations for certificates instead of setting TLS arguments directly, simplifying the installation process for external issuers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.16.x/announcing-1.16/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n/var/run/secrets/istiod/tls/tls.crt\n/var/run/secrets/istiod/tls/tls.key\n/var/run/secrets/istiod/ca/root-cert.pem\n```\n\n----------------------------------------\n\nTITLE: Defining v1alpha1 RBAC Configuration\nDESCRIPTION: Sets up RBAC configuration including ClusterRbacConfig, ServiceRole, and ServiceRoleBinding for the httpbin service in the foo namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/migrate-alpha-policy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ClusterRbacConfig\nmetadata:\n  name: default\nspec:\n  mode: 'ON'\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  rules:\n  - services: [\"httpbin.foo.svc.cluster.local\"]\n    methods: [\"GET\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  subjects:\n  - user: cluster.local/ns/foo/sa/sleep\n    roleRef:\n      kind: ServiceRole\n      name: httpbin\n```\n\n----------------------------------------\n\nTITLE: Creating GCP Firewall Rules for Ingress Gateway\nDESCRIPTION: Creates Google Cloud Platform firewall rules to allow TCP traffic to the ingress gateway service ports.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\ngcloud compute firewall-rules create allow-gateway-http --allow \"tcp:$INGRESS_PORT\"\ngcloud compute firewall-rules create allow-gateway-https --allow \"tcp:$SECURE_INGRESS_PORT\"\n```\n\n----------------------------------------\n\nTITLE: Removing Httpbin Service\nDESCRIPTION: Deletes the httpbin service deployment using its configuration file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/alb-ingress-gateway-iks/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f @samples/httpbin/httpbin.yaml@ -n httptools\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Dependencies\nDESCRIPTION: Command to install the required Node.js dependencies for the ratings service using npm\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/single/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\nnpm notice created a lockfile as package-lock.json. You should commit this file.\nnpm WARN ratings No description\nnpm WARN ratings No repository field.\nnpm WARN ratings No license field.\n\nadded 24 packages in 2.094s\n```\n\n----------------------------------------\n\nTITLE: Istio Release Note Front Matter in YAML\nDESCRIPTION: YAML front matter for the Istio 1.15.1 release note document, containing metadata about the release including title, publish date, and version information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.15.x/announcing-1.15.1/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.15.1\nlinktitle: 1.15.1\nsubtitle: Patch Release\ndescription: Istio 1.15.1 patch release.\npublishdate: 2022-09-23\nrelease: 1.15.1\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Strict mTLS Peer Authentication in Istio\nDESCRIPTION: YAML configuration for enabling strict mutual TLS authentication for all workloads in namespace 'foo'. This policy enforces that workloads only accept mutual TLS traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-policy\"\n  namespace: \"foo\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter block defining the page title and weight for the Istio documentation site.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/general/roadmap.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: What is Istio's roadmap?\nweight: 140\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Remote Secret for Cluster Access in Bash\nDESCRIPTION: Creates a remote secret to allow the external control plane to access the API server of the remote cluster to discover services, endpoints, and pod attributes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl create-remote-secret \\\n  --context=\"${CTX_REMOTE_CLUSTER}\" \\\n  --type=config \\\n  --namespace=external-istiod \\\n  --service-account=istiod \\\n  --create-service-account=false | \\\n  kubectl apply -f - --context=\"${CTX_EXTERNAL_CLUSTER}\"\n```\n\n----------------------------------------\n\nTITLE: Linking to GitHub Files in Markdown Code Blocks for Istio\nDESCRIPTION: Demonstrates how to reference and link to files from Istio's GitHub repository within code blocks using @ symbols. This technique allows for dynamic linking to the current release branch.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/code-blocks/index.md#2025-04-08_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n{{</* text bash */>}}\n$ kubectl apply -f @samples/bookinfo/networking/virtual-service-reviews-v3.yaml@\n{{</* /text */>}}\n```\n\n----------------------------------------\n\nTITLE: Defining Thrift Protocol Configuration in Aeraki\nDESCRIPTION: YAML configuration showing how to define the Thrift protocol using Aeraki's ApplicationProtocol CRD. This specifies the protocol name and codec implementation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/aeraki/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: metaprotocol.aeraki.io/v1alpha1\nkind: ApplicationProtocol\nmetadata:\n  name: thrift\n  namespace: istio-system\nspec:\n  protocol: thrift\n  codec: aeraki.meta_protocol.codec.thrift\n```\n\n----------------------------------------\n\nTITLE: Configuring Strict mTLS Peer Authentication in Istio\nDESCRIPTION: YAML configuration for enabling strict mutual TLS authentication for all workloads in namespace 'foo'. This policy enforces that workloads only accept mutual TLS traffic.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/concepts/security/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: PeerAuthentication\nmetadata:\n  name: \"example-policy\"\n  namespace: \"foo\"\nspec:\n  mtls:\n    mode: STRICT\n```\n\n----------------------------------------\n\nTITLE: Creating Istio System Namespace\nDESCRIPTION: Bash command to create the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2020/proxying-legacy-services-using-egress-gateways/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns istio-system\n```\n\n----------------------------------------\n\nTITLE: Creating GKE Firewall Rules for Ingress Gateway Ports\nDESCRIPTION: Commands to create GKE firewall rules that allow TCP traffic to the ingress gateway's HTTP and HTTPS ports, which enables external access.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ gcloud compute firewall-rules create allow-gateway-http --allow \"tcp:$INGRESS_PORT\"\n$ gcloud compute firewall-rules create allow-gateway-https --allow \"tcp:$SECURE_INGRESS_PORT\"\n```\n\n----------------------------------------\n\nTITLE: Displaying InvalidExternalControlPlaneConfig Warning for Unresolvable Hostname\nDESCRIPTION: This warning message is displayed when the webhook configuration uses a hostname that cannot be resolved via DNS lookup.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0163/index.md#2025-04-08_snippet_2\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0163] (ValidatingWebhookConfiguration istio-validator-external-istiod testing.yml:1) The hostname (https://thisisnotarealdomainname.com:15017/validate) that was provided for the webhook (rev.validation.istio.io) to reach the ingress gateway on the external control plane cluster cannot be resolved via a DNS lookup. Traffic may not flow properly.\n```\n\n----------------------------------------\n\nTITLE: Using Bash Code Block in a Tabbed List\nDESCRIPTION: Demonstrates how to include a bash code block inside a list item within a tab. The code shows indentation patterns with a mixture of 4-space and 8-space indentation levels.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tabs_and_lists/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ NoIndent:\n    FourIndent:\n        - EightIndent\n    FourIndentAgain:\n        - EightIndentAgain\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Control for Istio.io\nDESCRIPTION: Standard robots.txt directives that specify crawler access rules and sitemap location for the Istio documentation website. Blocks access to legacy v-0.1 documentation while allowing access to all other content.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.5/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nUser-agent: *\nDisallow:\n\nDisallow: /v-0.1\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Default Access Log Format\nDESCRIPTION: The default format used by Istio for access logging when accessLogFormat is not specified.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/logs/otel-provider/index.md#2025-04-08_snippet_4\n\nLANGUAGE: plain\nCODE:\n```\n[%START_TIME%] \\\"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\\\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS%\n\\\"%UPSTREAM_TRANSPORT_FAILURE_REASON%\\\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \\\"%REQ(X-FORWARDED-FOR)%\\\" \\\"%REQ(USER-AGENT)%\\\" \\\"%REQ(X-REQUEST-ID)%\\\"\n\\\"%REQ(:AUTHORITY)%\\\" \\\"%UPSTREAM_HOST%\\\" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\\n\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Front Matter for Istio 1.6.5 Release Notes\nDESCRIPTION: YAML front matter defining metadata for the Istio 1.6.5 release announcement page. It includes the title, subtitle, description, publish date, release version, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/announcing-1.6.5/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.6.5\nlinktitle: 1.6.5\nsubtitle: Patch Release\ndescription: Istio 1.6.5 patch release.\npublishdate: 2020-07-09\nrelease: 1.6.5\naliases:\n    - /news/announcing-1.6.5\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Release Notes\nDESCRIPTION: YAML front matter metadata for the Istio 1.7 release notes page, specifying title, description, weight, release version, subtitle, link title and publish date.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.7.x/announcing-1.7/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio 1.7 Change Notes\ndescription: Istio 1.7 release notes.\nweight: 10\nrelease: 1.7\nsubtitle: Minor Release\nlinktitle: 1.7 Change Notes\npublishdate: 2020-08-21\n---\n```\n\n----------------------------------------\n\nTITLE: Creating a Linux Network Namespace\nDESCRIPTION: This command creates a new Linux network namespace named 'my-linux-netns'. Network namespaces isolate network environments for processes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/inpod-traffic-redirection-ambient/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nip netns add my-linux-netns\n```\n\n----------------------------------------\n\nTITLE: Configuring Sidecar Proxy for HBONE Communication in YAML\nDESCRIPTION: Set the ISTIO_META_ENABLE_HBONE configuration to true in the proxy metadata to enable HBONE/mTLS signaling for Sidecar proxies communicating with Ambient targets.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/add-workloads/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nproxy:\n  metadata:\n    ISTIO_META_ENABLE_HBONE: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Creating ServiceEntry for Wildcard Wikipedia Hosts\nDESCRIPTION: Command to create a ServiceEntry resource that enables direct access to all Wikipedia subdomains using the wildcard pattern *.wikipedia.org via HTTPS on port 443.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: networking.istio.io/v1\nkind: ServiceEntry\nmetadata:\n  name: wikipedia\nspec:\n  hosts:\n  - \"*.wikipedia.org\"\n  ports:\n  - number: 443\n    name: https\n    protocol: HTTPS\nEOF\n```\n\n----------------------------------------\n\nTITLE: Listing Kind Clusters\nDESCRIPTION: Command to display all available Kind clusters in the system\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkind get clusters\n```\n\n----------------------------------------\n\nTITLE: Summing All Requests in Namespace with Prometheus PromQL\nDESCRIPTION: This query calculates the sum of all requests in the specified namespace using the istio_requests_total metric. It filters for the destination service namespace and reporter.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/logs-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: promql\nCODE:\n```\nsum(istio_requests_total{destination_service_namespace=\"tutorial\", reporter=\"destination\"})\n```\n\n----------------------------------------\n\nTITLE: Using source.ip Condition in Istio Authorization Policy\nDESCRIPTION: Example showing how to use source.ip condition to match source workload IP addresses using individual IP or CIDR notation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/security/conditions/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nkey: source.ip\nvalues: [\"10.1.2.3\", \"10.2.0.0/16\"]\n```\n\n----------------------------------------\n\nTITLE: Istio Release Metadata in YAML\nDESCRIPTION: YAML frontmatter defining metadata for the Istio 1.23.4 release announcement, including title, subtitle, description, publish date and release version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.23.x/announcing-1.23.4/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.23.4\nlinktitle: 1.23.4\nsubtitle: Patch Release\ndescription: Istio 1.23.4 patch release.\npublishdate: 2024-12-18\nrelease: 1.23.4\n---\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Invalid Istio Annotation in Kubernetes Service YAML\nDESCRIPTION: This YAML snippet shows a Kubernetes Service resource with an invalid Istio annotation. The annotation 'networking.istio.io/exportTwo' is not a valid Istio annotation, which triggers the InvalidAnnotation message.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0125/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  labels:\n    app: httpbin\n  annotations:\n    # 没有这种 Istio 注解\n    networking.istio.io/exportTwo: bar\nspec:\n  ports:\n  - name: http\n    port: 8000\n    targetPort: 80\n  selector:\n    app: httpbin\n```\n\n----------------------------------------\n\nTITLE: Gateway with Resource Attachment for Scaling\nDESCRIPTION: YAML configuration showing how to attach HorizontalPodAutoscaler and PodDisruptionBudget resources to a Gateway deployment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: gateway.networking.k8s.io/v1\nkind: Gateway\nmetadata:\n  name: gateway\nspec:\n  gatewayClassName: istio\n  listeners:\n  - name: default\n    hostname: \"*.example.com\"\n    port: 80\n    protocol: HTTP\n    allowedRoutes:\n      namespaces:\n        from: All\n---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: gateway\nspec:\n  # 通过引用与生成的 Deployment 匹配\n  # 注意不要使用 `kind: Gateway`\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: gateway-istio\n  minReplicas: 2\n  maxReplicas: 5\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 50\n---\napiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: gateway\nspec:\n  minAvailable: 1\n  selector:\n    # 通过标签匹配生成的 Deployment\n    matchLabels:\n      gateway.networking.k8s.io/gateway-name: gateway\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB User and Collection\nDESCRIPTION: Creates a new MongoDB user 'bookinfo' and a collection to hold ratings data. Uses environment variables for connection details and passwords.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | mongo --ssl --sslAllowInvalidCertificates $MONGODB_HOST:$MONGODB_PORT -u admin -p $MONGO_ADMIN_PASSWORD --authenticationDatabase admin\nuse test\ndb.createUser(\n   {\n     user: \"bookinfo\",\n     pwd: \"$BOOKINFO_PASSWORD\",\n     roles: [ \"read\"]\n   }\n);\nEOF\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | mongo --ssl --sslAllowInvalidCertificates $MONGODB_HOST:$MONGODB_PORT -u admin -p $MONGO_ADMIN_PASSWORD --authenticationDatabase admin\nuse test\ndb.createCollection(\"ratings\");\ndb.ratings.insert(\n  [{rating: 1},\n   {rating: 1}]\n);\nEOF\n```\n\n----------------------------------------\n\nTITLE: Displaying Plain Text Block in Istio Docs\nDESCRIPTION: A simple plain text block using Istio's custom text shortcode syntax for documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/test-1.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nA sample nested text block.\n```\n\n----------------------------------------\n\nTITLE: Creating MongoDB User and Collection\nDESCRIPTION: Creates a new MongoDB user 'bookinfo' and a collection to hold ratings data. Uses environment variables for connection details and passwords.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-mongo/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | mongo --ssl --sslAllowInvalidCertificates $MONGODB_HOST:$MONGODB_PORT -u admin -p $MONGO_ADMIN_PASSWORD --authenticationDatabase admin\nuse test\ndb.createUser(\n   {\n     user: \"bookinfo\",\n     pwd: \"$BOOKINFO_PASSWORD\",\n     roles: [ \"read\"]\n   }\n);\nEOF\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF | mongo --ssl --sslAllowInvalidCertificates $MONGODB_HOST:$MONGODB_PORT -u admin -p $MONGO_ADMIN_PASSWORD --authenticationDatabase admin\nuse test\ndb.createCollection(\"ratings\");\ndb.ratings.insert(\n  [{rating: 1},\n   {rating: 1}]\n);\nEOF\n```\n\n----------------------------------------\n\nTITLE: Inserting Istio Release Note Shortcode in Markdown\nDESCRIPTION: Markdown shortcode to insert Istio release notes into the announcement page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9/_index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< relnote >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access with robots.txt\nDESCRIPTION: Default robots.txt configuration that allows all web crawlers to access the site content and points to the XML sitemap location. The configuration uses standard directives to define crawler behavior.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.23/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.23//sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Istio Website\nDESCRIPTION: This robots.txt file allows all user agents to crawl the entire Istio.io website and specifies the location of the sitemap. It uses standard robots.txt syntax to define crawling rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.21/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.21//sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring Robots.txt for Istio Website\nDESCRIPTION: A standard robots.txt configuration that allows all user agents to crawl the entire site and specifies the sitemap location. This file helps search engines understand how to crawl the Istio documentation website.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.0/zh/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\n\nDisallow:\n\nSitemap: /v1.0/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Deleting Kubernetes Gateway API CRDs using kubectl\nDESCRIPTION: This command removes the Custom Resource Definitions (CRDs) for the Kubernetes Gateway API. It uses kubectl to delete the resources defined in the standard-install.yaml file from the Kubernetes-sigs GitHub repository.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/gateway-api-remove-crds.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete -f https://github.com/kubernetes-sigs/gateway-api/releases/download/{{< k8s_gateway_api_version >}}/standard-install.yaml\n```\n\n----------------------------------------\n\nTITLE: Referencing Release Note Template in Markdown\nDESCRIPTION: This snippet uses a custom Hugo shortcode to include a release note template in the markdown document.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14.6/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< relnote >}}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter for Istio Integrations Documentation\nDESCRIPTION: This YAML frontmatter defines metadata for the Istio Integrations documentation page, including title, description, content weight, and keywords for search and categorization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/integrations/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Integrations\ndescription: Other software that Istio can integrate with to provide additional functionality.\nweight: 60\nkeywords: [ops, integrations]\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Correct Envoy String Match Configuration\nDESCRIPTION: The correct Envoy configuration that should be generated, using a regex pattern to properly match principals.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-009/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nstringMatch:\n  regex: spiffe://.*/ns/ns1/sa/foo\n```\n\n----------------------------------------\n\nTITLE: Creating Tenant Application Namespace in YAML\nDESCRIPTION: YAML definition to create a dedicated namespace for a tenant's application deployment. This namespace will be monitored by the tenant's Istio control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: ns-1\n```\n\n----------------------------------------\n\nTITLE: Testing Cross-Group Communication Failure in Istio using Kubectl and Curl\nDESCRIPTION: This command attempts to send a request from a curl pod in app-ns-1 (usergroup-1) to an httpbin service in app-ns-2 (usergroup-2). The communication is expected to fail, demonstrating isolation between user groups.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/multiple-controlplanes/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n app-ns-1 exec \"$(kubectl -n app-ns-1 get pod -l app=curl -o jsonpath={.items..metadata.name})\" -c curl -- curl -sIL http://httpbin.app-ns-2.svc.cluster.local:8000\n```\n\n----------------------------------------\n\nTITLE: Testing Path Mismatch with JWT Token for Same-Pod OPA Setup\nDESCRIPTION: Tests accessing the /get endpoint with a JWT token that only authorizes /headers, expecting a 403 Forbidden response due to path mismatch.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/better-external-authz/index.md#2025-04-08_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec ${SLEEP_POD} -c sleep  -- curl http://httpbin-with-opa:8000/get -H \"Authorization: Bearer $TOKEN_PATH_HEADERS\" -s -o /dev/null -w \"%{http_code}\\n\"\n403\n```\n\n----------------------------------------\n\nTITLE: Editing Mesh Config for Path Normalization\nDESCRIPTION: This YAML snippet demonstrates how to directly edit the mesh configuration to set the path normalization option to DECODE_AND_MERGE_SLASHES.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\n  data:\n    mesh: |-\n      ...\n      pathNormalization:\n        normalization: DECODE_AND_MERGE_SLASHES\n      ...\n```\n\n----------------------------------------\n\nTITLE: Terminating Multiple Microservice Pods in Kubernetes\nDESCRIPTION: This snippet shows how to terminate the 'details' service across all its pods using a loop and the pkill command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/production-testing/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ for pod in $(kubectl get pods -l app=details -o jsonpath='{.items[*].metadata.name}'); do echo terminating \"$pod\"; kubectl exec \"$pod\" -- pkill ruby; done\n```\n\n----------------------------------------\n\nTITLE: Testing Successful gRPC Connection with Enabled mTLS\nDESCRIPTION: Demonstrates a successful gRPC request after both client-side and server-side mTLS have been configured properly, showing the detailed response including service metadata and headers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ grpcurl -plaintext -d '{\"url\": \"xds:///echo.echo-grpc.svc.cluster.local:7070\"}' :17171 proto.EchoTestService/ForwardEcho | jq -r '.output | join(\"\")'\n```\n\n----------------------------------------\n\nTITLE: Generating Istio Manifest with AWS NLB Support\nDESCRIPTION: This command uses Helm to generate an Istio manifest with the AWS NLB configuration. It takes the override file with the necessary annotations and creates a complete deployment manifest.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/aws-nlb/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ helm template install/kubernetes/helm/istio --namespace istio -f override.yaml > $HOME/istio.yaml\n```\n\n----------------------------------------\n\nTITLE: Generating Certificate and Key for nginx.example.com\nDESCRIPTION: Creates a certificate and private key for the nginx.example.com domain using OpenSSL.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out nginx.example.com.csr -newkey rsa:2048 -nodes -keyout nginx.example.com.key -subj \"/CN=nginx.example.com/O=some organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in nginx.example.com.csr -out nginx.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Updating Kiali Signing Key with Random Token\nDESCRIPTION: This command provides a workaround to manually update the Kiali signing key with a random token, enhancing security. It modifies the ConfigMap and restarts the Kiali pod.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get cm kiali -n istio-system -o yaml | sed \"s/server:/login_token:\\\\n \\\nsigning_key: $(tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 20 | head -n 1)\\\\nserver:/\" \\\n| kubectl apply -f - ; kubectl delete pod -l app=kiali -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Checking WorkloadEntries\nDESCRIPTION: Command to view automatically created WorkloadEntries for virtual machines.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/virtual-machines/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get workloadentries\n```\n\n----------------------------------------\n\nTITLE: Shifting 20% Traffic to v2 (Gateway API)\nDESCRIPTION: Applies a TCPRoute to shift 20% of TCP traffic from tcp-echo:v1 to tcp-echo:v2 using Gateway API.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/tcp-traffic-shifting/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/tcp-echo/gateway-api/tcp-echo-20-v2.yaml@ -n istio-io-tcp-traffic-shifting\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Namespace and Deploying Workloads\nDESCRIPTION: Commands to create a namespace 'foo' and deploy httpbin and curl workloads with Istio injection\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-jwt/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/curl/curl.yaml@) -n foo\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio.io\nDESCRIPTION: A basic robots.txt configuration that allows all web crawlers (indicated by '*') to access the entire website without restrictions, while pointing to the sitemap location for improved indexing.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.18/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.18/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access Rules in robots.txt for Istio.io\nDESCRIPTION: A standard robots.txt configuration that allows all web crawlers unrestricted access to the Istio.io website content and provides the location of the sitemap for better indexing.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.22/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.22//sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Deploying Sleep Sample Application in Kubernetes with Istio\nDESCRIPTION: This command uses kubectl to apply the sleep.yaml configuration file to a Kubernetes cluster. The sleep application is a commonly used sample in Istio documentation for testing service mesh features.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/command_example_atat.txt#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/sleep/sleep.yaml@\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Release Announcements Page Frontmatter in YAML\nDESCRIPTION: This YAML snippet defines the frontmatter for the Istio release announcements page. It sets the page title, description, weight for ordering, and applies a pill decoration. It also specifies the data category for the page content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Release Announcements\ndescription: Announcements for all of Istio's major releases and patch releases.\nweight: 8\ndecoration: pill\ndata_category: Release Announcements\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio Glossary Page\nDESCRIPTION: YAML configuration block that defines metadata for an Istio documentation glossary page. Specifies the page title, description, navigation weight, layout template, URL aliases, ownership, and test status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/glossary/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Glossary\ndescription: A glossary of common Istio terms.\nweight: 30\nlayout: glossary\naliases:\n  - /glossary\n  - /docs/welcome/glossary.html\n  - /help/glossary\nowner: istio/wg-docs-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Accessing TCP Services with Host Header\nDESCRIPTION: Bash commands showing that even with an explicit Host header, TCP services work correctly when the port protocol is set to TCP. This configuration is useful when a client can include header information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/common-problems/network-issues/index.md#2025-04-08_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl exec -it $SOURCE_POD -c curl -- curl -H \"Host: nginx.default\" 10.1.1.171 -s -o /dev/null -w \"%{http_code}\"\n  200\n```\n\n----------------------------------------\n\nTITLE: Modified servicegraph Ingress Configuration in YAML\nDESCRIPTION: Shows the change in the servicegraph.ingress.hosts configuration, adding a description for creating an Ingress record.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1/helm-changes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservicegraph:\n  ingress:\n    hosts: servicegraph.local  # Used to create an Ingress record.\n```\n\n----------------------------------------\n\nTITLE: Executing Basic Bash Commands with Output\nDESCRIPTION: A bash text block demonstrating basic command execution including line continuation with backslash and showing the output of an echo command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/tb/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ this is a text block\n$ echo Foo \\\nBar\nFoo Bar\n```\n\n----------------------------------------\n\nTITLE: Creating Deny Method GET Authorization Policy\nDESCRIPTION: Creates an authorization policy that denies GET requests to the httpbin workload\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-deny/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: deny-method-get\n  namespace: foo\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: DENY\n  rules:\n  - to:\n    - operation:\n        methods: [\"GET\"]\n```\n\n----------------------------------------\n\nTITLE: Freeing Docker Desktop Resources Using System Prune (Bash)\nDESCRIPTION: This command removes unused data in Docker Desktop, including stopped containers, unused networks, dangling images, and build cache. It can help free up resources if you're experiencing memory-related issues when running Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/docker/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ docker system prune\n```\n\n----------------------------------------\n\nTITLE: Updating Revision Tag to Point to New Istio Version\nDESCRIPTION: Updates the 'prod-stable' revision tag to point to the newer Istio version, transparently migrating all associated namespaces to the new control plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl tag set prod-stable --revision {{< istio_full_version_revision >}} --overwrite\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Misconfigured Istio Gateway and VirtualService\nDESCRIPTION: This YAML configuration demonstrates a common cause of the ReferencedResourceNotFound error. It shows a correctly defined Gateway, but a VirtualService that references a non-existent gateway name, leading to the error.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0101/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: httpbin-gateway\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - port:\n      number: 80\n      name: http2\n      protocol: HTTP2\n    hosts:\n    - \"*\"\n---\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: httpbin\nspec:\n  hosts:\n  - \"*\"\n  gateways:\n  - httpbin-gateway-bogus #  Should have been \"httpbin-gateway\"\n  http:\n  - route:\n    - destination:\n        host: httpbin-gateway\n```\n\n----------------------------------------\n\nTITLE: Creating Authorization Policy in Istio with v1beta1 API\nDESCRIPTION: Example of an Istio v1beta1 authorization policy that applies to workloads with specific labels in the foo namespace. It allows GET requests from a specific service account when request headers contain specific version values.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: httpbin\n namespace: foo\nspec:\n selector:\n   matchLabels:\n     app: httpbin\n     version: v1\n rules:\n - from:\n   - source:\n       principals: [\"cluster.local/ns/default/sa/sleep\"]\n   to:\n   - operation:\n       methods: [\"GET\"]\n   when:\n   - key: request.headers[version]\n     values: [\"v1\", \"v2\"]\n```\n\n----------------------------------------\n\nTITLE: Checking Kiali Version in Istio System\nDESCRIPTION: This command retrieves the Kiali pod information and filters for the image version, helping to determine if the installation is vulnerable.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/news/security/istio-security-2020-004/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods -n istio-system -l app=kiali -o yaml | grep image:\n```\n\n----------------------------------------\n\nTITLE: Workload Entry Configuration with IP\nDESCRIPTION: New flag for configuring workload IP for sidecar proxy auto-registration, particularly useful for VM workloads in different networks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.11.x/announcing-1.11/change-notes/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x workload entry configure --workloadIP\n```\n\n----------------------------------------\n\nTITLE: Creating Tabset Structure in Hugo\nDESCRIPTION: Demonstrates the creation of a tabset with multiple tabs using Hugo shortcodes. Each tab contains different content structures including lists, paragraphs, warnings, and code blocks.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/test/tabs_and_lists/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tabset category-name=\"test\" >}}\n\n{{< tab name=\"One\" category-value=\"one\" >}}\n1. One paragraph in a list in a tab\n{{< /tab >}}\n\n{{< tab name=\"Two\" category-value=\"two\" >}}\n1. Three\n\n1. separate\n\n1. bullets in a list in a tab\n\n    This last bullet with two paragraphs\n{{< /tab >}}\n\n{{< tab name=\"Three\" category-value=\"three\" >}}\n1. Simple text in a list in a tab\n\n    A paragraph\n\n    {{< warning >}}\n    Warning in a list in a tab\n    {{< /warning >}}\n\n    And another\n\n1. Second bullet\n\n1. Third bullet\n{{< /tab >}}\n\n{{< tab name=\"Four\" category-value=\"four\" >}}\n1. Simple text with _markdown_ in a list in a tab\n\n    {{< warning >}}\n    Warning in a list in a tab\n    {{< /warning >}}\n{{< /tab >}}\n\n{{< tab name=\"Five\" category-value=\"five\" >}}\n1. Simple text in a list in a tab\n\n    {{< text plain >}}\n    Text block in a list in a tab\n    {{< /text >}}\n\n{{< /tab >}}\n\n{{< tab name=\"Six\" category-value=\"six\" >}}\n1. Simple text with _markdown_ in a list in a tab\n\n    {{< warning >}}\n    Warning with _markdown_ in a list in a tab\n    {{< /warning >}}\n\n1. Second bullet\n{{< /tab >}}\n\n{{< tab name=\"Seven\" category-value=\"seven\" >}}\n1. Simple text with _markdown_ in a list in a tab\n\n    {{< text bash >}}\n    $ NoIndent:\n        FourIndent:\n            - EightIndent\n        FourIndentAgain:\n            - EightIndentAgain\n    {{< /text >}}\n\n1. Second bullet\n{{< /tab >}}\n\n{{< /tabset >}}\n```\n\n----------------------------------------\n\nTITLE: Defining Istio Galley ValidatingWebhookConfiguration in YAML\nDESCRIPTION: This YAML snippet defines a ValidatingWebhookConfiguration for Istio Galley. It sets up validation webhooks for Istio resources, specifying the webhook server details and validation rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/test/bash_yaml_example.txt#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: admissionregistration.k8s.io/v1beta1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  name: istio-galley\n  namespace: istio-system\n  labels:\n    app: istio-galley\n    chart: galley-1.0.0\n    release: istio\n    heritage: Tiller\nwebhooks:\n  - name: pilot.validation.istio.io\n    clientConfig:\n      service:\n        name: istio-galley\n        namespace: istio-system\n        path: \"/admitpilot\"\n      caBundle: \"\"\n    rules:\n      - operations:\n      (... snip ...)\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio 1.0.x Release Page\nDESCRIPTION: This YAML frontmatter configures metadata for a page listing Istio 1.0.x release announcements. It sets the title, description, weight for ordering, and specifies to list items by publish date using a release grid layout.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.0.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.0.x Releases\ndescription: Announcements for the 1.0 release and its associated patch releases.\nweight: 29\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio Performance Documentation\nDESCRIPTION: YAML frontmatter defining metadata for the Istio performance and scalability documentation page, including title, description, keywords, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/deployment/performance-and-scalability/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Performance and Scalability\ndescription: Istio performance and scalability summary.\nweight: 30\nkeywords:\n  - performance\n  - scalability\n  - scale\n  - benchmarks\naliases:\n  - /docs/performance-and-scalability/overview\n  - /docs/performance-and-scalability/microbenchmarks\n  - /docs/performance-and-scalability/performance-testing-automation\n  - /docs/performance-and-scalability/realistic-app-benchmark\n  - /docs/performance-and-scalability/scalability\n  - /docs/performance-and-scalability/scenarios\n  - /docs/performance-and-scalability/synthetic-benchmarks\n  - /docs/concepts/performance-and-scalability\n  - /docs/ops/performance-and-scalability\nowner: istio/wg-environments-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Front Matter Structure in YAML for Istio Docs\nDESCRIPTION: Shows the basic required structure for front matter in Istio documentation pages. Includes placeholders for title, description, weight, keywords, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/front-matter/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: <title>\ndescription: <description>\nweight: <weight>\nkeywords: [<keyword1>,<keyword2>,...]\naliases:\n    - <previously-published-at-this-URL>\n---\n```\n\n----------------------------------------\n\nTITLE: Authorization Policy Configuration in Ztunnel\nDESCRIPTION: Example of how authorization policies are represented in Ztunnel's xDS configuration. This shows a workload-scoped allow policy that permits access from a specific service account.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2023/rust-based-ztunnel/index.md#2025-04-08_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n{\n  \"policies\": {\n    \"default/hw-viewer\": {\n      \"name\": \"hw-viewer\",\n      \"namespace\": \"default\",\n      \"scope\": \"WorkloadSelector\",\n      \"action\": \"Allow\",\n      \"groups\": [[[{\n        \"principals\": [{\"Exact\": \"cluster.local/ns/default/sa/sleep\"}]\n      }]]]\n    }\n  }\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Namespaces After Revision Labels Example\nDESCRIPTION: This command deletes the namespaces used in the canary upgrade with revision labels example, removing all associated resources.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/upgrade/canary/index.md#2025-04-08_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns istio-system test-ns\n```\n\n----------------------------------------\n\nTITLE: Setting Revision Tag for Existing 1.8 Installation\nDESCRIPTION: Command to create a revision tag 'stable' pointing to an existing 1.8 revision named '1-8-5'\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/direct-upgrade/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nistioctl x revision tag set stable --revision 1-8-5\n```\n\n----------------------------------------\n\nTITLE: Idea Callout Implementation in Hugo\nDESCRIPTION: Demonstrates the implementation of idea callouts with single and multi-paragraph content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts_and_lists/index.md#2025-04-08_snippet_2\n\nLANGUAGE: hugo\nCODE:\n```\n{{< idea >}}\nThis is an idea\n{{< /idea >}}\n\n{{< idea >}}\nThis is an idea\n\nwith two paragraphs\n{{< /idea >}}\n```\n\n----------------------------------------\n\nTITLE: Initializing YAML Front Matter for Istio 1.1.3 Release Notes\nDESCRIPTION: YAML front matter defining metadata for the Istio 1.1.3 release notes page, including title, subtitle, description, publish date, version, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.1.x/announcing-1.1.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.1.3\nlinktitle: 1.1.3\nsubtitle: Patch Release\ndescription: Istio 1.1.3 patch release.\npublishdate: 2019-04-15\nrelease: 1.1.3\naliases:\n    - /about/notes/1.1.3\n    - /blog/2019/announcing-1.1.3\n    - /news/2019/announcing-1.1.3\n    - /news/announcing-1.1.3\n---\n```\n\n----------------------------------------\n\nTITLE: Checking Supported Kubernetes Versions for a Region in Azure CLI\nDESCRIPTION: This command retrieves the supported Kubernetes versions for a specific Azure region. It requires replacing 'my location' with the desired region name obtained from the previous command.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/azure/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ az aks get-versions --location \"my location\" --query \"orchestrators[].orchestratorVersion\"\n```\n\n----------------------------------------\n\nTITLE: Removing the Istio System Namespace\nDESCRIPTION: Command to delete the istio-system namespace after uninstalling Istio, which is not removed by default during the uninstallation process.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/getting-started/index.md#2025-04-08_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete namespace istio-system\n```\n\n----------------------------------------\n\nTITLE: Creating Namespace-Wide Authorization Policy in Istio\nDESCRIPTION: Example showing how to apply an authorization policy to all workloads in a namespace by leaving the selector field empty. This policy will apply to all workloads in namespace 'bar'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n name: policy\n namespace: bar\nspec:\n rules:\n # omitted\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio Documentation Site\nDESCRIPTION: Basic robots.txt configuration that allows all user agents unrestricted access and points to the sitemap location at /v1.16/sitemap.xml\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.16/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.16/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with Compatibility Version using Helm\nDESCRIPTION: This command installs Istio using Helm, setting the compatibility version to the previous Istio version. This allows the new installation to behave like the previous version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/compatibility-versions/index.md#2025-04-08_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ helm install ... --set compatibilityVersion={{< istio_previous_version >}}\n```\n\n----------------------------------------\n\nTITLE: Installing Istio Base Chart with Helm\nDESCRIPTION: Command to install the Istio Base Chart containing cluster-wide Custom Resource Definitions (CRDs) with the default revision set to 'default'.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/helm/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install istio-base istio/base -n istio-system --set defaultRevision=default --create-namespace\n```\n\n----------------------------------------\n\nTITLE: Analyzing Istio Egress Gateway Log Entry for HTTPS Request\nDESCRIPTION: This log entry shows details of an HTTPS request passing through an Istio Egress Gateway to an external NGINX service. It includes information such as the HTTP method, response code, source and destination IP addresses, and Istio-specific metadata.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n[2024-04-08T20:08:18.451Z] \"GET / HTTP/1.1\" 200 - via_upstream - \"-\" 0 615 5 5 \"172.30.239.41\" \"curl/7.87.0-DEV\" \"86e54df0-6dc3-46b3-a8b8-139474c32a4d\" \"my-nginx.mesh-external.svc.cluster.local\" \"172.30.239.57:443\" outbound|443||my-nginx.mesh-external.svc.cluster.local 172.30.239.53:48530 172.30.239.53:443 172.30.239.41:53694 my-nginx.mesh-external.svc.cluster.local default.forward-nginx-from-egress-gateway.0\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio Installation Guide\nDESCRIPTION: YAML frontmatter configuration that defines the page metadata, including title, description, weight, and aliases for the Istio installation documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Installation Guides\nlinktitle: Install\ndescription: Choose the guide that best suits your needs and platform.\nweight: 20\ncontent_above: true\naliases:\n    - /docs/setup/kubernetes/install/\ntest: table-of-contents\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Ambient Alpha Release Metadata in YAML\nDESCRIPTION: This YAML snippet defines metadata for the Ambient alpha release announcement, including the release period, impression limit, and documentation link.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/ambient-release.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Ambient Alpha Release\nperiod_start: 2024-01-27\nperiod_end: 2024-02-21\nperiod_duration: 30\nmax_impressions: 4\nlink: https://istio.io/docs/ambient/getting-started/\n---\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Traffic Management FAQ Page\nDESCRIPTION: YAML frontmatter used to configure a FAQ page about Traffic Management in the Istio documentation. It sets the page title, description, weight for ordering in navigation, layout template, and URL aliases for backward compatibility.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/traffic-management/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Traffic Management FAQ\nlinktitle: Traffic Management\ndescription: Traffic Management Q & A.\nweight: 50\nlayout: faq\naliases:\n  - /help/faq/traffic-management\n---\n```\n\n----------------------------------------\n\nTITLE: Incorrect Virtual Service Configuration Example\nDESCRIPTION: Example of a Virtual Service configuration that causes the host mismatch error by specifying a host that isn't defined in the gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0132/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: VirtualService\nmetadata:\n  name: testing-service\n  namespace: default\nspec:\n  gateways:\n  - istio-system/testing-gateway\n  hosts:\n  - wrong.com\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: ratings\n```\n\n----------------------------------------\n\nTITLE: Configuring Method-based Authorization in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy that allows only GET and HEAD operations on workloads labeled with 'app: products' in the default namespace, restricting access based on HTTP methods.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: allow-read\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n         methods: [\"GET\", \"HEAD\"]\n```\n\n----------------------------------------\n\nTITLE: Prometheus TCP Connections Closed Metric Example\nDESCRIPTION: Example of the istio_tcp_connections_closed_total metric as displayed in Prometheus. This shows TCP connections closed for the ratings-v2 service.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/tcp-metrics/index.md#2025-04-08_snippet_9\n\nLANGUAGE: plain\nCODE:\n```\nistio_tcp_connections_closed_total{\ndestination_version=\"v1\",\ninstance=\"172.17.0.18:42422\",\njob=\"istio-mesh\",\ncanonical_service_name=\"ratings-v2\",\ncanonical_service_revision=\"v2\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gateway Topology in IstioOperator YAML\nDESCRIPTION: This YAML snippet shows how to configure gateway topology settings globally for all gateway workloads using the IstioOperator custom resource. It sets the numTrustedProxies and forwardClientCertDetails values in the meshConfig.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/configuration/traffic-management/network-topologies/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  meshConfig:\n    defaultConfig:\n      gatewayTopology:\n        numTrustedProxies: <VALUE>\n        forwardClientCertDetails: <ENUM_VALUE>\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link to Ambient Mesh Introduction\nDESCRIPTION: Markdown text that provides a link to the ambient mesh introduction blog post. This announcement informs users about ambient mesh, a new dataplane mode for Istio that operates without sidecars.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/announcing-ambient-mesh.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nLearn about [ambient mesh](/blog/2022/introducing-ambient-mesh/): a new dataplane mode for Istio without sidecars.\n```\n\n----------------------------------------\n\nTITLE: Listing Kubernetes Pods in the Deployment\nDESCRIPTION: This command shows all Kubernetes pods running for the Bookinfo application, displaying the pod name, ready status, current state, restart count, and age for each component.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/bookinfo/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl get pods\nNAME                             READY     STATUS    RESTARTS   AGE\ndetails-v1-1520924117-48z17      2/2       Running   0          6m\nproductpage-v1-560495357-jk1lz   2/2       Running   0          6m\nratings-v1-734492171-rnr5l       2/2       Running   0          6m\nreviews-v1-874083890-f0qf0       2/2       Running   0          6m\nreviews-v2-1343845940-b34q5      2/2       Running   0          6m\nreviews-v3-1813607990-8ch52      2/2       Running   0          6m\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Second Cluster in Multi-Cluster Setup\nDESCRIPTION: These commands set up environment variables for the second remote cluster in a multi-cluster Istio mesh. They define the Kubernetes context and cluster name for subsequent commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nexport CTX_SECOND_CLUSTER=<your second remote cluster context>\nexport SECOND_CLUSTER_NAME=<your second remote cluster name>\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Istio Addons and Core Components\nDESCRIPTION: Removes the Istio addons and core components from the Kubernetes cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/additional-setup/getting-started-istio-apis/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete -f @samples/addons@\nistioctl uninstall -y --purge\n```\n\n----------------------------------------\n\nTITLE: Downloading Istio with MOSN\nDESCRIPTION: Commands to download a specific version of Istio and set up the environment for using MOSN as the data plane.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2020/mosn-proxy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ export ISTIO_VERSION=1.5.2 && curl -L https://istio.io/downloadIstio | sh -\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ cd istio-$ISTIO_VERSION/\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ export PATH=$PATH:$(pwd)/bin\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Engine Access Controls in robots.txt\nDESCRIPTION: Basic robots.txt configuration that allows all user agents to crawl the site and specifies the location of the XML sitemap for v1.11 documentation.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.11/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.11/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Deploying Sleep Test Pod for Istio Egress Testing\nDESCRIPTION: Deploys a sleep test pod to the default namespace using kubectl, assuming automatic sidecar injection is enabled.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2023/egress-sni/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f {{< github_file >}}/samples/sleep/sleep.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Self-Signed Cluster Issuers for cert-manager\nDESCRIPTION: Defines YAML configurations for three self-signed cluster issuers (istio-system, foo, bar) using cert-manager.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-bar-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: bar-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: bar\n  secretName: bar-ca-selfsigned\n  issuerRef:\n    name: selfsigned-bar-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: bar\nspec:\n  ca:\n    secretName: bar-ca-selfsigned\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-foo-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: foo-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: foo\n  secretName: foo-ca-selfsigned\n  issuerRef:\n    name: selfsigned-foo-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: foo\nspec:\n  ca:\n    secretName: foo-ca-selfsigned\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: selfsigned-istio-issuer\nspec:\n  selfSigned: {}\n---\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: istio-ca\n  namespace: cert-manager\nspec:\n  isCA: true\n  commonName: istio-system\n  secretName: istio-ca-selfsigned\n  issuerRef:\n    name: selfsigned-istio-issuer\n    kind: ClusterIssuer\n    group: cert-manager.io\n---\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: istio-system\nspec:\n  ca:\n    secretName: istio-ca-selfsigned\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio 1.19.x Release Page\nDESCRIPTION: YAML frontmatter block that defines metadata for a page listing Istio 1.19.x release announcements. It specifies the title, description, weight for ordering, layout template, and decoration style.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.19.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.19.x Releases\ndescription: Announcements for the 1.19 release and its associated patch releases.\nweight: 10\nlist_by_publishdate: true\nlayout: release-grid\ndecoration: dot\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio CNCF Graduation Announcement\nDESCRIPTION: YAML frontmatter configuration for an announcement about Istio's graduation within the CNCF. It specifies the announcement title, display period (July 14-19, 2023), and limits impressions to 12 per user.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/istio-graduates-within-cncf.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio has graduated within the CNCF\nperiod_start: 2023-07-14\nperiod_end: 2023-07-19\nmax_impressions: 12\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Setup FAQ Page\nDESCRIPTION: YAML front matter that configures the metadata for an Istio Setup FAQ page. It specifies the title, description, weight for ordering, layout type, and URL aliases for the page.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/faq/setup/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Setup FAQ\nlinktitle: Setup\ndescription: Setup Q & A.\nweight: 20\nlayout: faq\naliases:\n  - /help/faq/setup\n---\n```\n\n----------------------------------------\n\nTITLE: Warning Message for Invalid ExternalName Service Port\nDESCRIPTION: Example of the warning message IST0150 that appears when an ExternalName service port name is invalid.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0150/index.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nWarning [IST0150] (Service nginx.default) Port name for ExternalName service is invalid. Proxy may prevent tcp named ports and unmatched traffic for ports serving TCP protocol from being forwarded correctly.\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio 1.3 Release Post\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.3 release announcement blog post, including title, publication date, version number, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.3.x/announcing-1.3/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.3\nlinktitle: 1.3\nsubtitle: Major Update\ndescription: Istio 1.3 release announcement.\npublishdate: 2019-09-12\nrelease: 1.3.0\nskip_list: true\naliases:\n    - /blog/2019/announcing-1.3\n    - /news/2019/announcing-1.3\n    - /news/announcing-1.3.0\n    - /news/announcing-1.3\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin Workload and Exposing through Istio Ingress Gateway\nDESCRIPTION: Creates a namespace 'foo', deploys the httpbin workload with Istio sidecar injection, and exposes it through the Istio ingress gateway.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/jwt-route/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create ns foo\n$ kubectl apply -f <(istioctl kube-inject -f @samples/httpbin/httpbin.yaml@) -n foo\n$ kubectl apply -f @samples/httpbin/httpbin-gateway.yaml@ -n foo\n```\n\n----------------------------------------\n\nTITLE: Applying AuthorizationPolicy to Require Valid Tokens (Istio APIs)\nDESCRIPTION: This snippet shows how to apply an AuthorizationPolicy using Istio APIs to deny requests without valid JWT tokens. It targets the ingress gateway in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"frontend-ingress\"\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notRequestPrincipals: [\"*\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Applying AuthorizationPolicy to Require Valid Tokens (Istio APIs)\nDESCRIPTION: This snippet shows how to apply an AuthorizationPolicy using Istio APIs to deny requests without valid JWT tokens. It targets the ingress gateway in the istio-system namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: \"frontend-ingress\"\n  namespace: istio-system\nspec:\n  selector:\n    matchLabels:\n      istio: ingressgateway\n  action: DENY\n  rules:\n  - from:\n    - source:\n        notRequestPrincipals: [\"*\"]\nEOF\n```\n\n----------------------------------------\n\nTITLE: Excluding Health Checks from JWT Authentication in Istio\nDESCRIPTION: This YAML snippet defines an AuthorizationPolicy that excludes the '/healthz' path from JWT authentication requirements, allowing health check requests without authentication while requiring JWT for all other paths.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/concepts/security/index.md#2025-04-08_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: disable-jwt-for-healthz\n  namespace: default\nspec:\n  selector:\n    matchLabels:\n      app: products\n  action: ALLOW\n  rules:\n  - to:\n    - operation:\n        notPaths: [\"/healthz\"]\n    from:\n    - source:\n        requestPrincipals: [\"*\"]\n```\n\n----------------------------------------\n\nTITLE: Creating VirtualService\nDESCRIPTION: Defines an Istio VirtualService that links the custom gateway with the backend service and configures routing rules.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2019/custom-ingress-gateway/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: my-virtualservice\nspec:\n  hosts:\n  - \"demo.mydemo.com\"\n  gateways:\n  - istio-custom-gateway\n  http:\n  - route:\n    - destination:\n        host: my-demoapp\n```\n\n----------------------------------------\n\nTITLE: Example Istio Sidecar Injection Check Commands\nDESCRIPTION: Equivalent examples of using istioctl check-inject with different selection methods: pod name, deployment name, and label selector. All check for injection status in the 'hello' namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/check-inject/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl experimental check-inject -n hello httpbin-1234\n$ istioctl experimental check-inject -n hello deploy/httpbin\n$ istioctl experimental check-inject -n hello -l app=httpbin\n```\n\n----------------------------------------\n\nTITLE: Displaying YAML Content in a Markdown Tab\nDESCRIPTION: This snippet shows how to include YAML content within a tab using the 'text plain' shortcode. It demonstrates proper indentation and structure for YAML data.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/test/tabs/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nNoIndent:\n    FourIndent:\n        - EightIndent\n    FourIndentAgain:\n        - EightIndentAgain\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Resources\nDESCRIPTION: Removes all created resources, uninstalls Istio, and deletes namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl delete ns foo\n$ kubectl delete ns bar\n$ istioctl uninstall --purge -y\n$ helm delete -n cert-manager cert-manager\n$ kubectl delete ns istio-system cert-manager\n$ unset ISTIOCA FOOCA BARCA\n$ rm -rf istio.yaml proxyconfig-foo.yaml proxyconfig-bar.yaml selfsigned-issuer.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Helloworld Credential Secret in Istio\nDESCRIPTION: Creates a TLS secret for the helloworld service using its certificate and key.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/secure-ingress/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl create -n istio-system secret tls helloworld-credential \\\n  --key=example_certs1/helloworld.example.com.key \\\n  --cert=example_certs1/helloworld.example.com.crt\n```\n\n----------------------------------------\n\nTITLE: Installing cert-manager with Helm\nDESCRIPTION: Installs cert-manager using Helm, enabling the experimental CSR controller feature gate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/cert-management/custom-ca-k8s/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm repo add jetstack https://charts.jetstack.io\n$ helm repo update\n$ helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set featureGates=\"ExperimentalCertificateSigningRequestControllers=true\" --set installCRDs=true\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for Istio 1.20.2 Release Notes\nDESCRIPTION: YAML frontmatter defining metadata for the Istio 1.20.2 release notes page, including title, subtitle, description, publish date, and release version.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.20.x/announcing-1.20.2/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.20.2\nlinktitle: 1.20.2\nsubtitle: Patch Release\ndescription: Istio 1.20.2 patch release.\npublishdate: 2024-01-09\nrelease: 1.20.2\n---\n```\n\n----------------------------------------\n\nTITLE: Rendering Istio Change Log with Shortcode\nDESCRIPTION: Markdown content that includes a custom shortcode to render the website's change log entries. The shortcode handles the dynamic generation of the change log display.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/log/index.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< change_log >}}\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Ambient Mode Documentation\nDESCRIPTION: YAML front matter block defining metadata for the Ambient Mode documentation page, including title, description, weight for ordering, aliases for redirects, and keywords for search.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Ambient Mode\ndescription: Information for setting up and operating Istio with support for ambient mode.\nweight: 17\naliases:\n  - /docs/ops/ambient\n  - /latest/docs/ops/ambient\nkeywords: [ambient]\ntest: n/a\n```\n\n----------------------------------------\n\nTITLE: Response output for authorized request with added headers\nDESCRIPTION: The output of the authorized request showing the added X-Validated-By header and 200 status code.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/authz-policy-with-kyverno/index.md#2025-04-08_snippet_12\n\nLANGUAGE: plain\nCODE:\n```\n[...]\n    \"X-Validated-By\": [\n      \"my-security-checkpoint\"\n    ]\n[...]\nhttp_code=200\n```\n\n----------------------------------------\n\nTITLE: Contribution Seats Table in HTML/Markdown\nDESCRIPTION: HTML table showing the allocation of Contribution Seats among different companies in Istio's Steering Committee for 2024-2025.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/steering-results/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< centered_block >}}\n<table style=\"display: table\">\n    <thead>\n        <tr>\n            <th>Company</th>\n            <th>Seat allocation</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Google</td>\n            <td>3</td>\n        </tr>\n        <tr>\n            <td>Solo.io</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>IBM/Red Hat</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>DaoCloud</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>Huawei</td>\n            <td>1</td>\n        </tr>\n    </tbody>\n</table>\n{{< /centered_block >}}\n```\n\n----------------------------------------\n\nTITLE: Creating Service Certificate and Key for NGINX Server in Istio\nDESCRIPTION: Generates a certificate and private key for the external NGINX service, then signs them with the previously created root certificate. These will be used to secure the communication with the NGINX server.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/index.md#2025-04-08_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ openssl req -out my-nginx.mesh-external.svc.cluster.local.csr -newkey rsa:2048 -nodes -keyout my-nginx.mesh-external.svc.cluster.local.key -subj \"/CN=my-nginx.mesh-external.svc.cluster.local/O=some organization\"\n$ openssl x509 -req -sha256 -days 365 -CA example.com.crt -CAkey example.com.key -set_serial 0 -in my-nginx.mesh-external.svc.cluster.local.csr -out my-nginx.mesh-external.svc.cluster.local.crt\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter Configuration for Istio Release Documentation\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.9.8 release documentation page, including title, publication date, and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/announcing-1.9.8/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.9.8\nlinktitle: 1.9.8\nsubtitle: Patch Release\ndescription: Istio 1.9.8 patch release.\npublishdate: 2021-08-24\nrelease: 1.9.8\naliases:\n    - /news/announcing-1.9.8\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Restricted Gateway Hosts\nDESCRIPTION: Example of a more secure Gateway configuration that restricts host bindings to specific domains and namespaces.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/best-practices/security/index.md#2025-04-08_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nservers:\n- port:\n    number: 80\n    name: http\n    protocol: HTTP\n  hosts:\n  - \"foo.example.com\"\n  - \"default/bar.example.com\"\n  - \"route-namespace/*\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Sampling via Telemetry API\nDESCRIPTION: Creates a Telemetry resource that enables tracing with the otel-tracing provider and sets the randomSamplingPercentage to 10%.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n   name: otel-demo\nspec:\n  tracing:\n  - providers:\n    - name: otel-tracing\n    randomSamplingPercentage: 10\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Sampling via Telemetry API\nDESCRIPTION: Creates a Telemetry resource that enables tracing with the otel-tracing provider and sets the randomSamplingPercentage to 10%.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/distributed-tracing/sampling/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f - <<EOF\napiVersion: telemetry.istio.io/v1\nkind: Telemetry\nmetadata:\n   name: otel-demo\nspec:\n  tracing:\n  - providers:\n    - name: otel-tracing\n    randomSamplingPercentage: 10\nEOF\n```\n\n----------------------------------------\n\nTITLE: Viewing Service to Waypoint Mappings\nDESCRIPTION: Uses 'istioctl ztunnel-config service' to verify which waypoint proxies are associated with each service, helping diagnose routing issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/ambient/usage/troubleshoot-waypoint/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nistioctl ztunnel-config service\n```\n\n----------------------------------------\n\nTITLE: Modifying Bookinfo ratings deployment to use external MySQL\nDESCRIPTION: Updates the deployment spec for the ratings v2-mysql service to use the external MySQL database. Replaces placeholder values with actual database connection details.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/egress-tcp/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n- name: MYSQL_DB_HOST\n  value: mysqldb\n- name: MYSQL_DB_PORT\n  value: \"3306\"\n- name: MYSQL_DB_USER\n  value: root\n- name: MYSQL_DB_PASSWORD\n  value: password\n```\n\n----------------------------------------\n\nTITLE: Displaying Pod Information Command Example in Markdown\nDESCRIPTION: Example showing how to format a command with placeholders in Istio documentation using Markdown and the text shortcode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/formatting/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Display information about a pod:\n\n    {{</* text bash */>}}\n    $ kubectl describe pod <pod-name>\n    {{</* /text */>}}\n\n    Where `<pod-name>` is the name of one of your pods.\n```\n\n----------------------------------------\n\nTITLE: Installing Istio with minimal profile\nDESCRIPTION: A bash command to install Istio using the minimal profile configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/traffic-management/ingress/gateway-api/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nistioctl install --set profile=minimal -y\n```\n\n----------------------------------------\n\nTITLE: Implementing Boilerplate with Nested Shortcode and Text Block\nDESCRIPTION: Example showing how to include a boilerplate containing a shortcode with a nested text block using the 'test-3' identifier.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil/index.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{{< boilerplate \"test-3\" >}}\n```\n\n----------------------------------------\n\nTITLE: Displaying Warning Message with Text Block in Documentation\nDESCRIPTION: This snippet shows how to structure a warning message that includes a plain text block within it. It uses custom shortcodes to define the warning and text block sections.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/test-3.md#2025-04-08_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\n{{< warning >}}\nA warning from a boilerplate\n\n{{< text plain >}}\nA text block inside a warning\n{{< /text >}}\n\n{{< /warning >}}\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio EOL Announcement\nDESCRIPTION: YAML frontmatter metadata for a blog post announcing Istio 1.5's end of life. Includes title, subtitle, description, publish date, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/support/announcing-1.5-eol/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Support for Istio 1.5 ends on August 21st, 2020\nsubtitle: Support Announcement\ndescription: Upcoming Istio 1.5 end of life announcement.\npublishdate: 2020-07-22\naliases:\n    - /news/2020/announcing-1.5-eol\n---\n```\n\n----------------------------------------\n\nTITLE: Inserting Boilerplate with Shortcode and Nested Text Block in Hugo\nDESCRIPTION: Demonstrates how to insert a boilerplate containing a shortcode with a nested text block. This example uses the 'test-3' boilerplate.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/boil_and_lists/index.md#2025-04-08_snippet_3\n\nLANGUAGE: hugo\nCODE:\n```\n{{< boilerplate \"test-3\" >}}\n```\n\n----------------------------------------\n\nTITLE: Front Matter YAML Configuration for Istio 1.7 Release Announcement\nDESCRIPTION: YAML front matter defining the metadata for the Istio 1.7 release announcement page, including title, description, publication date, release version, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.7.x/announcing-1.7/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.7\nlinktitle: 1.7\nsubtitle: Major Update\ndescription: Istio 1.7 release announcement.\npublishdate: 2020-08-21\nrelease: 1.7.0\nskip_list: true\naliases:\n    - /news/announcing-1.7\n    - /news/announcing-1.7.0\n---\n```\n\n----------------------------------------\n\nTITLE: Basic Istio Configuration Analysis\nDESCRIPTION: Analyze all namespaces in a Kubernetes cluster for Istio configuration issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Downloading JWT Private Key\nDESCRIPTION: This snippet shows how to download the private key needed for generating custom JWT tokens to test with different claims.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authentication/authn-policy/index.md#2025-04-08_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\n$ wget --no-verbose {{< github_file >}}/security/tools/jwt/samples/key.pem\n```\n\n----------------------------------------\n\nTITLE: Makefile Variables Configuration for Istio Hub/Tag\nDESCRIPTION: Configuration block from Makefile.core.mk that defines the container image hub and tag variables used for testing Istio documentation. Supports both public testing builds and official docker.io releases.\nSOURCE: https://github.com/istio/istio.io/blob/master/README.md#2025-04-08_snippet_0\n\nLANGUAGE: makefile\nCODE:\n```\n# If one needs to test before a docker.io build is available (using a public test build),\n# the export HUB and TAG can be commented out, and the initial HUB un-commented\nHUB ?= gcr.io/istio-testing\n# export HUB ?= docker.io/istio\n# export TAG ?= 1.7.3\n```\n\n----------------------------------------\n\nTITLE: Basic Istio Configuration Analysis\nDESCRIPTION: Analyze all namespaces in a Kubernetes cluster for Istio configuration issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Basic Istio Configuration Analysis\nDESCRIPTION: Analyze all namespaces in a Kubernetes cluster for Istio configuration issues\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-analyze/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl analyze --all-namespaces\n```\n\n----------------------------------------\n\nTITLE: Examining Dry-Run Results in Zipkin Traces\nDESCRIPTION: Opens the Zipkin dashboard to analyze traces containing custom tags related to the dry-run authorization policy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/tasks/security/authorization/authz-dry-run/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl dashboard zipkin\n```\n\n----------------------------------------\n\nTITLE: AppSwitch Socket Operation Example\nDESCRIPTION: Example showing the getsockname(2) system call that applications may make for protocol-specific operations when using AppSwitch.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/delayering-istio/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngetsockname(2)\n```\n\n----------------------------------------\n\nTITLE: Generating Namespace-Specific Istio Control Plane YAML in Bash\nDESCRIPTION: Creating a separate control plane YAML file for a second tenant by replacing the namespace references using sed. This command generates a new YAML file for deployment in a different namespace.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2018/soft-multitenancy/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cat istio.yaml | sed s/istio-system/istio-system1/g > istio-system1.yaml\n```\n\n----------------------------------------\n\nTITLE: Gateway Configuration with Defined Hosts\nDESCRIPTION: An example Gateway configuration that defines 'testing.com' as a valid host, which doesn't match the host specified in the VirtualService example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/reference/config/analysis/ist0132/index.md#2025-04-08_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: testing-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - testing.com\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access with robots.txt for Istio.io\nDESCRIPTION: This robots.txt file allows all user agents (web crawlers) to access the entire Istio.io website without any restrictions. It also specifies the location of the sitemap file, which is found at /v1.0/sitemap.xml path.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.0/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\n\nDisallow:\n\nSitemap: /v1.0/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring Headless Directory in Hugo YAML\nDESCRIPTION: YAML front matter configuration that marks a Hugo content directory as headless, indicating that its files should not be rendered as normal pages on the site.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/boilerplates/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nheadless: true\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio Release Page\nDESCRIPTION: YAML frontmatter configuration for an Istio documentation page about releases. Defines metadata including page title, description, weight for ordering, aliases, and keywords for categorization.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Releases\ndescription: Information relating to Istio releases.\nweight: 40\naliases:\nkeywords: [releases]\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Docker Image Tagging in Bash\nDESCRIPTION: Creates an environment variable to store the user ID which will be used to tag the Docker image for the ratings service. This allows for personalized image naming.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/examples/microservices-istio/package-service/index.md#2025-04-08_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ export USER=user\n```\n\n----------------------------------------\n\nTITLE: Implementing Authorization with v1alpha1 RBAC Policies in Istio\nDESCRIPTION: Equivalent configuration using v1alpha1 RBAC policies, showing ClusterRbacConfig, ServiceRole, and ServiceRoleBinding resources required to achieve the same effect as the single v1beta1 AuthorizationPolicy.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2019/v1beta1-authorization-policy/index.md#2025-04-08_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ClusterRbacConfig\nmetadata:\n  name: default\nspec:\n  mode: 'ON_WITH_INCLUSION'\n  inclusion:\n    services: [\"httpbin.foo.svc.cluster.local\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRole\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  rules:\n  - services: [\"httpbin.foo.svc.cluster.local\"]\n    methods: [\"GET\"]\n    constraints:\n    - key: request.headers[version]\n      values: [\"v1\", \"v2\"]\n---\napiVersion: \"rbac.istio.io/v1alpha1\"\nkind: ServiceRoleBinding\nmetadata:\n  name: httpbin\n  namespace: foo\nspec:\n  subjects:\n  - user: \"cluster.local/ns/default/sa/sleep\"\n  roleRef:\n    kind: ServiceRole\n    name: \"httpbin\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Website Banner for Istio CNCF Announcement in YAML Frontmatter\nDESCRIPTION: YAML frontmatter configuration for a time-limited website banner. It specifies the banner title, display period (April 24-29, 2022), and maximum impression count of 12.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/istio-has-applied-to-join-the-cncf.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio has applied to join the CNCF\nperiod_start: 2022-04-24\nperiod_end: 2022-04-29\nmax_impressions: 12\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Source Pod Environment Variable\nDESCRIPTION: Command to set the SOURCE_POD environment variable to the name of the deployed curl testing pod for use in subsequent test commands.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/egress/wildcard-egress-hosts/index.md#2025-04-08_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ export SOURCE_POD=$(kubectl get pod -l app=curl -o jsonpath={.items..metadata.name})\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio Documentation Site\nDESCRIPTION: Standard robots.txt configuration that allows all web crawlers to access the entire site and specifies the location of the sitemap. The configuration uses no disallow directives, meaning all content is accessible to crawlers.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.8/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.8/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Removing Documentation Directory in Git\nDESCRIPTION: Command to recursively remove a directory containing index.md documentation page from Git repository.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/releases/contribute/remove-content/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit rm -rf\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access with robots.txt\nDESCRIPTION: Standard robots.txt configuration that allows all web crawlers complete access to the site and points to the XML sitemap location. The sitemap is located in the v1.1 directory.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.1/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.1/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Applying Authorization Policy for External Authorization in Istio\nDESCRIPTION: This YAML snippet defines an authorization policy that enables external authorization for the 'httpbin' workload. It specifies the use of a custom external authorizer for requests to the '/headers' path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ext-authz\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: CUSTOM\n  provider:\n    # The provider name must match the extension provider defined in the mesh config.\n    # You can also replace this with sample-ext-authz-http to test the other external authorizer definition.\n    name: sample-ext-authz-grpc\n  rules:\n  # The rules specify when to trigger the external authorizer.\n  - to:\n    - operation:\n        paths: [\"/headers\"]\n```\n\n----------------------------------------\n\nTITLE: Applying Authorization Policy for External Authorization in Istio\nDESCRIPTION: This YAML snippet defines an authorization policy that enables external authorization for the 'httpbin' workload. It specifies the use of a custom external authorizer for requests to the '/headers' path.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/security/authorization/authz-custom/index.md#2025-04-08_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: security.istio.io/v1\nkind: AuthorizationPolicy\nmetadata:\n  name: ext-authz\nspec:\n  selector:\n    matchLabels:\n      app: httpbin\n  action: CUSTOM\n  provider:\n    # The provider name must match the extension provider defined in the mesh config.\n    # You can also replace this with sample-ext-authz-http to test the other external authorizer definition.\n    name: sample-ext-authz-grpc\n  rules:\n  # The rules specify when to trigger the external authorizer.\n  - to:\n    - operation:\n        paths: [\"/headers\"]\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway with TLS Passthrough\nDESCRIPTION: Defines an Istio Gateway that opens port 443 with TLS passthrough mode.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/index.md#2025-04-08_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1\nkind: Gateway\nmetadata:\n  name: mygateway\nspec:\n  selector:\n    istio: ingressgateway # use istio default ingress gateway\n  servers:\n  - port:\n      number: 443\n      name: https\n      protocol: HTTPS\n    tls:\n      mode: PASSTHROUGH\n    hosts:\n    - nginx.example.com\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration for the Istio documentation page, specifying metadata like title, description, weight and aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/service-mesh/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: The Istio service mesh\ndescription: Service mesh.\nsubtitle: Istio addresses the challenges developers and operators face with a distributed or microservices architecture. Whether you're building from scratch, migrating existing applications to cloud native, or securing your existing estate, Istio can help. \nweight: 34\nskip_toc: true\nskip_byline: true\nskip_pagenav: true\naliases:\n    - /service-mesh.html\n    - /docs/concepts/what-is-istio/overview\n    - /docs/concepts/what-is-istio/goals\n    - /about/intro\n    - /docs/concepts/what-is-istio/\n    - /latest/docs/concepts/what-is-istio/\ndoc_type: about\n---\n```\n\n----------------------------------------\n\nTITLE: Displaying Remote Wasm Module Fetch Flow Architecture Diagram in SVG\nDESCRIPTION: An SVG diagram illustrating the remote Wasm module fetch flow in Istio. The diagram shows how istio-agent intercepts extension config resource updates, downloads Wasm modules, and rewrites ECDS configuration.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/wasm-progress/index.md#2025-04-08_snippet_0\n\nLANGUAGE: svg\nCODE:\n```\n{{< image width=\"75%\"\n    link=\"./architecture-istio-agent-downloading-wasm-module.svg\"\n    alt=\"Remote Wasm module fetch flow\"\n    caption=\"Remote Wasm module fetch flow\"\n    >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Gateway API with YAML Frontmatter\nDESCRIPTION: This YAML frontmatter initializes the configuration for an Istio Gateway API documentation page. It uses empty frontmatter delimiters to set up the page structure.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/uk/boilerplates/gateway-api-support.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\n---\n```\n\n----------------------------------------\n\nTITLE: Deploying httpbin Sample Application\nDESCRIPTION: Command to deploy the httpbin sample application which will serve as the target service for ingress traffic in this example.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/traffic-management/ingress/ingress-control/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/httpbin/httpbin.yaml@\n```\n\n----------------------------------------\n\nTITLE: Deleting MySQL Service Entry\nDESCRIPTION: Command to remove the external MySQL service entry from the default namespace\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2018/egress-tcp/index.md#2025-04-08_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nkubectl delete serviceentry mysql-external -n default\n```\n\n----------------------------------------\n\nTITLE: Rendering Content Panel in Istio Homepage\nDESCRIPTION: This snippet demonstrates how to use the content_panel shortcode to create landing panels on the Istio homepage. It specifies the panel type, title, text, button label, and URL.\nSOURCE: https://github.com/istio/istio.io/blob/master/CUSTOM_PAGES.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< content_panel type=\"dark\" title=\"service_mesh\" text=\"You can find what you need to make Istio do exactly what you need it to do.\" button=\"learn_more\" url=\"/about/service-mesh\" >}}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating YAML Front Matter for Istio Blog Post\nDESCRIPTION: This YAML snippet defines metadata for a blog post about Istio's new approach to telemetry plugin integration. It includes the title, description, publish date, author attribution, and relevant keywords.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/blog/2020/addon-rework/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 重做我们的插件集成\ndescription: 一种管理遥测插件安装的新方法。\npublishdate: 2020-06-04\nattribution: John Howard (Google)\nkeywords: [telemetry,addons,integrations,grafana,prometheus]\n---\n```\n\n----------------------------------------\n\nTITLE: Upgrading Istio CNI\nDESCRIPTION: Upgrades the Istio CNI node agent component\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ambient/upgrade/helm/index.md#2025-04-08_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ helm upgrade istio-cni istio/cni -n istio-system\n```\n\n----------------------------------------\n\nTITLE: Generating Dashboard Access Token\nDESCRIPTION: Commands to create and display the authentication token for Dashboard access\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/platform-setup/kind/index.md#2025-04-08_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ntoken=$(kubectl -n kubernetes-dashboard create token admin-user)\necho $token\n```\n\n----------------------------------------\n\nTITLE: Translating IstioOperator YAML to Helm Values in Bash\nDESCRIPTION: Command to translate an IstioOperator YAML file into Helm values using the istioctl manifest translate command. This is part of the migration process to Helm.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2024/in-cluster-operator-deprecation-announcement/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ istioctl manifest translate -f istio.yaml\n```\n\n----------------------------------------\n\nTITLE: Release Metadata in YAML\nDESCRIPTION: YAML frontmatter containing metadata about the Istio 1.13.8 release including title, subtitle, publication date and version information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.13.x/announcing-1.13.8/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.13.8\nlinktitle: 1.13.8\nsubtitle: Patch Release\ndescription: Istio 1.13.8 patch release.\npublishdate: 2022-09-12\nrelease: 1.13.8\n---\n```\n\n----------------------------------------\n\nTITLE: HTML Comment in Markdown\nDESCRIPTION: Markdown comment containing a TODO reminder to replace placeholder content and modify periods or remove the file.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/test-banner.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[comment]: <> (TODO: Replace placeholder and change periods if needed or remove file)\n```\n\n----------------------------------------\n\nTITLE: Creating Istio Gateway Configuration for External Control Plane\nDESCRIPTION: Creates an IstioOperator custom resource to configure the ingress gateway that exposes the external control plane ports to other clusters. This gateway is installed in the istio-system namespace of the external cluster.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ cat <<EOF > controlplane-gateway.yaml\napiVersion: install.istio.io/v1alpha1\nkind: IstioOperator\nmetadata:\n  namespace: istio-system\nspec:\n  components:\n    ingressGateways:\n      - name: istio-ingressgateway\n        enabled: true\n        k8s:\n          service:\n            ports:\n              - port: 15021\n                targetPort: 15021\n                name: status-port\n              - port: 15012\n                targetPort: 15012\n                name: tls-xds\n              - port: 15017\n                targetPort: 15017\n                name: tls-webhook\nEOF\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Configured EnvoyFilter with ADD Operation for ROUTE_CONFIGURATION\nDESCRIPTION: This example shows an EnvoyFilter that will be ignored because it uses the ADD operation with ROUTE_CONFIGURATION. Currently, only the MERGE operation can be used with ROUTE_CONFIGURATION in Istio.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0153/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: networking.istio.io/v1alpha3\nkind: EnvoyFilter\nmetadata:\n  name: test-auth-2\n  namespace: bookinfo\nspec:\n  configPatches:\n  - applyTo: ROUTE_CONFIGURATION\n    match:\n      context: SIDECAR_INBOUND\n    patch:\n      operation: ADD\n      filterClass: AUTHZ # This filter will run *after* the Istio authz filter.\n      value:\n        name: envoy.filters.http.ext_authz\n        typed_config:\n          \"@type\": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz\n          grpc_service:\n            envoy_grpc:\n              cluster_name: acme-ext-authz\n            initial_metadata:\n            - key: foo\n              value: myauth.acme # required by local ext auth server.\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access with robots.txt\nDESCRIPTION: This robots.txt file defines access rules for web crawlers that visit the Istio website. It allows all user agents to access all content and provides a reference to the sitemap location.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.20/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.20//sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Setting COMPLIANCE_POLICY Environment Variable for FIPS Compliance\nDESCRIPTION: Example of setting the COMPLIANCE_POLICY environment variable to 'fips-140-2' on Istio components to enforce TLS restrictions for FIPS compliance. This restricts TLS version to v1.2 and limits cipher suites and ECDH curves.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/announcing-1.21/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nenv:\n  - name: COMPLIANCE_POLICY\n    value: \"fips-140-2\"\n```\n\n----------------------------------------\n\nTITLE: Modifying Gateway Configuration for IP Address in Bash\nDESCRIPTION: Updates the Gateway configuration when using an IP address by removing DestinationRule, changing TLS mode to PASSTHROUGH, and configuring TLS routing instead of HTTP.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/zh/docs/setup/install/external-controlplane/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsed  -i'.bk' \\\n  -e '55,$d' \\\n  -e 's/mode: SIMPLE/mode: PASSTHROUGH/' -e '/credentialName:/d' -e \"s/${EXTERNAL_ISTIOD_ADDR}/\\\"*\\\"/' \\\n  -e 's/http:/tls:/' -e 's/https/tls/' -e '/route:/i\\\n        sniHosts:\\\n        - \"*\"' \\\n  external-istiod-gw.yaml; rm external-istiod-gw.yaml.bk\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio Release Notes\nDESCRIPTION: YAML metadata block defining the release documentation properties including title, version, publish date and description.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.14.x/announcing-1.14.5/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.14.5\nlinktitle: 1.14.5\nsubtitle: Patch Release\ndescription: Istio 1.14.5 patch release.\npublishdate: 2022-10-11\nrelease: 1.14.5\n---\n```\n\n----------------------------------------\n\nTITLE: Quote Callout Implementation in Hugo\nDESCRIPTION: Shows the structure for creating quote callouts with single and multi-paragraph content.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/test/callouts_and_lists/index.md#2025-04-08_snippet_3\n\nLANGUAGE: hugo\nCODE:\n```\n{{< quote >}}\nThis is a quote\n{{< /quote >}}\n\n{{< quote >}}\nThis is a quote\n\nwith two paragraphs\n{{< /quote >}}\n```\n\n----------------------------------------\n\nTITLE: Creating xDS-Enabled gRPC Server in Go\nDESCRIPTION: This code shows how to create a gRPC server that supports xDS configurations, such as mTLS. It uses a special constructor from the xDS package.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/blog/2021/proxyless-grpc/index.md#2025-04-08_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nimport \"google.golang.org/grpc/xds\"\n\n...\n\nserver = xds.NewGRPCServer()\nRegisterFooServer(server, &fooServerImpl)\n```\n\n----------------------------------------\n\nTITLE: Fixing Configuration by Reapplying Destination Rules\nDESCRIPTION: Shows how to fix issues by reapplying destination rules that were previously deleted.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/ops/diagnostic-tools/istioctl-describe/index.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl apply -f @samples/bookinfo/networking/destination-rule-all-mtls.yaml@\n```\n\n----------------------------------------\n\nTITLE: YAML Front Matter for Istio 1.12.3 Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.12.3 release announcement page, including title, subtitle, publication date, version number, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12.3/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.12.3\nlinktitle: 1.12.3\nsubtitle: Patch Release\ndescription: Istio 1.12.3 patch release.\npublishdate: 2022-02-10\nrelease: 1.12.3\naliases:\n    - /news/announcing-1.12.3\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Frontmatter for Istio 1.6.x Release Page\nDESCRIPTION: This YAML frontmatter configures the metadata for a webpage listing Istio 1.6.x release announcements. It sets the title, description, weight for sorting, and specifies a custom layout for displaying releases in a grid format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.6.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.6.x Releases\ndescription: Announcements for the 1.6 release and its associated patch releases.\nweight: 23\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Frontmatter Configuration for Istio 1.12.5 Release Notes\nDESCRIPTION: YAML configuration block defining metadata for the Istio 1.12.5 release notes page, including title, subtitle, publication date, version number, and URL aliases.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.12.x/announcing-1.12.5/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Announcing Istio 1.12.5\nlinktitle: 1.12.5\nsubtitle: Patch Release\ndescription: Istio 1.12.5 patch release.\npublishdate: 2022-03-09\nrelease: 1.12.5\naliases:\n    - /news/announcing-1.12.5\n---\n```\n\n----------------------------------------\n\nTITLE: Creating Feature Block in Istio Service Mesh Page\nDESCRIPTION: This code shows how to use the feature_block shortcode to render concept blocks on the Service Mesh page. It includes a header, image path, and descriptive content.\nSOURCE: https://github.com/istio/istio.io/blob/master/CUSTOM_PAGES.md#2025-04-08_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{{< feature_block header=\"Traffic management\" image=\"management.svg\" >}}\nIstio's traffic routing rules let you easily control the flow of traffic and API calls between services.\n{{< /feature_block >}}\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Apply Commands\nDESCRIPTION: Commands for applying the attribute generation configurations to Istio system namespace\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/tasks/observability/metrics/classify-metrics/index.md#2025-04-08_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl -n istio-system apply -f attribute_gen_service.yaml\n```\n\n----------------------------------------\n\nTITLE: Helm Value Overrides - Installation Configuration\nDESCRIPTION: Examples of equivalent Helm value override formats for platform and profile settings in Istio installation. Supports both global and local override forms.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.25.x/announcing-1.25/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--set global.platform=foo\n--set global.profile=bar\n--set platform=foo\n--set profile=bar\n```\n\n----------------------------------------\n\nTITLE: Istioctl Feature Updates and Fixes\nDESCRIPTION: Comprehensive list of improvements, additions, and fixes to the istioctl command-line tool, including new features, bug fixes, and behavior changes.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.21.x/announcing-1.21/change-notes/index.md#2025-04-08_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## istioctl\\n\\n- **Improved** injector list to exclude ambient namespaces.\\n\\n- **Improved** `bug-report` performance by reducing the amount of calls to the k8s API.\\n  The pod/node details included in the report will look different, but contain the same information.\\n\\n- **Improved** `istioctl bug-report` to sort gathered events by creation date.\\n\\n- **Updated** `verify-install` to not require a IstioOperator file, since it is now removed from the installation process.\\n\\n- **Added** support for deleting multiple waypoints at once via `istioctl experimental waypoint delete <waypoint1> <waypoint2> ...`.\\n\\n- **Added** the `--all` flag to `istioctl experimental waypoint delete` to delete all waypoint resources in a given namespace.\n```\n\n----------------------------------------\n\nTITLE: Configuring GOMEMLIMIT for Istiod in Bash\nDESCRIPTION: This snippet shows the addition of an automatically set GOMEMLIMIT environment variable to istiod to reduce the risk of out-of-memory issues.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.18.x/announcing-1.18/change-notes/index.md#2025-04-08_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport GOMEMLIMIT=<value>\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio 1.9.x Release Page in YAML\nDESCRIPTION: YAML frontmatter for an Istio documentation page that lists 1.9.x release announcements. It sets the page title, description, weight for ordering, and specifies a custom layout for displaying releases in a grid format.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/releases/1.9.x/_index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: 1.9.x Releases\ndescription: Announcements for the 1.9 release and its associated patch releases.\nweight: 20\nlist_by_publishdate: true\nlayout: release-grid\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring KubeCon North America 2019 Event Announcement in YAML\nDESCRIPTION: YAML frontmatter configuration for an event announcement about KubeCon North America 2019. The configuration specifies the event title, date range (November 4-21, 2019), maximum impressions (20), and timeout duration (20 seconds).\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/kubecon-america-2019.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: KubeCon North America 2019\nperiod_start: 2019-11-04\nperiod_end: 2019-11-21\nmax_impressions: 20\ntimeout: 20\n---\n```\n\n----------------------------------------\n\nTITLE: Hugo Tabset Implementation for Istio Training and Certification Page\nDESCRIPTION: This snippet implements a tabbed interface using Hugo shortcodes to organize Istio Training and Certification options. It creates two tabs - one for Training and one for Certification - each displaying interactive panels with relevant providers.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/about/training/index.md#2025-04-08_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{{< tabset category-name=\"ecosystem-type\" class=\"tabset--ecosystem\" forget-tab=true >}}\n\n{{< tab\n    name=\"Training\"\n    category-value=\"Training\"\n    description=\"Learn how Istio Service Mesh can boost your platform, with well crafted, professional courses.\"\n>}}\n\n{{< interactive_panels items=\"training\" >}}\n\n{{< /tab >}}\n\n{{< tab\n    name=\"Certification\"\n    category-value=\"Certification\"\n    description=\"Here are some of the well-known certification exams available to validate your Istio skills\"\n>}}\n\n{{< interactive_panels items=\"certification\" >}}\n\n{{< /tab >}}\n\n{{< /tabset >}}\n\n{{< interactive_panel_modal >}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Istio Deprecation Message Page in YAML\nDESCRIPTION: YAML frontmatter configuration for the deprecation message page, specifying the title, layout, ownership team, and test status.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0002/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Deprecated\nlayout: analysis-message\nowner: istio/wg-user-experience-maintainers\ntest: n/a\n---\n```\n\n----------------------------------------\n\nTITLE: Event Frontmatter Configuration in Markdown\nDESCRIPTION: YAML frontmatter block that defines metadata for the Istio Day Europe event, including title, date range, and registration link. This configuration is likely used by a static site generator to display event information.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/events/banners/istio-day-eu-2025.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Istio Day Europe\nperiod_start: 2025-01-31\nperiod_end: 2025-04-01\nlink: https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/co-located-events/istio-day/\n---\n```\n\n----------------------------------------\n\nTITLE: Example Service with Non-Compliant Port Name in Istio\nDESCRIPTION: An example Kubernetes service definition that triggers the IST0118 message because the port name 'foo-http' doesn't follow Istio's port naming convention which requires the format <protocol>[-<suffix>].\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/docs/reference/config/analysis/ist0118/index.md#2025-04-08_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: v1\nkind: Service\nmetadata:\n  name: httpbin\n  labels:\n    app: httpbin\nspec:\n  ports:\n  - name: foo-http\n    port: 8000\n    targetPort: 80\n  selector:\n    app: httpbin\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: Basic robots.txt configuration that allows all web crawlers full access to the site and points to the XML sitemap location.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v1.12/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow:\nSitemap: /v1.12/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for Istio Documentation\nDESCRIPTION: This robots.txt file defines rules for web crawlers accessing the Istio documentation site. It allows crawling of most content, disallows access to a specific version (v-0.1), and specifies the location of the sitemap.\nSOURCE: https://github.com/istio/istio.io/blob/master/archive/v0.4/robots.txt#2025-04-08_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUser-agent: *\nDisallow:\n\nDisallow: /v-0.1\nSitemap: https://istio.io/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Specific Traffic Management Directories\nDESCRIPTION: Command to run documentation tests for a specific directory path. This example targets only the tests under the traffic management tasks directory.\nSOURCE: https://github.com/istio/istio.io/blob/master/tests/README.md#2025-04-08_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nTEST_ENV=kind ADDITIONAL_CONTAINER_OPTIONS=\"--network host\" make doc.test TEST=tasks/traffic-management\n```\n\n----------------------------------------\n\nTITLE: Adding Language Redirect in Nginx Configuration\nDESCRIPTION: This snippet demonstrates how to add a language-specific redirect rule in the Nginx configuration file. It automatically redirects users to the French version of the site based on their browser language settings.\nSOURCE: https://github.com/istio/istio.io/blob/master/README.md#2025-04-08_snippet_1\n\nLANGUAGE: nginx\nCODE:\n```\n/  /fr   302  Language=fr\n```\n\n----------------------------------------\n\nTITLE: SDS Enabled Configuration Output Example\nDESCRIPTION: Example output showing that SDS is enabled in the Istio system configuration, which is relevant for the CVE-2020-8664 vulnerability assessment.\nSOURCE: https://github.com/istio/istio.io/blob/master/content/en/news/security/istio-security-2020-003/index.md#2025-04-08_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n-  name: SDS_ENABLED\nvalue: \"true\"\n```"
  }
]
[
  {
    "owner": "swagger-api",
    "repo": "swagger-codegen",
    "content": "TITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It configures OAuth2 authentication, creates a Pet object, and calls the addPet method. The method handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Example API Usage with Error Handling\nDESCRIPTION: A comprehensive example showing how to use the Petstore API including importing required modules, creating an API instance, making an API call, and handling exceptions. This demonstrates the test_special_tags endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/README.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.AnotherFakeApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test special tags\n    api_response = api_instance.test_special_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnotherFakeApi->test_special_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java Swagger Client\nDESCRIPTION: Example code showing how to retrieve pets filtered by status using the PetApi with OAuth2 authentication. The status values can be provided as comma-separated strings, with valid options being 'available', 'pending', or 'sold'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the PetApi. It configures OAuth2 authentication, specifies status values for filtering, and handles the returned list of pets.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an existing pet using Python\nDESCRIPTION: Example code for updating an existing pet in the Petstore API using Python. Requires OAuth2 authentication with the petstore_auth token and a Pet object containing the updated pet details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Pet() # Pet | Pet object that needs to be added to the store\n\ntry:\n    # Update an existing pet\n    api_instance.update_pet(body)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->update_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Kotlin\nDESCRIPTION: Example showing how to place an order for a pet. Accepts an Order object as input and returns the created order. Includes error handling for client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = StoreApi()\nval body : Order =  // Order | order placed for purchasing the pet\ntry {\n    val result : Order = apiInstance.placeOrder(body)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#placeOrder\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#placeOrder\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Package\nDESCRIPTION: Command to install an unpublished package from a local path (not recommended).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Windows Command for Generating PHP Client with Swagger Codegen\nDESCRIPTION: Windows-specific command for generating a PHP client using Swagger Codegen CLI. This demonstrates the Windows-compatible path syntax and command structure required for the Codegen tool.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules\\swagger-codegen-cli\\target\\swagger-codegen-cli.jar generate -i https://petstore.swagger.io/v2/swagger.json -l php -o c:\\temp\\php_api_client\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It sets up OAuth2 authentication, creates a Pet object, and calls the addPet method. Error handling is included to catch and print any ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Generating a PHP Client Using Swagger Codegen CLI\nDESCRIPTION: This example demonstrates how to clone the Swagger Codegen repository, build it, and use the CLI tool to generate a PHP client API from the Petstore OpenAPI specification. It shows the complete workflow from repository setup to code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/swagger-api/swagger-codegen\ncd swagger-codegen\nmvn clean package\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate \\\n   -i https://petstore.swagger.io/v2/swagger.json \\\n   -l php \\\n   -o /var/tmp/php_api_client\n```\n\n----------------------------------------\n\nTITLE: Creating a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates how to create a user using the SwaggerPetstore UserApi. It imports the necessary classes, creates an instance of the UserApi, and calls the createUser method with a User object as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet body = new SwaggerPetstore.User(); // User | Created user object\n\n\napiInstance.createUser(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Java using Swagger Client\nDESCRIPTION: Example of deleting a user by username using the Swagger client API. Requires authenticated user session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Ruby\nDESCRIPTION: Example code demonstrating how to add a new pet to the store using the Petstore Ruby client. It loads the required gem, configures OAuth2 access token for authorization, instantiates the PetApi class, and makes the API call with a Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\nbody = Petstore::Pet.new # Pet | Pet object that needs to be added to the store\n\n\nbegin\n  #Add a new pet to the store\n  api_instance.add_pet(body)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->add_pet: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status - JavaScript Swagger Client\nDESCRIPTION: Example of finding pets by their status using the Swagger Petstore client. Supports multiple comma-separated status values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar status = [\"status_example\"]; // [String] | Status values that need to be considered for filter\n\napiInstance.findPetsByStatus(status).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Petstore API Client to Add a Pet (Dart)\nDESCRIPTION: Example Dart code demonstrating how to use the Swagger Petstore API client to add a new pet. Includes import statement, API instance creation, and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/README.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry {\n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading a File to a Pet Record with Swagger Petstore JavaScript Client\nDESCRIPTION: This code snippet demonstrates how to use the Swagger Petstore JavaScript client to upload a file to a pet's record. It configures OAuth2 authentication, creates a PetApi instance, sets required parameters including the pet ID and optional metadata and file path, and executes the uploadFile method with a callback to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to update\n\nvar opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.uploadFile(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating an existing pet in the Petstore API in Python\nDESCRIPTION: This snippet demonstrates how to update an existing pet in the Swagger Petstore. It requires OAuth2 authentication and accepts a complete Pet object to replace the existing pet data. The function handles API exceptions through a try-except block.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Pet() # Pet | Pet object that needs to be added to the store\n\ntry:\n    # Update an existing pet\n    api_instance.update_pet(body)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->update_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java Swagger Client\nDESCRIPTION: This example demonstrates how to add a new pet to the store using the PetApi in a Java client. It shows the authentication setup using OAuth, creating a Pet object, and handling potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Definition\nDESCRIPTION: Defines the core properties of the Pet model including ID, category, name, photo URLs, tags and status. Specifies required fields and optional properties with their respective data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**category** | [**Category**](Category.md) |  | [optional] \n**name** | **String** |  | \n**photoUrls** | **[String]** |  | \n**tags** | [**[Tag]**](Tag.md) |  | [optional] \n**status** | **String** | pet status in the store | [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using the C# PetApi Client\nDESCRIPTION: Example of using the UpdatePet method to update an existing pet in the store. It configures OAuth2 authentication, instantiates the PetApi client, and sends an updated Pet object to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Update an existing pet\n                apiInstance.UpdatePet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using C# Swagger Petstore SDK\nDESCRIPTION: Demonstrates how to use the PetApi to add a new pet to the store. It includes setting up OAuth2 authentication, creating a PetApi instance, and handling exceptions. This example showcases the basic usage pattern for the SDK.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding pets by status using Python\nDESCRIPTION: Example code for finding pets by their status in the Petstore API using Python. Requires OAuth2 authentication with the petstore_auth token and a list of status values to filter by. Returns a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nstatus = ['status_example'] # list[str] | Status values that need to be considered for filter\n\ntry:\n    # Finds Pets by status\n    api_response = api_instance.find_pets_by_status(status)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->find_pets_by_status: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer String Types in Java\nDESCRIPTION: Example of using the fakeOuterStringSerialize endpoint to test serialization of outer string types. Demonstrates passing a string value as the request body and handling the string response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using PetApi in Python\nDESCRIPTION: This snippet shows how to upload an image file for a pet using the PetApi class. It configures OAuth2 authentication, sets the required pet ID parameter along with optional metadata and file parameters, and handles the API response or exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet to update\nadditional_metadata = 'additional_metadata_example' # str | Additional data to pass to server (optional)\nfile = '/path/to/file.txt' # file | file to upload (optional)\n\ntry:\n    # uploads an image\n    api_response = api_instance.upload_file(pet_id, additional_metadata=additional_metadata, file=file)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->upload_file: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table\nDESCRIPTION: Markdown table defining the User model properties including their types, descriptions, and optional status. Common user properties like ID, username, name fields, email, password, phone and status are specified.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Generated Java Client Library\nDESCRIPTION: Commands to navigate to the generated Java client library directory, build the package using Maven, and run unit tests against the generated code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ncd samples/client/petstore/java\nmvn package\n```\n\n----------------------------------------\n\nTITLE: Using OAuth2 Authentication in Go\nDESCRIPTION: Examples of how to use OAuth2 authentication when making requests to the Petstore API using the Go client. This applies to the 'petstore_auth' authentication method. Two methods are shown: direct token usage and using the OAuth2 module for automatic token refresh.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/README.md#2025-04-20_snippet_3\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextAccessToken, \"ACCESSTOKENSTRING\")\nr, err := client.Service.Operation(auth, args)\n```\n\nLANGUAGE: golang\nCODE:\n```\nimport \"golang.org/x/oauth2\"\n\n/* Perform OAuth2 round trip request and obtain a token */\n\ntokenSource := oauth2cfg.TokenSource(createContext(httpClient), &token)\nauth := context.WithValue(oauth2.NoContext, sw.ContextOAuth2, tokenSource)\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Swagger Pet API in Java\nDESCRIPTION: This snippet shows how to upload an image file for a pet. It sets up OAuth2 authentication, initializes a PetApi instance, and calls the uploadFile method with the pet's ID, additional metadata, and the file to upload. The response is printed, and any ApiExceptions are caught and displayed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using AnotherFakeApi to Test Special Tags in Petstore API\nDESCRIPTION: Complete example showing how to use the AnotherFakeApi class to test special tags functionality. The code creates an API instance, prepares a client model, makes an API call, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/README.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.AnotherFakeApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test special tags\n    api_response = api_instance.test_special_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnotherFakeApi->test_special_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This snippet shows how to update an existing pet in the store using the PetApi. It configures OAuth2 authentication, creates a Pet object with updated information, and calls the updatePet method. The method handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This snippet shows how to find pets by their tags using the PetApi. It sets up OAuth2 authentication, creates a list of tag values, and calls the findPetsByTags method. The method returns a List of Pet objects and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing User Update in C# Using Swagger Client\nDESCRIPTION: Example demonstrating how to update an existing user's information using the Swagger-generated C# client. Takes username and user object as parameters, includes error handling, and requires user authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example API Usage with Java\nDESCRIPTION: Sample Java code demonstrating how to use the API client to make requests to the AnotherFakeApi endpoint\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/README.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.AnotherFakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class AnotherFakeApiExample {\n\n    public static void main(String[] args) {\n        \n        AnotherFakeApi apiInstance = new AnotherFakeApi();\n        Client body = new Client(); // Client | client model\n        try {\n            Client result = apiInstance.testSpecialTags(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders with C# Client\nDESCRIPTION: Example of using the C# client to place an order for a pet. This code shows how to initialize the StoreApi client, create an Order object, and call the PlaceOrder method, including exception handling and processing the returned Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: Lists the properties of the Pet model, including their types, descriptions, and optional status. This table defines the structure of a Pet object in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status - Java Implementation\nDESCRIPTION: Example code showing how to find pets by their status using the PetApi client. Demonstrates handling of list parameters and response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java Swagger Client\nDESCRIPTION: This example shows how to find pets by their status using the PetApi in a Java client. It demonstrates setting up OAuth authentication, creating a list of status values to filter by, making the API call, and processing the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It requires OAuth2 authentication and accepts a Pet object as input. The method returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\napiInstance.addPet(body).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to log in a user in SwaggerPetstore. It uses the loginUser method of the UserApi class, taking a username and password as parameters and handling the returned session token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | The user name for login\n\nlet password = \"password_example\"; // String | The password for login in clear text\n\n\napiInstance.loginUser(username, password, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a user by their username in SwaggerPetstore. It uses the getUserByName method of the UserApi class, passing a username as a parameter and handling the returned User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\n\n\napiInstance.getUserByName(username, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the addPet method of the PetApi class to add a new pet to the store. It requires OAuth2 authentication and accepts a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\n\napiInstance.addPet(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating User with Java Swagger Client\nDESCRIPTION: Example of creating a new user using the Swagger API client. Requires User object as input and handles ApiException for error cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Pet API in Java\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It configures OAuth2 authentication, creates a PetApi instance, and calls the updatePetWithForm method with the pet's ID, name, and status. The code also includes exception handling for API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID with Java\nDESCRIPTION: Example Java code showing how to retrieve a pet by its ID from the Swagger Petstore. The code configures API key authorization, specifies the pet ID to find, and handles the returned Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Extending ObjcClientCodegen for Custom Objective-C Generation\nDESCRIPTION: Java code example demonstrating how to extend the ObjcClientCodegen class to customize Objective-C code generation in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npackage com.mycompany.swagger.codegen;\n\nimport io.swagger.codegen.languages.*;\n\npublic class MyObjcCodegen extends ObjcClientCodegen {\n    static {\n        PREFIX = \"HELO\";\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Image File for Pet in C# using Swagger Client\nDESCRIPTION: This example shows how to upload an image file for a pet. It configures OAuth2 authentication, creates a PetApi instance, and uploads a file with optional metadata, returning an ApiResponse object. The code handles exceptions with proper error logging.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var _file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, _file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Petstore API in Ruby\nDESCRIPTION: Example Ruby code demonstrating how to use the Petstore API SDK. This snippet initializes an API instance, creates a client model, and makes an API call to test special tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/README.md#2025-04-20_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# Load the gem\nrequire 'petstore'\n\napi_instance = Petstore::AnotherFakeApi.new\n\nbody = Petstore::Client.new # Client | client model\n\n\nbegin\n  #To test special tags\n  result = api_instance.test_special_tags(body)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling AnotherFakeApi->test_special_tags: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status with Python\nDESCRIPTION: Example of how to find pets by status using the Petstore API. The snippet shows OAuth2 authentication configuration, API instance creation, and retrieving pets filtered by status values, returning a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nstatus = ['status_example'] # list[str] | Status values that need to be considered for filter\n\ntry:\n    # Finds Pets by status\n    api_response = api_instance.find_pets_by_status(status)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->find_pets_by_status: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet - Java Implementation\nDESCRIPTION: Example code showing how to add a new pet to the store using the PetApi client. Demonstrates OAuth2 authentication setup and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using SwaggerClient SDK to add a new pet to the store\nDESCRIPTION: This example demonstrates how to use the SwaggerClient SDK to add a new pet to the store. It shows configuration of OAuth2 access token, creation of a Pet object, and making an API call using the PetApi class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/core-data/README.md#2025-04-20_snippet_3\n\nLANGUAGE: objc\nCODE:\n```\nSWGDefaultConfiguration *apiConfig = [SWGDefaultConfiguration sharedConfig];\n\n// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n\n\nSWGPet* *body = [[SWGPet alloc] init]; // Pet object that needs to be added to the store (optional)\n\nSWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n\n// Add a new pet to the store\n[apiInstance addPetWithBody:body\n              completionHandler: ^(NSError* error) {\n                            if (error) {\n                                NSLog(@\"Error: %@\", error);\n                            }\n                        }];\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Images in Python using PetApi\nDESCRIPTION: This code example shows how to upload an image for a pet using the PetApi client. It configures OAuth2 authentication, sets up the required parameters including optional metadata, and handles the API response and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet to update\nadditional_metadata = 'additional_metadata_example' # str | Additional data to pass to server (optional)\nfile = '/path/to/file.txt' # file | file to upload (optional)\n\ntry:\n    # uploads an image\n    api_response = api_instance.upload_file(pet_id, additional_metadata=additional_metadata, file=file)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->upload_file: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: User Login in Java\nDESCRIPTION: This example shows how to authenticate a user by calling the loginUser method with username and password parameters. The method returns a session token as a String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Go\nDESCRIPTION: This function adds a new pet to the store. It requires a Pet object as input and uses OAuth2 authentication. The request is made via HTTP POST to the /pet endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nfunc AddPet(ctx context.Context, body Pet) error\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It sets up OAuth2 authentication, creates a Pet object, and calls the addPet method. Exception handling is included for API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Complete example of using the Petstore API to test special tags\nDESCRIPTION: Comprehensive Python example demonstrating how to create an API client instance, make a request to the AnotherFakeApi endpoint, and handle potential exceptions. This illustrates a typical workflow for interacting with the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/README.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.AnotherFakeApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test special tags\n    api_response = api_instance.test_special_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnotherFakeApi->test_special_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in C# with Swagger\nDESCRIPTION: Example implementation showing how to test various parameter types including numbers, doubles, strings, bytes, dates and more. Uses HTTP basic authentication and handles both required and optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEndpointParametersExample\n    {\n        public void main()\n        {\n            // Configure HTTP basic authorization: http_basic_test\n            Configuration.Default.Username = \"YOUR_USERNAME\";\n            Configuration.Default.Password = \"YOUR_PASSWORD\";\n\n            var apiInstance = new FakeApi();\n            var number = 8.14;  // decimal? | None\n            var _double = 1.2;  // double? | None\n            var patternWithoutDelimiter = patternWithoutDelimiter_example;  // string | None\n            var _byte = B;  // byte[] | None\n            var integer = 56;  // int? | None (optional) \n            var int32 = 56;  // int? | None (optional) \n            var int64 = 789;  // long? | None (optional) \n            var _float = 3.4;  // float? | None (optional) \n            var _string = _string_example;  // string | None (optional) \n            var binary = B;  // byte[] | None (optional) \n            var date = 2013-10-20;  // DateTime? | None (optional) \n            var dateTime = 2013-10-20T19:20:30+01:00;  // DateTime? | None (optional) \n            var password = password_example;  // string | None (optional) \n            var callback = callback_example;  // string | None (optional) \n\n            try\n            {\n                apiInstance.TestEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, _string, binary, date, dateTime, password, callback);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEndpointParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading a File with Progress Tracking in Swift using Alamofire\nDESCRIPTION: This snippet shows how to download a file with progress tracking using Alamofire. It demonstrates handling progress updates, dispatching UI updates to the main queue, and handling the download response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_29\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.download(.GET, \"https://httpbin.org/stream/100\", destination: destination)\n         .progress { bytesRead, totalBytesRead, totalBytesExpectedToRead in\n             print(totalBytesRead)\n\n             // This closure is NOT called on the main queue for performance\n             // reasons. To update your ui, dispatch to the main queue.\n             dispatch_async(dispatch_get_main_queue()) {\n                 print(\"Total bytes read on main queue: \\(totalBytesRead)\")\n             }\n         }\n         .response { _, _, _, error in\n             if let error = error {\n                 print(\"Failed with error: \\(error)\")\n             } else {\n                 print(\"Downloaded file successfully\")\n             }\n         }\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with Swagger Petstore API\nDESCRIPTION: Example showing how to test serialization of object with outer number type using the FakeApi. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet opts = { \n  'body': new SwaggerPetstore.OuterComposite() // OuterComposite | Input composite as post body\n};\n\napiInstance.fakeOuterCompositeSerialize(opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Adding a new pet to the Petstore API in Python\nDESCRIPTION: This snippet demonstrates how to add a new pet to the Swagger Petstore. It configures OAuth2 authentication, creates an API instance, and sends a request with the pet object. Error handling is included to catch and display API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Pet() # Pet | Pet object that needs to be added to the store\n\ntry:\n    # Add a new pet to the store\n    api_instance.add_pet(body)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->add_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Making an Alamofire Request with ResponseCollection Handling\nDESCRIPTION: Shows how to request a collection of users and automatically deserialize the JSON array response into a typed array of User objects using the responseCollection handler which manages JSON parsing and collection creation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_49\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"http://example.com/users\")\n         .responseCollection { (response: Response<[User], BackendError>) in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Basic SDK Usage Example\nDESCRIPTION: Example code showing how to initialize and use the Swagger Petstore SDK to make an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/README.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar api = new SwaggerPetstore.AnotherFakeApi()\n\nvar body = new SwaggerPetstore.Client(); // {Client} client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.testSpecialTags(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Kotlin\nDESCRIPTION: Example of how to retrieve a pet by its ID using the PetApi class. The snippet demonstrates creating an instance of PetApi, providing a pet ID, and handling the returned Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet to return\ntry {\n    val result : Pet = apiInstance.getPetById(petId)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#getPetById\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#getPetById\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using the Swagger Client in Java\nDESCRIPTION: This snippet shows how to update an existing pet in the Petstore. It configures OAuth2 authentication, creates a PetApi instance, and handles potential exceptions that might occur during the update process.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Swagger-generated Java Client\nDESCRIPTION: This snippet shows how to upload a pet's image using the Swagger-generated Java client. It sets up OAuth2 authentication, creates a PetApi instance, and calls the uploadFile method with the pet's ID, additional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User with Username and Password in Java\nDESCRIPTION: This example shows how to authenticate a user by providing their username and password. The method returns a session token as a String upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: Lists the properties of the Pet model, including their types, descriptions, and optional status. This table defines the structure of a Pet object in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet\nDESCRIPTION: Example of how to update an existing pet using the updatePet() method. Requires a Pet object with updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.updatePet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using testClassname method with API key authorization in JavaScript\nDESCRIPTION: This example demonstrates how to use the testClassname method of the FakeClassnameTags123Api class. It shows how to configure API key authorization, create an instance of the API client, and call the testClassname method with a Client model parameter. The example includes error handling and displays the result in the console.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key_query\nlet api_key_query = defaultClient.authentications['api_key_query'];\napi_key_query.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.apiKeyPrefix = 'Token';\n\nlet apiInstance = new SwaggerPetstore.FakeClassnameTags123Api();\n\nlet body = new SwaggerPetstore.Client(); // Client | client model\n\napiInstance.testClassname(body).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Table\nDESCRIPTION: Markdown table showing the properties, data types, descriptions and optional status for the Pet model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Kotlin for Swagger Codegen\nDESCRIPTION: Specifies the properties of the User model with their respective types and optional status. Includes fields for user identification, personal information, contact details, and account status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**username** | **kotlin.String** |  |  [optional]\n**firstName** | **kotlin.String** |  |  [optional]\n**lastName** | **kotlin.String** |  |  [optional]\n**email** | **kotlin.String** |  |  [optional]\n**password** | **kotlin.String** |  |  [optional]\n**phone** | **kotlin.String** |  |  [optional]\n**userStatus** | **kotlin.Int** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using SwagPetApi in Apex\nDESCRIPTION: Example Apex code demonstrating how to use the SwagPetApi class to add a new pet to the store, including OAuth2 authentication setup.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nSwagPetApi api = new SwagPetApi();\nSwagClient client = api.getClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nSwagger.OAuth petstore_auth = (Swagger.OAuth) client.getAuthentication('petstore_auth');\npetstore_auth.setAccessToken('YOUR ACCESS TOKEN');\n\nMap<String, Object> params = new Map<String, Object>{\n    'body' => SwagPet.getExample()\n};\n\ntry {\n    // cross your fingers\n    api.addPet(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Java Client to Add a Pet\nDESCRIPTION: Java code example demonstrating how to use the Swagger Java client to add a new pet to the store. It includes setting up the API client, configuring OAuth2 authentication, and making an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/README.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.PetApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class PetApiExample {\n\n    public static void main(String[] args) {\n        ApiClient defaultClient = Configuration.getDefaultApiClient();\n        \n        // Configure OAuth2 access token for authorization: petstore_auth\n        OAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\n        petstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\n        PetApi apiInstance = new PetApi();\n        Pet body = new Pet(); // Pet | Pet object that needs to be added to the store\n        try {\n            apiInstance.addPet(body);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling PetApi#addPet\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Java\nDESCRIPTION: Example code for retrieving an order using its ID. This endpoint works with integer IDs with values <= 5 or > 10, other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Documents the three optional properties of ModelApiResponse: code (Integer), type (String), and message (String). This markdown table format is commonly used in Swagger/OpenAPI documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store using the Swagger Client in Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the Petstore using the Swagger client. It configures OAuth2 authentication, creates a PetApi instance, and handles potential exceptions that might occur during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using PetApi\nDESCRIPTION: Shows how to upload an image file for a pet using multipart/form-data. Requires OAuth2 authentication and accepts a pet ID, optional metadata, and the image file. Returns a ModelApiResponse object containing the upload result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Swagger Java Client\nDESCRIPTION: Example of uploading an image file for a pet with additional metadata. Uses OAuth2 authentication and returns an API response object. Requires pet ID and handles optional file and metadata parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading File to Pet Using Swagger Petstore API in JavaScript\nDESCRIPTION: Demonstrates how to upload a file to a pet record using the Swagger Petstore API client. The example includes OAuth2 authentication setup, creating a pet API instance, and handling the file upload with optional metadata. The API call returns a promise that handles both success and error cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to update\n\nvar opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\napiInstance.uploadFile(petId, opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Updating a pet with form data in the Petstore API in Python\nDESCRIPTION: This code shows how to update a pet's information using form data rather than a complete Pet object. It requires the pet's ID and accepts optional name and status parameters. OAuth2 authentication is required and the function handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n```\n\n----------------------------------------\n\nTITLE: User Properties Schema Definition in Markdown\nDESCRIPTION: Defines a data model for User objects with properties including ID, username, name fields, contact information, password, and status. All fields are optional and have specific data types assigned.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Getting Help with Swagger Codegen CLI\nDESCRIPTION: Command to display general options available for the code generation process using Swagger Codegen CLI. This is useful for understanding the available command-line parameters and options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar help generate\n```\n\n----------------------------------------\n\nTITLE: Placing a Pet Order in C# using Swagger-generated Client\nDESCRIPTION: Demonstrates how to place a new order for a pet using the StoreApi. This example shows how to create an Order object, submit it, and handle the response containing the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using PetApi\nDESCRIPTION: Demonstrates how to update a pet's name and status using form data. Uses OAuth2 authentication and handles the PetApi client with proper error handling. Takes petId as required parameter, with optional name and status fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Example API Usage with AnotherFakeApi in C#\nDESCRIPTION: Complete example demonstrating how to use the AnotherFakeApi endpoint to test special tags with error handling\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status with PetApi in Java\nDESCRIPTION: Example of how to find pets by their status using the PetApi. It demonstrates OAuth2 authentication setup, passing status values as a filter, and handling the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Pet using Java API Client\nDESCRIPTION: Example code demonstrating how to update an existing pet using the Swagger API client. Requires OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Order in C# using Swagger Store API\nDESCRIPTION: Example code showing how to place a new order for a pet. Takes an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order using StoreApi in Java\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It includes setting up the order object and error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Java using Swagger Client\nDESCRIPTION: Example of creating a new user using the Swagger client API. Demonstrates proper exception handling and object instantiation. Requires UserApi client initialization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body With Query Parameters in Java\nDESCRIPTION: Example code demonstrating how to make requests with both body and query parameters using the Fake API. Makes a PUT request to /fake/body-with-query-params endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java Swagger Client\nDESCRIPTION: Example code demonstrating how to update an existing pet in the store using the PetApi with OAuth2 authentication. This requires passing a Pet object as the body parameter with updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Swagger/OpenAPI Schema\nDESCRIPTION: Specifies the property definitions for a Pet model including data types, references to other models, and optional flags. The model contains basic identification properties like ID and name, relationship properties like category and tags, media properties like photo URLs, and status information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Pet\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**category** | [**\\Swagger\\Client\\Model\\Category**](Category.md) |  | [optional] \n**name** | **string** |  | \n**photo_urls** | **string[]** |  | \n**tags** | [**\\Swagger\\Client\\Model\\Tag[]**](Tag.md) |  | [optional] \n**status** | **string** | pet status in the store | [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using the Swagger Client in Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status in the Petstore. It configures OAuth2 authentication, creates a PetApi instance, and handles potential exceptions while retrieving a list of pets filtered by status values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with C# Swagger Client\nDESCRIPTION: Example of using the PetApi.UpdatePet method to update an existing pet in the Swagger Petstore. The code configures OAuth2 authentication, initializes the PetApi client, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Update an existing pet\n                apiInstance.UpdatePet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using the C# PetApi Client\nDESCRIPTION: Example of using the FindPetsByTags method to search for pets by their tags. It configures OAuth2 authentication, instantiates the PetApi client, and passes tag values to filter and retrieve matching pets.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByTagsExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var tags = new List<string>(); // List<string> | Tags to filter by\n\n            try\n            {\n                // Finds Pets by tags\n                List&lt;Pet&gt; result = apiInstance.FindPetsByTags(tags);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It sets up OAuth2 authentication, specifies the pet ID to delete, and calls the deletePet method. An optional API key can be provided.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the SwaggerPetstore PetApi. It requires API key authentication and accepts a pet ID as input. It returns a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nvar api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to return\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getPetById(petId, callback);\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store with Java\nDESCRIPTION: Example Java code demonstrating how to add a new pet to the Swagger Petstore using the addPet endpoint. The code initializes the API client, configures OAuth2 authentication, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in Java\nDESCRIPTION: Creates multiple users by accepting an array of User objects as input. Returns no response body and requires no authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID in C#\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It configures API key authentication, specifies the pet ID to retrieve, and calls the GetPetById method. The result is a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetPetByIdExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to return\n\n            try\n            {\n                // Find pet by ID\n                Pet result = apiInstance.GetPetById(petId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.GetPetById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for the enumString property, which includes 'UPPER', 'lower', and empty string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"EnumStringEnum\"></a>\n## Enum: EnumStringEnum\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It configures OAuth2 authentication and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Dart\nDESCRIPTION: This code demonstrates how to add a new pet to the store using the Pet API. It requires OAuth2 authentication and accepts a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by ID using the StoreApi. It includes notes on valid input ranges and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a new pet to the Petstore using Python\nDESCRIPTION: Example code for adding a new pet to the Petstore API using Python. Requires OAuth2 authentication with the petstore_auth token and a Pet object containing the pet details to be added.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Pet() # Pet | Pet object that needs to be added to the store\n\ntry:\n    # Add a new pet to the store\n    api_instance.add_pet(body)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->add_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication\nDESCRIPTION: Authenticates user with username and password. Returns a login token string upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | The user name for login\n\nlet password = \"password_example\"; // String | The password for login in clear text\n\napiInstance.loginUser(username, password).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Swagger Codegen CLI Generate Command Help Output\nDESCRIPTION: Partial output of the 'help generate' command showing available options for the swagger-codegen-cli generate command, including options for authentication, configuration, input specification, output location, and more.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nNAME\n        swagger-codegen-cli generate - Generate code with chosen lang\n\nSYNOPSIS\n        swagger-codegen-cli generate\n                [(-a <authorization> | --auth <authorization>)]\n                [--additional-properties <additional properties>...]\n                [--api-package <api package>] [--artifact-id <artifact id>]\n                [--artifact-version <artifact version>]\n                [(-c <configuration file> | --config <configuration file>)]\n                [-D <system properties>...] [--git-repo-id <git repo id>]\n                [--git-user-id <git user id>] [--group-id <group id>]\n                [--http-user-agent <http user agent>]\n                (-i <spec file> | --input-spec <spec file>)\n                [--ignore-file-override <ignore file override location>]\n                [--import-mappings <import mappings>...]\n                [--instantiation-types <instantiation types>...]\n                [--invoker-package <invoker package>]\n                (-l <language> | --lang <language>)\n                [--language-specific-primitives <language specific primitives>...]\n                [--library <library>] [--model-name-prefix <model name prefix>]\n                [--model-name-suffix <model name suffix>]\n                [--model-package <model package>]\n                [(-o <output directory> | --output <output directory>)]\n                [--release-note <release note>] [--remove-operation-id-prefix]\n                [--reserved-words-mappings <reserved word mappings>...]\n                [(-s | --skip-overwrite)]\n                [(-t <template directory> | --template-dir <template directory>)]\n                [--type-mappings <type mappings>...] [(-v | --verbose)]\n\nOPTIONS\n        -a <authorization>, --auth <authorization>\n            adds authorization headers when fetching the swagger definitions\n            remotely. Pass in a URL-encoded string of name:header with a comma\n            separating multiple values\n\n...... (results omitted)\n\n        -v, --verbose\n            verbose mode\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using the Swagger Client in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a specific pet by its ID from the Petstore. It configures API key authentication, creates a PetApi instance, and handles potential exceptions while fetching the pet information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Codegen to Generate Client Code\nDESCRIPTION: Example usage of Swagger Codegen to generate Ruby client code from a Swagger/OpenAPI specification. It specifies the input swagger.json file, the language (Ruby), and the output directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/building.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nswagger-codegen generate -i https://petstore.swagger.io/v2/swagger.json -l ruby -o /tmp/test/\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It configures OAuth2 authentication, creates a Pet object, and calls the addPet method. The method handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Controlling Component Generation in Swagger Codegen\nDESCRIPTION: Basic command examples for selectively generating specific component types (models, APIs, or supporting files) in Swagger Codegen. These system properties restrict the output to only the specified component types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generation-selective.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# generate only models\njava -Dmodels {opts}\n\n# generate only apis\njava -Dapis {opts}\n\n# generate only supporting files\njava -DsupportingFiles\n\n# generate models and supporting files\njava -Dmodels -DsupportingFiles\n```\n\n----------------------------------------\n\nTITLE: Finding a Pet by ID in Ruby\nDESCRIPTION: Example code demonstrating how to retrieve a single pet by its ID using the Petstore Ruby client. It requires API key authorization and returns a Pet object. The example shows configuration setup and exception handling for API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure API key authorization: api_key\n  config.api_key['api_key'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['api_key'] = 'Bearer'\nend\n\napi_instance = Petstore::PetApi.new\n\npet_id = 789 # Integer | ID of pet to return\n\n\nbegin\n  #Find pet by ID\n  result = api_instance.get_pet_by_id(pet_id)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->get_pet_by_id: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in Ruby Petstore SDK\nDESCRIPTION: Example of how to delete a purchase order by ID using the Petstore Ruby SDK. This method works with integer IDs less than 1000, with larger values or non-integers generating API errors. The example shows initialization of the API client, setting the order ID, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::StoreApi.new\n\norder_id = 'order_id_example' # String | ID of the order that needs to be deleted\n\n\nbegin\n  #Delete purchase order by ID\n  api_instance.delete_order(order_id)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling StoreApi->delete_order: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags with C# Swagger Client\nDESCRIPTION: Example of using the PetApi.FindPetsByTags method to retrieve pets filtered by their tags. The code configures OAuth2 authentication, initializes the PetApi client, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByTagsExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var tags = new List<string>(); // List<string> | Tags to filter by\n\n            try\n            {\n                // Finds Pets by tags\n                List&lt;Pet&gt; result = apiInstance.FindPetsByTags(tags);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing enum parameters with Python API client\nDESCRIPTION: This snippet shows how to call the test_enum_parameters method of the FakeApi class with various enum parameter types including string arrays, strings, integers, and floats. It includes error handling with a try-except block.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nenum_form_string_array = ['enum_form_string_array_example'] # list[str] | Form parameter enum test (string array) (optional)\nenum_form_string = '-efg' # str | Form parameter enum test (string) (optional) (default to -efg)\nenum_header_string_array = ['enum_header_string_array_example'] # list[str] | Header parameter enum test (string array) (optional)\nenum_header_string = '-efg' # str | Header parameter enum test (string) (optional) (default to -efg)\nenum_query_string_array = ['enum_query_string_array_example'] # list[str] | Query parameter enum test (string array) (optional)\nenum_query_string = '-efg' # str | Query parameter enum test (string) (optional) (default to -efg)\nenum_query_integer = 56 # int | Query parameter enum test (double) (optional)\nenum_query_double = 1.2 # float | Query parameter enum test (double) (optional)\n\ntry:\n    # To test enum parameters\n    api_instance.test_enum_parameters(enum_form_string_array=enum_form_string_array, enum_form_string=enum_form_string, enum_header_string_array=enum_header_string_array, enum_header_string=enum_header_string, enum_query_string_array=enum_query_string_array, enum_query_string=enum_query_string, enum_query_integer=enum_query_integer, enum_query_double=enum_query_double)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_enum_parameters: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet - JavaScript Swagger Client\nDESCRIPTION: Example of adding a new pet to the store using the Swagger Petstore client. Requires OAuth2 authentication with petstore_auth token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\napiInstance.addPet(body).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet Implementation in Java\nDESCRIPTION: Example code showing how to add a new pet to the store using the PetApi client. Demonstrates OAuth2 authentication setup and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Ruby\nDESCRIPTION: Example code showing how to update an existing pet in the store using the Petstore Ruby client. It requires a Pet object with the updated information and uses OAuth2 authentication for authorization. The example includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\nbody = Petstore::Pet.new # Pet | Pet object that needs to be added to the store\n\n\nbegin\n  #Update an existing pet\n  api_instance.update_pet(body)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->update_pet: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using PHP Swagger Client\nDESCRIPTION: This code snippet demonstrates how to find pets by their status using the Swagger PHP client. It requires OAuth2 authentication and accepts an array of status values as filter parameters, returning an array of Pet objects that match the criteria.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$status = array(\"status_example\"); // string[] | Status values that need to be considered for filter\n\ntry {\n    $result = $apiInstance->findPetsByStatus($status);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->findPetsByStatus: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Pet Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Pet model including field names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Codegen Class in Swagger Codegen CLI\nDESCRIPTION: Command-line argument to specify a custom code generation class when running Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n-l com.mycompany.swagger.codegen.MyObjcCodegen\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet with Python\nDESCRIPTION: Example of how to update an existing pet in the store using the Petstore API. The snippet demonstrates OAuth2 authentication setup, API instance creation, and updating a pet with a Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Pet() # Pet | Pet object that needs to be added to the store\n\ntry:\n    # Update an existing pet\n    api_instance.update_pet(body)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->update_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID with Python\nDESCRIPTION: Example of how to retrieve a pet by ID using the Petstore API. The snippet shows API key authentication configuration, API instance creation, and retrieving a pet by its ID, returning a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet to return\n\ntry:\n    # Find pet by ID\n    api_response = api_instance.get_pet_by_id(pet_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->get_pet_by_id: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information using PetApi in Java\nDESCRIPTION: This snippet demonstrates how to update a pet's information using the PetApi. It initializes the API client, sets up OAuth2 authentication, and calls the updatePetWithForm method with the pet's ID, name, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet - Java Client Implementation\nDESCRIPTION: Example code showing how to add a new pet to the store using the Java client. Requires OAuth2 authentication with petstore_auth token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Order - Java Implementation\nDESCRIPTION: Example demonstrating how to place a new order for a pet. Takes an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store with the Swagger Client API in Java\nDESCRIPTION: Example of how to use the addPet method of the PetApi class to add a new pet to the store. This code initializes the API client with OAuth2 authentication and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using API Service in Component\nDESCRIPTION: Example of injecting and using the DefaultApi service in an Angular component\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '@swagger/angular2-typescript-petstore';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It sets up API key authentication, specifies the pet ID to retrieve, and calls the getPetById method. The result is a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving pet inventory by status using JavaScript\nDESCRIPTION: Example of retrieving pet inventories by status using the Swagger Petstore Store API. This snippet demonstrates how to configure API key authentication, initialize the API client, and handle the response data which returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nvar api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\napiInstance.getInventory().then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Deleting User in C# with Swagger API\nDESCRIPTION: Deletes a user by username. This operation can only be performed by an authenticated user and requires the username of the account to be deleted.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteUserExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be deleted\n\n            try\n            {\n                // Delete user\n                apiInstance.DeleteUser(username);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.DeleteUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to log in a user using their username and password. It initializes the API instance, specifies the login credentials, and calls the loginUser method with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The user name for login\n\nvar password = \"password_example\"; // String | The password for login in clear text\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.loginUser(username, password, callback);\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory Status in C# using Swagger Store API\nDESCRIPTION: Example code showing how to retrieve pet inventory quantities by status. Requires API key authentication and returns a dictionary mapping status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary<string, int?> result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in C#\nDESCRIPTION: Example code demonstrating how to update an existing pet in the Swagger Petstore. This configures OAuth2 authentication, creates a PetApi instance, and calls UpdatePet with a Pet object containing the updated values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Update an existing pet\n                apiInstance.UpdatePet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID\nDESCRIPTION: Example of how to retrieve a pet by its ID using the getPetById() method. Returns a single Pet object. Requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to return\n\ntry { \n    var result = api_instance.getPetById(petId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->getPetById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This snippet demonstrates how to update an existing pet in the store using the PetApi. It configures OAuth2 authentication, creates a Pet object with updated information, and calls the updatePet method. Exception handling is included for API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store in Kotlin\nDESCRIPTION: Example of how to add a new pet to the store using the Swagger Petstore API. This code creates a Pet object and sends it to the server using the addPet method. It includes error handling for both client (4xx) and server (5xx) errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval body : Pet =  // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#addPet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#addPet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: User Login in Swagger Petstore API using Java\nDESCRIPTION: This code demonstrates the process of logging a user into the system. It uses the loginUser method from the UserApi class, which takes a username and password as parameters and returns a login token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in Python\nDESCRIPTION: Example of creating multiple users using an array input. Instantiates the UserApi class and sends a POST request with an array of User objects. Handles API exceptions and requires no authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = [petstore_api.User()] # list[User] | List of user object\n\ntry:\n    # Creates list of users with given input array\n    api_instance.create_users_with_array_input(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_users_with_array_input: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet demonstrates how to find pets by status using the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts an array of status values as input. It returns an array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar status = [\"status_example\"]; // [String] | Status values that need to be considered for filter\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.findPetsByStatus(status, callback);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Petstore using Java Swagger Client\nDESCRIPTION: Example code showing how to delete a pet from the store using the PetApi with OAuth2 authentication. This snippet demonstrates passing a pet ID and optional API key, while handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It configures OAuth2 authentication, creates a Pet object, and calls the addPet method. Exception handling is included for API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet to Store in C#\nDESCRIPTION: Example code showing how to add a new pet to the store using OAuth2 authentication. Takes a Pet object as input and sends a POST request to the /pet endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store using the C# PetApi Client\nDESCRIPTION: Example of using the AddPet method to add a new Pet to the Petstore. It configures OAuth2 authentication, instantiates the PetApi client, and sends a Pet object to be added to the store.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: User Login in Java using Swagger Client\nDESCRIPTION: Logs user into the system using username and password. Returns a session string token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Java\nDESCRIPTION: This example demonstrates how to fetch a user's details by providing their username. The method returns a User object containing all user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Pet API in Java\nDESCRIPTION: This snippet shows how to upload an image for a pet. It sets up OAuth2 authentication, creates a PetApi instance, and calls the uploadFile method with the pet's ID, additional metadata, and the file to upload. The code handles the API response and includes exception handling for potential errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Petstore API using Python\nDESCRIPTION: Example showing how to delete a user by username. The code creates an instance of the UserApi class and calls the delete_user method with the username of the user to be deleted, including error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The name that needs to be deleted\n\ntry:\n    # Delete user\n    api_instance.delete_user(username)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->delete_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: Specifies the possible values for the pet status using an enumeration. This enum defines the allowed states for a pet in the store: available, pending, or sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Implementing URLRequestConvertible for CRUD Operations with Authorization\nDESCRIPTION: Creates a comprehensive Router enum for CRUD operations with OAuth authentication. Each case handles different HTTP methods, path construction, parameter encoding, and automatically applies authorization headers when an OAuth token is available.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_56\n\nLANGUAGE: swift\nCODE:\n```\nenum Router: URLRequestConvertible {\n    static let baseURLString = \"http://example.com\"\n    static var OAuthToken: String?\n\n    case CreateUser([String: AnyObject])\n    case ReadUser(String)\n    case UpdateUser(String, [String: AnyObject])\n    case DestroyUser(String)\n\n    var method: Alamofire.Method {\n        switch self {\n        case .CreateUser:\n            return .POST\n        case .ReadUser:\n            return .GET\n        case .UpdateUser:\n            return .PUT\n        case .DestroyUser:\n            return .DELETE\n        }\n    }\n\n    var path: String {\n        switch self {\n        case .CreateUser:\n            return \"/users\"\n        case .ReadUser(let username):\n            return \"/users/\\(username)\"\n        case .UpdateUser(let username, _):\n            return \"/users/\\(username)\"\n        case .DestroyUser(let username):\n            return \"/users/\\(username)\"\n        }\n    }\n\n    // MARK: URLRequestConvertible\n\n    var URLRequest: NSMutableURLRequest {\n        let URL = NSURL(string: Router.baseURLString)!\n        let mutableURLRequest = NSMutableURLRequest(URL: URL.URLByAppendingPathComponent(path))\n        mutableURLRequest.HTTPMethod = method.rawValue\n\n        if let token = Router.OAuthToken {\n            mutableURLRequest.setValue(\"Bearer \\(token)\", forHTTPHeaderField: \"Authorization\")\n        }\n\n        switch self {\n        case .CreateUser(let parameters):\n            return Alamofire.ParameterEncoding.JSON.encode(mutableURLRequest, parameters: parameters).0\n        case .UpdateUser(_, let parameters):\n            return Alamofire.ParameterEncoding.URL.encode(mutableURLRequest, parameters: parameters).0\n        default:\n            return mutableURLRequest\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Client Code Using Custom Codegen Library\nDESCRIPTION: This command demonstrates how to use a custom code generator library with Swagger Codegen to generate client code from the Petstore API specification. It specifies the custom generator, input specification URL, and output directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\njava -cp output/myLibrary/target/myClientCodegen-swagger-codegen-1.0.0.jar:modules/swagger-codegen-cli/target/swagger-codegen-cli.jar \\\n  io.swagger.codegen.SwaggerCodegen generate -l myClientCodegen\\\n  -i https://petstore.swagger.io/v2/swagger.json \\\n  -o myClient\n```\n\n----------------------------------------\n\nTITLE: User Login to Petstore API using Python\nDESCRIPTION: Example showing how to log a user into the system. The code creates an instance of the UserApi class and calls the login_user method with username and password parameters. The response is the login token that is printed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The user name for login\npassword = 'password_example' # str | The password for login in clear text\n\ntry:\n    # Logs user into the system\n    api_response = api_instance.login_user(username, password)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->login_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating User Information with C# Swagger Client\nDESCRIPTION: This example shows how to update user information using the Swagger-generated C# client. It creates a UserApi instance, sets the required parameters (username and user object), and calls the UpdateUser method with error handling for exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Swagger Petstore API in C#\nDESCRIPTION: Complete example demonstrating how to call the Swagger Petstore API using the C# SDK. This example shows how to initialize an API client, make a request, and handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/README.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet demonstrates how to update a pet using form data with the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts a pet ID, name, and status as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet that needs to be updated\n\nvar opts = { \n  'name': \"name_example\", // String | Updated name of the pet\n  'status': \"status_example\" // String | Updated status of the pet\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.updatePetWithForm(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Example Usage of PetApi in Dart\nDESCRIPTION: Dart code example demonstrating how to use the generated Swagger client to add a pet to the store. The example shows importing the package, configuring authentication, creating a Pet object, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/README.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry {\n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Definition in C#\nDESCRIPTION: Defines the properties of a Pet model class including optional and required fields. The model contains an ID, category reference, name, photo URLs, tags, and a status field indicating the pet's availability in the store.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Category** | [**Category**](Category.md) |  | [optional] \n**Name** | **string** |  | \n**PhotoUrls** | **List<string>** |  | \n**Tags** | [**List<Tag>**](Tag.md) |  | [optional] \n**Status** | **string** | pet status in the store | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java using Swagger Client\nDESCRIPTION: Example code showing how to test inline additional properties using the FakeApi class. Demonstrates initialization and calling of testInlineAdditionalProperties method with an Object parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Python using PetStore API\nDESCRIPTION: This code demonstrates how to update a pet's information using form data with the PetStore API. It initializes the API client with proper configuration, sets up the required parameters (pet_id) and optional parameters (name, status), then makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet that needs to be updated\nname = 'name_example' # str | Updated name of the pet (optional)\nstatus = 'status_example' # str | Updated status of the pet (optional)\n\ntry:\n    # Updates a pet in the store with form data\n    api_instance.update_pet_with_form(pet_id, name=name, status=status)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->update_pet_with_form: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Users with List Input in Java\nDESCRIPTION: Example shows how to create multiple users using a List input. Similar to the array input method, it creates a list of User objects and passes them to the createUsersWithListInput method with exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store with PetApi in Java\nDESCRIPTION: Example of how to add a new pet to the store using the PetApi. It demonstrates OAuth2 authentication setup, creating a Pet object, and handling API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Sending POST Request to Add New Pet\nDESCRIPTION: Endpoint for adding a new pet to the store. Requires a Pet object in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\npost /pet\n```\n\n----------------------------------------\n\nTITLE: Creating a Single User with Swagger PHP Client\nDESCRIPTION: This example demonstrates how to create a single user in the system using the Swagger PHP client. It requires the User model and handles exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\User(); // \\Swagger\\Client\\Model\\User | Created user object\n\ntry {\n    $apiInstance->createUser($body);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->createUser: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the SwaggerPetstore PetApi. It sets up API key authentication and makes an API call to get a pet's details by its ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nvar api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to return\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getPetById(petId, callback);\n```\n\n----------------------------------------\n\nTITLE: Update User Profile Using PHP Swagger Client\nDESCRIPTION: Example code demonstrating how to update a user profile using the Swagger API client in PHP. Requires GuzzleHttp client and Swagger client library dependencies. Handles user object updates with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$username = \"username_example\"; // string | name that need to be deleted\n$body = new \\Swagger\\Client\\Model\\User(); // \\Swagger\\Client\\Model\\User | Updated user object\n\ntry {\n    $apiInstance->updateUser($username, $body);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->updateUser: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Go\nDESCRIPTION: This function retrieves pets based on their status. It accepts multiple status values as input and returns a slice of Pet objects. The request is made via HTTP GET to the /pet/findByStatus endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nfunc FindPetsByStatus(ctx context.Context, status []string) ([]Pet, error)\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image Files in Java using Swagger Client\nDESCRIPTION: This example shows how to upload an image file for a pet using the PetApi. It sets up OAuth2 authentication, creates the API client instance, handles file and metadata parameters, and demonstrates how to process the API response or catch exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging a User into the System in Kotlin\nDESCRIPTION: Authenticates a user and logs them into the system using username and password. The example shows how to call the loginUser method with credentials and handle the returned authentication token as a string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The user name for login\nval password : kotlin.String = password_example // kotlin.String | The password for login in clear text\ntry {\n    val result : kotlin.String = apiInstance.loginUser(username, password)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#loginUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#loginUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This code shows how to delete a pet from the store using the PetApi. It sets up OAuth2 authentication, specifies the pet ID to delete, and calls the deletePet method. An optional API key can be provided. Error handling is included for ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java Swagger Client\nDESCRIPTION: This code demonstrates how to update an existing pet in the store using the PetApi. It shows setting up OAuth authentication, creating a Pet object with updated information, making the API call, and managing any exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger Petstore API using C#\nDESCRIPTION: This snippet demonstrates how to create a new user using the UserApi. It initializes the API client, creates a User object, and calls the CreateUser method. Exception handling is included for error cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID using the C# PetApi Client\nDESCRIPTION: Example of using the GetPetById method to fetch a single pet by its ID. It configures API key authentication, instantiates the PetApi client, and calls the get endpoint with a pet ID to retrieve pet details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetPetByIdExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to return\n\n            try\n            {\n                // Find pet by ID\n                Pet result = apiInstance.GetPetById(petId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.GetPetById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This snippet shows how to update an existing pet in the store using the PetApi. It configures OAuth2 authentication, specifies the updated pet object, and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image Using Java PetApi Client\nDESCRIPTION: Shows how to upload an image file for a pet using multipart/form-data. Includes OAuth2 authentication setup, handling of additional metadata, and file upload functionality. Returns a ModelApiResponse object containing the upload result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User - Java Swagger Client\nDESCRIPTION: Example of updating a user's information. This operation can only be performed by logged in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in C#\nDESCRIPTION: This snippet shows how to find pets by tags using the PetApi. It configures OAuth2 authentication, specifies tags to filter by, and calls the FindPetsByTags method. The result is a list of Pet objects matching the given tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByTagsExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var tags = new List<string>(); // List<string> | Tags to filter by\n\n            try\n            {\n                // Finds Pets by tags\n                List<Pet> result = apiInstance.FindPetsByTags(tags);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Petstore API client from GitHub using pip\nDESCRIPTION: Command to install the Petstore API Python client directly from a GitHub repository using pip. This allows users to get the latest version of the client from the source repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the findPetsByStatus method of the PetApi class to retrieve pets based on their status. It requires OAuth2 authentication and accepts an array of status values as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet status = [\"status_example\"]; // [String] | Status values that need to be considered for filter\n\n\napiInstance.findPetsByStatus(status, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Swagger Pet API in Java\nDESCRIPTION: Shows how to upload an image file for a pet along with additional metadata. Uses OAuth2 authentication and handles API exceptions. Returns a ModelApiResponse object containing the upload result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger API with C#\nDESCRIPTION: This example demonstrates how to create a new user using the Swagger API client. It initializes the UserApi, creates a User object, and calls the CreateUser method. Exceptions are caught and logged to the debug console.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Swagger Petstore API using Java\nDESCRIPTION: This code demonstrates how to update an existing user's information. It uses the updateUser method from the UserApi class, which requires the username and an updated User object as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using the API in an Angular Component\nDESCRIPTION: Example of injecting and using the DefaultApi service in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It configures OAuth2 authentication, specifies the pet ID to delete, and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image in C#\nDESCRIPTION: This snippet shows how to upload an image for a pet. It requires the pet's ID and optionally accepts additional metadata and a file stream. The method returns an ApiResponse object and uses OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var _file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, _file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Python\nDESCRIPTION: This code snippet demonstrates how to use the AnotherFakeApi to test special tags functionality. It creates an API instance, sets up a client model as the request body, and makes a PATCH request to the '/another-fake/dummy' endpoint with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.AnotherFakeApi()\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test special tags\n    api_response = api_instance.test_special_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnotherFakeApi->test_special_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Python\nDESCRIPTION: This code snippet demonstrates how to use the test_special_tags method of the AnotherFakeApi class. It creates an instance of the API, calls the method with a Client object, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.AnotherFakeApi()\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test special tags\n    api_response = api_instance.test_special_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnotherFakeApi->test_special_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image in C#\nDESCRIPTION: This snippet shows how to upload an image for a pet. It demonstrates setting up the API instance, configuring OAuth2 authentication, and making the API call with required and optional parameters including file upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var _file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, _file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using Python in Petstore API\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It requires an Order object as input and returns the created Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\nbody = petstore_api.Order() # Order | order placed for purchasing the pet\n\ntry:\n    # Place an order for a pet\n    api_response = api_instance.place_order(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->place_order: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: Example of creating multiple users by passing a list of User objects to the createUsersWithListInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using PetApi in Java\nDESCRIPTION: This snippet shows how to upload an image for a pet. It sets up the API client with OAuth2 authentication, then calls the uploadFile method with the pet's ID, additional metadata, and the file to upload. The response is printed, and error handling is implemented.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging out a User with Java REST Assured\nDESCRIPTION: This snippet illustrates how to log out the current user using the REST Assured library in Java. It configures the API client and executes a GET request to the logout endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.logoutUser().execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It configures API key authentication, specifies the pet ID to retrieve, and calls the getPetById method. The result is a single Pet object matching the specified ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in C#\nDESCRIPTION: This example shows how to authenticate a user with their username and password. The method returns a string token upon successful login. The example includes handling of the returned token and any exceptions that might occur during authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: This example demonstrates creating multiple users by providing a list of User objects. Similar to the array input method, but uses a different endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Dart\nDESCRIPTION: This example demonstrates how to place an order for a pet using the StoreApi. It requires an Order object as input and returns the created Order object as output.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar body = new Order(); // Order | order placed for purchasing the pet\n\ntry { \n    var result = api_instance.placeOrder(body);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->placeOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store with C# API Client\nDESCRIPTION: Example demonstrating how to add a new pet to the store using the PetApi.AddPet method. The code configures OAuth2 authentication, creates a new Pet object, and makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the SwaggerPetstore PetApi. It sets up OAuth2 authentication and makes an API call to update a pet's name and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet that needs to be updated\n\nvar opts = { \n  'name': \"name_example\", // String | Updated name of the pet\n  'status': \"status_example\" // String | Updated status of the pet\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.updatePetWithForm(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status\nDESCRIPTION: Example of how to find pets by status using the findPetsByStatus() method. Multiple status values can be provided as a list.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar status = []; // List<String> | Status values that need to be considered for filter\n\ntry { \n    var result = api_instance.findPetsByStatus(status);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByStatus: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Swagger Petstore API using Java\nDESCRIPTION: This snippet illustrates how to log out the current user from the system. It uses the logoutUser method from the UserApi class, which doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using the C# PetApi Client\nDESCRIPTION: Example of using the FindPetsByStatus method to search for pets by their status. It configures OAuth2 authentication, instantiates the PetApi client, and passes status values as a filter to retrieve matching pets.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List&lt;Pet&gt; result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in C#\nDESCRIPTION: Example code demonstrating how to test various parameter types including decimals, doubles, strings, bytes and dates. Uses HTTP basic authentication and includes error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEndpointParametersExample\n    {\n        public void main()\n        {\n            // Configure HTTP basic authorization: http_basic_test\n            Configuration.Default.Username = \"YOUR_USERNAME\";\n            Configuration.Default.Password = \"YOUR_PASSWORD\";\n\n            var apiInstance = new FakeApi();\n            var number = 8.14;  // decimal? | None\n            var _double = 1.2;  // double? | None\n            var patternWithoutDelimiter = patternWithoutDelimiter_example;  // string | None\n            var _byte = B;  // byte[] | None\n            var integer = 56;  // int? | None (optional) \n            var int32 = 56;  // int? | None (optional) \n            var int64 = 789;  // long? | None (optional) \n            var _float = 3.4;  // float? | None (optional) \n            var _string = _string_example;  // string | None (optional) \n            var binary = B;  // byte[] | None (optional) \n            var date = 2013-10-20;  // DateTime? | None (optional) \n            var dateTime = 2013-10-20T19:20:30+01:00;  // DateTime? | None (optional) \n            var password = password_example;  // string | None (optional) \n            var callback = callback_example;  // string | None (optional) \n\n            try\n            {\n                apiInstance.TestEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, _string, binary, date, dateTime, password, callback);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEndpointParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Dart\nDESCRIPTION: This snippet shows how to update an existing pet using the updatePet method. It requires OAuth2 authentication and accepts a Pet object as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.updatePet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing User Logout with Swagger C# Client\nDESCRIPTION: This example demonstrates how to use the UserApi from a Swagger-generated C# client to log out the current user. The code creates an instance of UserApi and calls the LogoutUser method with exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the PetApi. It sets up OAuth2 authentication, creates a list of status values to filter by, and calls the findPetsByStatus method. The result is a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in Java using Swagger Client\nDESCRIPTION: This code snippet shows how to log in a user using the Swagger client in Java. It initializes a UserApi instance, specifies a username and password, calls the loginUser method, and prints the result. Error handling for API exceptions is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet from Store in C#\nDESCRIPTION: Example code demonstrating pet deletion with OAuth2 authentication. Requires a pet ID and optional API key, sending a DELETE request to /pet/{petId}.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java using StoreApi\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It requires an Order object as input and returns the created Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Return Model Properties in Swagger\nDESCRIPTION: This snippet defines the properties of the 'Return' model in Swagger. It specifies a single optional integer property named '_Return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Return\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** |  | [optional] \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java using FakeApi\nDESCRIPTION: This snippet demonstrates how to call the testEnumParameters method of the FakeApi class. It includes various enum parameters for form, header, and query, with different data types such as string arrays, strings, integers, and doubles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Order in Java\nDESCRIPTION: Example of placing a new order for a pet using the Store API. Accepts an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Swagger Pet API in Java\nDESCRIPTION: Demonstrates how to update a pet's name and status using form data. Uses OAuth2 authentication and handles API exceptions. Requires petId as mandatory parameter while name and status are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading Swagger Codegen CLI JAR for Windows using PowerShell\nDESCRIPTION: PowerShell command to download the Swagger Codegen CLI JAR file for Windows users using Invoke-WebRequest.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/prerequisites.md#2025-04-20_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-WebRequest -OutFile swagger-codegen-cli.jar https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.44/swagger-codegen-cli-2.4.44.jar\n```\n\n----------------------------------------\n\nTITLE: Updating a User with Java REST Assured\nDESCRIPTION: This code example shows how to update a user's information using the REST Assured library in Java. It sets up the API client and sends a PUT request with the username as a path parameter and the updated user object in the body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.updateUser()\n    .usernamePath(username)\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to update an existing pet using the PetApi. It requires OAuth2 authentication and accepts a Pet object as input. The method returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\napiInstance.updatePet(body).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet with PetApi in Java\nDESCRIPTION: Example of how to update an existing pet in the store using the PetApi. It demonstrates OAuth2 authentication setup, creating a Pet object with updated details, and handling API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using PetApi in Java\nDESCRIPTION: This example shows how to update an existing pet's details using the updatePet method from the PetApi class. It requires a complete Pet object with updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID in Go\nDESCRIPTION: This function retrieves a single pet by its ID. It requires the pet's ID as input and returns a Pet object. The request is made via HTTP GET to the /pet/{petId} endpoint and uses API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\nfunc GetPetById(ctx context.Context, petId int64) (Pet, error)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags with C# API Client\nDESCRIPTION: Example showing how to find pets by tags using the PetApi.FindPetsByTags method. The code sets up OAuth2 authentication, creates a list of tag strings to filter by, and handles the list of Pet objects returned by the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByTagsExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var tags = new List<string>(); // List<string> | Tags to filter by\n\n            try\n            {\n                // Finds Pets by tags\n                List&lt;Pet&gt; result = apiInstance.FindPetsByTags(tags);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using PetApi in Java\nDESCRIPTION: This snippet shows how to upload an image for a pet using the PetApi. It initializes the API client, sets up OAuth2 authentication, and calls the uploadFile method with the pet's ID, additional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID in Dart\nDESCRIPTION: This code demonstrates how to retrieve a pet by its ID. It requires API key authentication and returns a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to return\n\ntry { \n    var result = api_instance.getPetById(petId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->getPetById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID with C# Swagger Client\nDESCRIPTION: Example of using the PetApi.GetPetById method to retrieve a specific pet by its ID. The code configures API key authentication, initializes the PetApi client, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetPetByIdExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to return\n\n            try\n            {\n                // Find pet by ID\n                Pet result = apiInstance.GetPetById(petId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.GetPetById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Single User with the Petstore API in Python\nDESCRIPTION: Example demonstrating how to create a user in the Petstore API. The code creates an instance of the UserApi class and calls the create_user method with a User object. Error handling is included via the ApiException class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = petstore_api.User() # User | Created user object\n\ntry:\n    # Create user\n    api_instance.create_user(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding pets by status in the Petstore API in Python\nDESCRIPTION: This code demonstrates how to retrieve pets filtered by their status. Multiple status values can be provided as a comma-separated list. The function returns a list of Pet objects that match the specified status criteria and requires OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nstatus = ['status_example'] # list[str] | Status values that need to be considered for filter\n\ntry:\n    # Finds Pets by status\n    api_response = api_instance.find_pets_by_status(status)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->find_pets_by_status: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Kotlin\nDESCRIPTION: Example illustrating how to find pets by their status using the findPetsByStatus method. Multiple status values can be provided as an array of strings, and the method returns an array of Pet objects matching the criteria.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval status : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Status values that need to be considered for filter\ntry {\n    val result : kotlin.Array<Pet> = apiInstance.findPetsByStatus(status)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#findPetsByStatus\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#findPetsByStatus\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory Status - Java Implementation\nDESCRIPTION: Example demonstrating how to fetch pet inventory quantities by status. Requires API key authentication and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Ruby\nDESCRIPTION: Example code showing how to upload an image for a pet using the Petstore Ruby client. It requires a pet ID and accepts optional additional metadata and file parameters. The example demonstrates OAuth2 authorization setup and handling API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\npet_id = 789 # Integer | ID of pet to update\n\nopts = { \n  additional_metadata: 'additional_metadata_example', # String | Additional data to pass to server\n  file: File.new('/path/to/file.txt') # File | file to upload\n}\n\nbegin\n  #uploads an image\n  result = api_instance.upload_file(pet_id, opts)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->upload_file: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Defining Category Properties in Swagger/OpenAPI\nDESCRIPTION: Specifies the properties of a Category object using Swagger/OpenAPI markdown format. Includes an optional Long id and an optional String name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates how to create a new user using the UserApi. It requires a User object as input and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Petstore using Java Swagger Client\nDESCRIPTION: Example code demonstrating how to add a new pet to the store using the PetApi with OAuth2 authentication. This snippet initializes the API client, configures authentication, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in Java using Swagger Client\nDESCRIPTION: Example of creating multiple users by providing an array of User objects using the Swagger API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet shows how to update an existing pet using the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.updatePet(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Dart\nDESCRIPTION: This snippet shows how to find pets by their tags. It accepts a list of tag values and returns a list of Pet objects. OAuth2 authentication is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar tags = []; // List<String> | Tags to filter by\n\ntry { \n    var result = api_instance.findPetsByTags(tags);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByTags: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This code demonstrates how to find pets by their tags using the PetApi. It sets up OAuth2 authentication, creates a list of tags to filter by, and calls the findPetsByTags method. The result is a list of Pet objects that match the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID with PetApi in Java\nDESCRIPTION: Example of how to retrieve a specific pet by its ID using the PetApi. It demonstrates API key authentication setup, specifying the pet ID to retrieve, and handling the returned Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Swagger Codegen Maven Plugin in pom.xml\nDESCRIPTION: This XML snippet shows how to add the Swagger Codegen Maven Plugin to your project's pom.xml file. It includes basic configuration options such as the input specification file, target language, and output directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen-maven-plugin/README.md#2025-04-20_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<plugin>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-codegen-maven-plugin</artifactId>\n    <version>2.3.1</version>\n    <executions>\n        <execution>\n            <goals>\n                <goal>generate</goal>\n            </goals>\n            <configuration>\n                <inputSpec>${project.basedir}/src/main/resources/api.yaml</inputSpec>\n                <language>java</language>\n                <configOptions>\n                   <sourceFolder>src/gen/java/main</sourceFolder>\n                </configOptions>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Go\nDESCRIPTION: This function updates an existing pet in the store. It requires a Pet object as input and uses OAuth2 authentication. The request is made via HTTP PUT to the /pet endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\nfunc UpdatePet(ctx context.Context, body Pet) error\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID in Rust\nDESCRIPTION: Implements the get_pet_by_id API endpoint that retrieves a pet by its ID. Requires pet_id parameter and api_key authorization. Returns a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: rust\nCODE:\n```\n# **get_pet_by_id**\n> ::models::Pet get_pet_by_id(ctx, pet_id)\nFind pet by ID\n\nReturns a single pet\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **pet_id** | **i64**| ID of pet to return | \n\n### Return type\n\n[**::models::Pet**](Pet.md)\n\n### Authorization\n\n[api_key](../README.md#api_key)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Swagger Petstore API using C#\nDESCRIPTION: This snippet demonstrates how to retrieve a user's information by their username. It initializes the UserApi, specifies a username, and calls the GetUserByName method. The result is a User object containing the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetUserByNameExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be fetched. Use user1 for testing.\n\n            try\n            {\n                // Get user by user name\n                User result = apiInstance.GetUserByName(username);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.GetUserByName: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using PetApi in Dart\nDESCRIPTION: This example shows how to update an existing pet using the updatePet method of the PetApi class. It requires OAuth2 authentication and accepts a Pet object as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.updatePet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to use the deletePet method of the PetApi class to remove a pet from the store. It requires OAuth2 authentication, a pet ID, and an optional API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | Pet id to delete\n\nlet opts = { \n  'apiKey': \"apiKey_example\" // String | \n};\n\napiInstance.deletePet(petId, opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Updating a User's Information in Kotlin\nDESCRIPTION: Updates an existing user's information. This operation can only be performed by logged-in users. The example shows how to call the updateUser method with a username and updated User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | name that need to be deleted\nval body : User =  // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#updateUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#updateUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean Types in Python with Swagger API\nDESCRIPTION: Demonstrates how to test serialization of outer boolean types using the Fake API. Creates an API instance, sends a boolean value as a post body, and handles the response or exception.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterBoolean() # OuterBoolean | Input boolean as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_boolean_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_boolean_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Basic API Usage Example\nDESCRIPTION: Example showing how to use the Swagger Petstore API client to make API calls.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/README.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar api = new SwaggerPetstore.AnotherFakeApi()\n\nvar body = new SwaggerPetstore.Client(); // {Client} client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.testSpecialTags(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java Swagger Client\nDESCRIPTION: Shows how to use the updatePet method to update an existing pet's information. Requires OAuth2 authentication and accepts a complete Pet object that replaces the existing pet data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Name in Java\nDESCRIPTION: Retrieves user details by username. Returns User object with full user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Kotlin\nDESCRIPTION: Example showing how to upload an image file for a pet. This method requires the pet's ID, and accepts optional additional metadata and a file parameter for the image to be uploaded. It returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet to update\nval additionalMetadata : kotlin.String = additionalMetadata_example // kotlin.String | Additional data to pass to server\nval file : java.io.File = /path/to/file.txt // java.io.File | file to upload\ntry {\n    val result : ApiResponse = apiInstance.uploadFile(petId, additionalMetadata, file)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#uploadFile\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#uploadFile\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring and Using FakeClassnameTags123Api in Java\nDESCRIPTION: This snippet demonstrates how to configure the API client, set up authentication, and make a call to the testClassname endpoint. It includes error handling and shows how to process the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: This code snippet shows how to create multiple users using an array input with the Swagger client in Java. It initializes a UserApi instance, creates a list of User objects, and calls the createUsersWithArrayInput method. Error handling for API exceptions is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Multiple Parameter Types in Python with Swagger API\nDESCRIPTION: Shows how to call an endpoint with various parameter types for testing. Includes required parameters (number, double, pattern, byte) and optional parameters (integer, int32, int64, float, string, binary, date, datetime, password, callback).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure HTTP basic authorization: http_basic_test\nconfiguration = petstore_api.Configuration()\nconfiguration.username = 'YOUR_USERNAME'\nconfiguration.password = 'YOUR_PASSWORD'\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in C#\nDESCRIPTION: This example demonstrates how to create multiple users using a list input. Similar to the array input method, it accepts a List<User> parameter and returns no value. The method includes exception handling to catch any errors during execution.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithListInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithListInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithListInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Swagger API in Dart\nDESCRIPTION: Example code for creating a new user using the UserApi class. This operation can only be performed by a logged-in user and requires a User object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = new User(); // User | Created user object\n\ntry { \n    api_instance.createUser(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Place Pet Order Example - Python\nDESCRIPTION: Shows how to place a new order for a pet using the Petstore API. Accepts an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\nbody = petstore_api.Order() # Order | order placed for purchasing the pet\n\ntry:\n    # Place an order for a pet\n    api_response = api_instance.place_order(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->place_order: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Generating Client Libraries for Different Languages\nDESCRIPTION: Example shell commands to generate Petstore client libraries for different programming languages including Android, Java, and Objective-C using provided convenience scripts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n./bin/android-petstore.sh\n./bin/java-petstore.sh\n./bin/objc-petstore.sh\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the Pet model including their types, descriptions, and optionality. The model contains identification, categorization, naming, photo URLs, tagging, and status information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Swagger Java Client\nDESCRIPTION: Example of updating a pet's name and status using form data. Uses OAuth2 authentication and handles API exceptions. Requires pet ID and optional name/status parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Java\nDESCRIPTION: This example shows how to update an existing user's information by providing their username and a User object with the updated details. This operation can only be performed by an authenticated user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates how to log out the current user in SwaggerPetstore. It uses the logoutUser method of the UserApi class, which doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\napiInstance.logoutUser((error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Slim Framework with Composer\nDESCRIPTION: Command to install Slim Framework version 3.0 or newer using Composer package manager. Requires PHP 5.5.0 or newer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/slim/slim/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ composer require slim/slim \"^3.0\"\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This snippet shows how to find pets by their tags using the PetApi. It sets up OAuth2 authentication, creates a list of tags to filter by, and calls the findPetsByTags method. The result is a list of Pet objects matching the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic FastRoute Usage Example in PHP\nDESCRIPTION: Complete example demonstrating how to use FastRoute in a PHP application. It shows route definition, HTTP method and URI processing, and handling different dispatch results including 404 Not Found, 405 Method Not Allowed, and successful route matches.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nrequire '/path/to/vendor/autoload.php';\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/users', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It sets up OAuth2 authentication, specifies the pet ID to delete, and calls the deletePet method. The code handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Pet to Store - Kotlin Implementation\nDESCRIPTION: Example code showing how to add a new pet to the store using the PetApi client. Handles both client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval body : Pet =  // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#addPet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#addPet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading a File with Progress Tracking in Swift using Alamofire\nDESCRIPTION: This snippet shows how to upload a file with progress tracking using Alamofire. It demonstrates handling progress updates and dispatching UI updates to the main queue.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_25\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.upload(.POST, \"https://httpbin.org/post\", file: fileURL)\n         .progress { bytesWritten, totalBytesWritten, totalBytesExpectedToWrite in\n             print(totalBytesWritten)\n\n             // This closure is NOT called on the main queue for performance\n             // reasons. To update your ui, dispatch to the main queue.\n             dispatch_async(dispatch_get_main_queue()) {\n                 print(\"Total bytes written on main queue: \\(totalBytesWritten)\")\n             }\n         }\n         .validate()\n         .responseJSON { response in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: User Login in Dart\nDESCRIPTION: Example of how to log a user into the system by providing their username and password.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The user name for login\nvar password = password_example; // String | The password for login in clear text\n\ntry { \n    var result = api_instance.loginUser(username, password);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->loginUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using the PetApi in SwaggerClient-php\nDESCRIPTION: Complete example showing how to use the PetApi to add a new pet to the store, including OAuth2 configuration, instantiating the API client, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$body = new \\Swagger\\Client\\Model\\Pet(); // \\Swagger\\Client\\Model\\Pet | Pet object that needs to be added to the store\n\ntry {\n    $apiInstance->addPet($body);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->addPet: ', $e->getMessage(), PHP_EOL;\n}\n\n?>\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status with Java\nDESCRIPTION: Example Java code showing how to find pets by their status in the Swagger Petstore. The code configures OAuth2 authentication, creates a list of status values to filter by, and handles the response containing matching Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in the Petstore API using Go\nDESCRIPTION: Function for creating a new user in the system. This operation requires authentication and accepts a User object as input. The function takes a context for authentication and request handling, along with the user data to create.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nCreateUser(ctx, body)\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Kotlin\nDESCRIPTION: Creates a new user in the system. This operation can only be performed by logged in users. Takes a User object as input and handles both client and server errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval body : User =  // User | Created user object\ntry {\n    apiInstance.createUser(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Kotlin\nDESCRIPTION: Example of how to update an existing pet using the PetApi class. The snippet demonstrates creating an instance of PetApi, defining a Pet object with updated information, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval body : Pet =  // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#updatePet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#updatePet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data in C# using Swagger-generated Client\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It requires the pet's ID and optionally accepts updated name and status. The method uses OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java using FakeApi\nDESCRIPTION: This example demonstrates how to use the testEndpointParameters method of FakeApi to test various parameter types. It shows how to set up authentication, create a FakeApi instance, prepare different types of parameters, and call the method while handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger Petstore API using Java\nDESCRIPTION: This code snippet illustrates how to create multiple users at once using an array input. It demonstrates the use of the createUsersWithArrayInput method from the UserApi class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username in C# with Swagger\nDESCRIPTION: Example of retrieving a user's details by their username. Makes a GET request to /user/{username} endpoint and returns a User object. Includes test user suggestion.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetUserByNameExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be fetched. Use user1 for testing.\n\n            try\n            {\n                // Get user by user name\n                User result = apiInstance.GetUserByName(username);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.GetUserByName: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Dart\nDESCRIPTION: This code demonstrates how to find pets by their status. It accepts a list of status values and returns a list of Pet objects. OAuth2 authentication is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar status = []; // List<String> | Status values that need to be considered for filter\n\ntry { \n    var result = api_instance.findPetsByStatus(status);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByStatus: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It requires OAuth2 authentication and accepts a pet ID as a parameter. An optional API key can be provided. The method returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | Pet id to delete\n\nlet opts = { \n  'apiKey': \"apiKey_example\" // String | \n};\napiInstance.deletePet(petId, opts).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using Swagger Petstore API in JavaScript\nDESCRIPTION: This snippet shows how to place an order for a pet. It uses the SwaggerPetstore.StoreApi instance to call the placeOrder method. The body parameter is required and should be an Order object. The method returns the created Order object which is logged to the console on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar body = new SwaggerPetstore.Order(); // Order | order placed for purchasing the pet\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.placeOrder(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet illustrates how to update an existing user's information in the Swagger Petstore. It shows the usage of the updateUser method, which requires a username and updated User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information Using Form Data - Java\nDESCRIPTION: Example showing how to update a pet's name and status using form data. Uses OAuth2 authentication and handles API exceptions. Requires petId as mandatory parameter while name and status are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID in Objective-C\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the SWGPetApi. It requires either API key or OAuth2 authentication and accepts a pet ID. The method returns a single SWGPet object and uses a completion handler to handle the response and errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: Objective-C\nCODE:\n```\n-(NSURLSessionTask*) getPetByIdWithPetId: (NSNumber*) petId\n        completionHandler: (void (^)(SWGPet* output, NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Implementing TestEndpointParameters Method in C#\nDESCRIPTION: Example of using the TestEndpointParameters method from the FakeApi. This endpoint tests various parameter types and demonstrates how to set up HTTP basic authentication with the client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEndpointParametersExample\n    {\n        public void main()\n        {\n            // Configure HTTP basic authorization: http_basic_test\n            Configuration.Default.Username = \"YOUR_USERNAME\";\n            Configuration.Default.Password = \"YOUR_PASSWORD\";\n\n            var apiInstance = new FakeApi();\n            var number = 8.14;  // decimal? | None\n            var _double = 1.2;  // double? | None\n            var patternWithoutDelimiter = patternWithoutDelimiter_example;  // string | None\n            var _byte = B;  // byte[] | None\n            var integer = 56;  // int? | None (optional) \n            var int32 = 56;  // int? | None (optional) \n            var int64 = 789;  // long? | None (optional) \n            var _float = 3.4;  // float? | None (optional) \n            var _string = _string_example;  // string | None (optional) \n            var binary = B;  // byte[] | None (optional) \n            var date = 2013-10-20;  // DateTime? | None (optional) \n            var dateTime = 2013-10-20T19:20:30+01:00;  // DateTime? | None (optional) \n            var password = password_example;  // string | None (optional) \n            var callback = callback_example;  // string | None (optional) \n\n            try\n            {\n                // Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n                apiInstance.TestEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, _string, binary, date, dateTime, password, callback);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEndpointParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Objective-C\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the SWGPetApi. It requires OAuth2 authentication and accepts a SWGPet object as input. The method returns void and uses a completion handler to handle errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: Objective-C\nCODE:\n```\n-(NSURLSessionTask*) addPetWithBody: (SWGPet*) body\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet using PetApi in Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It includes setting up the API client, configuring OAuth2 authentication, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Objective-C\nDESCRIPTION: This snippet shows how to update an existing pet using the SWGPetApi. It requires OAuth2 authentication and accepts a SWGPet object as input. The method returns void and uses a completion handler to handle errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: Objective-C\nCODE:\n```\n-(NSURLSessionTask*) updatePetWithBody: (SWGPet*) body\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Objective-C\nDESCRIPTION: Example illustrating how to upload an image for a pet in the Swagger PetStore API. The code configures OAuth2 authentication, sets up pet ID, optional metadata and file parameters, and calls the uploadFile method with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) uploadFileWithPetId: (NSNumber*) petId\n    additionalMetadata: (NSString*) additionalMetadata\n    file: (NSURL*) file\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nSWGDefaultConfiguration *apiConfig = [SWGDefaultConfiguration sharedConfig];\n\n// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n\n\nNSNumber* petId = @789; // ID of pet to update\nNSString* additionalMetadata = @\"additionalMetadata_example\"; // Additional data to pass to server (optional)\nNSURL* file = [NSURL fileURLWithPath:@\"/path/to/file.txt\"]; // file to upload (optional)\n\nSWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n\n// uploads an image\n[apiInstance uploadFileWithPetId:petId\n              additionalMetadata:additionalMetadata\n              file:file\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGPetApi->uploadFile: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status using Swagger Store API in Dart\nDESCRIPTION: This example shows how to get pet inventories grouped by status. It requires API key authorization and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new StoreApi();\n\ntry { \n    var result = api_instance.getInventory();\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getInventory: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data in Java using Swagger Codegen\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the Swagger Codegen generated client. It sets up OAuth2 authentication, creates a PetApi instance, and calls the updatePetWithForm method with the pet's ID, name, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Swagger-generated Java Client\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the PetApi. It configures OAuth2 authentication, sets up the API client, and calls the updatePetWithForm method with the pet's ID, name, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Example of Swagger Petstore SDK\nDESCRIPTION: Example showing how to initialize the SDK and make an API call using the AnotherFakeApi endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/README.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar api = new SwaggerPetstore.AnotherFakeApi()\n\nvar body = new SwaggerPetstore.Client(); // {Client} client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napi.testSpecialTags(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input - Java\nDESCRIPTION: Example code demonstrating how to create multiple users at once using an array input. Takes a List<User> as input parameter and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates creating multiple users using a list input in SwaggerPetstore. It utilizes the createUsersWithListInput method of the UserApi class, passing a list of User objects as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\n\napiInstance.createUsersWithListInput(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image with Java Swagger Client\nDESCRIPTION: Example demonstrating how to upload an image file for a pet. Shows OAuth2 authentication setup, file handling, and processing the API response. Requires petId parameter, with optional additionalMetadata and file upload support.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Java using StoreApi\nDESCRIPTION: This snippet shows how to get pet inventories by status. It uses the StoreApi class with API key authorization. The method returns a Map of status codes to quantities and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in Petstore API using Ruby\nDESCRIPTION: This snippet shows how to log a user into the system using the Petstore API. It calls the login_user method of the UserApi class with username and password parameters, returning a session token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nusername = 'username_example' # String | The user name for login\n\npassword = 'password_example' # String | The password for login in clear text\n\n\nbegin\n  #Logs user into the system\n  result = api_instance.login_user(username, password)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->login_user: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Authentication Example\nDESCRIPTION: Example demonstrating OAuth2 authentication using access tokens directly.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/go/README.md#2025-04-20_snippet_2\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextAccessToken, \"ACCESSTOKENSTRING\")\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Updating User Information - Java\nDESCRIPTION: Example code for updating user information. Requires username and updated User object as parameters. Can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Properties in Markdown\nDESCRIPTION: Specifies the properties of a Pet object, including id, category, name, photoUrls, tags, and status. Each property is defined with its name, type, description, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using PHP Swagger Client\nDESCRIPTION: This code snippet shows how to update an existing pet in the store using the Swagger PHP client. It requires OAuth2 authentication and accepts a Pet object containing the updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$body = new \\Swagger\\Client\\Model\\Pet(); // \\Swagger\\Client\\Model\\Pet | Pet object that needs to be added to the store\n\ntry {\n    $apiInstance->updatePet($body);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->updatePet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using PetApi in Dart\nDESCRIPTION: This example demonstrates how to add a new pet to the store using the addPet method of the PetApi class. It requires OAuth2 authentication and accepts a Pet object as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger Petstore API\nDESCRIPTION: Example showing how to create multiple users using the list input endpoint. Similar to the array input method, this endpoint accepts a list of User objects to create multiple users in a single request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\napiInstance.createUsersWithListInput(body).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory with C# Client\nDESCRIPTION: Example of using the C# client to retrieve pet inventory quantities by status. This code shows how to configure API key authorization, initialize the StoreApi client, and call the GetInventory method, including exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            \n            // Configure API key authorization: api_key\n            Configuration.Default.ApiKey.Add(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary&lt;string, int?&gt; result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User in Kotlin\nDESCRIPTION: Updates an existing user's information. This operation can only be performed by logged in users. Takes username and updated User object as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | name that need to be deleted\nval body : User =  // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#updateUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#updateUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in C# with Swagger API\nDESCRIPTION: Example of creating a single user via the API. This endpoint creates a new user and can only be executed by an authenticated user. Takes a User object as input and returns no content.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing a Pet Order in C# using Swagger API\nDESCRIPTION: This code shows how to place a new order for a pet. The example initializes the StoreApi client, creates an Order object, and passes it to the PlaceOrder method. It demonstrates how to handle the Order response object returned by the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID - Java Implementation\nDESCRIPTION: Example showing how to retrieve a purchase order by its ID. Valid for integer IDs <= 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java Swagger Client\nDESCRIPTION: Example code demonstrating how to find pets by tags using the PetApi with OAuth2 authentication. Multiple tags can be provided as comma-separated strings, and the method returns a list of matching Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates how to create a new user using the UserApi class. It shows the process of instantiating the API, creating a User object, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in FakeApi Java\nDESCRIPTION: Example of using the testClientModel endpoint to test the \"client\" model. This snippet shows how to create a Client object, submit it to the API, and process the returned Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to update a user's information. It initializes the API instance, specifies the username to update and the updated user object, and calls the updateUser method with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | name that need to be deleted\n\nvar body = new SwaggerPetstore.User(); // User | Updated user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.updateUser(username, body, callback);\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Java using StoreApi\nDESCRIPTION: This snippet demonstrates how to fetch a purchase order using its ID. It uses the StoreApi class and handles potential ApiExceptions. The method accepts an orderId as a Long parameter and returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet - Java REST Client Implementation\nDESCRIPTION: Example code showing how to update an existing pet using the REST client. Requires pet object in request body and petstore_auth authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.updatePet()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Updating User Information with C# Swagger Client\nDESCRIPTION: Shows how to update an existing user's information using the Swagger-generated C# client. Requires username and updated user object as parameters. Includes error handling and demonstrates proper API usage patterns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data in C# using Swagger Client\nDESCRIPTION: This example demonstrates how to update a pet's information using form data. It initializes the API client with OAuth2 authentication, sets the pet ID, optional name and status, and makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Various Endpoint Parameters in Java using Swagger Client\nDESCRIPTION: Example of how to test various parameter types using the FakeApi client. Demonstrates usage with multiple parameter types including numbers, strings, binary data, dates, and more. Requires HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store with C# Swagger Client\nDESCRIPTION: Example of using the PetApi.AddPet method to add a new pet to the Swagger Petstore. The code configures OAuth2 authentication, initializes the PetApi client, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data using PHP\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data via the Pet API. It requires an OAuth2 access token for authorization and uses the Swagger\\Client\\Api\\PetApi class to make the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$pet_id = 789; // int | ID of pet that needs to be updated\n$name = \"name_example\"; // string | Updated name of the pet\n$status = \"status_example\"; // string | Updated status of the pet\n\ntry {\n    $apiInstance->updatePetWithForm($pet_id, $name, $status);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->updatePetWithForm: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java Swagger Client\nDESCRIPTION: Demonstrates how to use the findPetsByStatus method to retrieve pets based on their status (available, pending, or sold). Returns a list of Pet objects that match the specified status values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an order for a pet using JavaScript\nDESCRIPTION: Example of placing an order for a pet using the Swagger Petstore Store API. This snippet demonstrates how to initialize the API client, create an Order object, and handle the response data which returns the created Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar body = new SwaggerPetstore.Order(); // Order | order placed for purchasing the pet\n\napiInstance.placeOrder(body).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a user's information by their username. It initializes the API instance, specifies the username to fetch, and calls the getUserByName method with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getUserByName(username, callback);\n```\n\n----------------------------------------\n\nTITLE: Using the API in an Angular Component\nDESCRIPTION: TypeScript code demonstrating how to inject and use the DefaultApi service in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in C# with Swagger API\nDESCRIPTION: Retrieves user information by username. Returns a User object containing the user's details. For testing purposes, 'user1' can be used as a sample username.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetUserByNameExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be fetched. Use user1 for testing.\n\n            try\n            {\n                // Get user by user name\n                User result = apiInstance.GetUserByName(username);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.GetUserByName: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store with C# Swagger Client\nDESCRIPTION: Example of using the PetApi.DeletePet method to remove a pet from the Swagger Petstore. The code configures OAuth2 authentication, initializes the PetApi client, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Dart API\nDESCRIPTION: Example of how to create a new user using the User API. This can only be done by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = new User(); // User | Created user object\n\ntry { \n    api_instance.createUser(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories in Java\nDESCRIPTION: This snippet shows how to get pet inventories by status using the StoreApi. It configures API key authentication and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java using FakeApi\nDESCRIPTION: This snippet demonstrates how to use the testEnumParameters method of the FakeApi class. It shows the process of setting up various enum parameters and making an API call, including error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Java\nDESCRIPTION: Example of fetching a user's details by their username. Returns User object and handles ApiException for errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Rust\nDESCRIPTION: Implements the find_pets_by_tags API endpoint that searches for pets by tags. Requires tags as parameters and returns a vector of Pet objects. Requires petstore_auth authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\n# **find_pets_by_tags**\n> Vec<::models::Pet> find_pets_by_tags(ctx, tags)\nFinds Pets by tags\n\nMultiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **tags** | [**Vec&lt;String&gt;**](String.md)| Tags to filter by | \n\n### Return type\n\n[**Vec<::models::Pet>**](Pet.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: User Login - Java\nDESCRIPTION: Example code for user login functionality. Takes username and password as parameters and returns a string token upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to find pets by status using the PetApi. It requires OAuth2 authentication and accepts an array of status values as a parameter. The method returns an array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet status = [\"status_example\"]; // [String] | Status values that need to be considered for filter\n\napiInstance.findPetsByStatus(status).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet with C# API Client\nDESCRIPTION: Example showing how to delete a pet from the store using the PetApi.DeletePet method. The code sets up OAuth2 authentication, specifies the pet ID to delete, and includes an optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: Example demonstrates creating multiple users at once using an array as input. It initializes a list of User objects and passes them to the createUsersWithArrayInput method with proper exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image - Java\nDESCRIPTION: Example demonstrating how to upload an image file for a pet. Includes optional additional metadata and uses OAuth2 authentication. Returns a ModelApiResponse object containing the upload result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nAsyncFile file = new AsyncFile(); // AsyncFile | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to retrieve a user's information by their username. It demonstrates the use of the getUserByName method and how to handle the returned User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking test_body_with_query_params in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the test_body_with_query_params endpoint which requires both a request body and query parameters. This example creates an API instance, makes the call with required User body and query parameters, and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.User() # User | \nquery = 'query_example' # str | \n\ntry:\n    api_instance.test_body_with_query_params(body, query)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_body_with_query_params: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path Using NgModule\nDESCRIPTION: TypeScript code for setting a custom base path for the API service in an Angular module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using FakeClassnameTags123Api in Java\nDESCRIPTION: This snippet demonstrates how to initialize the ApiClient, configure API key authorization, and make a call to the testClassname method of FakeClassnameTags123Api. It includes error handling and prints the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Java\nDESCRIPTION: Example of authenticating a user with username and password. Returns a String token and handles ApiException for authentication failures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Login User Example in C#\nDESCRIPTION: Example code showing how to log a user into the system. Takes username and password strings as input and returns a string token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Swagger Petstore API\nDESCRIPTION: Creates a new user in the system. This operation can only be performed by logged in users. Takes a User object as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = new SwaggerPetstore.User(); // User | Created user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.createUser(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Getting Store Inventory Information in Go\nDESCRIPTION: Gets the store inventory with a status code to quantities mapping. This endpoint requires API key authorization and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **GetInventory**\n> map[string]int32 GetInventory(ctx, )\nReturns pet inventories by status\n\nReturns a map of status codes to quantities\n\n### Required Parameters\nThis endpoint does not need any parameter.\n\n### Return type\n\n**map[string]int32**\n\n### Authorization\n\n[api_key](../README.md#api_key)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID with the Swagger Client API in Java\nDESCRIPTION: Example of how to use the getPetById method of the PetApi class to find a pet by its ID. This code shows API key authentication setup and handling the returned Pet object or API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Dart\nDESCRIPTION: This code demonstrates how to update a pet's information using form data. It requires OAuth2 authentication and accepts the pet's ID, name, and status as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet that needs to be updated\nvar name = name_example; // String | Updated name of the pet\nvar status = status_example; // String | Updated status of the pet\n\ntry { \n    api_instance.updatePetWithForm(petId, name, status);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePetWithForm: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to get a pet by ID using the PetApi. It requires API key authentication and accepts a pet ID as a parameter. The method returns a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nlet api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet to return\n\napiInstance.getPetById(petId).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger ASP.NET Core Server with Docker\nDESCRIPTION: Commands to build and run the Swagger-generated ASP.NET Core server as a Docker container. This process includes navigating to the source directory, building a Docker image, and running the container with port mapping.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd src/IO.Swagger\ndocker build -t io.swagger .\ndocker run -p 5000:5000 io.swagger\n```\n\n----------------------------------------\n\nTITLE: User Login in Swagger Petstore API\nDESCRIPTION: Authenticates a user in the system. Takes username and password as input and returns a string token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The user name for login\n\nvar password = \"password_example\"; // String | The password for login in clear text\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.loginUser(username, password, callback);\n```\n\n----------------------------------------\n\nTITLE: Downloading Swagger Codegen CLI JAR for Linux/macOS\nDESCRIPTION: Commands to download the Swagger Codegen CLI JAR file for both version 2.x.x (Swagger and OpenAPI v2) and 3.x.x (OpenAPI v3) branches using wget, and instructions to run the JAR file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/prerequisites.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Download current stable 2.x.x branch (Swagger and OpenAPI version 2)\nwget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.44/swagger-codegen-cli-2.4.44.jar -O swagger-codegen-cli.jar\n\njava -jar swagger-codegen-cli.jar help\n\n# Download current stable 3.x.x branch (OpenAPI version 3)\nwget https://repo1.maven.org/maven2/io/swagger/codegen/v3/swagger-codegen-cli/3.0.65/swagger-codegen-cli-3.0.65.jar -O swagger-codegen-cli.jar\n\njava -jar swagger-codegen-cli.jar --help\n```\n\n----------------------------------------\n\nTITLE: Uploading Files with Swagger Petstore API in JavaScript\nDESCRIPTION: Demonstrates how to upload a file to the Swagger Petstore API using the JavaScript client. Includes OAuth2 authentication setup, file upload parameters, and response handling. The example shows uploading a file with optional metadata for a specific pet ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet to update\n\nlet opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\n\napiInstance.uploadFile(petId, opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Order using Swagger Petstore Store API in JavaScript\nDESCRIPTION: Places a new order for a pet in the store. Requires an Order object containing the order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\nlet body = new SwaggerPetstore.Order(); // Order | order placed for purchasing the pet\n\n\napiInstance.placeOrder(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger Petstore API with JavaScript\nDESCRIPTION: Example showing how to create a new user using the Swagger Petstore API. This operation can only be performed by a logged-in user and requires a User object to be passed in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = new SwaggerPetstore.User(); // User | Created user object\n\napiInstance.createUser(body).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication\nDESCRIPTION: Authenticates user login with username and password. Returns a string token upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Rust\nDESCRIPTION: Implements the add_pet API endpoint that adds a new pet to the store. Requires Pet object in the request body and petstore_auth authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\n# **add_pet**\n> add_pet(ctx, body)\nAdd a new pet to the store\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **body** | [**Pet**](Pet.md)| Pet object that needs to be added to the store | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: application/json, application/xml\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Implementing loginUser Method in PHP\nDESCRIPTION: Example implementation of the loginUser method in the UserApi class. This method logs a user into the system using their username and password.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#loginUser\n     */\n    public function loginUser($username, $password)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory Status using Swagger Petstore API in JavaScript\nDESCRIPTION: Example of how to get pet inventories by status using the Swagger Petstore JavaScript client. This endpoint returns a map of status codes to quantities and requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nlet api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\napiInstance.getInventory().then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Updating User in Swagger API\nDESCRIPTION: Example code for updating user information. Requires username and updated User object as parameters. This operation can only be performed by authenticated users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | name that need to be deleted\nval body : User =  // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#updateUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#updateUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to use the findPetsByTags method of the PetApi class to retrieve pets based on their tags. It requires OAuth2 authentication and accepts an array of tag values as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet tags = [\"tags_example\"]; // [String] | Tags to filter by\n\n\napiInstance.findPetsByTags(tags, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags\nDESCRIPTION: Example of how to find pets by tags using the findPetsByTags() method. Multiple tags can be provided as a list.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar tags = []; // List<String> | Tags to filter by\n\ntry { \n    var result = api_instance.findPetsByTags(tags);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByTags: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using AnotherFakeApi to Test Special Tags in C#\nDESCRIPTION: This example demonstrates how to use the AnotherFakeApi's TestSpecialTags method. It creates an API instance, initializes a ModelClient object, makes the API call, and handles any exceptions that might occur during the process.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestSpecialTagsExample\n    {\n        public void main()\n        {\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Java using Swagger Client\nDESCRIPTION: Example of deleting a user by username. This operation can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Calling testClassname API Method in Java\nDESCRIPTION: Example of how to use the testClassname method from the FakeClassnameTags123Api. This code initializes the API client, configures API key authorization, and makes a request to test class name functionality with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates how to create a new user using the UserApi class. It shows the process of instantiating the API, creating a User object, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to use the uploadFile method of the PetApi class to upload an image for a pet. It requires OAuth2 authentication, a pet ID, and optional additional metadata.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet to update\nlet opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\n\napiInstance.uploadFile(petId, opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store with Python\nDESCRIPTION: Example of how to add a new pet to the store using the Petstore API. The snippet shows how to configure OAuth2 authentication, create an API instance, and call the add_pet method with a Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\nbody = petstore_api.Pet() # Pet | Pet object that needs to be added to the store\n\ntry:\n    # Add a new pet to the store\n    api_instance.add_pet(body)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->add_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with updatePet Method in Objective-C\nDESCRIPTION: Example showing how to update an existing pet in the Swagger PetStore API using Objective-C. This code configures OAuth2 authentication, initializes a pet object, and makes an API call to update the pet with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: objc\nCODE:\n```\nSWGDefaultConfiguration *apiConfig = [SWGDefaultConfiguration sharedConfig];\n\n// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n\n\nSWGPet* body = [[SWGPet alloc] init]; // Pet object that needs to be added to the store (optional)\n\nSWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n\n// Update an existing pet\n[apiInstance updatePetWithBody:body\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGPetApi->updatePet: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Swagger-generated Java Client\nDESCRIPTION: This snippet shows how to upload an image for a pet using the PetApi. It sets up OAuth2 authentication, initializes the API client, and calls the uploadFile method with the pet's ID, additional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using PetApi in Java\nDESCRIPTION: This example shows how to upload an image for a pet using the uploadFile method from the PetApi class. It supports a pet ID, optional metadata, and a file to upload, returning an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array - Java Swagger API\nDESCRIPTION: Example of creating multiple users using an array input through the Swagger API. Accepts a List of User objects and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Information in Swagger API with Perl\nDESCRIPTION: Example demonstrating how to update user information. This endpoint requires both the username of the user to update and a User object containing the updated information. Only logged-in users can perform this operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $username = 'username_example'; # string | name that need to be deleted\nmy $body = WWW::SwaggerClient::Object::User->new(); # User | Updated user object\n\neval { \n    $api_instance->update_user(username => $username, body => $body);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->update_user: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data with PetStore Ruby Client\nDESCRIPTION: Demonstrates testing JSON serialization of form data by sending two string parameters. Makes a request with application/json content type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nparam = 'param_example' # String | field1\n\nparam2 = 'param2_example' # String | field2\n\n\nbegin\n  #test json serialization of form data\n  api_instance.test_json_form_data(param, param2)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_json_form_data: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Logging in User in Swagger API\nDESCRIPTION: This endpoint logs a user into the system. It requires username and password as parameters and returns a string. No authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n# **login_user**\n> String login_user(username, password)\nLogs user into the system\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **username** | **String**| The user name for login | \n  **password** | **String**| The password for login in clear text | \n\n### Return type\n\n**String**\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Dart\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the addPet method. It requires OAuth2 authentication and accepts a Pet object as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java Swagger Client\nDESCRIPTION: Example showing how to call testEnumParameters() method with various enum parameter types including form, header, and query parameters. Demonstrates handling of string arrays, strings, integers and doubles as enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store using Kotlin\nDESCRIPTION: Example of how to add a new pet to the store using the PetApi class. The snippet demonstrates creating an instance of PetApi, defining a Pet object, and handling potential client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval body : Pet =  // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#addPet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#addPet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Petstore API using Python\nDESCRIPTION: Example showing how to create multiple users at once using the createWithArray endpoint. This code passes a list of User objects to the create_users_with_array_input method of the UserApi class, with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = [petstore_api.User()] # list[User] | List of user object\n\ntry:\n    # Creates list of users with given input array\n    api_instance.create_users_with_array_input(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_users_with_array_input: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameter Types in Java with Authentication\nDESCRIPTION: Example of using the testEndpointParameters endpoint to test various parameter types including primitives, dates, binary data, and strings. Includes HTTP basic authentication setup and handling multiple parameter types with different optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in C#\nDESCRIPTION: This snippet demonstrates how to find pets by status using the PetApi. It configures OAuth2 authentication, specifies status values to filter by, and calls the FindPetsByStatus method. The result is a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List<Pet> result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Kotlin for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a User model in Kotlin, including their types and optionality. It covers basic user information such as ID, username, name, contact details, and user status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**username** | **kotlin.String** |  |  [optional]\n**firstName** | **kotlin.String** |  |  [optional]\n**lastName** | **kotlin.String** |  |  [optional]\n**email** | **kotlin.String** |  |  [optional]\n**password** | **kotlin.String** |  |  [optional]\n**phone** | **kotlin.String** |  |  [optional]\n**userStatus** | **kotlin.Int** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in C#\nDESCRIPTION: Example code demonstrating how to search for pets by tags using the Swagger Petstore API. This code configures OAuth2 authentication, creates a PetApi instance, and calls FindPetsByTags with a list of tag strings to filter by.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByTagsExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var tags = new List<string>(); // List<string> | Tags to filter by\n\n            try\n            {\n                // Finds Pets by tags\n                List&lt;Pet&gt; result = apiInstance.FindPetsByTags(tags);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags with Python\nDESCRIPTION: Example of how to find pets by tags using the Petstore API. The snippet demonstrates OAuth2 authentication setup, API instance creation, and retrieving pets filtered by tags, returning a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\ntags = ['tags_example'] # list[str] | Tags to filter by\n\ntry:\n    # Finds Pets by tags\n    api_response = api_instance.find_pets_by_tags(tags)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->find_pets_by_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating Pet - Java Client Implementation\nDESCRIPTION: Example code demonstrating how to update an existing pet using the Java client. Requires OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input\nDESCRIPTION: Creates multiple users using a list input. Similar to array input method but accepts input as a list of User objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\napiInstance.createUsersWithListInput(body).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching a Purchase Order by ID in Java using Swagger Client\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It requires the order ID as a parameter and returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID using Java Swagger Client\nDESCRIPTION: Example code showing how to retrieve a single pet by its ID using the PetApi with API key authentication. This method returns a single Pet object and requires a Long petId parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Java\nDESCRIPTION: This code snippet shows how to get pet inventories by status. It configures API key authentication, creates a StoreApi instance, and calls the getInventory method. The result is a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Petstore Dart Client to Add a Pet\nDESCRIPTION: Dart code example demonstrating how to use the generated Swagger Petstore client to add a new pet to the store. It includes API instantiation and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/README.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nfinal swaggerGen = SwaggerGen();\nvar api_instance = swaggerGen.getPetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry {\n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Dart\nDESCRIPTION: Shows how to update a user's information. This operation can only be performed by a logged-in user. It takes a username string and a User object as inputs and returns no response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | name that need to be deleted\nvar body = new User(); // User | Updated user object\n\ntry { \n    api_instance.updateUser(username, body);\n} catch (e) {\n    print(\"Exception when calling UserApi->updateUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory Status in Java\nDESCRIPTION: Example of getting pet inventory quantities grouped by status. Requires API key authentication and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a purchase order by ID using JavaScript\nDESCRIPTION: Example of finding a purchase order by its ID using the Swagger Petstore Store API. This example shows how to initialize the API client, specify the order ID parameter, and handle the response data which returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar orderId = 789; // Number | ID of pet that needs to be fetched\n\napiInstance.getOrderById(orderId).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Perl\nDESCRIPTION: Example demonstrating how to add a new pet to the Swagger Petstore. The method requires a Pet object to be passed as the request body and uses OAuth2 for authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $body = WWW::SwaggerClient::Object::Pet->new(); # Pet | Pet object that needs to be added to the store\n\neval { \n    $api_instance->add_pet(body => $body);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->add_pet: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User in Swagger Petstore API\nDESCRIPTION: Updates an existing user's information. This operation can only be performed by logged in users. Takes a username and updated User object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | name that need to be deleted\n\nvar body = new SwaggerPetstore.User(); // User | Updated user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.updateUser(username, body, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Swagger API\nDESCRIPTION: Demonstrates how to test inline additional properties by sending a request body object parameter. The endpoint accepts JSON content type and returns an empty response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar param = null; // Object | request body\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testInlineAdditionalProperties(param, callback);\n```\n\n----------------------------------------\n\nTITLE: User Logout from Petstore API using Python\nDESCRIPTION: Example demonstrating how to log out the current user session. The code creates an instance of the UserApi class and calls the logout_user method, which requires no parameters. Includes standard error handling using ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\n\ntry:\n    # Logs out current logged in user session\n    api_instance.logout_user()\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->logout_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in Java using Swagger Client\nDESCRIPTION: Creates multiple users by passing an array of User objects. Uses List<User> as input parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User with Petstore CLI\nDESCRIPTION: This snippet illustrates how to log in a user using the Petstore CLI. It requires a username and password as input and returns a string token upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli loginUser  username=value  password=value\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders by ID in C#\nDESCRIPTION: Example code for fetching purchase orders by ID. Valid for integer IDs <= 5 or > 10. Returns an Order object with full order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Dart\nDESCRIPTION: Example code for creating multiple users at once using an array input. This method takes a List<User> object as input and creates users in bulk.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithArrayInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithArrayInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet\nDESCRIPTION: Example of how to upload an image for a pet using the uploadFile() method. Requires petId and optional additionalMetadata and file parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to update\nvar additionalMetadata = additionalMetadata_example; // String | Additional data to pass to server\nvar file = /path/to/file.txt; // MultipartFile | file to upload\n\ntry { \n    var result = api_instance.uploadFile(petId, additionalMetadata, file);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->uploadFile: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It creates an Order object, sends it to the API, and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This code demonstrates how to update an existing pet in the store using the PetApi. It configures OAuth2 authentication, creates a Pet object with updated information, and calls the updatePet method. Error handling is included for ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory Status in C#\nDESCRIPTION: Example code showing how to retrieve pet inventory quantities by status. Requires API key authentication and returns a dictionary mapping status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary<string, int?> result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in SwaggerPetstore FakeApi (JavaScript)\nDESCRIPTION: This snippet shows how to use the testInlineAdditionalProperties method of the FakeApi class. It demonstrates passing an object as a parameter and handling the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar param = null; // Object | request body\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testInlineAdditionalProperties(param, callback);\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using StoreApi in Dart\nDESCRIPTION: This example shows how to place an order for a pet using the StoreApi class. It includes error handling and expects an Order object as both input and output.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/StoreApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar body = new Order(); // Order | order placed for purchasing the pet\n\ntry { \n    var result = api_instance.placeOrder(body);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->placeOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Java PetApi\nDESCRIPTION: Example of uploading an image file for a pet using the PetApi. Demonstrates file upload with additional metadata and OAuth2 authentication. Returns a ModelApiResponse object containing the upload result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pet by ID using PHP Swagger Client\nDESCRIPTION: This code snippet demonstrates how to find a pet by its ID using the Swagger PHP client. It requires API key authentication and takes a pet ID as a parameter, returning a single Pet object if found.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure API key authorization: api_key\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKey('api_key', 'YOUR_API_KEY');\n// Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n// $config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKeyPrefix('api_key', 'Bearer');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$pet_id = 789; // int | ID of pet to return\n\ntry {\n    $result = $apiInstance->getPetById($pet_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->getPetById: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Deleting User - Java Swagger Client\nDESCRIPTION: Example of deleting a user by username. This operation can only be performed by logged in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users Using Array Input in Dart\nDESCRIPTION: Example showing how to create multiple users at once by passing an array of User objects to the UserApi.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithArrayInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithArrayInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet Implementation in Java\nDESCRIPTION: Example code demonstrating pet deletion using the PetApi client. Shows OAuth2 authentication and handling of optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Pet by ID - Kotlin Implementation\nDESCRIPTION: Example code for retrieving a single pet by its ID. Returns a Pet object if found.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet to return\ntry {\n    val result : Pet = apiInstance.getPetById(petId)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#getPetById\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#getPetById\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Files to Pet Records with Swagger Petstore JavaScript Client\nDESCRIPTION: This example demonstrates how to upload a file to a pet record using the Swagger Petstore JavaScript client. It shows OAuth2 authentication setup, API client initialization, and proper parameter passing for the uploadFile method. The function accepts a pet ID along with optional metadata and file parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet to update\n\nlet opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\napiInstance.uploadFile(petId, opts).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in C#\nDESCRIPTION: Example code for retrieving pets filtered by status using OAuth2 authentication. Accepts multiple comma-separated status values and returns a list of matching pets.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List&lt;Pet&gt; result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Swagger Client and Making API Call in Perl\nDESCRIPTION: This snippet shows how to initialize a Swagger client instance, create a Client object, and make an API call to test special tags. It also includes error handling for the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Perl\nCODE:\n```\n# for displaying the API response data\nuse Data::Dumper;\nuse WWW::SwaggerClient::;\n\nmy $api_instance = WWW::SwaggerClient::->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::Client->new(); # Client | client model\n\neval {\n    my $result = $api_instance->test_special_tags(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling AnotherFakeApi->test_special_tags: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store using Java Swagger Client\nDESCRIPTION: Demonstrates how to use the addPet method to add a new pet to the store. Includes setting up the OAuth2 authentication token and handling potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using Kotlin\nDESCRIPTION: Example of how to delete a pet from the store using the PetApi class. This snippet shows creating an instance of PetApi, specifying the pet ID to delete, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | Pet id to delete\nval apiKey : kotlin.String = apiKey_example // kotlin.String | \ntry {\n    apiInstance.deletePet(petId, apiKey)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#deletePet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#deletePet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Routes with FastRoute in PHP\nDESCRIPTION: This snippet demonstrates various ways to define routes using FastRoute, including specifying multiple HTTP methods, using placeholders with custom patterns, and defining optional route segments.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// These two calls\n$r->addRoute('GET', '/test', 'handler');\n$r->addRoute('POST', '/test', 'handler');\n// Are equivalent to this one call\n$r->addRoute(['GET', 'POST'], '/test', 'handler');\n\n// Matches /user/42, but not /user/xyz\n$r->addRoute('GET', '/user/{id:\\d+}', 'handler');\n\n// Matches /user/foobar, but not /user/foo/bar\n$r->addRoute('GET', '/user/{name}', 'handler');\n\n// Matches /user/foo/bar as well\n$r->addRoute('GET', '/user/{name:.+}', 'handler');\n\n// This route\n$r->addRoute('GET', '/user/{id:\\d+}[/{name}]', 'handler');\n// Is equivalent to these two routes\n$r->addRoute('GET', '/user/{id:\\d+}', 'handler');\n$r->addRoute('GET', '/user/{id:\\d+}/{name}', 'handler');\n\n// Multiple nested optional parts are possible as well\n$r->addRoute('GET', '/user[/{id:\\d+}[/{name}]]', 'handler');\n\n// This route is NOT valid, because optional parts can only occur at the end\n$r->addRoute('GET', '/user[/{id:\\d+}]/{name}', 'handler');\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in C#\nDESCRIPTION: Shows how to use the TestEnumParameters method of the FakeApi class. This method tests enum parameters in various locations including form data, headers, and query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEnumParametersExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var enumFormStringArray = enumFormStringArray_example;  // List<string> | Form parameter enum test (string array) (optional) \n            var enumFormString = enumFormString_example;  // string | Form parameter enum test (string) (optional)  (default to -efg)\n            var enumHeaderStringArray = enumHeaderStringArray_example;  // List<string> | Header parameter enum test (string array) (optional) \n            var enumHeaderString = enumHeaderString_example;  // string | Header parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryStringArray = enumQueryStringArray_example;  // List<string> | Query parameter enum test (string array) (optional) \n            var enumQueryString = enumQueryString_example;  // string | Query parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryInteger = 56;  // int? | Query parameter enum test (double) (optional) \n            var enumQueryDouble = 1.2;  // double? | Query parameter enum test (double) (optional) \n\n            try\n            {\n                // To test enum parameters\n                apiInstance.TestEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEnumParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates how to create a new user using the SwaggerPetstore UserApi. It initializes the API instance, creates a user object, and calls the createUser method with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = new SwaggerPetstore.User(); // User | Created user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.createUser(body, callback);\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Swagger PHP Client\nDESCRIPTION: This example shows how to authenticate a user by logging them into the system. It requires username and password parameters and returns a string response, typically a session token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$username = \"username_example\"; // string | The user name for login\n$password = \"password_example\"; // string | The password for login in clear text\n\ntry {\n    $result = $apiInstance->loginUser($username, $password);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->loginUser: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet (Go)\nDESCRIPTION: This function uploads an image for a pet. It requires the pet ID and optionally accepts additional metadata and a file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\nfunc UploadFile(ctx context.Context, petId int64, optional *PetApiUploadFileOpts) (ModelApiResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Updating Pet - Kotlin Implementation\nDESCRIPTION: Example code for updating an existing pet in the store. Takes a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval body : Pet =  // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#updatePet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#updatePet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Add Pet Implementation Example\nDESCRIPTION: PHP implementation example for adding a new pet to the store with OAuth2 authentication\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/PetApiInterface.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/PetApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\PetApiInterface;\n\nclass PetApi implements PetApiInterface\n{\n\n    /**\n     * Configure OAuth2 access token for authorization: petstore_auth\n     */\n    public function setpetstore_auth($oauthToken)\n    {\n        // Retrieve logged in user from $oauthToken ...\n    }\n\n    // ...\n\n    /**\n     * Implementation of PetApiInterface#addPet\n     */\n    public function addPet(Pet $body)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID in C#\nDESCRIPTION: Example code showing how to retrieve a specific pet by its ID using the Swagger Petstore API. This code configures API key authentication, creates a PetApi instance, and calls GetPetById with the pet's ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetPetByIdExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to return\n\n            try\n            {\n                // Find pet by ID\n                Pet result = apiInstance.GetPetById(petId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.GetPetById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to create multiple users using an array input in SwaggerPetstore. It uses the createUsersWithArrayInput method of the UserApi class, passing an array of User objects as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\n\napiInstance.createUsersWithArrayInput(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: This snippet demonstrates creating multiple users using a list input with the Swagger client in Java. It initializes a UserApi instance, creates a list of User objects, and calls the createUsersWithListInput method. The code includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Python\nDESCRIPTION: Example of logging in a user with username and password. Creates UserApi instance and sends GET request for authentication. Returns a string response and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The user name for login\npassword = 'password_example' # str | The password for login in clear text\n\ntry:\n    # Logs user into the system\n    api_response = api_instance.login_user(username, password)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->login_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating User Information with Swagger C# Client\nDESCRIPTION: This example shows how to update a user's information using the UserApi from a Swagger-generated C# client. The code creates an instance of UserApi, specifies the username and updated user object, and calls the UpdateUser method with exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using Java\nDESCRIPTION: This snippet shows how to upload an image for a pet using the PetApi. It takes a pet ID, additional metadata, and a file as parameters, then calls the uploadFile method and prints the result, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: Example of creating multiple users using a list input through the Swagger client API. Similar to array input but uses List collection.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data\nDESCRIPTION: Example of how to update a pet using form data with the updatePetWithForm() method. Requires petId and optional name and status parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet that needs to be updated\nvar name = name_example; // String | Updated name of the pet\nvar status = status_example; // String | Updated status of the pet\n\ntry { \n    api_instance.updatePetWithForm(petId, name, status);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePetWithForm: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Name - Java Swagger API\nDESCRIPTION: Example of retrieving a user by username through the Swagger API. Returns a User object and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing UploadFile in C# for Pet Store API\nDESCRIPTION: This C# example demonstrates how to upload an image file for a pet. It configures OAuth2 authentication, creates a PetApi instance, and shows proper exception handling. The code includes parameters for pet ID, additional metadata, and file upload stream.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var _file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, _file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in C#\nDESCRIPTION: This snippet shows how to update an existing pet using the PetApi. It configures OAuth2 authentication, creates a Pet object with updated information, and calls the UpdatePet method to apply the changes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Update an existing pet\n                apiInstance.UpdatePet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Java\nDESCRIPTION: This example shows how to update an existing user's information. This operation requires the username of the user to update and a User object containing the updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Swagger Order Model Properties Definition in Markdown\nDESCRIPTION: Tabular representation of the Order model properties including ID, PetID, Quantity, ShipDate, Status, and Complete. Each property is defined with its data type, description, and additional notes such as optional status and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Order\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**PetId** | **long?** |  | [optional] \n**Quantity** | **int?** |  | [optional] \n**ShipDate** | **DateTime?** |  | [optional] \n**Status** | **string** | Order Status | [optional] \n**Complete** | **bool?** |  | [optional] [default to false]\n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Updating User Information with C# Swagger Client\nDESCRIPTION: Example implementation for updating user information using a Swagger-generated C# client. The code initializes the UserApi instance, sets up the required username and user object parameters, and calls the UpdateUser method with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Code Injection Endpoint Example\nDESCRIPTION: Example of making a request to the code injection test endpoint using the FakeApi client. Shows initialization of the API instance and handling the API call with error checking.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/deep_module_test/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse Something::Deep::FakeApi;\nmy $api_instance = Something::Deep::FakeApi->new(\n);\n\nmy $test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r = 'test_code_inject_*/_\\'_\"_=end____\\r\\n_\\n_\\r_example'; # string | To test code injection */ ' \" =_end -- \\r\\n \\n \\r\n\neval { \n    $api_instance->test_code_inject____end__rn_n_r(test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r => $test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_code_inject____end__rn_n_r: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username in Java using Swagger Client\nDESCRIPTION: Example of retrieving a user's information by their username. Returns a User object containing the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Swagger Petstore API using Kotlin\nDESCRIPTION: Example code for creating a new user in the system. Requires a User object as input and handles both client and server exceptions. This operation can only be performed by authenticated users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval body : User =  // User | Created user object\ntry {\n    apiInstance.createUser(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Delete Order Example - Kotlin\nDESCRIPTION: Example code showing how to delete a purchase order by ID. Takes an order ID as input and handles both client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\nval orderId : kotlin.String = orderId_example // kotlin.String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#deleteOrder\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#deleteOrder\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Using testEndpointParameters Method with Java Swagger Client\nDESCRIPTION: Example code showing how to call the testEndpointParameters endpoint that tests various parameter types including numbers, strings, bytes, and dates. This endpoint accepts multiple parameter types and has no return value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString string = \"string_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = new LocalDate(); // LocalDate | None\nDateTime dateTime = new DateTime(); // DateTime | None\nString password = \"password_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, string, _byte, integer, int32, int64, _float, binary, date, dateTime, password);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging a User into the System in Java\nDESCRIPTION: Example of logging a user into the system using username and password credentials. Returns a string token on successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Pet by ID - Java Implementation\nDESCRIPTION: Example code showing how to retrieve a pet by its ID using the PetApi client. Demonstrates API key authentication setup.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in Dart\nDESCRIPTION: Example of how to log in a user using their username and password with the loginUser method. Returns a string containing session information upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The user name for login\nvar password = password_example; // String | The password for login in clear text\n\ntry { \n    var result = api_instance.loginUser(username, password);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->loginUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet Example\nDESCRIPTION: Example code showing how to add a new pet to the store using the Pet API. Requires OAuth2 authorization token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Petstore API using Ruby\nDESCRIPTION: This snippet demonstrates how to fetch a user's details by their username using the Petstore API. It uses the get_user_by_name method of the UserApi class and returns a User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nusername = 'username_example' # String | The name that needs to be fetched. Use user1 for testing.\n\n\nbegin\n  #Get user by user name\n  result = api_instance.get_user_by_name(username)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->get_user_by_name: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Using Angular2 TypeScript Petstore DefaultApi\nDESCRIPTION: TypeScript code showing how to import and use the DefaultApi in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '@swagger/angular2-typescript-petstore';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in C#\nDESCRIPTION: Example of creating multiple users by passing a List of User objects to the Swagger-generated C# client. This method is similar to the array input method but uses a List collection.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithListInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithListInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithListInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This snippet shows how to update an existing pet in the store using the PetApi. It sets up OAuth2 authentication, creates a Pet object with updated information, and calls the updatePet method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger API\nDESCRIPTION: Example demonstrating how to create multiple users at once by passing an array of User objects to the API. This endpoint accepts an array of user objects and processes them as a batch.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $body = [WWW::SwaggerClient::Object::ARRAY[User]->new()]; # ARRAY[User] | List of user object\n\neval { \n    $api_instance->create_users_with_array_input(body => $body);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->create_users_with_array_input: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Swagger Petstore C# SDK\nDESCRIPTION: Complete example demonstrating how to use the C# SDK to call an API endpoint. This example initializes the AnotherFakeApi client, makes a request to test special tags, and handles the response and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/README.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to fetch a user's information by their username. It uses the getUserByName method from the UserApi class and handles the returned User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Example Usage of PetApi in Dart with Swagger Client\nDESCRIPTION: Sample Dart code demonstrating how to use the generated Swagger API client to add a pet to the store. Shows import statement, API instance creation, request execution, and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/README.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry {\n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using Dart\nDESCRIPTION: This snippet shows how to upload an image for a pet using the uploadFile method. It requires OAuth2 authentication and accepts petId as a required parameter, with additionalMetadata and file as optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to update\nvar additionalMetadata = additionalMetadata_example; // String | Additional data to pass to server\nvar file = /path/to/file.txt; // MultipartFile | file to upload\n\ntry { \n    var result = api_instance.uploadFile(petId, additionalMetadata, file);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->uploadFile: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Perl\nDESCRIPTION: Demonstrates how to get pet inventories grouped by status. This method requires API key authorization and returns a hash of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::StoreApi;\nmy $api_instance = WWW::SwaggerClient::StoreApi->new(\n\n    # Configure API key authorization: api_key\n    api_key => {'api_key' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'api_key' => 'Bearer'},\n);\n\n\neval { \n    my $result = $api_instance->get_inventory();\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling StoreApi->get_inventory: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New User in Swagger API\nDESCRIPTION: Java example showing how to create a new user using the Swagger API client. Requires a User object as input and handles ApiException for error cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking test_endpoint_parameters in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the test_endpoint_parameters endpoint for testing various parameter types. This example creates an API instance with HTTP basic authentication, makes the call with required and optional parameters of different types, and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure HTTP basic authorization: http_basic_test\nconfiguration = petstore_api.Configuration()\nconfiguration.username = 'YOUR_USERNAME'\nconfiguration.password = 'YOUR_PASSWORD'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status using StoreApi in Dart\nDESCRIPTION: This example shows how to get pet inventories by status using the StoreApi class. It includes API key configuration, error handling, and expects a Map<String, int> as the return type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new StoreApi();\n\ntry { \n    var result = api_instance.getInventory();\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getInventory: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Basic Authentication in Swift with Alamofire\nDESCRIPTION: This snippet demonstrates how to authenticate requests using the authenticate method with username and password credentials. It automatically provides an NSURLCredential to the authentication challenge.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_31\n\nLANGUAGE: swift\nCODE:\n```\nlet user = \"user\"\nlet password = \"password\"\n\nAlamofire.request(.GET, \"https://httpbin.org/basic-auth/\\(user)/\\(password)\")\n         .authenticate(user: user, password: password)\n         .responseJSON { response in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Deleting a User by Username in Java\nDESCRIPTION: This example shows how to delete a user from the system by providing their username. This operation can only be performed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Composite Serialization Example - Python\nDESCRIPTION: Example showing how to serialize composite objects with outer number types. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterComposite() # OuterComposite | Input composite as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_composite_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_composite_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger API\nDESCRIPTION: Example code for creating multiple users using a list input. Similar to array input method, accepts a list of User objects and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUsersWithListInput\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUsersWithListInput\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It demonstrates creating an Order object, sending it to the API, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger Petstore API\nDESCRIPTION: Creates multiple users using a list input. Takes a list of User objects as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.createUsersWithListInput(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Adding Authorization Header for Basic Authentication in Swift\nDESCRIPTION: This snippet shows how to manually create and add an Authorization header for HTTP Basic Authentication. It encodes the username and password as a base64 string and includes it in the request headers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_32\n\nLANGUAGE: swift\nCODE:\n```\nlet user = \"user\"\nlet password = \"password\"\n\nlet credentialData = \"\\(user):\\(password)\".dataUsingEncoding(NSUTF8StringEncoding)!\nlet base64Credentials = credentialData.base64EncodedStringWithOptions([])\n\nlet headers = [\"Authorization\": \"Basic \\(base64Credentials)\"]\n\nAlamofire.request(.GET, \"https://httpbin.org/basic-auth/user/password\", headers: headers)\n         .responseJSON { response in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: User Login in Kotlin\nDESCRIPTION: Authenticates user with username and password. Returns a string token on successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The user name for login\nval password : kotlin.String = password_example // kotlin.String | The password for login in clear text\ntry {\n    val result : kotlin.String = apiInstance.loginUser(username, password)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#loginUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#loginUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Schema in Markdown\nDESCRIPTION: Documents the ArrayOfArrayOfNumberOnly model with a property named arrayArrayNumber that represents a nested array of decimal values. The property is marked as optional and uses a List of Lists of BigDecimal type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Logging User into System in Objective-C\nDESCRIPTION: An Objective-C method for authenticating a user by providing username and password. The method sends a GET request to the /user/login endpoint and returns a session token string upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) loginUserWithUsername: (NSString*) username\n    password: (NSString*) password\n        completionHandler: (void (^)(NSString* output, NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSString* username = @\"username_example\"; // The user name for login (optional)\nNSString* password = @\"password_example\"; // The password for login in clear text (optional)\n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Logs user into the system\n[apiInstance loginUserWithUsername:username\n              password:password\n          completionHandler: ^(NSString* output, NSError* error) {\n                        if (output) {\n                            NSLog(@\"%@\", output);\n                        }\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->loginUser: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Kotlin\nDESCRIPTION: Example of how to find pets by their tags using the PetApi class. The snippet demonstrates creating an instance of PetApi, specifying tags to filter by, and handling the returned array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval tags : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Tags to filter by\ntry {\n    val result : kotlin.Array<Pet> = apiInstance.findPetsByTags(tags)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#findPetsByTags\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#findPetsByTags\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Java using Swagger Client\nDESCRIPTION: Example of how to send a request with both a request body and query parameters using the FakeApi client. Takes a User object as the body and a string query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ResponseCollectionSerializable Protocol in Swift\nDESCRIPTION: Defines a protocol for serializing collections of objects from HTTP responses. Includes a default implementation that converts arrays of dictionaries into arrays of the conforming type, and extends Alamofire.Request to handle collection responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_47\n\nLANGUAGE: swift\nCODE:\n```\npublic protocol ResponseCollectionSerializable {\n    static func collection(response response: NSHTTPURLResponse, representation: AnyObject) -> [Self]\n}\n\nextension ResponseCollectionSerializable where Self: ResponseObjectSerializable {\n    static func collection(response response: NSHTTPURLResponse, representation: AnyObject) -> [Self] {\n        var collection = [Self]()\n        \n        if let representation = representation as? [[String: AnyObject]] {\n            for itemRepresentation in representation {\n                if let item = Self(response: response, representation: itemRepresentation) {\n                    collection.append(item)\n                }\n            }\n        }\n        \n        return collection\n    }\n}\n\nextension Alamofire.Request {\n    public func responseCollection<T: ResponseCollectionSerializable>(completionHandler: Response<[T], BackendError> -> Void) -> Self {\n        let responseSerializer = ResponseSerializer<[T], BackendError> { request, response, data, error in\n            guard error == nil else { return .Failure(.Network(error: error!)) }\n\n            let JSONSerializer = Request.JSONResponseSerializer(options: .AllowFragments)\n            let result = JSONSerializer.serializeResponse(request, response, data, error)\n\n            switch result {\n            case .Success(let value):\n                if let response = response {\n                    return .Success(T.collection(response: response, representation: value))\n                } else {\n                    return .Failure(. ObjectSerialization(reason: \"Response collection could not be serialized due to nil response\"))\n                }\n            case .Failure(let error):\n                return .Failure(.JSONSerialization(error: error))\n            }\n        }\n\n        return response(responseSerializer: responseSerializer, completionHandler: completionHandler)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching a Purchase Order by ID in Python using Petstore API\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\norder_id = 789 # int | ID of pet that needs to be fetched\n\ntry:\n    # Find purchase order by ID\n    api_response = api_instance.get_order_by_id(order_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->get_order_by_id: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It configures API key authentication, specifies the pet ID to retrieve, and handles the returned pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status with the Swagger Client API in Java\nDESCRIPTION: Example of how to use the findPetsByStatus method of the PetApi class to find pets by their status. This code shows how to set up OAuth2 authentication, create a filter with status values, and process the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java\nDESCRIPTION: This snippet demonstrates how to test various parameters using the FakeApi. It shows setting up authentication, creating parameter values, and calling the testEndpointParameters method with multiple input types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Order in Java using Swagger API\nDESCRIPTION: Example code for placing a new order for a pet. Takes Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a pet by ID using Python\nDESCRIPTION: Example code for retrieving a pet by its ID from the Petstore API using Python. Requires API key authentication and the pet ID to identify the pet to retrieve. Returns a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet to return\n\ntry:\n    # Find pet by ID\n    api_response = api_instance.get_pet_by_id(pet_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->get_pet_by_id: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using SwaggerPetstore StoreApi in JavaScript\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It requires an Order object as input and returns the created Order. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar body = new SwaggerPetstore.Order(); // Order | order placed for purchasing the pet\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.placeOrder(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Updating User - Java Swagger API\nDESCRIPTION: Example of updating a user through the Swagger API. Requires username and updated User object as input, handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Place Order Example - Java Swagger Client\nDESCRIPTION: Example demonstrating how to place a new pet order using the Swagger Java client. Takes an Order object as input and returns the created Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Including the Ruby Code Directly Using Command Line\nDESCRIPTION: Instructions for including the Ruby code directly in a script using the -I flag, which adds the lib directory to the load path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/ruby/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nruby -Ilib script.rb\n```\n\n----------------------------------------\n\nTITLE: Place Order Example - Kotlin\nDESCRIPTION: Example code demonstrating how to place an order for a pet. Takes an Order object as input and returns the created Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\nval body : Order =  // Order | order placed for purchasing the pet\ntry {\n    val result : Order = apiInstance.placeOrder(body)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#placeOrder\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#placeOrder\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username - Java Swagger Client\nDESCRIPTION: Example of retrieving a user's information by their username using the Swagger client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown for Swagger\nDESCRIPTION: Specifies the properties of an Order object including their types, descriptions, and optional status. It also defines an enumeration for the order status with possible values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Order\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n\n\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Logging a user into the system\nDESCRIPTION: Example showing how to log a user into the system by providing username and password credentials. Returns a session string upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The user name for login\npassword = 'password_example' # str | The password for login in clear text\n\ntry:\n    # Logs user into the system\n    api_response = api_instance.login_user(username, password)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->login_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to create multiple users at once using an array input. It uses the UserApi and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Ruby\nDESCRIPTION: Example code showing how to find pets by their tags using the Petstore Ruby client. It accepts an array of tags for filtering and returns matching Pet objects. The code demonstrates authorization configuration, API instantiation, and proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\ntags = ['tags_example'] # Array<String> | Tags to filter by\n\n\nbegin\n  #Finds Pets by tags\n  result = api_instance.find_pets_by_tags(tags)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->find_pets_by_tags: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status via Swagger API\nDESCRIPTION: Example of finding pets by their status using the SwagPetApi. Accepts multiple status values as comma-separated strings.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagPetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nSwagPetApi api = new SwagPetApi();\nSwagClient client = api.getClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nSwagger.OAuth petstore_auth = (Swagger.OAuth) client.getAuthentication('petstore_auth');\npetstore_auth.setAccessToken('YOUR ACCESS TOKEN');\n\nMap<String, Object> params = new Map<String, Object>{\n    'status' => new List<String>{'available'}\n};\n\ntry {\n    // cross your fingers\n    List<SwagPet> result = api.findPetsByStatus(params);\n    System.debug(result);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data in Swagger API (Java)\nDESCRIPTION: Demonstrates how to update a pet's information using form data in the Swagger Pet API. The example configures OAuth2 authentication, creates a PetApi instance, and calls the updatePetWithForm method with the pet ID, name, and status parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Ruby\nDESCRIPTION: This snippet demonstrates how to test various parameters using the FakeApi. It sends a POST request to /fake with multiple parameters of different types and uses HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure HTTP basic authorization: http_basic_test\n  config.username = 'YOUR USERNAME'\n  config.password = 'YOUR PASSWORD'\nend\n\napi_instance = Petstore::FakeApi.new\n\nnumber = 8.14 # Float | None\n\ndouble = 1.2 # Float | None\n\npattern_without_delimiter = 'pattern_without_delimiter_example' # String | None\n\nbyte = 'B' # String | None\n\nopts = { \n  integer: 56, # Integer | None\n  int32: 56, # Integer | None\n  int64: 789, # Integer | None\n  float: 3.4, # Float | None\n  string: 'string_example', # String | None\n  binary: 'B', # String | None\n  date: Date.parse('2013-10-20'), # Date | None\n  date_time: DateTime.parse('2013-10-20T19:20:30+01:00'), # DateTime | None\n  password: 'password_example', # String | None\n  callback: 'callback_example' # String | None\n}\n\nbegin\n  #Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n  api_instance.test_endpoint_parameters(number, double, pattern_without_delimiter, byte, opts)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_endpoint_parameters: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Creating a User with UserApi in Kotlin\nDESCRIPTION: Creates a new user in the system. This operation can only be performed by logged-in users. The example shows how to instantiate the UserApi and call the createUser method with a User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval body : User =  // User | Created user object\ntry {\n    apiInstance.createUser(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using PHP\nDESCRIPTION: This snippet shows how to upload an image for a pet using the Pet API. It requires an OAuth2 access token for authorization and uses the Swagger\\Client\\Api\\PetApi class to make the API call. The function returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$pet_id = 789; // int | ID of pet to update\n$additional_metadata = \"additional_metadata_example\"; // string | Additional data to pass to server\n$file = \"/path/to/file.txt\"; // \\SplFileObject | file to upload\n\ntry {\n    $result = $apiInstance->uploadFile($pet_id, $additional_metadata, $file);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->uploadFile: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using C# and Swagger\nDESCRIPTION: This snippet demonstrates how to find pets by status using the FindPetsByStatus method of the PetApi class. It configures OAuth2 authentication, specifies status values for filtering, and handles the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List<Pet> result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the PetApi. It takes a list of status values as a parameter, calls the findPetsByStatus method, and prints the result, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java\nDESCRIPTION: Example code for placing a new order for a pet. This endpoint accepts an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Perl\nDESCRIPTION: Example showing how to update a pet using form data instead of a complete Pet object. The method requires pet_id and optionally accepts name and status parameters. Uses OAuth2 for authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $pet_id = 789; # int | ID of pet that needs to be updated\nmy $name = 'name_example'; # string | Updated name of the pet\nmy $status = 'status_example'; # string | Updated status of the pet\n\neval { \n    $api_instance->update_pet_with_form(pet_id => $pet_id, name => $name, status => $status);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->update_pet_with_form: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Java\nDESCRIPTION: Example code demonstrating how to make a PUT request with both body and query parameters using the FakeApi.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Dart\nDESCRIPTION: This snippet shows how to find pets by tags using the findPetsByTags method. It requires OAuth2 authentication and accepts a list of tags as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar tags = []; // List<String> | Tags to filter by\n\ntry { \n    var result = api_instance.findPetsByTags(tags);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByTags: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Information in Java\nDESCRIPTION: Updates existing user information. Requires username and updated User object. Can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in C#\nDESCRIPTION: Example code showing how to search for pets by status using the Swagger Petstore API. This configures OAuth2 authentication, creates a PetApi instance, and calls FindPetsByStatus with a list of status values to filter by.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List&lt;Pet&gt; result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Petstore API using Ruby\nDESCRIPTION: This snippet demonstrates how to create a new user using the Petstore API. It requires the Petstore gem and creates a UserApi instance to call the create_user method with a User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nbody = Petstore::User.new # User | Created user object\n\n\nbegin\n  #Create user\n  api_instance.create_user(body)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->create_user: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID (Go)\nDESCRIPTION: This function retrieves a single pet by its ID. It requires an API key for authentication and returns a Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\nfunc GetPetById(ctx context.Context, petId int64) (Pet, error)\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java with Swagger Client\nDESCRIPTION: Example code showing how to test JSON serialization of form data. Demonstrates sending form fields as JSON parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java Swagger Client\nDESCRIPTION: Example of using the FakeApi to test various parameter types including numbers, strings, dates and files. Uses HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet with PetApi in Java\nDESCRIPTION: Example of how to delete a pet from the store using the PetApi. It shows OAuth2 authentication setup, specifying the pet ID to delete, and handling API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting an Order Using the Store API in Java\nDESCRIPTION: Example Java code demonstrating how to delete a purchase order by ID using the StoreApi. This example shows how to instantiate the API client, specify the order ID parameter, and handle any exceptions that might occur during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User in Java using Swagger Client\nDESCRIPTION: Example of updating a user's information. Requires username and updated User object. Can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data - Java REST Client Implementation\nDESCRIPTION: Example code showing how to update a pet using form data via the REST client. Accepts petId path parameter and optional name/status form fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.updatePetWithForm()\n    .petIdPath(petId).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using PetApi in Dart\nDESCRIPTION: This example demonstrates how to update a pet using form data with the updatePetWithForm method of the PetApi class. It requires OAuth2 authentication and accepts the pet ID, name, and status as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet that needs to be updated\nvar name = name_example; // String | Updated name of the pet\nvar status = status_example; // String | Updated status of the pet\n\ntry { \n    api_instance.updatePetWithForm(petId, name, status);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePetWithForm: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders by ID in C#\nDESCRIPTION: Fetches a purchase order using its ID through the StoreApi. Valid for integer IDs <= 5 or > 10. Returns Order object with complete order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Petstore API using Ruby\nDESCRIPTION: This snippet shows how to update an existing user's information using the Petstore API. It calls the update_user method of the UserApi class, taking a username and a User object as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nusername = 'username_example' # String | name that need to be deleted\n\nbody = Petstore::User.new # User | Updated user object\n\n\nbegin\n  #Updated user\n  api_instance.update_user(username, body)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->update_user: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java\nDESCRIPTION: Example code showing how to test serialization of outer boolean types using the FakeApi client. Demonstrates making a POST request with a boolean parameter and handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Go API\nDESCRIPTION: Method for testing the 'client' model. It requires a Client object in the request body and returns a Client model. This endpoint tests JSON serialization and deserialization of the Client model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestClientModel**\n> Client TestClientModel(ctx, body)\nTo test \\\"client\\\" model\n\nTo test \\\"client\\\" model\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**Client**](Client.md)| client model | \n\n### Return type\n\n[**Client**](Client.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information Using Form Data in Java with Swagger Client\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the Swagger-generated Java client. It initializes the API client, sets up OAuth2 authentication, and calls the updatePetWithForm method with the pet's ID, name, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data Using Bash CLI\nDESCRIPTION: Example showing how to update a pet using form data via the petstore CLI. This endpoint requires a pet ID and accepts optional name and status parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli updatePetWithForm petId=value\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to upload an image for a pet using the PetApi. It requires OAuth2 authentication and accepts a pet ID as a parameter. The method returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet to update\nlet opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\napiInstance.uploadFile(petId, opts).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Perl\nDESCRIPTION: Example showing how to upload an image for a pet. The method requires pet_id and optionally accepts additional_metadata and file parameters. Uses OAuth2 for authorization and returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $pet_id = 789; # int | ID of pet to update\nmy $additional_metadata = 'additional_metadata_example'; # string | Additional data to pass to server\nmy $file = '/path/to/file.txt'; # File | file to upload\n\neval { \n    my $result = $api_instance->upload_file(pet_id => $pet_id, additional_metadata => $additional_metadata, file => $file);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->upload_file: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Petstore API client package\nDESCRIPTION: Python code snippet showing how to import the Petstore API client package after installation. This is the first step needed before making any API calls.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/README.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport petstore_api\n```\n\n----------------------------------------\n\nTITLE: Updating User Details in C# with Swagger Client\nDESCRIPTION: Example code showing how to update user information using the UserApi class. Takes username and User object as parameters, includes error handling, and requires user to be logged in. Returns void on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet shows how to find pets by tags using the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts an array of tag values as input. It returns an array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar tags = [\"tags_example\"]; // [String] | Tags to filter by\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.findPetsByTags(tags, callback);\n```\n\n----------------------------------------\n\nTITLE: Placing New Pet Order - Java Implementation\nDESCRIPTION: Places a new order for a pet using the Store API. Takes Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Objective-C\nDESCRIPTION: An Objective-C method for deleting a user from the system using their username. This operation can only be performed by logged-in users. The method sends a DELETE request to the /user/{username} endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) deleteUserWithUsername: (NSString*) username\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSString* username = @\"username_example\"; // The name that needs to be deleted\n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Delete user\n[apiInstance deleteUserWithUsername:username\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->deleteUser: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Petstore API using Python\nDESCRIPTION: Example showing how to update an existing user. The code creates an instance of the UserApi class and calls the update_user method with username and updated User object parameters. Error handling is included via ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | name that need to be deleted\nbody = petstore_api.User() # User | Updated user object\n\ntry:\n    # Updated user\n    api_instance.update_user(username, body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->update_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID with C# API Client\nDESCRIPTION: Example demonstrating how to retrieve a pet by its ID using the PetApi.GetPetById method. The code configures API key authentication, specifies the pet ID to retrieve, and processes the returned Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetPetByIdExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to return\n\n            try\n            {\n                // Find pet by ID\n                Pet result = apiInstance.GetPetById(petId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.GetPetById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading a File for a Pet using Swagger Petstore API in JavaScript\nDESCRIPTION: This code initializes the Swagger Petstore API client, configures OAuth2 authentication, and calls the uploadFile method of the PetApi. It demonstrates how to set up the API instance, provide pet ID and optional parameters, and handle the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to update\n\nvar opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.uploadFile(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Implementing ResponseObjectSerializable Protocol in Swift\nDESCRIPTION: Defines a protocol and extension for automatic, type-safe response object serialization from HTTP responses. The protocol requires implementing an initializer that converts HTTP responses and JSON representations into model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_44\n\nLANGUAGE: swift\nCODE:\n```\npublic protocol ResponseObjectSerializable {\n    init?(response: NSHTTPURLResponse, representation: AnyObject)\n}\n\nextension Request {\n    public func responseObject<T: ResponseObjectSerializable>(completionHandler: Response<T, BackendError> -> Void) -> Self {\n        let responseSerializer = ResponseSerializer<T, BackendError> { request, response, data, error in\n            guard error == nil else { return .Failure(.Network(error: error!)) }\n\n            let JSONResponseSerializer = Request.JSONResponseSerializer(options: .AllowFragments)\n            let result = JSONResponseSerializer.serializeResponse(request, response, data, error)\n\n            switch result {\n            case .Success(let value):\n                if let\n                    response = response,\n                    responseObject = T(response: response, representation: value)\n                {\n                    return .Success(responseObject)\n                } else {\n                    return .Failure(.ObjectSerialization(reason: \"JSON could not be serialized into response object: \\(value)\"))\n                }\n            case .Failure(let error):\n                return .Failure(.JSONSerialization(error: error))\n            }\n        }\n\n        return response(responseSerializer: responseSerializer, completionHandler: completionHandler)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Serialization of Form Data with Python Petstore API Client\nDESCRIPTION: This code example demonstrates how to test JSON serialization of form data using the FakeApi. It shows the setup for sending two string parameters to the API endpoint and includes error handling for potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nparam = 'param_example' # str | field1\nparam2 = 'param2_example' # str | field2\n\ntry:\n    # test json serialization of form data\n    api_instance.test_json_form_data(param, param2)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_json_form_data: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID using Java\nDESCRIPTION: This snippet shows how to retrieve a pet by its ID using the PetApi. It configures API key authentication, specifies the pet ID to retrieve, and calls the getPetById method. The result is a single Pet object matching the specified ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Making an Alamofire Request with ResponseObject Handling\nDESCRIPTION: Demonstrates using Alamofire to make a GET request that automatically deserializes the response into a User object. The request uses the responseObject handler which handles JSON parsing and object creation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_46\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://example.com/users/mattt\")\n         .responseObject { (response: Response<User, BackendError>) in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Kotlin\nDESCRIPTION: This snippet defines the properties of an Order class in Kotlin. It includes various data types such as Long, Int, LocalDateTime, and Boolean, with optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**petId** | **kotlin.Long** |  |  [optional]\n**quantity** | **kotlin.Int** |  |  [optional]\n**shipDate** | [**java.time.LocalDateTime**](java.time.LocalDateTime.md) |  |  [optional]\n**status** | [**inline**](#Status) | Order Status |  [optional]\n**complete** | **kotlin.Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order using its ID. It creates a StoreApi instance, calls the getOrderById method with an orderId parameter, and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using testSpecialTags Method in Swagger Petstore JavaScript Client\nDESCRIPTION: Example of how to use the testSpecialTags method from AnotherFakeApi class. The method makes a PATCH request to the /another-fake/dummy endpoint, sending a Client model object and handling the response with promise callbacks.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.AnotherFakeApi();\n\nlet body = new SwaggerPetstore.Client(); // Client | client model\n\napiInstance.testSpecialTags(body).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameter Types with FakeApi in Java\nDESCRIPTION: Example showing how to call the testEndpointParameters endpoint which demonstrates handling of many different parameter types including numbers, strings, binary data, dates, etc. It requires HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in Perl\nDESCRIPTION: Example showing how to delete a pet from the store by its ID. The method requires the pet_id parameter and optionally accepts an api_key. Uses OAuth2 for authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $pet_id = 789; # int | Pet id to delete\nmy $api_key = 'api_key_example'; # string | \n\neval { \n    $api_instance->delete_pet(pet_id => $pet_id, api_key => $api_key);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->delete_pet: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Dart\nDESCRIPTION: Example showing how to fetch a user's details by providing their username. It returns a User object containing the user's information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be fetched. Use user1 for testing.\n\ntry { \n    var result = api_instance.getUserByName(username);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->getUserByName: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates creating multiple users using a list input. It utilizes the UserApi and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in Kotlin using Store API\nDESCRIPTION: Example of getting pet inventory status counts. Returns a map of status codes to quantities. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\ntry {\n    val result : kotlin.collections.Map<kotlin.String, kotlin.Int> = apiInstance.getInventory()\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It handles potential ApiExceptions and prints error information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Ruby Petstore SDK\nDESCRIPTION: Example of how to place an order for a pet using the Petstore Ruby SDK. This method requires an Order object as input and returns the created order. The example shows how to load the SDK, initialize the API client, create an order object, make the API call, and handle exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::StoreApi.new\n\nbody = Petstore::Order.new # Order | order placed for purchasing the pet\n\n\nbegin\n  #Place an order for a pet\n  result = api_instance.place_order(body)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling StoreApi->place_order: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving a pet by ID from the Petstore API in Python\nDESCRIPTION: This code shows how to retrieve a specific pet by its ID from the Swagger Petstore. It uses API key authentication and returns a single Pet object. The function requires a pet ID parameter and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet to return\n\ntry:\n    # Find pet by ID\n    api_response = api_instance.get_pet_by_id(pet_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->get_pet_by_id: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Alamofire Manager with Default Configuration\nDESCRIPTION: This snippet demonstrates how to create a custom Alamofire Manager instance using the default NSURLSessionConfiguration. This provides more control over the network requests than using the shared instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_38\n\nLANGUAGE: swift\nCODE:\n```\nlet configuration = NSURLSessionConfiguration.defaultSessionConfiguration()\nlet manager = Alamofire.Manager(configuration: configuration)\n```\n\n----------------------------------------\n\nTITLE: Updating User Details in Java\nDESCRIPTION: Example of updating existing user details using the Swagger client API. Requires authenticated user session and valid username.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java\nDESCRIPTION: Example code demonstrating how to test various parameter types with authentication using the FakeApi. Includes basic HTTP authentication setup.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID in Kotlin\nDESCRIPTION: Example demonstrating how to retrieve a pet by its ID using the getPetById method. This method requires the pet's ID and returns a single Pet object if found.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet to return\ntry {\n    val result : Pet = apiInstance.getPetById(petId)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#getPetById\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#getPetById\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java\nDESCRIPTION: This code snippet shows how to place an order for a pet. It creates a StoreApi instance, prepares an Order object, calls the placeOrder method, and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates the process of logging in a user to the Swagger Petstore. It shows how to use the loginUser method, which requires a username and password, and returns a session token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Perl\nDESCRIPTION: Example showing how to find pets by their tags. The method accepts multiple tags as a comma-separated string array and returns an array of Pet objects. Uses OAuth2 for authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $tags = []; # ARRAY[string] | Tags to filter by\n\neval { \n    my $result = $api_instance->find_pets_by_tags(tags => $tags);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->find_pets_by_tags: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Details in Java\nDESCRIPTION: Example of updating an existing user's details. Requires username and updated User object as parameters. Only available to logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Get Pet by ID - Java Client Implementation\nDESCRIPTION: Example code showing how to retrieve a single pet by its ID using the Java client. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using URLStringConvertible with Various URL Types in Swift\nDESCRIPTION: Demonstrates how different Swift and Foundation types that conform to URLStringConvertible (NSString, NSURL, NSURLRequest, NSURLComponents) can be used with Alamofire's request methods to create HTTP requests with different URL representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_50\n\nLANGUAGE: swift\nCODE:\n```\nlet string = NSString(string: \"https://httpbin.org/post\")\nAlamofire.request(.POST, string)\n\nlet URL = NSURL(string: string)!\nAlamofire.request(.POST, URL)\n\nlet URLRequest = NSURLRequest(URL: URL)\nAlamofire.request(.POST, URLRequest) // overrides `HTTPMethod` of `URLRequest`\n\nlet URLComponents = NSURLComponents(URL: URL, resolvingAgainstBaseURL: true)\nAlamofire.request(.POST, URLComponents)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using PHP Swagger Client\nDESCRIPTION: This code snippet shows how to delete a pet from the store using the Swagger PHP client. It requires OAuth2 authentication and takes a pet ID as a required parameter and an optional API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$pet_id = 789; // int | Pet id to delete\n$api_key = \"api_key_example\"; // string | \n\ntry {\n    $apiInstance->deletePet($pet_id, $api_key);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->deletePet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Importing Pet API Package in Dart\nDESCRIPTION: Imports the main Swagger API package required for using the Pet API functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enumeration Table\nDESCRIPTION: Markdown table defining the possible values for the pet status enumeration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nAVAILABLE | \"available\"\nPENDING | \"pending\"\nSOLD | \"sold\"\n```\n\n----------------------------------------\n\nTITLE: Using testClassname Method with Java Swagger Client\nDESCRIPTION: This code snippet demonstrates how to use the testClassname method of the FakeClassnameTags123Api class. It shows the configuration of the API client with API key authentication, creation of the API instance, and handling of API exceptions. The method sends a PATCH request to '/fake_classname_test' with a Client model as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using PetApi in Java\nDESCRIPTION: This example demonstrates how to add a new pet to the store using the addPet method from the PetApi class. It requires a Pet object and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating User in Swagger Petstore API\nDESCRIPTION: Creates a new user in the system. This operation can only be performed by logged in users. Requires a User object as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login in Swagger Petstore API\nDESCRIPTION: API endpoint for user authentication. This endpoint accepts username and password parameters and returns a STRING_32 token upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n# **login_user**\n> login_user (username: STRING_32 ; password: STRING_32 ): detachable STRING_32\n\t\n\nLogs user into the system\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Java\nDESCRIPTION: Example shows how to authenticate a user by logging them into the system using username and password. It returns a session token as a String when successful and includes exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Get Inventory Example - Java Swagger Client\nDESCRIPTION: Example demonstrating how to retrieve pet inventory status using the Swagger Java client. Requires API key authentication and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status with C# API Client\nDESCRIPTION: Example demonstrating how to find pets by their status using the PetApi.FindPetsByStatus method. The code configures OAuth2 authentication, passes status values as filter criteria, and processes the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List&lt;Pet&gt; result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Information with Swagger-generated C# Client\nDESCRIPTION: This snippet shows how to update user information using the UserApi class. It creates an instance of UserApi, sets the username and user object, and calls the UpdateUser method. Any exceptions are caught and printed for debugging.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | name that need to be deleted\n            var body = new User(); // User | Updated user object\n\n            try\n            {\n                // Updated user\n                apiInstance.UpdateUser(username, body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.UpdateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Java\nDESCRIPTION: Example demonstrates how to delete a user by their username. This operation can only be performed by logged-in users and includes appropriate exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with FakeApi\nDESCRIPTION: Example demonstrating serialization of composite objects using the FakeApi. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List in Java using Swagger Client\nDESCRIPTION: Example of creating multiple users by providing a list of User objects using the Swagger API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to use the updatePet method of the PetApi class to modify an existing pet's information. It requires OAuth2 authentication and accepts a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\n\napiInstance.updatePet(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Inventory Example in Dart\nDESCRIPTION: Demonstrates how to retrieve pet inventories grouped by status. Requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new StoreApi();\n\ntry { \n    var result = api_instance.getInventory();\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getInventory: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading a Pet Image in Rust\nDESCRIPTION: Implements the upload_file API endpoint that uploads an image for a pet. Requires pet_id parameter and petstore_auth authorization. Optional additional_metadata and file parameters can be provided. Returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: rust\nCODE:\n```\n# **upload_file**\n> ::models::ApiResponse upload_file(ctx, pet_id, optional)\nuploads an image\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **pet_id** | **i64**| ID of pet to update | \n **optional** | **map[string]interface{}** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a map[string]interface{}.\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **i64**| ID of pet to update | \n **additional_metadata** | **String**| Additional data to pass to server | \n **file** | **File**| file to upload | \n\n### Return type\n\n[**::models::ApiResponse**](ApiResponse.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: multipart/form-data\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Dart\nDESCRIPTION: This snippet shows how to upload an image for a pet. It requires OAuth2 authentication and accepts the pet's ID, additional metadata, and the image file as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to update\nvar additionalMetadata = additionalMetadata_example; // String | Additional data to pass to server\nvar file = /path/to/file.txt; // MultipartFile | file to upload\n\ntry { \n    var result = api_instance.uploadFile(petId, additionalMetadata, file);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->uploadFile: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store\nDESCRIPTION: Example of how to add a new pet to the store using the addPet() method. Requires OAuth2 authorization and a Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters with Swagger Petstore API\nDESCRIPTION: Example showing how to test various parameter types using the FakeApi. Makes a POST request to /fake endpoint with different parameter types including numbers, strings, dates etc.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure HTTP basic authorization: http_basic_test\nlet http_basic_test = defaultClient.authentications['http_basic_test'];\nhttp_basic_test.username = 'YOUR USERNAME';\nhttp_basic_test.password = 'YOUR PASSWORD';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet _number = 8.14; // Number | None\n\nlet _double = 1.2; // Number | None\n\nlet patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\n\nlet _byte = \"QmFzZTY0IGV4YW1wbGU=\"; // Blob | None\n\nlet opts = { \n  'integer': 56, // Number | None\n  'int32': 56, // Number | None\n  'int64': 789, // Number | None\n  '_float': 3.4, // Number | None\n  '_string': \"_string_example\", // String | None\n  'binary': \"QmFzZTY0IGV4YW1wbGU=\", // Blob | None\n  '_date': new Date(\"2013-10-20\"), // Date | None\n  'dateTime': new Date(\"2013-10-20T19:20:30+01:00\"), // Date | None\n  'password': \"password_example\", // String | None\n  'callback': \"callback_example\" // String | None\n};\n\napiInstance.testEndpointParameters(_number, _double, patternWithoutDelimiter, _byte, opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Users with Array Input using Java REST Assured\nDESCRIPTION: This code snippet shows how to create multiple users using an array input with the REST Assured library in Java. It sets up the API client and sends a POST request with an array of user objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.createUsersWithArrayInput()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using PetApi in Dart\nDESCRIPTION: This example shows how to delete a pet from the store using the deletePet method of the PetApi class. It requires OAuth2 authentication and accepts the pet ID as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | Pet id to delete\nvar apiKey = apiKey_example; // String | \n\ntry { \n    api_instance.deletePet(petId, apiKey);\n} catch (e) {\n    print(\"Exception when calling PetApi->deletePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Pet by ID - Java REST Client Implementation\nDESCRIPTION: Example code showing how to retrieve a pet by its ID using the REST client. Requires api_key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.getPetById()\n    .petIdPath(petId).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java\nDESCRIPTION: This code example illustrates how to use the testClientModel method of the FakeApi class to test the \"client\" model. It shows the process of creating an instance of FakeApi, calling the method with a Client object, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Ruby\nDESCRIPTION: Example code demonstrating how to update a pet using form data in the Petstore Ruby client. It requires a pet ID and accepts optional name and status parameters. The example shows configuration of OAuth2 authentication and proper exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\npet_id = 789 # Integer | ID of pet that needs to be updated\n\nopts = { \n  name: 'name_example', # String | Updated name of the pet\n  status: 'status_example' # String | Updated status of the pet\n}\n\nbegin\n  #Updates a pet in the store with form data\n  api_instance.update_pet_with_form(pet_id, opts)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->update_pet_with_form: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Dart\nDESCRIPTION: Example of how to authenticate a user by logging them into the system with a username and password. Returns a string token upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The user name for login\nvar password = password_example; // String | The password for login in clear text\n\ntry { \n    var result = api_instance.loginUser(username, password);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->loginUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image File in Java with Swagger Client\nDESCRIPTION: This snippet shows how to upload an image file for a pet using the Swagger-generated Java client. It sets up the API client with OAuth2 authentication, then calls the uploadFile method with the pet's ID, additional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java using StoreApi\nDESCRIPTION: This snippet shows how to place an order for a pet. It uses the StoreApi class and handles potential ApiExceptions. The method accepts an Order object as a parameter and returns the created Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags - Java REST Client Implementation\nDESCRIPTION: Example code showing how to find pets by tags using the REST client. Accepts multiple comma-separated tags as filter parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.findPetsByTags()\n    .tagsQuery(tags).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Logging in a User with Java REST Assured\nDESCRIPTION: This code example demonstrates how to log in a user using the REST Assured library in Java. It sets up the API client and sends a GET request with username and password as query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.loginUser()\n    .usernameQuery(username)\n    .passwordQuery(password).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It takes a pet ID as a parameter and an optional API key, then calls the deletePet method, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Spring-Cloud Feign Client from Swagger API Interface\nDESCRIPTION: Example of creating a Spring-Cloud Feign client using a generated Swagger API interface. This approach allows you to create HTTP clients that leverage the same interface used for your controllers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/spring-stubs/README.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@FeignClient(name=\"pet\", url=\"http://petstore.swagger.io/v2\")\npublic interface PetClient extends PetApi {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Store Orders in C#\nDESCRIPTION: Example of deleting a purchase order by ID using the StoreApi. Works with integer IDs less than 1000. Includes error handling and API client initialization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Perl\nDESCRIPTION: Demonstrates how to place a new order for a pet. This method takes an Order object as input and returns the created Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/StoreApi.md#2025-04-20_snippet_4\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::StoreApi;\nmy $api_instance = WWW::SwaggerClient::StoreApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::Order->new(); # Order | order placed for purchasing the pet\n\neval { \n    my $result = $api_instance->place_order(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling StoreApi->place_order: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using C# and Swagger\nDESCRIPTION: This snippet shows how to update an existing pet using the UpdatePet method of the PetApi class. It configures OAuth2 authentication, creates a Pet object with updated information, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Update an existing pet\n                apiInstance.UpdatePet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This snippet shows how to update an existing pet in the store using the PetApi. It creates a Pet object with updated information and calls the updatePet method, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in JavaScript\nDESCRIPTION: Example demonstrating serialization of composite objects with outer number type using the SwaggerPetstore API. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet opts = { \n  'body': new SwaggerPetstore.OuterComposite() // OuterComposite | Input composite as post body\n};\napiInstance.fakeOuterCompositeSerialize(opts).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Java\nDESCRIPTION: Creates a new user in the system. This operation can only be performed by logged-in users. Takes a User object as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Java\nDESCRIPTION: Example of creating a single user using the UserApi. Requires a User object as input and handles ApiException for error cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Kotlin\nDESCRIPTION: Example showing how to update an existing pet in the store by sending a Pet object with updated information. The method requires a complete Pet object containing the updated details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval body : Pet =  // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#updatePet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#updatePet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean in Java\nDESCRIPTION: This snippet demonstrates how to test serialization of outer boolean types using the FakeApi. It shows how to call the fakeOuterBooleanSerialize method with a boolean input and handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger Petstore API\nDESCRIPTION: Example demonstrating how to create multiple users at once by passing an array of User objects. This endpoint accepts a list of user objects and creates them in batch.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\napiInstance.createUsersWithArrayInput(body).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in C# using Swagger-Generated Client\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It takes an Order object as input and returns the created order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining API Parameters for Pet Update Endpoint in Kotlin\nDESCRIPTION: Defines the parameters for an API endpoint to update a pet. It includes the pet ID, optional additional metadata, and an optional file upload. The parameters are described in a markdown table format.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **petId** | **kotlin.Long**| ID of pet to update |\n **additionalMetadata** | **kotlin.String**| Additional data to pass to server | [optional]\n **file** | **java.io.File**| file to upload | [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Dart\nDESCRIPTION: This snippet demonstrates how to find pets by status using the findPetsByStatus method. It requires OAuth2 authentication and accepts a list of status values as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar status = []; // List<String> | Status values that need to be considered for filter\n\ntry { \n    var result = api_instance.findPetsByStatus(status);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByStatus: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Swagger Petstore API\nDESCRIPTION: Example showing how to retrieve a user's details by their username. The endpoint returns a User object containing all the user's information and suggests using 'user1' for testing purposes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\n\napiInstance.getUserByName(username).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet (Go)\nDESCRIPTION: This function updates an existing pet in the store. It requires a Pet object in the request body and uses OAuth authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\nfunc UpdatePet(ctx context.Context, body Pet) error\n```\n\n----------------------------------------\n\nTITLE: Setting Service Base Path in Angular Module\nDESCRIPTION: TypeScript code to set the base path for the API service in an Angular module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Authentication with NSURLCredential in Swift\nDESCRIPTION: This snippet demonstrates how to create an NSURLCredential object and use it for authentication in Alamofire. The credential includes username, password, and a persistence policy for the session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_33\n\nLANGUAGE: swift\nCODE:\n```\nlet user = \"user\"\nlet password = \"password\"\n\nlet credential = NSURLCredential(user: user, password: password, persistence: .ForSession)\n\nAlamofire.request(.GET, \"https://httpbin.org/basic-auth/\\(user)/\\(password)\")\n         .authenticate(usingCredential: credential)\n         .responseJSON { response in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Initializing FakeClassnameTags123Api and Making a PATCH Request in Java\nDESCRIPTION: This snippet demonstrates how to initialize the FakeClassnameTags123Api, configure API key authentication, and make a PATCH request to test class name in snake case. It includes error handling and displays the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using the Swagger Client in Java\nDESCRIPTION: This snippet shows how to find pets by their tags in the Petstore. It configures OAuth2 authentication, creates a PetApi instance, and handles potential exceptions while retrieving a list of pets filtered by tag values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using PetApi in Java\nDESCRIPTION: This example shows how to find pets by tags using the findPetsByTags method from the PetApi class. It accepts multiple tags as a list and returns matching Pet objects with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding pets by tags in the Petstore API in Python\nDESCRIPTION: This snippet demonstrates how to find pets by tags. Multiple tags can be provided as a comma-separated list, with the function returning all pets that match any of the specified tags. It requires OAuth2 authentication and returns a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\ntags = ['tags_example'] # list[str] | Tags to filter by\n\ntry:\n    # Finds Pets by tags\n    api_response = api_instance.find_pets_by_tags(tags)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->find_pets_by_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Manual Response Validation in Alamofire\nDESCRIPTION: Example of manually validating response status code and content type before processing the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_9\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n         .validate(statusCode: 200..<300)\n         .validate(contentType: [\"application/json\"])\n         .response { response in\n             print(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Kotlin\nDESCRIPTION: Creates multiple users using an array input. Accepts an array of User objects and handles potential client and server errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUsersWithArrayInput\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUsersWithArrayInput\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with SwaggerPetstore API in JavaScript\nDESCRIPTION: Demonstrates how to call the testSpecialTags endpoint using the SwaggerPetstore JavaScript client. The example shows initialization of the API client, creating a client model, and handling the API response through a callback function.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.AnotherFakeApi();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testSpecialTags(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in Dart\nDESCRIPTION: This snippet shows how to delete a pet from the store using its ID. It requires OAuth2 authentication and optionally accepts an API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | Pet id to delete\nvar apiKey = apiKey_example; // String | \n\ntry { \n    api_instance.deletePet(petId, apiKey);\n} catch (e) {\n    print(\"Exception when calling PetApi->deletePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Order by ID in C# using Swagger API\nDESCRIPTION: This code demonstrates how to retrieve a purchase order by its ID. The example initializes the StoreApi client and calls the GetOrderById method with a numeric ID parameter. It explains that valid responses are obtained for integer IDs with values <= 5 or > 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java\nDESCRIPTION: This snippet shows how to test the 'client' model using the FakeApi. It demonstrates creating a Client object, calling the testClientModel method, and handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with SwaggerPetstore AnotherFakeApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It sends a PATCH request to the '/another-fake/dummy' endpoint with a client model as the body. The method is used to test special tags functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.AnotherFakeApi();\n\nlet body = new SwaggerPetstore.Client(); // Client | client model\n\n\napiInstance.testSpecialTags(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in C# using Swagger-generated Client\nDESCRIPTION: Demonstrates how to retrieve order details by order ID using the StoreApi. This example notes that valid responses are expected with integer IDs <= 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User in Java using Swagger Client\nDESCRIPTION: Updates existing user information. Requires username and updated User object. Can only be done by logged in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by ID using the StoreApi. It handles potential API exceptions and includes notes on valid input ranges.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition\nDESCRIPTION: Defines the possible values for the required enumString property, including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status - Java Client Implementation\nDESCRIPTION: Example code showing how to find pets by their status using the Java client. Supports filtering by multiple comma-separated status values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer number types. It creates a FakeApi instance, initializes a BigDecimal, and makes a request to serialize the number value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using HTTP Basic Authentication in Go\nDESCRIPTION: Example of how to use HTTP basic authentication when making requests to the Petstore API using the Go client. This applies to the 'http_basic_test' authentication method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/README.md#2025-04-20_snippet_2\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextBasicAuth, sw.BasicAuth{\n\tUserName: \"username\",\n\tPassword: \"password\",\n})\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, prepares a Client object as the request body, and makes a PATCH request to test special tags. The method returns a Client object as the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Orders with C# Client\nDESCRIPTION: Example of using the C# client to delete a purchase order by ID. This code demonstrates how to initialize the StoreApi client and call the DeleteOrder method with an order ID parameter, including exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Java\nDESCRIPTION: Example of authenticating a user login with username and password using the Swagger client API. Returns authentication token string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in the Petstore API using Go\nDESCRIPTION: Function that retrieves a user's details by their username. It returns a User object containing the user's information. The function requires a context for authentication and the username to fetch.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nGetUserByName(ctx, username)\n```\n\n----------------------------------------\n\nTITLE: Delete User Example in C#\nDESCRIPTION: Example code demonstrating how to delete a user by username. This operation can only be performed by logged in users. Takes a username string as input and returns void.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be deleted\n\n            try\n            {\n                // Delete user\n                apiInstance.DeleteUser(username);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.DeleteUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with Java Swagger Client\nDESCRIPTION: Example code demonstrating how to test inline additional properties by sending a request body object parameter to the API endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Slim Framework Application Setup\nDESCRIPTION: Sample code demonstrating how to create a basic Slim application with a route that accepts a name parameter and returns a greeting. Shows core framework initialization and route handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/slim/slim/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nrequire 'vendor/autoload.php';\n\n$app = new Slim\\App();\n\n$app->get('/hello/{name}', function ($request, $response, $args) {\n    $response->write(\"Hello, \" . $args['name']);\n    return $response;\n});\n\n$app->run();\n```\n\n----------------------------------------\n\nTITLE: Finding a Pet by ID in Perl\nDESCRIPTION: Example showing how to retrieve a pet by its ID. The method requires the pet_id parameter and returns a Pet object. Uses API key authorization instead of OAuth2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure API key authorization: api_key\n    api_key => {'api_key' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'api_key' => 'Bearer'},\n);\n\nmy $pet_id = 789; # int | ID of pet to return\n\neval { \n    my $result = $api_instance->get_pet_by_id(pet_id => $pet_id);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->get_pet_by_id: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to update a user's information in SwaggerPetstore. It uses the updateUser method of the UserApi class, taking a username and a User object as parameters to update the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | name that need to be deleted\n\nlet body = new SwaggerPetstore.User(); // User | Updated user object\n\n\napiInstance.updateUser(username, body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status - Kotlin Implementation\nDESCRIPTION: Example code for retrieving pets by their status using comma-separated status values. Returns an array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval status : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Status values that need to be considered for filter\ntry {\n    val result : kotlin.Array<Pet> = apiInstance.findPetsByStatus(status)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#findPetsByStatus\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#findPetsByStatus\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Properties in SwaggerPetstore Markdown\nDESCRIPTION: This snippet outlines the properties of the ApiResponse model in SwaggerPetstore. It defines three optional properties: code (Number), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Number** |  | [optional] \n**type** | **String** |  | [optional] \n**message** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Dart\nDESCRIPTION: Example code for deleting a user by username. This operation can only be performed by the logged-in user and requires the username of the user to be deleted.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be deleted\n\ntry { \n    api_instance.deleteUser(username);\n} catch (e) {\n    print(\"Exception when calling UserApi->deleteUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet using PHP Swagger Client\nDESCRIPTION: This code snippet demonstrates how to add a new pet to the store using the Swagger PHP client. It requires OAuth2 authentication and accepts a Pet object that needs to be added to the store.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$body = new \\Swagger\\Client\\Model\\Pet(); // \\Swagger\\Client\\Model\\Pet | Pet object that needs to be added to the store\n\ntry {\n    $apiInstance->addPet($body);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->addPet: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: User Logout in Swagger API\nDESCRIPTION: Example code for logging out current user session. Requires no parameters and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\ntry {\n    apiInstance.logoutUser()\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#logoutUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#logoutUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using the Swagger Client in Java\nDESCRIPTION: This snippet shows how to delete a pet from the Petstore using its ID. It configures OAuth2 authentication, creates a PetApi instance, and handles potential exceptions during the deletion process.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Users with Array Input using Petstore CLI\nDESCRIPTION: This snippet shows how to create multiple users using an array input with the Petstore CLI. It takes an array of User objects as input and doesn't return any response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli createUsersWithArrayInput\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory Using the Store API in Java\nDESCRIPTION: Example Java code demonstrating how to retrieve pet inventories by status using the StoreApi. This example includes API key authorization setup and shows how to handle the returned map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Name - Go\nDESCRIPTION: API endpoint for retrieving a user by their username. Accepts a username parameter and returns a User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nGetUserByName(ctx, username)\n```\n\n----------------------------------------\n\nTITLE: Deleting User - Java Swagger API\nDESCRIPTION: Example of deleting a user by username through the Swagger API. Requires username as input and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Place Order Implementation in Objective-C\nDESCRIPTION: Creates a new order for a pet. Accepts SWGOrder object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGStoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) placeOrderWithBody: (SWGOrder*) body\n        completionHandler: (void (^)(SWGOrder* output, NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nSWGOrder* body = [[SWGOrder alloc] init]; // order placed for purchasing the pet (optional)\n\nSWGStoreApi*apiInstance = [[SWGStoreApi alloc] init];\n\n// Place an order for a pet\n[apiInstance placeOrderWithBody:body\n          completionHandler: ^(SWGOrder* output, NSError* error) {\n                        if (output) {\n                            NSLog(@\"%@\", output);\n                        }\n                        if (error) {\n                            NSLog(@\"Error calling SWGStoreApi->placeOrder: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean Types in Java\nDESCRIPTION: Example of using the fakeOuterBooleanSerialize endpoint to test serialization of outer boolean types. The code demonstrates creating an API instance, calling the method with a boolean value, and handling the response or exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List in Java\nDESCRIPTION: Creates multiple users by accepting a List of User objects as input. Similar to array input method but uses List collection type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Networking with Alamofire and PromiseKit\nDESCRIPTION: This Swift code snippet shows how to use Alamofire with PromiseKit for making network requests. It demonstrates creating a POST request, handling the JSON response, and catching errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_3\n\nLANGUAGE: swift\nCODE:\n```\n// pod 'PromiseKit/Alamofire'\n// https://github.com/PromiseKit/Alamofire\nAlamofire.request(\"http://example.com\", method: .post).responseJSON().then { json in\n    //…\n}.catch { error in\n    //…\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Dart\nDESCRIPTION: Example of how to create multiple users at once by providing an array of user objects to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithArrayInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithArrayInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting an Order using StoreApi in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order in Java\nDESCRIPTION: Example of deleting a purchase order by ID using the Store API. Handles orders with ID values less than 1000, with error handling for invalid inputs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using Java Swagger Client\nDESCRIPTION: This code shows how to delete a pet from the store by its ID. It demonstrates setting up OAuth authentication, passing the pet ID to delete, handling an optional API key parameter, and managing exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SWGPet Model Properties in Objective-C\nDESCRIPTION: This code snippet defines the properties of the SWGPet model. It includes an optional ID, optional category, required name and photo URLs, optional tags, and an optional status field. The property types are specified using Objective-C syntax.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPet.md#2025-04-20_snippet_0\n\nLANGUAGE: Objective-C\nCODE:\n```\n**_id** | **NSNumber*** |  | [optional] \n**category** | [**SWGCategory***](SWGCategory.md) |  | [optional] \n**name** | **NSString*** |  | \n**photoUrls** | **NSArray&lt;NSString*&gt;*** |  | \n**tags** | [**NSArray&lt;SWGTag&gt;***](SWGTag.md) |  | [optional] \n**status** | **NSString*** | pet status in the store | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Java using StoreApi\nDESCRIPTION: This snippet demonstrates how to delete a purchase order using its ID. It uses the StoreApi class and handles potential ApiExceptions. The method accepts an orderId as a String parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It handles potential ApiExceptions and prints the result or error information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID using StoreApi in Dart\nDESCRIPTION: This example demonstrates how to retrieve a purchase order by its ID using the StoreApi class. It includes error handling and specifies that the orderId should be an integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = 789; // int | ID of pet that needs to be fetched\n\ntry { \n    var result = api_instance.getOrderById(orderId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getOrderById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It takes a pet ID as a parameter, calls the getPetById method, and prints the result, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Outer Boolean Serialization in Go API\nDESCRIPTION: Method for testing serialization of outer boolean types. It accepts an optional OuterBoolean object in the request body and returns an OuterBoolean response. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **FakeOuterBooleanSerialize**\n> OuterBoolean FakeOuterBooleanSerialize(ctx, optional)\n\n\nTest serialization of outer boolean types\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterBooleanSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterBooleanSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterBoolean**](OuterBoolean.md)| Input boolean as post body | \n\n### Return type\n\n[**OuterBoolean**](OuterBoolean.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet with Java\nDESCRIPTION: Example Java code demonstrating how to update an existing pet in the Swagger Petstore. The code initializes the API client with OAuth2 authentication and sends an updated Pet object to the store.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables for Base Path in Angular CLI Project\nDESCRIPTION: TypeScript code showing how to use environment variables to set the API base path in an Angular CLI project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Swagger API\nDESCRIPTION: Example code for fetching user details by username. Returns a User object and includes example testing username 'user1'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    val result : User = apiInstance.getUserByName(username)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#getUserByName\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#getUserByName\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating a User in the Petstore API using Go\nDESCRIPTION: Function for user authentication that logs a user into the system. It requires a context, username, and password as parameters. Upon successful authentication, it returns a string token that can be used for subsequent API calls.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nLoginUser(ctx, username, password)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory using StoreApi in Java\nDESCRIPTION: This snippet shows how to get pet inventories by status using the StoreApi. It includes API key authentication and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It configures API key authentication, specifies the pet ID to retrieve, and calls the getPetById method. The method returns a Pet object and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using Swagger Store API in Dart\nDESCRIPTION: This example shows how to place a new order for a pet. It takes an Order object as input and returns the created Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar body = new Order(); // Order | order placed for purchasing the pet\n\ntry { \n    var result = api_instance.placeOrder(body);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->placeOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters with Authentication in Java\nDESCRIPTION: Example code demonstrating how to test various parameter types with HTTP basic authentication. Includes handling of different data types like numbers, strings, dates, and binary data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal();\nDouble _double = 3.4D;\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\";\nbyte[] _byte = B;\nInteger integer = 56;\nInteger int32 = 56;\nLong int64 = 789L;\nFloat _float = 3.4F;\nString string = \"string_example\";\nbyte[] binary = B;\nLocalDate date = LocalDate.now();\nOffsetDateTime dateTime = OffsetDateTime.now();\nString password = \"password_example\";\nString paramCallback = \"paramCallback_example\";\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout Implementation in Java\nDESCRIPTION: Example demonstrates how to log out the currently logged-in user by ending their session. This endpoint requires no parameters and has proper exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User from Swagger API with Perl\nDESCRIPTION: Example demonstrating how to delete a user from the system. This operation requires the username of the user to be deleted and can only be performed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $username = 'username_example'; # string | The name that needs to be deleted\n\neval { \n    $api_instance->delete_user(username => $username);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->delete_user: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Placing a Pet Order in Java\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It creates an Order object, sends it to the API, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Petstore API using Ruby\nDESCRIPTION: This snippet shows how to delete a user from the Petstore API. It requires the Petstore gem and uses the delete_user method of the UserApi class, taking a username as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nusername = 'username_example' # String | The name that needs to be deleted\n\n\nbegin\n  #Delete user\n  api_instance.delete_user(username)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->delete_user: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID using PHP\nDESCRIPTION: This snippet demonstrates how to find a purchase order by its ID using the StoreApi. It requires the order ID as a parameter and returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\StoreApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$order_id = 789; // int | ID of pet that needs to be fetched\n\ntry {\n    $result = $apiInstance->getOrderById($order_id);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StoreApi->getOrderById: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in C#\nDESCRIPTION: Example of authenticating a user by logging them into the system using the Swagger-generated C# client. This method requires username and password parameters and returns a session token string upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Go API\nDESCRIPTION: Method for testing enum parameters. This endpoint demonstrates how to use and validate enumerated parameter values. All parameters are optional for this endpoint and no authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestEnumParameters**\n> TestEnumParameters(ctx, optional)\nTo test enum parameters\n\nTo test enum parameters\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiTestEnumParametersOpts** | optional parameters | nil if no parameters\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Swagger Petstore API\nDESCRIPTION: Deletes a user from the system. This operation can only be performed by logged in users. Takes a username as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The name that needs to be deleted\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.deleteUser(username, callback);\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Rust\nDESCRIPTION: Implements the find_pets_by_status API endpoint that searches for pets by status. Requires status values as parameters and returns a vector of Pet objects. Requires petstore_auth authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\n# **find_pets_by_status**\n> Vec<::models::Pet> find_pets_by_status(ctx, status)\nFinds Pets by status\n\nMultiple status values can be provided with comma separated strings\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **status** | [**Vec&lt;String&gt;**](String.md)| Status values that need to be considered for filter | \n\n### Return type\n\n[**Vec<::models::Pet>**](Pet.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Invoking test_client_model in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the test_client_model endpoint to test the \"client\" model. This example creates an API instance, makes the call with a required Client model parameter, and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test \\\"client\\\" model\n    api_response = api_instance.test_client_model(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_client_model: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: Example of creating multiple users at once by passing an array of User objects to the createUsersWithArrayInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags with Java\nDESCRIPTION: Example Java code demonstrating how to find pets by their tags in the Swagger Petstore. The code sets up OAuth2 authentication, specifies a list of tags to search for, and processes the list of Pet objects returned.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization in Java using FakeApi\nDESCRIPTION: This snippet illustrates how to use the testJsonFormData method of the FakeApi class. It shows passing two string parameters for testing JSON serialization of form data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Store Order Using Rest Assured\nDESCRIPTION: Example showing how to place a new purchase order for a pet using the Rest Assured client. Requires an Order object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).store();\n\napi.placeOrder()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Testing Body Parameters with Query Parameters in C#\nDESCRIPTION: Example code demonstrating how to call an API endpoint with both a request body and query parameters. This method requires a User object in the body and a string query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestBodyWithQueryParamsExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new User(); // User | \n            var query = query_example;  // string | \n\n            try\n            {\n                apiInstance.TestBodyWithQueryParams(body, query);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestBodyWithQueryParams: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with UserApi in Java\nDESCRIPTION: This example demonstrates how to create a new user in the system. The createUser method requires a User object and can only be executed by authenticated users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Java in Swagger Codegen\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the Pet API. It includes setting up OAuth2 authentication, creating an instance of the PetApi, and calling the updatePetWithForm method with the required parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using PHP\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It requires an Order object as input and returns the created Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\StoreApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\Order(); // \\Swagger\\Client\\Model\\Order | order placed for purchasing the pet\n\ntry {\n    $result = $apiInstance->placeOrder($body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StoreApi->placeOrder: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining Name Object Properties in Swagger/OpenAPI\nDESCRIPTION: A property table for a 'Name' model object in Swagger/OpenAPI documentation. It specifies four properties: a required 'name' property of type Integer, and three optional properties ('snakeCase', 'property', and '_123Number') with their respective data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to find pets by their tags using the SwaggerPetstore PetApi. It configures OAuth2 authentication and makes an API call to retrieve pets filtered by their tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar tags = [\"tags_example\"]; // [String] | Tags to filter by\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.findPetsByTags(tags, callback);\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java Swagger Client\nDESCRIPTION: This example shows how to retrieve a pet by its ID using the PetApi. It demonstrates setting up API key authentication, passing the pet ID parameter, making the API call to get the Pet object, and handling any exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using PetApi in Java\nDESCRIPTION: This snippet shows how to update an existing pet in the store using the PetApi. It includes setting up the API client, configuring OAuth2 authentication, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in Kotlin\nDESCRIPTION: Example showing how to get pet inventories by status. Returns a map of status codes to quantities. Requires API key authorization and handles both client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = StoreApi()\ntry {\n    val result : kotlin.collections.Map<kotlin.String, kotlin.Int> = apiInstance.getInventory()\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username in Swagger Petstore API\nDESCRIPTION: Retrieves user information by username. Takes a username as input and returns a User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getUserByName(username, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java with Swagger Client\nDESCRIPTION: Example code demonstrating how to test inline additional properties endpoint. Shows handling of generic Object parameter passing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Create User Example in C#\nDESCRIPTION: Example code demonstrating how to create a new user using the Swagger API. This operation can only be performed by logged in users. Takes a User object as input and returns void.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading a File with Default Destination in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to download a file using Alamofire with a default destination. It uses a suggested download destination in the app's Documents directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_28\n\nLANGUAGE: swift\nCODE:\n```\nlet destination = Alamofire.Request.suggestedDownloadDestination(directory: .DocumentDirectory, domain: .UserDomainMask)\nAlamofire.download(.GET, \"https://httpbin.org/stream/100\", destination: destination)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using PetApi in Dart\nDESCRIPTION: This example shows how to find pets by tags using the findPetsByTags method of the PetApi class. It requires OAuth2 authentication and accepts a list of tag values as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar tags = []; // List<String> | Tags to filter by\n\ntry { \n    var result = api_instance.findPetsByTags(tags);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByTags: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using PetApi in Java\nDESCRIPTION: This snippet demonstrates how to find pets by status using the PetApi. It includes setting up the API client, configuring OAuth2 authentication, and handling the list of Pet objects returned.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order by ID - Java Implementation\nDESCRIPTION: Example showing how to delete a purchase order using the StoreApi. Takes an order ID as input and handles potential API exceptions. Only valid for integer IDs less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite in Java using FakeApi\nDESCRIPTION: This code example shows how to use the fakeOuterCompositeSerialize method of FakeApi to test serialization of an object with outer number type. It demonstrates creating a FakeApi instance, calling the method with an OuterComposite object, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Ruby\nDESCRIPTION: This snippet shows how to test the \"client\" model using the FakeApi. It sends a PATCH request to /fake with a Client object as the body and returns the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nbody = Petstore::Client.new # Client | client model\n\n\nbegin\n  #To test \\\"client\\\" model\n  result = api_instance.test_client_model(body)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_client_model: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in C# with Swagger API\nDESCRIPTION: Creates multiple users by accepting an array of User objects. This endpoint allows batch creation of users through a single API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Orders in Kotlin using Store API\nDESCRIPTION: Example of deleting a purchase order by ID using the Store API. Handles both client and server exceptions. Valid for integer IDs less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\nval orderId : kotlin.String = orderId_example // kotlin.String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#deleteOrder\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java Swagger Client\nDESCRIPTION: Example of using the FakeApi to test serialization of composite objects. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates how to retrieve a user's information by their username. It uses the UserApi and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Java\nDESCRIPTION: Example code for retrieving pet inventory status. This endpoint returns a map of status codes to quantities and requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization in Java using Swagger Client\nDESCRIPTION: Example of how to test serialization of outer string types using the FakeApi client. Takes a String value as input and returns a String result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in JavaScript for Swagger Petstore API\nDESCRIPTION: Shows how to use the testEndpointParameters method of the FakeApi class to test various parameter types. It requires several parameters of different types and has optional parameters. This method uses HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure HTTP basic authorization: http_basic_test\nvar http_basic_test = defaultClient.authentications['http_basic_test'];\nhttp_basic_test.username = 'YOUR USERNAME';\nhttp_basic_test.password = 'YOUR PASSWORD';\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar _number = 8.14; // Number | None\n\nvar _double = 1.2; // Number | None\n\nvar patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\n\nvar _byte = \"QmFzZTY0IGV4YW1wbGU=\"; // Blob | None\n\nvar opts = { \n  'integer': 56, // Number | None\n  'int32': 56, // Number | None\n  'int64': 789, // Number | None\n  '_float': 3.4, // Number | None\n  '_string': \"_string_example\", // String | None\n  'binary': \"QmFzZTY0IGV4YW1wbGU=\", // Blob | None\n  '_date': new Date(\"2013-10-20\"), // Date | None\n  'dateTime': new Date(\"2013-10-20T19:20:30+01:00\"), // Date | None\n  'password': \"password_example\", // String | None\n  'callback': \"callback_example\" // String | None\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testEndpointParameters(_number, _double, patternWithoutDelimiter, _byte, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enum Definition in Markdown\nDESCRIPTION: Defines the possible status values for a pet in the store: available, pending, and sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in C# Using FakeApi\nDESCRIPTION: Example demonstrating how to test serialization of a composite object using the FakeApi. It creates an instance of FakeApi, calls the FakeOuterCompositeSerialize method with an optional OuterComposite body parameter, and handles possible exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterCompositeSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterComposite(); // OuterComposite | Input composite as post body (optional) \n\n            try\n            {\n                OuterComposite result = apiInstance.FakeOuterCompositeSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterCompositeSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with UserApi in C#\nDESCRIPTION: This example demonstrates how to create a new user using the UserApi. The method requires a User object as input and can only be executed by authenticated users. No return value is expected from this operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger Petstore API\nDESCRIPTION: API endpoint for creating a new user in the system. This operation can only be performed by authenticated users. It accepts a USER object in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **create_user**\n> create_user (body: USER )\n\t\n\nCreate user\n\nThis can only be done by the logged in user.\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using PetApi in Java\nDESCRIPTION: This example demonstrates how to retrieve a single pet by its ID using the getPetById method from the PetApi class. It returns a Pet object with details of the requested pet.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in C# using Swagger API\nDESCRIPTION: This code demonstrates how to delete a purchase order by providing its ID. The example initializes the StoreApi client and calls the DeleteOrder method. It includes error handling and explains that valid responses will be obtained for integer IDs with values < 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with FakeApi in PHP\nDESCRIPTION: This snippet shows how to use the testEnumParameters method of the FakeApi class. It demonstrates setting up various enum parameters for form, header, and query, including string arrays, integers, and doubles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$enum_form_string_array = array(\"enum_form_string_array_example\"); // string[] | Form parameter enum test (string array)\n$enum_form_string = \"-efg\"; // string | Form parameter enum test (string)\n$enum_header_string_array = array(\"enum_header_string_array_example\"); // string[] | Header parameter enum test (string array)\n$enum_header_string = \"-efg\"; // string | Header parameter enum test (string)\n$enum_query_string_array = array(\"enum_query_string_array_example\"); // string[] | Query parameter enum test (string array)\n$enum_query_string = \"-efg\"; // string | Query parameter enum test (string)\n$enum_query_integer = 56; // int | Query parameter enum test (double)\n$enum_query_double = 1.2; // double | Query parameter enum test (double)\n\ntry {\n    $apiInstance->testEnumParameters($enum_form_string_array, $enum_form_string, $enum_header_string_array, $enum_header_string, $enum_query_string_array, $enum_query_string, $enum_query_integer, $enum_query_double);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testEnumParameters: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username with Petstore CLI\nDESCRIPTION: This snippet shows how to retrieve a user's information by their username using the Petstore CLI. It takes a username as input and returns a User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli getUserByName username=value\n```\n\n----------------------------------------\n\nTITLE: Logging Out User with Swagger-generated C# Client\nDESCRIPTION: This snippet demonstrates how to log out the current user using the UserApi class. It creates an instance of UserApi and calls the LogoutUser method, handling any exceptions that may occur.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Swagger-generated Java Client\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the Swagger-generated Java client. It configures OAuth2 authentication, creates a PetApi instance, and calls the updatePetWithForm method with the pet's ID, name, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Objective-C\nDESCRIPTION: An Objective-C method for creating a new user in the system. This method takes a SWGUser object and sends a POST request to the /user endpoint. This operation can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) createUserWithBody: (SWGUser*) body\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nSWGUser* body = [[SWGUser alloc] init]; // Created user object (optional)\n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Create user\n[apiInstance createUserWithBody:body\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->createUser: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Using testInlineAdditionalProperties with SwaggerPetstore's FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the testInlineAdditionalProperties endpoint, which tests inline additionalProperties. The function accepts an object parameter and provides a callback for handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet param = null; // Object | request body\n\n\napiInstance.testInlineAdditionalProperties(param, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger API\nDESCRIPTION: API endpoint for creating multiple users at once by providing an array of user objects. This endpoint accepts a LIST of USER objects in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# **create_users_with_array_input**\n> create_users_with_array_input (body: LIST [USER] )\n\t\n\nCreates list of users with given input array\n```\n\n----------------------------------------\n\nTITLE: Getting Pet by ID Example\nDESCRIPTION: Example code showing how to retrieve a single pet using its ID. Requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to return\n\ntry { \n    var result = api_instance.getPetById(petId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->getPetById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Java with Swagger Client\nDESCRIPTION: Example code for testing a request with both a body and query parameters using the FakeApi. It sends a User object as the request body and a query string parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data (Go)\nDESCRIPTION: This function updates a pet in the store using form data. It requires the pet ID and optionally accepts updated name and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\nfunc UpdatePetWithForm(ctx context.Context, petId int64, optional *PetApiUpdatePetWithFormOpts) error\n```\n\n----------------------------------------\n\nTITLE: Placing a Pet Order in Python using Petstore API\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It requires an Order object as input and includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\nbody = petstore_api.Order() # Order | order placed for purchasing the pet\n\ntry:\n    # Place an order for a pet\n    api_response = api_instance.place_order(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->place_order: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store with Python\nDESCRIPTION: Example of how to delete a pet from the store using the Petstore API. The snippet demonstrates OAuth2 authentication setup, API instance creation, and pet deletion by ID, with an optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | Pet id to delete\napi_key = 'api_key_example' # str |  (optional)\n\ntry:\n    # Deletes a pet\n    api_instance.delete_pet(pet_id, api_key=api_key)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->delete_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet to Store using Java API Client\nDESCRIPTION: Example code showing how to add a new pet to the store using the Swagger API client. Requires OAuth2 authentication with petstore_auth token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data in Java using Swagger Client\nDESCRIPTION: This example demonstrates how to update a pet's information using form data with the PetApi. It configures OAuth2 authentication, initializes the API client, and shows how to handle parameters and catch exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Client Model Test Example - Python\nDESCRIPTION: Example showing how to test the \"client\" model using a PATCH request to /fake endpoint. Takes a client model as input and returns the same model type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test \\\"client\\\" model\n    api_response = api_instance.test_client_model(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_client_model: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to create multiple users at once using an array input. It initializes the API instance, creates an array of user objects, and calls the createUsersWithArrayInput method with a callback function.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.createUsersWithArrayInput(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Placing an Order Using the Store API in Java\nDESCRIPTION: Example Java code demonstrating how to place an order for a pet using the StoreApi. This example shows how to create an Order object, pass it to the API client, and handle the returned Order or any exceptions that might occur.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using HTTP Basic Authentication in Go\nDESCRIPTION: Shows how to set up HTTP basic authentication for the Petstore API. The example demonstrates creating a context with username and password credentials.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/README.md#2025-04-20_snippet_2\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextBasicAuth, sw.BasicAuth{\n\tUserName: \"username\",\n\tPassword: \"password\",\n})\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java API Client\nDESCRIPTION: Example code demonstrating how to find pets by tags using the Swagger API client. Accepts multiple comma-separated tags for filtering.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Various Endpoint Parameters with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of using the testEndpointParameters method which demonstrates handling multiple parameter types (numbers, strings, dates, binary data, etc.). This method requires HTTP basic authentication and accepts both required and optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure HTTP basic authorization: http_basic_test\nvar http_basic_test = defaultClient.authentications['http_basic_test'];\nhttp_basic_test.username = 'YOUR USERNAME';\nhttp_basic_test.password = 'YOUR PASSWORD';\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar _number = 8.14; // Number | None\n\nvar _double = 1.2; // Number | None\n\nvar patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\n\nvar _byte = \"QmFzZTY0IGV4YW1wbGU=\"; // Blob | None\n\nvar opts = { \n  'integer': 56, // Number | None\n  'int32': 56, // Number | None\n  'int64': 789, // Number | None\n  '_float': 3.4, // Number | None\n  '_string': \"_string_example\", // String | None\n  'binary': \"QmFzZTY0IGV4YW1wbGU=\", // Blob | None\n  '_date': new Date(\"2013-10-20\"), // Date | None\n  'dateTime': new Date(\"2013-10-20T19:20:30+01:00\"), // Date | None\n  'password': \"password_example\", // String | None\n  'callback': \"callback_example\" // String | None\n};\napiInstance.testEndpointParameters(_number, _double, patternWithoutDelimiter, _byte, opts).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory Status in Java using Swagger API\nDESCRIPTION: Example code for retrieving pet inventory status. Returns a map of status codes to quantities. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using Kotlin\nDESCRIPTION: Example of how to upload an image for a pet using the PetApi class. The snippet demonstrates creating an instance of PetApi, specifying the pet ID, additional metadata, and file to upload, and handling the returned ApiResponse.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet to update\nval additionalMetadata : kotlin.String = additionalMetadata_example // kotlin.String | Additional data to pass to server\nval file : java.io.File = /path/to/file.txt // java.io.File | file to upload\ntry {\n    val result : ApiResponse = apiInstance.uploadFile(petId, additionalMetadata, file)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#uploadFile\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#uploadFile\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: SWGUser Model Properties Definition in Objective-C\nDESCRIPTION: Defines the property structure for a user model in Objective-C, including data types and optional flags. Contains properties for user identification, personal information, contact details, and status tracking.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUser.md#2025-04-20_snippet_0\n\nLANGUAGE: objective-c\nCODE:\n```\n**_id** | **NSNumber*** |  | [optional] \n**username** | **NSString*** |  | [optional] \n**firstName** | **NSString*** |  | [optional] \n**lastName** | **NSString*** |  | [optional] \n**email** | **NSString*** |  | [optional] \n**password** | **NSString*** |  | [optional] \n**phone** | **NSString*** |  | [optional] \n**userStatus** | **NSNumber*** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Get Pet Inventory Example - Python\nDESCRIPTION: Shows how to retrieve the pet inventory status using the Petstore API. Returns a map of status codes to quantities. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi(petstore_api.ApiClient(configuration))\n\ntry:\n    # Returns pet inventories by status\n    api_response = api_instance.get_inventory()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->get_inventory: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Delete Purchase Order Example - Python\nDESCRIPTION: Demonstrates how to delete a purchase order by ID using the Petstore API. Works with integer IDs less than 1000, with larger values or non-integers generating API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\norder_id = 'order_id_example' # str | ID of the order that needs to be deleted\n\ntry:\n    # Delete purchase order by ID\n    api_instance.delete_order(order_id)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->delete_order: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to update a pet using form data with the PetApi. It requires OAuth2 authentication and accepts a pet ID, name, and status as parameters. The method returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet that needs to be updated\n\nlet opts = { \n  'name': \"name_example\", // String | Updated name of the pet\n  'status': \"status_example\" // String | Updated status of the pet\n};\napiInstance.updatePetWithForm(petId, opts).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to create multiple users using a list input. It uses the createUsersWithListInput method from the UserApi class, demonstrating similar functionality to the array input method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging a User into the System in Swagger API\nDESCRIPTION: This example shows how to authenticate a user by logging them into the system with a username and password. It initializes the UserApi, calls LoginUser with credentials, and retrieves the authentication token as a string result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a user with Python UserApi\nDESCRIPTION: Example demonstrating how to create a new user in the Petstore API using the UserApi class. The method requires a User object and can only be executed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = petstore_api.User() # User | Created user object\n\ntry:\n    # Create user\n    api_instance.create_user(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Ruby Petstore SDK\nDESCRIPTION: Example of how to find a purchase order by ID in the Petstore Ruby SDK. This method works with integer IDs <= 5 or > 10, with other values generating exceptions. The example demonstrates initialization of the API client, parameter setup, and exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::StoreApi.new\n\norder_id = 789 # Integer | ID of pet that needs to be fetched\n\n\nbegin\n  #Find purchase order by ID\n  result = api_instance.get_order_by_id(order_id)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling StoreApi->get_order_by_id: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Fetching an Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: StatusEnum Values Table in Markdown\nDESCRIPTION: Defines the possible values for the StatusEnum used in the Order status field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nPLACED | \"placed\"\nAPPROVED | \"approved\"\nDELIVERED | \"delivered\"\n```\n\n----------------------------------------\n\nTITLE: Using AnotherFakeApi in Java\nDESCRIPTION: Java code example demonstrating how to use the AnotherFakeApi to test special tags. It creates an instance of the API, sets up a client model, and makes an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/README.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.AnotherFakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class AnotherFakeApiExample {\n\n    public static void main(String[] args) {\n        \n        AnotherFakeApi apiInstance = new AnotherFakeApi();\n        Client body = new Client(); // Client | client model\n        try {\n            Client result = apiInstance.testSpecialTags(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java with Swagger Client\nDESCRIPTION: Example code for testing the \"client\" model using the FakeApi. It sends a Client object as the request body and receives a Client object as the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to delete a user in SwaggerPetstore. It uses the deleteUser method of the UserApi class, taking a username as a parameter to identify the user to be deleted.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | The name that needs to be deleted\n\n\napiInstance.deleteUser(username, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders in Java\nDESCRIPTION: Example code for placing an order for a pet. This endpoint requires an Order object as a parameter and returns the created Order object. No authorization is needed for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in PHP Swagger Client\nDESCRIPTION: Example of testing the 'client' model implementation using a PATCH request to /fake endpoint. Shows how to send and receive Client model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\Client();\n\ntry {\n    $result = $apiInstance->testClientModel($body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testClientModel: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: User Logout - Java Swagger API\nDESCRIPTION: Example of user logout through the Swagger API. No input parameters required, handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in C#\nDESCRIPTION: Example code showing how to delete a pet from the Swagger Petstore by its ID. This configures OAuth2 authentication, creates a PetApi instance, and calls the DeletePet method with the pet ID and optional API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Outer String Serialization in Go API\nDESCRIPTION: Method for testing serialization of outer string types. It accepts an optional OuterString object in the request body and returns an OuterString response. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# **FakeOuterStringSerialize**\n> OuterString FakeOuterStringSerialize(ctx, optional)\n\n\nTest serialization of outer string types\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterStringSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterStringSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterString**](OuterString.md)| Input string as post body | \n\n### Return type\n\n[**OuterString**](OuterString.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Orders by ID in Rust\nDESCRIPTION: This function retrieves purchase orders using their order ID. It works for integer IDs with values less than or equal to 5 or greater than 10, while other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\n::models::Order get_order_by_id(order_id)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java Swagger Client\nDESCRIPTION: Shows how to use the deletePet method to remove a pet from the store by its ID. Requires OAuth2 authentication and accepts an optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameters in JavaScript\nDESCRIPTION: Example demonstrating testing of various parameter types including numbers, dates, strings and binary data. Makes a POST request to /fake endpoint with HTTP basic auth.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure HTTP basic authorization: http_basic_test\nlet http_basic_test = defaultClient.authentications['http_basic_test'];\nhttp_basic_test.username = 'YOUR USERNAME';\nhttp_basic_test.password = 'YOUR PASSWORD';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet _number = 8.14; // Number | None\n\nlet _double = 1.2; // Number | None\n\nlet patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\n\nlet _byte = \"QmFzZTY0IGV4YW1wbGU=\"; // Blob | None\n\nlet opts = { \n  'integer': 56, // Number | None\n  'int32': 56, // Number | None\n  'int64': 789, // Number | None\n  '_float': 3.4, // Number | None\n  '_string': \"_string_example\", // String | None\n  'binary': \"QmFzZTY0IGV4YW1wbGU=\", // Blob | None\n  '_date': new Date(\"2013-10-20\"), // Date | None\n  'dateTime': new Date(\"2013-10-20T19:20:30+01:00\"), // Date | None\n  'password': \"password_example\", // String | None\n  'callback': \"callback_example\" // String | None\n};\napiInstance.testEndpointParameters(_number, _double, patternWithoutDelimiter, _byte, opts).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Describes the properties of the OuterComposite model including their names, types, and optional status. The properties include a number (BigDecimal), a string, and a boolean value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Pet Properties Schema Definition in Markdown\nDESCRIPTION: Defines the core properties of the Pet model including data types and optionality. Properties include id (Long), category (Category object), name (String), photoUrls (String array), tags (Tag array), and status (enum).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List<String>** |  | \n**tags** | [**List<Tag>**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in C# using Swagger\nDESCRIPTION: Example of creating multiple users by passing an array of User objects. Makes a POST request to /user/createWithArray endpoint to create users in batch.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Rust\nDESCRIPTION: Implements the update_pet_with_form API endpoint that updates a pet using form data. Requires pet_id parameter and petstore_auth authorization. Optional name and status parameters can be provided.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: rust\nCODE:\n```\n# **update_pet_with_form**\n> update_pet_with_form(ctx, pet_id, optional)\nUpdates a pet in the store with form data\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **pet_id** | **i64**| ID of pet that needs to be updated | \n **optional** | **map[string]interface{}** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a map[string]interface{}.\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **i64**| ID of pet that needs to be updated | \n **name** | **String**| Updated name of the pet | \n **status** | **String**| Updated status of the pet | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: application/x-www-form-urlencoded\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in C#\nDESCRIPTION: Example of retrieving a user's details by their username using the Swagger-generated C# client. The method returns a User object containing all the user's information and suggests using 'user1' for testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetUserByNameExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be fetched. Use user1 for testing.\n\n            try\n            {\n                // Get user by user name\n                User result = apiInstance.GetUserByName(username);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.GetUserByName: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This snippet shows how to find pets by their tags using the PetApi. It takes a list of tags as a parameter, calls the findPetsByTags method, and prints the result, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID in Kotlin\nDESCRIPTION: Example demonstrating how to retrieve a purchase order by ID. Valid response requires integer IDs with value <= 5 or > 10. Includes error handling for exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = StoreApi()\nval orderId : kotlin.Long = 789 // kotlin.Long | ID of pet that needs to be fetched\ntry {\n    val result : Order = apiInstance.getOrderById(orderId)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#getOrderById\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getOrderById\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in C# using Swagger-Generated Client\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It includes error handling and specifies that integer IDs less than 1000 are valid.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet - Java REST Client Implementation\nDESCRIPTION: Example code showing how to add a new pet to the store using the REST client. Requires pet object in request body and petstore_auth authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.addPet()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Creating a User with the UserApi in Java\nDESCRIPTION: This example demonstrates how to create a new user in the system. This operation can only be performed by a logged-in user and requires a User object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Swagger\nDESCRIPTION: Schema definition for the User model that lists all available properties including id, username, name fields, contact information, authentication details, and status. All fields are marked as optional and include their respective data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of how to use the fakeOuterStringSerialize method to test serialization of outer string types. The method accepts an optional OuterString object as a request body and returns an OuterString response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterString() // OuterString | Input string as post body\n};\napiInstance.fakeOuterStringSerialize(opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Java\nDESCRIPTION: Example demonstrates fetching a user by their username. It returns a User object when successful and includes error handling. The example suggests using 'user1' for testing purposes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Objective-C\nDESCRIPTION: An Objective-C method for retrieving a user's information by specifying their username. The method sends a GET request to the /user/{username} endpoint and returns a SWGUser object containing the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) getUserByNameWithUsername: (NSString*) username\n        completionHandler: (void (^)(SWGUser* output, NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSString* username = @\"username_example\"; // The name that needs to be fetched. Use user1 for testing. \n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Get user by user name\n[apiInstance getUserByNameWithUsername:username\n          completionHandler: ^(SWGUser* output, NSError* error) {\n                        if (output) {\n                            NSLog(@\"%@\", output);\n                        }\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->getUserByName: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Calling FakeApi test_inline_additional_properties Method in Python\nDESCRIPTION: This snippet demonstrates how to call the test_inline_additional_properties method of the FakeApi instance. It includes setting a request body parameter and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nparam = NULL # object | request body\n\ntry:\n    # test inline additionalProperties\n    api_instance.test_inline_additional_properties(param)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_inline_additional_properties: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status (Go)\nDESCRIPTION: This function retrieves pets based on their status. It accepts multiple status values as a slice of strings and returns a slice of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\nfunc FindPetsByStatus(ctx context.Context, status []string) ([]Pet, error)\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java using FakeApi\nDESCRIPTION: This snippet shows how to use the testInlineAdditionalProperties method of the FakeApi class. It demonstrates setting up a request body and making an API call, including error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Kotlin for Swagger API\nDESCRIPTION: Specifies the properties of an Order model with their types and optionality. The properties include id, petId, quantity, shipDate, status (as an enum), and complete flag.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**petId** | **kotlin.Long** |  |  [optional]\n**quantity** | **kotlin.Int** |  |  [optional]\n**shipDate** | **kotlin.String** |  |  [optional]\n**status** | [**inline**](#Status) | Order Status |  [optional]\n**complete** | **kotlin.Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java Swagger Client\nDESCRIPTION: Example of calling the testInlineAdditionalProperties endpoint with a generic Object parameter. Shows basic error handling for the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data - Kotlin Implementation\nDESCRIPTION: Example code for updating a pet using form data including name and status. Requires pet ID and optional form fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet that needs to be updated\nval name : kotlin.String = name_example // kotlin.String | Updated name of the pet\nval status : kotlin.String = status_example // kotlin.String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#updatePetWithForm\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#updatePetWithForm\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Using API Key Authentication in Go\nDESCRIPTION: Demonstrates how to set up API key authentication for requests to the Petstore API. This example shows creating a context with the API key and using it in a service operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/README.md#2025-04-20_snippet_1\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextAPIKey, sw.APIKey{\n\tKey: \"APIKEY\",\n\tPrefix: \"Bearer\", // Omit if not necessary.\n})\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Specifying Return Type for Pet Update API in Kotlin\nDESCRIPTION: Specifies the return type for the pet update API endpoint. The return type is ApiResponse, which is likely defined in a separate file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n### Return type\n\n[**ApiResponse**](ApiResponse.md)\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Markdown\nDESCRIPTION: This snippet describes the API endpoint for updating a pet using form data. It specifies the HTTP method, parameters, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n# **update_pet_with_form**\n> update_pet_with_form (pet_id: INTEGER_64 ; name:  detachable STRING_32 ; status:  detachable STRING_32 )\n\t\n\nUpdates a pet in the store with form data\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **INTEGER_64**| ID of pet that needs to be updated | \n **name** | **STRING_32**| Updated name of the pet | [optional] \n **status** | **STRING_32**| Updated status of the pet | [optional] \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: application/x-www-form-urlencoded\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Parameters for TestEnumParameters in Go\nDESCRIPTION: Defines optional parameters for the TestEnumParameters API endpoint. Parameters include various enum types for form, header, and query parameters, with string, integer, and float data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: Go\nCODE:\n```\n// Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiTestEnumParametersOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **enumFormStringArray** | [**optional.Interface of []string**](string.md)| Form parameter enum test (string array) | \n **enumFormString** | **optional.String**| Form parameter enum test (string) | [default to -efg]\n **enumHeaderStringArray** | [**optional.Interface of []string**](string.md)| Header parameter enum test (string array) | \n **enumHeaderString** | **optional.String**| Header parameter enum test (string) | [default to -efg]\n **enumQueryStringArray** | [**optional.Interface of []string**](string.md)| Query parameter enum test (string array) | \n **enumQueryString** | **optional.String**| Query parameter enum test (string) | [default to -efg]\n **enumQueryInteger** | **optional.Int32**| Query parameter enum test (double) | \n **enumQueryDouble** | **optional.Float64**| Query parameter enum test (double) | \n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java Swagger Client\nDESCRIPTION: Example of using the FakeApi to test client model operations. Makes a PATCH request to /fake endpoint with authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Dart\nDESCRIPTION: Shows how to create multiple users with a list input. Similar to the array input method, it takes a List<User> and returns no response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithListInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithListInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java\nDESCRIPTION: This snippet shows how to retrieve a pet by its ID using the PetApi. It configures API key authentication, specifies the pet ID to retrieve, and calls the getPetById method. The result is a single Pet object matching the provided ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in Java using Swagger Client\nDESCRIPTION: This snippet demonstrates how to log out a user using the Swagger client in Java. It initializes a UserApi instance and calls the logoutUser method. Error handling for API exceptions is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Rust\nDESCRIPTION: Implements the update_pet API endpoint that updates an existing pet's information. Requires Pet object in the request body and petstore_auth authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: rust\nCODE:\n```\n# **update_pet**\n> update_pet(ctx, body)\nUpdate an existing pet\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **body** | [**Pet**](Pet.md)| Pet object that needs to be added to the store | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: application/json, application/xml\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Dart\nDESCRIPTION: Example demonstrating how to place an order for a pet. The example shows how to create and submit an Order object using the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/StoreApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar body = new Order(); // Order | order placed for purchasing the pet\n\ntry { \n    var result = api_instance.placeOrder(body);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->placeOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: Documents the properties of an Animal class model with required className field and optional color field. The table format follows standard API documentation conventions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting User Account\nDESCRIPTION: Example code for deleting a user account by username. This operation can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to upload an image for a pet using the SwaggerPetstore PetApi. It configures OAuth2 authentication and makes an API call to upload an image file for a specific pet.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to update\n\nvar opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.uploadFile(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Various Endpoint Parameters with Authentication in FakeApi Java\nDESCRIPTION: Example of using the testEndpointParameters endpoint with HTTP Basic authentication. This example demonstrates passing a variety of parameter types including numbers, strings, dates, binary data, and more.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Get Inventory Implementation in Objective-C\nDESCRIPTION: Retrieves pet inventories grouped by status. Returns a map of status codes to quantities. Requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGStoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) getInventoryWithCompletionHandler: \n        (void (^)(NSDictionary<NSString*, NSNumber*>* output, NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nSWGDefaultConfiguration *apiConfig = [SWGDefaultConfiguration sharedConfig];\n\n// Configure API key authorization: (authentication scheme: api_key)\n[apiConfig setApiKey:@\"YOUR_API_KEY\" forApiKeyIdentifier:@\"api_key\"];\n\nSWGStoreApi*apiInstance = [[SWGStoreApi alloc] init];\n\n// Returns pet inventories by status\n[apiInstance getInventoryWithCompletionHandler: \n          ^(NSDictionary<NSString*, NSNumber*>* output, NSError* error) {\n                        if (output) {\n                            NSLog(@\"%@\", output);\n                        }\n                        if (error) {\n                            NSLog(@\"Error calling SWGStoreApi->getInventory: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in Dart\nDESCRIPTION: Shows how to authenticate a user by providing username and password. It takes username and password strings as inputs and returns a string token as response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The user name for login\nvar password = password_example; // String | The password for login in clear text\n\ntry { \n    var result = api_instance.loginUser(username, password);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->loginUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Dart\nDESCRIPTION: Example of how to create multiple users using a list of user objects. Similar to the array input method but using a different endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithListInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithListInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates how to log out the current user session. It uses the UserApi and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java Swagger Client\nDESCRIPTION: Shows how to use the findPetsByTags method to retrieve pets based on their tags. Multiple tags can be provided as a comma-separated list, and the method returns all pets that match any of the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Ruby Petstore SDK\nDESCRIPTION: Example of how to get pet inventories grouped by status using the Petstore SDK. This API call requires authentication with an API key. The example shows how to configure authorization, initialize the API client, make the request, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure API key authorization: api_key\n  config.api_key['api_key'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['api_key'] = 'Bearer'\nend\n\napi_instance = Petstore::StoreApi.new\n\nbegin\n  #Returns pet inventories by status\n  result = api_instance.get_inventory\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling StoreApi->get_inventory: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Implementing User Logout in C# Using Swagger Client\nDESCRIPTION: Example showing how to log out the current user using the Swagger-generated C# client. Demonstrates basic API instantiation and error handling for the logout operation. No parameters required and returns void.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User by Username in Java\nDESCRIPTION: Example of updating a user's information by providing their username and a User object with updated details. This operation can only be performed by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in C#\nDESCRIPTION: Example of creating multiple users by passing an array of User objects to the Swagger-generated C# client. This method allows for batch creation of users in a single API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags with the Swagger Client API in Java\nDESCRIPTION: Example of how to use the findPetsByTags method of the PetApi class to find pets by their tags. This code demonstrates OAuth2 authentication setup, creating a tag filter, and handling the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Perl\nDESCRIPTION: Example showing how to update an existing pet. The method requires a Pet object to be passed as the request body with updated values. Uses OAuth2 for authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $body = WWW::SwaggerClient::Object::Pet->new(); # Pet | Pet object that needs to be added to the store\n\neval { \n    $api_instance->update_pet(body => $body);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->update_pet: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Building NuGet Package for SDK\nDESCRIPTION: Command to build and package the SDK project into a NuGet package using the included .nuspec file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnuget pack -Build -OutputDirectory out IO.Swagger.csproj\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the updatePetWithForm method of the PetApi class to update a pet's information using form data. It requires OAuth2 authentication, a pet ID, and optional name and status parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet that needs to be updated\n\nlet opts = { \n  'name': \"name_example\", // String | Updated name of the pet\n  'status': \"status_example\" // String | Updated status of the pet\n};\n\napiInstance.updatePetWithForm(petId, opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest model using a markdown table. It specifies the name, type, description, and optional status of each property. The model includes various data types such as numbers, strings, blobs, dates, and specialized formats.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Number** |  | [optional] \n**int32** | **Number** |  | [optional] \n**int64** | **Number** |  | [optional] \n**_number** | **Number** |  | \n**_float** | **Number** |  | [optional] \n**_double** | **Number** |  | [optional] \n**_string** | **String** |  | [optional] \n**_byte** | **Blob** |  | \n**binary** | **Blob** |  | [optional] \n**_date** | **Date** |  | \n**dateTime** | **Date** |  | [optional] \n**uuid** | **String** |  | [optional] \n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Generating Java Client Library for Petstore API using Java Command\nDESCRIPTION: The underlying Java command that the shell script executes to generate the Java client library for the Petstore API, specifying the input specification URL, target language, and output directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate \\\n  -i https://petstore.swagger.io/v2/swagger.json \\\n  -l java \\\n  -o samples/client/petstore/java\n```\n\n----------------------------------------\n\nTITLE: User Logout in Dart\nDESCRIPTION: Example of how to log out the currently logged-in user from the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\n\ntry { \n    api_instance.logoutUser();\n} catch (e) {\n    print(\"Exception when calling UserApi->logoutUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Running the Swagger Jersey Server with Maven\nDESCRIPTION: Command to build and run the Swagger-generated Jersey server using Maven and the Jetty plugin. This will package the application and start a web server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey1-useTags/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: User Login in Java\nDESCRIPTION: Authenticates user with username and password. Returns a session string upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot.txt File for Web Crawler Access Control\nDESCRIPTION: This code snippet demonstrates how to set up a robots.txt file to control web crawler access to a website. It includes commented examples of how to ban all spiders from the entire site.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/rails5/robots.txt#2025-04-20_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\n# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n#\n# To ban all spiders from the entire site uncomment the next two lines:\n# User-agent: *\n# Disallow: /\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name Implementation in C#\nDESCRIPTION: Example implementation of the TestClassname endpoint using C#. Demonstrates how to configure API key authorization, make a PATCH request, and handle the response. Uses the ModelClient for request/response data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClassnameExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key_query\n            Configuration.Default.AddApiKey(\"api_key_query\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key_query\", \"Bearer\");\n\n            var apiInstance = new FakeClassnameTags123Api();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test class name in snake case\n                ModelClient result = apiInstance.TestClassname(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeClassnameTags123Api.TestClassname: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: Example of creating multiple users using an array input through the Swagger client API. Uses List<User> for batch user creation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Java environment for Swagger Codegen on macOS\nDESCRIPTION: Commands to set up the Java environment on macOS by exporting JAVA_HOME and updating PATH to use Java 11+.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/prerequisites.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nexport JAVA_HOME=`/usr/libexec/java_home -v 11`\nexport PATH=${JAVA_HOME}/bin:$PATH\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in C# with Swagger\nDESCRIPTION: Example demonstrating how to test the 'client' model using FakeApi. Sends a PATCH request to /fake endpoint with a ModelClient body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClientModelExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test \\\"client\\\" model\n                ModelClient result = apiInstance.TestClientModel(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestClientModel: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID using SwaggerPetstore StoreApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It requires an order ID as input and returns an Order object. The function handles exceptions for certain ID ranges.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar orderId = 789; // Number | ID of pet that needs to be fetched\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getOrderById(orderId, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with PetStore Ruby Client\nDESCRIPTION: Demonstrates how to test enum parameters using the PetStore API client. Shows configuration of form, header and query parameters with various data types including string arrays, integers and floats.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nopts = { \n  enum_form_string_array: ['enum_form_string_array_example'], # Array<String> | Form parameter enum test (string array)\n  enum_form_string: '-efg', # String | Form parameter enum test (string)\n  enum_header_string_array: ['enum_header_string_array_example'], # Array<String> | Header parameter enum test (string array)\n  enum_header_string: '-efg', # String | Header parameter enum test (string)\n  enum_query_string_array: ['enum_query_string_array_example'], # Array<String> | Query parameter enum test (string array)\n  enum_query_string: '-efg', # String | Query parameter enum test (string)\n  enum_query_integer: 56, # Integer | Query parameter enum test (double)\n  enum_query_double: 1.2 # Float | Query parameter enum test (double)\n}\n\nbegin\n  #To test enum parameters\n  api_instance.test_enum_parameters(opts)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_enum_parameters: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in Java using StoreApi\nDESCRIPTION: This snippet shows how to retrieve pet inventories by status using the StoreApi. It configures API key authentication, creates an instance of StoreApi, calls the getInventory method, and prints the result. The method returns a Map of status codes to quantities and may throw an ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enum in Markdown Table\nDESCRIPTION: A markdown table defining the enumeration values for the pet status, including available, pending, and sold states.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Value |\n| --- | --- |\n| AVAILABLE | \"available\" |\n| PENDING | \"pending\" |\n| SOLD | \"sold\" |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in C# using Swagger-Generated Client\nDESCRIPTION: This snippet shows how to retrieve pet inventories grouped by status using the StoreApi. It requires API key authorization and returns a dictionary of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary<string, int?> result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Java using Swagger Client\nDESCRIPTION: Logs out currently logged in user session. Takes no parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in C#\nDESCRIPTION: This example shows how to create multiple users at once by providing an array of User objects. The method accepts a List<User> as input and returns no value. Error handling is implemented to catch and display any exceptions that occur during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Out a User with C# Swagger Client\nDESCRIPTION: Example implementation for logging out a user from the current session using a Swagger-generated C# client. The code initializes the UserApi instance and calls the LogoutUser method with error handling to catch and display any exceptions that occur during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a User by Username in Dart\nDESCRIPTION: Demonstrates retrieving a user by their username. It takes a username string as input and returns a User object as response. Suggests using 'user1' for testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be fetched. Use user1 for testing.\n\ntry { \n    var result = api_instance.getUserByName(username);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->getUserByName: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Orders in Go\nDESCRIPTION: Deletes a purchase order by its ID. For valid responses, integer IDs should have values < 1000. IDs above 1000 or non-integers will generate API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# **DeleteOrder**\n> DeleteOrder(ctx, orderId)\nDelete purchase order by ID\n\nFor valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **orderId** | **string**| ID of the order that needs to be deleted | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet in Rust\nDESCRIPTION: Implements the delete_pet API endpoint that deletes a pet by ID. Requires pet_id parameter and petstore_auth authorization. Optional api_key parameter can be provided.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\n# **delete_pet**\n> delete_pet(ctx, pet_id, optional)\nDeletes a pet\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context containing the authentication | nil if no authentication\n  **pet_id** | **i64**| Pet id to delete | \n **optional** | **map[string]interface{}** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a map[string]interface{}.\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **i64**| Pet id to delete | \n **api_key** | **String**|  | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input\nDESCRIPTION: Example showing how to create multiple users using a List input format through the Swagger API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Multiple ApiModules in Angular\nDESCRIPTION: TypeScript code showing how to import and use multiple ApiModules from different Swagger files in an Angular module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory using Swagger Petstore Store API in JavaScript\nDESCRIPTION: Retrieves a map of status codes to quantities representing the pet inventory. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nlet api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\napiInstance.getInventory((error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID in Java using StoreApi\nDESCRIPTION: This snippet demonstrates how to find a purchase order by ID using the StoreApi. It requires the order ID as a parameter and returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Orders by ID in Java\nDESCRIPTION: Example code for retrieving a purchase order by its ID. Valid responses are returned for integer IDs with values less than or equal to 5 or greater than 10. Other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Swagger Petstore API\nDESCRIPTION: API endpoint for retrieving a user's information by their username. It requires the username as a path parameter and returns a USER object with the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n# **user_by_name**\n> user_by_name (username: STRING_32 ): detachable USER\n\t\n\nGet user by user name\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in Java\nDESCRIPTION: This snippet shows how to get the pet inventory by status using the StoreApi. It includes API key authentication setup and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with Swagger Petstore API\nDESCRIPTION: Example showing how to test serialization of outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet opts = { \n  'body': new SwaggerPetstore.OuterBoolean() // OuterBoolean | Input boolean as post body\n};\n\napiInstance.fakeOuterBooleanSerialize(opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger PHP Client\nDESCRIPTION: This example demonstrates creating users using the createUsersWithListInput method of the UserApi. This method accepts a list of user objects similar to the array input method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$body = array(new \\Swagger\\Client\\Model\\User()); // \\Swagger\\Client\\Model\\User[] | List of user object\n\ntry {\n    $apiInstance->createUsersWithListInput($body);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->createUsersWithListInput: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Creating Single User Endpoint - Go\nDESCRIPTION: API endpoint for creating a single user. Requires authentication and accepts a User object in the request body. Returns an empty response on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: go\nCODE:\n```\nCreateUser(ctx, body)\n```\n\n----------------------------------------\n\nTITLE: Deleting a User with Java REST Assured\nDESCRIPTION: This code example demonstrates how to delete a user using the REST Assured library in Java. It sets up the API client and sends a DELETE request with the username as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.deleteUser()\n    .usernamePath(username).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java\nDESCRIPTION: Example code showing how to serialize composite objects using the FakeApi. Makes a POST request to /fake/outer/composite endpoint with an OuterComposite object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using FakeApi to Test Inline Additional Properties in C#\nDESCRIPTION: Example of using FakeApi to test inline additionalProperties functionality. This demonstrates how to create a request with a generic Object parameter to test handling of additional properties in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestInlineAdditionalPropertiesExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = ;  // Object | request body\n\n            try\n            {\n                // test inline additionalProperties\n                apiInstance.TestInlineAdditionalProperties(param);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestInlineAdditionalProperties: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Perl\nDESCRIPTION: This example shows how to use the test_special_tags method of the AnotherFakeApi. It creates an instance of the API, sets up a client model, and makes the API call. The result is then printed or an exception is caught if an error occurs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/AnotherfakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::AnotherFakeApi;\nmy $api_instance = WWW::SwaggerClient::AnotherFakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::Client->new(); # Client | client model\n\neval { \n    my $result = $api_instance->test_special_tags(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling AnotherFakeApi->test_special_tags: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting AnimalFarm Model Structure in Markdown\nDESCRIPTION: Markdown table defining the structure of an AnimalFarm model, though currently empty. Uses standard API documentation format with columns for Name, Type, Description and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in C# with Swagger Client\nDESCRIPTION: Example of creating a single user using the Swagger-generated C# client. Takes a User object as input and requires user to be logged in. Makes a POST request to /user endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Pet model using a Markdown table. It includes the property names, their types, descriptions, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Integer** |  | [optional] \n**category** | [**Category**](Category.md) |  | [optional] \n**name** | **String** |  | \n**photo_urls** | **Array&lt;String&gt;** |  | \n**tags** | [**Array&lt;Tag&gt;**](Tag.md) |  | [optional] \n**status** | **String** | pet status in the store | [optional]\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication\nDESCRIPTION: Authenticates user with username and password. Returns a session string on successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Swagger API\nDESCRIPTION: This endpoint creates a new user. It requires a User object in the request body and can only be performed by a logged-in user. The response is empty.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# **create_user**\n> create_user(body)\nCreate user\n\nThis can only be done by the logged in user.\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **body** | [**User**](User.md)| Created user object | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status - Java REST Client Implementation\nDESCRIPTION: Example code showing how to find pets by their status using the REST client. Accepts multiple comma-separated status values as filter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.findPetsByStatus()\n    .statusQuery(status).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java\nDESCRIPTION: This snippet shows how to place a new order for a pet. It uses the StoreApi class and handles potential ApiExceptions. The method accepts an Order object as a parameter and returns the created Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Building and running with Docker\nDESCRIPTION: Commands to build a Docker image and start a container for the server. This allows running the server in an isolated environment with all dependencies included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# building the image\ndocker build -t swagger_server .\n\n# starting up a container\ndocker run -p 8080:8080 swagger_server\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in Markdown\nDESCRIPTION: This snippet describes the API endpoint for deleting a pet from the store. It specifies the HTTP method, parameters, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# **delete_pet**\n> delete_pet (pet_id: INTEGER_64 ; api_key:  detachable STRING_32 )\n\t\n\nDeletes a pet\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **INTEGER_64**| Pet id to delete | \n **api_key** | **STRING_32**|  | [optional] \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger PHP Client\nDESCRIPTION: This example shows how to create multiple users at once by passing an array of user objects to the API. It initializes the UserApi and passes an array of User model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$body = array(new \\Swagger\\Client\\Model\\User()); // \\Swagger\\Client\\Model\\User[] | List of user object\n\ntry {\n    $apiInstance->createUsersWithArrayInput($body);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->createUsersWithArrayInput: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in the Petstore API using Go\nDESCRIPTION: Function that creates multiple users by accepting an array of User objects. It takes a context for authentication and request handling, along with an array of user data to create multiple users in a single API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nCreateUsersWithArrayInput(ctx, body)\n```\n\n----------------------------------------\n\nTITLE: Place Order Example in Java\nDESCRIPTION: Demonstrates how to place a new order for a pet. Takes a SwagOrder object as input and returns the created order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagStoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nSwagStoreApi api = new SwagStoreApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'body' => SwagOrder.getExample()\n};\n\ntry {\n    // cross your fingers\n    SwagOrder result = api.placeOrder(params);\n    System.debug(result);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Ruby\nDESCRIPTION: Example code demonstrating how to find pets by their status using the Petstore Ruby client. It accepts an array of status values for filtering and returns an array of Pet objects matching the criteria. The example shows authorization setup and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\nstatus = ['status_example'] # Array<String> | Status values that need to be considered for filter\n\n\nbegin\n  #Finds Pets by status\n  result = api_instance.find_pets_by_status(status)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->find_pets_by_status: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username in Java using Swagger Client\nDESCRIPTION: Retrieves user details by username. Returns User object containing user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data in C# using Swagger Client\nDESCRIPTION: Example code demonstrating how to update a pet's information using form data. Uses OAuth2 authentication and handles pet ID, name and status updates through the PetApi client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User in Java\nDESCRIPTION: Updates existing user information. Requires username and updated User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Alamofire Manager with Background Configuration\nDESCRIPTION: This snippet shows how to create an Alamofire Manager that uses a background NSURLSessionConfiguration, which allows requests to continue even when the app is in the background.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_39\n\nLANGUAGE: swift\nCODE:\n```\nlet configuration = NSURLSessionConfiguration.backgroundSessionConfigurationWithIdentifier(\"com.example.app.background\")\nlet manager = Alamofire.Manager(configuration: configuration)\n```\n\n----------------------------------------\n\nTITLE: Sending POST Request to Update Pet with Form Data\nDESCRIPTION: Endpoint for updating a pet in the store using form data. Requires the pet ID as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_6\n\nLANGUAGE: markup\nCODE:\n```\npost /pet/{petId}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java Swagger Client\nDESCRIPTION: Example code showing how to test inline additional properties using the FakeApi client. Demonstrates sending a request with an Object parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting User by Username\nDESCRIPTION: Deletes a user from the system using their username. This operation can only be performed by logged in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Get Order by ID Example - Python\nDESCRIPTION: Demonstrates retrieving a purchase order by ID. Valid responses are returned for integer IDs <= 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\norder_id = 789 # int | ID of pet that needs to be fetched\n\ntry:\n    # Find purchase order by ID\n    api_response = api_instance.get_order_by_id(order_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->get_order_by_id: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in C# Using FakeApi\nDESCRIPTION: Example demonstrating how to test body with query parameters using the FakeApi. It creates an instance of FakeApi, calls the TestBodyWithQueryParams method with a User object body and a query string, and handles possible exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestBodyWithQueryParamsExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new User(); // User | \n            var query = query_example;  // string | \n\n            try\n            {\n                apiInstance.TestBodyWithQueryParams(body, query);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestBodyWithQueryParams: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Files to Pet API using Swagger-generated Perl Client\nDESCRIPTION: This example demonstrates how to upload a file with additional metadata to a pet in the PetStore API using a Swagger-generated Perl client. It initializes the API with OAuth2 authentication, sets required and optional parameters, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_9\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $pet_id = 789; # int | ID of pet to update\nmy $additional_metadata = 'additional_metadata_example'; # string | Additional data to pass to server\nmy $file = '/path/to/file.txt'; # File | file to upload\n\neval { \n    my $result = $api_instance->upload_file(pet_id => $pet_id, additional_metadata => $additional_metadata, file => $file);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->upload_file: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status with C# Swagger Client\nDESCRIPTION: Example of using the PetApi.FindPetsByStatus method to retrieve pets filtered by their status. The code configures OAuth2 authentication, initializes the PetApi client, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByStatusExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var status = status_example;  // List<string> | Status values that need to be considered for filter\n\n            try\n            {\n                // Finds Pets by status\n                List&lt;Pet&gt; result = apiInstance.FindPetsByStatus(status);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByStatus: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store with Java\nDESCRIPTION: Example Java code for deleting a pet from the Swagger Petstore using the deletePet endpoint. The code sets up OAuth2 authentication, specifies the pet ID to delete, and includes an optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Dart\nDESCRIPTION: Demonstrates creating multiple users at once by providing an array of User objects. The method takes a List<User> as input and returns no response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithArrayInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithArrayInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using PetApi in Java\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It initializes the API client, sets up OAuth2 authentication, and calls the updatePetWithForm method with the pet's ID, name, and status. Error handling is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing the Petstore Ruby Gem Locally\nDESCRIPTION: Instructions for installing the generated gem locally. Includes a note about installing development dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/ruby/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngem install ./petstore-1.0.0.gem\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger API\nDESCRIPTION: This endpoint creates multiple users from an array input. It accepts a vector of User objects in the request body. The response is empty and no authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n# **create_users_with_array_input**\n> create_users_with_array_input(body)\nCreates list of users with given input array\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **body** | [**Vec&lt;::models::User&gt;**](User.md)| List of user object | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the testBodyWithQueryParams method which tests a combination of request body and query parameters. This method requires both a User object in the body and a query string parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar body = new SwaggerPetstore.User(); // User | \n\nvar query = \"query_example\"; // String | \n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testBodyWithQueryParams(body, query, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to serialize outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint and handles the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Running Swagger Server with Maven\nDESCRIPTION: Command to clean build the project, package it, and run using the Jetty server through Maven.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/eap/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags Example\nDESCRIPTION: Example code demonstrating how to find pets using tags. Accepts multiple comma-separated tags for filtering.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar tags = []; // List<String> | Tags to filter by\n\ntry { \n    var result = api_instance.findPetsByTags(tags);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByTags: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types and optional status of Category model fields. Includes id (Long) and name (String) fields that are both optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization in Java\nDESCRIPTION: Example code showing how to test serialization of outer string types using the FakeApi. Makes a POST request to /fake/outer/string endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Java REST Assured\nDESCRIPTION: This snippet demonstrates how to create a user using the REST Assured library in Java. It sets up the API client and executes a POST request to create a new user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.createUser()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Orders in Eiffel\nDESCRIPTION: This function deletes a purchase order by ID. It accepts a STRING_32 order_id parameter and has no return value. Valid responses occur for integer IDs with value < 1000, while values above 1000 or non-integers generate API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/STORE_API.md#2025-04-20_snippet_0\n\nLANGUAGE: eiffel\nCODE:\n```\ndelete_order (order_id: STRING_32 )\n```\n\n----------------------------------------\n\nTITLE: Local Development Setup for SwaggerPetstore\nDESCRIPTION: Commands to set up local development environment for SwaggerPetstore, including installing dependencies and linking the package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm link\nnpm link /path/to/<JAVASCRIPT_CLIENT_DIR>\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Codegen on macOS using Homebrew\nDESCRIPTION: Command to install Swagger Codegen on macOS using the Homebrew package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/prerequisites.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nbrew install swagger-codegen\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This snippet shows how to find pets by their tags using the PetApi. It configures OAuth2 authentication, specifies tags for filtering, and handles the returned list of pets.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting User from Swagger Petstore\nDESCRIPTION: Deletes a user from the system. This operation can only be performed by logged in users. Requires username as input parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Order by ID using StoreApi in Java\nDESCRIPTION: This snippet demonstrates how to find a purchase order by ID using the StoreApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Schema Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the ModelApiResponse model. Includes field names, data types, descriptions and optional status indicators.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path via NgModule\nDESCRIPTION: Angular module configuration to set a custom base path for the API using providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Go\nDESCRIPTION: This function uploads an image for a pet. It requires the pet's ID and optionally additional metadata and a file. The request is made via HTTP POST to the /pet/{petId}/uploadImage endpoint and returns an ApiResponse.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\nfunc UploadFile(ctx context.Context, petId int64, optional *PetApiUploadFileOpts) (ModelApiResponse, error)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status Example\nDESCRIPTION: Example code showing how to find pets by their status. Accepts multiple comma-separated status values as filter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar status = []; // List<String> | Status values that need to be considered for filter\n\ntry { \n    var result = api_instance.findPetsByStatus(status);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByStatus: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: This example shows how to create multiple users at once by providing an array of User objects to the API. The method takes a List of User objects as the input parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Swagger API\nDESCRIPTION: This example demonstrates how to fetch a user's details by providing their username. It initializes the UserApi, calls GetUserByName with the username parameter, and prints the returned User object to the debug console.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetUserByNameExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be fetched. Use user1 for testing.\n\n            try\n            {\n                // Get user by user name\n                User result = apiInstance.GetUserByName(username);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.GetUserByName: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Python\nDESCRIPTION: Example of creating a single user using the Petstore API. Creates an instance of the UserApi class and sends a POST request with a User object. Requires no authorization but handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = petstore_api.User() # User | Created user object\n\ntry:\n    # Create user\n    api_instance.create_user(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization in SwaggerPetstore FakeApi (JavaScript)\nDESCRIPTION: This snippet illustrates the usage of the testJsonFormData method in the FakeApi class. It shows how to pass two string parameters and handle the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar param = \"param_example\"; // String | field1\n\nvar param2 = \"param2_example\"; // String | field2\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testJsonFormData(param, param2, callback);\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Java\nDESCRIPTION: This example demonstrates how to fetch a user's details by providing their username. The method returns a User object containing all user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing. \ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: This example shows how to create multiple users at once by providing an array of User objects to the createUsersWithArrayInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Bash\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi. It sends a PATCH request to the /another-fake/dummy endpoint. The method requires a Client model as the request body and returns a Client model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testSpecialTags\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Dart\nDESCRIPTION: This example demonstrates how to get pet inventories by status using the StoreApi. It requires API key authorization and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new StoreApi();\n\ntry { \n    var result = api_instance.getInventory();\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getInventory: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Java\nDESCRIPTION: This snippet shows how to get pet inventories grouped by status. It uses the StoreApi class with API key authentication. The method returns a map of status codes to quantities and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Codegen CLI Docker Image for Code Generation\nDESCRIPTION: This snippet shows how to use the Swagger Codegen CLI Docker image as a standalone executable for generating code. It demonstrates mounting a local directory as a volume and generating a Go client from a Swagger specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/docker.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -v ${PWD}:/local swaggerapi/swagger-codegen-cli generate \\\n    -i https://petstore.swagger.io/v2/swagger.json \\\n    -l go \\\n    -o /local/out/go\n```\n\n----------------------------------------\n\nTITLE: Using OAuth2 with Token Refresh in Go\nDESCRIPTION: Shows advanced OAuth2 authentication with automatic token refresh. This approach uses the golang.org/x/oauth2 package to handle the OAuth2 flow and token management.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/README.md#2025-04-20_snippet_4\n\nLANGUAGE: golang\nCODE:\n```\nimport \"golang.org/x/oauth2\"\n\n/* Perform OAuth2 round trip request and obtain a token */\n\ntokenSource := oauth2cfg.TokenSource(createContext(httpClient), &token)\nauth := context.WithValue(oauth2.NoContext, sw.ContextOAuth2, tokenSource)\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values\nDESCRIPTION: Enum definition table for ArrayEnumEnum listing sea creature values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Creating User in Swagger Petstore API\nDESCRIPTION: Creates a new user in the system. This operation can only be performed by authenticated users. Takes a User object as input and returns no content.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet body = new SwaggerPetstore.User(); // User | Created user object\n\napiInstance.createUser(body).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Logging out a user from the system\nDESCRIPTION: Example demonstrating how to log out the currently logged-in user from the system. This endpoint doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\n\ntry:\n    # Logs out current logged in user session\n    api_instance.logout_user()\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->logout_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with Python Petstore API Client\nDESCRIPTION: This snippet demonstrates how to call the test_inline_additional_properties endpoint with a JSON object parameter. It sets up the API instance and handles potential API exceptions that might occur during the request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nparam = NULL # object | request body\n\ntry:\n    # test inline additionalProperties\n    api_instance.test_inline_additional_properties(param)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_inline_additional_properties: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Retrieving a Pet by ID using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the getPetById method of the PetApi class to fetch a single pet's information by its ID. It requires API key authentication and accepts a pet ID as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nlet api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet petId = 789; // Number | ID of pet to return\n\n\napiInstance.getPetById(petId, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Using the Petstore API in Angular Component\nDESCRIPTION: Example of importing and injecting the Petstore API client into an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '@swagger/angular2-typescript-petstore';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Information in Dart\nDESCRIPTION: Example demonstrating how to update an existing user's information. This operation requires a username to identify the user and a User object containing the updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | name that need to be deleted\nvar body = new User(); // User | Updated user object\n\ntry { \n    api_instance.updateUser(username, body);\n} catch (e) {\n    print(\"Exception when calling UserApi->updateUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using FakeclassnametagsApi to Test Class Name in Java\nDESCRIPTION: Example code demonstrating how to use the FakeclassnametagsApi to call the testClassname method. The snippet shows how to create an instance of the API, prepare a Client model as a parameter, make the API call, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeclassnametagsApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeclassnametagsApi;\n\n\nFakeclassnametagsApi apiInstance = new FakeclassnametagsApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeclassnametagsApi#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using Dart\nDESCRIPTION: This snippet demonstrates how to update a pet using form data with the updatePetWithForm method. It requires OAuth2 authentication and accepts petId as a required parameter, with name and status as optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet that needs to be updated\nvar name = name_example; // String | Updated name of the pet\nvar status = status_example; // String | Updated status of the pet\n\ntry { \n    api_instance.updatePetWithForm(petId, name, status);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePetWithForm: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Information\nDESCRIPTION: Updates existing user information. Requires username and updated User object. Can only be performed by authenticated users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | name that need to be deleted\n\nlet body = new SwaggerPetstore.User(); // User | Updated user object\n\napiInstance.updateUser(username, body).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory by Status in Rust\nDESCRIPTION: This function returns a map of status codes to quantities, providing inventory information by status. It requires API key authorization and returns a HashMap with string keys and integer values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\n::std::collections::HashMap<String, i32> get_inventory(ctx, )\n```\n\n----------------------------------------\n\nTITLE: Creating Users with List Input using Java REST Assured\nDESCRIPTION: This snippet illustrates how to create multiple users using a list input with the REST Assured library in Java. It configures the API client and executes a POST request with a list of user objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.createUsersWithListInput()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Generator Docker Image for Code Generation\nDESCRIPTION: This complex example demonstrates how to use the Swagger Generator Docker image as a self-hosted web application and API for generating code. It includes starting the container, getting its IP, making an HTTP request to generate code, and downloading the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/docker.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# Start container and save the container id\nCID=$(docker run -d swaggerapi/swagger-generator)\n# allow for startup\nsleep 5\n# Get the IP of the running container\nGEN_IP=$(docker inspect --format '{{.NetworkSettings.IPAddress}}'  $CID)\n# Execute an HTTP request and store the download link\nRESULT=$(curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\n  \"swaggerUrl\": \"https://petstore.swagger.io/v2/swagger.json\"\n}' 'http://localhost:8188/api/gen/clients/javascript' | jq '.link' | tr -d '\"')\n# Download the generated zip and redirect to a file\ncurl $RESULT > result.zip\n# Shutdown the swagger generator image\ndocker stop $CID && docker rm $CID\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID using Swagger Petstore API in JavaScript\nDESCRIPTION: Example of how to fetch a purchase order by ID using the Swagger Petstore JavaScript client. This endpoint works with integer IDs with value <= 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\nlet orderId = 789; // Number | ID of pet that needs to be fetched\n\napiInstance.getOrderById(orderId).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Pet API Interface in PHP\nDESCRIPTION: Example implementation of the PetApiInterface in PHP, showing how to set up OAuth2 authorization and implement the uploadFile method. This snippet demonstrates the structure for handling API requests in a Swagger-generated server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/PetApiInterface.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/PetApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\PetApiInterface;\n\nclass PetApi implements PetApiInterface\n{\n\n    /**\n     * Configure OAuth2 access token for authorization: petstore_auth\n     */\n    public function setpetstore_auth($oauthToken)\n    {\n        // Retrieve logged in user from $oauthToken ...\n    }\n\n    // ...\n\n    /**\n     * Implementation of PetApiInterface#uploadFile\n     */\n    public function uploadFile($petId, $additionalMetadata = null, UploadedFile $file = null)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing updateUser Method in PHP\nDESCRIPTION: Example implementation of the updateUser method in the UserApi class. This method updates a user's information and can only be executed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#updateUser\n     */\n    public function updateUser($username, User $body)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Boolean Types in C# with Swagger\nDESCRIPTION: Example demonstrating how to test serialization of outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint with an optional boolean body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterBooleanSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new bool?(); // bool? | Input boolean as post body (optional) \n\n            try\n            {\n                bool? result = apiInstance.FakeOuterBooleanSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterBooleanSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting an Order in Java using StoreApi\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by ID using the StoreApi. It requires the order ID as a parameter and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Java FakeApi Composite Serialization Example\nDESCRIPTION: Example code demonstrating serialization of object with outer number type using the FakeApi client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.fakeOuterCompositeSerialize().execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Using testJsonFormData with Java RestAssured in Swagger API\nDESCRIPTION: Example Java code showing how to call the testJsonFormData API endpoint using RestAssured. This demonstrates how to send form data parameters for JSON serialization using the RestAssured fluent API style.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.testJsonFormData()\n    .paramForm(param)\n    .param2Form(param2).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using PetApi in Dart\nDESCRIPTION: This example demonstrates how to find pets by status using the findPetsByStatus method of the PetApi class. It requires OAuth2 authentication and accepts a list of status values as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar status = []; // List<String> | Status values that need to be considered for filter\n\ntry { \n    var result = api_instance.findPetsByStatus(status);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->findPetsByStatus: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Describes the properties of the ArrayOfNumberOnly model using a markdown table. The model has a single optional property 'ArrayNumber' of type List<decimal?>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ArrayNumber** | **List<decimal?>** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: TestEndpointParameters Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing various parameter types. It requires several parameters of different types and accepts many optional parameters to test parameter handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: Go\nCODE:\n```\n# **TestEndpointParameters**\n> TestEndpointParameters(ctx, number, double, patternWithoutDelimiter, byte_, optional)\nFake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n\nFake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **number** | **float32**| None | \n  **double** | **float64**| None | \n  **patternWithoutDelimiter** | **string**| None | \n  **byte_** | **string**| None | \n **optional** | ***FakeApiTestEndpointParametersOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiTestEndpointParametersOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n\n\n\n\n **integer** | **optional.Int32**| None | \n **int32_** | **optional.Int32**| None | \n **int64_** | **optional.Int64**| None | \n **float** | **optional.Float32**| None | \n **string_** | **optional.String**| None | \n **binary** | **optional.String**| None | \n **date** | **optional.String**| None | \n **dateTime** | **optional.Time**| None | \n **password** | **optional.String**| None | \n **callback** | **optional.String**| None | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\n[http_basic_test](../README.md#http_basic_test)\n\n### HTTP request headers\n\n - **Content-Type**: application/xml; charset=utf-8, application/json; charset=utf-8\n - **Accept**: application/xml; charset=utf-8, application/json; charset=utf-8\n```\n\n----------------------------------------\n\nTITLE: Sending DELETE Request to Remove Order\nDESCRIPTION: Endpoint for deleting a purchase order by its ID. Requires the order ID as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_8\n\nLANGUAGE: markup\nCODE:\n```\ndelete /store/order/{orderId}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User with SwagUserApi in Java\nDESCRIPTION: This code snippet shows how to delete a user using their username with the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'username' => 'username_example'\n};\n\ntry {\n    // cross your fingers\n    api.deleteUser(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image - Java REST Client Implementation\nDESCRIPTION: Example code showing how to upload an image for a pet using the REST client. Requires petId and accepts optional metadata and file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.uploadFile()\n    .petIdPath(petId).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java\nDESCRIPTION: Example code showing how to place a new order for a pet using the StoreApi. Requires an Order object containing the order details to be passed as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Java\nDESCRIPTION: Example of retrieving a user by their username. Returns a User object with the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: This snippet defines the StatusEnum for the Pet model, listing the possible values for the pet's status in the store. It uses a markdown table to present the enumeration values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Objective-C\nDESCRIPTION: An Objective-C method for creating multiple users at once by providing a list of SWGUser objects. The method sends a POST request to the /user/createWithList endpoint and handles the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) createUsersWithListInputWithBody: (NSArray<SWGUser>*) body\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSArray<SWGUser>* body = @[[[SWGUser alloc] init]]; // List of user object (optional)\n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Creates list of users with given input array\n[apiInstance createUsersWithListInputWithBody:body\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->createUsersWithListInput: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Dart\nDESCRIPTION: This snippet demonstrates how to get a pet by its ID using the getPetById method. It requires API key authentication and accepts petId as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to return\n\ntry { \n    var result = api_instance.getPetById(petId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->getPetById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout Operation in Java\nDESCRIPTION: Example of logging out the current user session. Requires no parameters and handles ApiException for any errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting an Order using StoreApi in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by ID using the StoreApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using Kotlin\nDESCRIPTION: Example of how to update a pet using form data with the PetApi class. The snippet demonstrates creating an instance of PetApi, specifying the pet ID, updated name, and status, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet that needs to be updated\nval name : kotlin.String = name_example // kotlin.String | Updated name of the pet\nval status : kotlin.String = status_example // kotlin.String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#updatePetWithForm\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#updatePetWithForm\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username in Kotlin\nDESCRIPTION: Retrieves user information by username. Returns a User object and handles potential client and server errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    val result : User = apiInstance.getUserByName(username)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#getUserByName\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#getUserByName\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Go API\nDESCRIPTION: Method for testing various parameter types, including required and optional parameters. This endpoint demonstrates parameter handling with different data types and requires basic HTTP authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestEndpointParameters**\n> TestEndpointParameters(ctx, number, double, patternWithoutDelimiter, byte_, optional)\nFake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n\nFake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **number** | **float32**| None | \n  **double** | **float64**| None | \n  **patternWithoutDelimiter** | **string**| None | \n  **byte_** | **string**| None | \n **optional** | ***FakeApiTestEndpointParametersOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiTestEndpointParametersOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n\n\n\n\n **integer** | **optional.Int32**| None | \n **int32_** | **optional.Int32**| None | \n **int64_** | **optional.Int64**| None | \n **float** | **optional.Float32**| None | \n **string_** | **optional.String**| None | \n **binary** | **optional.String**| None | \n **date** | **optional.String**| None | \n **dateTime** | **optional.Time**| None | \n **password** | **optional.String**| None | \n **callback** | **optional.String**| None | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\n[http_basic_test](../README.md#http_basic_test)\n\n### HTTP request headers\n\n - **Content-Type**: application/xml; charset=utf-8, application/json; charset=utf-8\n - **Accept**: application/xml; charset=utf-8, application/json; charset=utf-8\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet Using Bash CLI\nDESCRIPTION: Example showing how to add a new pet to the store using the petstore CLI. This endpoint requires a Pet object in the request body and uses petstore_auth authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli addPet\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Java\nDESCRIPTION: Example code showing how to get pet inventories by status using the StoreApi. Returns a map of status codes to quantities. This operation requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using the fake_outer_string_serialize endpoint in Perl\nDESCRIPTION: This example demonstrates how to call the fake_outer_string_serialize endpoint to test serialization of outer string types. It creates an OuterString object and handles the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::OuterString->new(); # OuterString | Input string as post body\n\neval { \n    my $result = $api_instance->fake_outer_string_serialize(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->fake_outer_string_serialize: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Complete C# Example Using the Swagger Petstore API\nDESCRIPTION: A comprehensive example showing how to initialize the AnotherFakeApi client and call the TestSpecialTags method. Includes error handling and debugging output.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/README.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using C# and Swagger\nDESCRIPTION: This snippet shows how to find pets by tags using the FindPetsByTags method of the PetApi class. It sets up OAuth2 authentication, specifies tags for filtering, and handles the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FindPetsByTagsExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var tags = new List<string>(); // List<string> | Tags to filter by\n\n            try\n            {\n                // Finds Pets by tags\n                List<Pet> result = apiInstance.FindPetsByTags(tags);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.FindPetsByTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet - Java Implementation\nDESCRIPTION: Example code demonstrating pet deletion using PetApi client. Shows OAuth2 authentication and handling of optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in C#\nDESCRIPTION: This code snippet demonstrates how to use the TestSpecialTags method of the AnotherFakeApi class. It creates an instance of the API, prepares a ModelClient object as the request body, and makes a PATCH request to test special tags. The method returns a ModelClient object as the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestSpecialTagsExample\n    {\n        public void main()\n        {\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image in C# using Swagger-generated Client\nDESCRIPTION: This snippet shows how to upload an image for a pet. It requires the pet's ID and optionally accepts additional metadata and a file stream. The method uses OAuth2 authentication and returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var _file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, _file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Client to Remote Maven Repository\nDESCRIPTION: Command to deploy the API client library to a remote Maven repository. This requires proper repository configuration before execution.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean deploy\n```\n\n----------------------------------------\n\nTITLE: Deleting a User by Username in Kotlin\nDESCRIPTION: Deletes a user from the system by their username. This operation can only be performed by logged-in users. The example shows how to call the deleteUser method with a username parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#deleteUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#deleteUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Jersey Server with Maven and Jetty\nDESCRIPTION: Command for building and running the Swagger-generated server using Maven and Jetty. This will compile the code, package it, and start a local Jetty server instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name in Snake Case with SwaggerPetstore API in JavaScript\nDESCRIPTION: This code snippet demonstrates how to use the testClassname method of the FakeClassnameTags123Api class. It sets up API key authentication, creates an instance of the API, and makes a PATCH request to test class names in snake case.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key_query\nlet api_key_query = defaultClient.authentications['api_key_query'];\napi_key_query.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.apiKeyPrefix = 'Token';\n\nlet apiInstance = new SwaggerPetstore.FakeClassnameTags123Api();\n\nlet body = new SwaggerPetstore.Client(); // Client | client model\n\n\napiInstance.testClassname(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: User Logout in Swagger Petstore API\nDESCRIPTION: Example showing how to log out the currently authenticated user. This endpoint requires no parameters and terminates the current user session, returning no content in the response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\napiInstance.logoutUser().then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the NumberOnly class using a Markdown table. The class has a single optional property 'justNumber' of type BigDecimal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the AdditionalPropertiesClass model. It includes two optional properties: mapProperty (a string-to-string map) and mapOfMapProperty (a nested map structure).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **{String: String}** |  | [optional] \n**mapOfMapProperty** | **{String: {String: String}}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using PetApi in Java\nDESCRIPTION: This snippet shows how to find pets by tags using the PetApi. It includes setting up the API client, configuring OAuth2 authentication, and handling the list of Pet objects returned.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Kotlin\nDESCRIPTION: Example code showing how to find pets by tags. Multiple tags can be provided as an array of strings, and the method returns an array of Pet objects that match the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval tags : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Tags to filter by\ntry {\n    val result : kotlin.Array<Pet> = apiInstance.findPetsByTags(tags)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#findPetsByTags\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#findPetsByTags\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Kotlin\nDESCRIPTION: Creates multiple users using a list input. Similar to createUsersWithArrayInput, this method allows creating multiple users at once, but specifically using the createUsersWithListInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUsersWithListInput\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUsersWithListInput\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Lists the properties of an Order object, including their types, descriptions, and optional status. It also defines an enum for the order status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Order\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n\n\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Swagger Petstore Model Type Class Instances\nDESCRIPTION: Collection of Haskell type class instances for data models including JSON serialization/deserialization (ToJSON/FromJSON), HTTP API data conversion (ToHttpApiData/FromHttpApiData), equality comparison (Eq), string representation (Show), and MIME type rendering (MimeRender).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_40\n\nLANGUAGE: haskell\nCODE:\n```\ninstance Web.Internal.HttpApiData.ToHttpApiData SwaggerPetstore.Model.OuterBoolean\ninstance Data.Aeson.Types.FromJSON.FromJSON SwaggerPetstore.Model.OuterBoolean\ninstance Data.Aeson.Types.ToJSON.ToJSON SwaggerPetstore.Model.OuterBoolean\ninstance GHC.Show.Show SwaggerPetstore.Model.OuterBoolean\ninstance GHC.Classes.Eq SwaggerPetstore.Model.OuterBoolean\n/* Additional instances omitted for brevity */\ninstance SwaggerPetstore.MimeTypes.MimeRender SwaggerPetstore.MimeTypes.MimeMultipartFormData SwaggerPetstore.Model.E'EnumString\n```\n\n----------------------------------------\n\nTITLE: Deleting a User by Username in C#\nDESCRIPTION: Example of deleting a user by their username using the Swagger-generated C# client. This operation can only be performed by a logged in user and requires the username of the user to be deleted.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be deleted\n\n            try\n            {\n                // Delete user\n                apiInstance.DeleteUser(username);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.DeleteUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Swagger Petstore API\nDESCRIPTION: API endpoint for logging out the currently authenticated user. This endpoint requires no parameters and terminates the user's active session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# **logout_user**\n> logout_user \n\t\n\nLogs out current logged in user session\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Codegen Library\nDESCRIPTION: Command to create the Swagger Codegen library from source. This packages the library, including the templates. Note that modifying templates requires repackaging or specifying a custom path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/building.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmvn package\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using the C# PetApi Client\nDESCRIPTION: Example of using the DeletePet method to remove a pet from the Petstore by its ID. It configures OAuth2 authentication, instantiates the PetApi client, and calls the delete endpoint with a pet ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input\nDESCRIPTION: Creates multiple users by passing an array of User objects. Demonstrates bulk user creation using the Swagger client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java\nDESCRIPTION: This code example demonstrates how to use the testEndpointParameters method of the FakeApi class. It shows how to set up authentication, create an API instance, prepare various types of parameters, make the API call, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using C# and Swagger\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the GetPetById method of the PetApi class. It configures API key authentication, specifies the pet ID to retrieve, and handles the returned Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetPetByIdExample\n    {\n        public void main()\n        {\n            \n            // Configure API key authorization: api_key\n            Configuration.Default.ApiKey.Add(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.ApiKeyPrefix.Add(\"api_key\", \"Bearer\");\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to return\n\n            try\n            {\n                // Find pet by ID\n                Pet result = apiInstance.GetPetById(petId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.GetPetById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Properties in Markdown\nDESCRIPTION: Lists the properties of a Pet object, including their types, descriptions, and optional status. It defines fields such as id, category, name, photoUrls, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Networking with URLSession and Promises in Swift\nDESCRIPTION: This code example shows how to use vanilla URLSession with PromiseKit Foundation extensions to perform a network request and handle JSON responses with promise chains.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_5\n\nLANGUAGE: swift\nCODE:\n```\n// pod 'PromiseKit/Foundation'\n// https://github.com/PromiseKit/Foundation\nURLSession.shared.dataTask(url).asDictionary().then { json in\n    // …\n}.catch { error in\n    //…\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet in Kotlin\nDESCRIPTION: Example code for deleting a pet by its ID from the Swagger Petstore. This snippet shows how to use the deletePet method with a required pet ID parameter and an optional API key parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | Pet id to delete\nval apiKey : kotlin.String = apiKey_example // kotlin.String | \ntry {\n    apiInstance.deletePet(petId, apiKey)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#deletePet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#deletePet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Making POST Request with JSON-encoded Parameters in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to make a POST request with JSON-encoded parameters using Alamofire. It shows how to specify JSON encoding for the parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_22\n\nLANGUAGE: swift\nCODE:\n```\nlet parameters = [\n    \"foo\": [1,2,3],\n    \"bar\": [\n        \"baz\": \"qux\"\n    ]\n]\n\nAlamofire.request(.POST, \"https://httpbin.org/post\", parameters: parameters, encoding: .JSON)\n// HTTP body: {\"foo\": [1, 2, 3], \"bar\": {\"baz\": \"qux\"}}\n```\n\n----------------------------------------\n\nTITLE: Using Basic Response Handler in Alamofire\nDESCRIPTION: Example of a basic response handler that provides access to the raw request, response, data, and error objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_11\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n         .validate()\n         .response { request, response, data, error in\n             print(request)\n             print(response)\n             print(data)\n             print(error)\n          }\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input - Go\nDESCRIPTION: API endpoint for creating multiple users using a list input. Accepts a list of User objects in the request body. Returns an empty response on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nCreateUsersWithListInput(ctx, body)\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Python\nDESCRIPTION: Example of how to update a pet in the store using form data with the Petstore API. The snippet shows OAuth2 authentication configuration, API instance creation, and updating a pet with form parameters for name and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger Petstore API using Java\nDESCRIPTION: This snippet illustrates the process of creating multiple users using a list input. It shows how to use the createUsersWithListInput method of the UserApi class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization with SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the fakeOuterNumberSerialize method to test serialization of outer number types. The method accepts an optional OuterNumber object and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterNumber() // OuterNumber | Input number as post body\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.fakeOuterNumberSerialize(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username\nDESCRIPTION: Retrieves user information by username. Returns a User object containing user details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to update an existing user's information. It requires the username and updated User object as input, and uses the UserApi while handling potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name with Petstore CLI\nDESCRIPTION: Example showing how to test class name in snake case format using the petstore command line interface. The endpoint accepts a client model in the request body and returns a client model response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testClassname\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Objective-C\nDESCRIPTION: This snippet demonstrates how to find pets by status using the SWGPetApi. It requires OAuth2 authentication and accepts an array of status strings. The method returns an array of SWGPet objects and uses a completion handler to handle the response and errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: Objective-C\nCODE:\n```\n-(NSURLSessionTask*) findPetsByStatusWithStatus: (NSArray<NSString*>*) status\n        completionHandler: (void (^)(NSArray<SWGPet>* output, NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Implementing getInventory Method with API Key Authorization in PHP\nDESCRIPTION: This PHP snippet demonstrates the implementation of the getInventory method in the StoreApi class. It includes a method for setting the API key for authorization and returns pet inventories by status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/StoreApiInterface.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/StoreApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\StoreApiInterface;\n\nclass StoreApi implements StoreApiInterface\n{\n\n    /**\n     * Configure API key authorization: api_key\n     */\n    public function setapi_key($apiKey)\n    {\n        // Retrieve logged in user from $apiKey ...\n    }\n\n    // ...\n\n    /**\n     * Implementation of StoreApiInterface#getInventory\n     */\n    public function getInventory()\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Store Order Using Rest Assured\nDESCRIPTION: Example showing how to delete a purchase order by ID using the Rest Assured client. Works with integer IDs less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).store();\n\napi.deleteOrder()\n    .orderIdPath(orderId).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining Numeric Constants with BigDecimal in Java\nDESCRIPTION: This code snippet defines an enumeration of numeric constants using BigDecimal for precise decimal representation. It includes values for numbers 7, 8, 9, and 10. This approach ensures high precision and is suitable for financial or scientific calculations where exact decimal representation is crucial.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to log out the current user from the Swagger Petstore. It demonstrates the usage of the logoutUser method, which doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in Petstore API using Ruby\nDESCRIPTION: This snippet demonstrates how to log out the current user session using the Petstore API. It uses the logout_user method of the UserApi class, which doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nbegin\n  #Logs out current logged in user session\n  api_instance.logout_user\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->logout_user: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Testing Code Injection with FakeApi in Java\nDESCRIPTION: Example of how to use the testCodeInjectEndRnNR method of the FakeApi class. This method tests code injection vulnerabilities by accepting a string parameter that might contain potentially dangerous characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString testCodeInjectEndRnNR = \"testCodeInjectEndRnNR_example\"; // String | To test code injection *_/ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r\ntry {\n    apiInstance.testCodeInjectEndRnNR(testCodeInjectEndRnNR);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testCodeInjectEndRnNR\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing createUser Method in PHP\nDESCRIPTION: Example implementation of the createUser method in the UserApi class. This method creates a new user and can only be executed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#createUser\n     */\n    public function createUser(User $body)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger Petstore API using Java\nDESCRIPTION: This code demonstrates how to delete a user from the Swagger Petstore API. It uses the deleteUser method from the UserApi class, which requires a username as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP POST Endpoint for Place Order\nDESCRIPTION: HTTP endpoint definition for placing a new pet order in the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_14\n\nLANGUAGE: http\nCODE:\n```\npost /store/order\n```\n\n----------------------------------------\n\nTITLE: Implementing UpdatePetWithForm in C# for Pet Store API\nDESCRIPTION: This C# example demonstrates how to update a pet in the store using form data. It shows the proper way to instantiate the PetApi client, configure OAuth2 access token for authorization, and handle exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing getUserByName Method in PHP\nDESCRIPTION: Example implementation of the getUserByName method in the UserApi class. This method retrieves a user's information by their username.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#getUserByName\n     */\n    public function getUserByName($username)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Dart\nDESCRIPTION: Example demonstrating how to delete a user by username. This operation can only be performed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be deleted\n\ntry { \n    api_instance.deleteUser(username);\n} catch (e) {\n    print(\"Exception when calling UserApi->deleteUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Object Properties Definition in Markdown\nDESCRIPTION: Documents the properties of the Pet model including their types, descriptions and whether they are optional. The Pet model contains basic information like ID, category, name, photo URLs, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger API\nDESCRIPTION: This example demonstrates how to create multiple users using a list input. While functionally similar to the array input method, it uses the CreateUsersWithListInput endpoint. It initializes the API client and passes a List of User objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithListInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithListInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithListInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Codegen Modules with Swagger Codegen CLI\nDESCRIPTION: This command uses the 'meta' function of Swagger Codegen CLI to generate a template for creating a custom code generator library. It specifies the output directory, name of the client codegen, and package name for the generated code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar meta \\\n  -o output/myLibrary -n myClientCodegen -p com.my.company.codegen\n```\n\n----------------------------------------\n\nTITLE: Using TestSpecialTags Method in C# with Swagger Client\nDESCRIPTION: This example demonstrates how to use the TestSpecialTags method from the AnotherFakeApi class. It creates an API instance, prepares a ModelClient object as input, makes the API call, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestSpecialTagsExample\n    {\n        public void main()\n        {\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java\nDESCRIPTION: Example code showing how to test various parameter types including numbers, strings, dates, and binary data. Demonstrates authentication and parameter handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in Java using StoreApi\nDESCRIPTION: This snippet shows how to retrieve pet inventories by status using the StoreApi. It requires API key authentication and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing createUsersWithArrayInput Method in PHP\nDESCRIPTION: Example implementation of the createUsersWithArrayInput method in the UserApi class. This method creates multiple users from an input array.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#createUsersWithArrayInput\n     */\n    public function createUsersWithArrayInput(array $body)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite Objects in Java\nDESCRIPTION: Example of using the fakeOuterCompositeSerialize endpoint to test serialization of objects with outer number type. Creates an OuterComposite object, makes the API call, and handles the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store (Go)\nDESCRIPTION: This function deletes a pet from the store based on its ID. It requires OAuth authentication and optionally accepts an API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nfunc DeletePet(ctx context.Context, petId int64, optional *PetApiDeletePetOpts) error\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java\nDESCRIPTION: Example code showing how to test serialization of object with outer number type using the FakeApi. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image in Java using Swagger Codegen\nDESCRIPTION: This snippet shows how to upload an image for a pet using the Swagger Codegen generated client. It configures OAuth2 authentication, creates a PetApi instance, and calls the uploadFile method with the pet's ID, additional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication\nDESCRIPTION: Example demonstrating user login functionality using username and password credentials. Returns a string token upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java with Swagger Client\nDESCRIPTION: Example code showing how to call the testEnumParameters endpoint with various enum parameters. Demonstrates passing enum values through form, header and query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout\nDESCRIPTION: Logs out the currently authenticated user session. Requires no parameters and returns no content.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\napiInstance.logoutUser().then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with FakeApi in Perl\nDESCRIPTION: This snippet shows how to use the test_enum_parameters method of the FakeApi. It sets up various enum parameters as arrays and individual values, then makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $enum_form_string_array = []; # ARRAY[string] | Form parameter enum test (string array)\nmy $enum_form_string = 'enum_form_string_example'; # string | Form parameter enum test (string)\nmy $enum_header_string_array = []; # ARRAY[string] | Header parameter enum test (string array)\nmy $enum_header_string = 'enum_header_string_example'; # string | Header parameter enum test (string)\nmy $enum_query_string_array = []; # ARRAY[string] | Query parameter enum test (string array)\nmy $enum_query_string = 'enum_query_string_example'; # string | Query parameter enum test (string)\nmy $enum_query_integer = 56; # int | Query parameter enum test (double)\nmy $enum_query_double = 1.2; # double | Query parameter enum test (double)\n\neval { \n    $api_instance->test_enum_parameters(enum_form_string_array => $enum_form_string_array, enum_form_string => $enum_form_string, enum_header_string_array => $enum_header_string_array, enum_header_string => $enum_header_string, enum_query_string_array => $enum_query_string_array, enum_query_string => $enum_query_string, enum_query_integer => $enum_query_integer, enum_query_double => $enum_query_double);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_enum_parameters: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a pet with form data using Python\nDESCRIPTION: Example code for updating a pet in the Petstore API using form data in Python. Requires OAuth2 authentication with the petstore_auth token, pet ID to identify the pet to update, and optional name and status parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n```\n\n----------------------------------------\n\nTITLE: Example Usage of C# Swagger Petstore SDK\nDESCRIPTION: This code snippet demonstrates how to use the C# Swagger Petstore SDK to make an API call to test special tags. It includes error handling and debug output.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/README.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order using its ID. It uses the StoreApi class and handles potential ApiExceptions. The method accepts order IDs as strings, with a note that valid responses are for integer IDs less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image File to PetStore API in Python\nDESCRIPTION: This example shows how to upload an image file to a pet's record in the PetStore API. It configures OAuth2 authentication, creates an API client instance, and uploads a file with optional metadata. The response is then pretty-printed or any exceptions are handled.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet to update\nadditional_metadata = 'additional_metadata_example' # str | Additional data to pass to server (optional)\nfile = '/path/to/file.txt' # file | file to upload (optional)\n\ntry:\n    # uploads an image\n    api_response = api_instance.upload_file(pet_id, additional_metadata=additional_metadata, file=file)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->upload_file: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order in Markdown\nDESCRIPTION: Enumerates the possible values for the status property of an Order. The enum includes 'placed', 'approved', and 'delivered' statuses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Specifies the properties of an Order object including id, pet_id, quantity, ship_date, status, and complete. Each property is defined with its name, type, description, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**pet_id** | **int** |  | [optional] \n**quantity** | **int** |  | [optional] \n**ship_date** | **datetime** |  | [optional] \n**status** | **str** | Order Status | [optional] \n**complete** | **bool** |  | [optional] [default to False]\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in FakeApi using Java\nDESCRIPTION: Example code demonstrating how to test an endpoint that accepts both a request body and query parameters. It creates a FakeApi instance, initializes a User object for the body, and provides a query string parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders in Go\nDESCRIPTION: Places an order for a pet. Requires an Order object in the request body and returns the created Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# **PlaceOrder**\n> Order PlaceOrder(ctx, body)\nPlace an order for a pet\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**Order**](Order.md)| order placed for purchasing the pet | \n\n### Return type\n\n[**Order**](Order.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerPetstore via npm\nDESCRIPTION: Command to install the SwaggerPetstore package using npm.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install swagger_petstore --save\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in C# with Swagger\nDESCRIPTION: Example of authenticating a user with username and password. Makes a GET request to /user/login endpoint and returns a session string upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Orders by ID with C# Client\nDESCRIPTION: Example of using the C# client to find a purchase order by ID. This code demonstrates how to initialize the StoreApi client and call the GetOrderById method with an order ID parameter, including exception handling and processing the returned Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using PetApi in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a pet by its ID using the PetApi. It includes setting up the API client, configuring API key authentication, and handling the returned Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger API\nDESCRIPTION: Example showing how to create multiple users using the list input endpoint. Similar to the array input method, this endpoint accepts a list of User objects for batch processing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $body = [WWW::SwaggerClient::Object::ARRAY[User]->new()]; # ARRAY[User] | List of user object\n\neval { \n    $api_instance->create_users_with_list_input(body => $body);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->create_users_with_list_input: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: User Login - Java Swagger API\nDESCRIPTION: Example of user login through the Swagger API. Takes username and password as input, returns a String token, and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table\nDESCRIPTION: Markdown table defining the User model properties including field names, data types, descriptions and optional status flags. Properties include user identification, personal information, contact details and status fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**username** | **str** |  | [optional] \n**first_name** | **str** |  | [optional] \n**last_name** | **str** |  | [optional] \n**email** | **str** |  | [optional] \n**password** | **str** |  | [optional] \n**phone** | **str** |  | [optional] \n**user_status** | **int** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Example Usage of SwaggerClient Pet API\nDESCRIPTION: Sample code demonstrating how to configure the API client with OAuth2 authentication and make a request to add a new pet to the store.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/README.md#2025-04-20_snippet_3\n\nLANGUAGE: objc\nCODE:\n```\nSWGDefaultConfiguration *apiConfig = [SWGDefaultConfiguration sharedConfig];\n\n// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n\n\nSWGPet* *body = [[SWGPet alloc] init]; // Pet object that needs to be added to the store (optional)\n\nSWGPetApi *apiInstance = [[SWGPetApi alloc] init];\n\n// Add a new pet to the store\n[apiInstance addPetWithBody:body\n              completionHandler: ^(NSError* error) {\n                            if (error) {\n                                NSLog(@\"Error: %@\", error);\n                            }\n                        }];\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Kotlin\nDESCRIPTION: Deletes a user from the system by username. This operation can only be performed by logged in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#deleteUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#deleteUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing createUsersWithListInput Method in PHP\nDESCRIPTION: Example implementation of the createUsersWithListInput method in the UserApi class. This method creates multiple users from an input list.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#createUsersWithListInput\n     */\n    public function createUsersWithListInput(array $body)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model with Swagger Petstore API\nDESCRIPTION: Example showing how to test the client model using the FakeApi. Makes a PATCH request to /fake endpoint with a client model payload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet body = new SwaggerPetstore.Client(); // Client | client model\n\n\napiInstance.testClientModel(body, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties Table - Markdown\nDESCRIPTION: Markdown table defining the properties of the Client model, including property name, data type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Logging in a User to Swagger Petstore API using C#\nDESCRIPTION: This snippet shows how to log a user into the system. It initializes the UserApi, provides a username and password, and calls the LoginUser method. The result is a string token for the user's session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters Example with C# Swagger Client\nDESCRIPTION: This example demonstrates how to call the TestEndpointParameters endpoint which tests various parameter types in a C# client. It configures HTTP basic authentication and passes required parameters including number, double, pattern, byte array and several optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEndpointParametersExample\n    {\n        public void main()\n        {\n            // Configure HTTP basic authorization: http_basic_test\n            Configuration.Default.Username = \"YOUR_USERNAME\";\n            Configuration.Default.Password = \"YOUR_PASSWORD\";\n\n            var apiInstance = new FakeApi();\n            var number = 8.14;  // decimal? | None\n            var _double = 1.2;  // double? | None\n            var patternWithoutDelimiter = patternWithoutDelimiter_example;  // string | None\n            var _byte = B;  // byte[] | None\n            var integer = 56;  // int? | None (optional) \n            var int32 = 56;  // int? | None (optional) \n            var int64 = 789;  // long? | None (optional) \n            var _float = 3.4;  // float? | None (optional) \n            var _string = _string_example;  // string | None (optional) \n            var binary = B;  // byte[] | None (optional) \n            var date = 2013-10-20;  // DateTime? | None (optional) \n            var dateTime = 2013-10-20T19:20:30+01:00;  // DateTime? | None (optional) \n            var password = password_example;  // string | None (optional) \n            var callback = callback_example;  // string | None (optional) \n\n            try\n            {\n                // Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n                apiInstance.TestEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, _string, binary, date, dateTime, password, callback);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEndpointParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Java\nDESCRIPTION: This example shows how to delete a user from the system using their username. This operation can only be performed by an authenticated user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking fake_outer_boolean_serialize in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the fake_outer_boolean_serialize endpoint to test serialization of outer boolean types. This example creates an API instance, makes the call with an optional body parameter, and handles any exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterBoolean() # OuterBoolean | Input boolean as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_boolean_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_boolean_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: FormatTest Properties Table Definition in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and optional status of the FormatTest class. Includes various data types like integers, floats, strings, dates, and binary data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Loading the Store API Package in Perl\nDESCRIPTION: Demonstrates how to load the Store API package in a Perl application. This is typically the first step before using any of the API methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::StoreApi;\n```\n\n----------------------------------------\n\nTITLE: Using testEnumParameters with SwaggerPetstore's FakeApi in JavaScript\nDESCRIPTION: Example showing how to call the testEnumParameters endpoint with various enum parameters in different locations (form, header, query). The function accepts string arrays, strings, and number values and provides a callback for handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet opts = { \n  'enumFormStringArray': [\"enumFormStringArray_example\"], // [String] | Form parameter enum test (string array)\n  'enumFormString': \"-efg\", // String | Form parameter enum test (string)\n  'enumHeaderStringArray': [\"enumHeaderStringArray_example\"], // [String] | Header parameter enum test (string array)\n  'enumHeaderString': \"-efg\", // String | Header parameter enum test (string)\n  'enumQueryStringArray': [\"enumQueryStringArray_example\"], // [String] | Query parameter enum test (string array)\n  'enumQueryString': \"-efg\", // String | Query parameter enum test (string)\n  'enumQueryInteger': 56, // Number | Query parameter enum test (double)\n  'enumQueryDouble': 1.2 // Number | Query parameter enum test (double)\n};\n\napiInstance.testEnumParameters(opts, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model with SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the testClientModel method to test the \"client\" model serialization. This method requires a Client object as input and returns a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testClientModel(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Uploading Image to Pet Profile in Swagger API (Java)\nDESCRIPTION: Shows how to upload an image file to a pet's profile using the Swagger Pet API. The example sets up OAuth2 authentication, instantiates a PetApi object, and calls the uploadFile method with pet ID, optional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization with FakeApi\nDESCRIPTION: Example showing how to test serialization of outer number types using the FakeApi. Makes a POST request to /fake/outer/number endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Python Testing Dependencies for Swagger Codegen\nDESCRIPTION: A requirements file specifying the Python testing packages needed for the Swagger Codegen project. It includes pytest for unit testing, pytest-cov for code coverage reporting, pluggy and py which are dependencies of pytest, and randomize for test randomization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/test-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\npytest>=3.3.1\npytest-cov>=2.5.1\npluggy>=0.3.1\npy>=1.4.31\nrandomize>=0.13\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelList class using a Markdown table. The class has a single optional property named '_123List' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameters with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to test an endpoint with various parameter types. It configures basic authentication, creates a FakeApi instance, and makes a request with multiple parameters of different types including numbers, strings, dates, and binary data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Sending POST Request to Upload Pet Image\nDESCRIPTION: Endpoint for uploading an image for a pet. Requires the pet ID as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_7\n\nLANGUAGE: markup\nCODE:\n```\npost /pet/{petId}/uploadImage\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to update an existing pet using the SwaggerPetstore PetApi. It configures OAuth2 authentication and makes an API call to update a pet's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.updatePet(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java\nDESCRIPTION: Example code showing how to test serialization of composite objects using the FakeApi. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Schema in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the ModelReturn model schema with a single optional integer property named '_return' for use in Swagger/OpenAPI specifications. The property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Describes the properties of the ArrayOfArrayOfNumberOnly model using a Markdown table. The model has one optional property 'arrayArrayNumber' which is a nested list of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet - JavaScript Swagger Client\nDESCRIPTION: Example of deleting a pet from the store using the Swagger Petstore client. Requires OAuth2 authentication and pet ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | Pet id to delete\n\nvar opts = { \n  'apiKey': \"apiKey_example\" // String | \n};\napiInstance.deletePet(petId, opts).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Dog Model Package in Perl\nDESCRIPTION: This code snippet demonstrates how to load the Dog model package in a Perl application using the WWW::SwaggerClient::Object namespace.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Dog;\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using PetApi in Java\nDESCRIPTION: This example demonstrates how to find pets by their status using the findPetsByStatus method from the PetApi class. It accepts multiple status values as a list and returns matching Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.addPet(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Using testJsonFormData with SwaggerPetstore's FakeApi in JavaScript\nDESCRIPTION: Example showing how to call the testJsonFormData endpoint, which tests JSON serialization of form data. The function requires two string parameters and provides a callback for handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet param = \"param_example\"; // String | field1\n\nlet param2 = \"param2_example\"; // String | field2\n\n\napiInstance.testJsonFormData(param, param2, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Dart\nDESCRIPTION: Example of how to retrieve a user's information by their username using the getUserByName method. Returns a User object containing the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be fetched. Use user1 for testing.\n\ntry { \n    var result = api_instance.getUserByName(username);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->getUserByName: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Petstore API using Python\nDESCRIPTION: Example demonstrating how to create multiple users using the createWithList endpoint. Similar to the array input method, this code passes a list of User objects to the create_users_with_list_input method of the UserApi with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = [petstore_api.User()] # list[User] | List of user object\n\ntry:\n    # Creates list of users with given input array\n    api_instance.create_users_with_list_input(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_users_with_list_input: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status Implementation in Java\nDESCRIPTION: Example code showing how to query pets by their status using the PetApi client. Demonstrates handling of list parameters and response objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User with UserApi in Dart\nDESCRIPTION: Example of how to create a new user using the UserApi. This operation can only be performed by a logged-in user and accepts a User object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = new User(); // User | Created user object\n\ntry { \n    api_instance.createUser(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown User Model Properties Table\nDESCRIPTION: Markdown table defining the properties, types and descriptions for the User model class. Includes optional fields for user identification, authentication and status tracking.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Username** | **string** |  | [optional] \n**FirstName** | **string** |  | [optional] \n**LastName** | **string** |  | [optional] \n**Email** | **string** |  | [optional] \n**Password** | **string** |  | [optional] \n**Phone** | **string** |  | [optional] \n**UserStatus** | **int?** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Calling FakeApi test_enum_parameters Method in Python\nDESCRIPTION: This snippet shows how to call the test_enum_parameters method of the FakeApi instance. It includes setting various enum parameters and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nenum_form_string_array = ['enum_form_string_array_example'] # list[str] | Form parameter enum test (string array) (optional)\nenum_form_string = '-efg' # str | Form parameter enum test (string) (optional) (default to -efg)\nenum_header_string_array = ['enum_header_string_array_example'] # list[str] | Header parameter enum test (string array) (optional)\nenum_header_string = '-efg' # str | Header parameter enum test (string) (optional) (default to -efg)\nenum_query_string_array = ['enum_query_string_array_example'] # list[str] | Query parameter enum test (string array) (optional)\nenum_query_string = '-efg' # str | Query parameter enum test (string) (optional) (default to -efg)\nenum_query_integer = 56 # int | Query parameter enum test (double) (optional)\nenum_query_double = 1.2 # float | Query parameter enum test (double) (optional)\n\ntry:\n    # To test enum parameters\n    api_instance.test_enum_parameters(enum_form_string_array=enum_form_string_array, enum_form_string=enum_form_string, enum_header_string_array=enum_header_string_array, enum_header_string=enum_header_string, enum_query_string_array=enum_query_string_array, enum_query_string=enum_query_string, enum_query_integer=enum_query_integer, enum_query_double=enum_query_double)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_enum_parameters: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining Store API Module and Endpoints in Haskell\nDESCRIPTION: Module definition for the Store API with endpoint functions for deleting orders, retrieving inventory, getting orders by ID, and placing new orders. Each function specifies its HTTP method, path, parameters, and return types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_44\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.API.Store\n\n-- | <pre>\n--   DELETE /store/order/{order_id}\n--   </pre>\n--   \n--   Delete purchase order by ID\n--   \n--   For valid response try integer IDs with value &lt; 1000. Anything\n--   above 1000 or nonintegers will generate API errors\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\ndeleteOrder :: Accept accept -> OrderIdText -> SwaggerPetstoreRequest DeleteOrder MimeNoContent res accept\ndata DeleteOrder\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   GET /store/inventory\n--   </pre>\n--   \n--   Returns pet inventories by status\n--   \n--   Returns a map of status codes to quantities\n--   \n--   AuthMethod: <a>AuthApiKeyApiKey</a>\ngetInventory :: SwaggerPetstoreRequest GetInventory MimeNoContent ((Map String Int)) MimeJSON\ndata GetInventory\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   GET /store/order/{order_id}\n--   </pre>\n--   \n--   Find purchase order by ID\n--   \n--   For valid response try integer IDs with value <a>5 or</a> 10. Other\n--   values will generated exceptions\ngetOrderById :: Accept accept -> OrderId -> SwaggerPetstoreRequest GetOrderById MimeNoContent Order accept\ndata GetOrderById\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   POST /store/order\n--   </pre>\n--   \n--   Place an order for a pet\nplaceOrder :: (Consumes PlaceOrder contentType, MimeRender contentType Order) => ContentType contentType -> Accept accept -> Order -> SwaggerPetstoreRequest PlaceOrder contentType Order accept\ndata PlaceOrder\n\n-- | <i>Body Param</i> \"body\" - order placed for purchasing the pet\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the fakeOuterBooleanSerialize method to test serialization of outer boolean types. The method accepts an optional OuterBoolean object as a parameter and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterBoolean() // OuterBoolean | Input boolean as post body\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.fakeOuterBooleanSerialize(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input\nDESCRIPTION: Creates multiple users using a list input. Takes a List of User objects as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in Dart\nDESCRIPTION: Example code for logging out the currently logged-in user. This method doesn't require any parameters and ends the user's session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\n\ntry { \n    api_instance.logoutUser();\n} catch (e) {\n    print(\"Exception when calling UserApi->logoutUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory Status Using CLI\nDESCRIPTION: Command line example for getting pet inventory quantities grouped by status. Returns a map of status codes to quantities. Requires API key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli getInventory\n```\n\n----------------------------------------\n\nTITLE: Java Example Using FakeApi\nDESCRIPTION: Example Java code demonstrating how to use the FakeApi to serialize boolean values. Shows client initialization, API call, and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/README.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.FakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class FakeApiExample {\n\n    public static void main(String[] args) {\n        \n        FakeApi apiInstance = new FakeApi();\n        Boolean body = true; // Boolean | Input boolean as post body\n        try {\n            Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Successful Login\nDESCRIPTION: JSON schema defining the response structure for a successful login operation, including rate limit and token expiration headers, and returning a string token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_26\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"successful operation\",\n  \"headers\" : {\n    \"X-Rate-Limit\" : {\n      \"type\" : \"integer\",\n      \"format\" : \"int32\",\n      \"description\" : \"calls per hour allowed by the user\"\n    },\n    \"X-Expires-After\" : {\n      \"type\" : \"string\",\n      \"format\" : \"date-time\",\n      \"description\" : \"date in UTC when toekn expires\"\n    }\n  },\n  \"schema\" : {\n    \"type\" : \"string\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a User by Name with Java REST Assured\nDESCRIPTION: This snippet shows how to retrieve a user by their username using the REST Assured library in Java. It configures the API client and executes a GET request with the username as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nUserApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).user();\n\napi.getUserByName()\n    .usernamePath(username).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List - Java Swagger Client\nDESCRIPTION: Example of creating multiple users by passing a list of User objects using the Swagger client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Enum Values in Swagger\nDESCRIPTION: Defines boolean enum constants with their corresponding values. The enum includes two values: _true mapped to true and _false mapped to false.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_true` (value: `true`)\n\n* `_false` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Logging out User in Swagger API\nDESCRIPTION: This endpoint logs out the current logged-in user session. It doesn't require any parameters and returns an empty response. No authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n# **logout_user**\n> logout_user()\nLogs out current logged in user session\n\n\n\n### Required Parameters\nThis endpoint does not need any parameter.\n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties for SwaggerPetstore API in Markdown\nDESCRIPTION: This code snippet defines the properties of the Name model for the SwaggerPetstore API. It includes four properties: name (required), snakeCase (optional), property (optional), and _123Number (optional). Each property is defined with its type and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | \n**snakeCase** | **Number** |  | [optional] \n**property** | **String** |  | [optional] \n**_123Number** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Placing New Order Example in Dart\nDESCRIPTION: Demonstrates how to place a new order for a pet. Accepts an Order object as input and returns the created order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/StoreApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar body = new Order(); // Order | order placed for purchasing the pet\n\ntry { \n    var result = api_instance.placeOrder(body);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->placeOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data in C#\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It requires the pet's ID and optionally accepts updated name and status. The method uses OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders in Rust\nDESCRIPTION: This function allows placing an order for a pet. It requires an Order object as input and returns the created Order. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\n::models::Order place_order(body)\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID in Java\nDESCRIPTION: Example code demonstrating how to find a purchase order by its ID using the StoreApi. Valid responses are returned for integer IDs with values ≤ 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Python with Swagger API\nDESCRIPTION: Shows how to make a PUT request with both body data and query parameters. The example creates a FakeApi instance, sends a User object as body and a string as query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.User() # User | \nquery = 'query_example' # str | \n\ntry:\n    api_instance.test_body_with_query_params(body, query)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_body_with_query_params: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in Dart\nDESCRIPTION: Demonstrates how to log out the current user session. This method requires no parameters and returns no response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\n\ntry { \n    api_instance.logoutUser();\n} catch (e) {\n    print(\"Exception when calling UserApi->logoutUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating NuGet Package for Swagger Petstore SDK in C#\nDESCRIPTION: Command to build and package the Swagger Petstore SDK into a NuGet package. This creates the package and outputs it to the specified directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnuget pack -Build -OutputDirectory out IO.Swagger.csproj\n```\n\n----------------------------------------\n\nTITLE: Authenticating a User in Swagger API with Perl\nDESCRIPTION: Example demonstrating how to log a user into the system. This endpoint requires username and password parameters and returns a session token string upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $username = 'username_example'; # string | The user name for login\nmy $password = 'password_example'; # string | The password for login in clear text\n\neval { \n    my $result = $api_instance->login_user(username => $username, password => $password);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->login_user: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Dependency in Maven POM\nDESCRIPTION: XML snippet to add the Swagger Petstore client library as a dependency in a Maven project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/README.md#2025-04-20_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-petstore-okhttp4-gson</artifactId>\n  <version>1.0.0</version>\n  <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Setting Service Base Path in Angular (NgModule)\nDESCRIPTION: TypeScript code to set the base path for the API service using Angular's NgModule.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model Implementation in JavaScript\nDESCRIPTION: Example showing how to test the client model implementation using the SwaggerPetstore API. Makes a PATCH request to /fake endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet body = new SwaggerPetstore.Client(); // Client | client model\n\napiInstance.testClientModel(body).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing deleteUser Method in PHP\nDESCRIPTION: Example implementation of the deleteUser method in the UserApi class. This method deletes a user and can only be executed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#deleteUser\n     */\n    public function deleteUser($username)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order by ID using SwaggerPetstore StoreApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It requires an order ID as input and does not return any data. The function handles API errors for invalid IDs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.deleteOrder(orderId, callback);\n```\n\n----------------------------------------\n\nTITLE: Composite Object Serialization in C# with Swagger\nDESCRIPTION: Example showing serialization of composite objects using the FakeApi. Posts to /fake/outer/composite endpoint with an optional OuterComposite body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterCompositeSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterComposite(); // OuterComposite | Input composite as post body (optional) \n\n            try\n            {\n                OuterComposite result = apiInstance.FakeOuterCompositeSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterCompositeSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Orders by ID in Rust\nDESCRIPTION: This function allows deletion of purchase orders using their order ID. It works for integer IDs with values less than 1000, while larger values or non-integers will generate API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\ndelete_order(order_id)\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with FakeApi\nDESCRIPTION: Example code demonstrating how to test enum parameters using the FakeApi class. Shows initialization and handling of various enum parameter types including form, header, and query parameters with string, integer and double values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in C#\nDESCRIPTION: Example code showing how to test serialization of an object with outer number type. The method accepts an optional OuterComposite object as input and returns a serialized OuterComposite response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterCompositeSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterComposite(); // OuterComposite | Input composite as post body (optional) \n\n            try\n            {\n                OuterComposite result = apiInstance.FakeOuterCompositeSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterCompositeSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Model Documentation for Return Class\nDESCRIPTION: Documents the Return model class structure with its properties, types, and optional status. Contains one property '_Return' of type nullable integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Return\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input\nDESCRIPTION: Creates multiple users using an array input. Takes a List of User objects as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using DefaultApi in Angular Component\nDESCRIPTION: TypeScript code showing how to inject and use the DefaultApi service in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java with Swagger Client\nDESCRIPTION: Example code demonstrating how to test JSON serialization of form data using two string parameters. Shows proper handling of form fields in JSON format.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a User by Username in Dart\nDESCRIPTION: Example code for retrieving a user by their username. This method takes a username string and returns a User object if found.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be fetched. Use user1 for testing.\n\ntry { \n    var result = api_instance.getUserByName(username);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->getUserByName: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enumeration - Markdown\nDESCRIPTION: Defines the allowed enumeration values for the pet status field. Valid values are 'available', 'pending', and 'sold'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `available` (value: `\"available\"`)\n\n* `pending` (value: `\"pending\"`)\n\n* `sold` (value: `\"sold\"`)\n```\n\n----------------------------------------\n\nTITLE: Using AnotherFakeApi in Java\nDESCRIPTION: Example Java code demonstrating how to use the AnotherFakeApi client. It initializes the API client, creates a request model, makes an API call, and handles the response and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/README.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.AnotherFakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class AnotherFakeApiExample {\n\n    public static void main(String[] args) {\n        \n        AnotherFakeApi apiInstance = new AnotherFakeApi();\n        Client body = new Client(); // Client | client model\n        try {\n            Client result = apiInstance.testSpecialTags(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status Using Bash CLI\nDESCRIPTION: Example showing how to find pets by status using the petstore CLI. This endpoint accepts multiple comma-separated status values as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli findPetsByStatus  Specify as:  status=\"value1,value2,...\"\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using PetApi in Dart\nDESCRIPTION: This example demonstrates how to retrieve a pet by its ID using the getPetById method of the PetApi class. It requires API key authentication and accepts the pet ID as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to return\n\ntry { \n    var result = api_instance.getPetById(petId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->getPetById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Java\nDESCRIPTION: Example of logging out current user session using the Swagger client API. Invalidates existing session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Java using Swagger Client\nDESCRIPTION: Example of creating a new user using the Swagger API client. Requires User object as input and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order using StoreApi in Java\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It includes creating an Order object and error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders in Kotlin using Store API\nDESCRIPTION: Example of placing a new order for a pet. Accepts an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\nval body : Order =  // Order | order placed for purchasing the pet\ntry {\n    val result : Order = apiInstance.placeOrder(body)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#placeOrder\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#placeOrder\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using PetApi in Python\nDESCRIPTION: This snippet demonstrates how to update a pet's information in the store using form data with the PetApi class. It initializes the API client with proper authentication, sets required and optional parameters, and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet that needs to be updated\nname = 'name_example' # str | Updated name of the pet (optional)\nstatus = 'status_example' # str | Updated status of the pet (optional)\n\ntry:\n    # Updates a pet in the store with form data\n    api_instance.update_pet_with_form(pet_id, name=name, status=status)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->update_pet_with_form: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Using testCodeInjectEndRnNR Method in PHP Swagger Client\nDESCRIPTION: Example demonstrating how to use the testCodeInjectEndRnNR method of the FakeApi class. This method is designed to test code injection prevention mechanisms. It shows how to initialize the API client, set up parameters, and handle exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$test_code_inject____end____rn_n_r = \"test_code_inject____end____rn_n_r_example\"; // string | To test code injection *_/ ' \\\" =end -- \\r\\n \\n \\r\n\ntry {\n    $apiInstance->testCodeInjectEndRnNR($test_code_inject____end____rn_n_r);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testCodeInjectEndRnNR: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Setting Up Swagger Petstore API Client in Perl\nDESCRIPTION: Initializes the Swagger Petstore API client by loading necessary libraries and setting up the project structure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/README.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\n#!/usr/bin/perl\nuse lib 'lib';\nuse strict;\nuse warnings;\n# load the API package\nuse WWW::SwaggerClient::AnotherFakeApi;\nuse WWW::SwaggerClient::FakeApi;\nuse WWW::SwaggerClient::FakeClassnameTags123Api;\nuse WWW::SwaggerClient::PetApi;\nuse WWW::SwaggerClient::StoreApi;\nuse WWW::SwaggerClient::UserApi;\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory Status - Java Implementation\nDESCRIPTION: Retrieves a map of status codes to quantities for pet inventory. Requires API key authentication and returns inventory data as a Map of String to Integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing TestJsonFormData API Endpoint in Go\nDESCRIPTION: Defines the TestJsonFormData API endpoint. It requires a context and two string parameters. The function is used to test JSON serialization of form data and doesn't return any response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_11\n\nLANGUAGE: Go\nCODE:\n```\n# **TestJsonFormData**\n> TestJsonFormData(ctx, param, param2)\ntest json serialization of form data\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **param** | **string**| field1 | \n  **param2** | **string**| field2 | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of the ModelApiResponse class. It specifies three optional properties: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating User Information\nDESCRIPTION: Updates existing user information. Requires username and updated User object. Can only be done by logged in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java with Swagger Client\nDESCRIPTION: Example code demonstrating how to call the testEnumParameters endpoint with various enum parameter types including form, header, and query parameters. Handles string arrays, strings, integers and doubles as enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login in C# with Swagger API\nDESCRIPTION: Authenticates a user and creates a login session. Requires username and password as parameters and returns a session string upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LoginUserExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The user name for login\n            var password = password_example;  // string | The password for login in clear text\n\n            try\n            {\n                // Logs user into the system\n                string result = apiInstance.LoginUser(username, password);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LoginUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Existing Pet - Java Implementation\nDESCRIPTION: Example code demonstrating how to update an existing pet using the PetApi client. Shows OAuth2 authentication and request body handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass using a Markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization in Swagger API\nDESCRIPTION: Shows how to test JSON serialization of form data by sending two string parameters. The endpoint accepts JSON content type and processes form fields as serialized JSON data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar param = \"param_example\"; // String | field1\n\nvar param2 = \"param2_example\"; // String | field2\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testJsonFormData(param, param2, callback);\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown Table\nDESCRIPTION: A Markdown table that defines the properties of the ReadOnlyFirst model class. It specifies two optional string properties: 'bar' and 'baz', along with their types and notes about optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Class Names with FakeClassnameTags123Api in C#\nDESCRIPTION: Example implementation demonstrating how to use the FakeClassnameTags123Api to test class names in snake case. Shows API key configuration, client instantiation, and error handling. The endpoint accepts a ModelClient object and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClassnameExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key_query\n            Configuration.Default.AddApiKey(\"api_key_query\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key_query\", \"Bearer\");\n\n            var apiInstance = new FakeClassnameTags123Api();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test class name in snake case\n                ModelClient result = apiInstance.TestClassname(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeClassnameTags123Api.TestClassname: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Single User with Java UserApi\nDESCRIPTION: Example demonstrates how to create a user using the UserApi client. It creates a new User object, passes it to the createUser method, and handles any resulting ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Python SDK Using Setuptools\nDESCRIPTION: Instructions for installing the Python SDK using the Setuptools method. This installs the package either for the current user or for all users on the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npython setup.py install --user\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies with Version Constraints\nDESCRIPTION: Specifies the minimum required versions for key Python packages including certifi, six, python_dateutil, setuptools, and urllib3. This ensures compatibility and security by enforcing version constraints for project dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\ncertifi >= 14.05.14\nsix >= 1.10\npython_dateutil >= 2.5.3\nsetuptools >= 21.0.0\nurllib3 >= 1.15.1\n```\n\n----------------------------------------\n\nTITLE: Documenting Animal Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of an Animal model class. Includes required class_name property as a string and an optional color property that defaults to 'red'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | **str** |  | \n**color** | **str** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Configuring Providers for Angular2 TypeScript Petstore API Module\nDESCRIPTION: TypeScript code demonstrating how to configure providers when importing the API module in an Angular application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '@swagger/angular2-typescript-petstore';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Kotlin\nDESCRIPTION: Logs out the currently authenticated user session. No parameters required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\ntry {\n    apiInstance.logoutUser()\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#logoutUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#logoutUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Kotlin\nDESCRIPTION: Retrieves a user's information by their username. The example demonstrates how to call the getUserByName method with a username parameter and how to handle the returned User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    val result : User = apiInstance.getUserByName(username)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#getUserByName\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#getUserByName\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java\nDESCRIPTION: Example code showing serialization of composite objects using the Fake API. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Defines the properties of the ReadOnlyFirst model using a markdown table. The model has two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documents the properties of the ArrayOfNumberOnly model, specifying the name, type, description, and optional status of the 'arrayNumber' field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using Java\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It creates a Pet object and calls the addPet method, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.addPet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#addPet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Swagger Pet API in Java\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It configures OAuth2 authentication, creates a PetApi instance, and calls the updatePetWithForm method with the pet's ID, name, and status. Error handling is implemented to catch and print any ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image using Java in Swagger Codegen\nDESCRIPTION: This snippet shows how to upload an image for a pet using the Pet API. It demonstrates OAuth2 authentication setup, creating a PetApi instance, and calling the uploadFile method with the required parameters including pet ID, additional metadata, and the file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to update\nString additionalMetadata = \"additionalMetadata_example\"; // String | Additional data to pass to server\nFile file = new File(\"/path/to/file.txt\"); // File | file to upload\ntry {\n    ModelApiResponse result = apiInstance.uploadFile(petId, additionalMetadata, file);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#uploadFile\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order by ID in Java\nDESCRIPTION: Example of fetching a purchase order using its ID. Valid for IDs <= 5 or > 10, with exception handling for other values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data in Python using PetApi\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data with the PetApi client. It initializes the API client with proper authentication, prepares the required parameters, and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | ID of pet that needs to be updated\nname = 'name_example' # str | Updated name of the pet (optional)\nstatus = 'status_example' # str | Updated status of the pet (optional)\n\ntry:\n    # Updates a pet in the store with form data\n    api_instance.update_pet_with_form(pet_id, name=name, status=status)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->update_pet_with_form: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Swagger Petstore API\nDESCRIPTION: Example demonstrating how to update an existing user's information. This operation can only be performed by the logged-in user and requires both the username and a User object containing the updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | name that need to be deleted\n\nvar body = new SwaggerPetstore.User(); // User | Updated user object\n\napiInstance.updateUser(username, body).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Updating User Information\nDESCRIPTION: Updates existing user information. This operation can only be performed by logged in users. Requires username and updated User object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java with Swagger Client\nDESCRIPTION: Example code for testing the serialization of outer boolean types using the FakeApi. It sends a boolean value as the request body and receives a boolean response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Providers for ApiModule in Angular\nDESCRIPTION: TypeScript code to import and configure the ApiModule with custom providers in an Angular module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule, Configuration, ConfigurationParameters } from '@swagger/angular2-typescript-petstore';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Order class including field names, types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Java\nDESCRIPTION: This snippet shows how to use the testBodyWithQueryParams method of the FakeApi class. It demonstrates creating an instance of FakeApi, calling the method with a User object and a query string, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using testBodyWithQueryParams Method with PHP Client\nDESCRIPTION: Example of how to use the testBodyWithQueryParams method with the Swagger PHP client. This method sends a PUT request to '/fake/body-with-query-params' endpoint, requiring both a User object and a query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/DefaultApi.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\DefaultApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\User(); // \\Swagger\\Client\\Model\\User | \n$query = \"query_example\"; // string | \n\ntry {\n    $apiInstance->testBodyWithQueryParams($body, $query);\n} catch (Exception $e) {\n    echo 'Exception when calling DefaultApi->testBodyWithQueryParams: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown Table Format\nDESCRIPTION: Defines the properties of a User model using a markdown table that specifies each property's name, data type, description, and whether the field is optional. The model includes standard user attributes like identity, authentication, and contact information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Calling FakeApi test_endpoint_parameters Method in Python\nDESCRIPTION: This snippet demonstrates how to call the test_endpoint_parameters method of the FakeApi instance. It includes error handling for ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ntry:\n    # Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n    api_instance.test_endpoint_parameters(number, double, pattern_without_delimiter, byte, integer=integer, int32=int32, int64=int64, _float=_float, string=string, binary=binary, _date=_date, date_time=date_time, password=password, param_callback=param_callback)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_endpoint_parameters: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies and running the server\nDESCRIPTION: Commands to install the required dependencies and start the Python-based swagger server. This will install all dependencies listed in requirements.txt and start the server module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\npython -m swagger_server\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order in C# using Swagger Store API\nDESCRIPTION: Example code demonstrating how to delete a purchase order by ID using the Store API. Handles orders with ID values less than 1000, with error handling for invalid inputs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Java using Swagger Client\nDESCRIPTION: This code snippet shows how to update a user using the Swagger client in Java. It initializes a UserApi instance, specifies a username, creates a User object with updated information, and calls the updateUser method. Error handling for API exceptions is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Serialization with fakeOuterCompositeSerialize in Bash\nDESCRIPTION: Command example for testing the serialization of objects with outer number type. This endpoint accepts an optional OuterComposite as the post body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli fakeOuterCompositeSerialize\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in C# with Swagger\nDESCRIPTION: Example demonstrating how to test inline additional properties by passing an Object parameter in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestInlineAdditionalPropertiesExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = ;  // Object | request body\n\n            try\n            {\n                apiInstance.TestInlineAdditionalProperties(param);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestInlineAdditionalProperties: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in C#\nDESCRIPTION: Example code for testing the client model implementation using the FakeApi. Shows how to make an API call with a required ModelClient body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClientModelExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test \\\"client\\\" model\n                ModelClient result = apiInstance.TestClientModel(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestClientModel: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in Python using Petstore API\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\norder_id = 'order_id_example' # str | ID of the order that needs to be deleted\n\ntry:\n    # Delete purchase order by ID\n    api_instance.delete_order(order_id)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->delete_order: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining API Response Model Schema in Swagger/OpenAPI\nDESCRIPTION: Documents the properties of the ApiResponse model including code (Number), type (String), and message (String). All fields are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Number** |  | [optional] \n**type** | **String** |  | [optional] \n**message** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Definition in Swagger Petstore API\nDESCRIPTION: Defines the properties available on the User model in the Swagger Petstore API. All properties are optional and include identification, authentication, personal information, and status fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**username** | **String** |  | [optional] \n**firstName** | **String** |  | [optional] \n**lastName** | **String** |  | [optional] \n**email** | **String** |  | [optional] \n**password** | **String** |  | [optional] \n**phone** | **String** |  | [optional] \n**userStatus** | **Number** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model in Swagger/OpenAPI\nDESCRIPTION: Documentation of the AdditionalPropertiesClass model that includes two optional properties: a simple string map and a nested map of maps. This is a standard model documentation format used in Swagger-generated API documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map&lt;String, String&gt;** |  |  [optional]\n**mapOfMapProperty** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: FakeOuterStringSerialize Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing serialization of outer string types. It accepts an optional OuterString body parameter and returns an OuterString object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: Go\nCODE:\n```\n# **FakeOuterStringSerialize**\n> OuterString FakeOuterStringSerialize(ctx, optional)\n\n\nTest serialization of outer string types\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterStringSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterStringSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterString**](OuterString.md)| Input string as post body | \n\n### Return type\n\n[**OuterString**](OuterString.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet using Java\nDESCRIPTION: This snippet shows how to update an existing pet in the store using the PetApi. It sets up OAuth2 authentication, creates a Pet object with updated information, and calls the updatePet method. The method handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Kotlin Swagger Client Library\nDESCRIPTION: This command runs all tests and packages the Kotlin client library for Swagger Petstore. It uses the Gradle wrapper to ensure consistency across different environments.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew check assemble\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Dart\nDESCRIPTION: Example showing how to delete a purchase order by its ID using the StoreApi. Valid for integer IDs with value < 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = orderId_example; // String | ID of the order that needs to be deleted\n\ntry { \n    api_instance.deleteOrder(orderId);\n} catch (e) {\n    print(\"Exception when calling StoreApi->deleteOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Placing a Pet Order in Java using Swagger Client\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It requires an Order object as input and returns the created Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Retrofit2 Client to Remote Maven Repository\nDESCRIPTION: Command to deploy the Swagger Petstore Retrofit2 client library to a remote Maven repository. This requires configuring the repository settings before execution.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List - Java Swagger API\nDESCRIPTION: Example of creating multiple users using a list input through the Swagger API. Takes a List of User objects as input and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status using PHP\nDESCRIPTION: This snippet shows how to retrieve pet inventories by status using the StoreApi. It requires API key authorization and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure API key authorization: api_key\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKey('api_key', 'YOUR_API_KEY');\n// Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n// $config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKeyPrefix('api_key', 'Bearer');\n\n$apiInstance = new Swagger\\Client\\Api\\StoreApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n\ntry {\n    $result = $apiInstance->getInventory();\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling StoreApi->getInventory: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Logging Out a User in the Petstore API using Go\nDESCRIPTION: Function that logs out the currently authenticated user by invalidating their session. It only requires a context parameter and doesn't need any additional parameters. No data is returned upon successful logout.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nLogoutUser(ctx)\n```\n\n----------------------------------------\n\nTITLE: Adding New Pet via Swagger API\nDESCRIPTION: Example of adding a new pet to the store using the SwagPetApi. Requires OAuth2 authentication with petstore_auth token.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagPetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nSwagPetApi api = new SwagPetApi();\nSwagClient client = api.getClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nSwagger.OAuth petstore_auth = (Swagger.OAuth) client.getAuthentication('petstore_auth');\npetstore_auth.setAccessToken('YOUR ACCESS TOKEN');\n\nMap<String, Object> params = new Map<String, Object>{\n    'body' => SwagPet.getExample()\n};\n\ntry {\n    // cross your fingers\n    api.addPet(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in C# Using FakeApi\nDESCRIPTION: Example showing how to test serialization of outer boolean types using the FakeApi. It creates an instance of FakeApi, calls the FakeOuterBooleanSerialize method with an optional boolean body parameter, and handles possible exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterBooleanSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new bool?(); // bool? | Input boolean as post body (optional) \n\n            try\n            {\n                bool? result = apiInstance.FakeOuterBooleanSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterBooleanSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout - Go\nDESCRIPTION: API endpoint for logging out the current user. Takes no parameters and returns an empty response on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: go\nCODE:\n```\nLogoutUser(ctx)\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Java Client Dependency to Maven Project\nDESCRIPTION: This XML snippet shows how to add the Swagger Java client library as a dependency in a Maven project's pom.xml file. It specifies the groupId, artifactId, version, and scope of the dependency.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-java-client</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model with FakeApi in Java\nDESCRIPTION: Example showing how to call the testClientModel endpoint which tests the \"client\" model. It accepts a Client object as input and returns a Client object in the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with Swagger Petstore API in JavaScript\nDESCRIPTION: Example implementation showing how to call the testSpecialTags endpoint using the Swagger Petstore JavaScript client. The code demonstrates making a PATCH request to '/another-fake/dummy' with a Client model object and handling the response through a callback.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.AnotherFakeApi();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testSpecialTags(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories in Eiffel\nDESCRIPTION: This function returns a map of pet inventory status codes to quantities. It requires no parameters and returns a STRING_TABLE mapped to INTEGER_32 values. This endpoint requires api_key authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/STORE_API.md#2025-04-20_snippet_1\n\nLANGUAGE: eiffel\nCODE:\n```\ninventory : detachable STRING_TABLE[INTEGER_32]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users Using List Input in Dart\nDESCRIPTION: Example of creating multiple users with a list input, similar to the array input method but using a different endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithListInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithListInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java using Swagger Codegen\nDESCRIPTION: This snippet demonstrates how to call the testJsonFormData method of the FakeApi class. It takes two String parameters representing form fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Out User with C# Swagger Client\nDESCRIPTION: Demonstrates how to log out the current user session using the Swagger-generated C# client. Shows proper exception handling and API instance initialization. No parameters required and returns void.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to create multiple users at once using an array input. It demonstrates the usage of the createUsersWithArrayInput method, including exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Order Statuses in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values representing different order statuses. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: User Login in Swagger API\nDESCRIPTION: Example code for user authentication. Requires username and password parameters, returns a string token upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The user name for login\nval password : kotlin.String = password_example // kotlin.String | The password for login in clear text\ntry {\n    val result : kotlin.String = apiInstance.loginUser(username, password)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#loginUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#loginUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Using the AnotherFakeApi Client in C#\nDESCRIPTION: Complete example demonstrating how to initialize the AnotherFakeApi client, create a request model, make an API call, and handle the response. Includes error handling using try-catch blocks.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using the Default API in Angular Component\nDESCRIPTION: TypeScript code showing how to inject and use the DefaultApi service in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '@swagger/angular2-typescript-petstore';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization in Java with Swagger Client\nDESCRIPTION: Example code for testing the serialization of outer string types using the FakeApi. It sends a String value as the request body and receives a String response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Dart\nDESCRIPTION: This example shows how to find a purchase order by its ID using the StoreApi. Valid responses require integer IDs with value <= 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = 789; // int | ID of pet that needs to be fetched\n\ntry { \n    var result = api_instance.getOrderById(orderId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getOrderById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining E'Status2 Enum in Haskell for Pet Status\nDESCRIPTION: Defines an enum 'E'Status2' with values 'Available', 'Pending', and 'Sold' for representing pet status in the store. Includes functions to convert between the enum and Text.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_36\n\nLANGUAGE: Haskell\nCODE:\n```\n-- | Enum of <a>Text</a> . pet status in the store\ndata E'Status2\n\n-- | <pre>\n--   \"available\"\n--   </pre>\nE'Status2'Available :: E'Status2\n\n-- | <pre>\n--   \"pending\"\n--   </pre>\nE'Status2'Pending :: E'Status2\n\n-- | <pre>\n--   \"sold\"\n--   </pre>\nE'Status2'Sold :: E'Status2\n\n-- | unwrap <a>E'Status2</a> enum\nfromE'Status2 :: E'Status2 -> Text\n\n-- | parse <a>E'Status2</a> enum\ntoE'Status2 :: Text -> Either String E'Status2\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Properties in Markdown\nDESCRIPTION: A markdown table defining properties for a FormatTest object. It specifies the name, type, description, and optional status for each property. The table includes various data types and their corresponding Java classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Kotlin\nDESCRIPTION: Creates multiple users using a list input. Accepts an array of User objects and handles potential client and server errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUsersWithListInput\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUsersWithListInput\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the PetApi. It configures OAuth2 authentication, creates a list of status values, and calls the findPetsByStatus method. The result is a list of Pet objects matching the specified statuses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Store Inventory Using Rest Assured\nDESCRIPTION: Example showing how to retrieve the pet inventory status counts using the Rest Assured client. Returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nStoreApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).store();\n\napi.getInventory().execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Perl\nDESCRIPTION: Shows how to retrieve a purchase order using its ID. The example specifies that valid IDs are integers less than or equal to 5 or greater than 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::StoreApi;\nmy $api_instance = WWW::SwaggerClient::StoreApi->new(\n);\n\nmy $order_id = 789; # int | ID of pet that needs to be fetched\n\neval { \n    my $result = $api_instance->get_order_by_id(order_id => $order_id);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling StoreApi->get_order_by_id: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Getting a User by Username in Dart\nDESCRIPTION: Example of how to retrieve a user's information by providing their username to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be fetched. Use user1 for testing.\n\ntry { \n    var result = api_instance.getUserByName(username);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->getUserByName: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet using Swagger Petstore API in JavaScript\nDESCRIPTION: Example of how to place an order for a pet using the Swagger Petstore JavaScript client. This endpoint takes an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\nlet body = new SwaggerPetstore.Order(); // Order | order placed for purchasing the pet\n\napiInstance.placeOrder(body).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This snippet illustrates how to find pets by their tags using the PetApi. It sets up OAuth2 authentication, creates a list of tag values to filter by, and calls the findPetsByTags method. The result is a list of Pet objects matching the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using PetApi in Dart\nDESCRIPTION: This example shows how to upload an image for a pet using the uploadFile method of the PetApi class. It requires OAuth2 authentication and accepts the pet ID, additional metadata, and the file to upload as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | ID of pet to update\nvar additionalMetadata = additionalMetadata_example; // String | Additional data to pass to server\nvar file = /path/to/file.txt; // MultipartFile | file to upload\n\ntry { \n    var result = api_instance.uploadFile(petId, additionalMetadata, file);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling PetApi->uploadFile: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Petstore API using Ruby\nDESCRIPTION: This snippet shows how to create multiple users at once using an array input. It uses the Petstore gem and calls the create_users_with_array_input method of the UserApi class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nbody = [Petstore::User.new] # Array<User> | List of user object\n\n\nbegin\n  #Creates list of users with given input array\n  api_instance.create_users_with_array_input(body)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->create_users_with_array_input: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Using a User Model as a URL in Alamofire Request\nDESCRIPTION: Shows how to use a User object directly as a URL parameter in an Alamofire request, leveraging the URLStringConvertible protocol to convert the model into the appropriate URL string for the API endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_52\n\nLANGUAGE: swift\nCODE:\n```\nlet user = User(username: \"mattt\")\nAlamofire.request(.GET, user) // http://example.com/users/mattt\n```\n\n----------------------------------------\n\nTITLE: Importing API Module in Angular (With Providers)\nDESCRIPTION: TypeScript code to import and configure the API module in an Angular application with custom providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: User Logout\nDESCRIPTION: Logs out the current user session. No input parameters required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with FakeApi in Java\nDESCRIPTION: Example showing how to call the fakeOuterCompositeSerialize endpoint which tests serialization of an object with outer number type. It accepts an OuterComposite object as post body and returns an OuterComposite response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing FakeApi and calling test_endpoint_parameters with Python\nDESCRIPTION: This snippet demonstrates creating an instance of the FakeApi class and calling the test_endpoint_parameters method with various parameter types. It includes error handling with a try-except block for ApiException errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.FakeApi(petstore_api.ApiClient(configuration))\nnumber = 8.14 # float | None\ndouble = 1.2 # float | None\npattern_without_delimiter = 'pattern_without_delimiter_example' # str | None\nbyte = 'B' # str | None\ninteger = 56 # int | None (optional)\nint32 = 56 # int | None (optional)\nint64 = 789 # int | None (optional)\n_float = 3.4 # float | None (optional)\nstring = 'string_example' # str | None (optional)\nbinary = 'B' # str | None (optional)\n_date = '2013-10-20' # date | None (optional)\ndate_time = '2013-10-20T19:20:30+01:00' # datetime | None (optional)\npassword = 'password_example' # str | None (optional)\nparam_callback = 'param_callback_example' # str | None (optional)\n\ntry:\n    # Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n    api_instance.test_endpoint_parameters(number, double, pattern_without_delimiter, byte, integer=integer, int32=int32, int64=int64, _float=_float, string=string, binary=binary, _date=_date, date_time=date_time, password=password, param_callback=param_callback)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_endpoint_parameters: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties Table in Markdown\nDESCRIPTION: A markdown table that defines the properties of the EnumArrays model including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to test the \"client\" model. It creates a FakeApi instance, initializes a Client object, and makes a PATCH request to test the client model implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Python with Swagger API\nDESCRIPTION: Demonstrates how to test the \"client\" model using the FakeApi. Creates an API instance, sends a Client model object, and processes the response which should be a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test \\\"client\\\" model\n    api_response = api_instance.test_client_model(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_client_model: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags - Java Client Implementation\nDESCRIPTION: Example code demonstrating how to find pets by tags using the Java client. Supports filtering by multiple comma-separated tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: Example of creating multiple users at once using an array input through the UserApi client. Takes a List of User objects as input and handles ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest class using a markdown table. It includes two map properties: mapMapOfString and mapOfEnumString, with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Orders Using StoreApi in Java\nDESCRIPTION: Example code for deleting a purchase order by its ID. The method requires an order ID parameter and doesn't return a response body. Valid responses are returned for integer IDs with values less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Tag Model Properties Definition in C#\nDESCRIPTION: Defines the properties of the Tag model class including an optional long ID field and an optional string Name field. This model is generated by Swagger Codegen for API integration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Name** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Displaying Configuration Options for Java in Swagger Codegen\nDESCRIPTION: Shell command to display available configuration options for Java code generation in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar config-help -l java\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer String Types in Python with Swagger API\nDESCRIPTION: Demonstrates how to test serialization of outer string types. The example creates a FakeApi instance, sends a string value as a post body, and handles the API response or exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterString() # OuterString | Input string as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_string_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_string_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Client Library to Remote Maven Repository\nDESCRIPTION: Command to deploy the Swagger Petstore Retrofit2 RxJava2 client library to a remote Maven repository. This requires proper configuration of the remote repository settings.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Using Environment Configuration for API Base Path\nDESCRIPTION: TypeScript code demonstrating how to use environment variables to set the API base path in an Angular module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: StatusEnum Definition for Pet Model in Markdown\nDESCRIPTION: Defines the possible status values for the Pet model. The enumeration includes three constants: AVAILABLE, PENDING, and SOLD, each with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with PetStore Ruby Client\nDESCRIPTION: Shows how to test inline additional properties by making an API request with a generic Object parameter. The endpoint expects application/json content type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nparam = nil # Object | request body\n\n\nbegin\n  #test inline additionalProperties\n  api_instance.test_inline_additional_properties(param)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_inline_additional_properties: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Logging a User out of the System in Kotlin\nDESCRIPTION: Logs out the currently authenticated user from the system. The example demonstrates how to call the logoutUser method, which requires no parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\ntry {\n    apiInstance.logoutUser()\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#logoutUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#logoutUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders in C#\nDESCRIPTION: Example code demonstrating how to place a new order for a pet. Takes an Order object as input and returns the created order with confirmation details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java using FakeApi\nDESCRIPTION: This snippet shows how to use the testInlineAdditionalProperties method of the FakeApi class. It demonstrates passing an Object as a parameter for testing inline additional properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: API Response Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the ApiResponse model. Includes three optional fields: code (integer), type (string), and message (string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Model/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n|**code** | **int** |  | [optional] |\n|**type** | **string** |  | [optional] |\n|**message** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Dog Model Property Schema Definition in Markdown\nDESCRIPTION: Markdown table defining the Dog model schema with a single optional property 'breed' of type String. The table includes columns for property name, data type, description and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username\nDESCRIPTION: Fetches user details by username. Returns a User object containing user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\n\napiInstance.getUserByName(username).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of using the testClientModel method to test the \"client\" model. This method accepts a Client object as a request body and returns a Client response, demonstrating client model validation and serialization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\napiInstance.testClientModel(body).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Defining Pet API Module and Endpoints in Haskell\nDESCRIPTION: Module definition for the Pet API with endpoint functions for adding, updating, deleting, and retrieving pets. Each function specifies its HTTP method, path, parameters, authentication method, and return types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_46\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.API.Pet\n\n-- | <pre>\n--   POST /pet\n--   </pre>\n--   \n--   Add a new pet to the store\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\naddPet :: (Consumes AddPet contentType, MimeRender contentType Pet) => ContentType contentType -> Accept accept -> Pet -> SwaggerPetstoreRequest AddPet contentType res accept\ndata AddPet\n\n-- | <i>Body Param</i> \"body\" - Pet object that needs to be added to the\n--   store\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   DELETE /pet/{petId}\n--   </pre>\n--   \n--   Deletes a pet\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\ndeletePet :: Accept accept -> PetId -> SwaggerPetstoreRequest DeletePet MimeNoContent res accept\ndata DeletePet\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   GET /pet/findByStatus\n--   </pre>\n--   \n--   Finds Pets by status\n--   \n--   Multiple status values can be provided with comma separated strings\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\nfindPetsByStatus :: Accept accept -> Status -> SwaggerPetstoreRequest FindPetsByStatus MimeNoContent [Pet] accept\ndata FindPetsByStatus\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   GET /pet/findByTags\n--   </pre>\n--   \n--   Finds Pets by tags\n--   \n--   Multiple tags can be provided with comma separated strings. Use tag1,\n--   tag2, tag3 for testing.\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\n\n-- | <i>Deprecated: </i>\nfindPetsByTags :: Accept accept -> Tags -> SwaggerPetstoreRequest FindPetsByTags MimeNoContent [Pet] accept\ndata FindPetsByTags\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   GET /pet/{petId}\n--   </pre>\n--   \n--   Find pet by ID\n--   \n--   Returns a single pet\n--   \n--   AuthMethod: <a>AuthApiKeyApiKey</a>\ngetPetById :: Accept accept -> PetId -> SwaggerPetstoreRequest GetPetById MimeNoContent Pet accept\ndata GetPetById\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   PUT /pet\n--   </pre>\n--   \n--   Update an existing pet\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\nupdatePet :: (Consumes UpdatePet contentType, MimeRender contentType Pet) => ContentType contentType -> Accept accept -> Pet -> SwaggerPetstoreRequest UpdatePet contentType res accept\ndata UpdatePet\n\n-- | <i>Body Param</i> \"body\" - Pet object that needs to be added to the\n--   store\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   POST /pet/{petId}\n--   </pre>\n--   \n--   Updates a pet in the store with form data\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\nupdatePetWithForm :: (Consumes UpdatePetWithForm MimeFormUrlEncoded) => Accept accept -> PetId -> SwaggerPetstoreRequest UpdatePetWithForm MimeFormUrlEncoded res accept\ndata UpdatePetWithForm\n\n-- | <i>Optional Param</i> \"name\" - Updated name of the pet\n\n-- | <i>Optional Param</i> \"status\" - Updated status of the pet\n\n-- | <pre>\n--   application/x-www-form-urlencoded\n--   </pre>\n\n-- | <pre>\n--   application/xml\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   POST /pet/{petId}/uploadImage\n--   </pre>\n--   \n--   uploads an image\n--   \n--   AuthMethod: <a>AuthOAuthPetstoreAuth</a>\nuploadFile :: (Consumes UploadFile MimeMultipartFormData) => PetId -> SwaggerPetstoreRequest UploadFile MimeMultipartFormData ApiResponse MimeJSON\ndata UploadFile\n\n-- | <i>Optional Param</i> \"additionalMetadata\" - Additional data to pass\n--   to server\n\n-- | <i>Optional Param</i> \"file\" - file to upload\n\n-- | <pre>\n--   multipart/form-data\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\n```\n\n----------------------------------------\n\nTITLE: Configuring Server Port in Spring Boot\nDESCRIPTION: Instructions for changing the default port value in the application.properties file of a Spring Boot application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/springboot-delegate/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nChange default port value in application.properties\n```\n\n----------------------------------------\n\nTITLE: User Login in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to log a user into the system using their username and password. It uses the UserApi and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using the testSpecialTags Method in AnotherFakeApi (Java)\nDESCRIPTION: This example demonstrates how to use the testSpecialTags method from the AnotherFakeApi class. The method makes a PATCH request to '/another-fake/dummy' endpoint, sends a Client model object in the request body, and returns a Client object as the response. Error handling is included to catch and display any exceptions that might occur during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding pets by tags using Python\nDESCRIPTION: Example code for finding pets by their tags in the Petstore API using Python. Requires OAuth2 authentication with the petstore_auth token and a list of tag values to filter by. Returns a list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\ntags = ['tags_example'] # list[str] | Tags to filter by\n\ntry:\n    # Finds Pets by tags\n    api_response = api_instance.find_pets_by_tags(tags)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->find_pets_by_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in FakeApi Java\nDESCRIPTION: Example of using the testBodyWithQueryParams endpoint that demonstrates passing both a request body (User object) and a query parameter in the same request. Shows handling of both object and simple data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Running the Swagger Generated Server with npm\nDESCRIPTION: Command to start the server application. This command should be run in the terminal from the project's root directory after installing dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/nodejs/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order by ID in Java\nDESCRIPTION: Example code demonstrating how to delete a purchase order by its ID using the StoreApi. This operation works for integer IDs with values less than 1000, with larger numbers or non-integers generating API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of using the testBodyWithQueryParams method which requires both a body parameter (User object) and a query parameter. This method demonstrates handling combined query and body parameters in an API request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar body = new SwaggerPetstore.User(); // User | \n\nvar query = \"query_example\"; // String | \n\napiInstance.testBodyWithQueryParams(body, query).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Testing JSON form data serialization with Python API client\nDESCRIPTION: This snippet shows how to call the test_json_form_data method of the FakeApi class with string parameters for field1 and field2. It demonstrates how to handle API exceptions using a try-except block.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nparam = 'param_example' # str | field1\nparam2 = 'param2_example' # str | field2\n\ntry:\n    # test json serialization of form data\n    api_instance.test_json_form_data(param, param2)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_json_form_data: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status using SwaggerPetstore StoreApi in JavaScript\nDESCRIPTION: This snippet shows how to get pet inventories by status using the StoreApi. It requires API key authorization and returns a map of status codes to quantities. No parameters are needed for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nvar api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getInventory(callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization with FakeApi in Java\nDESCRIPTION: Example showing how to call the fakeOuterNumberSerialize endpoint which tests serialization of outer number types. It accepts a BigDecimal value as post body and returns a BigDecimal response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Example of Petstore API in Dart\nDESCRIPTION: Example code demonstrating how to use the generated Swagger API client to add a pet to the store, including import statements, API instance initialization, and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/README.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nfinal swaggerGen = SwaggerGen();\nvar api_instance = swaggerGen.getPetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry {\n    api_instance.addPet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->addPet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Java using Swagger Client\nDESCRIPTION: This code snippet shows how to delete a user using the Swagger client in Java. It initializes a UserApi instance, specifies a username, and calls the deleteUser method. Error handling for API exceptions is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Class Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the FormatTest class, including their names, types, descriptions, and optional status. It covers various data types including numbers, strings, binary data, dates, and UUIDs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Number** |  | [optional] \n**int32** | **Number** |  | [optional] \n**int64** | **Number** |  | [optional] \n**_number** | **Number** |  | \n**_float** | **Number** |  | [optional] \n**_double** | **Number** |  | [optional] \n**_string** | **String** |  | [optional] \n**_byte** | **Blob** |  | \n**binary** | **Blob** |  | [optional] \n**_date** | **Date** |  | \n**dateTime** | **Date** |  | [optional] \n**uuid** | **String** |  | [optional] \n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of the OuterComposite model class. Includes property names, data types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status in Java\nDESCRIPTION: Example code for retrieving a map of pet inventory status codes to quantities. This endpoint requires API key authorization and returns a map of string to integer values representing inventory counts by status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet Using Bash CLI\nDESCRIPTION: Example showing how to update an existing pet using the petstore CLI. This endpoint requires a Pet object in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli updatePet\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger SDK Namespaces in C#\nDESCRIPTION: Basic namespace imports required to use the Swagger SDK in a C# project\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/README.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of using the fakeOuterCompositeSerialize method to test serialization of objects with outer number type. This method accepts an optional OuterComposite object as a request body and returns an OuterComposite response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterComposite() // OuterComposite | Input composite as post body\n};\napiInstance.fakeOuterCompositeSerialize(opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Testing Code Injection Prevention in Ruby Petstore API\nDESCRIPTION: Example demonstrating how to call the code injection test endpoint in the Petstore API. This code shows proper handling of potentially dangerous input strings containing code injection attempts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/ruby/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nopts = { \n  test_code_inject____end____rn_n_r: \"test_code_inject____end____rn_n_r_example\" # String | To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n}\n\nbegin\n  #To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n  api_instance.test_code_inject____end__rn_n_r(opts)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_code_inject____end__rn_n_r: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: Example code demonstrating how to call the testSpecialTags endpoint using the AnotherFakeApi client. The endpoint accepts a Client model as input and returns a Client model response via a PATCH request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Dependency for Swagger Client\nDESCRIPTION: XML configuration to add the Swagger Petstore Spring Cloud dependency to a Maven project's POM file\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/spring-cloud/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-spring-cloud</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Dart\nDESCRIPTION: Shows how to delete a user by username. This operation can only be performed by a logged-in user. It takes a username string as input and returns no response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be deleted\n\ntry { \n    api_instance.deleteUser(username);\n} catch (e) {\n    print(\"Exception when calling UserApi->deleteUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Gradle Dependency Configuration\nDESCRIPTION: Gradle configuration to add the Swagger Petstore Android Volley dependency to a project's build file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/README.md#2025-04-20_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-android-volley:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Using Promises with Network and Location Services in Swift\nDESCRIPTION: This snippet demonstrates a basic promise chain combining a network request and location service. It shows how to use firstly/then/always/catch blocks to handle asynchronous operations and cleanup.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_0\n\nLANGUAGE: swift\nCODE:\n```\nUIApplication.shared.isNetworkActivityIndicatorVisible = true\n\nfirstly {\n    when(URLSession.dataTask(with: url).asImage(), CLLocationManager.promise())\n}.then { image, location -> Void in\n    self.imageView.image = image\n    self.label.text = \"\\(location)\"\n}.always {\n    UIApplication.shared.isNetworkActivityIndicatorVisible = false\n}.catch { error in\n    self.show(UIAlertController(for: error), sender: self)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing TestJsonFormData Method in C#\nDESCRIPTION: Example of using the TestJsonFormData method from the FakeApi. This endpoint demonstrates how to handle JSON serialization of form data with two string parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestJsonFormDataExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = param_example;  // string | field1\n            var param2 = param2_example;  // string | field2\n\n            try\n            {\n                // test json serialization of form data\n                apiInstance.TestJsonFormData(param, param2);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestJsonFormData: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TestClassname Method in FakeClassnameTags123Api\nDESCRIPTION: Defines the TestClassname method for the FakeClassnameTags123Api. This method sends a PATCH request to '/fake_classname_test' to test class name in snake case. It requires a Client object as the body parameter and returns a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# **TestClassname**\n> Client TestClassname(ctx, body)\nTo test class name in snake case\n\nTo test class name in snake case\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**Client**](Client.md)| client model | \n\n### Return type\n\n[**Client**](Client.md)\n\n### Authorization\n\n[api_key_query](../README.md#api_key_query)\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Fake_classname_tags123Api in PHP\nDESCRIPTION: This snippet demonstrates how to initialize the Fake_classname_tags123Api class and make a request to test class names in snake case. It includes setting up API key authorization and handling the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/Fake_classname_tags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure API key authorization: api_key_query\nSwagger\\Client\\Configuration::getDefaultConfiguration()->setApiKey('api_key_query', 'YOUR_API_KEY');\n// Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n// Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKeyPrefix('api_key_query', 'Bearer');\n\n$api_instance = new Swagger\\Client\\Api\\Fake_classname_tags123Api(new \\Http\\Adapter\\Guzzle6\\Client());\n$body = new \\Swagger\\Client\\Model\\Client(); // \\Swagger\\Client\\Model\\Client | client model\n\ntry {\n    $result = $api_instance->testClassname($body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling Fake_classname_tags123Api->testClassname: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore npm Package\nDESCRIPTION: Command to install the Swagger Petstore client library via npm package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install swagger_petstore --save\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: This snippet demonstrates creating multiple users using a list input with the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'body' => new List<SwagUser>{SwagUser.getExample()}\n};\n\ntry {\n    // cross your fingers\n    api.createUsersWithListInput(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Calling FakeClassnameTags123Api's testClassname Method in Java\nDESCRIPTION: This snippet demonstrates how to use the FakeClassnameTags123Api to call the testClassname method. It includes setting up the API client, configuring API key authentication, and handling the API response and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Token Refresh Authentication\nDESCRIPTION: Example showing OAuth2 authentication with automatic token refresh and user authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/go/README.md#2025-04-20_snippet_3\n\nLANGUAGE: golang\nCODE:\n```\nimport \"golang.org/x/oauth2\"\n\n/* Perform OAuth2 round trip request and obtain a token */\n\ntokenSource := oauth2cfg.TokenSource(createContext(httpClient), &token)\nauth := context.WithValue(oauth2.NoContext, sw.ContextOAuth2, tokenSource)\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories in Java\nDESCRIPTION: This snippet shows how to get pet inventories by status using the StoreApi. It includes API key authentication setup and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the ArrayEnumEnum enumeration with its possible values and their corresponding string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Delete Pet Implementation Example\nDESCRIPTION: PHP implementation example for deleting a pet from the store with OAuth2 authentication\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/PetApiInterface.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/PetApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\PetApiInterface;\n\nclass PetApi implements PetApiInterface\n{\n\n    /**\n     * Configure OAuth2 access token for authorization: petstore_auth\n     */\n    public function setpetstore_auth($oauthToken)\n    {\n        // Retrieve logged in user from $oauthToken ...\n    }\n\n    // ...\n\n    /**\n     * Implementation of PetApiInterface#deletePet\n     */\n    public function deletePet($petId, $apiKey = null)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring API Providers\nDESCRIPTION: Advanced Angular module configuration with custom API configuration factory\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '@swagger/angular2-typescript-petstore';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Linking Package for Development\nDESCRIPTION: Commands to link the package for local development using npm link.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @\n```\n\n----------------------------------------\n\nTITLE: Deleting a User by Username in Java\nDESCRIPTION: Example of deleting a user by their username. This operation can only be performed by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the Pet model, including their types, descriptions, and whether they are optional. It includes fields for id, category, name, photoUrls, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**category** | [**Category**](Category.md) |  | [optional] \n**name** | **String** |  | \n**photoUrls** | **[String]** |  | \n**tags** | [**[Tag]**](Tag.md) |  | [optional] \n**status** | **String** | pet status in the store | [optional] \n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Dart\nDESCRIPTION: Example of how to delete a user by username using the deleteUser method. This operation can only be performed by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be deleted\n\ntry { \n    api_instance.deleteUser(username);\n} catch (e) {\n    print(\"Exception when calling UserApi->deleteUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Binding Search Results to TableView in Swift using RxSwift\nDESCRIPTION: This code snippet shows how to bind search results to a table view using RxSwift. It populates each cell with repository name and URL from the search results.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Swift\nCODE:\n```\nsearchResults\n    .bind(to: tableView.rx.items(cellIdentifier: \"Cell\")) {\n        (index, repository: Repository, cell) in\n        cell.textLabel?.text = repository.name\n        cell.detailTextLabel?.text = repository.url\n    }\n    .disposed(by: disposeBag)\n```\n\n----------------------------------------\n\nTITLE: User Login - Go\nDESCRIPTION: API endpoint for user login. Accepts username and password parameters and returns a string token on successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: go\nCODE:\n```\nLoginUser(ctx, username, password)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order by ID - Java Implementation\nDESCRIPTION: Fetches a purchase order using its ID. Valid for integer IDs <= 5 or > 10. Returns Order object containing purchase details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Java\nDESCRIPTION: Retrieves user information by username. Returns a User object containing the user's details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Example Pet API Usage\nDESCRIPTION: Java code example demonstrating how to use the PetApi class to add a new pet to the store. Shows basic API client initialization and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/README.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.api.PetApi;\n\npublic class PetApiExample {\n\n    public static void main(String[] args) {\n        PetApi apiInstance = new PetApi();\n        Pet body = new Pet(); // Pet | Pet object that needs to be added to the store\n        try {\n            apiInstance.addPet(body);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling PetApi#addPet\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags with PetApi in Java\nDESCRIPTION: Example of how to find pets by their tags using the PetApi. It shows OAuth2 authentication setup, passing tag values as a filter, and handling the returned list of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Delete Order Implementation in Objective-C\nDESCRIPTION: Deletes a purchase order by ID. Accepts order IDs less than 1000, with values above 1000 or non-integers generating API errors. Returns empty response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGStoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) deleteOrderWithOrderId: (NSString*) orderId\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSString* orderId = @\"orderId_example\"; // ID of the order that needs to be deleted\n\nSWGStoreApi*apiInstance = [[SWGStoreApi alloc] init];\n\n// Delete purchase order by ID\n[apiInstance deleteOrderWithOrderId:orderId\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGStoreApi->deleteOrder: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelApiResponse class using a markdown table. The properties include code (Integer), type (String), and message (String), all of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Get Order by ID Example - Kotlin\nDESCRIPTION: Example code showing how to fetch a purchase order by ID. Takes an order ID as input and returns an Order object. Valid for IDs <= 5 or > 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\nval orderId : kotlin.Long = 789 // kotlin.Long | ID of pet that needs to be fetched\ntry {\n    val result : Order = apiInstance.getOrderById(orderId)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#getOrderById\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getOrderById\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Resume Data for Failed Downloads in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to access resume data for failed downloads using Alamofire. It shows two methods: accessing resume data from the response closure and directly from the download object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_30\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.download(.GET, \"https://httpbin.org/stream/100\", destination: destination)\n         .response { _, _, data, _ in\n             if let\n                 data = data,\n                 resumeDataString = NSString(data: data, encoding: NSUTF8StringEncoding)\n             {\n                 print(\"Resume Data: \\(resumeDataString)\")\n             } else {\n                 print(\"Resume Data was empty\")\n             }\n         }\n\nlet download = Alamofire.download(.GET, \"https://httpbin.org/stream/100\", destination: destination)\ndownload.response { _, _, _, _ in\n    if let\n        resumeData = download.resumeData,\n        resumeDataString = NSString(data: resumeData, encoding: NSUTF8StringEncoding)\n    {\n        print(\"Resume Data: \\(resumeDataString)\")\n    } else {\n        print(\"Resume Data was empty\")\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for Swagger Codegen\nDESCRIPTION: This code snippet defines the properties of a Tag model using a markdown table. It specifies two optional properties: 'id' of type Long and 'name' of type String. This format is commonly used in Swagger/OpenAPI specifications to describe data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Logging Out a User from Swagger API with Perl\nDESCRIPTION: Example showing how to log out the currently authenticated user. This endpoint terminates the user's active session and doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\n\neval { \n    $api_instance->logout_user();\n};\nif ($@) {\n    warn \"Exception when calling UserApi->logout_user: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java using Swagger Client\nDESCRIPTION: Example code demonstrating how to test inline additional properties using the FakeApi. Takes an Object parameter as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name with Swagger Petstore API in JavaScript\nDESCRIPTION: Example of making a PATCH request to the /fake_classname_test endpoint using the Swagger Petstore client library. Demonstrates API key authentication setup and handling the API response through a callback.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key_query\nvar api_key_query = defaultClient.authentications['api_key_query'];\napi_key_query.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.FakeClassnameTags123Api();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testClassname(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in C#\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the PetApi. It configures OAuth2 authentication, creates a Pet object, and calls the AddPet method. Exception handling is included for error scenarios.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Schema with BigDecimal Property in Swagger\nDESCRIPTION: Schema definition for the NumberOnly model which contains a single property 'justNumber' of type BigDecimal. This property is marked as optional in the Swagger specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Angular2 TypeScript Petstore Package\nDESCRIPTION: Commands for installing dependencies and building the TypeScript sources for the Petstore package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Using TestCodeInjectEndRnNR Method for Code Injection Testing in Swagger API\nDESCRIPTION: This code snippet documents the TestCodeInjectEndRnNR method which is used to test code injection vulnerabilities. It accepts an optional parameter and makes a PUT request to the /fake endpoint. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/go/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestCodeInjectEndRnNR**\n> TestCodeInjectEndRnNR(ctx, optional)\nTo test code injection *_/ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiTestCodeInjectEndRnNROpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiTestCodeInjectEndRnNROpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **testCodeInjectEndRnNR** | **optional.String**| To test code injection *_/ &#39; \\&quot; &#x3D;end -- \\\\r\\\\n \\\\n \\\\r | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json, *_/ '  =end --       \n - **Accept**: application/json, *_/ '  =end --       \n\n[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This example demonstrates how to call the testSpecialTags method from AnotherFakeApi. It creates an API instance, initializes a Client model object, calls the API method, and handles potential exceptions. The method uses a PATCH request to the /another-fake/dummy endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Objective-C\nDESCRIPTION: Example demonstrating how to update a pet using form data in the Swagger PetStore API. This code sets up OAuth2 authentication, prepares pet ID, name, and status parameters, and calls the updatePetWithForm method with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) updatePetWithFormWithPetId: (NSString*) petId\n    name: (NSString*) name\n    status: (NSString*) status\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nSWGDefaultConfiguration *apiConfig = [SWGDefaultConfiguration sharedConfig];\n\n// Configure OAuth2 access token for authorization: (authentication scheme: petstore_auth)\n[apiConfig setAccessToken:@\"YOUR_ACCESS_TOKEN\"];\n\n\nNSString* petId = @\"petId_example\"; // ID of pet that needs to be updated\nNSString* name = @\"name_example\"; // Updated name of the pet (optional)\nNSString* status = @\"status_example\"; // Updated status of the pet (optional)\n\nSWGPetApi*apiInstance = [[SWGPetApi alloc] init];\n\n// Updates a pet in the store with form data\n[apiInstance updatePetWithFormWithPetId:petId\n              name:name\n              status:status\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGPetApi->updatePetWithForm: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It sets up OAuth2 authentication, specifies the pet ID to delete, and calls the deletePet method. The method handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Base Path in NgModule Providers\nDESCRIPTION: TypeScript code showing how to set a custom base path for API services in the NgModule providers array.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Name Model Properties Table in Markdown\nDESCRIPTION: A table listing all properties of the Name model, including their types, descriptions, and optional status. The properties include 'name', 'snake_case', 'property', and '_123_number'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **int** |  | \n**snake_case** | **int** |  | [optional] \n**property** | **string** |  | [optional] \n**_123_number** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: ApiResponse Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the ApiResponse model. It specifies three properties: code (Integer), type (String), and message (String), all of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **kotlin.Int** |  |  [optional]\n**type** | **kotlin.String** |  |  [optional]\n**message** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID using PHP\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It requires the order ID as a parameter and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\StoreApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$order_id = \"order_id_example\"; // string | ID of the order that needs to be deleted\n\ntry {\n    $apiInstance->deleteOrder($order_id);\n} catch (Exception $e) {\n    echo 'Exception when calling StoreApi->deleteOrder: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It sets up OAuth2 authentication, specifies the pet ID to delete, and includes an optional API key. Exception handling is provided for API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Calling testInlineAdditionalProperties method in Java\nDESCRIPTION: This snippet shows how to call the testInlineAdditionalProperties method of the FakeApi class. It demonstrates creating an API instance, setting up the request parameter, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: FormatTest Model Property Definitions in Markdown\nDESCRIPTION: Markdown table defining the properties of the FormatTest model class. Includes property names, data types, and indicates which fields are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Number** |  | [optional] \n**int32** | **Number** |  | [optional] \n**int64** | **Number** |  | [optional] \n**_number** | **Number** |  | \n**_float** | **Number** |  | [optional] \n**_double** | **Number** |  | [optional] \n**_string** | **String** |  | [optional] \n**_byte** | **Blob** |  | \n**binary** | **Blob** |  | [optional] \n**_date** | **Date** |  | \n**dateTime** | **Date** |  | [optional] \n**uuid** | **String** |  | [optional] \n**password** | **String** |  |\n```\n\n----------------------------------------\n\nTITLE: ClassModel Structure Definition in Markdown\nDESCRIPTION: Defines the ClassModel with a single optional property called 'propertyClass' of type String. This appears to be a data model definition used in Swagger Codegen for code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Parsing Command-Line Arguments for SwaggerPetstore Server in Haskell\nDESCRIPTION: This snippet demonstrates how to use the optparse-applicative library to parse command-line arguments for host and port when running a SwaggerPetstore server. It defines a main function that parses arguments and runs the server, and a helper function to handle the argument parsing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/haskell-servant/README.md#2025-04-20_snippet_2\n\nLANGUAGE: haskell\nCODE:\n```\n{-# LANGUAGE RecordWildCards #-}\n\nmodule Main (main) where\n\nimport SwaggerPetstore.API (runSwaggerPetstoreServer, SwaggerPetstoreBackend(..), ServerConfig(..))\n\nimport Control.Applicative ((<$>), (<*>))\nimport Options.Applicative (execParser, option, str, auto, long, metavar, help)\n\nmain :: IO ()\nmain = do\n  config <- parseArguments\n  runSwaggerPetstoreServer config SwaggerPetstoreBackend{}\n\n-- | Parse host and port from the command line arguments.\nparseArguments :: IO ServerConfig\nparseArguments =\n  execParser $\n    ServerConfig\n      <$> option str  (long \"host\" <> metavar \"HOST\" <> help \"Host to serve on\")\n      <*> option auto (long \"port\" <> metavar \"PORT\" <> help \"Port to serve on\")\n```\n\n----------------------------------------\n\nTITLE: Getting Store Inventory in C#\nDESCRIPTION: Retrieves pet inventories grouped by status using the StoreApi. Requires API key authentication and returns a dictionary of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary<string, int?> result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameter Types in Java with Swagger Client\nDESCRIPTION: Example code for testing various parameter types using the FakeApi. It demonstrates how to use different parameter types including numeric, string, binary, date, and password parameters with HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: Example code demonstrating how to call the testSpecialTags PATCH endpoint. The endpoint accepts a Client model object as input and returns the same model type. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Go\nDESCRIPTION: This function retrieves pets based on their tags. It accepts multiple tags as input and returns a slice of Pet objects. The request is made via HTTP GET to the /pet/findByTags endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nfunc FindPetsByTags(ctx context.Context, tags []string) ([]Pet, error)\n```\n\n----------------------------------------\n\nTITLE: Uploading MultipartFormData in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to upload MultipartFormData using Alamofire. It shows how to append multiple files to the form data and handle the encoding result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_26\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.upload(\n    .POST,\n    \"https://httpbin.org/post\",\n    multipartFormData: { multipartFormData in\n        multipartFormData.appendBodyPart(fileURL: unicornImageURL, name: \"unicorn\")\n        multipartFormData.appendBodyPart(fileURL: rainbowImageURL, name: \"rainbow\")\n    },\n    encodingCompletion: { encodingResult in\n    \tswitch encodingResult {\n    \tcase .Success(let upload, _, _):\n            upload.responseJSON { response in\n                debugPrint(response)\n            }\n    \tcase .Failure(let encodingError):\n    \t    print(encodingError)\n    \t}\n    }\n)\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to test serialization of object with outer number type. Creates a FakeApi instance, initializes an OuterComposite object, and makes a request to serialize the composite object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login - Java Swagger Client\nDESCRIPTION: Example of logging in a user with username and password using the Swagger client. Returns a login token string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Java Client Dependency in Maven POM\nDESCRIPTION: XML snippet to add the Swagger Java client dependency to a Maven project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/README.md#2025-04-20_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-java-client</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Updating User - Go\nDESCRIPTION: API endpoint for updating an existing user. Requires authentication and accepts a username parameter and User object. Returns an empty response on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nUpdateUser(ctx, username, body)\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name in Snake Case with C# Client Example\nDESCRIPTION: This example demonstrates how to use the TestClassname method from the FakeClassnameTags123Api class. It shows the setup for API key authorization, creating an instance of the API client, making the API call, and handling responses and exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClassnameExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key_query\n            Configuration.Default.AddApiKey(\"api_key_query\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key_query\", \"Bearer\");\n\n            var apiInstance = new FakeClassnameTags123Api();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test class name in snake case\n                ModelClient result = apiInstance.TestClassname(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeClassnameTags123Api.TestClassname: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters with FakeApi in Perl\nDESCRIPTION: This snippet demonstrates how to call the test_endpoint_parameters method of the FakeApi. It sets up various parameter types including numbers, strings, dates, and more, then makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n\n    # Configure HTTP basic authorization: http_basic_test\n    username => 'YOUR_USERNAME',\n    password => 'YOUR_PASSWORD',\n);\n\nmy $number = 8.14; # Number | None\nmy $double = 1.2; # double | None\nmy $pattern_without_delimiter = 'pattern_without_delimiter_example'; # string | None\nmy $byte = 'B'; # string | None\nmy $integer = 56; # int | None\nmy $int32 = 56; # int | None\nmy $int64 = 789; # int | None\nmy $float = 3.4; # double | None\nmy $string = 'string_example'; # string | None\nmy $binary = 'B'; # string | None\nmy $date = DateTime->from_epoch(epoch => str2time('2013-10-20')); # DateTime | None\nmy $date_time = DateTime->from_epoch(epoch => str2time('2013-10-20T19:20:30+01:00')); # DateTime | None\nmy $password = 'password_example'; # string | None\nmy $callback = 'callback_example'; # string | None\n\neval { \n    $api_instance->test_endpoint_parameters(number => $number, double => $double, pattern_without_delimiter => $pattern_without_delimiter, byte => $byte, integer => $integer, int32 => $int32, int64 => $int64, float => $float, string => $string, binary => $binary, date => $date, date_time => $date_time, password => $password, callback => $callback);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_endpoint_parameters: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer string types. It creates a FakeApi instance, provides a sample string, and makes a request to serialize the string value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a User model including data types, descriptions and optional status. Used for API documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Long** |  |  [optional] |\n| **username** | **String** |  |  [optional] |\n| **firstName** | **String** |  |  [optional] |\n| **lastName** | **String** |  |  [optional] |\n| **email** | **String** |  |  [optional] |\n| **password** | **String** |  |  [optional] |\n| **phone** | **String** |  |  [optional] |\n| **userStatus** | **Integer** | User Status |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Creating Users with List Input in Java using Swagger Client\nDESCRIPTION: Creates multiple users by passing a List of User objects. Similar to array input but uses List interface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean Type in Ruby\nDESCRIPTION: This snippet demonstrates how to serialize an outer boolean type using the FakeApi. It sends a POST request to /fake/outer/boolean with an optional OuterBoolean body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nopts = { \n  body: Petstore::OuterBoolean.new # OuterBoolean | Input boolean as post body\n}\n\nbegin\n  result = api_instance.fake_outer_boolean_serialize(opts)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->fake_outer_boolean_serialize: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order by ID in Java using Swagger API\nDESCRIPTION: Example code for finding a purchase order by ID. Works with integer IDs <= 5 or > 10. Returns Order object containing order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java Swagger Client\nDESCRIPTION: Example code demonstrating how to test enum parameters using the FakeApi client. Includes handling of various enum parameter types including form, header, and query parameters with string, integer and double values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Slim Application\nDESCRIPTION: Example PHP code showing how to create a simple Slim application with a route that accepts a name parameter and returns a greeting. This demonstrates the basic pattern of routing and request handling in Slim.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/slim/slim/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nrequire 'vendor/autoload.php';\n\n$app = new Slim\\App();\n\n$app->get('/hello/{name}', function ($request, $response, $args) {\n    $response->write(\"Hello, \" . $args['name']);\n    return $response;\n});\n\n$app->run();\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Swagger API Modules\nDESCRIPTION: Angular module configuration for using multiple Swagger-generated API modules with alias names to avoid conflicts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    // make sure to import the HttpClientModule in the AppModule only,\n    // see https://github.com/angular/angular/issues/20575\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Go Package\nDESCRIPTION: Instructions for importing the Swagger package into a Go project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/go/README.md#2025-04-20_snippet_0\n\nLANGUAGE: golang\nCODE:\n```\nimport \"./swagger\"\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Perl\nDESCRIPTION: Shows how to delete a purchase order using its ID. This example includes error handling and specifies that valid IDs should be integers less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::StoreApi;\nmy $api_instance = WWW::SwaggerClient::StoreApi->new(\n);\n\nmy $order_id = 'order_id_example'; # string | ID of the order that needs to be deleted\n\neval { \n    $api_instance->delete_order(order_id => $order_id);\n};\nif ($@) {\n    warn \"Exception when calling StoreApi->delete_order: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Schema Properties in Markdown\nDESCRIPTION: A Markdown table defining the properties of a 'Name' model schema. The table includes columns for property names, data types, descriptions, and optional notes. The schema includes required and optional integer and string properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a markdown table. It specifies three optional properties: myNumber, myString, and myBoolean, each referencing a corresponding outer type model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**myString** | [**OuterString**](OuterString.md) |  | [optional] \n**myBoolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Properties in Markdown for Swagger Codegen\nDESCRIPTION: Specifies the properties of a Category object using a markdown table format. It defines two optional properties: 'id' of type Long and 'name' of type String. This format is commonly used in Swagger/OpenAPI specifications to define data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the SwaggerPetstore PetApi. It sets up OAuth2 authentication and makes an API call to add a pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar body = new SwaggerPetstore.Pet(); // Pet | Pet object that needs to be added to the store\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.addPet(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Logging Out a User in Java\nDESCRIPTION: This example demonstrates how to log out the currently authenticated user. This method ends the user's session and requires no parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Python\nDESCRIPTION: This code snippet demonstrates how to use the test_special_tags method of the AnotherFakeApi class. It sends a PATCH request to test special tags, passing a Client object as the body parameter. The example includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.AnotherFakeApi()\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test special tags\n    api_response = api_instance.test_special_tags(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling AnotherFakeApi->test_special_tags: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Java Client Dependency\nDESCRIPTION: Maven dependency configuration to include the Swagger Java client library in a project's pom.xml file. Specifies groupId, artifactId, version, and compile scope.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-java-client</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in Ruby\nDESCRIPTION: Example code showing how to delete a pet from the store using the Petstore Ruby client. It requires a pet ID parameter and has an optional API key. The example demonstrates setting up authorization, creating the API instance, and handling errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure OAuth2 access token for authorization: petstore_auth\n  config.access_token = 'YOUR ACCESS TOKEN'\nend\n\napi_instance = Petstore::PetApi.new\n\npet_id = 789 # Integer | Pet id to delete\n\nopts = { \n  api_key: 'api_key_example' # String | \n}\n\nbegin\n  #Deletes a pet\n  api_instance.delete_pet(pet_id, opts)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling PetApi->delete_pet: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in FakeApi with Java\nDESCRIPTION: Example code for calling the testEnumParameters method which tests various enum parameters. It demonstrates how to initialize and pass enum values of different types (string arrays, strings, integers, and doubles) to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore SDK via NPM\nDESCRIPTION: Command to install the Swagger Petstore SDK package using npm package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install swagger_petstore --save\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in JavaScript for Swagger Petstore API\nDESCRIPTION: Demonstrates how to use the testClientModel method of the FakeApi class to test the \"client\" model. It requires a Client object as a parameter and returns a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testClientModel(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Model Properties in Markdown\nDESCRIPTION: Lists the properties of the EnumTest model, including their names, types, and optional status. The properties include enumerated fields for string, integer, float, and a custom OuterEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Petstore::EnumTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enum_string** | **String** |  | [optional] \n**enum_string_required** | **String** |  | \n**enum_integer** | **Integer** |  | [optional] \n**enum_number** | **Float** |  | [optional] \n**outer_enum** | [**OuterEnum**](OuterEnum.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Orders by ID in Eiffel\nDESCRIPTION: This function retrieves a purchase order by its ID. It accepts an INTEGER_64 order_id parameter and returns an ORDER object. Valid responses occur for integer IDs with value <= 5 or > 10, while other values generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/STORE_API.md#2025-04-20_snippet_2\n\nLANGUAGE: eiffel\nCODE:\n```\norder_by_id (order_id: INTEGER_64 ): detachable ORDER\n```\n\n----------------------------------------\n\nTITLE: Building NuGet Package for Swagger Petstore C# SDK\nDESCRIPTION: Command to build a NuGet package from the project file, outputting to a specified directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnuget pack -Build -OutputDirectory out IO.Swagger.csproj\n```\n\n----------------------------------------\n\nTITLE: Generating Bash Client for REST Service using Swagger Codegen CLI\nDESCRIPTION: This command uses the Swagger Codegen CLI to generate a Bash client for a REST service, using a specified Swagger JSON file and configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ java -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate -i http://petstore.swagger.io/v2/swagger.json -l bash -o generated/bash/petstore -c modules/swagger-codegen/src/test/resources/2_0/bash-config.json\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in SwaggerPetstore FakeApi (JavaScript)\nDESCRIPTION: This snippet demonstrates the usage of the testJsonFormData method in the FakeApi class. It takes two string parameters and sends them as form data. This method is used to test JSON serialization of form data in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet param = \"param_example\"; // String | field1\n\nlet param2 = \"param2_example\"; // String | field2\n\napiInstance.testJsonFormData(param, param2).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order Using CLI\nDESCRIPTION: Command line example for deleting a purchase order by ID. Works with integer IDs less than 1000, with higher values or non-integers generating API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli deleteOrder order_id=value\n```\n\n----------------------------------------\n\nTITLE: Example C# Implementation Using FakeApi\nDESCRIPTION: Complete example showing how to instantiate and use the FakeApi endpoint with error handling in a C# application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/README.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class Example\n    {\n        public void main()\n        {\n\n            var apiInstance = new FakeApi();\n            var testCodeInjectEndRnNR = testCodeInjectEndRnNR_example;  // string | To test code injection *_/ ' \\\" =end - - \\\\r\\\\n \\\\n \\\\r (optional) \n\n            try\n            {\n                // To test code injection *_/ ' \\\" =end - - \\\\r\\\\n \\\\n \\\\r\n                apiInstance.TestCodeInjectEndRnNR(testCodeInjectEndRnNR);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestCodeInjectEndRnNR: \" + e.Message );\n            }\n\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using FakeApi in SwaggerClient-php\nDESCRIPTION: Example PHP code demonstrating how to use the FakeApi class to call the testCodeInjectEndRnNR endpoint with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/php/SwaggerClient-php/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$test_code_inject____end____rn_n_r = \"test_code_inject____end____rn_n_r_example\"; // string | To test code injection *_/ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r\n\ntry {\n    $apiInstance->testCodeInjectEndRnNR($test_code_inject____end____rn_n_r);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testCodeInjectEndRnNR: ', $e->getMessage(), PHP_EOL;\n}\n\n?>\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization with FakeApi in Perl\nDESCRIPTION: This snippet shows how to use the test_json_form_data method of the FakeApi. It sets up two string parameters and makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_10\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $param = 'param_example'; # string | field1\nmy $param2 = 'param2_example'; # string | field2\n\neval { \n    $api_instance->test_json_form_data(param => $param, param2 => $param2);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_json_form_data: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Dart\nDESCRIPTION: Example code for updating a user's information. This operation can only be performed by the logged-in user and requires the username and an updated User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | name that need to be deleted\nvar body = new User(); // User | Updated user object\n\ntry { \n    api_instance.updateUser(username, body);\n} catch (e) {\n    print(\"Exception when calling UserApi->updateUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Serialization with fakeOuterNumberSerialize in Bash\nDESCRIPTION: Command example for testing the serialization of outer number types. This endpoint takes an optional OuterNumber input body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli fakeOuterNumberSerialize\n```\n\n----------------------------------------\n\nTITLE: String Enum Declarations in TypeScript\nDESCRIPTION: Defines an enumeration containing three string constants with special character prefixes and enclosures. The values use underscore prefixes and various enclosing characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum EnumClass {\n  _ABC = \"_abc\",\n  _EFG = \"-efg\",\n  _XYZ_ = \"(xyz)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username - Java\nDESCRIPTION: Example code for retrieving user details by username. Returns a User object containing user information. For testing purposes, 'user1' can be used as a sample username.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Get Pet By ID Operation\nDESCRIPTION: Example of calling the API operation to retrieve pet information by ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_6\n\nLANGUAGE: ada\nCODE:\n```\n  C.Get_Pet_By_Id (768, Pet);\n```\n\n----------------------------------------\n\nTITLE: Importing Custom Models in Swagger Codegen\nDESCRIPTION: Command-line arguments to specify import mappings for custom models in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n--import-mappings Pet=my.models.MyPet\n```\n\nLANGUAGE: sh\nCODE:\n```\n--import-mappings Pet=my.models.MyPet,Order=my.models.MyOrder\n```\n\nLANGUAGE: sh\nCODE:\n```\n--import-mappings Pet=my.models.MyPet --import-mappings Order=my.models.MyOrder\n```\n\n----------------------------------------\n\nTITLE: Importing SwaggerClient SDK components in ObjC\nDESCRIPTION: This code snippet shows how to import the necessary components of the SwaggerClient SDK in an Objective-C file. It includes the API client, configuration, models, and API classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/core-data/README.md#2025-04-20_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n#import <SwaggerClient/SWGApiClient.h>\n#import <SwaggerClient/SWGDefaultConfiguration.h>\n// load models\n#import <SwaggerClient/SWGCategory.h>\n#import <SwaggerClient/SWGOrder.h>\n#import <SwaggerClient/SWGPet.h>\n#import <SwaggerClient/SWGTag.h>\n#import <SwaggerClient/SWGUser.h>\n// load API classes for accessing endpoints\n#import <SwaggerClient/SWGPetApi.h>\n#import <SwaggerClient/SWGStoreApi.h>\n#import <SwaggerClient/SWGUserApi.h>\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order by ID - Java Implementation\nDESCRIPTION: Example of deleting a purchase order using the Store API. Takes an order ID as input and handles potential API exceptions. Valid for integer IDs less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Model Schema Definition in Markdown\nDESCRIPTION: Markdown table defining the Pet model properties including their types, descriptions and validation rules. Each property specifies whether it is optional and if it has a default value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **integer** |  | [optional] [default to null]\n**category** | [**Category**](Category.md) |  | [optional] [default to null]\n**name** | **string** |  | [default to null]\n**photoUrls** | **array[string]** |  | [default to null]\n**tags** | [**array[Tag]**](Tag.md) |  | [optional] [default to null]\n**status** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Deleting User from Swagger Petstore\nDESCRIPTION: Deletes a user from the system by username. This operation can only be performed by authenticated users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet username = \"username_example\"; // String | The name that needs to be deleted\n\napiInstance.deleteUser(username).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in C#\nDESCRIPTION: Example code showing how to test enum parameters using different parameter types (form, header, query) and data types (string array, string, integer, double).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEnumParametersExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var enumFormStringArray = enumFormStringArray_example;  // List<string> | Form parameter enum test (string array) (optional) \n            var enumFormString = enumFormString_example;  // string | Form parameter enum test (string) (optional)  (default to -efg)\n            var enumHeaderStringArray = enumHeaderStringArray_example;  // List<string> | Header parameter enum test (string array) (optional) \n            var enumHeaderString = enumHeaderString_example;  // string | Header parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryStringArray = enumQueryStringArray_example;  // List<string> | Query parameter enum test (string array) (optional) \n            var enumQueryString = enumQueryString_example;  // string | Query parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryInteger = 56;  // int? | Query parameter enum test (double) (optional) \n            var enumQueryDouble = 1.2;  // double? | Query parameter enum test (double) (optional) \n\n            try\n            {\n                apiInstance.TestEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEnumParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Router for Type-Safe API Requests in Swift\nDESCRIPTION: Demonstrates using the Router enum to make a type-safe search request with pagination. The Router handles converting the search parameters into the appropriate URL request with query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_55\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(Router.Search(query: \"foo bar\", page: 1)) // ?q=foo%20bar&offset=50\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path in Bootstrap\nDESCRIPTION: Example of providing a custom base path for the API service during app bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Deleting a pet from the Petstore API in Python\nDESCRIPTION: This snippet shows how to delete a pet from the Swagger Petstore by its ID. It requires OAuth2 authentication and accepts an optional API key. The function takes a pet ID as a required parameter and handles potential API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | Pet id to delete\napi_key = 'api_key_example' # str |  (optional)\n\ntry:\n    # Deletes a pet\n    api_instance.delete_pet(pet_id, api_key=api_key)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->delete_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization in Java with Swagger Client\nDESCRIPTION: Example code for testing the serialization of outer number types using the FakeApi. It sends a BigDecimal value as the request body and receives a BigDecimal response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the PetApi. It configures OAuth2 authentication, creates a list of status values to filter by, and calls the findPetsByStatus method. The result is a list of Pet objects matching the specified statuses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order by ID using Python in Petstore API\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by its ID using the StoreApi. It handles potential API exceptions and is designed for IDs less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\norder_id = 'order_id_example' # str | ID of the order that needs to be deleted\n\ntry:\n    # Delete purchase order by ID\n    api_instance.delete_order(order_id)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->delete_order: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Using FakeClassnameTags123Api in C# with Swagger\nDESCRIPTION: An example demonstrating how to use the FakeClassnameTags123Api to test class name in snake case. It shows how to configure API key authorization, initialize the API client, make a request with a ModelClient object, and handle the response or exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClassnameExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key_query\n            Configuration.Default.AddApiKey(\"api_key_query\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key_query\", \"Bearer\");\n\n            var apiInstance = new FakeClassnameTags123Api();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test class name in snake case\n                ModelClient result = apiInstance.TestClassname(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeClassnameTags123Api.TestClassname: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Go API\nDESCRIPTION: Method for testing an endpoint that accepts both a request body and query parameters. It requires a User object in the body and a query string parameter. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestBodyWithQueryParams**\n> TestBodyWithQueryParams(ctx, body, query)\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**User**](User.md)|  | \n  **query** | **string**|  | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to delete a pet from the store using the SwaggerPetstore PetApi. It configures OAuth2 authentication and makes an API call to delete a pet by its ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | Pet id to delete\n\nvar opts = { \n  'apiKey': \"apiKey_example\" // String | \n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.deletePet(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with SwaggerPetstore AnotherFakeApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class in SwaggerPetstore. It sends a PATCH request to test special tags, passing a client model as the body and handling the response or error.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.AnotherFakeApi();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\napiInstance.testSpecialTags(body).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet Using Bash CLI\nDESCRIPTION: Example showing how to upload an image for a pet using the petstore CLI. This endpoint requires a pet ID and optionally accepts additional metadata and a file to upload.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli uploadFile petId=value\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Example with C# Swagger Client\nDESCRIPTION: This example demonstrates how to call the TestJsonFormData endpoint which tests JSON serialization of form data in a C# client. It passes two string parameters that will be serialized as form fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestJsonFormDataExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = param_example;  // string | field1\n            var param2 = param2_example;  // string | field2\n\n            try\n            {\n                // test json serialization of form data\n                apiInstance.TestJsonFormData(param, param2);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestJsonFormData: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Swagger Codegen\nDESCRIPTION: This code snippet defines an enum called ModelBoolean with two possible values: TRUE and FALSE. It is used in Swagger Codegen to represent boolean values in a more explicit manner.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumTest model, including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status using Python in Petstore API\nDESCRIPTION: This snippet shows how to retrieve pet inventories by status using the StoreApi. It requires API key authorization and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi(petstore_api.ApiClient(configuration))\n\ntry:\n    # Returns pet inventories by status\n    api_response = api_instance.get_inventory()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->get_inventory: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with FakeApi in Java\nDESCRIPTION: Example showing how to call the fakeOuterBooleanSerialize endpoint which tests serialization of outer boolean types. It accepts a boolean value as a post body and returns a Boolean response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User with Petstore CLI\nDESCRIPTION: This snippet demonstrates how to delete a user using the Petstore CLI. It requires a username as input and doesn't return any response body. This action can only be performed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli deleteUser username=value\n```\n\n----------------------------------------\n\nTITLE: Creating a Single User with UserApi in Java\nDESCRIPTION: Example of creating a new user by calling the createUser method. This operation requires a User object as input and can only be executed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger Markdown\nDESCRIPTION: Markdown table defining the properties of a Category model in Swagger. Specifies two optional fields: an ID of type Long and a name of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Error Types for Alamofire Response Handling\nDESCRIPTION: This snippet shows how to create a custom ErrorType enum for handling different types of networking errors in Alamofire. This approach provides clear error categorization for network, serialization, and other error types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_42\n\nLANGUAGE: swift\nCODE:\n```\npublic enum BackendError: ErrorType {\n    case Network(error: NSError)\n    case DataSerialization(reason: String)\n    case JSONSerialization(error: NSError)\n    case ObjectSerialization(reason: String)\n    case XMLSerialization(error: NSError)\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of how to call the fakeOuterBooleanSerialize method to test serialization of outer boolean types. The method accepts an optional OuterBoolean object as a request body and returns an OuterBoolean response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterBoolean() // OuterBoolean | Input boolean as post body\n};\napiInstance.fakeOuterBooleanSerialize(opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of an Animal class model. Contains className (required String) and color (optional String) fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in SwaggerPetstore API\nDESCRIPTION: This snippet outlines the properties of the Order model in the SwaggerPetstore API. It includes fields for id, petId, quantity, shipDate, status, and complete, along with their respective data types and optional flags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**petId** | **Number** |  | [optional] \n**quantity** | **Number** |  | [optional] \n**shipDate** | **Date** |  | [optional] \n**status** | **String** | Order Status | [optional] \n**complete** | **Boolean** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data in C#\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It includes setting up the API instance, configuring OAuth2 authentication, and making the API call with required and optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Format Test Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the format_test model in a tabular format, including data types, optional flags, and default values. It lists various property types such as integer, float, string, binary, date, datetime, UUID, and password with their corresponding configurations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Format_test.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **integer** |  | [optional] [default to null]\n**int32** | **integer** |  | [optional] [default to null]\n**int64** | **integer** |  | [optional] [default to null]\n**number** | **integer** |  | [default to null]\n**float** | **float** |  | [optional] [default to null]\n**double** | **float** |  | [optional] [default to null]\n**string** | **string** |  | [optional] [default to null]\n**byte** | **string** |  | [default to null]\n**binary** | **binary** |  | [optional] [default to null]\n**date** | **string** |  | [default to null]\n**dateTime** | **string** |  | [optional] [default to null]\n**uuid** | **string** |  | [optional] [default to null]\n**password** | **string** |  | [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ApiResponse model using a markdown table. It includes three properties: Code (integer), Type (string), and Message (string), all of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Code** | **int?** |  | [optional] \n**Type** | **string** |  | [optional] \n**Message** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java using FakeApi\nDESCRIPTION: This snippet illustrates the usage of the testJsonFormData method of the FakeApi class. It shows how to set up form parameters and make an API call, including error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet - Kotlin Implementation\nDESCRIPTION: Example code demonstrating pet deletion by ID with optional API key parameter. Includes error handling for client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | Pet id to delete\nval apiKey : kotlin.String = apiKey_example // kotlin.String | \ntry {\n    apiInstance.deletePet(petId, apiKey)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#deletePet\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#deletePet\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Using the test_body_with_query_params endpoint in Perl\nDESCRIPTION: This example shows how to call the test_body_with_query_params endpoint that tests a request with both body and query parameters. It creates a User object for the body and includes a query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::User->new(); # User | \nmy $query = 'query_example'; # string | \n\neval { \n    $api_instance->test_body_with_query_params(body => $body, query => $query);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_body_with_query_params: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Structure in Markdown\nDESCRIPTION: This snippet defines the structure of the ArrayOfArrayOfNumberOnly model class in the IO.Swagger.Model namespace. It includes a single property 'ArrayArrayNumber' which is a nested array of nullable decimal values and is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ArrayOfArrayOfNumberOnly\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | **List&lt;List&lt;decimal?&gt;&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining SWGCategory Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SWGCategory model using a markdown table. It specifies two properties: _id (an NSNumber) and name (an NSString), both of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGCategory.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_id** | **NSNumber*** |  | [optional] \n**name** | **NSString*** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Swagger API\nDESCRIPTION: Demonstrates how to test enum parameters using various parameter types including form, header, and query parameters. Accepts string arrays, strings, integers and doubles as enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'enumFormStringArray': [\"enumFormStringArray_example\"], // [String] | Form parameter enum test (string array)\n  'enumFormString': \"-efg\", // String | Form parameter enum test (string)\n  'enumHeaderStringArray': [\"enumHeaderStringArray_example\"], // [String] | Header parameter enum test (string array)\n  'enumHeaderString': \"-efg\", // String | Header parameter enum test (string)\n  'enumQueryStringArray': [\"enumQueryStringArray_example\"], // [String] | Query parameter enum test (string array)\n  'enumQueryString': \"-efg\", // String | Query parameter enum test (string)\n  'enumQueryInteger': 56, // Number | Query parameter enum test (double)\n  'enumQueryDouble': 1.2 // Number | Query parameter enum test (double)\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testEnumParameters(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Finding Order by ID Using the Store API in Java\nDESCRIPTION: Example Java code demonstrating how to find a purchase order by ID using the StoreApi. The example shows how to pass the order ID parameter and handle the returned Order object or any exceptions that might occur.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java\nDESCRIPTION: This snippet demonstrates how to use the testEndpointParameters method of the FakeApi class to test various parameters. It shows how to set up HTTP basic authentication, create an instance of FakeApi, and call the method with multiple parameters of different types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Code with Custom Configuration in Swagger Codegen\nDESCRIPTION: Shell command to generate code using Swagger Codegen CLI with a custom configuration file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate \\\n  -i https://petstore.swagger.io/v2/swagger.json \\\n  -l java \\\n  -o samples/client/petstore/java \\\n  -c path/to/config.json\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Pet model using a markdown table. It includes the property names, types, descriptions, and additional notes such as whether the property is optional and its default value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**Category** | [***Category**](Category.md) |  | [optional] [default to null]\n**Name** | **string** |  | [default to null]\n**PhotoUrls** | **[]string** |  | [default to null]\n**Tags** | [**[]Tag**](Tag.md) |  | [optional] [default to null]\n**Status** | **string** | pet status in the store | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Including Ruby SDK in Project\nDESCRIPTION: Instructions for including the Petstore Ruby SDK in a project's Gemfile. This can be done by specifying the gem version or by referencing a git repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'petstore', '~> 1.0.0'\n```\n\nLANGUAGE: ruby\nCODE:\n```\ngem 'petstore', :git => 'https://github.com/GIT_USER_ID/GIT_REPO_ID.git'\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input - Go\nDESCRIPTION: API endpoint for creating multiple users using an array input. Accepts an array of User objects in the request body. Returns an empty response on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: go\nCODE:\n```\nCreateUsersWithArrayInput(ctx, body)\n```\n\n----------------------------------------\n\nTITLE: Defining Amount Model Properties in Markdown\nDESCRIPTION: Tabular representation of the Amount data model properties, including their name, type, description, and whether they are required. The model has a numeric value property and a reference to a Currency model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**value** | **Double** | some description  | \n**currency** | [**Currency**](Currency.md) |  | \n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in C# with Swagger\nDESCRIPTION: Example showing how to test JSON serialization of form data by passing two string parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestJsonFormDataExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = param_example;  // string | field1\n            var param2 = param2_example;  // string | field2\n\n            try\n            {\n                apiInstance.TestJsonFormData(param, param2);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestJsonFormData: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Format Test Model Properties Definition\nDESCRIPTION: Markdown table defining properties of the FormatTest model class. Includes property names, data types, and optional status indicators. Properties cover numeric types, strings, binary data, dates, and UUIDs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Viewing Swagger UI for Spring MVC Server\nDESCRIPTION: Instructions for accessing the Swagger UI for the generated Spring MVC server. The UI can be viewed by navigating to the specified localhost URL in a web browser.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/spring-mvc/README.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttp://localhost:8002/v2/swagger-ui.html\n```\n\n----------------------------------------\n\nTITLE: Using FakeClassnameTags123Api to test class names in C#\nDESCRIPTION: This example demonstrates how to use the FakeClassnameTags123Api to call the TestClassname method. It configures API key authorization, creates an instance of the API, passes a ModelClient object, and handles potential exceptions during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClassnameExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key_query\n            Configuration.Default.AddApiKey(\"api_key_query\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key_query\", \"Bearer\");\n\n            var apiInstance = new FakeClassnameTags123Api();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test class name in snake case\n                ModelClient result = apiInstance.TestClassname(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeClassnameTags123Api.TestClassname: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID using StoreApi in Dart\nDESCRIPTION: This example demonstrates how to delete a purchase order by its ID using the StoreApi class. It includes error handling and specifies that the orderId should be a string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = orderId_example; // String | ID of the order that needs to be deleted\n\ntry { \n    api_instance.deleteOrder(orderId);\n} catch (e) {\n    print(\"Exception when calling StoreApi->deleteOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Basic usage example of SwaggerPetstoreEndRnNR\nDESCRIPTION: Example code showing how to initialize and use the FakeApi to call the testCodeInjectEndRnNR endpoint with options and a callback function.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstoreEndRnNR = require('swagger_petstore____end____rn_n_r');\n\nvar api = new SwaggerPetstoreEndRnNR.FakeApi()\n\nvar opts = { \n  'testCodeInjectEndRnNR': \"testCodeInjectEndRnNR_example\" // {String} To test code injection *_/ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napi.testCodeInjectEndRnNR(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Installing Python SDK from Github Repository\nDESCRIPTION: Instructions for installing the Python SDK directly from a Github repository using pip. This method requires the repository URL and may need root permissions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java\nDESCRIPTION: This snippet shows how to find pets by their tags using the PetApi. It sets up OAuth2 authentication, creates a list of tag values, and calls the findPetsByTags method. The result is a list of Pet objects matching the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Java FakeApi Query Parameters Example\nDESCRIPTION: Example code showing how to test body with query parameters using the FakeApi client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.testBodyWithQueryParams()\n    .body(body)\n    .queryQuery(query).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining Amount Model Properties in Markdown\nDESCRIPTION: Table defining the properties of the Amount data model, including a value field of type Double and a currency field referencing the Currency type. The value field represents the numerical amount and includes a description, while the currency field links to the Currency model definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**value** | **kotlin.Double** | some description  | \n**currency** | [**Currency**](Currency.md) |  | \n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order Status in Markdown\nDESCRIPTION: Enumerates the possible values for the Order Status: PLACED, APPROVED, and DELIVERED. This enum is used to restrict the possible values for the status property of an Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a Markdown table. It includes three optional properties: my_number, my_string, and my_boolean, each referencing a separate model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**my_number** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**my_string** | [**OuterString**](OuterString.md) |  | [optional] \n**my_boolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Kotlin\nDESCRIPTION: Example demonstrating how to update a pet using form data. This method requires the pet's ID, and accepts optional name and status parameters to update specific fields of the pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet that needs to be updated\nval name : kotlin.String = name_example // kotlin.String | Updated name of the pet\nval status : kotlin.String = status_example // kotlin.String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#updatePetWithForm\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#updatePetWithForm\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Placing an Order for a Pet in Java using StoreApi\nDESCRIPTION: This snippet shows how to place an order for a pet using the StoreApi. It creates an instance of StoreApi, prepares an Order object, calls the placeOrder method with the order, and prints the result. The method returns an Order object and may throw an ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nOrder body = new Order(); // Order | order placed for purchasing the pet\ntry {\n    Order result = apiInstance.placeOrder(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#placeOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the User model, including their types, descriptions, and whether they're optional. The table outlines standard user attributes like ID, username, name fields, contact information, password, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Model/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**username** | **string** |  | [optional] \n**firstName** | **string** |  | [optional] \n**lastName** | **string** |  | [optional] \n**email** | **string** |  | [optional] \n**password** | **string** |  | [optional] \n**phone** | **string** |  | [optional] \n**userStatus** | **int** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a purchase order using JavaScript\nDESCRIPTION: Example of deleting a purchase order by its ID using the Swagger Petstore Store API. This example shows how to initialize the API client, specify the order ID parameter, and handle the response or error.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\n\napiInstance.deleteOrder(orderId).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient SDK using CocoaPods from local path\nDESCRIPTION: This snippet demonstrates how to install the SwaggerClient SDK using CocoaPods from a local path. It assumes the SDK is placed under the project's Vendor directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/core-data/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\npod 'SwaggerClient', :path => 'Vendor/SwaggerClient'\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with FakeApi\nDESCRIPTION: Example code showing how to test inline additional properties using the FakeApi class. Demonstrates handling of a generic Object parameter and API exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization in Java using Swagger Client\nDESCRIPTION: Example of how to test serialization of outer number types using the FakeApi client. Takes a BigDecimal value as input and returns a BigDecimal result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Composer\nDESCRIPTION: Command to install the Lumen framework and project dependencies using Composer package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/lumen/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer install\n```\n\n----------------------------------------\n\nTITLE: Testing Outer Composite Serialization in Go API\nDESCRIPTION: Method for testing serialization of objects with outer number type. It accepts an optional OuterComposite object in the request body and returns an OuterComposite response. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# **FakeOuterCompositeSerialize**\n> OuterComposite FakeOuterCompositeSerialize(ctx, optional)\n\n\nTest serialization of object with outer number type\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterCompositeSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterCompositeSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterComposite**](OuterComposite.md)| Input composite as post body | \n\n### Return type\n\n[**OuterComposite**](OuterComposite.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Using FakeApi to Test JSON Form Data in C#\nDESCRIPTION: Example of using FakeApi to test JSON serialization of form data. This demonstrates how to send form fields for JSON serialization in the request, specifying two string parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestJsonFormDataExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = param_example;  // string | field1\n            var param2 = param2_example;  // string | field2\n\n            try\n            {\n                // test json serialization of form data\n                apiInstance.TestJsonFormData(param, param2);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestJsonFormData: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Angular Module Configuration\nDESCRIPTION: Setting up the API module without configuring providers in an Angular application\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from '';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters Implementation in Go\nDESCRIPTION: Function signature and struct definition for testing various enum parameters passed through different methods (form, header, query). The parameters include string arrays, individual strings, integers and doubles, with specified default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: go\nCODE:\n```\nFakeApiTestEnumParametersOpts struct\n**enumFormStringArray** | [**optional.Interface of []string**](string.md)\n**enumFormString** | **optional.String**\n**enumHeaderStringArray** | [**optional.Interface of []string**](string.md)\n**enumHeaderString** | **optional.String**\n**enumQueryStringArray** | [**optional.Interface of []string**](string.md)\n**enumQueryString** | **optional.String**\n**enumQueryInteger** | **optional.Int32**\n**enumQueryDouble** | **optional.Float64**\n```\n\n----------------------------------------\n\nTITLE: Importing ApiResponse Model in Dart\nDESCRIPTION: Code snippet showing how to import the ApiResponse model from the Swagger-generated API package in Dart.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Using Multiple API Modules in Angular Application\nDESCRIPTION: TypeScript code demonstrating how to use multiple API modules from different Swagger files by creating alias names during import.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    // make sure to import the HttpClientModule in the AppModule only,\n    // see https://github.com/angular/angular/issues/20575\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Calling testCodeInjectEndRnNR method in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the testCodeInjectEndRnNR method of the FakeApi class. It initializes the API instance, sets up the optional parameters, and makes the API call with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstoreEndRnNR = require('swagger_petstore____end____rn_n_r');\n\nvar apiInstance = new SwaggerPetstoreEndRnNR.FakeApi();\n\nvar opts = { \n  'testCodeInjectEndRnNR': \"testCodeInjectEndRnNR_example\" // String | To test code injection *_/ ' \\\" =end -- \\r\\n \\n \\r\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testCodeInjectEndRnNR(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, prepares a Client object as the request body, and makes an API call to test special tags. The method returns a Client object as the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Services in Pimple\nDESCRIPTION: Shows how to define services using anonymous functions that return object instances. The example defines session storage and session services.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// define some services\n$container['session_storage'] = function ($c) {\n    return new SessionStorage('SESSION_ID');\n};\n\n$container['session'] = function ($c) {\n    return new Session($c['session_storage']);\n};\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Class in Haskell\nDESCRIPTION: Defines the EnumArrays data type with constructor, accessors for just_symbol and array_enum fields using enumeration types, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_25\n\nLANGUAGE: haskell\nCODE:\n```\n-- | EnumArrays\ndata EnumArrays\nEnumArrays :: !(Maybe E'JustSymbol) -> !(Maybe [E'ArrayEnum]) -> EnumArrays\n\n-- | \"just_symbol\"\n[enumArraysJustSymbol] :: EnumArrays -> !(Maybe E'JustSymbol)\n\n-- | \"array_enum\"\n[enumArraysArrayEnum] :: EnumArrays -> !(Maybe [E'ArrayEnum])\n\n-- | FromJSON EnumArrays\n\n-- | ToJSON EnumArrays\n\n-- | Construct a value of type <a>EnumArrays</a> (by applying it's required\n--   fields, if any)\nmkEnumArrays :: EnumArrays\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Swagger API\nDESCRIPTION: This endpoint tests enum parameters in different locations (form, header, query) and of different types (string, string array, integer, double). All parameters are optional with some having default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_enum_parameters**\n> test_enum_parameters (enum_form_string_array:  detachable LIST [STRING_32] ; enum_form_string:  detachable STRING_32 ; enum_header_string_array:  detachable LIST [STRING_32] ; enum_header_string:  detachable STRING_32 ; enum_query_string_array:  detachable LIST [STRING_32] ; enum_query_string:  detachable STRING_32 ; enum_query_integer:  detachable INTEGER_32 ; enum_query_double:  detachable REAL_64 )\n\t\n\nTo test enum parameters\n\nTo test enum parameters\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **enum_form_string_array** | [**LIST [STRING_32]**](STRING_32.md)| Form parameter enum test (string array) | [optional] \n **enum_form_string** | **STRING_32**| Form parameter enum test (string) | [optional] [default to -efg]\n **enum_header_string_array** | [**LIST [STRING_32]**](STRING_32.md)| Header parameter enum test (string array) | [optional] \n **enum_header_string** | **STRING_32**| Header parameter enum test (string) | [optional] [default to -efg]\n **enum_query_string_array** | [**LIST [STRING_32]**](STRING_32.md)| Query parameter enum test (string array) | [optional] \n **enum_query_string** | **STRING_32**| Query parameter enum test (string) | [optional] [default to -efg]\n **enum_query_integer** | **INTEGER_32**| Query parameter enum test (double) | [optional] \n **enum_query_double** | **REAL_64**| Query parameter enum test (double) | [optional] \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: */*\n - **Accept**: */*\n```\n\n----------------------------------------\n\nTITLE: FastRoute Pattern Matching Examples\nDESCRIPTION: Demonstrates different route pattern formats including numeric ID constraints, named parameters with default and custom patterns, and how to properly format route patterns without capturing groups.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// Matches /user/42, but not /user/xyz\n$r->addRoute('GET', '/user/{id:\\d+}', 'handler');\n\n// Matches /user/foobar, but not /user/foo/bar\n$r->addRoute('GET', '/user/{name}', 'handler');\n\n// Matches /user/foo/bar as well\n$r->addRoute('GET', '/user/{name:.+}', 'handler');\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Dart Package via Github in pubspec.yaml\nDESCRIPTION: YAML configuration for including the Swagger API client package in a Dart/Flutter project from a Github repository. Specifies package name, version, description and git repository dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/README.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: swagger\nversion: 1.0.0\ndescription: Swagger API client\ndependencies:\n  swagger:\n    git: https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n      version: 'any'\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Dart\nDESCRIPTION: This example shows how to delete a purchase order by its ID using the StoreApi. It handles errors with a try-catch block and notes that valid responses require integer IDs with value < 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = orderId_example; // String | ID of the order that needs to be deleted\n\ntry { \n    api_instance.deleteOrder(orderId);\n} catch (e) {\n    print(\"Exception when calling StoreApi->deleteOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Specifies the properties of an Order object including id, petId, quantity, shipDate, status, and complete. Each property is described with its name, type, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java using Swagger Client\nDESCRIPTION: Example code showing how to test JSON serialization of form data using the FakeApi. Accepts two string parameters representing form fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java using Swagger Codegen\nDESCRIPTION: This snippet demonstrates how to call the testEnumParameters method of the FakeApi class. It includes various enum parameters passed as form data, headers, and query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Java using Swagger Client\nDESCRIPTION: Example of creating a single user using the UserApi client. Requires User object as input and handles ApiException for error cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumTest class, including their types and descriptions. It includes optional and required fields, as well as references to other objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | **String** |  | [optional] \n**enumStringRequired** | **String** |  | \n**enumInteger** | **Number** |  | [optional] \n**enumNumber** | **Number** |  | [optional] \n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Retrieving Order by ID in C# using Swagger Store API\nDESCRIPTION: Example code demonstrating how to fetch a purchase order using its ID. Valid for IDs <= 5 or > 10, with exception handling for other values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Using the fake_outer_composite_serialize endpoint in Perl\nDESCRIPTION: This example demonstrates how to call the fake_outer_composite_serialize endpoint to test serialization of object with outer number type. It creates an OuterComposite object and processes the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::OuterComposite->new(); # OuterComposite | Input composite as post body\n\neval { \n    my $result = $api_instance->fake_outer_composite_serialize(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->fake_outer_composite_serialize: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Creating FakeApi Instance and Setting Parameters in Python\nDESCRIPTION: This snippet shows how to create an instance of the FakeApi class and set various parameters for testing endpoint parameters. It includes different data types like float, int, string, date, and datetime.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.FakeApi(petstore_api.ApiClient(configuration))\nnumber = 8.14 # float | None\ndouble = 1.2 # float | None\npattern_without_delimiter = 'pattern_without_delimiter_example' # str | None\nbyte = 'B' # str | None\ninteger = 56 # int | None (optional)\nint32 = 56 # int | None (optional)\nint64 = 789 # int | None (optional)\n_float = 3.4 # float | None (optional)\nstring = 'string_example' # str | None (optional)\nbinary = 'B' # str | None (optional)\n_date = '2013-10-20' # date | None (optional)\ndate_time = '2013-10-20T19:20:30+01:00' # datetime | None (optional)\npassword = 'password_example' # str | None (optional)\nparam_callback = 'param_callback_example' # str | None (optional)\n```\n\n----------------------------------------\n\nTITLE: Using the test_client_model endpoint in Perl\nDESCRIPTION: This example demonstrates how to call the test_client_model endpoint to test the \"client\" model. It initializes a Client object and processes the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::Client->new(); # Client | client model\n\neval { \n    my $result = $api_instance->test_client_model(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_client_model: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties in Markdown Table\nDESCRIPTION: This snippet defines the properties of a User object using a markdown table. It includes the property names, types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Uploading a File in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to upload a file using Alamofire. It shows a simple POST request to upload a file from the main bundle.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_24\n\nLANGUAGE: swift\nCODE:\n```\nlet fileURL = NSBundle.mainBundle().URLForResource(\"Default\", withExtension: \"png\")\nAlamofire.upload(.POST, \"https://httpbin.org/post\", file: fileURL)\n```\n\n----------------------------------------\n\nTITLE: Defining String-based Enum Constants\nDESCRIPTION: Defines three enum constants with string values, using special formatting including underscores and parentheses. Values include '_abc', '-efg', and '(xyz)'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum EnumClass {\n  _ABC = \"_abc\",\n  _EFG = \"-efg\",\n  _XYZ_ = \"(xyz)\"\n}\n```\n\n----------------------------------------\n\nTITLE: AdditionalPropertiesClass Properties Schema in Markdown\nDESCRIPTION: Defines the schema for AdditionalPropertiesClass with two map-based properties. The class supports a simple string-to-string map and a more complex nested map structure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map&lt;String, String&gt;** |  |  [optional]\n**mapOfMapProperty** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Single User - Java Swagger Client\nDESCRIPTION: Example of creating a single user using the Swagger client. Takes a User object as input and requires user to be logged in.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with FakeApi\nDESCRIPTION: Example showing how to test serialization of outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Angular2 TypeScript Petstore API Module Without Providers\nDESCRIPTION: TypeScript code showing how to import the API module without configuring providers in an Angular application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '@swagger/angular2-typescript-petstore';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n    imports: [\n        ApiModule,\n        // make sure to import the HttpClientModule in the AppModule only,\n        // see https://github.com/angular/angular/issues/20575\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the Pet model, including their types, descriptions, and optional status. It covers fields like id, category, name, photoUrls, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: NumberOnly Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the NumberOnly model class, including name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_number** | **float** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information Using Form Data with Java Swagger Client\nDESCRIPTION: Example showing how to update a pet's information using form data. Demonstrates OAuth2 authentication setup, creating a PetApi instance, and handling API exceptions. Takes petId as required parameter, with optional name and status updates.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Importing ES6 Module in TypeScript/JavaScript\nDESCRIPTION: Examples of importing the generated module using ES6 module syntax. Shows both namespace import and specific operation import patterns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-aurelia/default/README.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport * as localName from 'npmName';\nimport {operationId} from 'npmName';\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Class in Haskell\nDESCRIPTION: Defines the Capitalization data type with constructor, accessors for various fields with different capitalization styles, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_21\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Capitalization\ndata Capitalization\nCapitalization :: !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> !(Maybe Text) -> Capitalization\n\n-- | \"smallCamel\"\n[capitalizationSmallCamel] :: Capitalization -> !(Maybe Text)\n\n-- | <a>CapitalCamel</a>\n[capitalizationCapitalCamel] :: Capitalization -> !(Maybe Text)\n\n-- | \"small_Snake\"\n[capitalizationSmallSnake] :: Capitalization -> !(Maybe Text)\n\n-- | <a>Capital_Snake</a>\n[capitalizationCapitalSnake] :: Capitalization -> !(Maybe Text)\n\n-- | <a>SCA_ETH_Flow_Points</a>\n[capitalizationScaEthFlowPoints] :: Capitalization -> !(Maybe Text)\n\n-- | <a>ATT_NAME</a> - Name of the pet\n[capitalizationAttName] :: Capitalization -> !(Maybe Text)\n\n-- | FromJSON Capitalization\n\n-- | ToJSON Capitalization\n\n-- | Construct a value of type <a>Capitalization</a> (by applying it's\n--   required fields, if any)\nmkCapitalization :: Capitalization\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: This example demonstrates how to create multiple users at once by providing a list of User objects to the createUsersWithListInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet shows how to delete a pet from the store using the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts a pet ID as input. An optional API key can be provided.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | Pet id to delete\n\nvar opts = { \n  'apiKey': \"apiKey_example\" // String | \n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.deletePet(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Including the Swagger Petstore SDK Namespaces in C#\nDESCRIPTION: Shows how to include the necessary namespaces from the generated SDK in a C# project. These namespaces provide access to the API clients, models, and other components.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/README.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Name model using a markdown table. It includes the property names, their types, and optional notes. The properties cover various naming conventions including snake_case and properties starting with underscores or numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **int** |  | \n**snake_case** | **int** |  | [optional] \n**_property** | **str** |  | [optional] \n**_123_number** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Using the fake_outer_boolean_serialize endpoint in Perl\nDESCRIPTION: This example shows how to call the fake_outer_boolean_serialize endpoint that tests serialization of outer boolean types. It initializes the API client, creates an OuterBoolean object, and handles the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::OuterBoolean->new(); # OuterBoolean | Input boolean as post body\n\neval { \n    my $result = $api_instance->fake_outer_boolean_serialize(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->fake_outer_boolean_serialize: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID using Swagger Petstore API in JavaScript\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order using its ID. It uses the SwaggerPetstore.StoreApi instance to call the getOrderById method. The orderId parameter is required and should be a number. The method returns an Order object which is logged to the console on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar orderId = 789; // Number | ID of pet that needs to be fetched\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getOrderById(orderId, callback);\n```\n\n----------------------------------------\n\nTITLE: Making API Call to Test Class Name in Snake Case using Java\nDESCRIPTION: This code snippet demonstrates how to use the FakeclassnametagsApi to test a class name in snake case. It creates an instance of the API, prepares a Client object as the request body, and makes a PATCH request to the 'fake_classname_test' endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeclassnametagsApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeclassnametagsApi;\n\n\nFakeclassnametagsApi apiInstance = new FakeclassnametagsApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeclassnametagsApi#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining 200Response Model Properties in Markdown Table\nDESCRIPTION: A markdown table that defines the properties of the 200Response model in Swagger. It specifies the property names, data types, descriptions, and whether they are optional fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Properties Table in Markdown\nDESCRIPTION: Creates a table structure to define the properties of the OuterBoolean model. The table includes columns for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Table Definition\nDESCRIPTION: Markdown table defining the properties of the Pet model including data types, descriptions and whether fields are optional. Core properties include an ID, category reference, name, photo URLs, tags collection and status enum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n|**id** | **int** |  | [optional] |\n|**category** | [**Category**](Category.md) |  | [optional] |\n|**name** | **str** |  | |\n|**photo_urls** | **list[str]** |  | |\n|**tags** | [**list[Tag]**](Tag.md) |  | [optional] |\n|**status** | **str** | pet status in the store | [optional] |\n```\n\n----------------------------------------\n\nTITLE: User Logout Operation in Swagger PHP Client\nDESCRIPTION: This example demonstrates how to log out the currently logged-in user by terminating their session. This method doesn't require any parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n\ntry {\n    $apiInstance->logoutUser();\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->logoutUser: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in C# using Swagger API\nDESCRIPTION: This code shows how to fetch pet inventories grouped by status. It initializes the StoreApi client with API key authentication and calls the GetInventory method. The example demonstrates how to handle the Dictionary<string, int?> response that maps status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary&lt;string, int?&gt; result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Dart\nDESCRIPTION: Example of how to create multiple users at once by providing a list of User objects using the createUsersWithListInput method of UserApi.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithListInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithListInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using run-in-docker.sh for Swagger Codegen CLI Commands\nDESCRIPTION: These commands demonstrate how to use the run-in-docker.sh script as an executable for swagger-codegen-cli. It shows examples of running help, listing languages, building a Go client, and generating a Go client with specific parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/docker.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./run-in-docker.sh help # Executes 'help' command for swagger-codegen-cli\n./run-in-docker.sh langs # Executes 'langs' command for swagger-codegen-cli\n./run-in-docker.sh /gen/bin/go-petstore.sh  # Builds the Go client\n./run-in-docker.sh generate -i modules/swagger-codegen/src/test/resources/2_0/petstore.yaml \\\n    -l go -o /gen/out/go-petstore -DpackageName=petstore # generates go client, outputs locally to ./out/go-petstore\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID using Swagger Store API in Dart\nDESCRIPTION: This example demonstrates how to retrieve a purchase order by its ID. It specifies that valid IDs are integers less than or equal to 5 or greater than 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = 789; // int | ID of pet that needs to be fetched\n\ntry { \n    var result = api_instance.getOrderById(orderId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getOrderById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet by ID\nDESCRIPTION: Example of how to delete a pet by its ID using the deletePet() method. Requires petId parameter and optional apiKey parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | Pet id to delete\nvar apiKey = apiKey_example; // String | \n\ntry { \n    api_instance.deletePet(petId, apiKey);\n} catch (e) {\n    print(\"Exception when calling PetApi->deletePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Documents the properties of the OuterComposite model class including their types, descriptions and optional status. Contains three properties: myNumber (BigDecimal), myString (String), and myBoolean (Boolean), all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the Pet model, including their types, descriptions, and optional status. It includes fields for id, category, name, photo URLs, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Id** | **long?** |  | [optional] |\n| **Category** | [**Category**](Category.md) |  | [optional] |\n| **Name** | **string** |  | |\n| **PhotoUrls** | **List<string>** |  | |\n| **Tags** | [**List<Tag>**](Tag.md) |  | [optional] |\n| **Status** | **string** | pet status in the store | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID using Python in Petstore API\nDESCRIPTION: This snippet demonstrates how to find a purchase order by its ID using the StoreApi. It's designed for IDs less than or equal to 5 or greater than 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi()\norder_id = 789 # int | ID of pet that needs to be fetched\n\ntry:\n    # Find purchase order by ID\n    api_response = api_instance.get_order_by_id(order_id)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->get_order_by_id: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Calling testEnumParameters method in FakeApi (Java)\nDESCRIPTION: This snippet demonstrates how to call the testEnumParameters method of the FakeApi class. It shows the setup of various enum parameters and handling of potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Authentication Methods in Haskell\nDESCRIPTION: Defines the AuthMethod typeclass and related functions for applying authentication methods to API requests.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_7\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Provides a method to apply auth methods to requests\nclass Typeable a => AuthMethod a\napplyAuthMethod :: AuthMethod a => SwaggerPetstoreConfig -> a -> SwaggerPetstoreRequest req contentType res accept -> IO (SwaggerPetstoreRequest req contentType res accept)\n\n-- | An existential wrapper for any AuthMethod\ndata AnyAuthMethod\nAnyAuthMethod :: a -> AnyAuthMethod\n\n-- | indicates exceptions related to AuthMethods\ndata AuthMethodException\nAuthMethodException :: String -> AuthMethodException\n\n-- | apply all matching AuthMethods in config to request\n_applyAuthMethods :: SwaggerPetstoreRequest req contentType res accept -> SwaggerPetstoreConfig -> IO (SwaggerPetstoreRequest req contentType res accept)\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enum in Markdown\nDESCRIPTION: This snippet defines an enumeration for the Pet status using a Markdown table. It lists the possible values for the status property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Calling testInlineAdditionalProperties method in FakeApi (Java)\nDESCRIPTION: This snippet shows how to call the testInlineAdditionalProperties method of the FakeApi class. It demonstrates passing an Object parameter and handling potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: API Key Authentication Example\nDESCRIPTION: Example showing how to authenticate API requests using an API key with optional bearer prefix.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/go/README.md#2025-04-20_snippet_1\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextAPIKey, sw.APIKey{\n\tKey: \"APIKEY\",\n\tPrefix: \"Bearer\", // Omit if not necessary.\n})\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using the Swagger Client API in Java\nDESCRIPTION: Example of how to use the deletePet method of the PetApi class to delete a pet from the store. This code demonstrates OAuth2 authentication setup and handling API exceptions when deleting a pet by its ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Executing PUT Request with Body and Query Parameters in Java using DefaultApi\nDESCRIPTION: This code snippet demonstrates how to use the DefaultApi to make a PUT request to the '/fake/body-with-query-params' endpoint. It shows the process of creating an instance of DefaultApi, setting up the required parameters (body and query), and handling potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/DefaultApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.DefaultApi;\n\n\nDefaultApi apiInstance = new DefaultApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling DefaultApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Gradle Wrapper Script for Swagger Petstore Kotlin Client\nDESCRIPTION: Command to create the Gradle wrapper script, which is a prerequisite for building the Swagger Petstore Kotlin client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngradle wrapper\n```\n\n----------------------------------------\n\nTITLE: Calling testClassname Endpoint in JavaScript\nDESCRIPTION: This snippet demonstrates how to call the testClassname endpoint using the SwaggerPetstore API client. It configures API key authentication and makes a PATCH request to test class name in snake case.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key_query\nvar api_key_query = defaultClient.authentications['api_key_query'];\napi_key_query.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.FakeClassnameTags123Api();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\napiInstance.testClassname(body).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Using TestSpecialTags Endpoint in C# with Swagger Client\nDESCRIPTION: This example demonstrates how to call the TestSpecialTags endpoint of the AnotherFakeApi. It initializes the API client, prepares the ModelClient body parameter, makes the API call, and handles any exceptions that might occur during the process.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestSpecialTagsExample\n    {\n        public void main()\n        {\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Angular Module Configuration\nDESCRIPTION: TypeScript code for importing and configuring the API module in an Angular application without custom providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n    imports: [\n        ApiModule,\n        // make sure to import the HttpClientModule in the AppModule only,\n        // see https://github.com/angular/angular/issues/20575\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Java using Swagger Client\nDESCRIPTION: Example of logging out the current user session. No parameters required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Custom Codegen Library on Unix/Linux\nDESCRIPTION: This command demonstrates how to run Swagger Codegen with a custom code generator library on Unix/Linux systems. It uses the Java classpath to include both the custom library and the Swagger Codegen CLI.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\njava -cp output/myLibrary/target/myClientCodegen-swagger-codegen-1.0.0.jar:modules/swagger-codegen-cli/target/swagger-codegen-cli.jar io.swagger.codegen.SwaggerCodegen\n```\n\n----------------------------------------\n\nTITLE: Invoking fake_outer_number_serialize in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the fake_outer_number_serialize endpoint to test serialization of outer number types. This example creates an API instance, makes the call with an optional number body parameter, and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterNumber() # OuterNumber | Input number as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_number_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_number_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the FormatTest class. Each row specifies a property name, its data type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **integer** | **Integer** |  |  [optional] |\n| **int32** | **Integer** |  |  [optional] |\n| **int64** | **Long** |  |  [optional] |\n| **number** | [**BigDecimal**](BigDecimal.md) |  | |\n| **_float** | **Float** |  |  [optional] |\n| **_double** | **Double** |  |  [optional] |\n| **string** | **String** |  |  [optional] |\n| **_byte** | **byte[]** |  | |\n| **binary** | **byte[]** |  |  [optional] |\n| **date** | [**LocalDate**](LocalDate.md) |  | |\n| **dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional] |\n| **uuid** | [**UUID**](UUID.md) |  |  [optional] |\n| **password** | **String** |  | |\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values\nDESCRIPTION: Enumeration defining the possible string values for the enumString property: UPPER, lower, and empty string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Documenting Array of Array Number Model Structure\nDESCRIPTION: Markdown table defining the properties of ArrayOfArrayOfNumberOnly model. Contains a single optional property 'arrayArrayNumber' that represents a nested array of BigDecimal numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating a User with UserApi in Dart\nDESCRIPTION: Example of how to create a user using the UserApi. This operation can only be performed by a logged-in user and requires a User object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = new User(); // User | Created user object\n\ntry { \n    api_instance.createUser(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet shows how to find pets by tags using the PetApi. It requires OAuth2 authentication and accepts an array of tag values as a parameter. The method returns an array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\nlet defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nlet petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nlet apiInstance = new SwaggerPetstore.PetApi();\n\nlet tags = [\"tags_example\"]; // [String] | Tags to filter by\n\napiInstance.findPetsByTags(tags).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Codegen with Maven Wrapper\nDESCRIPTION: Command to build Swagger Codegen from source using the included Maven Wrapper. This is useful if Maven is not installed on the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/building.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./mvnw clean package\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Petstore App with Environment Variables\nDESCRIPTION: Example command showing how to run the application while specifying custom HOST and http_proxy environment variables for server configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/example-app/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nHOST=http://0.0.0.0/v2  http_proxy=http://0.0.0.0:8080 stack --install-ghc exec swagger-petstore-app\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order using Swagger Petstore Store API in JavaScript\nDESCRIPTION: Demonstrates how to delete a purchase order by ID using the Swagger Petstore API. Only accepts integer IDs less than 1000, with higher values or non-integers generating API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\nlet orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\n\n\napiInstance.deleteOrder(orderId, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in C# using Swagger-generated Client\nDESCRIPTION: Demonstrates how to delete a purchase order by its ID using the StoreApi. This example includes error handling and notes that valid responses are expected with integer IDs under 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags (Go)\nDESCRIPTION: This function retrieves pets based on their tags. It accepts multiple tags as a slice of strings and returns a slice of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\nfunc FindPetsByTags(ctx context.Context, tags []string) ([]Pet, error)\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a user by their username using the Swagger client in Java. It initializes a UserApi instance, specifies a username, calls the getUserByName method, and prints the result. Error handling for API exceptions is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using Namespaces in C# for Swagger Petstore SDK\nDESCRIPTION: Demonstrates how to include the necessary namespaces for using the Swagger Petstore SDK in a C# project. These namespaces provide access to the API, client, and model classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/README.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Java\nDESCRIPTION: This example demonstrates how to log out the currently authenticated user by calling the logoutUser method, which invalidates the current session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.UserApi;\n\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data with Java Swagger Client\nDESCRIPTION: Example code showing how to test JSON serialization of form data by sending two string parameters to the API endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of how to call the testEnumParameters endpoint of FakeApi class from Swagger Petstore. This endpoint accepts various enum parameters through form, header, and query parameters, including string arrays, strings, integers, and doubles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'enumFormStringArray': [\"enumFormStringArray_example\"], // [String] | Form parameter enum test (string array)\n  'enumFormString': \"-efg\", // String | Form parameter enum test (string)\n  'enumHeaderStringArray': [\"enumHeaderStringArray_example\"], // [String] | Header parameter enum test (string array)\n  'enumHeaderString': \"-efg\", // String | Header parameter enum test (string)\n  'enumQueryStringArray': [\"enumQueryStringArray_example\"], // [String] | Query parameter enum test (string array)\n  'enumQueryString': \"-efg\", // String | Query parameter enum test (string)\n  'enumQueryInteger': 56, // Number | Query parameter enum test (double)\n  'enumQueryDouble': 1.2 // Number | Query parameter enum test (double)\n};\napiInstance.testEnumParameters(opts).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Using DefaultApi in Angular Component\nDESCRIPTION: TypeScript code demonstrating how to inject and use the DefaultApi from @swagger/angular2-typescript-petstore in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '@swagger/angular2-typescript-petstore';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in Java using Swagger Client\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by ID using the StoreApi. It requires the order ID as a parameter and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Category Model in Dart\nDESCRIPTION: Shows how to import the Category model class from the swagger package in a Dart application. This import statement makes the Category model available for use in the code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger\nDESCRIPTION: Markdown table documenting the properties of the Category model in Swagger Petstore API. The model contains an optional numeric id field and an optional string name field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Number** |  | [optional] |\n| **name** | **String** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Swagger API\nDESCRIPTION: This endpoint tests inline additionalProperties. It requires a request body parameter of ANY type, which allows for testing how the API handles dynamic properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_inline_additional_properties**\n> test_inline_additional_properties (param: ANY )\n\t\n\ntest inline additionalProperties\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **param** | [**ANY**](ANY.md)| request body | \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\nNo authorization required\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean Types in PHP Swagger Client\nDESCRIPTION: Example of testing boolean type serialization using the FakeApi endpoint. Demonstrates how to make a POST request to /fake/outer/boolean with an OuterBoolean model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\OuterBoolean();\n\ntry {\n    $result = $apiInstance->fakeOuterBooleanSerialize($body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->fakeOuterBooleanSerialize: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Token Refresh Example in Rust\nDESCRIPTION: Example showing how to use the OAuth2 module for automatic token refresh and user authentication with the client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/README.md#2025-04-20_snippet_3\n\nLANGUAGE: rust\nCODE:\n```\n\timport \t\"golang.org/x/oauth2\"\n\n    / .. Perform OAuth2 round trip request and obtain a token .. //\n\n    tokenSource := oauth2cfg.TokenSource(createContext(httpClient), &token)\n\tauth := context.WithValue(oauth2.NoContext, sw.ContextOAuth2, tokenSource)\n    r, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Running the Swagger Jersey server using Maven\nDESCRIPTION: Command to clean, package and run the Swagger Jersey server using Maven and Jetty. This starts the local server instance for development and testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey2-useTags/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username\nDESCRIPTION: Example showing how to fetch user details by providing a username. Returns a User object containing the user's information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Executing PATCH Request for test_special_tags Endpoint in ANOTHERFAKE_API\nDESCRIPTION: This code snippet demonstrates how to make a PATCH request to the '/another-fake/dummy' endpoint to test special tags. It requires a CLIENT object as the request body and returns a CLIENT object. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ANOTHERFAKE_API.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_special_tags**\n> test_special_tags (body: CLIENT ): detachable CLIENT\n\t\n\nTo test special tags\n\nTo test special tags\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**CLIENT**](CLIENT.md)| client model | \n\n### Return type\n\n[**CLIENT**](Client.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Testing Body With Query Parameters in Bash\nDESCRIPTION: Command example for an endpoint that requires both a request body and query parameters. This PUT request takes a User object as the body and a query string parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testBodyWithQueryParams  query=value\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Swagger Codegen\nDESCRIPTION: This snippet lists the required Python packages and their minimum versions for the Swagger Codegen project. It includes coverage for code coverage analysis, nose for testing, pluggy for plugin management, py for Python path and version management, and randomize for test randomization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/test-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\ncoverage>=4.0.3\nnose>=1.3.7\npluggy>=0.3.1\npy>=1.4.31\nrandomize>=0.13\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in Java using Swagger Client\nDESCRIPTION: This snippet shows how to get the pet inventory by status using the StoreApi. It requires API key authentication and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.StoreApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Order Status Enum Values in Markdown\nDESCRIPTION: Markdown table defining the enumeration values for the Order's status field, listing the available status options for an order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of the Name model. Includes required and optional properties with their respective data types and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | \n**snakeCase** | **Number** |  | [optional] \n**property** | **String** |  | [optional] \n**_123Number** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java using Swagger Client\nDESCRIPTION: Example code showing how to test various enum parameters including form, header, and query parameters with string, integer and double types. Demonstrates parameter passing with array and single value enum types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with FakeApi in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer boolean types. It shows how to create a FakeApi instance, make a call to fakeOuterBooleanSerialize with a boolean value, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: Demonstrates how to import the required API package for using the UserApi functionality in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Getting Orders by ID in Go\nDESCRIPTION: Retrieves a purchase order by its ID. Valid responses require integer IDs with values <= 5 or > 10. Other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# **GetOrderById**\n> Order GetOrderById(ctx, orderId)\nFind purchase order by ID\n\nFor valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **orderId** | **int64**| ID of pet that needs to be fetched | \n\n### Return type\n\n[**Order**](Order.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: EnumTest Class Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the EnumTest class including their types, descriptions, and whether they are optional. The properties include string enums, integer enums, number enums, and a reference to an OuterEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | **String** |  | [optional] \n**enumStringRequired** | **String** |  | \n**enumInteger** | **Number** |  | [optional] \n**enumNumber** | **Number** |  | [optional] \n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Provider in Pimple\nDESCRIPTION: Demonstrates how to create a service provider by implementing the Pimple\\ServiceProviderInterface. This allows for packaging and reusing services across projects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nuse Pimple\\Container;\n\nclass FooProvider implements Pimple\\ServiceProviderInterface\n{\n    public function register(Container $pimple)\n    {\n        // register some services and parameters\n        // on $pimple\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Java\nDESCRIPTION: Deletes a user from the system by username. This operation can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP Methods Enum in Swift for Alamofire\nDESCRIPTION: This snippet defines an enum for HTTP methods as specified in RFC 7231 §4.3. It's used to specify the HTTP method in Alamofire requests.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_16\n\nLANGUAGE: swift\nCODE:\n```\npublic enum Method: String {\n    case OPTIONS, GET, HEAD, POST, PUT, PATCH, DELETE, TRACE, CONNECT\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name in Snake Case with SwaggerPetstore API in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the testClassname method of the Fake_classname_tags123Api class. It sets up the API client, configures API key authorization, and makes a PATCH request to '/fake_classname_test' endpoint with a Client model as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Fake_classname_tags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key_query\nvar api_key_query = defaultClient.authentications['api_key_query'];\napi_key_query.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.Fake_classname_tags123Api();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testClassname(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Getting Pet by ID using Java API Client\nDESCRIPTION: Example code showing how to retrieve a pet by its ID using the Swagger API client. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout in Swagger Petstore API\nDESCRIPTION: Logs out the currently authenticated user. Takes no input parameters and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.logoutUser(callback);\n```\n\n----------------------------------------\n\nTITLE: Cat Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Cat model including property names, data types, descriptions and validation notes. Includes three properties: ClassName (required string), Color (optional string), and Declawed (optional boolean).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ClassName** | **string** |  | [default to null] |\n| **Color** | **string** |  | [optional] [default to null] |\n| **Declawed** | **bool** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer boolean types using the Fake API. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: Lists the properties of the Pet model, including their types, descriptions, and optional status. This table defines the structure of a Pet object in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enum in Swagger\nDESCRIPTION: Defines an enumeration called OuterEnum with three possible values for tracking order status: PLACED, APPROVED, and DELIVERED. Each enum value has a corresponding string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for OuterEnum Model Properties\nDESCRIPTION: Defines a table structure for documenting the properties of the OuterEnum model, including columns for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID using Swagger Petstore API in JavaScript\nDESCRIPTION: This snippet demonstrates how to delete a purchase order using its ID. It uses the SwaggerPetstore.StoreApi instance to call the deleteOrder method. The orderId parameter is required and should be a string. The method doesn't return any data but logs the success or error of the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.deleteOrder(orderId, callback);\n```\n\n----------------------------------------\n\nTITLE: Calling FakeClassnameTags123Api Endpoint in Java\nDESCRIPTION: Example code demonstrating how to use the FakeClassnameTags123Api client to make a PATCH request to the /fake_classname_test endpoint. The example includes API key authentication setup and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Documents the properties of the OuterComposite class including their types and optionality. Contains three optional properties: myNumber (BigDecimal), myString (String), and myBoolean (Boolean).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using C# Swagger Petstore SDK Namespaces\nDESCRIPTION: This snippet demonstrates how to include the necessary namespaces for using the C# Swagger Petstore SDK in a C# project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Table for ModelReturn Properties\nDESCRIPTION: A markdown table that documents the properties of the ModelReturn class. It defines a single integer property named '_return' which is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Pet API Type Class Instances in Haskell\nDESCRIPTION: Type class instances defining the request/response types and MIME handling for Pet-related API endpoints including updating, adding, deleting and finding pets.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_48\n\nLANGUAGE: haskell\nCODE:\n```\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Pet.UpdatePetWithForm SwaggerPetstore.Model.StatusText\ninstance SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.Pet.UpdatePetWithForm SwaggerPetstore.MimeTypes.MimeFormUrlEncoded\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Pet.UpdatePetWithForm SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Pet.UpdatePetWithForm SwaggerPetstore.MimeTypes.MimeJSON\n```\n\n----------------------------------------\n\nTITLE: Defining Array Properties in Ruby Model\nDESCRIPTION: Specification of array properties in a Ruby model class for the Petstore API. Includes arrays of strings, nested arrays of integers, and nested arrays of ReadOnlyFirst model objects. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\narray_of_string: Array<String>\narray_array_of_integer: Array<Array<Integer>>\narray_array_of_model: Array<Array<ReadOnlyFirst>>\n```\n\n----------------------------------------\n\nTITLE: Deleting an Order in Java using StoreApi\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by ID using the StoreApi. It imports necessary classes, creates an instance of StoreApi, and calls the deleteOrder method with an order ID. The method throws an ApiException which is caught and printed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Authorization for Pet Update API in Kotlin\nDESCRIPTION: Specifies the authorization method for the pet update API endpoint. It uses the 'petstore_auth' authorization scheme, which is likely defined in the project's README file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Server with Maven\nDESCRIPTION: Command to clean, package and run the Swagger-generated server using Maven and Jetty.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/default/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer String in Java\nDESCRIPTION: This code example demonstrates how to use the fakeOuterStringSerialize method of the FakeApi class to test serialization of outer string types. It shows the process of creating an instance of FakeApi, calling the method with a string input, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name with Swagger Client\nDESCRIPTION: Example implementation of making a PATCH request to test class name functionality. Uses the Swagger client to create an instance of Fake_classname_tags123Api and make a request with a Client model object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Fake_classname_tags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.Fake_classname_tags123Api;\n\n\nFake_classname_tags123Api apiInstance = new Fake_classname_tags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling Fake_classname_tags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Get Order By ID Implementation in Objective-C\nDESCRIPTION: Retrieves a purchase order by ID. Valid responses for IDs <= 5 or > 10, other values generate exceptions. Returns SWGOrder object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGStoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) getOrderByIdWithOrderId: (NSString*) orderId\n        completionHandler: (void (^)(SWGOrder* output, NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSString* orderId = @\"orderId_example\"; // ID of pet that needs to be fetched\n\nSWGStoreApi*apiInstance = [[SWGStoreApi alloc] init];\n\n// Find purchase order by ID\n[apiInstance getOrderByIdWithOrderId:orderId\n          completionHandler: ^(SWGOrder* output, NSError* error) {\n                        if (output) {\n                            NSLog(@\"%@\", output);\n                        }\n                        if (error) {\n                            NSLog(@\"Error calling SWGStoreApi->getOrderById: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Order Properties Schema Definition in Kotlin\nDESCRIPTION: Defines the properties of an Order model including IDs, quantity, shipping details, status and completion flag. Uses Kotlin data types with optional nullability.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**petId** | **kotlin.Long** |  |  [optional]\n**quantity** | **kotlin.Int** |  |  [optional]\n**shipDate** | [**org.threeten.bp.LocalDateTime**](org.threeten.bp.LocalDateTime.md) |  |  [optional]\n**status** | [**inline**](#StatusEnum) | Order Status |  [optional]\n**complete** | **kotlin.Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest model, including nested maps and enum mappings. It specifies optional fields for map of maps and map of enum strings.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the EnumArrays class, including justSymbol and arrayEnum fields with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enum Definition in Markdown\nDESCRIPTION: Defines the possible status values for a pet in the store: available, pending, and sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | \"available\"\nPENDING | \"pending\"\nSOLD | \"sold\"\n```\n\n----------------------------------------\n\nTITLE: Deleting Purchase Order in Java using Swagger API\nDESCRIPTION: Example code for deleting a purchase order by ID. Works with integer IDs less than 1000. Uses the StoreApi client class to make the DELETE request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating a user's information\nDESCRIPTION: Example showing how to update a user's information by providing their username and an updated User object. This operation can only be performed by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | name that need to be deleted\nbody = petstore_api.User() # User | Updated user object\n\ntry:\n    # Updated user\n    api_instance.update_user(username, body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->update_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store in Markdown\nDESCRIPTION: This snippet describes the API endpoint for adding a new pet to the store. It specifies the HTTP method, request body, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **add_pet**\n> add_pet (body: PET )\n\t\n\nAdd a new pet to the store\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**PET**](PET.md)| Pet object that needs to be added to the store | \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: application/json, application/xml\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This code snippet defines the properties of a User model using a Markdown table format. It specifies the name, data type, description, and optional status for each property of the User model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This markdown table defines the properties of a User model, including data types and optional fields. It's used to generate API documentation or code with Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**username** | **str** |  | [optional] \n**first_name** | **str** |  | [optional] \n**last_name** | **str** |  | [optional] \n**email** | **str** |  | [optional] \n**password** | **str** |  | [optional] \n**phone** | **str** |  | [optional] \n**user_status** | **int** | User Status | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in JavaScript\nDESCRIPTION: Example showing how to test serialization of outer boolean types using the SwaggerPetstore API. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet opts = { \n  'body': new SwaggerPetstore.OuterBoolean() // OuterBoolean | Input boolean as post body\n};\napiInstance.fakeOuterBooleanSerialize(opts).then((data) => {\n  console.log('API called successfully. Returned data: ' + data);\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in FakeApi - Java\nDESCRIPTION: Example showing how to test various enum parameters using the FakeApi class. Demonstrates handling of form, header and query parameters with string, integer and double enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown for Swagger/OpenAPI\nDESCRIPTION: This snippet defines the properties of an Order object using a markdown table format. It specifies the name, type, description, and optional status of each property. The properties include identifiers, quantities, dates, status, and completion flag.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Model/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**petId** | **int** |  | [optional] \n**quantity** | **int** |  | [optional] \n**shipDate** | [**\\DateTime**](\\DateTime.md) |  | [optional] \n**status** | **string** | Order Status | [optional] \n**complete** | **bool** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Swagger Markdown Format\nDESCRIPTION: A markdown table defining the User model properties with their respective data types, descriptions, and optional status. This table is used by Swagger Codegen to generate client code for the User entity.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Client with Maven Local\nDESCRIPTION: Command to install the API client library to local Maven repository\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/spring-cloud/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Testing Class Names with Swagger Petstore API in JavaScript\nDESCRIPTION: Example demonstrating how to make a PATCH request to test class names in snake case. The code shows API key authentication setup and making a request with a client model body parameter. Returns a Client object response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key_query\nvar api_key_query = defaultClient.authentications['api_key_query'];\napi_key_query.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.FakeClassnameTags123Api();\n\nvar body = new SwaggerPetstore.Client(); // Client | client model\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.testClassname(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Properties in Markdown Table\nDESCRIPTION: This markdown table defines the properties of the FormatTest class or object. It includes property names, their corresponding data types, and whether they are optional. The table covers various data types including primitive types, BigDecimal, byte arrays, date/time types, and UUID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **integer** | **Integer** |  |  [optional] |\n| **int32** | **Integer** |  |  [optional] |\n| **int64** | **Long** |  |  [optional] |\n| **number** | [**BigDecimal**](BigDecimal.md) |  | |\n| **_float** | **Float** |  |  [optional] |\n| **_double** | **Double** |  |  [optional] |\n| **string** | **String** |  |  [optional] |\n| **_byte** | **byte[]** |  | |\n| **binary** | **byte[]** |  |  [optional] |\n| **date** | [**LocalDate**](LocalDate.md) |  | |\n| **dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional] |\n| **uuid** | [**UUID**](UUID.md) |  |  [optional] |\n| **password** | **String** |  | |\n```\n\n----------------------------------------\n\nTITLE: Installing Published Angular Client Package\nDESCRIPTION: Command for installing the published package from npm registry as a dependency in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ --save\n```\n\n----------------------------------------\n\nTITLE: User Logout\nDESCRIPTION: Logs out currently authenticated user session. Requires no parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Customized Python Client with Curl\nDESCRIPTION: This curl command sends a POST request to generate a Python client with a custom package name using the Swagger Petstore API specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/online-generators.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ncurl -H \"Content-type: application/json\" -X POST -d '{\"options\": {\"packageName\": \"pet_store\"},\"swaggerUrl\": \"https://petstore.swagger.io/v2/swagger.json\"}' https://generator.swagger.io/api/gen/clients/python\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger API\nDESCRIPTION: Example code for creating multiple users using an array input. Accepts an array of User objects and handles both client and server exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUsersWithArrayInput\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUsersWithArrayInput\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization in C# Using FakeApi\nDESCRIPTION: Example showing how to test serialization of outer string types using the FakeApi. It creates an instance of FakeApi, calls the FakeOuterStringSerialize method with an optional string body parameter, and handles possible exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterStringSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new string(); // string | Input string as post body (optional) \n\n            try\n            {\n                string result = apiInstance.FakeOuterStringSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterStringSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for ClassModel Properties\nDESCRIPTION: Markdown table defining the properties of the ClassModel class, showing the name, type, description and optional status of fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Class** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values in Markdown\nDESCRIPTION: Defines the possible values for the InnerEnum enumeration used in the mapOfEnumString property. It specifies two values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Properties in Markdown\nDESCRIPTION: Schema table defining properties for the ArrayOfNumberOnly class. Contains a single optional property 'arrayNumber' that accepts a list of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **arrayNumber** | [**List<BigDecimal>**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Bash\nDESCRIPTION: Command example for testing enum parameters. This endpoint accepts multiple enum values as query, header, and form parameters with various default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testEnumParameters enum_header_string_array:value enum_header_string:value  Specify as:   enum_query_string=value  enum_query_integer=value\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path via Bootstrap\nDESCRIPTION: Configuration to set a custom base path for the API during application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumTest model using a markdown table. It includes the property names, their data types, and whether they are optional or required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **EnumString** | **string** |  | [optional] |\n| **EnumStringRequired** | **string** |  | |\n| **EnumInteger** | **int?** |  | [optional] |\n| **EnumNumber** | **double?** |  | [optional] |\n| **OuterEnum** | **OuterEnum** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet demonstrates how to delete a user from the Swagger Petstore. It shows the usage of the deleteUser method, which requires a username parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing from Git Repository\nDESCRIPTION: Command to install the SDK directly from a Git repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Kotlin\nDESCRIPTION: Creates multiple users using an array input. This example demonstrates how to create several users at once by passing an array of User objects to the UserApi's createUsersWithArrayInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = UserApi()\nval body : kotlin.Array<User> =  // kotlin.Array<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#createUsersWithArrayInput\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#createUsersWithArrayInput\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Table\nDESCRIPTION: Table defining the main properties of the EnumArrays model including their types and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| --- | --- | --- | --- |\n| **justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional] |\n| **arrayEnum** | [**List<ArrayEnumEnum>**](#List<ArrayEnumEnum>) |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Using the test_classname Method in FakeClassnameTags123Api\nDESCRIPTION: Example of how to call the test_classname method with API key authentication. This demonstrates creating a client instance, setting up authentication, creating a request model, and handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeClassnameTags123Api;\nmy $api_instance = WWW::SwaggerClient::FakeClassnameTags123Api->new(\n\n    # Configure API key authorization: api_key_query\n    api_key => {'api_key_query' => 'YOUR_API_KEY'},\n    # uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n    #api_key_prefix => {'api_key_query' => 'Bearer'},\n);\n\nmy $body = WWW::SwaggerClient::Object::Client->new(); # Client | client model\n\neval { \n    my $result = $api_instance->test_classname(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling FakeClassnameTags123Api->test_classname: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Performing Test Deployment\nDESCRIPTION: Ant command to perform a test deployment without committing changes to the Salesforce org.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ ant deployCheckOnly\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Number Types in Swagger API\nDESCRIPTION: This endpoint tests serialization of outer number types. It accepts an optional OUTER_NUMBER object in the request body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# **fake_outer_number_serialize**\n> fake_outer_number_serialize (body:  detachable OUTER_NUMBER ): detachable OUTER_NUMBER\n\t\n\n\n\nTest serialization of outer number types\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**OUTER_NUMBER**](OUTER_NUMBER.md)| Input number as post body | [optional] \n\n### Return type\n\n[**OUTER_NUMBER**](OuterNumber.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the AnotherFakeApi to test special tags. It imports necessary classes, creates an API instance, and executes the testSpecialTags method with a request body. The response is then printed for inspection.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nAnotherFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).anotherFake();\n\napi.testSpecialTags()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration\nDESCRIPTION: Configuration to disable AMD loader in Webpack to resolve module errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/README.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MixedPropertiesAndAdditionalPropertiesClass in Haskell\nDESCRIPTION: Defines the MixedPropertiesAndAdditionalPropertiesClass data type with constructor, accessors for uuid, dateTime, and map fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_30\n\nLANGUAGE: haskell\nCODE:\n```\n-- | MixedPropertiesAndAdditionalPropertiesClass\ndata MixedPropertiesAndAdditionalPropertiesClass\nMixedPropertiesAndAdditionalPropertiesClass :: !(Maybe Text) -> !(Maybe DateTime) -> !(Maybe (Map String Animal)) -> MixedPropertiesAndAdditionalPropertiesClass\n\n-- | \"uuid\"\n[mixedPropertiesAndAdditionalPropertiesClassUuid] :: MixedPropertiesAndAdditionalPropertiesClass -> !(Maybe Text)\n\n-- | \"dateTime\"\n[mixedPropertiesAndAdditionalPropertiesClassDateTime] :: MixedPropertiesAndAdditionalPropertiesClass -> !(Maybe DateTime)\n\n-- | \"map\"\n[mixedPropertiesAndAdditionalPropertiesClassMap] :: MixedPropertiesAndAdditionalPropertiesClass -> !(Maybe (Map String Animal))\n\n-- | FromJSON MixedPropertiesAndAdditionalPropertiesClass\n\n-- | ToJSON MixedPropertiesAndAdditionalPropertiesClass\n\n-- | Construct a value of type\n--   <a>MixedPropertiesAndAdditionalPropertiesClass</a> (by applying it's\n--   required fields, if any)\nmkMixedPropertiesAndAdditionalPropertiesClass :: MixedPropertiesAndAdditionalPropertiesClass\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger Category Model Package in Dart\nDESCRIPTION: This code snippet demonstrates how to import the Swagger API package in Dart, which includes the Category model. This import is necessary to use the Category model in your Dart project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Using API Key Authentication in Go\nDESCRIPTION: Example of how to use API key authentication when making requests to the Petstore API using the Go client. This applies to the 'api_key' and 'api_key_query' authentication methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/README.md#2025-04-20_snippet_1\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextAPIKey, sw.APIKey{\n\tKey: \"APIKEY\",\n\tPrefix: \"Bearer\", // Omit if not necessary.\n})\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Testing Code Injection with Special Characters in C#\nDESCRIPTION: Example code demonstrating how to call the TestCodeInjectEndRnNR endpoint of the FakeApi. This endpoint tests code injection handling with special characters and line endings. The code shows error handling and parameter passing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestCodeInjectEndRnNRExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var testCodeInjectEndRnNR = testCodeInjectEndRnNR_example;  // string | To test code injection *_/ ' \\\" =end - - \\\\r\\\\n \\\\n \\\\r (optional) \n\n            try\n            {\n                // To test code injection *_/ ' \\\" =end - - \\\\r\\\\n \\\\n \\\\r\n                apiInstance.TestCodeInjectEndRnNR(testCodeInjectEndRnNR);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestCodeInjectEndRnNR: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building the Kotlin Server Library\nDESCRIPTION: Command to run tests and package the Kotlin server library using the Gradle wrapper.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/kotlin-server/ktor/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew check assemble\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger Petstore API Modules in Perl\nDESCRIPTION: Loads the API packages for interacting with different endpoints of the Swagger Petstore API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/README.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::AnotherFakeApi;\nuse WWW::SwaggerClient::FakeApi;\nuse WWW::SwaggerClient::FakeClassnameTags123Api;\nuse WWW::SwaggerClient::PetApi;\nuse WWW::SwaggerClient::StoreApi;\nuse WWW::SwaggerClient::UserApi;\n```\n\n----------------------------------------\n\nTITLE: FakeOuterNumberSerialize Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing serialization of outer number types. It accepts an optional OuterNumber body parameter and returns an OuterNumber object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: Go\nCODE:\n```\n# **FakeOuterNumberSerialize**\n> OuterNumber FakeOuterNumberSerialize(ctx, optional)\n\n\nTest serialization of outer number types\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterNumberSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterNumberSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterNumber**](OuterNumber.md)| Input number as post body | \n\n### Return type\n\n[**OuterNumber**](OuterNumber.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Adding Gradle Dependency\nDESCRIPTION: Gradle dependency declaration to add the API client library to a Gradle project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-jersey2:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Orders in Eiffel\nDESCRIPTION: This function places a new order for a pet. It accepts an ORDER object as the body parameter and returns the created ORDER object. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/STORE_API.md#2025-04-20_snippet_3\n\nLANGUAGE: eiffel\nCODE:\n```\nplace_order (body: ORDER ): detachable ORDER\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID in Dart\nDESCRIPTION: Example showing how to fetch a purchase order by its ID. For valid responses, use integer IDs with value <= 5 or > 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = 789; // int | ID of pet that needs to be fetched\n\ntry { \n    var result = api_instance.getOrderById(orderId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getOrderById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of how to call the testJsonFormData endpoint of FakeApi class from Swagger Petstore. This endpoint tests JSON serialization of form data by accepting two string parameters named 'param' and 'param2'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar param = \"param_example\"; // String | field1\n\nvar param2 = \"param2_example\"; // String | field2\n\napiInstance.testJsonFormData(param, param2).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image in C# using Swagger Client\nDESCRIPTION: Example code showing how to upload an image file for a pet. Handles file upload with optional metadata, requires OAuth2 authentication, and returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown\nDESCRIPTION: This Markdown table defines the properties of a Dog object. It specifies a single optional property 'breed' of type String. The table format is commonly used in Swagger/OpenAPI specifications to document model schemas.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input\nDESCRIPTION: Creates multiple users by passing a List of User objects. Similar to array input but uses List collection type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Binding Search Results to UITableView using RxSwift in Swift\nDESCRIPTION: This code snippet shows how to bind the search results to a UITableView using RxSwift. It sets up the cell configuration for each repository item, displaying the name and URL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Swift\nCODE:\n```\nsearchResults\n    .bind(to: tableView.rx.items(cellIdentifier: \"Cell\")) {\n        (index, repository: Repository, cell) in\n        cell.textLabel?.text = repository.name\n        cell.detailTextLabel?.text = repository.url\n    }\n    .disposed(by: disposeBag)\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in C#\nDESCRIPTION: Shows how to use the TestJsonFormData method of the FakeApi class. This method tests JSON serialization of form data with two string parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestJsonFormDataExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = param_example;  // string | field1\n            var param2 = param2_example;  // string | field2\n\n            try\n            {\n                // test json serialization of form data\n                apiInstance.TestJsonFormData(param, param2);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestJsonFormData: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in the Petstore API using Go\nDESCRIPTION: Function that creates multiple users by accepting a list of User objects. Similar to the array input function, it takes a context for authentication and request handling, along with a list of user data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nCreateUsersWithListInput(ctx, body)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Enum in SwaggerPetstore\nDESCRIPTION: This code snippet defines an enum called EnumClass with three possible values. Each value is associated with a specific string representation that includes special characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `abc` (value: `\"_abc\"`)\n\n* `efg` (value: `\"-efg\"`)\n\n* `xyz` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values in Markdown\nDESCRIPTION: Defines the possible values for the EnumNumberEnum used in the EnumTest model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumNumberEnum\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Swagger/OpenAPI\nDESCRIPTION: Documents the structure of the ArrayOfArrayOfNumberOnly class with its arrayArrayNumber property that consists of nested lists of BigDecimal values. The property is marked as optional in the schema.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Definition in Markdown\nDESCRIPTION: Defines an enumeration called InnerEnum with two possible values: 'UPPER' and 'lower'. This enum is used as a value type in the mapOfEnumString property of the MapTest model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in FakeApi - Java\nDESCRIPTION: Example demonstrating how to test JSON serialization of form data using the FakeApi class. Takes two string parameters as form fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using FakeClassnameTags123Api in Java\nDESCRIPTION: Example code showing how to initialize an API client, configure API key authorization, and make a PATCH request to test class naming. The code demonstrates error handling and working with the Client model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Property Schema Definition in Markdown\nDESCRIPTION: Defines the properties and their types for the MixedPropertiesAndAdditionalPropertiesClass, including optional UUID, OffsetDateTime, and a Map of String to Animal references.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# MixedPropertiesAndAdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for Swagger Codegen\nDESCRIPTION: Specifies the properties of a Tag object using a Markdown table. The Tag has two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Store API Package in Dart\nDESCRIPTION: Demonstrates how to import the Store API package in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Using SwaggerClient to make an API call in Objective-C\nDESCRIPTION: This snippet demonstrates how to use the SwaggerClient SDK to make an API call to the 'testCodeInjectEndRnNR' endpoint. It shows setting up the API instance, preparing parameters, and handling the response using a completion handler.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/README.md#2025-04-20_snippet_3\n\nLANGUAGE: objc\nCODE:\n```\nNSString* *testCodeInjectEndRnNR = @\"testCodeInjectEndRnNR_example\"; // To test code injection *_/ ' \\\" =end -- \\r\\n \\n \\r (optional)\n\nSWGFakeApi *apiInstance = [[SWGFakeApi alloc] init];\n\n// To test code injection *_/ ' \\\" =end -- \\r\\n \\n \\r\n[apiInstance testCodeInjectEndRnNRWithTestCodeInjectEndRnNR:testCodeInjectEndRnNR\n              completionHandler: ^(NSError* error) {\n                            if (error) {\n                                NSLog(@\"Error: %@\", error);\n                            }\n                        }];\n```\n\n----------------------------------------\n\nTITLE: TestEnumParameters Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing enum parameters. It accepts optional parameters to validate enum handling in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: Go\nCODE:\n```\n# **TestEnumParameters**\n> TestEnumParameters(ctx, optional)\nTo test enum parameters\n\nTo test enum parameters\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiTestEnumParametersOpts** | optional parameters | nil if no parameters\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values in Swagger\nDESCRIPTION: Defines possible string enum values for the enumString property including UPPER, lower, and empty string cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Swagger\nDESCRIPTION: Specifies the properties of the Model200Response model. It includes two optional fields: 'Name' as an integer and 'Class' as a string. This structure is typically used in Swagger/OpenAPI specifications to document API response models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Model200Response\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Name** | **int?** |  | [optional] \n**Class** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Logging out a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates how to log out the current user. It initializes the API instance and calls the logoutUser method with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.logoutUser(callback);\n```\n\n----------------------------------------\n\nTITLE: Implementing test_json_form_data API Method in Eiffel\nDESCRIPTION: Method signature for testing JSON serialization of form data. It accepts two STRING_32 parameters: param (field1) and param2 (field2). The method returns an empty response body and requires no authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_9\n\nLANGUAGE: eiffel\nCODE:\n```\ntest_json_form_data (param: STRING_32 ; param2: STRING_32 )\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Starting Local Server\nDESCRIPTION: Commands to install required Python packages and start the local server instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip3 install -r requirements.txt\npython3 -m swagger_server\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the HasOnlyReadOnly model class. Contains two optional string properties 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: API Endpoint Definition - TestSpecialTags\nDESCRIPTION: Documents the TestSpecialTags endpoint that accepts and returns a Client model. The endpoint requires context and body parameters, with no authorization requirements. Handles JSON content type for both request and response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestSpecialTags**\n> Client TestSpecialTags(ctx, body)\nTo test special tags\n\nTo test special tags\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**Client**](Client.md)| client model | \n\n### Return type\n\n[**Client**](Client.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Deleting Order Example in Dart\nDESCRIPTION: Shows how to delete a purchase order by ID. Works with integer IDs less than 1000. Includes error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = orderId_example; // String | ID of the order that needs to be deleted\n\ntry { \n    api_instance.deleteOrder(orderId);\n} catch (e) {\n    print(\"Exception when calling StoreApi->deleteOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Order Properties Schema Definition in Markdown\nDESCRIPTION: Defines the structure of the Order model with its properties, types, and optional flags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Order\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values\nDESCRIPTION: Specifies the allowed values for the InnerEnum enumeration type used in mapOfEnumString property. Defines UPPER and LOWER enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties in Swagger Markdown\nDESCRIPTION: This snippet defines the properties of a User object using Markdown table syntax. It specifies the name, type, description, and optional status for each property of the User model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating multiple users with list input\nDESCRIPTION: Example demonstrating the creation of multiple users using the createWithList endpoint, which accepts a list of User objects as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = [petstore_api.User()] # list[User] | List of user object\n\ntry:\n    # Creates list of users with given input array\n    api_instance.create_users_with_list_input(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_users_with_list_input: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Importing the Pet Model in Dart\nDESCRIPTION: Code snippet showing how to import the Pet model from the Swagger API package in a Dart application. This is the first step required to use the Pet model in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet shows how to delete a user by username. It initializes the API instance, specifies the username to be deleted, and calls the deleteUser method with a callback function to handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The name that needs to be deleted\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.deleteUser(username, callback);\n```\n\n----------------------------------------\n\nTITLE: Deleting User - Go\nDESCRIPTION: API endpoint for deleting a user by username. Requires authentication and accepts a username parameter. Returns an empty response on success.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nDeleteUser(ctx, username)\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Python\nDESCRIPTION: Example of deleting a user by username. Creates an instance of UserApi and sends a DELETE request. Can only be performed by logged-in users and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The name that needs to be deleted\n\ntry:\n    # Delete user\n    api_instance.delete_user(username)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->delete_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties Table in Swagger\nDESCRIPTION: A markdown table defining the properties of the Order model. It includes fields for id, petId, quantity, shipDate, status, and complete, along with their data types and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Multiple API Modules in Angular\nDESCRIPTION: TypeScript code demonstrating how to import and use multiple API modules from different Swagger files in an Angular application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Constants with Special Characters\nDESCRIPTION: Declares three enum constants with values that include special characters like underscores, hyphens and parentheses. This enum is likely used for code generation or API specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Structure with Map Properties in Markdown\nDESCRIPTION: Defines the property structure of AdditionalPropertiesClass with two map-type properties: a simple string-to-string map and a nested map of maps. Both properties are optional as indicated by the [optional] tag.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map&lt;String, String&gt;** |  |  [optional]\n**mapOfMapProperty** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID Using Bash CLI\nDESCRIPTION: Example showing how to retrieve a pet by its ID using the petstore CLI. This endpoint requires a pet ID parameter and returns a single Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli getPetById petId=value\n```\n\n----------------------------------------\n\nTITLE: Creating Single User - Java Swagger API\nDESCRIPTION: Example of creating a single user through the Swagger API. Requires a User object as input and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Alamofire with CocoaPods\nDESCRIPTION: Terminal command to install the Alamofire dependency after configuring the Podfile. This command processes the Podfile and downloads the specified dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\n$ pod install\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Android Client with Maven\nDESCRIPTION: Command to install the API client library to local Maven repository\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, sets up a Client object as the request body, and makes a PATCH request to test special tags. The method returns a Client object and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Published Petstore API TypeScript Fetch Client\nDESCRIPTION: Command to install the published version of the Petstore API TypeScript Fetch client package from npm. This adds the package as a dependency to your project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-fetch/builds/with-npm-version/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @swagger/typescript-fetch-petstore@1.0.0 --save\n```\n\n----------------------------------------\n\nTITLE: Setting Service Base Path in Angular Bootstrap\nDESCRIPTION: TypeScript code to set the base path for the API service during Angular application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List in C# with Swagger API\nDESCRIPTION: Creates multiple users by accepting a List of User objects. Similar to the array input endpoint but uses a List collection type instead.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithListInputExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithListInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithListInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Vertx via Maven\nDESCRIPTION: Commands to install the API client library to local or remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Properties in Kotlin\nDESCRIPTION: Documentation of the ApiResponse class properties in Kotlin. The class has three optional properties: an integer code, a string type, and a string message.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **kotlin.Int** |  |  [optional]\n**type** | **kotlin.String** |  |  [optional]\n**message** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown Table\nDESCRIPTION: Markdown table documenting the properties of Model200Response class. Includes two optional fields: name (Integer type) and propertyClass (String type).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition - Swagger Markdown\nDESCRIPTION: Defines the possible number enum values for the enumNumber property, including 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumNumberEnum\n\n* `_11` (value: `1.1`)\n* `_12` (value: `-1.2`)\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Schema in Swagger Markdown\nDESCRIPTION: Markdown table that defines the Cat model with a single optional boolean property 'declawed'. This format is commonly used in Swagger documentation to specify model schemas and their properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration\nDESCRIPTION: Configuration of API base path using environment files and Angular CLI\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Networking with Foundation and PromiseKit\nDESCRIPTION: This Swift code snippet shows how to use Foundation's URLSession with PromiseKit for network requests. It demonstrates creating a data task, converting the response to a dictionary, and handling errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_5\n\nLANGUAGE: swift\nCODE:\n```\n// pod 'PromiseKit/Foundation'\n// https://github.com/PromiseKit/Foundation\nURLSession.shared.dataTask(url).asDictionary().then { json in\n    // …\n}.catch { error in\n    //…\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties Table in Markdown\nDESCRIPTION: A markdown table documenting the properties of the Dog model, including property name, data type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing TestEnumParameters Method in C#\nDESCRIPTION: Example of using the TestEnumParameters method from the FakeApi. This endpoint demonstrates how to work with enum parameters in different locations (query, header, form) and different data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEnumParametersExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var enumFormStringArray = enumFormStringArray_example;  // List<string> | Form parameter enum test (string array) (optional) \n            var enumFormString = enumFormString_example;  // string | Form parameter enum test (string) (optional)  (default to -efg)\n            var enumHeaderStringArray = enumHeaderStringArray_example;  // List<string> | Header parameter enum test (string array) (optional) \n            var enumHeaderString = enumHeaderString_example;  // string | Header parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryStringArray = enumQueryStringArray_example;  // List<string> | Query parameter enum test (string array) (optional) \n            var enumQueryString = enumQueryString_example;  // string | Query parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryInteger = 56;  // int? | Query parameter enum test (double) (optional) \n            var enumQueryDouble = 1.2;  // double? | Query parameter enum test (double) (optional) \n\n            try\n            {\n                // To test enum parameters\n                apiInstance.TestEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEnumParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java API Client\nDESCRIPTION: Example code showing how to find pets by their status using the Swagger API client. Accepts multiple comma-separated status values as filter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Swagger API\nDESCRIPTION: Model definition table showing required properties for the Tag object, including optional numeric id and string name fields. This definition is used for API documentation and code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**name** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Perl\nDESCRIPTION: Example showing how to find pets by their status. The method accepts multiple status values as a comma-separated string array and returns an array of Pet objects. Uses OAuth2 for authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::PetApi;\nmy $api_instance = WWW::SwaggerClient::PetApi->new(\n\n    # Configure OAuth2 access token for authorization: petstore_auth\n    access_token => 'YOUR_ACCESS_TOKEN',\n);\n\nmy $status = []; # ARRAY[string] | Status values that need to be considered for filter\n\neval { \n    my $result = $api_instance->find_pets_by_status(status => $status);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling PetApi->find_pets_by_status: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger API\nDESCRIPTION: This example shows how to delete a user from the system using their username. This operation can only be performed by a logged-in user. It initializes the UserApi and calls DeleteUser with the specified username parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be deleted\n\n            try\n            {\n                // Delete user\n                apiInstance.DeleteUser(username);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.DeleteUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java\nDESCRIPTION: Example code showing how to test the \"client\" model using the FakeApi. Makes a PATCH request to test client model validation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Bash\nDESCRIPTION: Command example for testing various parameter types. This endpoint requires several parameters of different types and uses basic HTTP authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testEndpointParameters\n```\n\n----------------------------------------\n\nTITLE: Swagger Model Property Schema Table\nDESCRIPTION: Markdown table defining model property specifications including property names, their data types, descriptions and optional status flags. Shows handling of different property name formats including camelCase, snake_case and numeric prefixed names.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the main properties of EnumTest class including enumString, enumStringRequired, enumInteger, enumNumber, and outerEnum. Each property has specific type and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Copying Bash Completion Script to System Directory\nDESCRIPTION: This command copies the generated Bash completion script to the system-wide bash-completion directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsudo cp output/petstore-cli.bash-completion /etc/bash-completion.d/petstore-cli\n```\n\n----------------------------------------\n\nTITLE: Automatic Response Validation in Alamofire\nDESCRIPTION: Example of using automatic validation for status codes and content types, with success/failure handling using switch statement.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_10\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n         .validate()\n         .responseJSON { response in\n             switch response.result {\n             case .Success:\n                 print(\"Validation Successful\")\n             case .Failure(let error):\n                 print(error)\n             }\n         }\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Data Type in Haskell\nDESCRIPTION: Defines the Pet data type with fields for id, category, name, photoUrls, tags, and status. Includes constructor and accessor functions, as well as JSON serialization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_33\n\nLANGUAGE: Haskell\nCODE:\n```\ndata Pet\nPet :: !(Maybe Integer) -> !(Maybe Category) -> !(Text) -> !([Text]) -> !(Maybe [Tag]) -> !(Maybe E'Status2) -> Pet\n\n-- | \"id\"\n[petId] :: Pet -> !(Maybe Integer)\n\n-- | \"category\"\n[petCategory] :: Pet -> !(Maybe Category)\n\n-- | <i>Required</i> \"name\"\n[petName] :: Pet -> !(Text)\n\n-- | <i>Required</i> \"photoUrls\"\n[petPhotoUrls] :: Pet -> !([Text])\n\n-- | \"tags\"\n[petTags] :: Pet -> !(Maybe [Tag])\n\n-- | \"status\" - pet status in the store\n[petStatus] :: Pet -> !(Maybe E'Status2)\n\n-- | FromJSON Pet\n\n-- | ToJSON Pet\n\n-- | Construct a value of type <a>Pet</a> (by applying it's required\n--   fields, if any)\nmkPet :: Text -> [Text] -> Pet\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Class in Haskell\nDESCRIPTION: Defines the ArrayOfArrayOfNumberOnly data type with constructor, accessor for ArrayArrayNumber field, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_18\n\nLANGUAGE: haskell\nCODE:\n```\n-- | ArrayOfArrayOfNumberOnly\ndata ArrayOfArrayOfNumberOnly\nArrayOfArrayOfNumberOnly :: !(Maybe [[Double]]) -> ArrayOfArrayOfNumberOnly\n\n-- | <a>ArrayArrayNumber</a>\n[arrayOfArrayOfNumberOnlyArrayArrayNumber] :: ArrayOfArrayOfNumberOnly -> !(Maybe [[Double]])\n\n-- | FromJSON ArrayOfArrayOfNumberOnly\n\n-- | ToJSON ArrayOfArrayOfNumberOnly\n\n-- | Construct a value of type <a>ArrayOfArrayOfNumberOnly</a> (by applying\n--   it's required fields, if any)\nmkArrayOfArrayOfNumberOnly :: ArrayOfArrayOfNumberOnly\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Java Client Dependency in Maven POM\nDESCRIPTION: XML snippet to add the Swagger Java client dependency to a Maven project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-java-client</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Class Properties in SwaggerPetstore\nDESCRIPTION: Documentation of the Animal class properties in the SwaggerPetstore API. The class has a required className property of type String and an optional color property of type String with a default value of 'red'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Sending PUT Request to Update Existing Pet\nDESCRIPTION: Endpoint for updating an existing pet in the store. Requires a Pet object in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_5\n\nLANGUAGE: markup\nCODE:\n```\nput /pet\n```\n\n----------------------------------------\n\nTITLE: Basic SDK Usage Example\nDESCRIPTION: Example showing how to initialize and use the Swagger Petstore SDK to make an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/README.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar api = new SwaggerPetstore.AnotherFakeApi()\n\nvar body = new SwaggerPetstore.Client(); // {Client} client model\n\napi.testSpecialTags(body).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Modifying Services After Definition in Pimple\nDESCRIPTION: Shows how to modify a service after it has been defined using the extend() method. This allows for additional configuration or modification of the service.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$container['session_storage'] = function ($c) {\n    return new $c['session_storage_class']($c['cookie_name']);\n};\n\n$container->extend('session_storage', function ($storage, $c) {\n    $storage->...();\n\n    return $storage;\n});\n```\n\n----------------------------------------\n\nTITLE: Building and Running Swagger Server on Linux/OS X\nDESCRIPTION: Shell command to build and run the Swagger Petstore server on Linux or OS X systems.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2-interface-controller/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nsh build.sh\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in PHP Swagger Client\nDESCRIPTION: Demonstrates how to make a PUT request with both body and query parameters to /fake/body-with-query-params endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\User();\n$query = \"query_example\";\n\ntry {\n    $apiInstance->testBodyWithQueryParams($body, $query);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testBodyWithQueryParams: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Docker Deployment Commands\nDESCRIPTION: Commands for building and running the server in a Docker container, including image building and container startup with port mapping.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# building the image\ndocker build -t swagger_server .\n\n# starting up a container\ndocker run -p 8080:8080 swagger_server\n```\n\n----------------------------------------\n\nTITLE: Accessing Pet Information\nDESCRIPTION: Code demonstrating how to access and display pet information from the retrieved object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_7\n\nLANGUAGE: ada\nCODE:\n```\n  Ada.Text_IO.Put_Line (\"Id      : \" & Swagger.Long'Image (Pet.Id));\n  Ada.Text_IO.Put_Line (\"Name    : \" & Swagger.To_String (Pet.Name));\n  Ada.Text_IO.Put_Line (\"Status  : \" & Swagger.To_String (Pet.Status));\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub Repository Search in Swift using RxSwift\nDESCRIPTION: This snippet demonstrates how to define a search for GitHub repositories using RxSwift. It throttles user input, filters distinct values, and performs API calls, handling errors and empty results.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Swift\nCODE:\n```\nlet searchResults = searchBar.rx.text.orEmpty\n    .throttle(0.3, scheduler: MainScheduler.instance)\n    .distinctUntilChanged()\n    .flatMapLatest { query -> Observable<[Repository]> in\n        if query.isEmpty {\n            return .just([])\n        }\n        return searchGitHub(query)\n            .catchErrorJustReturn([])\n    }\n    .observeOn(MainScheduler.instance)\n```\n\n----------------------------------------\n\nTITLE: Linking an API Module with npm link\nDESCRIPTION: Commands to create and use a symlink for the API module during development.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link \n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in C#\nDESCRIPTION: This code snippet demonstrates how to use the TestClientModel method to test the \"client\" model. It shows creating a FakeApi instance, calling the method with a ModelClient object, and handling the response. This method requires a body parameter of type ModelClient.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClientModelExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test \\\"client\\\" model\n                ModelClient result = apiInstance.TestClientModel(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestClientModel: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: AdditionalPropertiesClass Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and attributes of AdditionalPropertiesClass. Includes two map properties: a simple String-to-String map and a nested map structure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information by Username in Swagger API\nDESCRIPTION: Example showing how to fetch user information by providing a username. This endpoint returns a User object containing all the details of the specified user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $username = 'username_example'; # string | The name that needs to be fetched. Use user1 for testing.\n\neval { \n    my $result = $api_instance->get_user_by_name(username => $username);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->get_user_by_name: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java using Swagger Client\nDESCRIPTION: Example of how to test the \"client\" model using the FakeApi client. Takes a Client object as input and returns a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Inflector with Maven and Jetty\nDESCRIPTION: This command packages the Swagger Inflector application and then runs it using the Jetty web server through Maven. The application will be accessible through the web once the command completes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/java-inflector/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Modifying NSURLSession Configuration for Alamofire Manager\nDESCRIPTION: This snippet shows how to modify an NSURLSessionConfiguration by adding custom HTTP headers before creating an Alamofire Manager. This example adds a Do Not Track header to all requests.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_41\n\nLANGUAGE: swift\nCODE:\n```\nvar defaultHeaders = Alamofire.Manager.sharedInstance.session.configuration.HTTPAdditionalHeaders ?? [:]\ndefaultHeaders[\"DNT\"] = \"1 (Do Not Track Enabled)\"\n\nlet configuration = NSURLSessionConfiguration.defaultSessionConfiguration()\nconfiguration.HTTPAdditionalHeaders = defaultHeaders\n\nlet manager = Alamofire.Manager(configuration: configuration)\n```\n\n----------------------------------------\n\nTITLE: Defining Category Class Properties in Kotlin for Swagger Codegen\nDESCRIPTION: Specifies the properties of a Category class in Kotlin for Swagger Codegen. The class has two optional properties: 'id' of type Long and 'name' of type String. This definition would be used in the code generation process to create the corresponding model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **kotlin.Long** |  |  [optional]\n**name** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Delete Order Example - Java Swagger Client\nDESCRIPTION: Example showing how to delete a purchase order by ID using the Swagger Java client. Takes an order ID string parameter and handles API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Angular Module Integration without Providers\nDESCRIPTION: Angular module setup for integrating the Petstore API client without configuring providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '@swagger/angular2-typescript-petstore';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n    imports: [\n        ApiModule,\n        // make sure to import the HttpClientModule in the AppModule only,\n        // see https://github.com/angular/angular/issues/20575\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Testing Numeric Serialization in Java\nDESCRIPTION: Example code for testing serialization of numeric types using the Fake API. Makes a POST request to /fake/outer/number endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger JSON Documentation\nDESCRIPTION: URL to access the Swagger JSON specification of the API after the server is running.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/java-msf4j/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Multiple API Modules Configuration\nDESCRIPTION: Example of importing multiple API modules with alias names to avoid conflicts\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order in Kotlin\nDESCRIPTION: Example demonstrating how to delete a purchase order by ID. Includes error handling for client and server exceptions. Valid response requires integer IDs with value < 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = StoreApi()\nval orderId : kotlin.String = orderId_example // kotlin.String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#deleteOrder\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#deleteOrder\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization with FakeApi in Java\nDESCRIPTION: Example of using the fakeOuterStringSerialize endpoint to test the serialization of outer string types. Shows how to submit a string input and handle the string response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition\nDESCRIPTION: Defines the possible number values for the enumNumber property including 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n* `_11` (value: `1.1`)\n* `_12` (value: `-1.2`)\n```\n\n----------------------------------------\n\nTITLE: Using the Petstore Ruby SDK to Access the Fake API\nDESCRIPTION: Example code demonstrating how to use the Petstore SDK to make a request to the FakeApi endpoint. It shows initialization, parameter setting, and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/ruby/README.md#2025-04-20_snippet_3\n\nLANGUAGE: ruby\nCODE:\n```\n# Load the gem\nrequire 'petstore'\n\napi_instance = Petstore::FakeApi.new\n\nopts = { \n  test_code_inject____end____rn_n_r: \"test_code_inject____end____rn_n_r_example\" # String | To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n}\n\nbegin\n  #To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n  api_instance.test_code_inject____end__rn_n_r(opts)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeApi->test_code_inject____end__rn_n_r: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Swagger User Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, descriptions and optional status for a User model in Swagger API specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Username** | **string** |  | [optional] \n**FirstName** | **string** |  | [optional] \n**LastName** | **string** |  | [optional] \n**Email** | **string** |  | [optional] \n**Password** | **string** |  | [optional] \n**Phone** | **string** |  | [optional] \n**UserStatus** | **int?** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum for MapTest in Markdown\nDESCRIPTION: Defines the InnerEnum enumeration used in the mapOfEnumString property of the MapTest model. It specifies two possible values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Implementing ServerTrustPolicyManager in Alamofire\nDESCRIPTION: Example of creating a ServerTrustPolicyManager with different policies for different hosts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_62\n\nLANGUAGE: swift\nCODE:\n```\nlet serverTrustPolicies: [String: ServerTrustPolicy] = [\n    \"test.example.com\": .PinCertificates(\n        certificates: ServerTrustPolicy.certificatesInBundle(),\n        validateCertificateChain: true,\n        validateHost: true\n    ),\n    \"insecure.expired-apis.com\": .DisableEvaluation\n]\n\nlet manager = Manager(\n    serverTrustPolicyManager: ServerTrustPolicyManager(policies: serverTrustPolicies)\n)\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in C#\nDESCRIPTION: Example code showing serialization of composite objects with outer number types using the FakeApi. Demonstrates API call with optional OuterComposite body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterCompositeSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterComposite(); // OuterComposite | Input composite as post body (optional) \n\n            try\n            {\n                OuterComposite result = apiInstance.FakeOuterCompositeSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterCompositeSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Complete API Client Example with Error Handling in Perl\nDESCRIPTION: A complete example showing how to use the Perl Swagger client library, including loading required modules, initializing the API client, setting parameters, and handling exceptions. This demonstrates a test for code injection vulnerabilities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/deep_module_test/README.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\n#!/usr/bin/perl\nuse lib 'lib';\nuse strict;\nuse warnings;\n# load the API package\nuse Something::Deep::FakeApi;\n\n# load the models\nuse Something::Deep::Object::ModelReturn;\n\n# for displaying the API response data\nuse Data::Dumper;\nuse Something::Deep::;\n\nmy $api_instance = Something::Deep::->new(\n);\n\nmy $test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r = 'test_code_inject_*/_\\'_\"_=end____\\r\\n_\\n_\\r_example'; # string | To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n\neval {\n    $api_instance->test_code_inject____end__rn_n_r(test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r => $test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_code_inject____end__rn_n_r: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This snippet outlines the properties of the MixedPropertiesAndAdditionalPropertiesClass, including their names, types, and optional status. It uses a markdown table format to present the information clearly.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Table in Markdown\nDESCRIPTION: A markdown table defining the values for the InnerEnum enumeration used in the MapTest class. It specifies two enum values: UPPER and LOWER with their respective string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"Map<String, InnerEnum>\"></a>\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Server on Windows\nDESCRIPTION: Batch command to build and run the Swagger Petstore server on Windows platforms using the build batch file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-interface-only/README.md#2025-04-20_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nbuild.bat\n```\n\n----------------------------------------\n\nTITLE: Number Enum Values Definition\nDESCRIPTION: Defines the possible decimal number values for the EnumNumberEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Java\nDESCRIPTION: Example of using the testBodyWithQueryParams endpoint to test API calls that include both a request body and query parameters. Creates a User object as the body and passes a query string parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Name Model Properties Table - Swagger API Documentation\nDESCRIPTION: Property table defining the Name model schema. Includes property names, data types, descriptions, and validation notes. Properties include Name (required int32), SnakeCase (optional int32), Property (optional string), and Var123Number (optional int32).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Name** | **int32** |  | [default to null]\n**SnakeCase** | **int32** |  | [optional] [default to null]\n**Property** | **string** |  | [optional] [default to null]\n**Var123Number** | **int32** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Swagger Model Definition - Animal Class Properties\nDESCRIPTION: Defines the properties of the Animal model class with two fields: className (required string) and color (optional string defaulting to 'red').\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | \n**Color** | **string** |  | [optional] [default to \"red\"]\n```\n\n----------------------------------------\n\nTITLE: Importing Petstore API Package after Setuptools Installation\nDESCRIPTION: Demonstrates how to import the petstore-api package in Python code after installing it with Setuptools. This allows your Python application to use the client library's features.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/README.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport petstore_api\n```\n\n----------------------------------------\n\nTITLE: AdditionalPropertiesClass Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and metadata for AdditionalPropertiesClass properties. Documents two map properties - a simple string-to-string map and a nested map structure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Dependency for Swagger Petstore Client\nDESCRIPTION: XML snippet for adding the Swagger Petstore OkHttp4 Gson client library as a Maven dependency in a project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/README.md#2025-04-20_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-petstore-okhttp4-gson</artifactId>\n  <version>1.0.0</version>\n  <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order using its ID. It uses the StoreApi class to make the API call. The method accepts an orderId parameter and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Cat model using a markdown table. It specifies the property names, their types, descriptions, and additional notes such as optional status and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ClassName** | **string** |  | \n| **Color** | **string** |  | [optional] [default to \"red\"]\n| **Declawed** | **bool?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Initializing Git Repository for Manual Installation\nDESCRIPTION: Command to initialize a Git repository, required for manual integration of Alamofire as a submodule.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ git init\n```\n\n----------------------------------------\n\nTITLE: Loading the Model200Response Package in Perl Swagger Client\nDESCRIPTION: Demonstrates how to load the Model200Response model class from the WWW::SwaggerClient::Object namespace in a Perl project using Swagger-generated client code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Model200Response;\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enumeration\nDESCRIPTION: Enumeration defining the valid status values for an order: placed, approved, and delivered. This ensures orders can only have one of these predefined status values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Creating a User with the UserApi in C#\nDESCRIPTION: Example of creating a single user using the Swagger-generated C# client for the Pet Store API. This operation can only be done by a logged in user and requires a User object to be passed as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new User(); // User | Created user object\n\n            try\n            {\n                // Create user\n                apiInstance.CreateUser(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: Code snippet showing how to import the Swagger API package in a Dart application. This is required before using any of the API classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of ModelApiResponse class. Contains three optional fields: code (Integer), type (String), and message (String). Used as a standardized response format for API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ArrayEnum Values\nDESCRIPTION: Defines the allowed values for elements in the arrayEnum property, including fish and crab.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* `fish` (value: `\"fish\"`)\n\n* `crab` (value: `\"crab\"`)\n```\n\n----------------------------------------\n\nTITLE: USER Model Properties Table in Markdown\nDESCRIPTION: A markdown table that defines the properties of the USER model including field names, data types, descriptions, and optional attributes. This table serves as API documentation for developers implementing or consuming the USER model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **INTEGER_64** |  | [optional] [default to null]\n**username** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**first_name** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**last_name** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**email** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**password** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**phone** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**user_status** | **INTEGER_32** | User Status | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in C#\nDESCRIPTION: Demonstrates how to call the TestEndpointParameters method of the FakeApi class. This method tests various parameter types including numbers, strings, dates, and binary data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEndpointParametersExample\n    {\n        public void main()\n        {\n            // Configure HTTP basic authorization: http_basic_test\n            Configuration.Default.Username = \"YOUR_USERNAME\";\n            Configuration.Default.Password = \"YOUR_PASSWORD\";\n\n            var apiInstance = new FakeApi();\n            var number = 8.14;  // decimal? | None\n            var _double = 1.2;  // double? | None\n            var patternWithoutDelimiter = patternWithoutDelimiter_example;  // string | None\n            var _byte = B;  // byte[] | None\n            var integer = 56;  // int? | None (optional) \n            var int32 = 56;  // int? | None (optional) \n            var int64 = 789;  // long? | None (optional) \n            var _float = 3.4;  // float? | None (optional) \n            var _string = _string_example;  // string | None (optional) \n            var binary = B;  // byte[] | None (optional) \n            var date = 2013-10-20;  // DateTime? | None (optional) \n            var dateTime = 2013-10-20T19:20:30+01:00;  // DateTime? | None (optional) \n            var password = password_example;  // string | None (optional) \n            var callback = callback_example;  // string | None (optional) \n\n            try\n            {\n                // Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n                apiInstance.TestEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, _string, binary, date, dateTime, password, callback);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEndpointParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running the Server Example in Rust\nDESCRIPTION: Command to run the example server implementation generated by swagger-codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rust-server/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncargo run --example server\n```\n\n----------------------------------------\n\nTITLE: Linking the SDK globally in npm\nDESCRIPTION: Command to create a symbolic link from the globally installed package to the local one for development.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm link\n```\n\n----------------------------------------\n\nTITLE: Implementing placeOrder Method in PHP\nDESCRIPTION: This PHP snippet demonstrates the implementation of the placeOrder method in the StoreApi class. It takes an Order object as a parameter to place a new order for a pet.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/StoreApiInterface.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/StoreApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\StoreApiInterface;\n\nclass StoreApi implements StoreApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of StoreApiInterface#placeOrder\n     */\n    public function placeOrder(Order $body)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Importing ES6 Module from Local Directory\nDESCRIPTION: Examples of importing the generated module from a local directory using ES6 module syntax.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-aurelia/default/README.md#2025-04-20_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport * as localName from './symlinkDir';\nimport {operationId} from './symlinkDir';\n```\n\n----------------------------------------\n\nTITLE: Calling testEnumParameters method in Java\nDESCRIPTION: This snippet demonstrates how to call the testEnumParameters method of the FakeApi class. It includes setting up the API instance, preparing parameters, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating SwaggerPetstore Client in Haskell\nDESCRIPTION: This snippet demonstrates how to create a client for the SwaggerPetstore API using the auto-generated bindings. It imports the necessary module, creates a client with a specified hostname and port, and provides a structure for making API calls.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/haskell-servant/README.md#2025-04-20_snippet_0\n\nLANGUAGE: haskell\nCODE:\n```\n{-# LANGUAGE RecordWildCards #-}\n\nimport SwaggerPetstore.API\n\nmain :: IO ()\nmain = do\n  SwaggerPetstoreBackend{..} <- createSwaggerPetstoreClient (ServerConfig \"localhost\" 8080)\n  -- Any SwaggerPetstore API call can go here.\n  return ()\n```\n\n----------------------------------------\n\nTITLE: Installing Published Package\nDESCRIPTION: Command to install the published package from npm registry as a dependency.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-fetch/builds/es6-target/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/typescript-fetch-petstore@1.0.0 --save\n```\n\n----------------------------------------\n\nTITLE: User Logout with SwagUserApi in Java\nDESCRIPTION: This snippet demonstrates how to log out the current user session using the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\ntry {\n    // cross your fingers\n    api.logoutUser();\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Installing from Git Repository\nDESCRIPTION: Command to install the library directly from a Git repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data in Go\nDESCRIPTION: This function updates a pet's information using form data. It requires the pet's ID and optional name and status parameters. The request is made via HTTP POST to the /pet/{petId} endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\nfunc UpdatePetWithForm(ctx context.Context, petId int64, optional *PetApiUpdatePetWithFormOpts) error\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Tag model using a markdown table. It specifies the name, type, description, and additional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**Name** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown Table\nDESCRIPTION: Markdown table defining the Tag model properties including id (Long) and name (String), both marked as optional fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Status Enum Definition\nDESCRIPTION: Defines an enumeration with three status values representing different stages in a process flow. Each enum constant has a corresponding string value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Schema Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Cat model. Contains a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Angular Module with Custom Configuration\nDESCRIPTION: TypeScript code for configuring the API module with custom parameters using a factory function.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization in Go\nDESCRIPTION: Function definition for testing JSON serialization of form data with two string parameters. Takes context and two required string parameters, returning an empty response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_10\n\nLANGUAGE: go\nCODE:\n```\nTestJsonFormData(ctx context.Context, param string, param2 string)\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Swagger API Modules\nDESCRIPTION: TypeScript code showing how to import and use multiple API modules generated from different Swagger files with alias names to avoid conflicts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    // make sure to import the HttpClientModule in the AppModule only,\n    // see https://github.com/angular/angular/issues/20575\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Authentication for Swift API Client\nDESCRIPTION: This Swift code provides a helper method for configuring API client authentication. It supports multiple authentication methods including API key, OAuth, and basic authentication. The method handles adding necessary headers and query parameters based on the authentication type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rails5/tmp/restart.txt#2025-04-20_snippet_0\n\nLANGUAGE: Swift\nCODE:\n```\n// Configure auth settings\nprivate func configureAuthSettings() throws {\n    guard !self.authSettings.isEmpty else {\n        return\n    }\n\n    // Apply authentication settings to the request\n    for (key, value) in authSettings {\n        guard let authConfig = ApiClient.apiKey[key] else {\n            continue\n        }\n\n        // Skip auth settings that were not applied to this request.\n        if let authType = authConfig[\"in\"], value[\"in\"] != nil && authType != value[\"in\"] {\n            continue\n        }\n\n        let authSetting = authConfig\n        let authSettingValues = value\n\n        switch (authSetting[\"in\"]) {\n        case \"header\":\n            if let apiKey = authSettingValues[\"value\"], let keyPrefix = authSetting[\"key_prefix\"] {\n                self.addHeaders([authSetting[\"key\"]: \"\\(keyPrefix) \\(apiKey)\"])\n            } else if let apiKey = authSettingValues[\"value\"] {\n                self.addHeaders([authSetting[\"key\"]: apiKey])\n            }\n        case \"query\":\n            if let apiKey = authSettingValues[\"value\"] {\n                self.addQueryParameters([authSetting[\"key\"]: apiKey])\n            }\n        case \"basic\":\n            let username = authSettingValues[\"username\"] ?? \"\"\n            let password = authSettingValues[\"password\"] ?? \"\"\n            self.addHeaders([\"Authorization\": \"Basic \\(HTTPClient.base64Encode(string: \"\\(username):\\(password)\"))\")\n        case \"oAuth\":\n            if let apiKey = authSettingValues[\"value\"] {\n                self.addHeaders([authSetting[\"key\"]: \"Bearer \\(apiKey)\"])\n            }\n        default:\n            break\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Generated Module with CommonJS Syntax\nDESCRIPTION: Example of importing the generated TypeScript/JavaScript module using CommonJS module syntax when installed via NPM.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/typescript-aurelia/README.md#2025-04-20_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport localName = require('npmName');\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enum in Markdown\nDESCRIPTION: This snippet defines an enum for the pet's status in the store, including available values: available, pending, and sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\n\n\n* `available` (value: `\"available\"`)\n\n* `pending` (value: `\"pending\"`)\n\n* `sold` (value: `\"sold\"`)\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for EnumStringEnum including UPPER, LOWER, and EMPTY. These are string-based enum values with different casing patterns and an empty string option.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringEnum\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\nEMPTY | &quot;&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Cat model using a markdown table. It specifies the property names, types, descriptions, and additional notes such as default values and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **string** |  | [default to null]\n**color** | **string** |  | [optional] [default to null]\n**declawed** | **boolean** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Verifying Java Version\nDESCRIPTION: Command to check the installed Java version, ensuring it meets the project requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\njava version \"1.8.0_121\"\nJava(TM) SE Runtime Environment (build 1.8.0_121-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom HTTP Request with NSMutableURLRequest in Swift\nDESCRIPTION: Demonstrates how to create a custom HTTP request using NSMutableURLRequest, including setting HTTP method, body with JSON parameters, and content-type header. This approach allows full control over request properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_53\n\nLANGUAGE: swift\nCODE:\n```\nlet URL = NSURL(string: \"https://httpbin.org/post\")!\nlet mutableURLRequest = NSMutableURLRequest(URL: URL)\nmutableURLRequest.HTTPMethod = \"POST\"\n\nlet parameters = [\"foo\": \"bar\"]\n\ndo {\n    mutableURLRequest.HTTPBody = try NSJSONSerialization.dataWithJSONObject(parameters, options: NSJSONWritingOptions())\n} catch {\n    // No-op\n}\n\nmutableURLRequest.setValue(\"application/json\", forHTTPHeaderField: \"Content-Type\")\n\nAlamofire.request(mutableURLRequest)\n```\n\n----------------------------------------\n\nTITLE: Instance Declarations for SwaggerPetstore API Parameters and MIME Types\nDESCRIPTION: Defines type class instances for the Swagger Petstore API endpoints, specifying optional parameters, body parameters, and supported MIME types for request/response handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_51\n\nLANGUAGE: haskell\nCODE:\n```\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEnumParameters SwaggerPetstore.Model.EnumQueryString\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEnumParameters SwaggerPetstore.Model.EnumQueryInteger\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEnumParameters SwaggerPetstore.Model.EnumQueryDouble\ninstance SwaggerPetstore.MimeTypes.MimeType mtype => SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.Fake.TestEnumParameters mtype\ninstance SwaggerPetstore.MimeTypes.MimeType mtype => SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Fake.TestEnumParameters mtype\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.ParamInteger\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.Int32\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.Int64\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.ParamFloat\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.ParamString\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.ParamBinary\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.ParamDate\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.ParamDateTime\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.Password\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.Model.Callback\ninstance SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.MimeTypes.MimeXmlCharsetutf8\ninstance SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.MimeTypes.MimeJsonCharsetutf8\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.MimeTypes.MimeXmlCharsetutf8\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Fake.TestEndpointParameters SwaggerPetstore.MimeTypes.MimeJsonCharsetutf8\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.Fake.TestClientModel SwaggerPetstore.Model.Client\ninstance SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.Fake.TestClientModel SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Fake.TestClientModel SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.Fake.FakeOuterStringSerialize SwaggerPetstore.Model.OuterString\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.Fake.FakeOuterNumberSerialize SwaggerPetstore.Model.OuterNumber\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.Fake.FakeOuterCompositeSerialize SwaggerPetstore.Model.OuterComposite\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.Fake.FakeOuterBooleanSerialize SwaggerPetstore.Model.OuterBoolean\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of a Pet model including required and optional fields with their types and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Pet\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: User Properties Table for Swagger Codegen in Kotlin\nDESCRIPTION: Table of properties for the User data model class in Kotlin, showing field names, types, descriptions, and optional status. The model includes standard user fields like ID, username, names, contact information, credentials, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **kotlin.Long** |  |  [optional]\n**username** | **kotlin.String** |  |  [optional]\n**firstName** | **kotlin.String** |  |  [optional]\n**lastName** | **kotlin.String** |  |  [optional]\n**email** | **kotlin.String** |  |  [optional]\n**password** | **kotlin.String** |  |  [optional]\n**phone** | **kotlin.String** |  |  [optional]\n**userStatus** | **kotlin.Int** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Generator for Swagger Codegen Maven Plugin\nDESCRIPTION: This XML snippet demonstrates how to configure the Swagger Codegen Maven Plugin with a custom generator. It includes specifying the custom generator class, template directory, and additional configuration options like package names.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen-maven-plugin/README.md#2025-04-20_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<plugin>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-codegen-maven-plugin</artifactId>\n    <version>${swagger-codegen-maven-plugin-version}</version>\n    <executions>\n        <execution>\n            <goals>\n                <goal>generate</goal>\n            </goals>\n            <configuration>\n                <inputSpec>${project.basedir}/src/main/resources/yaml/yamlfilename.yaml</inputSpec>\n                <!-- language file, like e.g. JavaJaxRSCodegen shipped with swagger -->\n                <language>com.my.package.for.GeneratorLanguage</language>\n                <templateDirectory>myTemplateDir</templateDirectory>\n\n                <output>${project.build.directory}/generated-sources</output>\n                <apiPackage>${default.package}.handler</apiPackage>\n                <modelPackage>${default.package}.model</modelPackage>\n                <invokerPackage>${default.package}.handler</invokerPackage>\n            </configuration>\n        </execution>\n    </executions>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.my.generator</groupId>\n            <artifactId>customgenerator</artifactId>\n            <version>1.0-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n</plugin>\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest model using a markdown table. It includes two properties: mapMapOfString and mapOfEnumString, both of which are optional and involve complex map structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Class in Haskell\nDESCRIPTION: Defines the FormatTest data type with constructor, accessors for fields with various formats (integer, float, date, etc.), JSON conversion instances, and a utility function for creating instances with required fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_27\n\nLANGUAGE: haskell\nCODE:\n```\n-- | FormatTest\ndata FormatTest\nFormatTest :: !(Maybe Int) -> !(Maybe Int) -> !(Maybe Integer) -> !(Double) -> !(Maybe Float) -> !(Maybe Double) -> !(Maybe Text) -> !(ByteArray) -> !(Maybe Binary) -> !(Date) -> !(Maybe DateTime) -> !(Maybe Text) -> !(Text) -> FormatTest\n\n-- | \"integer\"\n[formatTestInteger] :: FormatTest -> !(Maybe Int)\n\n-- | \"int32\"\n[formatTestInt32] :: FormatTest -> !(Maybe Int)\n\n-- | \"int64\"\n[formatTestInt64] :: FormatTest -> !(Maybe Integer)\n\n-- | <i>Required</i> \"number\"\n[formatTestNumber] :: FormatTest -> !(Double)\n\n-- | \"float\"\n[formatTestFloat] :: FormatTest -> !(Maybe Float)\n\n-- | \"double\"\n[formatTestDouble] :: FormatTest -> !(Maybe Double)\n\n-- | \"string\"\n[formatTestString] :: FormatTest -> !(Maybe Text)\n\n-- | <i>Required</i> \"byte\"\n[formatTestByte] :: FormatTest -> !(ByteArray)\n\n-- | \"binary\"\n[formatTestBinary] :: FormatTest -> !(Maybe Binary)\n\n-- | <i>Required</i> \"date\"\n[formatTestDate] :: FormatTest -> !(Date)\n\n-- | \"dateTime\"\n[formatTestDateTime] :: FormatTest -> !(Maybe DateTime)\n\n-- | \"uuid\"\n[formatTestUuid] :: FormatTest -> !(Maybe Text)\n\n-- | <i>Required</i> \"password\"\n[formatTestPassword] :: FormatTest -> !(Text)\n\n-- | FromJSON FormatTest\n\n-- | ToJSON FormatTest\n\n-- | Construct a value of type <a>FormatTest</a> (by applying it's required\n--   fields, if any)\nmkFormatTest :: Double -> ByteArray -> Date -> Text -> FormatTest\n```\n\n----------------------------------------\n\nTITLE: API Endpoint Reference Table for FakeApi\nDESCRIPTION: Table listing all available endpoints in the FakeApi, including their HTTP methods, request URLs, and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nMethod | HTTP request | Description\n------------- | ------------- | -------------\n[**FakeOuterBooleanSerialize**](FakeApi.md#FakeOuterBooleanSerialize) | **Post** /fake/outer/boolean | \n[**FakeOuterCompositeSerialize**](FakeApi.md#FakeOuterCompositeSerialize) | **Post** /fake/outer/composite | \n[**FakeOuterNumberSerialize**](FakeApi.md#FakeOuterNumberSerialize) | **Post** /fake/outer/number | \n[**FakeOuterStringSerialize**](FakeApi.md#FakeOuterStringSerialize) | **Post** /fake/outer/string | \n[**TestBodyWithQueryParams**](FakeApi.md#TestBodyWithQueryParams) | **Put** /fake/body-with-query-params | \n[**TestClientModel**](FakeApi.md#TestClientModel) | **Patch** /fake | To test \\&quot;client\\&quot; model\n[**TestEndpointParameters**](FakeApi.md#TestEndpointParameters) | **Post** /fake | Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n[**TestEnumParameters**](FakeApi.md#TestEnumParameters) | **Get** /fake | To test enum parameters\n[**TestInlineAdditionalProperties**](FakeApi.md#TestInlineAdditionalProperties) | **Post** /fake/inline-additionalProperties | test inline additionalProperties\n[**TestJsonFormData**](FakeApi.md#TestJsonFormData) | **Get** /fake/jsonFormData | test json serialization of form data\n```\n\n----------------------------------------\n\nTITLE: Configuring API Base Path in Environment Files\nDESCRIPTION: TypeScript code showing how to define the API base path in Angular environment configuration files.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient SDK using CocoaPods from GitHub\nDESCRIPTION: This snippet shows how to install the SwaggerClient SDK using CocoaPods by specifying the GitHub repository. It also demonstrates how to specify a particular branch or commit.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/core-data/README.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\npod 'SwaggerClient', :git => 'https://github.com/GIT_USER_ID/GIT_REPO_ID.git'\n```\n\n----------------------------------------\n\nTITLE: Installing the Generated API Package in R\nDESCRIPTION: This snippet demonstrates how to install the generated API package. It assumes the working directory is set to the location of the API code and uses the 'devtools' library to install the package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/r_test/README.md#2025-04-20_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nlibrary(devtools)\ninstall(\".\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Curl HTTP Client\nDESCRIPTION: Code to initialize the HTTP client using Curl implementation from Ada Util.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ada\nCODE:\n```\n   Util.Http.Clients.Curl.Register;\n```\n\n----------------------------------------\n\nTITLE: Making Various HTTP Requests in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to make POST, PUT, and DELETE requests using Alamofire. It shows the usage of the Method enum to specify the HTTP method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_17\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.POST, \"https://httpbin.org/post\")\n\nAlamofire.request(.PUT, \"https://httpbin.org/put\")\n\nAlamofire.request(.DELETE, \"https://httpbin.org/delete\")\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path in NgModule\nDESCRIPTION: Example of providing a custom base path for the API service in the NgModule configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Documenting API Parameters for Pet Update Operation in Swagger\nDESCRIPTION: Documentation for parameters required for updating a pet in the Petstore API. Includes three parameters: petId (required), additionalMetadata (optional), and file (optional) for file upload functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **petId** | **kotlin.Long**| ID of pet to update |\n **additionalMetadata** | **kotlin.String**| Additional data to pass to server | [optional]\n **file** | **java.io.File**| file to upload | [optional]\n\n### Return type\n\n[**ApiResponse**](ApiResponse.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: multipart/form-data\n - **Accept**: application/json\n\n```\n\n----------------------------------------\n\nTITLE: User Logout Operation\nDESCRIPTION: Example showing how to log out the currently authenticated user from the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Client Library with Maven\nDESCRIPTION: Command to install the Swagger Petstore Retrofit2 RxJava2 client library to the local Maven repository. This makes the library available for use in local Maven projects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Building and Running Swagger-Generated Jersey Server\nDESCRIPTION: Command to clean, package, and run the Swagger-generated Jersey server using Maven and Jetty.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-datelib-j8/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table for Ints Model in Markdown\nDESCRIPTION: Creates a markdown table structure for documenting the properties of the Ints model. The table includes columns for Name, Type, Description, and Notes, but contains no actual property data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Installing Pimple 2 C Implementation\nDESCRIPTION: Commands to compile and install the Pimple 2 C implementation. This process involves using phpize to prepare the PHP environment, configuring the build, compiling the code, and installing it.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/ext/pimple/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\n> phpize\n> ./configure\n> make\n> make install\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Number Types in Python with Swagger API\nDESCRIPTION: Demonstrates how to test serialization of outer number types. The example creates a FakeApi instance, sends a number value as a post body, and handles the API response or any exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterNumber() # OuterNumber | Input number as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_number_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_number_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Pet Model Property Definitions - Markdown\nDESCRIPTION: Defines the core properties of the Pet model including data types, descriptions and optionality flags. Properties include id, category, name, photoUrls, tags and status fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**category** | [**Category**](Category.md) |  | [optional] \n**name** | **String** |  | \n**photoUrls** | **[String]** |  | \n**tags** | [**[Tag]**](Tag.md) |  | [optional] \n**status** | **String** | pet status in the store | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the ModelReturn Module in Perl\nDESCRIPTION: Shows how to load the WWW::SwaggerClient::Object::ModelReturn module in a Perl application. This module is part of the Swagger Client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ModelReturn;\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition\nDESCRIPTION: Defines the possible values for the enumString property including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `UPPER` (value: `\"UPPER\"`)\n* `lower` (value: `\"lower\"`)\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Using FakeApi to Test Endpoint Parameters in C#\nDESCRIPTION: Example of using FakeApi to test various parameter types including numeric, string, binary, and date values. The example demonstrates how to configure basic HTTP authentication and call the API with required and optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEndpointParametersExample\n    {\n        public void main()\n        {\n            // Configure HTTP basic authorization: http_basic_test\n            Configuration.Default.Username = \"YOUR_USERNAME\";\n            Configuration.Default.Password = \"YOUR_PASSWORD\";\n\n            var apiInstance = new FakeApi();\n            var number = 8.14;  // decimal? | None\n            var _double = 1.2;  // double? | None\n            var patternWithoutDelimiter = patternWithoutDelimiter_example;  // string | None\n            var _byte = B;  // byte[] | None\n            var integer = 56;  // int? | None (optional) \n            var int32 = 56;  // int? | None (optional) \n            var int64 = 789;  // long? | None (optional) \n            var _float = 3.4;  // float? | None (optional) \n            var _string = _string_example;  // string | None (optional) \n            var binary = B;  // byte[] | None (optional) \n            var date = 2013-10-20;  // DateTime? | None (optional) \n            var dateTime = 2013-10-20T19:20:30+01:00;  // DateTime? | None (optional) \n            var password = password_example;  // string | None (optional) \n            var callback = callback_example;  // string | None (optional) \n\n            try\n            {\n                // Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n                apiInstance.TestEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, _string, binary, date, dateTime, password, callback);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEndpointParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum in Markdown\nDESCRIPTION: This snippet defines the EnumNumberEnum, which includes decimal values 1.1 and -1.2. It's used to specify allowed values for number enums.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"EnumNumberEnum\"></a>\n## Enum: EnumNumberEnum\n\n\n* `_11` (value: `1.1`)\n\n* `_12` (value: `-1.2`)\n```\n\n----------------------------------------\n\nTITLE: Installing Composer Dependencies for Slim PHP Application\nDESCRIPTION: This snippet shows how to navigate to the Slim directory and install the required dependencies using Composer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/slim/slim/example/README.md#2025-04-20_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n$ cd Slim\n$ composer install\n```\n\n----------------------------------------\n\nTITLE: Boolean Serialization Example - Python\nDESCRIPTION: Example showing how to serialize outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint and handles the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterBoolean() # OuterBoolean | Input boolean as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_boolean_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_boolean_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Commands for installing dependencies and building typescript sources\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table in Markdown for MixedPropertiesAndAdditionalPropertiesClass\nDESCRIPTION: Markdown table describing the properties of MixedPropertiesAndAdditionalPropertiesClass, including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# MixedPropertiesAndAdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Model Properties Table in Markdown\nDESCRIPTION: A markdown table detailing the properties of the OuterComposite model class, including their names, types, descriptions, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**myString** | [**OuterString**](OuterString.md) |  | [optional] \n**myBoolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the Order Model Package in Dart\nDESCRIPTION: Imports the Swagger API package to access the Order model in a Dart application. This import statement is required before using any of the Order model's functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties Table in Markdown for Swagger Codegen\nDESCRIPTION: This Markdown table defines properties for a model named 'Name'. It specifies the property names, their data types, and whether they are optional. The table includes four properties: a required 'name' of type Integer, and three optional properties 'snakeCase', 'property', and '_123Number'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: String Enum Values Definition\nDESCRIPTION: Defines the possible values for the EnumStringEnum and EnumStringRequiredEnum types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown Table\nDESCRIPTION: Markdown table defining the properties of a Tag model, including their types and optionality. Contains two properties: id (Long) and name (String), both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Markdown for Swagger\nDESCRIPTION: This snippet defines the properties of the List model using a Markdown table. It specifies a single optional property named '_123List' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting Petstore Server URL\nDESCRIPTION: Configuration of the base server URL for API operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_4\n\nLANGUAGE: ada\nCODE:\n```\n  C.Set_Server (\"http://petstore.swagger.io/v2\");\n```\n\n----------------------------------------\n\nTITLE: Executing API Request for Testing Class Name in Snake Case using Java\nDESCRIPTION: This code snippet demonstrates how to execute an API request to test class name in snake case using the FakeClassnameTags123Api. It imports necessary classes, sets up the API client, and sends a PATCH request with a body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeClassnameTags123Api api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fakeClassnameTags123();\n\napi.testClassname()\n    .body(body).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table for ArrayOfNumberOnly Class\nDESCRIPTION: Markdown table documenting the arrayNumber property which is an optional List of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List<BigDecimal>**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting Base Path Configuration\nDESCRIPTION: Different approaches to configure the API base path in Angular applications\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown for Swagger\nDESCRIPTION: Specifies the properties of a Cat model using Markdown table syntax. The model has a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Documentation\nDESCRIPTION: URL to access the generated Swagger JSON documentation once the server is running.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/java8/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger JSON Definition\nDESCRIPTION: URL to access the Swagger API definition in JSON format after starting the server. This endpoint returns the complete OpenAPI specification for the service.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey1-useTags/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID using Swagger Store API in Dart\nDESCRIPTION: This example demonstrates how to delete a purchase order by its ID using the Store API. It includes error handling and specifies that valid IDs are integers less than 1000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = orderId_example; // String | ID of the order that needs to be deleted\n\ntry { \n    api_instance.deleteOrder(orderId);\n} catch (e) {\n    print(\"Exception when calling StoreApi->deleteOrder: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Properties in Markdown Table\nDESCRIPTION: Markdown table defining properties of a Capitalization class with different naming conventions. All properties are of String type and marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger\nDESCRIPTION: This snippet defines the properties of the Animal model for the Swagger Petstore API. It specifies two properties: className (required) and color (optional with a default value).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Username\nDESCRIPTION: Fetches user details by username. Returns User object containing user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Bash\nDESCRIPTION: Command example for testing JSON serialization of form data. This endpoint accepts two string parameters (param and param2) and handles them as JSON form data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testJsonFormData\n```\n\n----------------------------------------\n\nTITLE: Logging out a User in Dart\nDESCRIPTION: Example of how to log out the currently logged-in user using the logoutUser method. This ends the user's current session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\n\ntry { \n    api_instance.logoutUser();\n} catch (e) {\n    print(\"Exception when calling UserApi->logoutUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Server with Maven and Jetty\nDESCRIPTION: Command to clean, package, and run the swagger-generated server using Maven with the Jetty plugin.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/java8/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Swagger\nDESCRIPTION: This snippet defines the properties of the Tag model in a Swagger API specification. It includes two properties: 'Id' of type long and 'Name' of type string, both optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Tag\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Name** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Values for SwaggerPetstore API\nDESCRIPTION: Enumerates the three possible values of OuterEnum in the SwaggerPetstore API: 'placed', 'approved', and 'delivered'. Each value is defined with its string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Finding Pet by ID in Markdown\nDESCRIPTION: This snippet describes the API endpoint for finding a pet by its ID. It specifies the HTTP method, parameters, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n# **pet_by_id**\n> pet_by_id (pet_id: INTEGER_64 ): detachable PET\n\t\n\nFind pet by ID\n\nReturns a single pet\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **INTEGER_64**| ID of pet to return | \n\n### Return type\n\n[**PET**](Pet.md)\n\n### Authorization\n\n[api_key](../README.md#api_key)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Swagger API\nDESCRIPTION: Example code for deleting a user by username. This operation can only be performed by authenticated users and requires a valid username parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = UserApi()\nval username : kotlin.String = username_example // kotlin.String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username)\n} catch (e: ClientException) {\n    println(\"4xx response calling UserApi#deleteUser\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling UserApi#deleteUser\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties in OpenAPI/Swagger\nDESCRIPTION: Markdown table defining the NumberOnly model with a single property 'justNumber' of type BigDecimal. The property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Placing Pet Order Using CLI\nDESCRIPTION: Command line example for placing a new pet order. Requires an Order object in the request body containing the order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli placeOrder\n```\n\n----------------------------------------\n\nTITLE: Including Ruby Code Directly\nDESCRIPTION: Command to include the Ruby code directly in a script using the -I flag to specify the library path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nruby -Ilib script.rb\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore REST Assured to Remote Maven Repository\nDESCRIPTION: This command deploys the API client library to a remote Maven repository. It requires proper configuration of the remote repository settings.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Java FakeApi String Serialization Example\nDESCRIPTION: Example code demonstrating serialization of outer string types using the FakeApi client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.fakeOuterStringSerialize().execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Specifies the properties of an Animal model including className (required) and color (optional). This definition is used to structure API requests and responses involving animal data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Invalid Username Error\nDESCRIPTION: JSON schema defining the response structure when an invalid username is supplied to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_21\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"Invalid username supplied\"\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of how to use the fakeOuterNumberSerialize method to test serialization of outer number types. The method accepts an optional OuterNumber object as a request body and returns an OuterNumber response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterNumber() // OuterNumber | Input number as post body\n};\napiInstance.fakeOuterNumberSerialize(opts).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Executing Maven Package in Docker for Swagger Codegen\nDESCRIPTION: This snippet demonstrates how to clone the Swagger Codegen repository and execute 'mvn package' using the run-in-docker.sh script. This maps the local repository to /gen in the Docker container and the local Maven repository to the appropriate container location.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/docker.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/swagger-api/swagger-codegen\ncd swagger-codegen\n./run-in-docker.sh mvn package\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished petstore-integration-test Package\nDESCRIPTION: npm command to install an unpublished version of the petstore-integration-test package from a local path. This method is not recommended for production use.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/petstore-expected/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Loading ApiResponse Model Package in Dart\nDESCRIPTION: This code snippet demonstrates how to import the Swagger API package in Dart to use the ApiResponse model. It's a prerequisite for working with the ApiResponse object in your Dart code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Importing CommonJS Module from Local Directory\nDESCRIPTION: Example of importing the generated module from a local directory using CommonJS syntax.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-aurelia/default/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport localName = require('./symlinkDir')';\n```\n\n----------------------------------------\n\nTITLE: Sending GET Request to Retrieve Inventory\nDESCRIPTION: Endpoint for retrieving pet inventories by status. Returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_9\n\nLANGUAGE: markup\nCODE:\n```\nget /store/inventory\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum in Markdown\nDESCRIPTION: This snippet defines the EnumStringEnum, which includes string values for 'UPPER', 'lower', and an empty string. It's used to specify allowed values for string enums.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"EnumStringEnum\"></a>\n## Enum: EnumStringEnum\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values\nDESCRIPTION: Enum definition table for JustSymbolEnum showing comparison operator symbols.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \">=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values\nDESCRIPTION: Defines the possible string enum values including UPPER, lower, and empty string cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Dart Client Locally\nDESCRIPTION: YAML configuration for installing the Swagger Petstore Dart client package from a local directory in a Dart/Flutter project's pubspec.yaml file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/README.md#2025-04-20_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  swagger:\n    path: /path/to/swagger\n```\n\n----------------------------------------\n\nTITLE: ModelLens Module with Lens Definitions for SwaggerPetstore Models\nDESCRIPTION: Defines lens accessors for Swagger Petstore model properties. These lenses provide functional getters and setters for accessing and updating model fields in a composable way.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_54\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.ModelLens\n\n-- | <a>additionalPropertiesClassMapProperty</a> Lens\nadditionalPropertiesClassMapPropertyL :: Lens_' AdditionalPropertiesClass (Maybe (Map String Text))\n\n-- | <a>additionalPropertiesClassMapOfMapProperty</a> Lens\nadditionalPropertiesClassMapOfMapPropertyL :: Lens_' AdditionalPropertiesClass (Maybe (Map String (Map String Text)))\n\n-- | <a>animalClassName</a> Lens\nanimalClassNameL :: Lens_' Animal (Text)\n\n-- | <a>animalColor</a> Lens\nanimalColorL :: Lens_' Animal (Maybe Text)\n\n-- | <a>apiResponseCode</a> Lens\napiResponseCodeL :: Lens_' ApiResponse (Maybe Int)\n\n-- | <a>apiResponseType</a> Lens\napiResponseTypeL :: Lens_' ApiResponse (Maybe Text)\n\n-- | <a>apiResponseMessage</a> Lens\napiResponseMessageL :: Lens_' ApiResponse (Maybe Text)\n\n-- | <a>arrayOfArrayOfNumberOnlyArrayArrayNumber</a> Lens\narrayOfArrayOfNumberOnlyArrayArrayNumberL :: Lens_' ArrayOfArrayOfNumberOnly (Maybe [[Double]]))\n\n-- | <a>arrayOfNumberOnlyArrayNumber</a> Lens\narrayOfNumberOnlyArrayNumberL :: Lens_' ArrayOfNumberOnly (Maybe [Double])\n\n-- | <a>arrayTestArrayOfString</a> Lens\narrayTestArrayOfStringL :: Lens_' ArrayTest (Maybe [Text])\n\n-- | <a>arrayTestArrayArrayOfInteger</a> Lens\narrayTestArrayArrayOfIntegerL :: Lens_' ArrayTest (Maybe [[Integer]]))\n\n-- | <a>arrayTestArrayArrayOfModel</a> Lens\narrayTestArrayArrayOfModelL :: Lens_' ArrayTest (Maybe [[ReadOnlyFirst]]))\n\n-- | <a>capitalizationSmallCamel</a> Lens\ncapitalizationSmallCamelL :: Lens_' Capitalization (Maybe Text)\n\n-- | <a>capitalizationCapitalCamel</a> Lens\ncapitalizationCapitalCamelL :: Lens_' Capitalization (Maybe Text)\n\n-- | <a>capitalizationSmallSnake</a> Lens\ncapitalizationSmallSnakeL :: Lens_' Capitalization (Maybe Text)\n\n-- | <a>capitalizationCapitalSnake</a> Lens\ncapitalizationCapitalSnakeL :: Lens_' Capitalization (Maybe Text)\n\n-- | <a>capitalizationScaEthFlowPoints</a> Lens\ncapitalizationScaEthFlowPointsL :: Lens_' Capitalization (Maybe Text)\n\n-- | <a>capitalizationAttName</a> Lens\ncapitalizationAttNameL :: Lens_' Capitalization (Maybe Text)\n\n-- | <a>categoryId</a> Lens\ncategoryIdL :: Lens_' Category (Maybe Integer)\n\n-- | <a>categoryName</a> Lens\ncategoryNameL :: Lens_' Category (Maybe Text)\n\n-- | <a>classModelClass</a> Lens\nclassModelClassL :: Lens_' ClassModel (Maybe Text)\n\n-- | <a>clientClient</a> Lens\nclientClientL :: Lens_' Client (Maybe Text)\n\n-- | <a>enumArraysJustSymbol</a> Lens\nenumArraysJustSymbolL :: Lens_' EnumArrays (Maybe E'JustSymbol)\n\n-- | <a>enumArraysArrayEnum</a> Lens\nenumArraysArrayEnumL :: Lens_' EnumArrays (Maybe [E'ArrayEnum])\n\n-- | <a>enumTestEnumString</a> Lens\nenumTestEnumStringL :: Lens_' EnumTest (Maybe E'EnumString)\n\n-- | <a>enumTestEnumInteger</a> Lens\nenumTestEnumIntegerL :: Lens_' EnumTest (Maybe E'EnumInteger)\n\n-- | <a>enumTestEnumNumber</a> Lens\nenumTestEnumNumberL :: Lens_' EnumTest (Maybe E'EnumNumber)\n\n-- | <a>enumTestOuterEnum</a> Lens\nenumTestOuterEnumL :: Lens_' EnumTest (Maybe OuterEnum)\n\n-- | <a>formatTestInteger</a> Lens\nformatTestIntegerL :: Lens_' FormatTest (Maybe Int)\n\n-- | <a>formatTestInt32</a> Lens\nformatTestInt32L :: Lens_' FormatTest (Maybe Int)\n\n-- | <a>formatTestInt64</a> Lens\nformatTestInt64L :: Lens_' FormatTest (Maybe Integer)\n\n-- | <a>formatTestNumber</a> Lens\nformatTestNumberL :: Lens_' FormatTest (Double)\n\n-- | <a>formatTestFloat</a> Lens\nformatTestFloatL :: Lens_' FormatTest (Maybe Float)\n\n-- | <a>formatTestDouble</a> Lens\nformatTestDoubleL :: Lens_' FormatTest (Maybe Double)\n\n-- | <a>formatTestString</a> Lens\nformatTestStringL :: Lens_' FormatTest (Maybe Text)\n\n-- | <a>formatTestByte</a> Lens\nformatTestByteL :: Lens_' FormatTest (ByteArray)\n\n-- | <a>formatTestBinary</a> Lens\nformatTestBinaryL :: Lens_' FormatTest (Maybe Binary)\n\n-- | <a>formatTestDate</a> Lens\nformatTestDateL :: Lens_' FormatTest (Date)\n\n-- | <a>formatTestDateTime</a> Lens\nformatTestDateTimeL :: Lens_' FormatTest (Maybe DateTime)\n\n-- | <a>formatTestUuid</a> Lens\nformatTestUuidL :: Lens_' FormatTest (Maybe Text)\n\n-- | <a>formatTestPassword</a> Lens\nformatTestPasswordL :: Lens_' FormatTest (Text)\n\n-- | <a>hasOnlyReadOnlyBar</a> Lens\nhasOnlyReadOnlyBarL :: Lens_' HasOnlyReadOnly (Maybe Text)\n\n-- | <a>hasOnlyReadOnlyFoo</a> Lens\nhasOnlyReadOnlyFooL :: Lens_' HasOnlyReadOnly (Maybe Text)\n\n-- | <a>mapTestMapMapOfString</a> Lens\nmapTestMapMapOfStringL :: Lens_' MapTest (Maybe (Map String (Map String Text)))\n\n-- | <a>mapTestMapOfEnumString</a> Lens\nmapTestMapOfEnumStringL :: Lens_' MapTest (Maybe (Map String E'Inner))\n\n-- | <a>mixedPropertiesAndAdditionalPropertiesClassUuid</a> Lens\nmixedPropertiesAndAdditionalPropertiesClassUuidL :: Lens_' MixedPropertiesAndAdditionalPropertiesClass (Maybe Text)\n\n-- | <a>mixedPropertiesAndAdditionalPropertiesClassDateTime</a> Lens\nmixedPropertiesAndAdditionalPropertiesClassDateTimeL :: Lens_' MixedPropertiesAndAdditionalPropertiesClass (Maybe DateTime)\n\n-- | <a>mixedPropertiesAndAdditionalPropertiesClassMap</a> Lens\nmixedPropertiesAndAdditionalPropertiesClassMapL :: Lens_' MixedPropertiesAndAdditionalPropertiesClass (Maybe (Map String Animal))\n\n-- | <a>model200ResponseName</a> Lens\nmodel200ResponseNameL :: Lens_' Model200Response (Maybe Int)\n\n-- | <a>model200ResponseClass</a> Lens\nmodel200ResponseClassL :: Lens_' Model200Response (Maybe Text)\n\n-- | <a>modelList123List</a> Lens\nmodelList123ListL :: Lens_' ModelList (Maybe Text)\n\n-- | <a>modelReturnReturn</a> Lens\nmodelReturnReturnL :: Lens_' ModelReturn (Maybe Int)\n\n-- | <a>nameName</a> Lens\nnameNameL :: Lens_' Name (Int)\n\n-- | <a>nameSnakeCase</a> Lens\nnameSnakeCaseL :: Lens_' Name (Maybe Int)\n\n-- | <a>nameProperty</a> Lens\nnamePropertyL :: Lens_' Name (Maybe Text)\n\n-- | <a>name123Number</a> Lens\nname123NumberL :: Lens_' Name (Maybe Int)\n\n-- | <a>numberOnlyJustNumber</a> Lens\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Capitalization model using a Markdown table. Each property is defined with its name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  | [optional] \n**capitalCamel** | **String** |  | [optional] \n**smallSnake** | **String** |  | [optional] \n**capitalSnake** | **String** |  | [optional] \n**sCAETHFlowPoints** | **String** |  | [optional] \n**ATT_NAME** | **String** | Name of the pet  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories in Python using Petstore API\nDESCRIPTION: This snippet shows how to retrieve pet inventories by status using the StoreApi. It requires API key authorization and includes error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.StoreApi(petstore_api.ApiClient(configuration))\n\ntry:\n    # Returns pet inventories by status\n    api_response = api_instance.get_inventory()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling StoreApi->get_inventory: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Swagger Codegen\nDESCRIPTION: A Markdown table that defines the properties of a Name model for use in Swagger Codegen. It specifies property names, data types, descriptions, and whether they are optional or required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Orders by ID in Kotlin using Store API\nDESCRIPTION: Example of fetching a purchase order by ID. Valid for integer IDs <= 5 or > 10. Other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\nval orderId : kotlin.Long = 789 // kotlin.Long | ID of pet that needs to be fetched\ntry {\n    val result : Order = apiInstance.getOrderById(orderId)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#getOrderById\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getOrderById\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Installing devtools Package in R\nDESCRIPTION: This snippet checks if the devtools package is installed and installs it if not. The devtools package is required to build the API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/R/README.md#2025-04-20_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nif(!require(devtools)) { install.packages(\"devtools\") }\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumTest model using a markdown table. It includes the property names, their types, and optional notes. The properties cover various enum types including string, integer, float, and a custom OuterEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enum_string** | **str** |  | [optional] \n**enum_string_required** | **str** |  | \n**enum_integer** | **int** |  | [optional] \n**enum_number** | **float** |  | [optional] \n**outer_enum** | [**OuterEnum**](OuterEnum.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: ArrayTest Model Properties Table\nDESCRIPTION: Markdown table documenting the properties of the ArrayTest class, including property names, types, descriptions and optional status. The properties include arrays of strings, nested arrays of integers, and nested arrays of ReadOnlyFirst model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Animal Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the Animal model, including property names, types, descriptions and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | [default to null]\n**Color** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order by ID in Java\nDESCRIPTION: Example code for deleting a purchase order using its ID. This endpoint works with integer IDs less than 1000, and will generate API errors for values above 1000 or non-integers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing AWS HTTP Client\nDESCRIPTION: Code to initialize the HTTP client using AWS (Ada Web Server) implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_2\n\nLANGUAGE: ada\nCODE:\n```\n   Util.Http.Clients.Web.Register;\n```\n\n----------------------------------------\n\nTITLE: Order Model Properties Table\nDESCRIPTION: Markdown table defining the properties, types, descriptions and optional settings for the Order model in Swagger. Documents the data structure including IDs, dates, quantities and status fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**PetId** | **long?** |  | [optional] \n**Quantity** | **int?** |  | [optional] \n**ShipDate** | **DateTime?** |  | [optional] \n**Status** | **string** | Order Status | [optional] \n**Complete** | **bool?** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for Swagger Codegen\nDESCRIPTION: Specifies the properties of a Tag object using a markdown table. The properties include an optional Long id and an optional String name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: MapTest Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the MapTest model, including nested maps and enum string mappings with optional flags\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **map_map_of_string** | [**map[string,map[string,string]]**](map.md) |  | [optional] |\n| **map_of_enum_string** | **map[string,string]** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Networking with OMGHTTPURLRQ and PromiseKit\nDESCRIPTION: This Swift code snippet demonstrates using OMGHTTPURLRQ with PromiseKit for network requests. It shows how to make a POST request, handle the JSON response as a dictionary, and catch errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_4\n\nLANGUAGE: swift\nCODE:\n```\n// pod 'PromiseKit/OMGHTTPURLRQ'\n// https://github.com/PromiseKit/OMGHTTPURLRQ\nURLSession.POST(\"http://example.com\").asDictionary().then { json in\n    //…\n}.catch { error in\n    //…\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Ints Enum in SwaggerPetstore\nDESCRIPTION: This code snippet defines an enumeration called 'Ints' with integer values from 0 to 6. Each enum value is represented as a string literal with an underscore prefix, likely to avoid naming conflicts or to distinguish them as enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Ints\n\n## Enum\n\n\n* `_0` (value: `0`)\n\n* `_1` (value: `1`)\n\n* `_2` (value: `2`)\n\n* `_3` (value: `3`)\n\n* `_4` (value: `4`)\n\n* `_5` (value: `5`)\n\n* `_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of the Dog model class. Specifies a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Fetch Client\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources into JavaScript.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-fetch/builds/es6-target/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Using NPM Link in Consumer Project\nDESCRIPTION: Command for linking to the previously created npm link in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm link \n```\n\n----------------------------------------\n\nTITLE: Angular Module Integration with Custom Configuration\nDESCRIPTION: Setup to import the API module with custom configuration parameters using forRoot pattern.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite Objects in Python with Swagger API\nDESCRIPTION: Demonstrates how to test serialization of objects with outer number type. Creates an FakeApi instance, sends a composite object as a post body, and handles the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterComposite() # OuterComposite | Input composite as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_composite_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_composite_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Running Examples in HTTPS Mode\nDESCRIPTION: Command to run the server example with HTTPS enabled, using certificates from the examples directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rust-server/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncargo run --example server -- --https\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Petstore Server on Linux/OS X\nDESCRIPTION: Shell command to build the Swagger Petstore server on Linux or OS X systems. This command executes the build script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-interface-controller/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nsh build.sh\n```\n\n----------------------------------------\n\nTITLE: Installing Python Package from GitHub Repository\nDESCRIPTION: Instructions for installing the Python package directly from a GitHub repository using pip. This approach allows users to install the latest version from source without publishing to PyPI.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n\n----------------------------------------\n\nTITLE: Configuring API Base Path with Angular CLI\nDESCRIPTION: Example of setting the API base path using environment files and Angular CLI configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Retrofit2 Client to Local Maven Repository\nDESCRIPTION: Command to install the Swagger Petstore Retrofit2 client library to your local Maven repository. This is the simplest way to make the library available for your local projects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Defining Swagger Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the SpecialModelName model. Contains a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SpecialModelName\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model Operations in C#\nDESCRIPTION: Example code for testing the \"client\" model with the FakeApi. The method requires a ModelClient object as input and returns a ModelClient response from the API after processing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClientModelExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test \\\"client\\\" model\n                ModelClient result = apiInstance.TestClientModel(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestClientModel: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Ruby Gem for Swagger Petstore API\nDESCRIPTION: Commands to build the Ruby gem for the Petstore API SDK. This process involves creating the gem file and then installing it locally or publishing it to a gem hosting service.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngem build petstore.gemspec\n```\n\nLANGUAGE: shell\nCODE:\n```\ngem install ./petstore-1.0.0.gem\n```\n\n----------------------------------------\n\nTITLE: Placing New Pet Orders in C#\nDESCRIPTION: Creates a new order for a pet using the StoreApi. Accepts an Order object as input and returns the created order details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class PlaceOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var body = new Order(); // Order | order placed for purchasing the pet\n\n            try\n            {\n                // Place an order for a pet\n                Order result = apiInstance.PlaceOrder(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.PlaceOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of ModelApiResponse class. Includes three optional fields: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **code** | **Integer** |  |  [optional] |\n| **type** | **String** |  |  [optional] |\n| **message** | **String** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for Name Model in Swagger\nDESCRIPTION: This markdown table defines the properties of the Name model class. It includes the property names, their types, descriptions, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Name** | **int?** |  | \n**SnakeCase** | **int?** |  | [optional] \n**Property** | **string** |  | [optional] \n**_123Number** | **int?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Pet Properties in Kotlin\nDESCRIPTION: Specifies the properties of a Pet object, including id, category, name, photoUrls, tags, and status. Some fields are optional, and the status is defined as an enum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Pet\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **kotlin.Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **kotlin.String** |  | \n**photoUrls** | **kotlin.Array&lt;kotlin.String&gt;** |  | \n**tags** | [**kotlin.Array&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**inline**](#Status) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Maven Dependency Configuration for Swagger Codegen 3.X\nDESCRIPTION: Maven dependency configuration for adding Swagger Codegen 3.X maven plugin to a project. Uses groupId io.swagger.codegen.v3 with version 3.0.61.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/versioning.md#2025-04-20_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger.codegen.v3</groupId>\n    <artifactId>swagger-codegen-maven-plugin</artifactId>\n    <version>3.0.61</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining Services in Pimple Container\nDESCRIPTION: Shows how to define services using anonymous functions. Services are objects that perform specific tasks in your application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n// define some services\n$container['session_storage'] = function ($c) {\n    return new SessionStorage('SESSION_ID');\n};\n\n$container['session'] = function ($c) {\n    return new Session($c['session_storage']);\n};\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a User model using a markdown table. It includes property names, types, descriptions, and optional flags. The properties cover basic user information and authentication details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**Username** | **string** |  | [optional] [default to null]\n**FirstName** | **string** |  | [optional] [default to null]\n**LastName** | **string** |  | [optional] [default to null]\n**Email** | **string** |  | [optional] [default to null]\n**Password** | **string** |  | [optional] [default to null]\n**Phone** | **string** |  | [optional] [default to null]\n**UserStatus** | **int32** | User Status | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Properties in Markdown\nDESCRIPTION: Documentation table that defines the properties of the ArrayTest class. It includes three array-type properties: a simple string array, a nested integer array, and a nested model array. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order Status in SwaggerPetstore API\nDESCRIPTION: This snippet defines an enumeration for the Order Status in the SwaggerPetstore API. It specifies three possible values for the status: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\n\n\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties Schema in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of the Order model including field names, data types, descriptions and optional flags. Specifies the structure for order-related data in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**petId** | **Number** |  | [optional] \n**quantity** | **Number** |  | [optional] \n**shipDate** | **Date** |  | [optional] \n**status** | **String** | Order Status | [optional] \n**complete** | **Boolean** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values in Markdown\nDESCRIPTION: Table defining the possible values for the EnumStringRequiredEnum type, including 'UPPER', 'lower', and empty string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\nEMPTY | &quot;&quot;\n```\n\n----------------------------------------\n\nTITLE: Making a Code Injection Test Request with WWW::SwaggerClient::FakeApi\nDESCRIPTION: Demonstrates making a request to the code injection test endpoint. This example shows proper parameter handling and exception management when using the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $test_code_inject_*/_'_\"_=end____\\r\\n_\\n_\\r = 'test_code_inject_*/_\\'_\"_=end____\\r\\n_\\n_\\r_example'; # string | To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n\neval { \n    $api_instance->test_code_inject____end__rn_n_r(test_code_inject_*/_'_\"_=end____\\r\\n_\\n_\\r => $test_code_inject_*/_'_\"_=end____\\r\\n_\\n_\\r);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_code_inject____end__rn_n_r: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties for 200 Response in Markdown\nDESCRIPTION: Defines the properties of a '200Response' model class using a markdown table. The model has two optional properties: 'name' (Integer) and 'propertyClass' (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum in Markdown\nDESCRIPTION: This snippet defines the enum values for the ArrayEnumEnum, which are used by the 'arrayEnum' property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"[ArrayEnumEnum]\"></a>\n## Enum: [ArrayEnumEnum]\n\n\n* `fish` (value: `\"fish\"`)\n\n* `crab` (value: `\"crab\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Type Class Instances for Swagger Petstore Models in Haskell\nDESCRIPTION: This snippet defines various type class instances for Swagger Petstore models, including ToJSON, FromJSON, ToHttpApiData, FromHttpApiData, and MimeRender. These instances enable JSON serialization/deserialization and HTTP API data conversion for the models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_41\n\nLANGUAGE: Haskell\nCODE:\n```\ninstance Data.Aeson.Types.ToJSON.ToJSON SwaggerPetstore.Model.E'EnumQueryInteger\ninstance Data.Aeson.Types.FromJSON.FromJSON SwaggerPetstore.Model.E'EnumQueryInteger\ninstance Web.Internal.HttpApiData.ToHttpApiData SwaggerPetstore.Model.E'EnumQueryInteger\ninstance Web.Internal.HttpApiData.FromHttpApiData SwaggerPetstore.Model.E'EnumQueryInteger\ninstance SwaggerPetstore.MimeTypes.MimeRender SwaggerPetstore.MimeTypes.MimeMultipartFormData SwaggerPetstore.Model.E'EnumQueryInteger\n\n-- ... (similar instances for other models)\n\ninstance Data.Aeson.Types.FromJSON.FromJSON SwaggerPetstore.Model.AdditionalPropertiesClass\ninstance Data.Aeson.Types.ToJSON.ToJSON SwaggerPetstore.Model.AdditionalPropertiesClass\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite in Java\nDESCRIPTION: This code snippet shows how to use the fakeOuterCompositeSerialize method of the FakeApi class to test serialization of an object with outer number type. It demonstrates creating an instance of FakeApi, calling the method with an OuterComposite object, and handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Building Package Dependencies\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the properties of the EnumTest class including enumString, enumStringRequired, enumInteger, enumNumber, and outerEnum fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | **String** |  | [optional] \n**enumStringRequired** | **String** |  | \n**enumInteger** | **Number** |  | [optional] \n**enumNumber** | **Number** |  | [optional] \n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines an enum named 'Ints' with integer values from 0 to 6. Each enum value is represented as a separate bullet point with its corresponding integer value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Configuring CocoaPods for RxSwift Integration in Swift\nDESCRIPTION: This Podfile configuration demonstrates how to integrate RxSwift and RxCocoa into a project using CocoaPods. It also includes RxBlocking and RxTest for testing purposes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Ruby\nCODE:\n```\n# Podfile\nuse_frameworks!\n\ntarget 'YOUR_TARGET_NAME' do\n    pod 'RxSwift',    '~> 3.0'\n    pod 'RxCocoa',    '~> 3.0'\nend\n\n# RxTests and RxBlocking make the most sense in the context of unit/integration tests\ntarget 'YOUR_TESTING_TARGET' do\n    pod 'RxBlocking', '~> 3.0'\n    pod 'RxTest',     '~> 3.0'\nend\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Schema in Markdown\nDESCRIPTION: A markdown table that defines the properties of the ArrayOfArrayOfNumberOnly model. The model has a single property 'ArrayArrayNumber' which is a two-dimensional array of float32 values, marked as optional with a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | [**[][]float32**](array.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Get Inventory Example - Kotlin\nDESCRIPTION: Example code demonstrating how to retrieve pet inventories by status. Returns a map of status codes to quantities. Requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nval apiInstance = StoreApi()\ntry {\n    val result : kotlin.collections.Map<kotlin.String, kotlin.Int> = apiInstance.getInventory()\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling StoreApi#getInventory\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Client Properties in SwaggerPetstore API (Markdown)\nDESCRIPTION: This markdown table defines the 'client' property of the Client object in the SwaggerPetstore API. The property is of type String and is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Petstore API using Ruby\nDESCRIPTION: This snippet demonstrates creating multiple users using a list input. It utilizes the Petstore gem and invokes the create_users_with_list_input method of the UserApi class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::UserApi.new\n\nbody = [Petstore::User.new] # Array<User> | List of user object\n\n\nbegin\n  #Creates list of users with given input array\n  api_instance.create_users_with_list_input(body)\nrescue Petstore::ApiError => e\n  puts \"Exception when calling UserApi->create_users_with_list_input: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This markdown table defines the properties of a 'Name' model, including field names, data types, descriptions, and optional status. It includes fields for name, snake_case, property, and a numeric field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Cloning Swagger Codegen Repository in Bash\nDESCRIPTION: This command clones the Swagger Codegen repository from GitHub to the local machine.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/swagger-api/swagger-codegen\n```\n\n----------------------------------------\n\nTITLE: Importing the Order Model in Dart\nDESCRIPTION: Code snippet showing how to import the Swagger API package containing the Order model in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Status Enum for Pet Model in Markdown\nDESCRIPTION: This snippet defines the StatusEnum for the Pet model, listing the possible values for the pet's status in the store. It uses a markdown list format to present the enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\n\n\n* `available` (value: `\"available\"`)\n\n* `pending` (value: `\"pending\"`)\n\n* `sold` (value: `\"sold\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of the HasOnlyReadOnly model. Contains two optional string properties: bar and foo.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Type Instances in Haskell\nDESCRIPTION: Defines various type class instances for core data types used in the SwaggerPetstore API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_10\n\nLANGUAGE: haskell\nCODE:\n```\ninstance Control.DeepSeq.NFData SwaggerPetstore.Core.Binary\ninstance GHC.Classes.Ord SwaggerPetstore.Core.Binary\ninstance Data.Data.Data SwaggerPetstore.Core.Binary\ninstance GHC.Classes.Eq SwaggerPetstore.Core.Binary\ninstance Control.DeepSeq.NFData SwaggerPetstore.Core.ByteArray\ninstance GHC.Classes.Ord SwaggerPetstore.Core.ByteArray\ninstance Data.Data.Data SwaggerPetstore.Core.ByteArray\ninstance GHC.Classes.Eq SwaggerPetstore.Core.ByteArray\ninstance Data.Time.Format.FormatTime SwaggerPetstore.Core.Date\ninstance Data.Time.Format.Parse.ParseTime SwaggerPetstore.Core.Date\ninstance Control.DeepSeq.NFData SwaggerPetstore.Core.Date\ninstance GHC.Arr.Ix SwaggerPetstore.Core.Date\ninstance GHC.Classes.Ord SwaggerPetstore.Core.Date\ninstance Data.Data.Data SwaggerPetstore.Core.Date\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters with Python Petstore API Client\nDESCRIPTION: This snippet demonstrates how to initialize the FakeApi instance and call the test_endpoint_parameters method with various parameter types including floats, integers, strings, dates, and more. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.FakeApi(petstore_api.ApiClient(configuration))\nnumber = 8.14 # float | None\ndouble = 1.2 # float | None\npattern_without_delimiter = 'pattern_without_delimiter_example' # str | None\nbyte = 'B' # str | None\ninteger = 56 # int | None (optional)\nint32 = 56 # int | None (optional)\nint64 = 789 # int | None (optional)\n_float = 3.4 # float | None (optional)\nstring = 'string_example' # str | None (optional)\nbinary = 'B' # str | None (optional)\n_date = '2013-10-20' # date | None (optional)\ndate_time = '2013-10-20T19:20:30+01:00' # datetime | None (optional)\npassword = 'password_example' # str | None (optional)\nparam_callback = 'param_callback_example' # str | None (optional)\n\ntry:\n    # Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n    api_instance.test_endpoint_parameters(number, double, pattern_without_delimiter, byte, integer=integer, int32=int32, int64=int64, _float=_float, string=string, binary=binary, _date=_date, date_time=date_time, password=password, param_callback=param_callback)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_endpoint_parameters: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger PHP Client\nDESCRIPTION: This example shows how to delete a user by their username. This operation can only be performed by a logged-in user with appropriate permissions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$username = \"username_example\"; // string | The name that needs to be deleted\n\ntry {\n    $apiInstance->deleteUser($username);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->deleteUser: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Successful User Lookup\nDESCRIPTION: JSON schema defining the response structure for a successful user lookup operation, referencing the User model definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_24\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/User\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Maven Dependency Configuration\nDESCRIPTION: XML configuration to add the Swagger Petstore Android Volley dependency to a Maven project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/README.md#2025-04-20_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-android-volley</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enum Values\nDESCRIPTION: Defines constant string values for order status enum including placed, approved and delivered states. Used to track the lifecycle of an order in a standardized way.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table - Swagger Markdown Documentation\nDESCRIPTION: Markdown table defining the properties of the Category model class. Documents two properties: Id (nullable long) and Name (string), both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Name** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Deleting a Purchase Order using Swagger Petstore API in JavaScript\nDESCRIPTION: Example of how to delete a purchase order by ID using the Swagger Petstore JavaScript client. This endpoint works with integer IDs less than 1000, with higher values or non-integers generating API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\nlet orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\n\napiInstance.deleteOrder(orderId).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Cat model using a markdown table. It specifies a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing the Published jQuery TypeScript Petstore Package\nDESCRIPTION: Command to install the published package from npm registry as a dependency in your project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-jquery/npm/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/jquery-typescript-petstore@0.0.1 --save\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name in Snake Case with FakeClassnameTags123Api in Python\nDESCRIPTION: This snippet demonstrates how to use the test_classname method of the FakeClassnameTags123Api class. It sets up API key authorization, creates an instance of the API class, and makes a request to test class names in snake case. The method expects a Client object as input and returns a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key_query\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key_query'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key_query'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.FakeClassnameTags123Api(petstore_api.ApiClient(configuration))\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test class name in snake case\n    api_response = api_instance.test_classname(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeClassnameTags123Api->test_classname: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Using C# Namespaces for Swagger Petstore SDK\nDESCRIPTION: Example showing how to include the necessary namespaces from the Swagger SDK in a C# project. These namespaces provide access to the API clients, models, and helper classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Loading WWW::SwaggerClient::Object::SpecialModelName Module in Perl\nDESCRIPTION: This code snippet demonstrates how to load the SpecialModelName model package in a Perl script. It's typically used at the beginning of a script that needs to work with this specific model object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::SpecialModelName;\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags Using Bash CLI\nDESCRIPTION: Example showing how to find pets by tags using the petstore CLI. This endpoint accepts multiple comma-separated tag values as a parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli findPetsByTags  Specify as:  tags=\"value1,value2,...\"\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest model using a markdown table. It includes various data types such as integers, floats, strings, binary data, dates, and GUIDs, along with their optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Integer** | **int?** |  | [optional] |\n| **Int32** | **int?** |  | [optional] |\n| **Int64** | **long?** |  | [optional] |\n| **Number** | **decimal?** |  | |\n| **Float** | **float?** |  | [optional] |\n| **Double** | **double?** |  | [optional] |\n| **String** | **string** |  | [optional] |\n| **Byte** | **byte[]** |  | |\n| **Binary** | **byte[]** |  | [optional] |\n| **Date** | **DateTime?** |  | |\n| **DateTime** | **DateTime?** |  | [optional] |\n| **Uuid** | **Guid?** |  | [optional] |\n| **Password** | **string** |  | |\n```\n\n----------------------------------------\n\nTITLE: Accessing Request Timeline in Alamofire\nDESCRIPTION: This snippet shows how to access and print the Timeline object in Alamofire, which contains timing information about the request lifecycle including latency, request duration, and serialization time.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_34\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n         .validate()\n         .responseJSON { response in\n             print(response.timeline)\n         }\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Headers for Swagger API Requests\nDESCRIPTION: Defines the required HTTP headers for API communication. The Content-Type is set to form URL-encoded data and the server accepts JSON responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagPetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: http\nCODE:\n```\nContent-Type: application/x-www-form-urlencoded\nAccept: application/json\n```\n\n----------------------------------------\n\nTITLE: Using Multiple Swagger API Modules\nDESCRIPTION: Example of importing multiple API modules from different swagger files using aliases to avoid naming conflicts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Out a User with C# Swagger Client\nDESCRIPTION: This example demonstrates how to log out the current user session using the Swagger-generated C# client. It creates a UserApi instance and calls the LogoutUser method, with error handling for potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            \n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the MapTest class. It documents two map properties: mapMapOfString (a nested map of strings) and mapOfEnumString (a map with enum values), both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Enum Values in Swagger/OpenAPI\nDESCRIPTION: Declares an enumeration called ModelBoolean with two possible values: TRUE and FALSE, mapped to their corresponding boolean literals true and false. This is typically used in swagger-codegen for generating strongly-typed boolean enums in various target languages.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in SwaggerPetstore API using Markdown\nDESCRIPTION: This snippet defines the properties of the Dog model in the SwaggerPetstore API. It specifies a single property 'breed' of type String, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Values Definition\nDESCRIPTION: Defines the possible integer values for the EnumIntegerEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Using EventDispatcher for API Calls in Flash/ActionScript\nDESCRIPTION: This code demonstrates how to use the Swagger-generated Flash client library in an application. It shows the implementation of event handling for API responses using an EventDispatcher, including credential setup, event listener registration, and API method invocation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/flash/flash/README.txt#2025-04-20_snippet_0\n\nLANGUAGE: ActionScript\nCODE:\n```\n<fx:Script>\n<![CDATA[\n\n    // Import the different libraries you need\n    // ... \n\n    // Import the io.swagger libraries\n    import io.swagger.common.ApiUserCredentials;\n\timport io.swagger.event.ApiClientEvent;\n    import io.swagger.client.api.[[API]]; // Put your Api here.\n\n    // Variables\n\tprivate var cred:ApiUserCredentials;\n\tprivate var dispatcher:EventDispatcher;\n    private var myAPI:[[API]]; // Change [[API]] to be the real name\n\n    // Function that print in the console the message of the response\n    public function onEvent(event:ApiClientEvent):void {\n        // trace only prints when in debug mod. Be carefule about that.\t\t\n        trace(event.response.payload); \n\t}   \n\n    // Main function\n    public main():void {\n        // Define a dispatcher\n\t\tdispatcher = new EventDispatcher();\n        // Define the EventListener. Fill the [[function]] by the name of the function you have in\n        // the API file.  \n\t\tdispatcher.addEventListener([[function]], onEvent);\n\n        // To create the API, you need the ApiUserCredentials and the dispatcher.\n        cred = new ApiUserCredentials([[host]], [[basePath]] , [[apiToken]]); \n        // You can add more parameters. Go see the function in ApiUserCredential.as in io/swagger/common\n\n        // Create the API\n        myAPI = new [[API]](cred, dispatcher); // change [[API]] to be the real name\n        \n        // Now, you can use the API\n        myAPI.[[function]]([[PARAMETERS]]);\n        // Change [[function]] and add your parameters. Then, you will see the response in the console.\n    }     \n]]>\n</fx:Script>\n```\n\n----------------------------------------\n\nTITLE: Using test_classname Method in Python to Test Snake Case Naming\nDESCRIPTION: Example of using the test_classname method from FakeClassnameTags123Api to test class name in snake case. The code initializes the API client with API key authorization, creates an instance of the API class, and makes a PATCH request to the 'fake_classname_test' endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key_query\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key_query'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key_query'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.FakeClassnameTags123Api(petstore_api.ApiClient(configuration))\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test class name in snake case\n    api_response = api_instance.test_classname(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeClassnameTags123Api->test_classname: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Structure in Markdown\nDESCRIPTION: Documents the structure of the ArrayOfArrayOfNumberOnly model class, specifying its property 'arrayArrayNumber' which is a two-dimensional array of BigDecimal values. The property is marked as optional in the schema.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Animal Model Schema Definition in Markdown\nDESCRIPTION: Markdown table defining the properties of the Animal model class. Includes class_name as a required string property and color as an optional string property defaulting to 'red'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | **str** |  | \n**color** | **str** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using Dart\nDESCRIPTION: This snippet shows how to delete a pet from the store using the deletePet method. It requires OAuth2 authentication and accepts petId as a required parameter and apiKey as an optional parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | Pet id to delete\nvar apiKey = apiKey_example; // String | \n\ntry { \n    api_instance.deletePet(petId, apiKey);\n} catch (e) {\n    print(\"Exception when calling PetApi->deletePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Installing API Package in R\nDESCRIPTION: This snippet demonstrates how to install the API package using devtools. It assumes the working directory is set to the location of the API code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/R/README.md#2025-04-20_snippet_1\n\nLANGUAGE: R\nCODE:\n```\nlibrary(devtools)\ninstall(\".\")\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the OuterComposite model, including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**MyNumber** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**MyString** | [**OuterString**](OuterString.md) |  | [optional] \n**MyBoolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Schema in Markdown\nDESCRIPTION: Documents the ArrayOfArrayOfNumberOnly model's properties table, showing that it contains an optional property 'arrayArrayNumber' which is a nested array of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This Markdown table defines the properties of the MixedPropertiesAndAdditionalPropertiesClass. It includes three optional fields: uuid, dateTime, and map, with their respective types and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Order Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the Order model including their types and optional status. The table structure shows each property's name, data type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Petstore Server in Docker\nDESCRIPTION: Commands to build and run the Kotlin server in a Docker container, exposing port 8080.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/kotlin-server/ktor/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t kotlin-server .\ndocker run -p 8080:8080 kotlin-server\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Properties in Markdown\nDESCRIPTION: Defines the properties of a Pet object using a markdown table. Includes property names, types, descriptions, and optional flags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Client Model Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the Client model properties with name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in Ruby Petstore Module\nDESCRIPTION: Defines two map properties: map_map_of_string for nested string maps and map_of_enum_string for enum string mappings. Both properties are optional Hash objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nmap_map_of_string: Hash<String, Hash<String, String>>\nmap_of_enum_string: Hash<String, String>\n```\n\n----------------------------------------\n\nTITLE: Installing PromiseKit Extensions via CocoaPods\nDESCRIPTION: CocoaPods configuration for installing additional PromiseKit extensions for MapKit and CoreLocation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\npod \"PromiseKit/MapKit\"          # MKDirections().promise().then { /*…*/ }\npod \"PromiseKit/CoreLocation\"    # CLLocationManager.promise().then { /*…*/ }\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Properties Definition in Markdown\nDESCRIPTION: Markdown table defining the ModelReturn class property '_return' as an optional integer field. This is a standard Swagger model definition format used for code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Swagger/OpenAPI Schema\nDESCRIPTION: Markdown table defining the properties of a Tag model. Contains two optional fields: id (Long type) and name (String type).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Long** |  |  [optional]\n| **name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing API Client in ActionScript with EventDispatcher Pattern\nDESCRIPTION: This code snippet demonstrates how to set up and use the Flash client library in an application. It shows the implementation of an event-based approach using EventDispatcher to handle API responses, including setting up credentials, creating API instances, and handling response events.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/flash/README.txt#2025-04-20_snippet_0\n\nLANGUAGE: ActionScript\nCODE:\n```\n<fx:Script>\n<![CDATA[\n\n    // Import the different libraries you need\n    // ... \n\n    // Import the io.swagger libraries\n    import io.swagger.common.ApiUserCredentials;\n\timport io.swagger.event.ApiClientEvent;\n    import io.swagger.client.api.[[API]]; // Put your Api here.\n\n    // Variables\n\tprivate var cred:ApiUserCredentials;\n\tprivate var dispatcher:EventDispatcher;\n    private var myAPI:[[API]]; // Change [[API]] to be the real name\n\n    // Function that print in the console the message of the response\n    public function onEvent(event:ApiClientEvent):void {\n        // trace only prints when in debug mod. Be carefule about that.\t\t\n        trace(event.response.payload); \n\t}   \n\n    // Main function\n    public main():void {\n        // Define a dispatcher\n\t\tdispatcher = new EventDispatcher();\n        // Define the EventListener. Fill the [[function]] by the name of the function you have in\n        // the API file.  \n\t\tdispatcher.addEventListener([[function]], onEvent);\n\n        // To create the API, you need the ApiUserCredentials and the dispatcher.\n        cred = new ApiUserCredentials([[host]], [[basePath]] , [[apiToken]]); \n        // You can add more parameters. Go see the function in ApiUserCredential.as in io/swagger/common\n\n        // Create the API\n        myAPI = new [[API]](cred, dispatcher); // change [[API]] to be the real name\n        \n        // Now, you can use the API\n        myAPI.[[function]]([[PARAMETERS]]);\n        // Change [[function]] and add your parameters. Then, you will see the response in the console.\n    }     \n]]>\n</fx:Script>\n```\n\n----------------------------------------\n\nTITLE: Using npm link for Petstore Package\nDESCRIPTION: Commands to link the Petstore API package locally for development using npm link.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @swagger/angular2-typescript-petstore\n```\n\n----------------------------------------\n\nTITLE: Loading the Swagger API Package in Dart\nDESCRIPTION: Imports the necessary API package to use the UserApi functionalities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Running the Compiled Swagger API Server in Bash\nDESCRIPTION: Commands to navigate to the build directory and execute the compiled server binary. This starts the REST API server which will handle incoming HTTP requests according to the Swagger specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/pistache-server/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd build\n./server\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Codegen with Maven in Bash\nDESCRIPTION: This command builds the Swagger Codegen project using Maven, generating the necessary package files.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ mvn package\n```\n\n----------------------------------------\n\nTITLE: Enabling Bundle in Symfony Kernel\nDESCRIPTION: PHP code to register the SwaggerServerBundle in the Symfony application kernel.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// app/AppKernel.php\n\npublic function registerBundles()\n{\n    $bundles = array(\n        // ...\n        new Swagger\\Server\\SwaggerServerBundle(),\n        // ...\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Gradle Dependency for Swagger Petstore Client\nDESCRIPTION: Groovy snippet for adding the Swagger Petstore OkHttp4 Gson client library as a Gradle dependency in a project's build file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-okhttp4-gson:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Order Statuses in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values representing different order statuses. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Sending GET Request to Find Pets by Status\nDESCRIPTION: Endpoint for finding pets by their status. Accepts status values as query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\nget /pet/findByStatus\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Java Client Dependency in Gradle\nDESCRIPTION: Gradle dependency declaration for adding the Swagger Java client to a Gradle project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-java-client:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Order Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Order model including field names, data types, descriptions and optional attributes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**PetId** | **int64** |  | [optional] [default to null]\n**Quantity** | **int32** |  | [optional] [default to null]\n**ShipDate** | [**time.Time**](time.Time.md) |  | [optional] [default to null]\n**Status** | **string** | Order Status | [optional] [default to null]\n**Complete** | **bool** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties table for the AnimalFarm model. The table is currently empty, indicating that the model has no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Deleting User by Username - Java\nDESCRIPTION: Example code for deleting a user by their username. Can only be performed by logged-in users. Takes username as a string parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Slim Framework with Composer\nDESCRIPTION: Command line instruction for installing Slim Framework version 3.0 or newer using Composer. This is the recommended installation method and requires PHP 5.5.0 or newer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/slim/slim/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ composer require slim/slim \"^3.0\"\n```\n\n----------------------------------------\n\nTITLE: Protecting Parameters in Pimple\nDESCRIPTION: Demonstrates how to protect an anonymous function as a parameter using the protect() method, preventing it from being treated as a service definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$container['random_func'] = $container->protect(function () {\n    return rand();\n});\n```\n\n----------------------------------------\n\nTITLE: Sending GET Request to Retrieve Pet by ID\nDESCRIPTION: Endpoint for retrieving a single pet by its ID. Requires the pet ID as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_4\n\nLANGUAGE: markup\nCODE:\n```\nget /pet/{petId}\n```\n\n----------------------------------------\n\nTITLE: Defining Number Enum Values\nDESCRIPTION: Markdown table defining the possible decimal number values for EnumNumberEnum including 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: EnumTest Model Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the EnumTest model class, including property names, data types, descriptions and optional status notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **EnumString** | **string** |  | [optional] |\n| **EnumStringRequired** | **string** |  | |\n| **EnumInteger** | **int?** |  | [optional] |\n| **EnumNumber** | **double?** |  | [optional] |\n| **OuterEnum** | **OuterEnum** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Using the Swagger Petstore Bash Client\nDESCRIPTION: Examples of how to use the Bash client script for various operations, including making GET and POST requests, handling authentication, and previewing cURL commands.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Make sure the script has executable rights\n$ chmod u+x petstore-cli\n\n# Print the list of operations available on the service\n$ ./petstore-cli -h\n\n# Print the service description\n$ ./petstore-cli --about\n\n# Print detailed information about specific operation\n$ ./petstore-cli <operationId> -h\n\n# Make GET request\n./petstore-cli --host http://<hostname>:<port> --accept xml <operationId> <queryParam1>=<value1> <header_key1>:<header_value2>\n\n# Make GET request using arbitrary curl options (must be passed before <operationId>) to an SSL service using username:password\npetstore-cli -k -sS --tlsv1.2 --host https://<hostname> -u <user>:<password> --accept xml <operationId> <queryParam1>=<value1> <header_key1>:<header_value2>\n\n# Make POST request\n$ echo '<body_content>' | petstore-cli --host <hostname> --content-type json <operationId> -\n\n# Make POST request with simple JSON content, e.g.:\n# {\n#   \"key1\": \"value1\",\n#   \"key2\": \"value2\",\n#   \"key3\": 23\n# }\n$ echo '<body_content>' | petstore-cli --host <hostname> --content-type json <operationId> key1==value1 key2=value2 key3:=23 -\n\n# Preview the cURL command without actually executing it\n$ petstore-cli --host http://<hostname>:<port> --dry-run <operationid>\n```\n\n----------------------------------------\n\nTITLE: Initializing BigDecimal Number Constants\nDESCRIPTION: Defines a set of constant number values using Java's BigDecimal type. The constants represent the numbers 7 through 10 as immutable, arbitrary-precision decimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 = new BigDecimal(7)\nNUMBER_8 = new BigDecimal(8)\nNUMBER_9 = new BigDecimal(9)\nNUMBER_10 = new BigDecimal(10)\n```\n\n----------------------------------------\n\nTITLE: Generating Client Code from Local OpenAPI Spec File\nDESCRIPTION: This command shows how to specify a local OpenAPI Specification file as input for Swagger Codegen instead of calling a server endpoint. This is useful for offline development or CI/CD pipelines.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n-i ./modules/swagger-codegen/src/test/resources/2_0/petstore.json\n```\n\n----------------------------------------\n\nTITLE: Configuring API Base Path with Angular CLI\nDESCRIPTION: TypeScript code demonstrating how to configure the API base path using environment files and Angular CLI.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Dog model using a markdown table. It specifies the name, type, description, and additional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ClassName** | **string** |  | \n| **Color** | **string** |  | [optional] [default to \"red\"]\n| **Breed** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Starting Swagger Undertow Server with Maven\nDESCRIPTION: Command to package and execute the Swagger Undertow Server using Maven. This command builds the project and starts the server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/undertow/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn package exec:exec\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: Defines a ModelBoolean enum with two possible values: TRUE (represented as true) and FALSE (represented as false). This enum is likely used for boolean representations in API schemas or data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the Capitalization model using a markdown table. It lists six string properties with different naming conventions and provides optional descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **SmallCamel** | **string** |  | [optional] |\n| **CapitalCamel** | **string** |  | [optional] |\n| **SmallSnake** | **string** |  | [optional] |\n| **CapitalSnake** | **string** |  | [optional] |\n| **SCAETHFlowPoints** | **string** |  | [optional] |\n| **ATT_NAME** | **string** | Name of the pet  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values: PLACED, APPROVED, and DELIVERED. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Regenerating Haskell HTTP Client Petstore Sample in Bash\nDESCRIPTION: This command runs a shell script to update the Petstore sample for the Haskell HTTP client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/CONTRIBUTING.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n(cd ../../../..; ./bin/haskell-http-client-petstore.sh);\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table in Swagger/OpenAPI Markdown\nDESCRIPTION: Markdown table defining properties of a Capitalization model class. Includes property names using different capitalization conventions along with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Kotlin\nDESCRIPTION: Specifies the properties of the Category model, including an optional id of type Long and an optional name of type String. This structure is commonly used in API specifications or data modeling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**name** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Java Client to Call FakeApi Endpoint\nDESCRIPTION: Java code example demonstrating how to use the Swagger Java client to call the testEndpointParameters method of the FakeApi. It shows the setup of required parameters and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/README.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.FakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class FakeApiExample {\n\n    public static void main(String[] args) {\n        \n        FakeApi apiInstance = new FakeApi();\n        BigDecimal number = new BigDecimal(); // BigDecimal | None\n        Double _double = 3.4D; // Double | None\n        String string = \"string_example\"; // String | None\n        byte[] _byte = B; // byte[] | None\n        Integer integer = 56; // Integer | None\n        Integer int32 = 56; // Integer | None\n        Long int64 = 789L; // Long | None\n        Float _float = 3.4F; // Float | None\n        byte[] binary = B; // byte[] | None\n        LocalDate date = new LocalDate(); // LocalDate | None\n        DateTime dateTime = new DateTime(); // DateTime | None\n        String password = \"password_example\"; // String | None\n        try {\n            apiInstance.testEndpointParameters(number, _double, string, _byte, integer, int32, int64, _float, binary, date, dateTime, password);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ReadOnlyFirst model using a markdown table. It specifies two optional string properties: 'Bar' and 'Baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n| **Bar** | **string** |  | [optional] |\n| **Baz** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: ClassModel Properties Table in Markdown\nDESCRIPTION: Markdown table defining the ClassModel properties schema with columns for Name, Type, Description and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization with FakeApi in Java\nDESCRIPTION: Example of using the fakeOuterNumberSerialize endpoint to test serialization of outer number types. This snippet demonstrates how to submit a BigDecimal value and process the numeric response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger API\nDESCRIPTION: This example shows how to create multiple users at once by passing an array of User objects to the API. It initializes the UserApi, creates a List of User objects, and sends them to the CreateUsersWithArrayInput method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing User Logout in C# with Swagger Client\nDESCRIPTION: Example code demonstrating how to log out the current user using the UserApi class. Shows proper error handling and API instance creation. No parameters required and returns void.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class LogoutUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n\n            try\n            {\n                // Logs out current logged in user session\n                apiInstance.LogoutUser();\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.LogoutUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Dart\nDESCRIPTION: Example of how to create multiple users at once by providing an array of User objects using the createUsersWithArrayInput method of UserApi.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithArrayInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithArrayInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger Petstore API\nDESCRIPTION: Example demonstrating how to delete a user by username. This operation can only be performed by the logged-in user and requires the username of the user to be deleted.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The name that needs to be deleted\n\napiInstance.deleteUser(username).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Values in Swagger API\nDESCRIPTION: Defines an enum called OuterEnum with three possible values representing different states of an order: PLACED (\"placed\"), APPROVED (\"approved\"), and DELIVERED (\"delivered\"). This enum is likely used in API specifications to standardize order status values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration in SwaggerPetstore API\nDESCRIPTION: This enum defines a set of integer constants ranging from 0 to 6. Each value is prefixed with an underscore to allow for proper property access in code. This pattern enables using numeric values as enumeration members while avoiding JavaScript property naming limitations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_0` (value: `0`)\n\n* `_1` (value: `1`)\n\n* `_2` (value: `2`)\n\n* `_3` (value: `3`)\n\n* `_4` (value: `4`)\n\n* `_5` (value: `5`)\n\n* `_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: FormatTest Model Properties Table in Markdown\nDESCRIPTION: A markdown table defining all the properties of the FormatTest model, including property names, data types, descriptions, and optional flags. The table defines properties ranging from basic numeric types to specialized formats.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **int** |  | [optional] \n**int32** | **int** |  | [optional] \n**int64** | **int** |  | [optional] \n**number** | **float** |  | \n**_float** | **float** |  | [optional] \n**double** | **float** |  | [optional] \n**string** | **str** |  | [optional] \n**byte** | **str** |  | \n**binary** | **str** |  | [optional] \n**_date** | **date** |  | \n**date_time** | **datetime** |  | [optional] \n**uuid** | **str** |  | [optional] \n**password** | **str** |  | \n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java Swagger Client\nDESCRIPTION: Example code demonstrating how to test JSON serialization of form data using the FakeApi client. Shows handling of two string parameters for form data submission.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values in Markdown\nDESCRIPTION: Defines the values of the InnerEnum enumeration used in the mapOfEnumString property. It includes two enum values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Example Usage of Code Injection Test Method in Objective-C\nDESCRIPTION: Example implementation showing how to call the code injection test endpoint. Demonstrates parameter setup, API instance creation, and error handling using completion handler.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/docs/SWGFakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: objc\nCODE:\n```\nNSString* testCodeInjectEndRnNR = @\"testCodeInjectEndRnNR_example\"; // To test code injection *_/ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r (optional)\n\nSWGFakeApi*apiInstance = [[SWGFakeApi alloc] init];\n\n// To test code injection *_/ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r\n[apiInstance testCodeInjectEndRnNRWithTestCodeInjectEndRnNR:testCodeInjectEndRnNR\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGFakeApi->testCodeInjectEndRnNR: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID using Swagger Petstore Store API in JavaScript\nDESCRIPTION: Retrieves a purchase order by ID. Valid responses are only generated for integer IDs with values <= 5 or > 10. Other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.StoreApi();\n\nlet orderId = 789; // Number | ID of pet that needs to be fetched\n\n\napiInstance.getOrderById(orderId, (error, data, response) => {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values Table in Markdown\nDESCRIPTION: A markdown table defining the possible values for JustSymbolEnum, which uses special symbols as enumeration values. The values include the greater than or equal to symbol (>=) and the dollar sign ($).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | &quot;&gt;&#x3D;&quot;\nDOLLAR | &quot;$&quot;\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Number in Java\nDESCRIPTION: This snippet illustrates the usage of the fakeOuterNumberSerialize method in the FakeApi class to test serialization of outer number types. It shows how to create an instance of FakeApi, call the method with a BigDecimal input, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Swagger Codegen\nDESCRIPTION: This snippet defines the properties of the List model in Swagger Codegen. It includes a single property 'Var123List' of type string, which is optional and has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# List\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Var123List** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Importing SwaggerClient headers in Objective-C\nDESCRIPTION: This code snippet demonstrates how to import the necessary headers for using the SwaggerClient SDK in an Objective-C project. It includes the main API client, configuration, models, and API classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/README.md#2025-04-20_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n#import <SwaggerClient/SWGApiClient.h>\n#import <SwaggerClient/SWGDefaultConfiguration.h>\n// load models\n#import <SwaggerClient/SWGReturn.h>\n// load API classes for accessing endpoints\n#import <SwaggerClient/SWGFakeApi.h>\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in SwaggerPetstore FakeApi (JavaScript)\nDESCRIPTION: This snippet shows how to use the testInlineAdditionalProperties method of the FakeApi class. It takes an object parameter and sends it as the request body. This method is used to test inline additional properties in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet param = null; // Object | request body\n\napiInstance.testInlineAdditionalProperties(param).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass in Haskell\nDESCRIPTION: Defines the AdditionalPropertiesClass data type with constructor, accessors for map_property and map_of_map_property fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_14\n\nLANGUAGE: haskell\nCODE:\n```\nAdditionalPropertiesClass :: !(Maybe (Map String Text)) -> !(Maybe (Map String (Map String Text))) -> AdditionalPropertiesClass\n\n-- | \"map_property\"\n[additionalPropertiesClassMapProperty] :: AdditionalPropertiesClass -> !(Maybe (Map String Text))\n\n-- | \"map_of_map_property\"\n[additionalPropertiesClassMapOfMapProperty] :: AdditionalPropertiesClass -> !(Maybe (Map String (Map String Text)))\n\n-- | FromJSON AdditionalPropertiesClass\n\n-- | ToJSON AdditionalPropertiesClass\n\n-- | Construct a value of type <a>AdditionalPropertiesClass</a> (by\n--   applying it's required fields, if any)\nmkAdditionalPropertiesClass :: AdditionalPropertiesClass\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with Swagger Petstore FakeApi in JavaScript\nDESCRIPTION: Example of how to call the testInlineAdditionalProperties endpoint of FakeApi class from Swagger Petstore. This endpoint accepts a generic Object parameter as the request body to test inline additional properties functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar param = null; // Object | request body\n\napiInstance.testInlineAdditionalProperties(param).then(function() {\n  console.log('API called successfully.');\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Pet API Instance Type Declarations in Haskell\nDESCRIPTION: Type instance declarations for the Pet API endpoints, specifying optional parameters, body parameters, and supported MIME types for the uploadFile and other operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_47\n\nLANGUAGE: haskell\nCODE:\n```\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Pet.UploadFile SwaggerPetstore.Model.AdditionalMetadata\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Pet.UploadFile SwaggerPetstore.Model.File\ninstance SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.Pet.UploadFile SwaggerPetstore.MimeTypes.MimeMultipartFormData\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Pet.UploadFile SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.Core.HasOptionalParam SwaggerPetstore.API.Pet.UpdatePetWithForm SwaggerPetstore.Model.Name2\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: This Markdown table defines the properties of the SpecialModelName class. It specifies a single optional property named specialPropertyName of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order StatusEnum Values in Markdown\nDESCRIPTION: A markdown table that defines the possible values for the StatusEnum of the Order model, listing the name and corresponding value for each status option.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Special Model Properties in Markdown Table\nDESCRIPTION: Markdown table defining the properties of a special model interface, including a single optional numeric property named 'specialPropertyName'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a Client model using a markdown table format. It specifies a single optional property 'client' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient via CocoaPods from GitHub\nDESCRIPTION: This snippet demonstrates how to install the SwaggerClient SDK using CocoaPods, specifying the GitHub repository. It also shows options for specifying a particular branch or commit.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/README.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\npod 'SwaggerClient', :git => 'https://github.com/GIT_USER_ID/GIT_REPO_ID.git'\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the OuterComposite class including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional] |\n| **myString** | **String** |  |  [optional] |\n| **myBoolean** | **Boolean** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types and descriptions for a Pet model. Includes fields for identification, categorization, basic info, photos, tags and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **i64** |  | [optional] [default to null]\n**category** | [***::models::Category**](Category.md) |  | [optional] [default to null]\n**name** | **String** |  | [default to null]\n**photo_urls** | **Vec<String>** |  | [default to null]\n**tags** | [**Vec<::models::Tag>**](Tag.md) |  | [optional] [default to null]\n**status** | **String** | pet status in the store | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in C#\nDESCRIPTION: This example demonstrates how to fetch a user's details by their username. The method returns a User object containing the user's information. The example shows how to handle the returned object and any exceptions that might occur during the API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetUserByNameExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be fetched. Use user1 for testing.\n\n            try\n            {\n                // Get user by user name\n                User result = apiInstance.GetUserByName(username);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.GetUserByName: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Numbers Enum with Numeric Values in SwaggerPetstore\nDESCRIPTION: This code snippet defines an enumeration named 'Numbers' for the SwaggerPetstore API. It includes four numeric values (7, 8, 9, and 10) prefixed with underscores to make them valid identifiers in the target language, while maintaining their numeric values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_7` (value: `7`)\n\n* `_8` (value: `8`)\n\n* `_9` (value: `9`)\n\n* `_10` (value: `10`)\n```\n\n----------------------------------------\n\nTITLE: Updating User Details - Implementation Example in Objective-C\nDESCRIPTION: Example implementation showing how to call the updateUser API method. Demonstrates creating the API instance, setting up parameters, and handling the response using a completion handler.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: objc\nCODE:\n```\nNSString* username = @\"username_example\"; // name that need to be deleted\nSWGUser* body = [[SWGUser alloc] init]; // Updated user object (optional)\n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Updated user\n[apiInstance updateUserWithUsername:username\n              body:body\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->updateUser: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Package Installation Commands\nDESCRIPTION: Various npm commands for installing the package through different methods including published package, local installation, and npm link\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/angular2-typescript-petstore@0.0.1 --save\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @swagger/angular2-typescript-petstore\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Properties in Markdown\nDESCRIPTION: Specifies the properties of the OuterComposite class using a Markdown table. It includes three properties: myNumber (BigDecimal), myString (String), and myBoolean (Boolean). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: This snippet defines a ModelBoolean enum with two possible values: true and false. The enum is part of the SwaggerPetstore namespace, suggesting it's used in the Swagger Petstore API for boolean representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ModelBoolean\n\n## Enum\n\n\n* `_true` (value: `true`)\n\n* `_false` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Documenting Property Definitions in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining properties with different capitalization patterns. Each property is defined with its type (String), optional notes, and descriptions where applicable.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Capitalization\\n\\n## Properties\\nName | Type | Description | Notes\\n------------ | ------------- | ------------- | -------------\\n**smallCamel** | **String** |  |  [optional]\\n**capitalCamel** | **String** |  |  [optional]\\n**smallSnake** | **String** |  |  [optional]\\n**capitalSnake** | **String** |  |  [optional]\\n**scAETHFlowPoints** | **String** |  |  [optional]\\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Animal Properties Schema Table\nDESCRIPTION: Markdown table defining the properties of the Animal class, including field names, types, descriptions and optional status\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Server in Docker\nDESCRIPTION: Commands to build and run the Swagger-generated ASP.NET Core 3.0 server in a Docker container. This builds a Docker image and runs it on port 5000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd src/IO.Swagger\ndocker build -t io.swagger .\ndocker run -p 5000:5000 io.swagger\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a Category model using a Markdown table format. It specifies two optional properties: 'id' of type Long and 'name' of type String. This format is commonly used in Swagger Codegen to generate API documentation and client SDKs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Model Properties in Markdown\nDESCRIPTION: Describes the properties of the MapTest model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **MapMapOfString** | **Dictionary<string, Dictionary<string, string>>** |  | [optional] |\n| **MapOfEnumString** | **Dictionary<string, string>** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties for Petstore API in Markdown\nDESCRIPTION: This snippet defines the properties of the Name model for the Petstore API. It includes the field names, their types, and whether they are required or optional. The properties cover basic information, formatting variations, and special cases like numbers in field names.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snake_case** | **Integer** |  | [optional] \n**property** | **String** |  | [optional] \n**_123_number** | **Integer** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Server on Windows\nDESCRIPTION: Command to build and run the Swagger-generated ASP.NET Core 3.0 server on Windows systems using a batch file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore/README.md#2025-04-20_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nbuild.bat\n```\n\n----------------------------------------\n\nTITLE: StatusEnum Definition in Markdown\nDESCRIPTION: Defines the possible values for the Status enum used in the Order model. The enum includes three possible order statuses: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Markdown table defining the properties of the Name model, including required and optional fields. The model has four properties: name (required Number), snakeCase (optional Number), property (optional String), and _123Number (optional Number).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | \n**snakeCase** | **Number** |  | [optional] \n**property** | **String** |  | [optional] \n**_123Number** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Array Properties in Swagger Model\nDESCRIPTION: Property definitions for ArrayTest model including simple and nested array types. Defines three properties: array_of_string (string array), array_array_of_integer (2D integer array), and array_array_of_model (2D array of ReadOnlyFirst objects). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_of_string** | **list[str]** |  | [optional] \n**array_array_of_integer** | **list[list[int]]** |  | [optional] \n**array_array_of_model** | **list[list[ReadOnlyFirst]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore SDK via Git\nDESCRIPTION: Command to install the Swagger Petstore JavaScript client directly from a Git repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, sets up a Client object as the request body, and makes an API call to test special tags. The result is then printed to the console.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Documentation\nDESCRIPTION: URL for accessing the Swagger API documentation in JSON format after the server is running. The documentation describes all available endpoints and operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: API Parameters Table in Markdown\nDESCRIPTION: Markdown table defining the required and optional parameters for the pet update endpoint. Includes parameter names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **petId** | **kotlin.Long**| ID of pet to update |\n **additionalMetadata** | **kotlin.String**| Additional data to pass to server | [optional]\n **file** | **java.io.File**| file to upload | [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Swagger-generated Server with Maven and Jetty\nDESCRIPTION: Command to build and run the server using Maven and Jetty. This command cleans the project, packages it, and runs it using the Jetty web server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/eap-joda/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Enum Class with Special Character Values\nDESCRIPTION: Defines an enumeration with three string constants: _abc, -efg, and (xyz). The enum uses special characters and different formatting patterns to demonstrate various value representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum EnumClass {\n  _ABC = \"_abc\",\n  _EFG = \"-efg\",\n  _XYZ_ = \"(xyz)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Name Model Property Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the 'Name' model, including their types, descriptions, and whether they are optional. The table includes standard properties and specially formatted property names like snake_case and those prefixed with underscores.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **int** |  | \n**snake_case** | **int** |  | [optional] \n**_property** | **str** |  | [optional] \n**_123_number** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP POST Endpoint for User Creation\nDESCRIPTION: HTTP endpoint definition for creating a new user in the system, which can only be performed by authenticated users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_15\n\nLANGUAGE: http\nCODE:\n```\npost /user\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown Table\nDESCRIPTION: Specifies the properties of a Tag object using a markdown table. The Tag has two optional properties: 'id' of type Long, and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using PetApi in Java\nDESCRIPTION: This example shows how to delete a pet from the store using the deletePet method from the PetApi class. It requires a pet ID and optional API key, with proper error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Java FakeApi Number Serialization Example\nDESCRIPTION: Example code showing serialization of outer number types using the FakeApi client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.fakeOuterNumberSerialize().execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Model200Response Properties Table\nDESCRIPTION: Markdown table defining the properties of Model200Response model including name (Integer) and propertyClass (String) fields, both marked as optional\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Dart\nDESCRIPTION: Example code for creating multiple users with a list input. Similar to the array input method, this takes a List<User> object to create multiple users at once.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = [new List&lt;User&gt;()]; // List<User> | List of user object\n\ntry { \n    api_instance.createUsersWithListInput(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUsersWithListInput: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger JSON documentation\nDESCRIPTION: URL to access the Swagger API documentation in JSON format after server is running. This endpoint provides the OpenAPI specification of the server's API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey2-useTags/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in C#\nDESCRIPTION: Example code showing how to test serialization of object with outer number type using the FakeApi. Makes a POST request to /fake/outer/composite endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterCompositeSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterComposite(); // OuterComposite | Input composite as post body (optional) \n\n            try\n            {\n                OuterComposite result = apiInstance.FakeOuterCompositeSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterCompositeSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enum Definition\nDESCRIPTION: Defines the allowed values for the pet status enum including available, pending, and sold states.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `available` (value: `\"available\"`)\n\n* `pending` (value: `\"pending\"`)\n\n* `sold` (value: `\"sold\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the FormatTest model. It includes various data types such as Integer, Long, BigDecimal, Float, Double, String, byte[], LocalDate, OffsetDateTime, UUID, and password. Some properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Local NPM Development Setup\nDESCRIPTION: Commands to set up local development environment using npm link for the Swagger Petstore SDK.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm link\nnpm link /path/to/<JAVASCRIPT_CLIENT_DIR>\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the NumberOnly class using a Markdown table. The class has a single optional property 'justNumber' of type BigDecimal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Properties Structure in Swagger\nDESCRIPTION: Main properties structure defining different enum types including string, integer, number and outer enum references. Specifies which properties are optional versus required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Linking Angular2 TypeScript Petstore Package\nDESCRIPTION: Commands to create and use an npm link for the @swagger/angular2-typescript-petstore package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @swagger/angular2-typescript-petstore\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values Definition - Markdown\nDESCRIPTION: Defines the possible values for the ArrayEnumEnum containing marine animal types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Documentation table defining the properties of the ArrayTest model class. The model contains three array properties: ArrayOfString (a list of strings), ArrayArrayOfInteger (a nested list of nullable long integers), and ArrayArrayOfModel (a nested list of ReadOnlyFirst objects). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **List&lt;string&gt;** |  | [optional] \n**ArrayArrayOfInteger** | **List&lt;List&lt;long?&gt;&gt;** |  | [optional] \n**ArrayArrayOfModel** | **List&lt;List&lt;ReadOnlyFirst&gt;&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Using OAuth Authentication with Access Token in Go\nDESCRIPTION: Demonstrates the simple approach to OAuth authentication by directly providing an access token. This is useful for cases where token management is handled externally.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/README.md#2025-04-20_snippet_3\n\nLANGUAGE: golang\nCODE:\n```\nauth := context.WithValue(context.Background(), sw.ContextAccessToken, \"ACCESSTOKENSTRING\")\nr, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Creating a User with Petstore CLI\nDESCRIPTION: This snippet demonstrates how to create a user using the Petstore CLI. It requires a User object as input and doesn't return any response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli createUser\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown Table\nDESCRIPTION: Markdown table documenting the Animal model schema properties. Defines required class_name property as a string and optional color property defaulting to 'red'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | **string** |  | \n**color** | **string** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Values in SwaggerPetstore\nDESCRIPTION: Defines three enum values (abc, efg, xyz) with their corresponding string values. Each enum has a specific string format that maps to the internal representation used by the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `abc` (value: `\"_abc\"`)\n\n* `efg` (value: `\"-efg\"`)\n\n* `xyz` (value: `\"(xyz)\")`\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ModelApiResponse class using a Markdown table. It specifies the name, type, description, and optional status for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the ArrayEnumEnum, which includes 'fish' and 'crab'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"List<ArrayEnumEnum>\"></a>\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization with FakeApi in Java\nDESCRIPTION: Example showing how to call the fakeOuterStringSerialize endpoint which tests serialization of outer string types. It accepts a String value as post body and returns a String response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Cat Model Properties Table - Markdown\nDESCRIPTION: Markdown table defining the properties of the Cat model schema. Shows the declawed property of boolean type which is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **bool** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementation References in PHP DI Frameworks\nDESCRIPTION: Code references showing how delegate lookup is implemented in various PHP DI containers including Mouf, PHP-DI, and pimple-interop. These implementations demonstrate different approaches to container delegation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/Delegate-lookup-meta.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// Mouf implementation\nsetDelegateLookupContainer()\n\n// PHP-DI implementation - Constructor parameter\nnew Container($wrapperContainer)\n\n// pimple-interop implementation - Constructor parameter\nnew PimpleInterop($container)\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP PUT Endpoint for User Update\nDESCRIPTION: HTTP endpoint definition for updating an existing user's information, which can only be performed by the authenticated user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_29\n\nLANGUAGE: http\nCODE:\n```\nput /user/{username}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the EnumTest model using a Markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enum_string** | **str** |  | [optional] \n**enum_string_required** | **str** |  | \n**enum_integer** | **int** |  | [optional] \n**enum_number** | **float** |  | [optional] \n**outer_enum** | [**OuterEnum**](OuterEnum.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Configuring Cartfile for Alamofire Integration\nDESCRIPTION: Sample Cartfile configuration that specifies Alamofire as a dependency using Carthage. It specifies to use Alamofire version 4.9 or compatible updates.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\ngithub \"Alamofire/Alamofire\" ~> 4.9\n```\n\n----------------------------------------\n\nTITLE: JustSymbol Enum Values\nDESCRIPTION: Defines the allowed enum values for the justSymbol property, including greater than or equal to (>=) and dollar ($) symbols.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `GREATER_THAN_OR_EQUAL_TO` (value: `\">=\"`)\n\n* `DOLLAR` (value: `\"$\"`)\n```\n\n----------------------------------------\n\nTITLE: ModelApiResponse Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a ModelApiResponse object including field names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Calling testJsonFormData method in FakeApi (Java)\nDESCRIPTION: This snippet illustrates how to call the testJsonFormData method of the FakeApi class. It shows setting up string parameters and handling potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Logout - Java Swagger Client\nDESCRIPTION: Example of logging out the currently logged in user using the Swagger client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Angular Module with Providers\nDESCRIPTION: Advanced Angular module setup with custom configuration parameters\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet in Markdown\nDESCRIPTION: This snippet describes the API endpoint for uploading an image for a pet. It specifies the HTTP method, parameters, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n# **upload_file**\n> upload_file (pet_id: INTEGER_64 ; additional_metadata:  detachable STRING_32 ; file:  detachable FILE ): detachable API_RESPONSE\n\t\n\nuploads an image\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **pet_id** | **INTEGER_64**| ID of pet to update | \n **additional_metadata** | **STRING_32**| Additional data to pass to server | [optional] \n **file** | **FILE**| file to upload | [optional] \n\n### Return type\n\n[**API_RESPONSE**](ApiResponse.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: multipart/form-data\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in SwaggerPetstore FakeApi (JavaScript)\nDESCRIPTION: This snippet demonstrates how to use the testEnumParameters method of the FakeApi class. It shows the setup of various enum parameters for form, header, and query, including string arrays, strings, integers, and doubles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'enumFormStringArray': [\"enumFormStringArray_example\"], // [String] | Form parameter enum test (string array)\n  'enumFormString': \"-efg\", // String | Form parameter enum test (string)\n  'enumHeaderStringArray': [\"enumHeaderStringArray_example\"], // [String] | Header parameter enum test (string array)\n  'enumHeaderString': \"-efg\", // String | Header parameter enum test (string)\n  'enumQueryStringArray': [\"enumQueryStringArray_example\"], // [String] | Query parameter enum test (string array)\n  'enumQueryString': \"-efg\", // String | Query parameter enum test (string)\n  'enumQueryInteger': 56, // Number | Query parameter enum test (double)\n  'enumQueryDouble': 1.2 // Number | Query parameter enum test (double)\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testEnumParameters(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties Schema\nDESCRIPTION: Documents the property schema for MapTest class including nested map structures. Contains mapMapOfString which is a nested map of strings, and mapOfEnumString which maps strings to enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing TestInlineAdditionalProperties API Endpoint in Go\nDESCRIPTION: Defines the TestInlineAdditionalProperties API endpoint. It requires a context and a param of interface{} type as input. The function doesn't return any response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_10\n\nLANGUAGE: Go\nCODE:\n```\n# **TestInlineAdditionalProperties**\n> TestInlineAdditionalProperties(ctx, param)\ntest inline additionalProperties\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **param** | **interface{}**| request body | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Defining Collection Formats in Haskell\nDESCRIPTION: Defines the CollectionFormat data type and associated functions for handling different array formats in API requests.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_6\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Determines the format of the array if type array is used.\ndata CollectionFormat\n\n-- | CSV format for multiple parameters.\nCommaSeparated :: CollectionFormat\n\n-- | Also called <a>SSV</a>\nSpaceSeparated :: CollectionFormat\n\n-- | Also called <a>TSV</a>\nTabSeparated :: CollectionFormat\n\n-- | `value1|value2|value2`\nPipeSeparated :: CollectionFormat\n\n-- | Using multiple GET parameters, e.g. `foo=bar&amp;foo=baz`. This is\n--   valid only for parameters in \"query\" (<a>Query</a>) or \"formData\"\n--   (<a>Form</a>)\nMultiParamArray :: CollectionFormat\ntoHeaderColl :: ToHttpApiData a => CollectionFormat -> (HeaderName, [a]) -> [Header]\ntoFormColl :: ToHttpApiData v => CollectionFormat -> (ByteString, [v]) -> Form\ntoQueryColl :: ToHttpApiData a => CollectionFormat -> (ByteString, Maybe [a]) -> Query\n_toColl :: Traversable f => CollectionFormat -> (f a -> [(b, ByteString)]) -> f [a] -> [(b, ByteString)]\n_toCollA :: (Traversable f, Traversable t, Alternative t) => CollectionFormat -> (f (t a) -> [(b, t ByteString)]) -> f (t [a]) -> [(b, t ByteString)]\n_toCollA' :: (Monoid c, Traversable f, Traversable t, Alternative t) => CollectionFormat -> (f (t a) -> [(b, t c)]) -> (Char -> c) -> f (t [a]) -> [(b, t c)]\n```\n\n----------------------------------------\n\nTITLE: Customizing SDK Generation with Swagger Codegen\nDESCRIPTION: This JSON payload demonstrates how to customize the SDK generation by specifying options and the Swagger specification URL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/online-generators.md#2025-04-20_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"options\":  {},\n  \"swaggerUrl\": \"https://petstore.swagger.io/v2/swagger.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayTest model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting JAVA_HOME Environment Variable on Windows\nDESCRIPTION: Example of how to set the JAVA_HOME environment variable on Windows systems, which is required for the project setup.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nJAVA_HOME = C:\\Program Files\\Java\\jdk1.8.0_121\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown Table Format\nDESCRIPTION: Table defining properties of a Tag model, specifying field names, data types, and optionality. The model contains two optional fields: an ID property of type Long and a name property of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using Printable Protocol with Alamofire Requests\nDESCRIPTION: This snippet demonstrates how Alamofire's Request implements the Printable protocol, allowing requests to be output in a readable format when using print().\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_35\n\nLANGUAGE: swift\nCODE:\n```\nlet request = Alamofire.request(.GET, \"https://httpbin.org/ip\")\n\nprint(request)\n// GET https://httpbin.org/ip (200)\n```\n\n----------------------------------------\n\nTITLE: Generating Documentation Script Usage\nDESCRIPTION: Command to generate SDK documentation using the provided script\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/tizen/doc/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndoc/generateDocumentation.sh\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: Defines an enumeration for the pet status using a markdown table. It lists the possible status values for a pet in the store.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Core Configuration Type\nDESCRIPTION: Defines the main configuration type SwaggerPetstoreConfig with fields for host, user agent, logging, and authentication methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_2\n\nLANGUAGE: haskell\nCODE:\n```\ndata SwaggerPetstoreConfig\nSwaggerPetstoreConfig :: ByteString -> Text -> LogExecWithContext -> LogContext -> [AnyAuthMethod] -> Bool -> SwaggerPetstoreConfig\n```\n\n----------------------------------------\n\nTITLE: Deleting User by Username in Java\nDESCRIPTION: Example of deleting a user by their username. Only available to logged-in users. Takes username as a parameter and handles ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Ruby Hash Map Property Definitions\nDESCRIPTION: Defines two hash map properties for the AdditionalPropertiesClass: map_property for simple string key-value pairs, and map_of_map_property for nested hash maps with string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nmap_property: Hash<String, String>\nmap_of_map_property: Hash<String, Hash<String, String>>\n```\n\n----------------------------------------\n\nTITLE: Testing inline additional properties with Python API client\nDESCRIPTION: This snippet demonstrates calling the test_inline_additional_properties method of the FakeApi class with a parameter object. It shows how to handle API exceptions using a try-except block.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nparam = NULL # object | request body\n\ntry:\n    # test inline additionalProperties\n    api_instance.test_inline_additional_properties(param)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_inline_additional_properties: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Python Property Type Definitions for AdditionalPropertiesClass\nDESCRIPTION: Type definitions for the AdditionalPropertiesClass model properties, including a simple string map and a nested map structure. Both properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nmap_property = dict(str, str)     # Optional simple key-value string map\nmap_of_map_property = dict(str, dict(str, str))    # Optional nested map structure\n```\n\n----------------------------------------\n\nTITLE: Integrating Environment-based API Base Path\nDESCRIPTION: Angular module setup that uses environment configuration to set the API base path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP DELETE Endpoint for User Deletion\nDESCRIPTION: HTTP endpoint definition for deleting a user by username, which can only be performed by the authenticated user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_20\n\nLANGUAGE: http\nCODE:\n```\ndelete /user/{username}\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Package\nDESCRIPTION: Commands to install dependencies and build the TypeScript package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enum Values in Markdown\nDESCRIPTION: Markdown table defining the possible values for the pet status enum including available, pending and sold states.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nAVAILABLE | \"available\"\nPENDING | \"pending\"\nSOLD | \"sold\"\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Java\nDESCRIPTION: This code snippet shows how to create multiple users at once using an array input with the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'body' => new List<SwagUser>{SwagUser.getExample()}\n};\n\ntry {\n    // cross your fingers\n    api.createUsersWithArrayInput(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Building @swagger/angular2-typescript-petstore Package\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources for the @swagger/angular2-typescript-petstore package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**myString** | [**OuterString**](OuterString.md) |  | [optional] \n**myBoolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Petstore API\nDESCRIPTION: Documents the ModelReturn class with its property '_return' which is an optional Integer. This likely represents a model class used in API responses or requests that has a property named 'return' (which is a reserved keyword in many languages, hence prefixed with underscore).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of the Cat model in Swagger/OpenAPI format. Contains a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Properties Schema\nDESCRIPTION: Defines a data model schema with properties using different capitalization patterns. Includes camelCase, PascalCase, snake_case and uppercase naming conventions with optional String type fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running the Swagger Jersey Server with Maven\nDESCRIPTION: Command to build and run the Swagger-generated server using Maven and Jetty.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/java-msf4j/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum in Markdown\nDESCRIPTION: Defines an enum called StatusEnum using a markdown table. This enum is likely used for the 'status' property of the Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: Documents the properties of the Capitalization class including optional string fields with different naming conventions. Includes camelCase, PascalCase, snake_case and domain-specific attribute names.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**small_camel** | **String** |  | [optional] \n**capital_camel** | **String** |  | [optional] \n**small_snake** | **String** |  | [optional] \n**capital_snake** | **String** |  | [optional] \n**sca_eth_flow_points** | **String** |  | [optional] \n**att_name** | **String** | Name of the pet  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Model Definition - ArrayOfNumberOnly Properties\nDESCRIPTION: Markdown table defining the properties of the ArrayOfNumberOnly model. Contains a single optional property 'ArrayNumber' that stores an array of 32-bit floating point numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ArrayNumber** | **[]float32** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests\nDESCRIPTION: Commands to install tox and run integration tests for the server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo pip install tox\ntox\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Markdown table specifying the properties of the ArrayOfNumberOnly model class. Contains a single optional property 'arrayNumber' of type List<BigDecimal>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Documenting OuterString Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the OuterString model class. The table structure is set up but contains no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/OuterString.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Deploying to Remote Maven Repository\nDESCRIPTION: Command to deploy the library to a remote Maven repository\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean deploy\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Package Locally\nDESCRIPTION: Command to install the API client library to local Maven repository\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a 'Capitalization' model using a Markdown table. It includes various naming conventions for demonstration purposes, such as camelCase, PascalCase, snake_case, and UPPER_SNAKE_CASE. Each property is defined with its name, type, and optional description and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Specifies the properties of an Order object including id, petId, quantity, shipDate, status, and complete. Each property is defined with its type and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running the Swagger-generated server with Maven\nDESCRIPTION: Command to build and run the swagger-generated server using Maven and Jetty. This cleans the project, packages it, and starts the Jetty server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/joda/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: This snippet shows how to import the Swagger API package in a Dart application. This import is required to use the PetApi class and other related functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Values for SwaggerPetstore API\nDESCRIPTION: Defines an enumeration named OuterEnum with three possible string values that represent the states of a pet store order. The values include 'placed' for newly created orders, 'approved' for accepted orders, and 'delivered' for completed orders.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enum in Kotlin\nDESCRIPTION: Defines an enum for the pet's status, which can be 'available', 'pending', or 'sold'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"Status\"></a>\n## Enum: status\nName | Value\n---- | -----\nstatus | available, pending, sold\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for Swagger\nDESCRIPTION: Specifies the properties of a Tag object, including an optional id (Long) and an optional name (String). This structure is commonly used in Swagger/OpenAPI specifications to document API models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Calling testJsonFormData method in Java\nDESCRIPTION: This snippet illustrates how to call the testJsonFormData method of the FakeApi class. It shows the setup of the API instance, preparation of request parameters, and exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Model Properties Table in Markdown\nDESCRIPTION: A markdown table that defines the properties of the OuterComposite model. It specifies three optional properties: MyNumber, MyString, and MyBoolean, each referencing other models with links to their documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**MyNumber** | [***OuterNumber**](OuterNumber.md) |  | [optional] [default to null]\n**MyString** | [***OuterString**](OuterString.md) |  | [optional] [default to null]\n**MyBoolean** | [***OuterBoolean**](OuterBoolean.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Dart\nDESCRIPTION: Example of how to delete a user by username. This operation can only be performed by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The name that needs to be deleted\n\ntry { \n    api_instance.deleteUser(username);\n} catch (e) {\n    print(\"Exception when calling UserApi->deleteUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies with Minimum Versions for Swagger Codegen\nDESCRIPTION: Specifies the minimum versions of required Python packages for a Swagger Codegen generated client. It includes HTTP-related dependencies like certifi and urllib3 for secure connections, as well as utilities for data handling like python_dateutil and six for Python 2/3 compatibility.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncertifi >= 14.05.14\nsix >= 1.10\npython_dateutil >= 2.5.3\nsetuptools >= 21.0.0\nurllib3 >= 1.15.1\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image in C# using Swagger-generated Client\nDESCRIPTION: This snippet shows how to upload an image for a pet. It requires the pet's ID and optionally accepts additional metadata and a file stream. The method uses OAuth2 authentication and returns an ApiResponse object containing the upload result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UploadFileExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet to update\n            var additionalMetadata = additionalMetadata_example;  // string | Additional data to pass to server (optional) \n            var _file = new System.IO.Stream(); // System.IO.Stream | file to upload (optional) \n\n            try\n            {\n                // uploads an image\n                ApiResponse result = apiInstance.UploadFile(petId, additionalMetadata, _file);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UploadFile: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enum Values\nDESCRIPTION: Enumeration values defining the possible states of an order in the system. The enum contains three possible values: placed (initial state), approved (order confirmed), and delivered (order completed).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Loading OuterString Model Package in Perl\nDESCRIPTION: Demonstrates how to load the OuterString model class from the WWW::SwaggerClient library into a Perl application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/OuterString.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::OuterString;\n```\n\n----------------------------------------\n\nTITLE: Setting Service Base Path in Angular (Bootstrap)\nDESCRIPTION: TypeScript code to set the base path for the API service during Angular application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the ArrayTest model class. It specifies three array properties: arrayOfString, arrayArrayOfInteger, and arrayArrayOfModel, all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: OAuth2 Authentication Example in Rust\nDESCRIPTION: Example showing how to use OAuth2 authentication with the client. This creates a context with the access token and uses it in a service operation call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/README.md#2025-04-20_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\n\tauth := context.WithValue(context.TODO(), sw.ContextAccessToken, \"ACCESSTOKENSTRING\")\n    r, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input\nDESCRIPTION: Example demonstrating how to create multiple users at once by passing an array of User objects to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SpecialModelName class using a markdown table. It specifies a single optional property named specialPropertyName of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Properties in Swagger Documentation\nDESCRIPTION: API documentation table defining the properties of ModelReturn class. Contains a single optional numeric property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest model using a markdown table. It includes property names, Java types, descriptions, and optional flags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: Code snippet for importing the Swagger API package in Dart, which is required to use the UserApi and related classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: ApiResponse Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the ApiResponse model including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Code** | **int?** |  | [optional] \n**Type** | **string** |  | [optional] \n**Message** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SpecialModelName model using a Markdown table. It includes the property name, data type, description, and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n| **SpecialPropertyName** | **long?** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the Pet model, including their types, descriptions, and optional status. It uses a markdown table format to present the information clearly.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**category** | [**Category**](Category.md) |  | [optional] \n**name** | **String** |  | \n**photoUrls** | **[String]** |  | \n**tags** | [**[Tag]**](Tag.md) |  | [optional] \n**status** | **String** | pet status in the store | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumTest model, including their names, types, and optional status. It covers various enum types such as string, integer, number, and a custom OuterEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.EnumTest\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**EnumString** | **string** |  | [optional] \n**EnumStringRequired** | **string** |  | \n**EnumInteger** | **int?** |  | [optional] \n**EnumNumber** | **double?** |  | [optional] \n**OuterEnum** | **OuterEnum** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for SwaggerClient-php\nDESCRIPTION: Commands to install dependencies and run PHPUnit tests for the PHP client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/php/SwaggerClient-php/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncomposer install\n./vendor/bin/phpunit\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for Numbers Model Properties\nDESCRIPTION: Property table showing columns for Name, Type, Description and Notes for the Numbers model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventories by Status using Swagger Petstore API in JavaScript\nDESCRIPTION: This snippet shows how to get pet inventories grouped by status. It uses the SwaggerPetstore.StoreApi instance with API key authentication. The getInventory method is called without parameters and returns a map of status codes to quantities. The result is logged to the console.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure API key authorization: api_key\nvar api_key = defaultClient.authentications['api_key'];\napi_key.apiKey = 'YOUR API KEY';\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.apiKeyPrefix = 'Token';\n\nvar apiInstance = new SwaggerPetstore.StoreApi();\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.getInventory(callback);\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Values in Swagger Codegen\nDESCRIPTION: Defines three enum values (_ABC, _EFG, and _XYZ_) with their corresponding string representations. This enum is likely used within API specifications to represent a set of predefined values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Feign API Client Dependency to Maven Project\nDESCRIPTION: This XML snippet shows how to add the Swagger Petstore Feign API client library as a dependency in a Maven project's pom.xml file. It specifies the groupId, artifactId, version, and scope of the dependency.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/feign/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-feign</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean Types in C#\nDESCRIPTION: This code snippet demonstrates how to use the FakeOuterBooleanSerialize method to test serialization of outer boolean types. It shows how to create an instance of FakeApi, call the method with an optional boolean parameter, and handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterBooleanSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new bool?(); // bool? | Input boolean as post body (optional) \n\n            try\n            {\n                bool? result = apiInstance.FakeOuterBooleanSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterBooleanSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger API\nDESCRIPTION: This endpoint creates multiple users from a list input. It accepts a vector of User objects in the request body. The response is empty and no authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n# **create_users_with_list_input**\n> create_users_with_list_input(body)\nCreates list of users with given input array\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **body** | [**Vec&lt;::models::User&gt;**](User.md)| List of user object | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest class using a Markdown table. It includes property names, data types, and optional notes. The properties cover a range of data types including integers, floats, strings, dates, and specialized types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  | [optional] \n**int32** | **Integer** |  | [optional] \n**int64** | **Integer** |  | [optional] \n**number** | **Float** |  | \n**float** | **Float** |  | [optional] \n**double** | **Float** |  | [optional] \n**string** | **String** |  | [optional] \n**byte** | **String** |  | \n**binary** | **String** |  | [optional] \n**date** | **Date** |  | \n**date_time** | **DateTime** |  | [optional] \n**uuid** | **String** |  | [optional] \n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Data Model Properties in Kotlin\nDESCRIPTION: Describes the properties of the ApiResponse data model in Kotlin. Includes three optional properties: code (integer), type (string), and message (string) that represent standard API response fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **kotlin.Int** |  |  [optional]\n**type** | **kotlin.String** |  |  [optional]\n**message** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Markdown Table for OuterComposite Properties\nDESCRIPTION: Markdown table documenting the properties of the OuterComposite class including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n| **myString** | **String** |  |  [optional]\n| **myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating a Single User in Swagger API with Perl\nDESCRIPTION: Example showing how to create a new user in the system. This operation can only be performed by a logged-in user and requires passing a User object to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::UserApi;\nmy $api_instance = WWW::SwaggerClient::UserApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::User->new(); # User | Created user object\n\neval { \n    $api_instance->create_user(body => $body);\n};\nif ($@) {\n    warn \"Exception when calling UserApi->create_user: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Serialization with fakeOuterStringSerialize in Bash\nDESCRIPTION: Command example for testing the serialization of outer string types. This endpoint takes an optional OuterString input body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli fakeOuterStringSerialize\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization with SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the fakeOuterStringSerialize method to test serialization of outer string types. The method accepts an optional OuterString object and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterString() // OuterString | Input string as post body\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.fakeOuterStringSerialize(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Carthage Installation for RxSwift\nDESCRIPTION: This code snippet demonstrates how to install RxSwift using Carthage by adding the dependency to the Cartfile.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\ngithub \"ReactiveX/RxSwift\" ~> 3.0\n```\n\n----------------------------------------\n\nTITLE: Installing NuGet Packages for Swagger Petstore SDK in C#\nDESCRIPTION: Command to install required NuGet packages for the Swagger Petstore C# SDK. The required dependencies include RestSharp, Newtonsoft.Json, and JsonSubTypes packages.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nInstall-Package RestSharp\nInstall-Package Newtonsoft.Json\nInstall-Package JsonSubTypes\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values in Markdown\nDESCRIPTION: Specifies the possible integer values for the EnumIntegerEnum used in the EnumTest model. It includes positive and negative integer options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Adding Alamofire as a Git Submodule\nDESCRIPTION: Command to add Alamofire as a git submodule to your project, allowing you to incorporate the framework while maintaining version control.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ git submodule add https://github.com/Alamofire/Alamofire.git\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the ModelApiResponse model, including field names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **code** | **Integer** |  |  [optional] |\n| **type** | **String** |  |  [optional] |\n| **message** | **String** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for EnumNumberEnum which include floating-point numbers. The enum consists of NUMBER_1_DOT_1 with value 1.1 and NUMBER_MINUS_1_DOT_2 with value -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumNumberEnum\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining Amount Model in Kotlin for Swagger/OpenAPI\nDESCRIPTION: This code snippet defines the Amount data model with two properties: value (a Double) and currency (a reference to the Currency model). The value property includes a description, while the currency property is a reference to another model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n# Amount\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**value** | **kotlin.Double** | some description  | \n**currency** | [**Currency**](Currency.md) |  | \n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values Table in Markdown\nDESCRIPTION: A markdown table defining the possible values for ArrayEnumEnum, which is used in a list property. The values include \"fish\" and \"crab\" as string-based enumeration values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | &quot;fish&quot;\nCRAB | &quot;crab&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Object Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Pet object using a Markdown table. It includes the property names, data types, descriptions, and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown Table\nDESCRIPTION: Markdown table defining the properties of a Tag model including id (Long) and name (String) fields, both marked as optional. This format is commonly used in Swagger/OpenAPI documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java using Swagger Codegen FakeApi\nDESCRIPTION: This snippet illustrates the usage of the testJsonFormData method in the FakeApi class. It shows how to pass string parameters and handle potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterNumber Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties table for the OuterNumber model. However, the table is empty, suggesting that the OuterNumber model does not have any defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining Lenses for Animal Subtype Models (Cat and Dog) in Haskell\nDESCRIPTION: Haskell lens definitions for accessing properties of animal subtypes including Cat and Dog models. These lenses provide typed access to both common animal properties and subtype-specific properties like 'declawed' for cats and 'breed' for dogs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_58\n\nLANGUAGE: haskell\nCODE:\n```\n-- | <a>catClassName</a> Lens\ncatClassNameL :: Lens_' Cat (Text)\n\n-- | <a>catColor</a> Lens\ncatColorL :: Lens_' Cat (Maybe Text)\n\n-- | <a>catDeclawed</a> Lens\ncatDeclawedL :: Lens_' Cat (Maybe Bool)\n\n-- | <a>dogClassName</a> Lens\ndogClassNameL :: Lens_' Dog (Text)\n\n-- | <a>dogColor</a> Lens\ndogColorL :: Lens_' Dog (Maybe Text)\n\n-- | <a>dogBreed</a> Lens\ndogBreedL :: Lens_' Dog (Maybe Text)\n\n\nmodule SwaggerPetstore\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Class in Haskell\nDESCRIPTION: Defines the Model200Response data type for testing model name starting with a number, with constructor, accessors for name and class fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_31\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Model200Response Model for testing model name starting with number\ndata Model200Response\nModel200Response :: !(Maybe Int) -> !(Maybe Text) -> Model200Response\n\n-- | \"name\"\n[model200ResponseName] :: Model200Response -> !(Maybe Int)\n\n-- | \"class\"\n[model200ResponseClass] :: Model200Response -> !(Maybe Text)\n\n-- | FromJSON Model200Response\n\n-- | ToJSON Model200Response\n\n-- | Construct a value of type <a>Model200Response</a> (by applying it's\n```\n\n----------------------------------------\n\nTITLE: Installing an API Module from Local Path\nDESCRIPTION: Command to install the API module from a local directory without publishing (not recommended).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: Defines the properties of the EnumArrays model, including justSymbol (a single enum value) and arrayEnum (an array of enum values). Both properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Swagger Codegen\nDESCRIPTION: Documents the properties of the ArrayOfNumberOnly class which contains an optional property named 'arrayNumber' that represents a list of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Dart\nDESCRIPTION: This snippet shows how to update an existing pet in the store. It requires OAuth2 authentication and accepts a Pet object as input.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar body = new Pet(); // Pet | Pet object that needs to be added to the store\n\ntry { \n    api_instance.updatePet(body);\n} catch (e) {\n    print(\"Exception when calling PetApi->updatePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown Table\nDESCRIPTION: Markdown table documentation defining the Dog model schema with a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in C#\nDESCRIPTION: Example code demonstrating how to test the \"client\" model using the FakeApi. Makes a PATCH request to /fake endpoint with a client model object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClientModelExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test \\\"client\\\" model\n                ModelClient result = apiInstance.TestClientModel(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestClientModel: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Number Constants Enum in Java\nDESCRIPTION: Defines a set of enum constants using BigDecimal for representing numbers 7 through 10. Each constant is initialized with a specific numeric value using the BigDecimal constructor.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Values for MapOfEnumString in SwaggerPetstore\nDESCRIPTION: Specifies the enumerated string values that can be used in the mapOfEnumString property. The allowed values are 'UPPER' and 'lower'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: {String: String}\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Ruby Swagger Client\nDESCRIPTION: Documentation for the 'ArrayOfNumberOnly' model class showing its properties. The class contains a single optional property 'array_number' which is an array of floating-point numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_number** | **Array&lt;Float&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for SwagOrder in Markdown\nDESCRIPTION: Specifies the possible values for the StatusEnum used in the SwagOrder model. It defines three status options: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagOrder.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the FormatTest model using a markdown table. It includes property names, data types, descriptions, and optional status for each field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient-php via Composer\nDESCRIPTION: Instructions for installing the PHP client via Composer by adding the repository and dependency to composer.json file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/php/SwaggerClient-php/README.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"repositories\": [\n    {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/GIT_USER_ID/GIT_REPO_ID.git\"\n    }\n  ],\n  \"require\": {\n    \"GIT_USER_ID/GIT_REPO_ID\": \"*@dev\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger/OpenAPI\nDESCRIPTION: Specifies the properties of an Animal model using a markdown table format compatible with Swagger/OpenAPI documentation. It defines two properties: className (required) and color (optional), both of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition Table - Swagger Markdown\nDESCRIPTION: Defines the core properties of the EnumTest class including enumString, enumStringRequired, enumInteger, enumNumber, and outerEnum fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | **String** |  | [optional] \n**enumStringRequired** | **String** |  | \n**enumInteger** | **Number** |  | [optional] \n**enumNumber** | **Number** |  | [optional] \n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: HasOnlyReadOnly Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the HasOnlyReadOnly model, including property names, types, descriptions and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Bar** | **string** |  | [optional] [default to null]\n**Foo** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Pet model, including field names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List<String>** |  | \n**tags** | [**List<Tag>**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the MapTest model, including nested map structures and their types. Contains two properties: MapMapOfString (a nested map of strings) and MapOfEnumString (a map of enum strings).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **MapMapOfString** | [**map[string]map[string]string**](map.md) |  | [optional] [default to null] |\n| **MapOfEnumString** | **map[string]string** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties Schema for Swagger-Codegen in Markdown\nDESCRIPTION: This schema defines the properties of a User model for Swagger-Codegen. It includes standard user information such as ID, username, personal details, contact information, login credentials, and status. All fields are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Category model using a markdown table. It specifies two properties: 'Id' of type int64 and 'Name' of type string, both optional with default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**Name** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input - Java\nDESCRIPTION: Example code showing how to create multiple users using a list input. Similar to array input method but uses List collection type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Category model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**name** | **str** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown for Swagger\nDESCRIPTION: Specifies the properties of an Order object including id, petId, quantity, shipDate, status, and complete. Each property is defined with its type and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Order\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Build for Swagger API Servers\nDESCRIPTION: Configures a CMake build system for three API servers (Pet, Store, User) using C++11. Sets up include directories, source file groups, and links required libraries including Pistache and pthread. The build creates separate executables for each API endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/pistache-server/CMakeLists.txt#2025-04-20_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 3.2)\n\nproject(server)\n\nset(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} -std=c++11)\n\nlink_directories(/usr/local/lib/)\n\naux_source_directory(model MODEL_SOURCES)\nfile(GLOB PET_API_SOURCES\n\"api/PetApi.h\"\n\"api/PetApi.cpp\"\n\"impl/PetApiImpl.h\"\n\"impl/PetApiImpl.cpp\"\n)\nfile(GLOB STORE_API_SOURCES\n\"api/StoreApi.h\"\n\"api/StoreApi.cpp\"\n\"impl/StoreApiImpl.h\"\n\"impl/StoreApiImpl.cpp\"\n)\nfile(GLOB USER_API_SOURCES\n\"api/UserApi.h\"\n\"api/UserApi.cpp\"\n\"impl/UserApiImpl.h\"\n\"impl/UserApiImpl.cpp\"\n)\n\ninclude_directories(model)\ninclude_directories(api)\ninclude_directories(impl)\n\nset(PET_API_SERVER_SOURCES\nPetApiMainServer.cpp\n    ${MODEL_SOURCES}\n    ${PET_API_SOURCES})\nset(STORE_API_SERVER_SOURCES\nStoreApiMainServer.cpp\n    ${MODEL_SOURCES}\n    ${STORE_API_SOURCES})\nset(USER_API_SERVER_SOURCES\nUserApiMainServer.cpp\n    ${MODEL_SOURCES}\n    ${USER_API_SOURCES})\n\nadd_executable(pet_api_server\n${PET_API_SERVER_SOURCES})\nadd_executable(store_api_server\n${STORE_API_SERVER_SOURCES})\nadd_executable(user_api_server\n${USER_API_SERVER_SOURCES})\n\ntarget_link_libraries(pet_api_server pistache pthread)\ntarget_link_libraries(store_api_server pistache pthread)\ntarget_link_libraries(user_api_server pistache pthread)\n```\n\n----------------------------------------\n\nTITLE: Importing ApiResponse Model in Dart\nDESCRIPTION: Shows how to import the ApiResponse model from the Swagger package in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization in Java Swagger Client\nDESCRIPTION: Example of calling the testJsonFormData endpoint with string parameters for testing JSON serialization of form data. Demonstrates basic parameter passing and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest class using a markdown table. It includes two properties: mapMapOfString and mapOfEnumString, both of which are optional and use complex map types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Swift Package Manager Configuration for RxSwift\nDESCRIPTION: This snippet shows the Package.swift file configuration for installing RxSwift using Swift Package Manager. It defines the package name and dependency on RxSwift.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Swift\nCODE:\n```\nimport PackageDescription\n\nlet package = Package(\n    name: \"RxTestProject\",\n    targets: [],\n    dependencies: [\n        .Package(url: \"https://github.com/ReactiveX/RxSwift.git\", majorVersion: 3)\n    ]\n)\n```\n\n----------------------------------------\n\nTITLE: SwagUser Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the SwagUser model including data types and optional status. Contains fields for user identification, authentication, personal information, and contact details with all fields marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUser.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwagUser\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Custom Server Implementation\nDESCRIPTION: Commands to copy the example server implementation files to use as a base for a custom server implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rust-server/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp petstore_api/examples/server.rs src/main.rs\ncp petstore_api/examples/server_lib/mod.rs src/lib.rs\ncp petstore_api/examples/server_lib/server.rs src/server.rs\n```\n\n----------------------------------------\n\nTITLE: SwagTag Model Properties Table\nDESCRIPTION: Markdown table defining the SwagTag model properties including their types, descriptions and optional status\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagTag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown for Swagger Petstore\nDESCRIPTION: This markdown table defines the properties of the Cat model. It includes a single optional property 'declawed' of type Boolean. The table format is typical for Swagger/OpenAPI specifications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: Shows how to import the Swagger API package in a Dart application. This is required before using any of the API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Create Users With Array Input Example in C#\nDESCRIPTION: Example code showing how to create multiple users by passing an array of User objects. Takes a List<User> as input and returns void.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in C# with Dictionary Types\nDESCRIPTION: Defines the properties of the MapTest class in C#. It includes two dictionary properties: MapMapOfString which is a nested dictionary mapping strings to dictionaries of strings, and MapOfEnumString which maps strings to string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.MapTest\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**MapMapOfString** | **Dictionary&lt;string, Dictionary&lt;string, string&gt;&gt;** |  | [optional] \n**MapOfEnumString** | **Dictionary&lt;string, string&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in C#\nDESCRIPTION: Documents the structure of the ArrayTest model class with various array properties including string arrays, nested integer arrays, and nested model arrays.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ArrayTest\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **List<string>** |  | [optional] \n**ArrayArrayOfInteger** | **List<List<long?>>** |  | [optional] \n**ArrayArrayOfModel** | **List<List<ReadOnlyFirst>>** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Initializing and Using FakeClassnameTags123Api in Java\nDESCRIPTION: This snippet demonstrates how to initialize the ApiClient, configure API key authorization, and make a call to the testClassname method of FakeClassnameTags123Api. It includes error handling and showcases how to use the API in a Java environment.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining List model with _123List property in OpenAPI/Swagger Specification\nDESCRIPTION: Defines a model named 'List' with a single optional String property named '_123List'. This is specified in Markdown table format commonly used in OpenAPI/Swagger specification files.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# List\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum in Markdown\nDESCRIPTION: This snippet defines an enumeration named 'Ints' with integer values from 0 to 6. Each enum value is represented as a bullet point with its name and corresponding numeric value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Client with Maven\nDESCRIPTION: Maven command to install the Swagger Petstore client library to the local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nmvn clean install\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Model200Response class using a markdown table. It specifies two optional properties: 'Name' of type int? and 'Class' of type string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Name** | **int?** |  | [optional] |\n| **Class** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the ClassModel type, containing a single optional '_class' property of String type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Extending User Model with ResponseCollectionSerializable in Swift\nDESCRIPTION: Enhances the User model to conform to both ResponseObjectSerializable and ResponseCollectionSerializable protocols, enabling automatic serialization of both individual user objects and collections of users from HTTP responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_48\n\nLANGUAGE: swift\nCODE:\n```\nfinal class User: ResponseObjectSerializable, ResponseCollectionSerializable {\n    let username: String\n    let name: String\n\n    init?(response: NSHTTPURLResponse, representation: AnyObject) {\n        self.username = response.URL!.lastPathComponent!\n        self.name = representation.valueForKeyPath(\"name\") as! String\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Server URL Configuration\nDESCRIPTION: The URL endpoint where the Swagger UI interface can be accessed for API documentation and testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/spring-mvc-j8-localdatetime/README.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttp://localhost:8002/v2/swagger-ui.html\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the ArrayOfArrayOfNumberOnly model. Contains a single optional property arrayArrayNumber which is a nested List of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Go API Server for Petstore\nDESCRIPTION: This snippet shows the command to run the Go API server for the Petstore application. It uses the 'go run' command to execute the main.go file, which starts the server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/go-api-server/go/README.md#2025-04-20_snippet_0\n\nLANGUAGE: go\nCODE:\n```\ngo run main.go\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Java Client to Remote Maven Repository\nDESCRIPTION: This command deploys the Swagger Java client library to a remote Maven repository. It requires the repository settings to be configured beforehand.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of the AnimalFarm model. However, the table is empty, suggesting that the model currently has no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the HasOnlyReadOnly model, including their names, types, and optional status. The model has two properties: 'bar' and 'foo', both of type String and marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting Alamofire Dependency for Swift Package Manager (Swift 4)\nDESCRIPTION: Swift code snippet showing how to add Alamofire as a dependency in a Package.swift file for Swift 4 projects using Swift Package Manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_6\n\nLANGUAGE: Swift\nCODE:\n```\ndependencies: [\n    .package(url: \"https://github.com/Alamofire/Alamofire.git\", from: \"4.9.0\")\n]\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown\nDESCRIPTION: Specifies the properties of a Dog model using a markdown table. The model has one optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest class using a markdown table. It includes two properties: mapMapOfString (a nested map structure) and mapOfEnumString (a map with enum values).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | **{String: {String: String}}** |  | [optional] \n**mapOfEnumString** | **{String: String}** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in SwaggerPetstore\nDESCRIPTION: Documentation for the Client model class in the SwaggerPetstore API. It defines a single optional property 'client' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Loading Pet Model Package in Dart\nDESCRIPTION: Demonstrates how to import the Pet model package in a Dart application using the swagger API package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Loading the OuterBoolean Model Package in Perl\nDESCRIPTION: Example showing how to load the WWW::SwaggerClient::Object::OuterBoolean model package in a Perl application. This is typically the first step before using the model in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::OuterBoolean;\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration Values in Markdown\nDESCRIPTION: A markdown representation of an enumeration called 'Ints' containing integer constants numbered from 0 to 6. Each enum value uses a descriptive name (NUMBER_X) mapped to its numerical value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Namespace Imports for Swagger Petstore SDK in C#\nDESCRIPTION: Required namespace imports to use the Swagger Petstore C# SDK. These namespaces provide access to the API clients, models, and other SDK components.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Creating NuGet Package for C# Swagger Petstore SDK\nDESCRIPTION: This command shows how to create a NuGet package for the C# Swagger Petstore SDK using the project file and output it to a directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/README.md#2025-04-20_snippet_2\n\nLANGUAGE: nuget\nCODE:\n```\nnuget pack -Build -OutputDirectory out IO.Swagger.csproj\n```\n\n----------------------------------------\n\nTITLE: Starting PHP Development Server for Swagger Generated API\nDESCRIPTION: Command to start a PHP development server for the Swagger generated API, specifying the host, port, and public directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/ze-ph/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nphp -S 0.0.0.0:8080 -t ./public\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest model using a markdown table. It includes two map properties with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: This snippet defines a ModelBoolean enum with two possible values: TRUE (true) and FALSE (false). It's likely used for boolean representation in API models generated by Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet Using Bash CLI\nDESCRIPTION: Example showing how to delete a pet by ID using the petstore CLI. The endpoint requires a pet ID parameter and optionally accepts an API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli deletePet petId=value api_key:value\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the EnumStringEnum used in the EnumTest model. It includes uppercase, lowercase, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Handling GET Request with JSON Response in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to make a GET request using Alamofire and handle the response as JSON. It includes validation and debug prints the entire response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_14\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\")\n         .validate()\n         .responseJSON { response in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Class Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of the NumberOnly class. Contains a single optional property 'justNumber' of type Number.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Python Client Generation Options\nDESCRIPTION: This JSON response shows the available options for customizing Python client generation, including package name, version, and parameter sorting.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/online-generators.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"packageName\": {\n    \"opt\": \"packageName\",\n    \"description\": \"python package name (convention: snake_case).\",\n    \"type\": \"string\",\n    \"default\": \"swagger_client\"\n  },\n  \"packageVersion\": {\n    \"opt\": \"packageVersion\",\n    \"description\": \"python package version.\",\n    \"type\": \"string\",\n    \"default\": \"1.0.0\"\n  },\n  \"sortParamsByRequiredFlag\": {\n    \"opt\": \"sortParamsByRequiredFlag\",\n    \"description\": \"Sort method arguments to place required parameters before optional parameters.\",\n    \"type\": \"boolean\",\n    \"default\": \"true\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: FormatTest Model Property Definitions\nDESCRIPTION: Markdown table defining the properties of the FormatTest model class. Shows property names, data types, and indicates which fields are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Integer** | **int?** |  | [optional] \n**Int32** | **int?** |  | [optional] \n**Int64** | **long?** |  | [optional] \n**Number** | **decimal?** |  | \n**Float** | **float?** |  | [optional] \n**Double** | **double?** |  | [optional] \n**String** | **string** |  | [optional] \n**Byte** | **byte[]** |  | \n**Binary** | **byte[]** |  | [optional] \n**Date** | **DateTime?** |  | \n**DateTime** | **DateTime?** |  | [optional] \n**Uuid** | **Guid?** |  | [optional] \n**Password** | **string** |  |\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values in Swagger\nDESCRIPTION: Defines possible string enum values for the enumStringRequired property including UPPER, lower, and empty string cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger\nDESCRIPTION: A tabular definition of the Category model's properties, showing field names, data types, and optional status. The model contains a Long id field and a String name field, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Order Statuses in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values: PLACED, APPROVED, and DELIVERED. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Documentation table defining the properties of a Tag model. Contains two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in Objective-C\nDESCRIPTION: This snippet shows how to delete a pet from the store using the SWGPetApi. It requires OAuth2 authentication, a pet ID, and an optional API key. The method returns void and uses a completion handler to handle errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: Objective-C\nCODE:\n```\n-(NSURLSessionTask*) deletePetWithPetId: (NSNumber*) petId\n    apiKey: (NSString*) apiKey\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP GET Endpoint for User Lookup\nDESCRIPTION: HTTP endpoint definition for fetching a user's details by their username.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_23\n\nLANGUAGE: http\nCODE:\n```\nget /user/{username}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in SwaggerPetstore FakeApi (JavaScript)\nDESCRIPTION: This snippet demonstrates how to use the testEnumParameters method of the FakeApi class. It sets up various enum parameters for form, header, and query, then calls the API method with these options. The method tests different types of enum parameters including string arrays, strings, integers, and doubles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.FakeApi();\n\nlet opts = { \n  'enumFormStringArray': [\"enumFormStringArray_example\"], // [String] | Form parameter enum test (string array)\n  'enumFormString': \"-efg\", // String | Form parameter enum test (string)\n  'enumHeaderStringArray': [\"enumHeaderStringArray_example\"], // [String] | Header parameter enum test (string array)\n  'enumHeaderString': \"-efg\", // String | Header parameter enum test (string)\n  'enumQueryStringArray': [\"enumQueryStringArray_example\"], // [String] | Query parameter enum test (string array)\n  'enumQueryString': \"-efg\", // String | Query parameter enum test (string)\n  'enumQueryInteger': 56, // Number | Query parameter enum test (double)\n  'enumQueryDouble': 1.2 // Number | Query parameter enum test (double)\n};\napiInstance.testEnumParameters(opts).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Number Constants Enum with BigDecimal in Java\nDESCRIPTION: This code snippet defines an enum called 'Numbers' with four constants representing the numbers 7, 8, 9, and 10 as BigDecimal objects. Each constant is initialized with a new BigDecimal instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\n\nNUMBER_8 (value: new BigDecimal(8))\n\nNUMBER_9 (value: new BigDecimal(9))\n\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite Objects in C#\nDESCRIPTION: This code snippet shows how to use the FakeOuterCompositeSerialize method to test serialization of objects with outer number type. It demonstrates creating a FakeApi instance, calling the method with an optional OuterComposite object, and handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterCompositeSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterComposite(); // OuterComposite | Input composite as post body (optional) \n\n            try\n            {\n                OuterComposite result = apiInstance.FakeOuterCompositeSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterCompositeSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Status Enum Values - Markdown\nDESCRIPTION: Defines the possible values for the order status enumeration: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Value |\n| ---- | ----- |\n| PLACED | \"placed\" |\n| APPROVED | \"approved\" |\n| DELIVERED | \"delivered\" |\n```\n\n----------------------------------------\n\nTITLE: Updating a User with Petstore CLI\nDESCRIPTION: This snippet shows how to update a user's information using the Petstore CLI. It requires a username and an updated User object as input. This action can only be performed by a logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli updateUser username=value\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Kotlin\nDESCRIPTION: Specifies the properties of the Tag model, including their names, data types, and optional status. The 'id' property is a Long type, while the 'name' property is a String type. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\n**id** | **kotlin.Long** |  |  [optional]\n**name** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum Values in Markdown\nDESCRIPTION: Defines an enumeration type ModelBoolean with two possible values: TRUE (true) and FALSE (false). Used for boolean value representation in model generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: MapTest Model Property Definitions\nDESCRIPTION: Defines two map properties: mapMapOfString (a nested map of strings) and mapOfEnumString (a map with enum string values). Both properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**mapMapOfString** | **{String: {String: String}}** |  | [optional] \n**mapOfEnumString** | **{String: String}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the Category Model Package in Perl\nDESCRIPTION: Example of how to load the Category model class from the WWW::SwaggerClient package in a Perl application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Category;\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Model Properties in C#\nDESCRIPTION: Declares two dictionary properties in the MapTest model: MapMapOfString for nested string dictionaries and MapOfEnumString for enum-string mappings. Both properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nMapMapOfString = Dictionary<string, Dictionary<string, string>>\nMapOfEnumString = Dictionary<string, string>\n```\n\n----------------------------------------\n\nTITLE: C# Dictionary Property Definitions for Additional Properties Class\nDESCRIPTION: Defines two dictionary properties: a simple string-to-string map and a nested dictionary map. These properties are marked as optional and represent flexible key-value storage capabilities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**MapProperty** | **Dictionary<string, string>** |  | [optional] \n**MapOfMapProperty** | **Dictionary<string, Dictionary<string, string>>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring Bash Completion in .bashrc on macOS\nDESCRIPTION: This snippet shows how to configure bash-completion in the .bashrc file on macOS when installed via Homebrew.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nif [ -f $(brew --prefix)/etc/bash_completion ]; then\n  . $(brew --prefix)/etc/bash_completion\nfi\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Definition\nDESCRIPTION: Enum definition containing special symbols as values: greater than or equal to (>=) and dollar sign ($).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nGREATER_THAN_OR_EQUAL_TO | \">=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: Defines the properties of the EnumArrays model using a markdown table. It includes the property names, types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Properties in Swagger\nDESCRIPTION: Property definition table for ArrayOfArrayOfNumberOnly class showing a nested array of BigDecimal numbers. The property is optional and uses List<List<BigDecimal>> as its type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Definition in Markdown\nDESCRIPTION: Structured markdown table defining the User model properties for Swagger codegen. The table documents each property's name, data type, description, and whether it's optional. This schema is used to generate API client code across various programming languages.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Swagger\nDESCRIPTION: This snippet defines the properties of the List model in Swagger. It includes a single optional property '_123List' of type string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.List\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ClassModel using a markdown table. It specifies a single optional string property named 'Class'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Class** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Kotlin\nDESCRIPTION: Schema definition of a Category model with two optional properties: a Long id and a String name. This appears to be part of a Swagger/OpenAPI specification for generating API code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **kotlin.Long** |  |  [optional]\n**name** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting up local development environment for the SDK\nDESCRIPTION: Steps to install dependencies for local development without publishing to npm registry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Schema in Swagger/OpenAPI Specification\nDESCRIPTION: This schema defines the Category model with two optional properties: id (Long) and name (String). The schema is formatted as a Markdown table showing the property names, data types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the Order model using a markdown table. It specifies the name, type, description, and optional notes for each property of the Order model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**pet_id** | **int** |  | [optional] \n**quantity** | **int** |  | [optional] \n**ship_date** | [**\\DateTime**](\\DateTime.md) |  | [optional] \n**status** | **string** | Order Status | [optional] \n**complete** | **bool** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Defining Date and Time Types in Haskell\nDESCRIPTION: Defines custom DateTime and Date types with associated parsing and formatting functions for API date and time handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_8\n\nLANGUAGE: haskell\nCODE:\n```\nnewtype DateTime\nDateTime :: UTCTime -> DateTime\n[unDateTime] :: DateTime -> UTCTime\n\n-- | <pre>\n--   _parseISO8601\n--   </pre>\n_readDateTime :: (ParseTime t, Monad m, Alternative m) => String -> m t\n\n-- | <pre>\n--   TI.formatISO8601Millis\n--   </pre>\n_showDateTime :: (t ~ UTCTime, FormatTime t) => t -> String\n\n-- | parse an ISO8601 date-time string\n_parseISO8601 :: (ParseTime t, Monad m, Alternative m) => String -> m t\nnewtype Date\nDate :: Day -> Date\n[unDate] :: Date -> Day\n\n-- | <pre>\n--   TI.parseTimeM True TI.defaultTimeLocale \"%Y-%m-%d\"\n--   </pre>\n_readDate :: (ParseTime t, Monad m) => String -> m t\n\n-- | <pre>\n--   TI.formatTime TI.defaultTimeLocale \"%Y-%m-%d\"\n--   </pre>\n_showDate :: FormatTime t => t -> String\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Endpoint\nDESCRIPTION: URL to access the Swagger JSON specification for the API. This endpoint provides the OpenAPI specification used by Swagger UI and other tools.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/eap-joda/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: TestBodyWithQueryParams Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing a combined body and query parameter request. It requires a User object in the body and a string query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: Go\nCODE:\n```\n# **TestBodyWithQueryParams**\n> TestBodyWithQueryParams(ctx, body, query)\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**User**](User.md)|  | \n  **query** | **string**|  | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerPetstore from Git Repository\nDESCRIPTION: Command to install SwaggerPetstore directly from a Git repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnpm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n----------------------------------------\n\nTITLE: Importing the User Model in Dart with Swagger\nDESCRIPTION: This snippet shows how to import the User model from the Swagger API package in a Dart application. The import statement loads the complete API package which includes the User model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Testing Outer Number Serialization in Go API\nDESCRIPTION: Method for testing serialization of outer number types. It accepts an optional OuterNumber object in the request body and returns an OuterNumber response. No authorization is required for this endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# **FakeOuterNumberSerialize**\n> OuterNumber FakeOuterNumberSerialize(ctx, optional)\n\n\nTest serialization of outer number types\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterNumberSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterNumberSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterNumber**](OuterNumber.md)| Input number as post body | \n\n### Return type\n\n[**OuterNumber**](OuterNumber.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Status Enum Values in Markdown\nDESCRIPTION: Markdown table defining the possible values for the StatusEnum enumeration used in the Pet model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nAVAILABLE | \"available\"\nPENDING | \"pending\"\nSOLD | \"sold\"\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of a Dog object. It includes the property names, their types, descriptions, and additional notes such as optional fields and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **className** | **string** |  | [default to null] |\n| **color** | **string** |  | [optional] [default to null] |\n| **breed** | **string** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Loading the WWW::SwaggerClient::UserApi Package in Perl\nDESCRIPTION: Demonstrates how to load the UserApi module in a Perl application to access user management functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::UserApi;\n```\n\n----------------------------------------\n\nTITLE: Updating User Information\nDESCRIPTION: Example demonstrating how to update an existing user's information. Requires username and updated User object as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Swagger Model Properties Table\nDESCRIPTION: Markdown table documenting the properties of the MixedPropertiesAndAdditionalPropertiesClass model, including their types and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: AnimalFarm Model Properties Table\nDESCRIPTION: Empty markdown table showing the structure for documenting model properties including name, type, description and notes columns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: This code snippet defines a ModelBoolean enum with two possible values: TRUE (represented by true) and FALSE (represented by false). This enum can be used in Swagger Codegen projects to represent boolean values in a more structured way.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Running PHP Development Server for Slim Application\nDESCRIPTION: This command starts a PHP development server on localhost:8888, serving the Slim application from the example directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/slim/slim/example/README.md#2025-04-20_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n$ cd Slim\n$ php -S localhost:8888 -t example example/index.php\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Schema in Markdown\nDESCRIPTION: Markdown table defining the ClassModel schema properties. Contains a single optional string property named _class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Basic Angular Module Integration without Provider Configuration\nDESCRIPTION: Basic setup to import the API module into an Angular project without configuring providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Creating Cache Directory for PHP Swagger Server\nDESCRIPTION: Command to create a cache directory required for configuration and metadata caches in the Swagger generated server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/ze-ph/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmkdir -p ./data/cache/ZendCache\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties in Swagger\nDESCRIPTION: Markdown table defining model properties including name (required Integer), snakeCase (optional Integer), property (optional String), and _123Number (optional Integer). Used for generating model classes in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using API in Component\nDESCRIPTION: Example of injecting and using the API service in an Angular component.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the MapTest model using a markdown table. It specifies the name, type, description, and additional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**map_map_of_string** | **map[String, map[String, string]]** |  | [optional] [default to null]\n**map_of_enum_string** | **map[String, string]** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Retrofit Dependency to Maven Project\nDESCRIPTION: This XML snippet shows how to add the Swagger Petstore Retrofit client library as a dependency in a Maven project's pom.xml file. It specifies the groupId, artifactId, version, and compile scope.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-retrofit</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Loading ArrayTest Model Package in Perl\nDESCRIPTION: Shows how to load the ArrayTest model package in a Perl application using the WWW::SwaggerClient library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ArrayTest;\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Enumeration in Markdown\nDESCRIPTION: Defines the JustSymbolEnum enumeration using a markdown table. It includes the enumeration names and their corresponding values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Using AnotherFakeApi in Java with Swagger Petstore Client\nDESCRIPTION: Java example demonstrating how to use the AnotherFakeApi class from the Swagger Petstore OkHttp4 Gson client library to make an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/README.md#2025-04-20_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.AnotherFakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class AnotherFakeApiExample {\n\n    public static void main(String[] args) {\n        \n        AnotherFakeApi apiInstance = new AnotherFakeApi();\n        Client body = new Client(); // Client | client model\n        try {\n            Client result = apiInstance.testSpecialTags(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: EnumClass Properties Table Structure in Markdown\nDESCRIPTION: Markdown table structure defining the properties of the EnumClass model. The table includes columns for Name, Type, Description and Notes, though no actual properties are listed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Documentation Directory Structure\nDESCRIPTION: Shows the folder structure of the documentation, including the location of configuration files, scripts, and generated documentation\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/tizen/doc/README.md#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n.\n├── logo.png                  \\\\Logo of the project\n├── Doxyfile                  \\\\Doxygen config files\n├── generateDocumentation.sh  \\\\Script to run to generate documentation\n├── README.md                 \\\\This file\n├── SDK                       \\\\Documentation for all classes in Swagger Petstore Tizen Client SDK. See ./html/index.html\n│   └── html\n```\n\n----------------------------------------\n\nTITLE: Loading the Amount Model Package in Dart\nDESCRIPTION: Demonstrates how to import the API package containing the Amount model in a Dart application. This import statement is required before using the Amount model in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties in Markdown\nDESCRIPTION: Describes the properties of the EnumTest model, including their names, types, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Properties in Markdown Table\nDESCRIPTION: Documentation table defining the properties of ArrayTest class including array types. Contains three properties: arrayOfString (List<String>), arrayArrayOfInteger (List<List<Long>>), and arrayArrayOfModel (List<List<ReadOnlyFirst>>), all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore SDK via NPM\nDESCRIPTION: Command to install the Swagger Petstore JavaScript client via NPM package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install swagger_petstore --save\n```\n\n----------------------------------------\n\nTITLE: Installing Scala Akka Petstore Client with Maven\nDESCRIPTION: Command to install the API client library to your local Maven repository. This step is required before using the client in your project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/akka-scala/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean in Java using FakeApi\nDESCRIPTION: This snippet demonstrates how to use the fakeOuterBooleanSerialize method of FakeApi to test serialization of outer boolean types. It shows how to create an instance of FakeApi, call the method with a boolean input, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet - Java Client Implementation\nDESCRIPTION: Example code demonstrating pet deletion by ID using the Java client. Requires OAuth2 authentication and optional API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Defines the properties of the ModelApiResponse class using a Markdown table. It specifies three optional properties: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the MapTest model using a markdown table. It specifies the name, type, description, and additional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**MapMapOfString** | [**map[string]map[string]string**](map.md) |  | [optional] [default to null]\n**MapOfEnumString** | **map[string]string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: String Enum Values\nDESCRIPTION: Definition of possible values for the EnumStringEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Logging User out of System in Objective-C\nDESCRIPTION: An Objective-C method for ending a user's active session. The method sends a GET request to the /user/logout endpoint and does not require any parameters or return any data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) logoutUserWithCompletionHandler: \n        (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Logs out current logged in user session\n[apiInstance logoutUserWithCompletionHandler: \n          ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->logoutUser: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Model Property Definitions\nDESCRIPTION: Markdown table defining the properties of the OuterComposite model including their types, descriptions and optional status. The model has three optional properties that reference other model types: OuterNumber, OuterString, and OuterBoolean.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **my_number** | [**OuterNumber**](OuterNumber.md) |  | [optional] |\n| **my_string** | [**OuterString**](OuterString.md) |  | [optional] |\n| **my_boolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java Swagger Client\nDESCRIPTION: Example showing how to call testJsonFormData() method with string parameters for testing JSON serialization of form data. Includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple API Modules Configuration\nDESCRIPTION: Setup for using multiple API modules with alias names to avoid conflicts\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Schema Properties in Markdown\nDESCRIPTION: A markdown table that defines the properties of the Capitalization schema. It includes various naming conventions with their data types, optional status, and descriptions where available.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring API Services\nDESCRIPTION: YAML configuration for tagging the API implementation service in Symfony's service container.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/README.md#2025-04-20_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n# src/Acme/MyBundle/Resources/services.yml\nservices:\n    # ...\n    acme.my_bundle.api.pet:\n        class: Acme\\MyBundle\\Api\\PetApi\n        tags:\n            - { name: \"swagger_server.api\", api: \"pet\" }\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: Defines the properties of the EnumArrays model, including justSymbol and arrayEnum. The justSymbol is an optional single enum, while arrayEnum is an optional list of enums.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# EnumArrays\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayTest model including arrayOfString, arrayArrayOfInteger, and arrayArrayOfModel. Each property is defined with its name, type, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Model200Response class using a markdown table. It specifies two optional properties: 'name' as an Integer and 'propertyClass' as a String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Properties in Swagger CodeGen Schema\nDESCRIPTION: Markdown table defining the properties of a Client class. Contains a single optional string property named 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of EnumTest class including optional and required enum fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Swagger API Specification\nDESCRIPTION: Definition of the Tag model with its properties including Id (long type) and Name (string type). Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Tag\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Name** | **string** |  | [optional] \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Class Properties in Kotlin for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a Tag class in Kotlin, including an optional Long id and an optional String name. It's presented in a markdown table format that documents the property names, types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **kotlin.Long** |  |  [optional]\n**name** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java using Swagger Client\nDESCRIPTION: Example of how to test serialization of outer boolean types using the FakeApi client. Takes a boolean value as input and returns a boolean result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Code Injection Test Method in Objective-C\nDESCRIPTION: Method declaration for testing code injection with special characters. Takes an optional string parameter and returns void with a completion handler for error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/docs/SWGFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) testCodeInjectEndRnNRWithTestCodeInjectEndRnNR: (NSString*) testCodeInjectEndRnNR\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: Specifies the possible values for the pet status enumeration, including 'available', 'pending', and 'sold'. This enumeration is used in the Pet model's status property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Successful User Creation\nDESCRIPTION: JSON schema defining the response structure for a successful user creation operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_17\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"successful operation\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelApiResponse struct using a markdown table. Includes the name, type, description, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Code** | **int32** |  | [optional] [default to null]\n**Type_** | **string** |  | [optional] [default to null]\n**Message** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Customizing Python Client Generation with Package Name\nDESCRIPTION: This JSON payload demonstrates how to set a custom package name when generating a Python client for the Swagger Petstore API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/online-generators.md#2025-04-20_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"options\": {\n    \"packageName\": \"pet_store\"\n  },\n  \"swaggerUrl\": \"https://petstore.swagger.io/v2/swagger.json\"\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Tag Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Swagger API package in Dart to use the Tag model. It's typically placed at the beginning of a Dart file that needs to work with the Tag model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Using FakeApi to Test Enum Parameters in C#\nDESCRIPTION: Example of using FakeApi to test enum parameters in different parameter locations (form, header, query). The example shows how to pass string arrays, single strings, integers, and doubles as enum parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEnumParametersExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var enumFormStringArray = enumFormStringArray_example;  // List<string> | Form parameter enum test (string array) (optional) \n            var enumFormString = enumFormString_example;  // string | Form parameter enum test (string) (optional)  (default to -efg)\n            var enumHeaderStringArray = enumHeaderStringArray_example;  // List<string> | Header parameter enum test (string array) (optional) \n            var enumHeaderString = enumHeaderString_example;  // string | Header parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryStringArray = enumQueryStringArray_example;  // List<string> | Query parameter enum test (string array) (optional) \n            var enumQueryString = enumQueryString_example;  // string | Query parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryInteger = 56;  // int? | Query parameter enum test (double) (optional) \n            var enumQueryDouble = 1.2;  // double? | Query parameter enum test (double) (optional) \n\n            try\n            {\n                // To test enum parameters\n                apiInstance.TestEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEnumParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass constants in Markdown\nDESCRIPTION: Defines three constants for the EnumClass enum, each with a specific string value. The constants are '_ABC', '_EFG', and '_XYZ_', with values '_abc', '-efg', and '(xyz)' respectively.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# EnumClass\n\n## Enum\n\n\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: C# MapTest Model Property Definitions\nDESCRIPTION: Defines two dictionary properties in the MapTest class: a nested string dictionary and an enum string dictionary. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\npublic Dictionary<string, Dictionary<string, string>> MapMapOfString { get; set; }\npublic Dictionary<string, string> MapOfEnumString { get; set; }\n```\n\n----------------------------------------\n\nTITLE: Loading the WWW::SwaggerClient::PetApi Module in Perl\nDESCRIPTION: Example showing how to load the PetApi package into a Perl application. This is the first step required before using any of the API methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::PetApi;\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Model Properties Table\nDESCRIPTION: Markdown table defining the properties, types, and attributes of the ReadOnlyFirst model class. Contains two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**baz** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Model Properties Table - Mixed Properties and Additional Properties\nDESCRIPTION: Markdown table defining the properties, types and notes for the MixedPropertiesAndAdditionalPropertiesClass model including UUID, DateTime and dictionary map properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Uuid** | **Guid?** |  | [optional] \n**DateTime** | **DateTime?** |  | [optional] \n**Map** | [**Dictionary&lt;string, Animal&gt;**](Animal.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Getting Language-Specific Help for PHP Generator\nDESCRIPTION: Command to retrieve PHP-specific configuration options for Swagger Codegen. This shows how to access documentation for language-specific parameters that can be provided via a config file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar config-help -l php\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values\nDESCRIPTION: Enumeration defining the possible decimal number values for the enumNumber property: 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enum Values in Swagger\nDESCRIPTION: Defines three enum values representing different stages of an order: placed, approved, and delivered. Used for tracking the status of orders in an API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Required String Enum Values\nDESCRIPTION: Definition of possible values for the EnumStringRequiredEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: C# Model Properties Definition\nDESCRIPTION: Defines two dictionary properties for the AdditionalPropertiesClass model - a simple string-to-string map and a nested map structure for more complex key-value relationships.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nMapProperty | Dictionary<string, string> | | [optional]\nMapOfMapProperty | Dictionary<string, Dictionary<string, string>> | | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Swagger Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties for a Swagger model named 'NAME'. It includes four properties with their types, descriptions, and additional metadata such as optional flags and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/NAME.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **INTEGER_32** |  | [default to null]\n**snake_case** | **INTEGER_32** |  | [optional] [default to null]\n**property** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**var_123_number** | **INTEGER_32** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the NumberOnly model class, which contains a single optional decimal property named JustNumber.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustNumber** | **decimal?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing the Unpublished jQuery TypeScript Petstore Package Locally\nDESCRIPTION: Command to install the package from a local directory as a dependency in your project. This method is not recommended for production use.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-jquery/npm/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Defining Lenses for Number, Order and OuterComposite Models in Haskell\nDESCRIPTION: Haskell lens definitions for accessing properties of NumberOnly, Order, and OuterComposite models. These lenses provide getter and setter functions for model properties, with each lens targeting a specific field with appropriate type information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_55\n\nLANGUAGE: haskell\nCODE:\n```\nnumberOnlyJustNumberL :: Lens_' NumberOnly (Maybe Double)\n\n-- | <a>orderId</a> Lens\norderIdL :: Lens_' Order (Maybe Integer)\n\n-- | <a>orderPetId</a> Lens\norderPetIdL :: Lens_' Order (Maybe Integer)\n\n-- | <a>orderQuantity</a> Lens\norderQuantityL :: Lens_' Order (Maybe Int)\n\n-- | <a>orderShipDate</a> Lens\norderShipDateL :: Lens_' Order (Maybe DateTime)\n\n-- | <a>orderStatus</a> Lens\norderStatusL :: Lens_' Order (Maybe E'Status)\n\n-- | <a>orderComplete</a> Lens\norderCompleteL :: Lens_' Order (Maybe Bool)\n\n-- | <a>outerCompositeMyNumber</a> Lens\nouterCompositeMyNumberL :: Lens_' OuterComposite (Maybe OuterNumber)\n\n-- | <a>outerCompositeMyString</a> Lens\nouterCompositeMyStringL :: Lens_' OuterComposite (Maybe OuterString)\n\n-- | <a>outerCompositeMyBoolean</a> Lens\nouterCompositeMyBooleanL :: Lens_' OuterComposite (Maybe OuterBoolean)\n```\n\n----------------------------------------\n\nTITLE: Using testSpecialTags Method in AnotherFakeApi (Java)\nDESCRIPTION: Example of how to call the testSpecialTags method using the AnotherFakeApi class. This method sends a PATCH request to '/another-fake/dummy' endpoint with a Client model as the request body and returns a Client model response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values in Markdown\nDESCRIPTION: Defines the possible values for the EnumStringEnum used in the EnumTest model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Properties in Markdown Table\nDESCRIPTION: A markdown table defining the properties of a Pet object, including their names, types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| --- | --- | --- | --- |\n| **id** | **Long** |  |  [optional] |\n| **category** | [**Category**](Category.md) |  |  [optional] |\n| **name** | **String** |  | |\n| **photoUrls** | **List<String>** |  | |\n| **tags** | [**List<Tag>**](Tag.md) |  |  [optional] |\n| **status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Lenses for SpecialModelName, Tag and User Models in Haskell\nDESCRIPTION: Haskell lens definitions for accessing properties of SpecialModelName, Tag, and User models. These lenses provide typed access to model fields such as tag ID/name and all user properties including username, password, email and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_57\n\nLANGUAGE: haskell\nCODE:\n```\n-- | <a>specialModelNameSpecialPropertyName</a> Lens\nspecialModelNameSpecialPropertyNameL :: Lens_' SpecialModelName (Maybe Integer)\n\n-- | <a>tagId</a> Lens\ntagIdL :: Lens_' Tag (Maybe Integer)\n\n-- | <a>tagName</a> Lens\ntagNameL :: Lens_' Tag (Maybe Text)\n\n-- | <a>userId</a> Lens\nuserIdL :: Lens_' User (Maybe Integer)\n\n-- | <a>userUsername</a> Lens\nuserUsernameL :: Lens_' User (Maybe Text)\n\n-- | <a>userFirstName</a> Lens\nuserFirstNameL :: Lens_' User (Maybe Text)\n\n-- | <a>userLastName</a> Lens\nuserLastNameL :: Lens_' User (Maybe Text)\n\n-- | <a>userEmail</a> Lens\nuserEmailL :: Lens_' User (Maybe Text)\n\n-- | <a>userPassword</a> Lens\nuserPasswordL :: Lens_' User (Maybe Text)\n\n-- | <a>userPhone</a> Lens\nuserPhoneL :: Lens_' User (Maybe Text)\n\n-- | <a>userUserStatus</a> Lens\nuserUserStatusL :: Lens_' User (Maybe Int)\n```\n\n----------------------------------------\n\nTITLE: FakeOuterCompositeSerialize Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing serialization of object with outer number type. It accepts an optional OuterComposite body parameter and returns an OuterComposite object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: Go\nCODE:\n```\n# **FakeOuterCompositeSerialize**\n> OuterComposite FakeOuterCompositeSerialize(ctx, optional)\n\n\nTest serialization of object with outer number type\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterCompositeSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterCompositeSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterComposite**](OuterComposite.md)| Input composite as post body | \n\n### Return type\n\n[**OuterComposite**](OuterComposite.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This markdown table defines the properties of a Category model. It includes two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger Markdown\nDESCRIPTION: Specifies the properties of an Animal model including className (required) and color (optional). This structure is commonly used in Swagger/OpenAPI specifications to define data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Java Client to Remote Maven Repository\nDESCRIPTION: Command to deploy the API client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Loading Order Model Package in Dart\nDESCRIPTION: This snippet shows how to import the Swagger API package in Dart to use the Order model. It's typically placed at the beginning of a Dart file that needs to work with the Order model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Building Swagger ASP.NET Core Server on Windows\nDESCRIPTION: Batch command to build the Swagger-generated ASP.NET Core server on Windows systems using the batch file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nbuild.bat\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Schema in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Dog model. Contains a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Status Enum Values in Markdown\nDESCRIPTION: Markdown table defining the possible values for the StatusEnum used in the Pet model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nAVAILABLE | \"available\"\nPENDING | \"pending\"\nSOLD | \"sold\"\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Structure in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model, including the ArrayNumber field which is an optional array of float32 values. The structure is presented in a tabular format with details on name, type, description, and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayNumber** | **[]float32** |  | [optional] [default to null]\n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Installing container-interop via Composer in PHP\nDESCRIPTION: JSON configuration for installing the container-interop package through Composer. The package requires version ~1.0, which follows semantic versioning with backward compatibility between minor versions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/README.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"require\": {\n        \"container-interop/container-interop\": \"~1.0\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List in Java\nDESCRIPTION: Creates multiple users using a List input. Similar to array input but uses List collection type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Documents the properties of a ModelApiResponse object including code (Integer), type (String), and message (String). All fields are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Currency Properties Table in Markdown\nDESCRIPTION: A markdown table structure for defining Currency object properties, including columns for Name, Type, Description and Notes. The table is empty but provides the standard structure for documenting API model properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Importing the Category Model Package in Dart\nDESCRIPTION: Shows how to import the Swagger API package that contains the Category model. This import statement is required to use the Category class in Dart applications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Category model using a markdown table. It specifies two properties: 'id' of type integer and 'name' of type string, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| --- | --- | --- | --- |\n| **id** | **int** |  | [optional] |\n| **name** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in Swagger Model\nDESCRIPTION: Specifies two map properties: a simple string-to-string map and a nested map structure. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Alamofire with CocoaPods\nDESCRIPTION: Command to install the CocoaPods dependency manager, which is required to integrate Alamofire into an iOS project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ gem install cocoapods\n```\n\n----------------------------------------\n\nTITLE: Importing Currency Model in Dart\nDESCRIPTION: Shows how to import the Currency model from the swagger package into a Dart application\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the NumberOnly model using a markdown table. It specifies a single optional property 'justNumber' of type Number.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown Table Format\nDESCRIPTION: A markdown table that defines the User model's properties, their data types, descriptions, and optional status. This structure is used by Swagger Codegen to generate API client code for the User entity across various programming languages.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building and Running the Custom Generator in Docker\nDESCRIPTION: This snippet demonstrates how to build and run a custom generator in Docker. It downloads necessary scripts, makes them executable, and then executes the generator against the test Swagger definition file. The generated code is output to the specified directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/standalone-gen-dev/standalone-generator-development.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/swagger-api/swagger-codegen/master/standalone-gen-dev/run-in-docker.sh -O run-in-docker.sh\nwget https://raw.githubusercontent.com/swagger-api/swagger-codegen/master/standalone-gen-dev/docker-entrypoint.sh -O docker-entrypoint.sh\nchmod +x *.sh\n./run-in-docker.sh generate -i petstore.yaml -l custom -o /gen/$GENERATED_CODE_DIR\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the Name model class. Shows property names, data types, descriptions and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Name** | **int?** |  | \n**SnakeCase** | **int?** |  | [optional] \n**Property** | **string** |  | [optional] \n**_123Number** | **int?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Status Enum for Order in Kotlin\nDESCRIPTION: This snippet defines an enumeration for the status property of an Order. It includes three possible values: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nstatus | placed, approved, delivered\n```\n\n----------------------------------------\n\nTITLE: Defining a Java Enum with String Values and Special Characters\nDESCRIPTION: Declaration of an enum class called EnumClass with three constants representing specially formatted string values. The enum constants include underscores and other special characters in both the enum name and the string values they represent.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of FastRoute in PHP\nDESCRIPTION: This example demonstrates the basic usage of FastRoute, including route definition, request handling, and dispatching. It shows how to set up routes for different HTTP methods and handle various dispatch results.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nrequire '/path/to/vendor/autoload.php';\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/users', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Composer for PHP Server\nDESCRIPTION: Use Composer to install the Lumen Framework and other dependencies for the Swagger-generated PHP server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/lumen/lib/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer install\n```\n\n----------------------------------------\n\nTITLE: Markdown Model Definition for ArrayOfNumberOnly\nDESCRIPTION: Documents the properties of the ArrayOfNumberOnly model class, which contains a single optional property 'arrayNumber' that holds a list of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List<BigDecimal>**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving a user by username\nDESCRIPTION: Example demonstrating how to retrieve user details by providing a username. The example suggests using 'user1' for testing purposes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The name that needs to be fetched. Use user1 for testing.\n\ntry:\n    # Get user by user name\n    api_response = api_instance.get_user_by_name(username)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->get_user_by_name: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Name Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the Name model including field names, data types, descriptions and optional status notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **int** |  | \n**snake_case** | **int** |  | [optional] \n**_property** | **str** |  | [optional] \n**_123_number** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Using AnotherFakeApi in Java\nDESCRIPTION: Java code example demonstrating how to use the AnotherFakeApi class from the Swagger Petstore client library to make an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/README.md#2025-04-20_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.AnotherFakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class AnotherFakeApiExample {\n\n    public static void main(String[] args) {\n        \n        AnotherFakeApi apiInstance = new AnotherFakeApi();\n        Client body = new Client(); // Client | client model\n        try {\n            Client result = apiInstance.testSpecialTags(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition - Swagger Markdown\nDESCRIPTION: Defines the possible integer enum values for the enumInteger property, including 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\n\n* `_1` (value: `1`)\n* `_1_2` (value: `-1`)\n```\n\n----------------------------------------\n\nTITLE: Deploying to Salesforce Org\nDESCRIPTION: Ant command to deploy the project to a Salesforce organization, including classes, package creation, and test execution.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ ant deploy\n```\n\n----------------------------------------\n\nTITLE: Declaring Petstore Client Instance\nDESCRIPTION: Declaration of the main client instance used to access API operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_3\n\nLANGUAGE: ada\nCODE:\n```\n   C : Samples.Petstore.Clients.Client_Type;\n```\n\n----------------------------------------\n\nTITLE: Using API in Component\nDESCRIPTION: Example of injecting and using the API service in an Angular component\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java using Swagger Codegen FakeApi\nDESCRIPTION: This snippet shows how to use the testInlineAdditionalProperties method of the FakeApi class. It demonstrates passing an Object parameter and handling potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the main properties of the EnumTest class including their types and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Gradle Dependency Configuration\nDESCRIPTION: Gradle build file dependency configuration for including the Swagger Petstore Vertx client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/README.md#2025-04-20_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-vertx:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore API Client Locally (Dart/YAML)\nDESCRIPTION: Configuration for including the Swagger API client package from a local directory in a Dart project's pubspec.yaml file. Specifies the package name and local path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/README.md#2025-04-20_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  swagger:\n    path: /path/to/swagger\n```\n\n----------------------------------------\n\nTITLE: Cleaning the Workspace for TypeScript AngularJS Petstore Client\nDESCRIPTION: This code snippet shows how to clean the workspace of the TypeScript AngularJS petstore client project. It uses an npm script to perform the cleaning operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angularjs/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run clean\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP POST Endpoint for Creating Users with List\nDESCRIPTION: HTTP endpoint definition for creating multiple users at once using a list of user objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_19\n\nLANGUAGE: http\nCODE:\n```\npost /user/createWithList\n```\n\n----------------------------------------\n\nTITLE: Defining Client Class in Haskell\nDESCRIPTION: Defines the Client data type with constructor, accessor for client field, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_24\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Client\ndata Client\nClient :: !(Maybe Text) -> Client\n\n-- | \"client\"\n[clientClient] :: Client -> !(Maybe Text)\n\n-- | FromJSON Client\n\n-- | ToJSON Client\n\n-- | Construct a value of type <a>Client</a> (by applying it's required\n--   fields, if any)\nmkClient :: Client\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Swagger/OpenAPI\nDESCRIPTION: Specification of the ArrayTest model properties including single and multi-dimensional arrays of different types. Contains arrays of strings, numbers, and ReadOnlyFirst model references.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **[String]** |  | [optional] \n**arrayArrayOfInteger** | **[[Number]]** |  | [optional] \n**arrayArrayOfModel** | **[[ReadOnlyFirst]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown Table\nDESCRIPTION: A markdown table defining the properties of the ModelApiResponse model. It includes three optional properties: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Model Properties Table in Markdown\nDESCRIPTION: A markdown table that defines the properties of the ArrayTest model class, including property names, types, descriptions, and optional status. The properties demonstrate various array type structures including simple string arrays, nested arrays of integers, and nested arrays of model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Cat model using a Markdown table. The model has a single optional Boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of an Animal model using a Markdown table. It specifies two properties: className (required) and color (optional), both of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using SwaggerPetstore PetApi in JavaScript\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the SwaggerPetstore PetApi. It sets up OAuth2 authentication and makes an API call to retrieve pets filtered by their status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar status = [\"status_example\"]; // [String] | Status values that need to be considered for filter\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.findPetsByStatus(status, callback);\n```\n\n----------------------------------------\n\nTITLE: Downloading a File in Swift using Alamofire\nDESCRIPTION: This snippet shows how to download a file using Alamofire. It demonstrates specifying a custom destination for the downloaded file in the app's Documents directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_27\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.download(.GET, \"https://httpbin.org/stream/100\") { temporaryURL, response in\n    let fileManager = NSFileManager.defaultManager()\n    let directoryURL = fileManager.URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)[0]\n    let pathComponent = response.suggestedFilename\n\n    return directoryURL.URLByAppendingPathComponent(pathComponent!)\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name with PHP Swagger Client\nDESCRIPTION: Example of how to use the testClassname endpoint with the Swagger PHP client. Shows configuration of API key authorization and making a PATCH request to test class names in snake case format. Includes error handling and response processing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure API key authorization: api_key_query\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKey('api_key_query', 'YOUR_API_KEY');\n// Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n// $config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setApiKeyPrefix('api_key_query', 'Bearer');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeClassnameTags123Api(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$body = new \\Swagger\\Client\\Model\\Client(); // \\Swagger\\Client\\Model\\Client | client model\n\ntry {\n    $result = $apiInstance->testClassname($body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeClassnameTags123Api->testClassname: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data with FakeApi in PHP\nDESCRIPTION: This snippet shows how to use the testJsonFormData method of the FakeApi class. It demonstrates passing form data as JSON and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$param = \"param_example\"; // string | field1\n$param2 = \"param2_example\"; // string | field2\n\ntry {\n    $apiInstance->testJsonFormData($param, $param2);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testJsonFormData: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java\nDESCRIPTION: Example of using the testClientModel endpoint to test the \"client\" model. Creates a Client object as the request body and receives a Client object as the response, with JSON as the content type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Invalid User Error\nDESCRIPTION: JSON schema defining the response structure when invalid user data is supplied to the API during an update operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_30\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"Invalid user supplied\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for SwaggerPetstore API\nDESCRIPTION: This snippet defines the properties of the Tag model in a markdown table format. It specifies two optional properties: 'id' of type Number and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**name** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Number Constants with BigDecimal in Java Enum\nDESCRIPTION: Creates an enumeration of numerical constants using Java's BigDecimal class for precise decimal representation. The enum defines constants for numbers 7, 8, 9, and 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining MixedPropertiesAndAdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass using a Markdown table. It includes the property names, types, descriptions, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **uuid** | [**UUID**](UUID.md) |  |  [optional] |\n| **dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional] |\n| **map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: NumberOnly Model Schema for Swagger Petstore\nDESCRIPTION: Markdown table defining the properties of the NumberOnly model class. Contains a single optional numeric property 'justNumber'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ReadOnlyFirst model using a Markdown table. The model has two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Describes the properties of the OuterComposite model, including their names, types, and optional status. The properties include a number (BigDecimal), a string, and a boolean value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum in Markdown for Swagger Codegen\nDESCRIPTION: This code snippet defines an enum called OuterEnum with three possible values: PLACED, APPROVED, and DELIVERED. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Numbers Enumeration in SwaggerPetstore API\nDESCRIPTION: Defines an enumeration called Numbers with integer values 7, 8, 9, and 10. Each value is represented with a leading underscore in the variable name and assigned its numeric equivalent.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_7` (value: `7`)\n\n* `_8` (value: `8`)\n\n* `_9` (value: `9`)\n\n* `_10` (value: `10`)\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: Specifies the properties of a Tag model, including 'id' as an optional Long type and 'name' as an optional String type. This structure is commonly used in Swagger Codegen to generate consistent API documentation or client code across different programming languages.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Class Properties in Markdown\nDESCRIPTION: Defines the properties of the HasOnlyReadOnly class using a markdown table. It specifies two optional String properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Structure\nDESCRIPTION: Model class definition showing a property that holds a nested array of nullable decimal numbers. This is represented as a List<List<decimal?>> in C#.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | **List<List<decimal?>>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Store API Service in YAML\nDESCRIPTION: This YAML snippet defines the StoreApi service in the Symfony service container. It specifies the class and tags it as a Swagger server API for store operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/StoreApiInterface.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# src/Acme/MyBundle/Resources/services.yml\nservices:\n    # ...\n    acme.my_bundle.api.store:\n        class: Acme\\MyBundle\\Api\\StoreApi\n        tags:\n            - { name: \"swagger_server.api\", api: \"store\" }\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Pet Object Structure Example in Haskell\nDESCRIPTION: Example of a Pet data structure returned by the API showing fields like ID, name, photo URLs and tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/example-app/infoLog.txt#2025-04-20_snippet_1\n\nLANGUAGE: haskell\nCODE:\n```\nPet {petId = Just 11, petCategory = Nothing, petName = \"name\", petPhotoUrls = [\"url1\",\"url2\"], petTags = Just [], petStatus = Nothing}\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Structure in Markdown\nDESCRIPTION: Describes the structure of the SpecialModelName class using a markdown table. It defines a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SpecialModelName\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Pet model using a markdown table. It includes the property names, their types, descriptions, and optional notes. The table covers fields such as id, category, name, photo URLs, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Id** | **long?** |  | [optional] |\n| **Category** | [**Category**](Category.md) |  | [optional] |\n| **Name** | **string** |  | |\n| **PhotoUrls** | **List<string>** |  | |\n| **Tags** | [**List<Tag>**](Tag.md) |  | [optional] |\n| **Status** | **string** | pet status in the store | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Order Status Enum Definition\nDESCRIPTION: Defines an enum called OuterEnum that represents different states of an order including placed, approved and delivered. Each enum constant is mapped to a lowercase string value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Bash\nDESCRIPTION: Command example for testing inline additionalProperties. This endpoint accepts a map object in the request body with JSON content type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testInlineAdditionalProperties\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Swagger\nDESCRIPTION: Defines properties with different capitalization patterns for a Swagger/OpenAPI model. Includes camelCase, PascalCase, snake_case and constant-style naming conventions. The properties are all optional strings with varying naming patterns to demonstrate different capitalization styles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  | [optional] \n**capitalCamel** | **String** |  | [optional] \n**smallSnake** | **String** |  | [optional] \n**capitalSnake** | **String** |  | [optional] \n**sCAETHFlowPoints** | **String** |  | [optional] \n**ATT_NAME** | **String** | Name of the pet  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Registering a Service Provider in Pimple\nDESCRIPTION: Demonstrates how to register a service provider with a Pimple container.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$pimple->register(new FooProvider());\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger/OpenAPI\nDESCRIPTION: This snippet defines the properties of an Animal model using Swagger/OpenAPI specification format. It includes two properties: className (required string) and color (optional string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing the Pet Model in Dart\nDESCRIPTION: Shows how to import the Swagger API package in Dart to use the Pet model. This import statement makes the Pet model and other related API components available in your Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enumeration Values\nDESCRIPTION: Defines the possible values for the pet status enumeration: available, pending, and sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nAVAILABLE | \"available\"\nPENDING | \"pending\"\nSOLD | \"sold\"\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays model, including their names, types, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Cat model using a markdown table. It specifies a single property 'declawed' of type Boolean, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the Order Model Package in Perl\nDESCRIPTION: This code snippet demonstrates how to load the WWW::SwaggerClient::Object::Order model package in a Perl application. This import is required before using the Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Order;\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Client Library as Maven Dependency\nDESCRIPTION: XML snippet to add the Swagger Petstore Retrofit2 RxJava2 client library as a dependency in a Maven project's pom.xml file. This allows the project to use the client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-retrofit2-rx2</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path Using Bootstrap\nDESCRIPTION: TypeScript code for setting a custom base path for the API service during application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Properties in Swagger/OpenAPI\nDESCRIPTION: Documents the properties of AdditionalPropertiesClass including a simple string map property and a nested map property. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Verifying Ant Version\nDESCRIPTION: Command to check the installed Apache Ant version, ensuring it meets the project requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nApache Ant(TM) version 1.10.1 compiled on February 2 2017\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ApiResponse model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Code** | **int?** |  | [optional] |\n| **Type** | **string** |  | [optional] |\n| **Message** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Properties in Swagger\nDESCRIPTION: Documents the properties of the ArrayTest class including three array-type properties: arrayOfString (array of strings), arrayArrayOfInteger (2D array of numbers), and arrayArrayOfModel (2D array of ReadOnlyFirst objects). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **[String]** |  | [optional] \n**arrayArrayOfInteger** | **[[Number]]** |  | [optional] \n**arrayArrayOfModel** | **[[ReadOnlyFirst]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Pimple as a PHP C extension\nDESCRIPTION: Series of commands to clone, compile, and install Pimple as a PHP C extension for improved performance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/silexphp/Pimple\n$ cd Pimple/ext/pimple\n$ phpize\n$ ./configure\n$ make\n$ make install\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SpecialModelName model in a Markdown table format. It specifies a single property 'specialPropertyName' of type Number, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Defines the ArrayTest model properties using markdown table format. The properties include arrayOfString (a list of strings), arrayArrayOfInteger (a 2D array of long integers), and arrayArrayOfModel (a 2D array of ReadOnlyFirst model objects). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger Petstore C# Namespaces\nDESCRIPTION: Code snippet showing how to include the necessary namespaces to use the generated C# SDK in a project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: cURL Output Format from Alamofire DebugPrintable\nDESCRIPTION: This bash snippet shows the cURL command equivalent that would be generated when using debugPrint on an Alamofire request. This is useful for debugging or reproducing requests outside of the application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\n$ curl -i \\\n\t-H \"User-Agent: Alamofire\" \\\n\t-H \"Accept-Encoding: Accept-Encoding: gzip;q=1.0,compress;q=0.5\" \\\n\t-H \"Accept-Language: en;q=1.0,fr;q=0.9,de;q=0.8,zh-Hans;q=0.7,zh-Hant;q=0.6,ja;q=0.5\" \\\n\t\"https://httpbin.org/get?foo=bar\"\n```\n\n----------------------------------------\n\nTITLE: Importing IO.Swagger PowerShell Module\nDESCRIPTION: Code snippet showing how to import the necessary IO.Swagger namespaces in PowerShell to use the generated Petstore client. This imports the API, Client, and Model namespaces required to interact with the Swagger Petstore.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/powershell/README.md#2025-04-20_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nusing IO.Swagger.IO.Swagger/API;\nusing IO.Swagger.Client;\nusing IO.Swagger.IO.Swagger/Model;\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties\nDESCRIPTION: Documentation table describing the properties of the ArrayOfNumberOnly model class. Contains a single field 'arrayNumber' which is an optional array of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum in Markdown\nDESCRIPTION: Defines an enumeration for pet status using a markdown table. The table structure is set up but values are not provided in this snippet.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Definition in Markdown\nDESCRIPTION: Defines a set of named integer constants from 0 to 6, using markdown enumeration format. Each constant follows the pattern NUMBER_X where X is the numeric value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Property Definitions Table in Markdown\nDESCRIPTION: Table defining model properties including name, type, description and optional status. Includes special cases like snake_case naming and numeric property names.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the WWW::SwaggerClient::FakeApi Module in Perl\nDESCRIPTION: Shows how to load the FakeApi package for use in Perl applications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::FakeApi;\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition - Swagger Markdown\nDESCRIPTION: Defines the possible string enum values for the enumString property, including UPPER, lower, and empty options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringEnum\n\n* `UPPER` (value: `\"UPPER\"`)\n* `lower` (value: `\"lower\"`)\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Client to Remote Maven Repository\nDESCRIPTION: Command to deploy the API client library to a remote Maven repository\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/spring-cloud/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Animal model using a Markdown table. It specifies two properties: className (required) and color (optional), both of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Ruby\nDESCRIPTION: This code snippet demonstrates how to use the test_special_tags method of the AnotherFakeApi class. It sends a PATCH request to '/another-fake/dummy' with a Client object as the body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n\napi_instance = Petstore::AnotherFakeApi.new\n\nbody = Petstore::Client.new # Client | client model\n\n\nbegin\n  #To test special tags\n  result = api_instance.test_special_tags(body)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling AnotherFakeApi->test_special_tags: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Defining Category Properties in Markdown for Swagger\nDESCRIPTION: This code snippet defines the properties of a Category model using Markdown table syntax. It specifies two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger Petstore API\nDESCRIPTION: API endpoint for deleting a user from the system. This operation can only be performed by authenticated users. It requires the username as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# **delete_user**\n> delete_user (username: STRING_32 )\n\t\n\nDelete user\n\nThis can only be done by the logged in user.\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Defines the properties of the HasOnlyReadOnly model using a Markdown table. The model has two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**foo** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Java\nDESCRIPTION: Authenticates user login with username and password. Returns a string token upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Rails 5 Swagger Project\nDESCRIPTION: Installs the required gems and dependencies for the Rails 5 project with Swagger integration using Bundler.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/rails5/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nbundle install\n```\n\n----------------------------------------\n\nTITLE: Importing Amount Model in Dart\nDESCRIPTION: Shows how to import the Amount model package in a Dart application using the swagger API package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: ArrayOfNumberOnly Model Schema Definition in Markdown\nDESCRIPTION: Model schema defining an optional property 'array_number' that accepts an array of floating point numbers. Part of a Swagger/OpenAPI specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_number** | **list[float]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Delete Order Example in Java\nDESCRIPTION: Demonstrates how to delete a purchase order by ID. Works with integer IDs less than 1000. IDs above 1000 or non-integers will generate API errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagStoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nSwagStoreApi api = new SwagStoreApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'orderId' => 'orderId_example'\n};\n\ntry {\n    // cross your fingers\n    api.deleteOrder(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties in Markdown\nDESCRIPTION: Defines the properties of the NumberOnly model using a markdown table. The model has a single optional property 'justNumber' of type BigDecimal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the StatusEnum used in the Order model. It lists the possible values for the order status using a markdown table format.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayTest model, including arrayOfString (List<String>), arrayArrayOfInteger (List<List<Long>>), and arrayArrayOfModel (List<List<ReadOnlyFirst>>). All properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: MapTest Enum Values Definition\nDESCRIPTION: Defines the allowed enum values (UPPER and lower) for the mapOfEnumString property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: {String: String}\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of the ClassModel class using a markdown table. It specifies a single optional property 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Structure Properties in Go\nDESCRIPTION: Definition of the ArrayTest model properties, including simple string arrays, nested integer arrays, and nested model arrays. Each property includes its type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **[]string** |  | [optional] [default to null]\n**ArrayArrayOfInteger** | [**[][]int64**](array.md) |  | [optional] [default to null]\n**ArrayArrayOfModel** | [**[][]ReadOnlyFirst**](array.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory in C# using Swagger-generated Client\nDESCRIPTION: Demonstrates how to get pet inventory information by status using the StoreApi. This endpoint requires API key authorization and returns a dictionary mapping status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetInventoryExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key\n            Configuration.Default.AddApiKey(\"api_key\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key\", \"Bearer\");\n\n            var apiInstance = new StoreApi();\n\n            try\n            {\n                // Returns pet inventories by status\n                Dictionary&lt;string, int?&gt; result = apiInstance.GetInventory();\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetInventory: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Calling FakeApi test_json_form_data Method in Python\nDESCRIPTION: This snippet shows how to call the test_json_form_data method of the FakeApi instance. It includes setting form data parameters and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nparam = 'param_example' # str | field1\nparam2 = 'param2_example' # str | field2\n\ntry:\n    # test json serialization of form data\n    api_instance.test_json_form_data(param, param2)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_json_form_data: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in C#\nDESCRIPTION: Example code showing how to test JSON serialization of form data with two string parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestJsonFormDataExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = param_example;  // string | field1\n            var param2 = param2_example;  // string | field2\n\n            try\n            {\n                apiInstance.TestJsonFormData(param, param2);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestJsonFormData: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition\nDESCRIPTION: Defines allowed string enum values including UPPER, LOWER, and EMPTY string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Authentication Types in Haskell for Swagger Petstore API\nDESCRIPTION: Defines data types for various authentication methods including API key, basic HTTP, and OAuth. These types are used for authentication in the Swagger Petstore API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_38\n\nLANGUAGE: Haskell\nCODE:\n```\ndata AuthApiKeyApiKey\n\n-- | secret\nAuthApiKeyApiKey :: Text -> AuthApiKeyApiKey\ndata AuthApiKeyApiKeyQuery\n\n-- | secret\nAuthApiKeyApiKeyQuery :: Text -> AuthApiKeyApiKeyQuery\ndata AuthBasicHttpBasicTest\n\n-- | username password\nAuthBasicHttpBasicTest :: ByteString -> ByteString -> AuthBasicHttpBasicTest\ndata AuthOAuthPetstoreAuth\n\n-- | secret\nAuthOAuthPetstoreAuth :: Text -> AuthOAuthPetstoreAuth\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model using a markdown table. The model has one optional property 'ArrayNumber' of type List<decimal?>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ArrayNumber** | **List<decimal?>** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Installing Eiffel API Client Library\nDESCRIPTION: Instructions for adding the Swagger API client library to an Eiffel configuration file. This allows the Eiffel application to use the generated API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/README.md#2025-04-20_snippet_0\n\nLANGUAGE: eiffel\nCODE:\n```\n    \"<library name=\"api_client\" location=\"%PATH_TO_EIFFEL_SWAGGER_CLIENT%\\api_client.ecf\"/>\"\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Model Properties Definition\nDESCRIPTION: Defines the properties of the ArrayTest class including various array types. Contains three array properties: a simple string array, a nested array of integers, and a nested array of ReadOnlyFirst model objects. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | **List<List<Long>>** |  |  [optional]\n**arrayArrayOfModel** | **List<List<ReadOnlyFirst>>** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing SwaggerPetstore Client Functions in Haskell\nDESCRIPTION: This snippet defines functions for the SwaggerPetstore client, including request dispatching, MIME handling, and configuration management. It provides low-level HTTP operations and higher-level API request handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_12\n\nLANGUAGE: Haskell\nCODE:\n```\nmodule SwaggerPetstore.Client\n\n-- | send a request returning the raw http response\ndispatchLbs :: (Produces req accept, MimeType contentType) => Manager -> SwaggerPetstoreConfig -> SwaggerPetstoreRequest req contentType res accept -> IO (Response ByteString)\n\n-- | pair of decoded http body and http response\ndata MimeResult res\nMimeResult :: Either MimeError res -> Response ByteString -> MimeResult res\n\n-- | decoded http body\n[mimeResult] :: MimeResult res -> Either MimeError res\n\n-- | http response\n[mimeResultResponse] :: MimeResult res -> Response ByteString\n\n-- | pair of unrender/parser error and http response\ndata MimeError\nMimeError :: String -> Response ByteString -> MimeError\n\n-- | unrender/parser error\n[mimeError] :: MimeError -> String\n\n-- | http response\n[mimeErrorResponse] :: MimeError -> Response ByteString\n\n-- | send a request returning the <a>MimeResult</a>\ndispatchMime :: forall req contentType res accept. (Produces req accept, MimeUnrender accept res, MimeType contentType) => Manager -> SwaggerPetstoreConfig -> SwaggerPetstoreRequest req contentType res accept -> IO (MimeResult res)\n\n-- | like <a>dispatchMime</a>, but only returns the decoded http body\ndispatchMime' :: (Produces req accept, MimeUnrender accept res, MimeType contentType) => Manager -> SwaggerPetstoreConfig -> SwaggerPetstoreRequest req contentType res accept -> IO (Either MimeError res)\n\n-- | like <tt>dispatchReqLbs</tt>, but does not validate the operation is a\n--   <tt>Producer</tt> of the \"accept\" <a>MimeType</a>. (Useful if the\n--   server's response is undocumented)\ndispatchLbsUnsafe :: (MimeType accept, MimeType contentType) => Manager -> SwaggerPetstoreConfig -> SwaggerPetstoreRequest req contentType res accept -> IO (Response ByteString)\n\n-- | dispatch an InitRequest\ndispatchInitUnsafe :: Manager -> SwaggerPetstoreConfig -> InitRequest req contentType res accept -> IO (Response ByteString)\n\n-- | wraps an http-client <tt>Request</tt> with request/response type\n--   parameters\nnewtype InitRequest req contentType res accept\nInitRequest :: Request -> InitRequest req contentType res accept\n[unInitRequest] :: InitRequest req contentType res accept -> Request\n\n-- | Build an http-client <tt>Request</tt> record from the supplied config\n--   and request\n_toInitRequest :: (MimeType accept, MimeType contentType) => SwaggerPetstoreConfig -> SwaggerPetstoreRequest req contentType res accept -> IO (InitRequest req contentType res accept)\n\n-- | modify the underlying Request\nmodifyInitRequest :: InitRequest req contentType res accept -> (Request -> Request) -> InitRequest req contentType res accept\n\n-- | modify the underlying Request (monadic)\nmodifyInitRequestM :: Monad m => InitRequest req contentType res accept -> (Request -> m Request) -> m (InitRequest req contentType res accept)\n\n-- | Run a block using the configured logger instance\nrunConfigLog :: MonadIO m => SwaggerPetstoreConfig -> LogExec m\n\n-- | Run a block using the configured logger instance (logs exceptions)\nrunConfigLogWithExceptions :: (MonadCatch m, MonadIO m) => Text -> SwaggerPetstoreConfig -> LogExec m\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: Specifies the possible values for the pet status enumeration. This enum is used to represent the current status of a pet in the store inventory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: AdditionalPropertiesClass Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the AdditionalPropertiesClass model, including map_property (a dictionary of strings) and map_of_map_property (a nested dictionary of string mappings).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**map_property** | **dict(str, str)** |  | [optional] \n**map_of_map_property** | **dict(str, dict(str, str))** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass and OuterEnum in Haskell for Swagger Petstore API\nDESCRIPTION: Defines two enums 'EnumClass' and 'OuterEnum' with various values. Includes functions to convert between the enums and Text for both types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_37\n\nLANGUAGE: Haskell\nCODE:\n```\n-- | Enum of <a>Text</a>\ndata EnumClass\n\n-- | <pre>\n--   \"_abc\"\n--   </pre>\nEnumClass'_abc :: EnumClass\n\n-- | <pre>\n--   \"-efg\"\n--   </pre>\nEnumClass'_efg :: EnumClass\n\n-- | <pre>\n--   \"(xyz)\"\n--   </pre>\nEnumClass'_xyz :: EnumClass\n\n-- | unwrap <a>EnumClass</a> enum\nfromEnumClass :: EnumClass -> Text\n\n-- | parse <a>EnumClass</a> enum\ntoEnumClass :: Text -> Either String EnumClass\n\n-- | Enum of <a>Text</a>\ndata OuterEnum\n\n-- | <pre>\n--   \"placed\"\n--   </pre>\nOuterEnum'Placed :: OuterEnum\n\n-- | <pre>\n--   \"approved\"\n--   </pre>\nOuterEnum'Approved :: OuterEnum\n\n-- | <pre>\n--   \"delivered\"\n--   </pre>\nOuterEnum'Delivered :: OuterEnum\n\n-- | unwrap <a>OuterEnum</a> enum\nfromOuterEnum :: OuterEnum -> Text\n\n-- | parse <a>OuterEnum</a> enum\ntoOuterEnum :: Text -> Either String OuterEnum\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Defines the properties of the ReadOnlyFirst model using a Markdown table. The model has two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Amount Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Amount model, including a value of type Double and a currency reference. The value property has an associated description, while the currency property references a separate Currency model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Amount\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**value** | **Double** | some description  | \n**currency** | [**Currency**](Currency.md) |  | \n```\n\n----------------------------------------\n\nTITLE: Importing Pet API Package in Dart\nDESCRIPTION: This snippet shows how to import the Swagger-generated API package for the Pet API in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values\nDESCRIPTION: Enumeration defining the possible integer values for the enumInteger property: 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the InnerEnum enumeration used in the mapOfEnumString property. It specifies the possible values for the enum: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Enumeration in SwaggerPetstore\nDESCRIPTION: This code snippet defines an enumeration class named EnumClass for the SwaggerPetstore project. It includes three enum values (abc, efg, xyz) with their corresponding string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.EnumClass\n\n## Enum\n\n\n* `abc` (value: `\"_abc\"`)\n\n* `efg` (value: `\"-efg\"`)\n\n* `xyz` (value: `\"(xyz)\")`\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Specifies the properties of the MapTest class using a markdown table. It includes two properties: mapMapOfString and mapOfEnumString, both of which are optional and involve nested map structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Animal Farm Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties schema for an Animal Farm model. Currently empty with only header structure defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Model Properties Definition in Markdown\nDESCRIPTION: Tabular documentation of the EnumArrays model properties including their names, types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# EnumArrays\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_symbol** | **str** |  | [optional] \n**array_enum** | **list[str]** |  | [optional] \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Configuring App Transport Security (ATS) exceptions in Info.plist for iOS\nDESCRIPTION: This XML snippet shows how to configure App Transport Security exceptions in the Info.plist file to allow connections to servers with self-signed certificates or custom SSL configurations. It includes settings for disabling forward secrecy requirements and specifying minimum TLS versions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_64\n\nLANGUAGE: xml\nCODE:\n```\n<dict>\n\t<key>NSAppTransportSecurity</key>\n\t<dict>\n\t\t<key>NSExceptionDomains</key>\n\t\t<dict>\n\t\t\t<key>example.com</key>\n\t\t\t<dict>\n\t\t\t\t<key>NSExceptionAllowsInsecureHTTPLoads</key>\n\t\t\t\t<true/>\n\t\t\t\t<key>NSExceptionRequiresForwardSecrecy</key>\n\t\t\t\t<false/>\n\t\t\t\t<key>NSIncludesSubdomains</key>\n\t\t\t\t<true/>\n\t\t\t\t<!-- Optional: Specify minimum TLS version -->\n\t\t\t\t<key>NSTemporaryExceptionMinimumTLSVersion</key>\n\t\t\t\t<string>TLSv1.2</string>\n\t\t\t</dict>\n\t\t</dict>\n\t</dict>\n</dict>\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger API Package in Dart\nDESCRIPTION: This snippet shows how to import the Swagger API package in a Dart file. It's a prerequisite for using the StoreApi class and its methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in FakeApi - Java\nDESCRIPTION: Example showing how to test inline additional properties using the FakeApi class. Takes an Object parameter as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown Table\nDESCRIPTION: Specifies the properties of a Tag object using a markdown table. It includes two properties: 'id' (an optional integer) and 'name' (an optional string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **integer** |  | [optional] [default to null]\n**name** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest model using a markdown table. It specifies the name, type, description, and optional status for each property. The table includes various data types such as Integer, Long, BigDecimal, Float, Double, String, byte[], LocalDate, OffsetDateTime, and UUID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumStringEnum used in the EnumTest class. It includes 'UPPER', 'lower', and an empty string as possible values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Swagger API\nDESCRIPTION: This endpoint tests the \"client\" model. It accepts a CLIENT object in the request body and returns the same type. The Content-Type and Accept headers are set to application/json.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_client_model**\n> test_client_model (body: CLIENT ): detachable CLIENT\n\t\n\nTo test \\\"client\\\" model\n\nTo test \\\"client\\\" model\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**CLIENT**](CLIENT.md)| client model | \n\n### Return type\n\n[**CLIENT**](Client.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger User Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Swagger API package in Dart to use the User model. It's a prerequisite for working with the User model in a Dart project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Dependency for Swagger Android Client\nDESCRIPTION: XML configuration to add the Swagger Android client as a Maven project dependency\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-android-client</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters in Pimple\nDESCRIPTION: Illustrates how to define parameters in the Pimple container for configuration and global values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n// define some parameters\n$container['cookie_name'] = 'SESSION_ID';\n$container['session_storage_class'] = 'SessionStorage';\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in AdditionalPropertiesClass\nDESCRIPTION: Defines two map-based properties: a simple string-to-string map and a nested map structure. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Jersey Server with Maven\nDESCRIPTION: Command to clean, package, and run the Swagger-generated Jersey server using Maven and Jetty.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey1/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmvn clean package jetty:run\n```\n\n----------------------------------------\n\nTITLE: Defining Number Enumerations in Swagger Petstore\nDESCRIPTION: Defines a fixed set of numeric values (7, 8, 9, 10) as enumeration constants. Each value is represented with an underscore prefix to ensure valid identifier names in generated code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_7` (value: `7`)\n\n* `_8` (value: `8`)\n\n* `_9` (value: `9`)\n\n* `_10` (value: `10`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Enum Constants in Markdown\nDESCRIPTION: This snippet defines three enum constants for the EnumClass. Each constant is associated with a specific string value, using a bullet point list format in Markdown.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Using Environment API Base Path in Angular Module\nDESCRIPTION: TypeScript code to use the API base path from the environment configuration in an Angular module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Cat Model Schema Definition in Swagger Markdown\nDESCRIPTION: Defines the schema for a Cat model with a single optional boolean property 'declawed'. Uses markdown table format to specify the property name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Petstore API Package from GitHub using pip\nDESCRIPTION: Shows how to install the petstore-api Python package directly from a GitHub repository using pip. This method allows users to get the latest version of the package from the source repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Category model in Swagger/OpenAPI format. Contains two optional properties: id (Long type) and name (String type).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading EnumTest Model Package in Perl\nDESCRIPTION: This snippet demonstrates how to load the EnumTest model package in a Perl application. It is typically used at the beginning of a script that needs to work with EnumTest objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::EnumTest;\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table in Markdown\nDESCRIPTION: A markdown table that documents the properties of the Order model including their types, descriptions, and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**petId** | **Number** |  | [optional] \n**quantity** | **Number** |  | [optional] \n**shipDate** | **Date** |  | [optional] \n**status** | **String** | Order Status | [optional] \n**complete** | **Boolean** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table - Markdown\nDESCRIPTION: Defines the main properties of the Order model including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Long** |  |  [optional] |\n| **petId** | **Long** |  |  [optional] |\n| **quantity** | **Integer** |  |  [optional] |\n| **shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional] |\n| **status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional] |\n| **complete** | **Boolean** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: Specifies the properties of the SpecialModelName model using a markdown table. It defines a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: HTTP Headers Configuration in Markdown\nDESCRIPTION: Defines the required Content-Type and Accept headers for the API endpoint. Specifies multipart/form-data for file upload and JSON response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/PetApi.md#2025-04-20_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n - **Content-Type**: multipart/form-data\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Dart Client via Github\nDESCRIPTION: YAML configuration for installing the Swagger Petstore Dart client package from a Github repository in a Dart/Flutter project's pubspec.yaml file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/README.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: swagger\nversion: 1.0.0\ndescription: Swagger API client\ndependencies:\n  swagger:\n    git: https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n      version: 'any'\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SpecialModelName model using a markdown table. It includes the property name, type, description, and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **SpecialPropertyName** | **long?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Java Client Dependency in Gradle\nDESCRIPTION: Gradle configuration to add the Swagger Java client dependency to a project's build file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/README.md#2025-04-20_snippet_2\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-java-client:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Running Slim Framework Tests with PHPUnit\nDESCRIPTION: Command to execute the test suite for Slim Framework using PHPUnit. This is used for development and contribution to ensure the codebase functions correctly.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/slim/slim/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ phpunit\n```\n\n----------------------------------------\n\nTITLE: Documenting ReadOnlyFirst Properties in Markdown\nDESCRIPTION: Markdown table defining two optional string properties (bar and baz) for the ReadOnlyFirst class. Used for API documentation to specify available fields and their types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**baz** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies\nDESCRIPTION: This code snippet lists the required Python packages and their minimum versions for the project. It includes common libraries for HTTP requests, date handling, and utility functions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\ncertifi >= 14.05.14\nsix >= 1.10\npython_dateutil >= 2.5.3\nsetuptools >= 21.0.0\nurllib3 >= 1.15.1\n```\n\n----------------------------------------\n\nTITLE: Adding PromiseKit Extensions via CocoaPods\nDESCRIPTION: This Ruby code snippet demonstrates how to add specific PromiseKit extensions to a project's Podfile. It includes examples for MapKit and CoreLocation extensions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\npod \"PromiseKit/MapKit\"          # MKDirections().promise().then { /*…*/ }\npod \"PromiseKit/CoreLocation\"    # CLLocationManager.promise().then { /*…*/ }\n```\n\n----------------------------------------\n\nTITLE: Model Properties Definition in Markdown\nDESCRIPTION: Documents the ArrayOfNumberOnly model's properties, showing it has a single optional array property 'arrayNumber' that holds BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List<BigDecimal>**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Petstore App with Stack\nDESCRIPTION: Command to run the Swagger Petstore application using the Haskell Stack tool. This command includes the --install-ghc flag which ensures GHC is installed if missing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/example-app/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nstack --install-ghc exec swagger-petstore-app\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table for OuterString Class in Markdown\nDESCRIPTION: This markdown table defines the structure for documenting properties of the OuterString class. It includes columns for Name, Type, Description, and Notes. The table is currently empty, indicating no properties are defined or documented for this class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/OuterString.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining Logging Types and Functions in Haskell\nDESCRIPTION: Defines core logging types and functions using Katip for the Swagger Petstore API client. Includes log context, execution, and severity level definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_0\n\nLANGUAGE: haskell\nCODE:\n```\ntype LogExecWithContext = forall m. MonadIO m => LogContext -> LogExec m\ntype LogExec m = forall a. KatipT m a -> m a\ntype LogContext = LogEnv\ntype LogLevel = Severity\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Swagger\nDESCRIPTION: Defines the required Python package dependencies with specific version constraints. Includes connexion for REST API handling, python_dateutil for date manipulation, typing for type hints, and setuptools for package management.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\nconnexion == 1.1.15\npython_dateutil == 2.6.0\ntyping == 3.5.2.2\nsetuptools >= 21.0.0\n```\n\n----------------------------------------\n\nTITLE: Defining MixedPropertiesAndAdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: Documents the properties of MixedPropertiesAndAdditionalPropertiesClass including uuid (String), dateTime (DateTime), and map (Map<String, Animal>). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | **String** |  |  [optional]\n**dateTime** | [**DateTime**](DateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Registering API Routes\nDESCRIPTION: YAML configuration for registering the Swagger server bundle routes in Symfony routing configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/README.md#2025-04-20_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# app/config/routing.yml\nswagger_server:\n    resource: \"@SwaggerServerBundle/Resources/config/routing.yml\"\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays model, including their names, types, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | **String** |  | [optional] \n**arrayEnum** | **[String]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing devtools Package in R\nDESCRIPTION: This snippet installs the 'devtools' package, which is a prerequisite for building the API client. It checks if the package is already installed and installs it if necessary.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/r_test/README.md#2025-04-20_snippet_0\n\nLANGUAGE: R\nCODE:\n```\nif(!require(devtools)) { install.packages(\"devtools\") }\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties in Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a model named 'Name' using a markdown table. It specifies the property names, their data types, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Tag Properties Structure in Swagger Model\nDESCRIPTION: Defines the structure of a Tag model with two optional properties: a numeric ID and a string name. These properties are typically used in Swagger/OpenAPI specifications for categorizing API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Long** |  |  [optional] |\n| **name** | **String** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the fakeOuterCompositeSerialize method to test serialization of object with outer number type. The method accepts an optional OuterComposite object and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterComposite() // OuterComposite | Input composite as post body\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.fakeOuterCompositeSerialize(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown Table\nDESCRIPTION: A markdown table documenting the Capitalization model's properties, their types, descriptions, and optional status. The properties demonstrate different capitalization conventions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **smallCamel** | **String** |  |  [optional] |\n| **capitalCamel** | **String** |  |  [optional] |\n| **smallSnake** | **String** |  |  [optional] |\n| **capitalSnake** | **String** |  |  [optional] |\n| **scAETHFlowPoints** | **String** |  |  [optional] |\n| **ATT_NAME** | **String** | Name of the pet  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet in Markdown\nDESCRIPTION: This snippet describes the API endpoint for updating an existing pet. It specifies the HTTP method, request body, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# **update_pet**\n> update_pet (body: PET )\n\t\n\nUpdate an existing pet\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**PET**](PET.md)| Pet object that needs to be added to the store | \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: application/json, application/xml\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Removing Browser Import for Dart VM Testing\nDESCRIPTION: Code change required in the api.dart file when running tests in the Dart VM environment.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/petstore/README.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:http/browser_client.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown for SwaggerPetstore API\nDESCRIPTION: This snippet defines the properties of the Order model for the SwaggerPetstore API. It includes fields for id, petId, quantity, shipDate, status, and complete, along with their respective types and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**petId** | **Number** |  | [optional] \n**quantity** | **Number** |  | [optional] \n**shipDate** | **Date** |  | [optional] \n**status** | **String** | Order Status | [optional] \n**complete** | **Boolean** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Status Enum Definition in Markdown\nDESCRIPTION: Defines the enumeration values for the Order status property, including placed, approved, and delivered states.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | \"placed\"\nAPPROVED | \"approved\"\nDELIVERED | \"delivered\"\n```\n\n----------------------------------------\n\nTITLE: FormatTest Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the FormatTest model class with their types and optional status. Properties include various numeric types, string, binary data, date/time, UUID, and password fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.FormatTest\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Integer** | **int?** |  | [optional] \n**Int32** | **int?** |  | [optional] \n**Int64** | **long?** |  | [optional] \n**Number** | **decimal?** |  | \n**Float** | **float?** |  | [optional] \n**Double** | **double?** |  | [optional] \n**String** | **string** |  | [optional] \n**Byte** | **byte[]** |  | \n**Binary** | **byte[]** |  | [optional] \n**Date** | **DateTime?** |  | \n**DateTime** | **DateTime?** |  | [optional] \n**Uuid** | **Guid?** |  | [optional] \n**Password** | **string** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single optional property 'justNumber' of type BigDecimal. This model likely represents a simple data structure used in API requests or responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum Values in Markdown\nDESCRIPTION: Defines the two possible values for the ModelBoolean enum type: TRUE and FALSE with their corresponding boolean values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining Array Properties in Swagger CodeGen Model\nDESCRIPTION: Specifies three array properties: a simple string array, a nested array of integers, and a nested array of ReadOnlyFirst model objects. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: This snippet defines the properties of an Order object using a markdown table. It specifies the name, type, description, and optional notes for each property. The properties include id, pet_id, quantity, ship_date, status, and complete.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**pet_id** | **int** |  | [optional] \n**quantity** | **int** |  | [optional] \n**ship_date** | **datetime** |  | [optional] \n**status** | **str** | Order Status | [optional] \n**complete** | **bool** |  | [optional] [default to False]\n```\n\n----------------------------------------\n\nTITLE: ClassModel Properties Definition Table\nDESCRIPTION: Markdown table defining the properties of the ClassModel class, including name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters Example with C# Swagger Client\nDESCRIPTION: This example demonstrates how to call the TestEnumParameters endpoint which tests various enum parameter types in a C# client. It passes optional enum parameters in various locations including form, header, and query parameters with different data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEnumParametersExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var enumFormStringArray = enumFormStringArray_example;  // List<string> | Form parameter enum test (string array) (optional) \n            var enumFormString = enumFormString_example;  // string | Form parameter enum test (string) (optional)  (default to -efg)\n            var enumHeaderStringArray = enumHeaderStringArray_example;  // List<string> | Header parameter enum test (string array) (optional) \n            var enumHeaderString = enumHeaderString_example;  // string | Header parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryStringArray = enumQueryStringArray_example;  // List<string> | Query parameter enum test (string array) (optional) \n            var enumQueryString = enumQueryString_example;  // string | Query parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryInteger = 56;  // int? | Query parameter enum test (double) (optional) \n            var enumQueryDouble = 1.2;  // double? | Query parameter enum test (double) (optional) \n\n            try\n            {\n                // To test enum parameters\n                apiInstance.TestEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEnumParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Array of Array Number Model Schema in Swagger\nDESCRIPTION: Markdown table defining the properties of the ArrayOfArrayOfNumberOnly model. Contains a single property 'arrayArrayNumber' that represents a nested array of numbers with optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | **[[Number]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Java\nDESCRIPTION: Deletes a user by username. Can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization in Java\nDESCRIPTION: Example code demonstrating how to test serialization of outer number types using the FakeApi. Makes a POST request to /fake/outer/number endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Calling testClassname Method in FakeClassnameTags123Api (Java)\nDESCRIPTION: This code snippet demonstrates how to use the testClassname method of the FakeClassnameTags123Api class. It includes setting up the API client, configuring API key authorization, and making the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition\nDESCRIPTION: Defines allowed number enum values including decimal numbers 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documents the properties of the ArrayOfArrayOfNumberOnly class, which contains a single optional property 'arrayArrayNumber' that stores a nested list of BigDecimal numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterNumber Model Properties in Markdown\nDESCRIPTION: This snippet defines a markdown table for the properties of the OuterNumber model. The table includes columns for Name, Type, Description, and Notes, but appears to be empty in this instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown Table\nDESCRIPTION: This snippet defines the properties of a User model using a Markdown table format. It includes fields such as id, username, firstName, lastName, email, password, phone, and userStatus, along with their respective data types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the EnumTest model in a table format. It includes the property names, their data types, and optional status. The properties are enum_string (string), enum_integer (int), and enum_number (double), all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enum_string** | **string** |  | [optional] \n**enum_integer** | **int** |  | [optional] \n**enum_number** | **double** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Class in Haskell\nDESCRIPTION: Defines the HasOnlyReadOnly data type with constructor, accessors for bar and foo fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_28\n\nLANGUAGE: haskell\nCODE:\n```\n-- | HasOnlyReadOnly\ndata HasOnlyReadOnly\nHasOnlyReadOnly :: !(Maybe Text) -> !(Maybe Text) -> HasOnlyReadOnly\n\n-- | \"bar\"\n[hasOnlyReadOnlyBar] :: HasOnlyReadOnly -> !(Maybe Text)\n\n-- | \"foo\"\n[hasOnlyReadOnlyFoo] :: HasOnlyReadOnly -> !(Maybe Text)\n\n-- | FromJSON HasOnlyReadOnly\n\n-- | ToJSON HasOnlyReadOnly\n\n-- | Construct a value of type <a>HasOnlyReadOnly</a> (by applying it's\n--   required fields, if any)\nmkHasOnlyReadOnly :: HasOnlyReadOnly\n```\n\n----------------------------------------\n\nTITLE: Documenting List Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of a List model. Contains a single optional string property named _123_list.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **_123_list** | **str** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelApiResponse class using a Markdown table. The properties include 'code' (Integer), 'type' (String), and 'message' (String), all of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: This code demonstrates how to import the Swagger API package in a Dart application. The package contains all the necessary API classes for interacting with the pet store API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: EnumTest Property Definitions\nDESCRIPTION: Defines the main properties of the EnumTest class including different enum types and their optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfArrayOfNumberOnly model using a Markdown table. The model has one optional property 'arrayArrayNumber' of type List<List<BigDecimal>>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values in Swagger\nDESCRIPTION: Enumeration values for the enumString property, containing UPPER, lower, and empty options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the MapTest class including a nested map of strings and a map of enum values. The properties include mapMapOfString which is an optional nested map structure, and mapOfEnumString which maps strings to enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Documenting Client Model Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of the Client model, showing the property name, data type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **client** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Documenting ModelReturn Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of the ModelReturn class. Contains a single optional integer property named '_Return' with its type and description.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration for AMD Resolution\nDESCRIPTION: Webpack configuration to disable AMD loader and resolve module not found errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/README.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Pet Model in Perl Swagger Client\nDESCRIPTION: Shows how to load the Pet model class from the WWW::SwaggerClient::Object package. This model contains properties for pet ID, category, name, photo URLs, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Pet;\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Schema in Swagger/OpenAPI Markdown\nDESCRIPTION: Defines a Cat model schema with a single optional boolean property 'declawed'. Uses markdown table format to specify the property type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Swagger/OpenAPI\nDESCRIPTION: Specifies the properties of a Capitalization model using Swagger/OpenAPI syntax. It includes various string properties with different naming conventions to demonstrate capitalization patterns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Definition\nDESCRIPTION: Defines the properties of MapTest class, including a nested map of strings and an enum map. The mapMapOfString property represents a nested map structure where both keys and values are strings. The mapOfEnumString property is a map with string keys and InnerEnum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**mapMapOfString** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map<String, InnerEnum>**](#Map<String, InnerEnum>) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name API Endpoint Definition\nDESCRIPTION: API endpoint specification for testing class names in snake case. Takes a CLIENT model as input and returns the same model type. Uses PATCH method with JSON content type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_CLASSNAME_TAGS123_API.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_classname**\n> test_classname (body: CLIENT ): detachable CLIENT\n\nTo test class name in snake case\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**CLIENT**](CLIENT.md)| client model | \n\n### Return type\n\n[**CLIENT**](Client.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: Shows how to import the Swagger API package in a Dart application to use the Pet API functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the OuterComposite model using a markdown table. It includes the property names, their types (which are references to other custom types), and indicates that all properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**myString** | [**OuterString**](OuterString.md) |  | [optional] \n**myBoolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: Specifies the ModelBoolean enum with TRUE and FALSE values, using markdown syntax. This enum representation is commonly used in API specifications or documentation to define boolean options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining String-based Enum with Special Characters\nDESCRIPTION: Declares an enum with three constants using special characters in both names and values. Constants include underscore prefixes and formatted symbols.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum EnumClass {\n  _ABC = \"_abc\",\n  _EFG = \"-efg\",\n  _XYZ_ = \"(xyz)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the AdditionalPropertiesClass model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **MapProperty** | **Dictionary<string, string>** |  | [optional] |\n| **MapOfMapProperty** | **Dictionary<string, Dictionary<string, string>>** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Objective-C\nDESCRIPTION: This snippet shows how to find pets by tags using the SWGPetApi. It requires OAuth2 authentication and accepts an array of tag strings. The method returns an array of SWGPet objects and uses a completion handler to handle the response and errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGPetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: Objective-C\nCODE:\n```\n-(NSURLSessionTask*) findPetsByTagsWithTags: (NSArray<NSString*>*) tags\n        completionHandler: (void (^)(NSArray<SWGPet>* output, NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of a Category model, including their types, descriptions and optional status. The model has two properties: an ID field of type Long and a name field of type String, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Listing All Routes in Rails Swagger Application\nDESCRIPTION: Displays all available routes in the Rails application, which is useful for identifying API endpoints that have been generated by Swagger. This helps in understanding the available API endpoints and their corresponding controllers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rails5/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbin/rake routes\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Petstore JAR Package\nDESCRIPTION: Command to generate the JAR file for manual installation. This creates the client library JAR and its dependencies in the target directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/README.md#2025-04-20_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean package\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Schema in Swagger/OpenAPI Markdown\nDESCRIPTION: Markdown table defining the properties of a Cat model in Swagger/OpenAPI specification. Contains a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ReadOnlyFirst class using a Markdown table. It specifies two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties for SwaggerPetstore API in Markdown\nDESCRIPTION: This snippet defines the properties of the User model for the SwaggerPetstore API. It includes fields such as id, username, firstName, lastName, email, password, phone, and userStatus. Each property is specified with its type and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**username** | **String** |  | [optional] \n**firstName** | **String** |  | [optional] \n**lastName** | **String** |  | [optional] \n**email** | **String** |  | [optional] \n**password** | **String** |  | [optional] \n**phone** | **String** |  | [optional] \n**userStatus** | **Number** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Defines the properties of the ArrayOfArrayOfNumberOnly model using a markdown table. It specifies the name, type, description, and additional notes for the 'ArrayArrayNumber' property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | [**[][]float32**](array.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Dependency in Gradle\nDESCRIPTION: Gradle dependency declaration to add the Swagger Petstore client library to a Gradle project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/README.md#2025-04-20_snippet_3\n\nLANGUAGE: Groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-okhttp4-gson:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table\nDESCRIPTION: Markdown table defining the User model properties including data types, descriptions and optional status\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Long** |  |  [optional]\n| **username** | **String** |  |  [optional]\n| **firstName** | **String** |  |  [optional]\n| **lastName** | **String** |  |  [optional]\n| **email** | **String** |  |  [optional]\n| **password** | **String** |  |  [optional]\n| **phone** | **String** |  |  [optional]\n| **userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Pet Model in Markdown\nDESCRIPTION: This snippet defines the StatusEnum for the Pet model, which represents the pet's status in the store. It includes three possible values: available, pending, and sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values in Swagger\nDESCRIPTION: Defines possible decimal number enum values including positive and negative numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Swagger Model Properties Table - Return Class\nDESCRIPTION: Markdown table defining the properties of the Return model class. Contains a single optional integer property named '_Return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: ArrayOfNumberOnly Model Properties Definition\nDESCRIPTION: Defines the ArrayNumber property which is an optional List of nullable decimal values in the ArrayOfNumberOnly model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayNumber** | **List<decimal?>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Parameter Encoding Options in Swift for Alamofire\nDESCRIPTION: This snippet defines an enum for different parameter encoding options in Alamofire. It includes URL, JSON, PropertyList, and Custom encoding options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_20\n\nLANGUAGE: swift\nCODE:\n```\nenum ParameterEncoding {\n    case URL\n    case URLEncodedInURL\n    case JSON\n    case PropertyList(format: NSPropertyListFormat, options: NSPropertyListWriteOptions)\n    case Custom((URLRequestConvertible, [String: AnyObject]?) -> (NSMutableURLRequest, NSError?))\n\n    func encode(request: NSURLRequest, parameters: [String: AnyObject]?) -> (NSURLRequest, NSError?)\n    { ... }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Table in Markdown\nDESCRIPTION: A markdown table defining the structure of ClassModel with property name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Maven Plugin Configuration for PKMST\nDESCRIPTION: Maven plugin configuration for generating microservice code with PKMST, including integration settings for various services and interceptors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/java-pkmst/Readme.md#2025-04-20_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<configuration>\n\t<inputSpec>product-swagger.yaml</inputSpec>\n\t<language>pkmst</language>\n\t<output>${project.build.directory}/generated-sources</output>\n\t<configOptions>\n\t\t<groupId>com.prokarma</groupId>\n\t\t<artifactId>product-catalogue</artifactId>\n\t\t<artifactVersion>1.0</artifactVersion>\n\t\t<basePackage>com.prokarma.pkmst</basePackage>\n\t\t<serviceName>ProductCatalogue</serviceName>\n\t\t<eurekaUri></eurekaUri>\n\t\t<zipkinUri>http://localhost:9411</zipkinUri>\n\t\t<springBootAdminUri>http://localhost:4588</springBootAdminUri>\n\t\t<pkmstInterceptor>true</pkmstInterceptor>\n\t</configOptions>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Defining ARRAY_OF_ARRAY_OF_NUMBER_ONLY Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ARRAY_OF_ARRAY_OF_NUMBER_ONLY model using a markdown table. It specifies the name, type, description, and notes for the 'array_array_number' property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ARRAY_OF_ARRAY_OF_NUMBER_ONLY.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_array_number** | [**LIST [LIST [REAL_32]]**](LIST.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Order data model including field names, data types, descriptions, and optional flags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing Boolean Serialization with FakeApi in Java\nDESCRIPTION: Example of using the fakeOuterBooleanSerialize endpoint to test the serialization of outer boolean types. This snippet demonstrates how to make the API call, handle the response, and catch potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Swagger Schema\nDESCRIPTION: Markdown table defining the properties of a Tag model in Swagger. Includes two optional properties: id (Long type) and name (String type).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing User Model Package in Dart\nDESCRIPTION: Shows how to import the Swagger API package that contains the User model definition in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the OuterComposite model including myNumber, myString, and myBoolean. Each property is defined with its type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using FakeclassnametagsApi in Java with Swagger Client\nDESCRIPTION: This example demonstrates how to use the FakeclassnametagsApi to call the testClassname method. It shows importing necessary classes, creating an API instance, setting up the client model as a parameter, making the API call, and handling any potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeclassnametagsApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeclassnametagsApi;\n\n\nFakeclassnametagsApi apiInstance = new FakeclassnametagsApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeclassnametagsApi#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Order by ID using StoreApi in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It includes parameter setup and error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Numeric Error Code\nDESCRIPTION: A numeric error code 4011001, which appears to be a reference ID or status code used in the system. The specific meaning and context of this code would depend on the error handling implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/build/kotlin/compileKotlin/experimental-format-version.txt#2025-04-20_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n4011001\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input\nDESCRIPTION: Creates multiple users using an array input. Accepts an array of User objects and creates user accounts for each entry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {SwaggerPetstore} from 'swagger_petstore';\n\nlet apiInstance = new SwaggerPetstore.UserApi();\n\nlet body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\napiInstance.createUsersWithArrayInput(body).then(() => {\n  console.log('API called successfully.');\n}, (error) => {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Client model. It specifies a single property 'client' of type String, which is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger API Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Swagger API package in a Dart project to use the ApiResponse model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayTest model using a markdown table. It includes three array properties: arrayOfString, arrayArrayOfInteger, and arrayArrayOfModel, each with their respective types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Defines the properties of an Order object using a markdown table. Each row represents a property with its name, type, description, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**Date**](Date.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: User Logout in Java\nDESCRIPTION: Logs out the currently logged-in user session. Requires no parameters and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Constants in Java\nDESCRIPTION: Creates BigDecimal constant values for numbers 7 through 10. These constants are defined as enum values using Java's BigDecimal class for precise decimal arithmetic operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 = new BigDecimal(7)\nNUMBER_8 = new BigDecimal(8)\nNUMBER_9 = new BigDecimal(9)\nNUMBER_10 = new BigDecimal(10)\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass using a Markdown table. It includes three optional properties: uuid, dateTime, and map, each with their respective types and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelList class using a Markdown table. The class has one optional property named _123List of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Class with String Values in Markdown\nDESCRIPTION: This code snippet defines an enum class named 'EnumClass' with three enum values: '_ABC', '_EFG', and '_XYZ_'. Each enum value is associated with a specific string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# EnumClass\n\n## Enum\n\n\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: EnumTest Model Properties Table\nDESCRIPTION: Markdown table defining the properties, types, and metadata for the EnumTest model. Includes both optional and required enum fields of various data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enum_string** | **string** |  | [optional] \n**enum_string_required** | **string** |  | \n**enum_integer** | **int** |  | [optional] \n**enum_number** | **double** |  | [optional] \n**outer_enum** | [**\\Swagger\\Client\\Model\\OuterEnum**](OuterEnum.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Return Model Properties in Swagger Markdown\nDESCRIPTION: This snippet defines the properties of the Return model in a Swagger specification. It includes a single optional integer property named '_Return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Return\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum in Markdown\nDESCRIPTION: This snippet defines the EnumIntegerEnum, which includes integer values 1 and -1. It's used to specify allowed values for integer enums.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"EnumIntegerEnum\"></a>\n## Enum: EnumIntegerEnum\n\n\n* `_1` (value: `1`)\n\n* `_1_2` (value: `-1`)\n```\n\n----------------------------------------\n\nTITLE: Defining Client Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of a Client model. Contains a single optional string property named 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving User by Name in Swagger API\nDESCRIPTION: This endpoint retrieves a user by their username. It requires the username as a parameter and returns a User object. No authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n# **get_user_by_name**\n> ::models::User get_user_by_name(username)\nGet user by user name\n\n\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **username** | **String**| The name that needs to be fetched. Use user1 for testing. | \n\n### Return type\n\n[**::models::User**](User.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java using Swagger Client\nDESCRIPTION: Example of how to test serialization of an object with outer number type using the FakeApi client. Takes an OuterComposite object as input and returns an OuterComposite result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting API Parameters for Pet Update Endpoint in Markdown\nDESCRIPTION: This snippet defines the parameters for the pet update API endpoint. It includes the required petId, and optional additionalMetadata and file parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **petId** | **int**| ID of pet to update | \n **additionalMetadata** | **String**| Additional data to pass to server | [optional] \n **file** | **MultipartFile**| file to upload | [optional] \n```\n\n----------------------------------------\n\nTITLE: Inner Enum Values Definition\nDESCRIPTION: Defines the possible values for the InnerEnum type used in the mapOfEnumString property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Tests for TypeScript AngularJS Petstore Client\nDESCRIPTION: This code snippet demonstrates how to install the necessary dependencies and run tests for the generated TypeScript AngularJS petstore client. It uses npm commands to manage the project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angularjs/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the 'propertyClass' property of the ClassModel class. It specifies the property name, type (String), and indicates that it is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using DebugPrintable Protocol with Alamofire Requests\nDESCRIPTION: This snippet shows how to use the DebugPrintable protocol with Alamofire requests, which outputs detailed information about the request when using debugPrint().\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_36\n\nLANGUAGE: swift\nCODE:\n```\nlet request = Alamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n\ndebugPrint(request)\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties in Swagger\nDESCRIPTION: Documents the properties of the NumberOnly model class which contains a single optional decimal property named JustNumber. This follows standard Swagger/OpenAPI model documentation format.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustNumber** | **decimal?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameter Types in Swagger API\nDESCRIPTION: This endpoint tests different parameter types including numbers, strings, binary data, dates, and passwords. It requires several mandatory parameters and has many optional ones. Uses HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_endpoint_parameters**\n> test_endpoint_parameters (number: REAL_32 ; double: REAL_64 ; pattern_without_delimiter: STRING_32 ; byte: ARRAY [NATURAL_8] ; integer:  detachable INTEGER_32 ; int32:  detachable INTEGER_32 ; int64:  detachable INTEGER_64 ; float:  detachable REAL_32 ; string:  detachable STRING_32 ; binary:  detachable STRING_32 ; date:  detachable DATE ; date_time:  detachable DATE_TIME ; password:  detachable STRING_32 ; callback:  detachable STRING_32 )\n\t\n\nFake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n\nFake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트 \n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **number** | **REAL_32**| None | \n **double** | **REAL_64**| None | \n **pattern_without_delimiter** | **STRING_32**| None | \n **byte** | **ARRAY [NATURAL_8]**| None | \n **integer** | **INTEGER_32**| None | [optional] \n **int32** | **INTEGER_32**| None | [optional] \n **int64** | **INTEGER_64**| None | [optional] \n **float** | **REAL_32**| None | [optional] \n **string** | **STRING_32**| None | [optional] \n **binary** | **STRING_32**| None | [optional] \n **date** | **DATE**| None | [optional] \n **date_time** | **DATE_TIME**| None | [optional] \n **password** | **STRING_32**| None | [optional] \n **callback** | **STRING_32**| None | [optional] \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\n[http_basic_test](../README.md#http_basic_test)\n\n### HTTP request headers\n\n - **Content-Type**: application/xml; charset=utf-8, application/json; charset=utf-8\n - **Accept**: application/xml; charset=utf-8, application/json; charset=utf-8\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown for Swagger Petstore\nDESCRIPTION: This code snippet defines the properties of the Animal model for the Swagger Petstore API. It specifies the className as a required String property and color as an optional String property with a default value of 'red'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Defining Enum_Test Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Enum_Test model using a markdown table. It includes the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Enum_Test.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **enum_string** | **string** |  | [optional] [default to null] |\n| **enum_string_required** | **string** |  | [default to null] |\n| **enum_integer** | **integer** |  | [optional] [default to null] |\n| **enum_number** | **float** |  | [optional] [default to null] |\n| **outerEnum** | [**OuterEnum**](OuterEnum.md) |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Struct Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the ModelApiResponse struct. It includes the property names, types, descriptions, and optional attributes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Code** | **int32** |  | [optional] [default to null]\n**Type_** | **string** |  | [optional] [default to null]\n**Message** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Property Definition Table for ENUM_ARRAYS Model\nDESCRIPTION: Markdown table defining the properties of the ENUM_ARRAYS model including just_symbol and array_enum fields with their types and details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ENUM_ARRAYS.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_symbol** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**array_enum** | [**LIST [STRING_32]**](STRING_32.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the Category model class. Shows property names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Name** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the WWW::SwaggerClient::Object::Tag Model in Perl\nDESCRIPTION: Demonstrates how to load the Tag model package in a Perl application. This is the first step before using the model to interact with API data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Tag;\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition - Swagger Markdown\nDESCRIPTION: Defines the possible string enum values for the enumStringRequired property, including UPPER, lower, and empty options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\n\n* `UPPER` (value: `\"UPPER\"`)\n* `lower` (value: `\"lower\"`)\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayOfArrayOfNumberOnly model using a markdown table. It specifies the property name, type, description, and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: Defines a ModelBoolean enum with two possible values: TRUE (represented as true) and FALSE (represented as false). This enum is likely used for boolean representations in generated code or API specifications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Class Structure for Swagger Petstore API\nDESCRIPTION: This documentation defines the structure for the Model200Response class in the Swagger Petstore API. It includes two optional properties: 'name' of type Number and '_class' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | [optional] \n**_class** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the properties of EnumTest class including various enum types. Properties include optional and required enum fields for string, integer, and number values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Properties in Markdown Table\nDESCRIPTION: This markdown table defines the properties of the ApiResponse class for the Petstore API. It includes the property names, their types, descriptions, and notes on optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  | [optional] \n**type** | **String** |  | [optional] \n**message** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Accessing REST API URLs for Application Server Deployment\nDESCRIPTION: URLs to access various services and API documentation when the application is deployed to an Application Server. Includes links for available services listing, Swagger API, and CXF WADL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/JavaJaxRS/cxf/server/readme.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Available services listing\nhttp://localhost:8080/swagger-cxf-server/rest/services/\n\n* Swagger API  \n http://localhost:8080/swagger-cxf-server/rest/services/swagger.json\n\n* CXF WADL\n http://localhost:8080/swagger-cxf-server/rest/services?_wadl\n```\n\n----------------------------------------\n\nTITLE: Loading the ApiResponse Model Package in Perl\nDESCRIPTION: Code snippet demonstrating how to load the ApiResponse model class from the WWW::SwaggerClient::Object namespace in a Perl application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ApiResponse;\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the Pet model, including their types, descriptions, and optional status. It uses a markdown table format to present the information clearly.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Class in Haskell\nDESCRIPTION: Defines the MapTest data type with constructor, accessors for map_map_of_string and map_of_enum_string fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_29\n\nLANGUAGE: haskell\nCODE:\n```\n-- | MapTest\ndata MapTest\nMapTest :: !(Maybe (Map String (Map String Text))) -> !(Maybe (Map String E'Inner)) -> MapTest\n\n-- | \"map_map_of_string\"\n[mapTestMapMapOfString] :: MapTest -> !(Maybe (Map String (Map String Text)))\n\n-- | \"map_of_enum_string\"\n[mapTestMapOfEnumString] :: MapTest -> !(Maybe (Map String E'Inner))\n\n-- | FromJSON MapTest\n\n-- | ToJSON MapTest\n\n-- | Construct a value of type <a>MapTest</a> (by applying it's required\n--   fields, if any)\nmkMapTest :: MapTest\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the ArrayTest model. It documents three properties: array_of_string (a string array), array_array_of_integer (a 2D integer array), and array_array_of_model (a 2D array of ReadOnlyFirst model objects).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_of_string** | **string[]** |  | [optional] \n**array_array_of_integer** | [**int[][]**](array.md) |  | [optional] \n**array_array_of_model** | [**\\Swagger\\Client\\Model\\ReadOnlyFirst[][]**](array.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: ModelApiResponse Class Properties Definition\nDESCRIPTION: Markdown table defining the properties of the ModelApiResponse class. Includes three optional properties: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: API Module Declaration for SwaggerPetstore\nDESCRIPTION: Empty module declaration for the main SwaggerPetstore API, serving as a container for API-related definitions and functions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_53\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.API\n```\n\n----------------------------------------\n\nTITLE: Defining String Enum Values for MapTest in JavaScript/TypeScript\nDESCRIPTION: Specifies the allowed enum values for the mapOfEnumString property, which are \"UPPER\" and \"lower\". This defines the valid string values that can be used in the enum map.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: {String: String}\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Class Properties Definition in Markdown\nDESCRIPTION: Documents the ModelReturn class with a property table that defines the _return integer property. The table shows the property name, data type, description with special characters, and indicates it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ModelReturn\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** | property description  *_/ &#39; \\&quot; &#x3D;end - - \\\\r\\\\n \\\\n \\\\r | [optional] \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ReadOnlyFirst model using a markdown table. It specifies two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **string** |  | [optional] \n**baz** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties in Markdown\nDESCRIPTION: Defines the properties of the EnumTest model, including optional and required enum fields. Each property is described with its type and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Client to Local Maven Repository\nDESCRIPTION: Shell command to install the Swagger Petstore OkHttp4 Gson client library to the local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nmvn clean install\n```\n\n----------------------------------------\n\nTITLE: Animal Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the Animal model, including their types, descriptions and optional flags. The model has two properties: class_name (required string) and color (optional string defaulting to 'red').\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | **str** |  | \n**color** | **str** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Using npm link with Angular2 TypeScript Petstore Package\nDESCRIPTION: Commands for using npm link to connect a local package to your project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @swagger/angular2-typescript-petstore\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in C# with Swagger\nDESCRIPTION: Example showing how to test enum parameters using different parameter types including form data, headers, and query parameters. Handles string arrays, integers and doubles as enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestEnumParametersExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var enumFormStringArray = enumFormStringArray_example;  // List<string> | Form parameter enum test (string array) (optional) \n            var enumFormString = enumFormString_example;  // string | Form parameter enum test (string) (optional)  (default to -efg)\n            var enumHeaderStringArray = enumHeaderStringArray_example;  // List<string> | Header parameter enum test (string array) (optional) \n            var enumHeaderString = enumHeaderString_example;  // string | Header parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryStringArray = enumQueryStringArray_example;  // List<string> | Query parameter enum test (string array) (optional) \n            var enumQueryString = enumQueryString_example;  // string | Query parameter enum test (string) (optional)  (default to -efg)\n            var enumQueryInteger = 56;  // int? | Query parameter enum test (double) (optional) \n            var enumQueryDouble = 1.2;  // double? | Query parameter enum test (double) (optional) \n\n            try\n            {\n                apiInstance.TestEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestEnumParameters: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Swagger Markdown\nDESCRIPTION: Defines the data structure for a User model with properties including identification, personal information, contact details and status. Each property is defined with its data type and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Server on Linux/OS X\nDESCRIPTION: Shell command to build and run the Swagger Petstore server on Linux or OS X platforms using the build script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-interface-only/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsh build.sh\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Swagger Petstore Kotlin Client Library\nDESCRIPTION: Command to run all tests and package the Swagger Petstore Kotlin client library using the Gradle wrapper.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew check assemble\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Class Property Definition in Markdown\nDESCRIPTION: Defines the ModelReturn class with a single optional integer property named '_return'. The property is documented in a markdown table format showing its name, type, description, and that it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the OuterComposite class, including property names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional] |\n| **myString** | **String** |  |  [optional] |\n| **myBoolean** | **Boolean** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Invoking fake_outer_composite_serialize in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the fake_outer_composite_serialize endpoint to test serialization of object with outer number type. This example creates an API instance, makes the call with an optional composite body parameter, and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterComposite() # OuterComposite | Input composite as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_composite_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_composite_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining Currency Model Properties in Markdown\nDESCRIPTION: This snippet outlines the structure for defining properties of a Currency model. It uses a markdown table format, commonly found in API documentation or specification files like Swagger. The table is set up to describe the name, type, description, and any additional notes for each property of the Currency model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a User model using a Markdown table format. It includes fields such as id, username, firstName, lastName, email, password, phone, and userStatus, along with their respective data types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing FakeClassnameTags123Api Client Call in Java\nDESCRIPTION: Example code demonstrating how to call the testClassname endpoint using the Swagger client. Shows authentication setup using API key and handling the API response with proper error management.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This code snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass using a Markdown table. It specifies the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Published Package\nDESCRIPTION: Command to install the published package in a project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ --save\n```\n\n----------------------------------------\n\nTITLE: Defining User Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the User model. It includes fields such as id, username, first_name, last_name, email, password, phone, and user_status. Each property is described with its type and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**username** | **string** |  | [optional] \n**first_name** | **string** |  | [optional] \n**last_name** | **string** |  | [optional] \n**email** | **string** |  | [optional] \n**password** | **string** |  | [optional] \n**phone** | **string** |  | [optional] \n**user_status** | **int** | User Status | [optional] \n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values in Markdown\nDESCRIPTION: Table defining the possible values for the EnumStringEnum type, including 'UPPER', 'lower', and empty string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringEnum\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\nEMPTY | &quot;&quot;\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Dependencies for an Angular API Module\nDESCRIPTION: Commands for installing dependencies and building the typescript sources for the API module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: OuterBoolean Properties Table in Markdown\nDESCRIPTION: Markdown table structure defining the properties of the OuterBoolean model type, though containing no actual property definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n```\n\n----------------------------------------\n\nTITLE: Loading WWW::SwaggerClient::Object::AdditionalPropertiesClass Model in Perl\nDESCRIPTION: Code snippet demonstrating how to load the AdditionalPropertiesClass model package in a Perl application. This is required before using the model in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::AdditionalPropertiesClass;\n```\n\n----------------------------------------\n\nTITLE: Properties Table\nDESCRIPTION: Table defining the properties of the EnumTest class including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Fetching Raw Service Creation Function in Pimple\nDESCRIPTION: Demonstrates how to access the raw service creation function using the raw() method, which can be useful for advanced use cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$container['session'] = function ($c) {\n    return new Session($c['session_storage']);\n};\n\n$sessionFunction = $container->raw('session');\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayTest model using a markdown table. It includes three array properties: ArrayOfString, ArrayArrayOfInteger, and ArrayArrayOfModel, each with their respective types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **[]string** |  | [optional] [default to null]\n**ArrayArrayOfInteger** | [**[][]int64**](array.md) |  | [optional] [default to null]\n**ArrayArrayOfModel** | [**[][]ReadOnlyFirst**](array.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ModelReturn class using a Markdown table. It specifies a single property '_return' of type Integer, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: Specifies the properties of the Model200Response class using a markdown table. It defines two optional properties: 'name' as an Integer and 'propertyClass' as a String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of a Cat model class. Includes three properties: class_name (required String), color (optional String defaulting to 'red'), and declawed (optional Boolean).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | **String** |  | \n**color** | **String** |  | [optional] [default to 'red']\n**declawed** | **BOOLEAN** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Describes the properties of an Order object, including their types and optional status. It also defines an enumeration for the order status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Order\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n\n\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name with Snake Case in Java using Swagger Client\nDESCRIPTION: Example code demonstrating how to use the FakeClassnameTags123Api to test class names in snake case. Shows configuration of API key authentication and making a PATCH request to the fake_classname_test endpoint. Handles API exceptions and returns a Client model object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Cat model using a markdown table. It specifies the property names, types, descriptions, and additional notes such as optionality and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ClassName** | **string** |  | \n| **Color** | **string** |  | [optional] [default to \"red\"]\n| **Declawed** | **bool?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties for Petstore Ruby Client\nDESCRIPTION: Documents the properties of the ArrayOfArrayOfNumberOnly model class in a Ruby client for the Petstore API. The model has a single property named 'array_array_number' which is a nested array of floating-point numbers and is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_array_number** | **Array&lt;Array&lt;Float&gt;&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP GET Endpoint for User Login\nDESCRIPTION: HTTP endpoint definition for authenticating a user by validating their username and password.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_25\n\nLANGUAGE: http\nCODE:\n```\nget /user/login\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Capitalization model using a markdown table. It includes various naming conventions and their corresponding types and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the MapTest model. It includes two map properties: mapMapOfString and mapOfEnumString. The properties are described with their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Cat model using a markdown table. It includes the property names, their types, descriptions, and additional notes such as optional status and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ClassName** | **string** |  | \n| **Color** | **string** |  | [optional] [default to \"red\"]\n| **Declawed** | **bool?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Mixed Properties Class Structure in Markdown\nDESCRIPTION: Documents the structure of a class containing mixed property types including UUID, OffsetDateTime, and a Map of String to Animal objects. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# MixedPropertiesAndAdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values in Markdown\nDESCRIPTION: Specifies the possible floating-point number values for the EnumNumberEnum used in the EnumTest model. It includes positive and negative decimal options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumNumberEnum\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: EnumTest Model Properties Table in Markdown\nDESCRIPTION: Table defining the properties of the EnumTest model, including their types, descriptions, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition\nDESCRIPTION: Defines the allowed integer values for the EnumIntegerEnum type including positive and negative integers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties Table in Markdown for Swagger CodeGen\nDESCRIPTION: This Markdown table defines the properties for a 'Name' model in Swagger CodeGen. It specifies the property names, their data types, and whether they are optional or required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays model using a markdown table. It specifies the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustSymbol** | **string** |  | [optional] [default to null]\n**ArrayEnum** | **[]string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean in JavaScript for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the fakeOuterBooleanSerialize method of the FakeApi class to test serialization of outer boolean types. It takes an optional OuterBoolean body parameter and returns an OuterBoolean object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterBoolean() // OuterBoolean | Input boolean as post body\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.fakeOuterBooleanSerialize(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Properties Table in Markdown\nDESCRIPTION: Markdown table structure defining the properties format for the OuterBoolean class, though the table is empty. The table includes columns for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::OuterBoolean\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Creating Users with List Input using Petstore CLI\nDESCRIPTION: This snippet illustrates how to create multiple users using a list input with the Petstore CLI. It accepts a list of User objects as input and doesn't return any response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli createUsersWithListInput\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in Swagger API\nDESCRIPTION: This endpoint tests the combination of a body parameter with query parameters. It requires both a USER object in the body and a STRING_32 query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_body_with_query_params**\n> test_body_with_query_params (body: USER ; query: STRING_32 )\n\t\n\n\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**USER**](USER.md)|  | \n **query** | **STRING_32**|  | \n\n### Return type\n\n{empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Specifying HTTP Request Headers for Pet Update API in Markdown\nDESCRIPTION: This snippet defines the HTTP request headers for the pet update API endpoint, including Content-Type and Accept headers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n### HTTP request headers\n\n - **Content-Type**: multipart/form-data\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This markdown table defines the properties of a 'Name' model. It includes four properties: 'name' (required Integer), 'snakeCase' (optional Integer), 'property' (optional String), and '_123Number' (optional Integer). The table format is specifically designed for Swagger Codegen to parse and generate model classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties\nDESCRIPTION: Class property definitions including a single enum property justSymbol and an array enum property arrayEnum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List<ArrayEnumEnum>**](#List<ArrayEnumEnum>) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Swagger Petstore API\nDESCRIPTION: This code snippet defines an enum called OuterEnum with three possible string values: 'placed', 'approved', and 'delivered'. Each enum value is represented as a key-value pair, where the key is the enum name and the value is the string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.OuterEnum\n\n## Enum\n\n\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Loading the User Model Package in Perl\nDESCRIPTION: Shows how to load the WWW::SwaggerClient::Object::User model package in a Perl application. This is required before working with User objects in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::User;\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of an Animal model using a markdown table. It specifies two properties: className (required string) and color (optional string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **string** |  | [default to null]\n**color** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass with String Constants in Markdown\nDESCRIPTION: Defines an enum class named 'EnumClass' with three constants: _ABC, _EFG, and _XYZ_. Each constant is associated with a specific string value, potentially used for API parameter values or response codes in Swagger Codegen projects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# EnumClass\n\n## Enum\n\n\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean Types in Swagger API\nDESCRIPTION: This code snippet defines an API endpoint for testing serialization of outer boolean types. It accepts an optional OUTER_BOOLEAN object in the request body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **fake_outer_boolean_serialize**\n> fake_outer_boolean_serialize (body:  detachable OUTER_BOOLEAN ): detachable OUTER_BOOLEAN\n\t\n\n\n\nTest serialization of outer boolean types\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**OUTER_BOOLEAN**](OUTER_BOOLEAN.md)| Input boolean as post body | [optional] \n\n### Return type\n\n[**OUTER_BOOLEAN**](OuterBoolean.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition\nDESCRIPTION: Defines allowed integer enum values including 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Definition in Markdown\nDESCRIPTION: Defines the main properties of the EnumArrays model, including justSymbol and arrayEnum fields with their respective types and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Uninstalling the Package\nDESCRIPTION: Ant command to remove all classes and the Remote Site created by this package from the Salesforce org.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ ant undeploy\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values Definition\nDESCRIPTION: Markdown table defining the possible values for the ArrayEnumEnum enumeration, containing sea creatures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining ARRAY_OF_NUMBER_ONLY Model in Markdown\nDESCRIPTION: This snippet defines the structure of the ARRAY_OF_NUMBER_ONLY model using a markdown table. It specifies the property name, type, description, and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ARRAY_OF_NUMBER_ONLY.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ARRAY_OF_NUMBER_ONLY\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_number** | **LIST [REAL_32]** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: This code snippet defines the properties of a Dog object in a Swagger/OpenAPI specification using markdown table format. It specifies a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Class Properties in Markdown\nDESCRIPTION: Defines the properties of the ArrayOfArrayOfNumberOnly class using a markdown table. The class has a single optional property 'arrayArrayNumber' of type [[Number]].\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | **[[Number]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: BigDecimal Number Constants in Java\nDESCRIPTION: Defines a set of numerical constants using Java's BigDecimal class for precise decimal arithmetic. Contains values from 7 to 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 = new BigDecimal(7)\nNUMBER_8 = new BigDecimal(8)\nNUMBER_9 = new BigDecimal(9)\nNUMBER_10 = new BigDecimal(10)\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the AdditionalPropertiesClass model. It includes two optional properties: mapProperty (a simple string-to-string map) and mapOfMapProperty (a nested map structure).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Server with Docker\nDESCRIPTION: Docker commands to build and run the Swagger server in a container. Maps port 5000 from the container to the host system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2-interface-only/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd src/IO.Swagger\ndocker build -t io.swagger .\ndocker run -p 5000:5000 io.swagger\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Markdown\nDESCRIPTION: Defines the properties of the ModelReturn class using a Markdown table. The class has a single optional property named '_return' of type Integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger Client Model in Perl\nDESCRIPTION: Demonstrates how to load the Client model package in a Perl application using the WWW::SwaggerClient::Object::Client module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Client;\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayTest model using a Markdown table. It specifies the name, type, description, and optionality of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **[String]** |  | [optional] \n**arrayArrayOfInteger** | **[[Number]]** |  | [optional] \n**arrayArrayOfModel** | **[[ReadOnlyFirst]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown Table\nDESCRIPTION: This table defines the properties of a Category model, including their data types, descriptions, and whether they are optional. The model has a Long 'id' property and a String 'name' property, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Class in Haskell\nDESCRIPTION: Defines the AnimalFarm data type with constructor, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_16\n\nLANGUAGE: haskell\nCODE:\n```\n-- | AnimalFarm\ndata AnimalFarm\nAnimalFarm :: AnimalFarm\n\n-- | FromJSON AnimalFarm\n\n-- | ToJSON AnimalFarm\n\n-- | Construct a value of type <a>AnimalFarm</a> (by applying it's required\n--   fields, if any)\nmkAnimalFarm :: AnimalFarm\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest class using a markdown table. It includes the property names, their corresponding data types, and whether they are optional or required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining Python Test Dependencies for Swagger Codegen\nDESCRIPTION: This requirements file lists the Python packages needed for testing the Swagger Codegen project. It includes testing libraries like coverage for code coverage analysis, nose for test running, pluggy for plugin management, py for pytest functionality, and randomize for test randomization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/test-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncoverage>=4.0.3\nnose>=1.3.7\npluggy>=0.3.1\npy>=1.4.31\nrandomize>=0.13\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Properties Table\nDESCRIPTION: Markdown table documenting the properties of the ArrayOfArrayOfNumberOnly class, showing the arrayArrayNumber property that accepts a nested list of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Markdown\nDESCRIPTION: This table defines the properties of the 'Name' model, including their types, descriptions, and whether they are optional or have default values. The properties include Name (required int32), SnakeCase (optional int32), Property (optional string), and Var123Number (optional int32).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Name** | **int32** |  | [default to null] |\n| **SnakeCase** | **int32** |  | [optional] [default to null] |\n| **Property** | **string** |  | [optional] [default to null] |\n| **Var123Number** | **int32** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore API Client via Github (Dart/YAML)\nDESCRIPTION: Configuration for including the Swagger API client package from Github in a Dart project's pubspec.yaml file. Specifies the package name, version, description, and Github repository details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/README.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: swagger\nversion: 1.0.0\ndescription: Swagger API client\ndependencies:\n  swagger:\n    git: https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n      version: 'any'\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with FakeApi in PHP\nDESCRIPTION: This snippet demonstrates how to use the testInlineAdditionalProperties method of the FakeApi class. It shows how to pass an object as a parameter and handle exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$param = new \\stdClass; // object | request body\n\ntry {\n    $apiInstance->testInlineAdditionalProperties($param);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testInlineAdditionalProperties: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties in Markdown Table\nDESCRIPTION: This snippet defines the properties of a User model using a markdown table. It includes field names, data types, descriptions, and optional attributes for each property of the User object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **i64** |  | [optional] [default to null] |\n| **username** | **String** |  | [optional] [default to null] |\n| **first_name** | **String** |  | [optional] [default to null] |\n| **last_name** | **String** |  | [optional] [default to null] |\n| **email** | **String** |  | [optional] [default to null] |\n| **password** | **String** |  | [optional] [default to null] |\n| **phone** | **String** |  | [optional] [default to null] |\n| **user_status** | **i32** | User Status | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Publishing the Angular2 TypeScript Petstore Package\nDESCRIPTION: Command for publishing the package to npm registry, specifying the dist folder.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish dist\n```\n\n----------------------------------------\n\nTITLE: Installing Python Package Using Setuptools\nDESCRIPTION: Instructions for installing the Python package using setuptools, an alternative installation method that installs the package locally for the current user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npython setup.py install --user\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Model Properties Table\nDESCRIPTION: Table defining the properties of the ArrayTest model, including array types for strings, integers and model references. Properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **array_of_string** | **list[str]** |  | [optional] |\n| **array_array_of_integer** | **list[list[int]]** |  | [optional] |\n| **array_array_of_model** | **list[list[ReadOnlyFirst]]** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Capitalization object using a Markdown table. It includes property names, types, descriptions, and optional notes. The properties demonstrate various naming conventions commonly used in programming.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Pet model using a markdown table. It includes the property names, their types, descriptions, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Id** | **long?** |  | [optional] |\n| **Category** | [**Category**](Category.md) |  | [optional] |\n| **Name** | **string** |  | |\n| **PhotoUrls** | **List<string>** |  | |\n| **Tags** | [**List<Tag>**](Tag.md) |  | [optional] |\n| **Status** | **string** | pet status in the store | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Structure in Markdown\nDESCRIPTION: Markdown table structure for documenting AnimalFarm model properties, including columns for Name, Type, Description and Notes. The table is empty indicating a placeholder or template structure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Importing Multiple API Modules\nDESCRIPTION: Example of importing multiple API modules with alias names to avoid conflicts.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Category model using a markdown table. It specifies two optional properties: 'id' as an integer and 'name' as a string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**name** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Enum Value Definition with Special Characters\nDESCRIPTION: Defines three enum constants with their corresponding string values. The values use special characters like underscores, hyphens and parentheses as prefixes/wrappers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Running Build Runner for Jaguar API Implementation in Dart\nDESCRIPTION: Commands for running the build_runner to implement the Jaguar API in either Flutter or Dart environments after code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nflutter packages pub run build_runner build\nor\npub run build_runner build\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in C#\nDESCRIPTION: This example shows how to delete a user by their username. The operation can only be performed by authenticated users. The method takes a string username parameter and returns no value, with exception handling to catch any errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteUserExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var username = username_example;  // string | The name that needs to be deleted\n\n            try\n            {\n                // Delete user\n                apiInstance.DeleteUser(username);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.DeleteUser: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SwagAmount Properties in Swagger-Codegen Markdown\nDESCRIPTION: Definition of the SwagAmount model with two properties: value (Double) representing an amount with some description, and currency (String) without additional description. This is part of a Swagger API specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagAmount.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwagAmount\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**value** | **Double** | some description\\n | \n**currency** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Table\nDESCRIPTION: Markdown table defining the properties, types, descriptions and optional status for the Pet model entity.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **int** |  | [optional] |\n| **category** | [**Category**](Category.md) |  | [optional] |\n| **name** | **str** |  | |\n| **photo_urls** | **list[str]** |  | |\n| **tags** | [**list[Tag]**](Tag.md) |  | [optional] |\n| **status** | **str** | pet status in the store | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Client Object Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of a Client object. Contains a single optional 'client' property of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using Parameters in Service Definitions\nDESCRIPTION: Demonstrates how to use defined parameters within a service definition for flexible configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$container['session_storage'] = function ($c) {\n    return new $c['session_storage_class']($c['cookie_name']);\n};\n```\n\n----------------------------------------\n\nTITLE: Networking and Location Example using PromiseKit in Swift\nDESCRIPTION: Example showing how to combine network requests and location services using PromiseKit. The code demonstrates managing network activity indicator, loading an image, getting location data, and handling errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_0\n\nLANGUAGE: swift\nCODE:\n```\nUIApplication.shared.isNetworkActivityIndicatorVisible = true\n\nfirstly {\n    when(URLSession.dataTask(with: url).asImage(), CLLocationManager.promise())\n}.then { image, location -> Void in\n    self.imageView.image = image\n    self.label.text = \"\\(location)\"\n}.always {\n    UIApplication.shared.isNetworkActivityIndicatorVisible = false\n}.catch { error in\n    self.show(UIAlertController(for: error), sender: self)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the SpecialModelName model. It includes a single optional property 'SpecialPropertyName' of type int64.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**SpecialPropertyName** | **int64** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in C#\nDESCRIPTION: Demonstrates the usage of the TestInlineAdditionalProperties method in the FakeApi class. This method tests inline additional properties in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestInlineAdditionalPropertiesExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = ;  // Object | request body\n\n            try\n            {\n                // test inline additionalProperties\n                apiInstance.TestInlineAdditionalProperties(param);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestInlineAdditionalProperties: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Class Names with FakeClassnameTags123Api in Java\nDESCRIPTION: Example code demonstrating how to call the testClassname endpoint using the Swagger client library. Shows API key authentication setup and error handling. The endpoint accepts a Client model as input and returns a Client model response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Client model using a Markdown table. It specifies a single optional property 'client' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: Defines an enumeration for the pet status property, specifying possible values as 'available', 'pending', and 'sold'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Creating a User Model with ResponseObjectSerializable in Swift\nDESCRIPTION: Implements a User model class that conforms to ResponseObjectSerializable, allowing automatic conversion from HTTP responses and JSON data into typed objects. The class extracts username from the URL and name from the JSON response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_45\n\nLANGUAGE: swift\nCODE:\n```\nfinal class User: ResponseObjectSerializable {\n    let username: String\n    let name: String\n\n    init?(response: NSHTTPURLResponse, representation: AnyObject) {\n        self.username = response.URL!.lastPathComponent!\n        self.name = representation.valueForKeyPath(\"name\") as! String\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Get Inventory Example in Java\nDESCRIPTION: Shows how to retrieve pet inventories by status using API key authentication. Returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagStoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nSwagStoreApi api = new SwagStoreApi();\nSwagClient client = api.getClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) client.getAuthentication('api_key');\napi_key.setApiKey('YOUR API KEY');\n\ntry {\n    // cross your fingers\n    Map<String, Integer> result = api.getInventory();\n    System.debug(result);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in SwaggerPetstore using JavaScript\nDESCRIPTION: This snippet demonstrates creating multiple users using a list input. It's similar to the array input method, initializing the API instance, creating a list of user objects, and calling createUsersWithListInput with a callback function.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.createUsersWithListInput(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Importing Petstore API Package after pip Installation\nDESCRIPTION: Demonstrates how to import the petstore-api package in Python code after installing it with pip. This is the first step in using the client library in your Python application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/README.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport petstore_api\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger Pet API in Dart\nDESCRIPTION: This snippet shows how to import the Swagger Pet API package in a Dart application. It's required before using any of the API methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Properties Table in Markdown\nDESCRIPTION: Markdown table defining the ModelList class property _123List as an optional String field. Uses standard Swagger/OpenAPI property definition format with name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Package with NPM\nDESCRIPTION: Commands to install dependencies and build the TypeScript package, compiling TypeScript sources to JavaScript.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/array-and-object-expected/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Importing Amount Model in Dart\nDESCRIPTION: Shows how to import the Amount model class from the swagger API package in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for the enumInteger property, which includes the integer values 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"EnumIntegerEnum\"></a>\n## Enum: EnumIntegerEnum\n\n\n* `_1` (value: `1`)\n\n* `_1_2` (value: `-1`)\n```\n\n----------------------------------------\n\nTITLE: Pet Status Enumeration in Markdown\nDESCRIPTION: Defines the possible status values for a pet in the store as an enumeration. The enum includes three possible states: available, pending, and sold.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the SpecialModelName model. Contains a single optional integer property named 'special_property_name'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**special_property_name** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Order Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the Order model properties including their types, descriptions and validation rules. The model includes fields for order tracking, pet reference, shipping details and order status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n|**id** | **i64** |  | [optional] [default to null]|\n|**pet_id** | **i64** |  | [optional] [default to null]|\n|**quantity** | **i32** |  | [optional] [default to null]|\n|**ship_date** | **String** |  | [optional] [default to null]|\n|**status** | **String** | Order Status | [optional] [default to null]|\n|**complete** | **bool** |  | [optional] [default to null]|\n```\n\n----------------------------------------\n\nTITLE: Using Generated Bash Client to Print Help Information\nDESCRIPTION: This command demonstrates how to use the generated Bash client to print help information for the entire service.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ cd generated/bash/petstore\n$ ./petstore-cli -h\n```\n\n----------------------------------------\n\nTITLE: Status Enum Values in Markdown\nDESCRIPTION: Markdown table defining the possible values for the order status enum including placed, approved and delivered states.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Value |\n---- | -----\nPLACED | \"placed\"\nAPPROVED | \"approved\"\nDELIVERED | \"delivered\"\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: Defines the properties of the EnumArrays model, including 'justSymbol' and 'arrayEnum'. Both properties are optional and use custom enum types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in C#\nDESCRIPTION: Defines the ArrayOfArrayOfNumberOnly model class with a property that stores a two-dimensional array of nullable decimal values. The property is optional as indicated by the [optional] annotation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | **List<List<decimal?>>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values\nDESCRIPTION: Enumeration defining symbol values, including greater than or equal and dollar symbols.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Value |\n| --- | --- |\n| GREATER_THAN_OR_EQUAL_TO | \">=\"|\n| DOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Swagger Petstore\nDESCRIPTION: Defines the property structure for the ArrayTest model within the Swagger Petstore API. It includes three array properties: arrayOfString (a simple string array), arrayArrayOfInteger (a nested array of numbers), and arrayArrayOfModel (a nested array of ReadOnlyFirst model objects). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **[String]** |  | [optional] \n**arrayArrayOfInteger** | **[[Number]]** |  | [optional] \n**arrayArrayOfModel** | **[[ReadOnlyFirst]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Definition\nDESCRIPTION: Defines the possible values for the InnerEnum type used in mapOfEnumString property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Value |\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Petstore Tests with Environment Variables\nDESCRIPTION: Command demonstrating how to run the tests with environment variables configured for HOST and http_proxy. These variables specify the Petstore server location and HTTP proxy to use during testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/tests-integration/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nHOST=http://0.0.0.0/v2  http_proxy=http://0.0.0.0:8080 stack --install-ghc test\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Swagger API\nDESCRIPTION: API endpoint for creating multiple users at once by providing a list of user objects. This endpoint accepts a LIST of USER objects in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# **create_users_with_list_input**\n> create_users_with_list_input (body: LIST [USER] )\n\t\n\nCreates list of users with given input array\n```\n\n----------------------------------------\n\nTITLE: Generating Perl SDK with Swagger Codegen CLI for GitHub Integration\nDESCRIPTION: This command demonstrates how to generate a Perl SDK from a Swagger/OpenAPI specification using the Swagger Codegen CLI. It specifies GitHub repository information and includes parameters for user ID, repository name, and release notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/workflow-integration.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\njava -jar modules/swagger-codegen-cli/target/swagger-codegen-cli.jar generate \\\n -i modules/swagger-codegen/src/test/resources/2_0/petstore.json -l perl \\\n --git-user-id \"swaggerapi\" \\\n --git-repo-id \"petstore-perl\" \\\n --release-note \"Github integration demo\" \\\n -o /var/tmp/perl/petstore\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags in Markdown\nDESCRIPTION: This snippet describes the API endpoint for finding pets by tags. It specifies the HTTP method, parameters, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# **find_pets_by_tags**\n> find_pets_by_tags (tags: LIST [STRING_32] ): detachable LIST [PET]\n\t\n\nFinds Pets by tags\n\nMultiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **tags** | [**LIST [STRING_32]**](STRING_32.md)| Tags to filter by | \n\n### Return type\n\n[**LIST [PET]**](Pet.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Schema in Swagger/OpenAPI Markdown\nDESCRIPTION: This snippet defines a Cat model with an optional Boolean property 'declawed'. The schema follows the Swagger/OpenAPI specification format with property name, type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Docker Maven Plugin Configuration\nDESCRIPTION: Maven plugin configuration for building and managing Docker images of the microservice.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/java-pkmst/Readme.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<build>\n  <plugins>\n    <plugin>\n      <groupId>com.spotify</groupId>\n      <artifactId>docker-maven-plugin</artifactId>\n      <version>VERSION GOES HERE</version>\n      <configuration>\n        <imageName>example</imageName>\n        <dockerDirectory>docker</dockerDirectory>\n        <resources>\n           <resource>\n             <targetPath>/</targetPath>\n             <directory>${project.build.directory}</directory>\n             <include>${project.build.finalName}.jar</include>\n           </resource>\n        </resources>\n      </configuration>\n    </plugin>\n  </plugins>\n</build>\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Properties Table in Markdown\nDESCRIPTION: Empty markdown table defining the properties structure for the OuterEnum model. Contains column headers for Name, Type, Description and Notes but no actual property entries.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Model200Response class using a markdown table. It specifies two optional properties: Name (integer) and Class (string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Model200Response\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Name** | **int?** |  | [optional] \n**Class** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the ReadOnlyFirst class using a markdown table. It defines two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of the Animal model class. Includes className as a required String property and color as an optional String property defaulting to 'red'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  | [optional] [default to 'red']\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum in Swagger Petstore\nDESCRIPTION: This code snippet defines an enumeration named 'Ints' for the Swagger Petstore API. It includes integer values from 0 to 6, each represented as a string with an underscore prefix. This enum can be used to restrict integer inputs to a specific set of values in API requests or responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Ints\n\n## Enum\n\n\n* `_0` (value: `0`)\n\n* `_1` (value: `1`)\n\n* `_2` (value: `2`)\n\n* `_3` (value: `3`)\n\n* `_4` (value: `4`)\n\n* `_5` (value: `5`)\n\n* `_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining ENUM_TEST Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ENUM_TEST model using a Markdown table. It includes the property names, types, descriptions, and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ENUM_TEST.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **enum_string** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null] |\n| **enum_string_required** | [**STRING_32**](STRING_32.md) |  | [default to null] |\n| **enum_integer** | **INTEGER_32** |  | [optional] [default to null] |\n| **enum_number** | **REAL_64** |  | [optional] [default to null] |\n| **outer_enum** | [**OUTER_ENUM**](OuterEnum.md) |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Defining E'Status Enum in Haskell for Swagger Petstore API\nDESCRIPTION: Defines an enum 'E'Status' with values 'Placed', 'Approved', and 'Delivered' for representing order status. Includes functions to convert between the enum and Text.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_35\n\nLANGUAGE: Haskell\nCODE:\n```\n-- | <pre>\n--   \"placed\"\n--   </pre>\nE'Status'Placed :: E'Status\n\n-- | <pre>\n--   \"approved\"\n--   </pre>\nE'Status'Approved :: E'Status\n\n-- | <pre>\n--   \"delivered\"\n--   </pre>\nE'Status'Delivered :: E'Status\n\n-- | unwrap <a>E'Status</a> enum\nfromE'Status :: E'Status -> Text\n\n-- | parse <a>E'Status</a> enum\ntoE'Status :: Text -> Either String E'Status\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Swagger/OpenAPI specification\nDESCRIPTION: This Markdown table defines the properties of the ModelApiResponse class. It includes three optional fields: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining SwaggerPetstore Core Type Instances in Haskell\nDESCRIPTION: This snippet defines multiple type class instances for core SwaggerPetstore types such as Date, DateTime, and Binary. These instances provide functionality for equality, ordering, JSON conversion, and HTTP API data handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_11\n\nLANGUAGE: Haskell\nCODE:\n```\ninstance GHC.Classes.Eq SwaggerPetstore.Core.Date\ninstance GHC.Enum.Enum SwaggerPetstore.Core.Date\ninstance Data.Time.Format.FormatTime SwaggerPetstore.Core.DateTime\ninstance Data.Time.Format.Parse.ParseTime SwaggerPetstore.Core.DateTime\ninstance Control.DeepSeq.NFData SwaggerPetstore.Core.DateTime\ninstance GHC.Classes.Ord SwaggerPetstore.Core.DateTime\ninstance Data.Data.Data SwaggerPetstore.Core.DateTime\ninstance GHC.Classes.Eq SwaggerPetstore.Core.DateTime\ninstance GHC.Show.Show SwaggerPetstore.Core.AuthMethodException\ninstance GHC.Show.Show (SwaggerPetstore.Core.SwaggerPetstoreRequest req contentType res accept)\ninstance GHC.Show.Show SwaggerPetstore.Core.Params\ninstance GHC.Show.Show SwaggerPetstore.Core.ParamBody\ninstance Data.Aeson.Types.FromJSON.FromJSON SwaggerPetstore.Core.Binary\ninstance Data.Aeson.Types.ToJSON.ToJSON SwaggerPetstore.Core.Binary\ninstance Web.Internal.HttpApiData.FromHttpApiData SwaggerPetstore.Core.Binary\ninstance Web.Internal.HttpApiData.ToHttpApiData SwaggerPetstore.Core.Binary\ninstance GHC.Show.Show SwaggerPetstore.Core.Binary\ninstance SwaggerPetstore.MimeTypes.MimeRender SwaggerPetstore.MimeTypes.MimeMultipartFormData SwaggerPetstore.Core.Binary\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: Defines a ModelBoolean enum with two possible values: TRUE and FALSE. Each value is associated with its corresponding boolean literal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Swagger Markdown\nDESCRIPTION: Markdown table defining the properties of a Dog model in Swagger/OpenAPI format. Contains a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown for Swagger API\nDESCRIPTION: This markdown table defines the properties of the Dog model for a Swagger API. It specifies the name, type, description, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | \n**Color** | **string** |  | [optional] [default to \"red\"]\n**Breed** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the ReadOnlyFirst model. Contains two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **bar** | **str** |  | [optional] |\n| **baz** | **str** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Numbers Enum in SwaggerPetstore TypeScript Client\nDESCRIPTION: This code defines a TypeScript enumeration called Numbers in the SwaggerPetstore namespace. It contains four numeric values (7, 8, 9, and 10) with identifiers prefixed with underscores to allow numeric values as enum names.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n* `_7` (value: `7`)\n\n* `_8` (value: `8`)\n\n* `_9` (value: `9`)\n\n* `_10` (value: `10`)\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown Table\nDESCRIPTION: A Markdown table that documents the properties of the ReadOnlyFirst model, including their names, types, descriptions, and optional status. The model contains two optional String properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties Table in Markdown\nDESCRIPTION: A markdown table that documents the properties of the Order model, including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model using a Markdown table. It defines a single optional property 'arrayNumber' of type List<BigDecimal>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties in Markdown for Swagger Codegen\nDESCRIPTION: Specifies the properties of a User object using a markdown table format. Each row represents a property with its name, data type, description, and optional status. This structure is commonly used in Swagger/OpenAPI specifications for generating API documentation and client SDKs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the JustSymbolEnum enumeration with its possible values and their corresponding string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Table Definition\nDESCRIPTION: Defines the properties of the MapTest class including a nested string map and an enum map, with optional flags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and characteristics of the OuterComposite model class. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single optional property 'justNumber' of type BigDecimal. This model likely represents a data structure that only contains a numeric value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Schema in Swagger\nDESCRIPTION: Markdown table defining the ModelList schema with a single property _123List of type String that is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Type Properties Table in Markdown\nDESCRIPTION: Markdown table structure defining the properties of the OuterBoolean type, though the table contains no actual property definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values\nDESCRIPTION: Defines the required string enum values including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Modifying ApiClient for Dart VM Testing\nDESCRIPTION: Code changes needed in the api_client.dart file to run tests in the Dart VM instead of a browser.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/petstore/README.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nnew BrowserClient()\n```\n\nLANGUAGE: dart\nCODE:\n```\nnew Client()\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the JustSymbolEnum, which includes symbols for 'greater than or equal to' and 'dollar'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"JustSymbolEnum\"></a>\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;&#x3D;\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for SwaggerClient-php\nDESCRIPTION: Commands to install dependencies and run the unit tests for the PHP client using Composer and PHPUnit.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncomposer install\n./vendor/bin/phpunit\n```\n\n----------------------------------------\n\nTITLE: Configuring and Using FakeClassnameTags123Api in Java\nDESCRIPTION: This snippet demonstrates how to configure the API client, set up authentication, and make a call to the testClassname method. It includes error handling and displays the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Amount Model Structure in Swagger\nDESCRIPTION: Documents the properties of the Amount model class which includes a numeric value field and an associated Currency object reference.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Amount\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Value** | **double?** | some description  | \n**Currency** | [**Currency**](Currency.md) |  | \n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Package\nDESCRIPTION: Command to install an unpublished package from a local path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Installing Ruby Dependencies for Rails 5 Swagger Project\nDESCRIPTION: Installs all the required Ruby gems defined in the Gemfile for the Rails 5 Swagger project. Requires Ruby version 2.2.2 or higher to be installed first.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rails5/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbundle install\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Swagger Petstore API\nDESCRIPTION: API endpoint for updating an existing user's information. This operation can only be performed by authenticated users. It requires the username as a path parameter and a USER object in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER_API.md#2025-04-20_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n# **update_user**\n> update_user (username: STRING_32 ; body: USER )\n\t\n\nUpdated user\n\nThis can only be done by the logged in user.\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Class Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the FormatTest class. It includes the property names, their corresponding data types, and optional notes. The properties cover a wide range of data types including primitive types, complex types, and date/time representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining Property Schema in Swagger/OpenAPI Markdown\nDESCRIPTION: Documents the schema for a Capitalization class/model with properties using different naming conventions. All properties are optional strings with varying capitalization patterns including camelCase, PascalCase, snake_case and constants.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Tabular documentation of the ArrayTest model properties including array types. The model contains three properties: array_of_string (a simple string array), array_array_of_integer (a nested integer array), and array_array_of_model (a nested array of ReadOnlyFirst models).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_of_string** | **array[string]** |  | [optional] [default to null]\n**array_array_of_integer** | **array[array[integer]]** |  | [optional] [default to null]\n**array_array_of_model** | **array[array[ReadOnlyFirst]]** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Model Properties for Swagger in Objective-C\nDESCRIPTION: Specifies the property definitions for an Order model in Swagger. Includes properties for order ID, pet ID, quantity, shipping date, status, and completion flag. All properties are marked as optional and use NSNumber, NSDate, and NSString types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGOrder.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**_id** | **NSNumber*** |  | [optional] \n**petId** | **NSNumber*** |  | [optional] \n**quantity** | **NSNumber*** |  | [optional] \n**shipDate** | **NSDate*** |  | [optional] \n**status** | **NSString*** | Order Status | [optional] \n**complete** | **NSNumber*** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of the Boolean model. The table includes columns for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Boolean.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Java Client to Local Maven Repository\nDESCRIPTION: This command installs the Swagger Java client library to the local Maven repository. It requires Maven to be installed on the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: EnumClass Model Properties Table Definition in Markdown\nDESCRIPTION: Markdown table structure defining the properties of the EnumClass model with columns for Name, Type, Description and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Adding Navigation Links in Markdown\nDESCRIPTION: This snippet provides navigation links to other sections of the Swagger Codegen documentation. It includes links to the Model list, API list, and the main README file. These links are typically used at the bottom of model documentation files for easy navigation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/AnimalFarm.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: A markdown table defining the properties of a Cat model. It specifies a single optional boolean property 'declawed'. This format is commonly used in Swagger/OpenAPI documentation to describe data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **declawed** | **Boolean** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer String Types in Swagger API\nDESCRIPTION: This endpoint tests serialization of outer string types. It accepts an optional OUTER_STRING object as the request body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# **fake_outer_string_serialize**\n> fake_outer_string_serialize (body:  detachable OUTER_STRING ): detachable OUTER_STRING\n\t\n\n\n\nTest serialization of outer string types\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**OUTER_STRING**](OUTER_STRING.md)| Input string as post body | [optional] \n\n### Return type\n\n[**OUTER_STRING**](OuterString.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Property Definitions Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Capitalization model, including property names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **small_camel** | **string** |  | [optional] |\n| **capital_camel** | **string** |  | [optional] |\n| **small_snake** | **string** |  | [optional] |\n| **capital_snake** | **string** |  | [optional] |\n| **sca_eth_flow_points** | **string** |  | [optional] |\n| **att_name** | **string** | Name of the pet | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Lenses for Pet and ReadOnlyFirst Models in Haskell\nDESCRIPTION: Haskell lens definitions for accessing properties of Pet and ReadOnlyFirst models. The Pet lenses handle various properties including ID, category, name, photo URLs, tags and status, while the ReadOnlyFirst lenses provide access to read-only properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_56\n\nLANGUAGE: haskell\nCODE:\n```\n-- | <a>petId</a> Lens\npetIdL :: Lens_' Pet (Maybe Integer)\n\n-- | <a>petCategory</a> Lens\npetCategoryL :: Lens_' Pet (Maybe Category)\n\n-- | <a>petName</a> Lens\npetNameL :: Lens_' Pet (Text)\n\n-- | <a>petPhotoUrls</a> Lens\npetPhotoUrlsL :: Lens_' Pet ([Text])\n\n-- | <a>petTags</a> Lens\npetTagsL :: Lens_' Pet (Maybe [Tag])\n\n-- | <a>petStatus</a> Lens\npetStatusL :: Lens_' Pet (Maybe E'Status2)\n\n-- | <a>readOnlyFirstBar</a> Lens\nreadOnlyFirstBarL :: Lens_' ReadOnlyFirst (Maybe Text)\n\n-- | <a>readOnlyFirstBaz</a> Lens\nreadOnlyFirstBazL :: Lens_' ReadOnlyFirst (Maybe Text)\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Property Definitions in Java\nDESCRIPTION: Property definitions for the ArrayTest model class showing array field declarations with generic types. Includes string arrays, nested integer arrays, and nested model arrays, all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | **List<List<Long>>** |  |  [optional]\n**arrayArrayOfModel** | **List<List<ReadOnlyFirst>>** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the OuterComposite model including myNumber (BigDecimal), myString (String), and myBoolean (Boolean). All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# OuterComposite\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Client Class Definition in Petstore Ruby API Client\nDESCRIPTION: Documentation for the Client model class in the Petstore Ruby API client. It includes a single optional string property called 'client'. The property is documented using a markdown table format that indicates its name, type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enumeration Values in Swagger\nDESCRIPTION: A markdown table defining the possible values for the StatusEnum of an Order. It enumerates three possible states: PLACED, APPROVED, and DELIVERED with their corresponding string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition\nDESCRIPTION: Defines the possible integer values for the enumInteger property including 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* `_1` (value: `1`)\n* `_1_2` (value: `-1`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Class in Haskell\nDESCRIPTION: Defines the EnumTest data type with constructor, accessors for multiple enum fields of different types, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_26\n\nLANGUAGE: haskell\nCODE:\n```\n-- | EnumTest\ndata EnumTest\nEnumTest :: !(Maybe E'EnumString) -> !(Maybe E'EnumInteger) -> !(Maybe E'EnumNumber) -> !(Maybe OuterEnum) -> EnumTest\n\n-- | \"enum_string\"\n[enumTestEnumString] :: EnumTest -> !(Maybe E'EnumString)\n\n-- | \"enum_integer\"\n[enumTestEnumInteger] :: EnumTest -> !(Maybe E'EnumInteger)\n\n-- | \"enum_number\"\n[enumTestEnumNumber] :: EnumTest -> !(Maybe E'EnumNumber)\n\n-- | \"outerEnum\"\n[enumTestOuterEnum] :: EnumTest -> !(Maybe OuterEnum)\n\n-- | FromJSON EnumTest\n\n-- | ToJSON EnumTest\n\n-- | Construct a value of type <a>EnumTest</a> (by applying it's required\n--   fields, if any)\nmkEnumTest :: EnumTest\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of Model200Response model, including the name, type, description and optional status of each field. Contains two properties: Name (int32) and Class (string), both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Name** | **int32** |  | [optional] [default to null]\n**Class** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Initializing Swagger Client Configuration in Haskell\nDESCRIPTION: Initial configuration setup for the Swagger client specifying the host URL and user agent string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/example-app/infoLog.txt#2025-04-20_snippet_0\n\nLANGUAGE: haskell\nCODE:\n```\n{ configHost = \"http://0.0.0.0/v2\", configUserAgent = \"swagger-haskell-http-client/1.0.0\", ..}\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Class Properties in Markdown\nDESCRIPTION: Defines the properties of the HasOnlyReadOnly class using a Markdown table. The class has two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: FormatTest Properties Table Definition in Markdown\nDESCRIPTION: Markdown table defining the properties of the FormatTest class, including property names, data types, and optional status indicators. The table includes primitive types like Integer, Long, String as well as complex types like BigDecimal, LocalDate, and OffsetDateTime.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Importing ApiModule without Configuring Providers in Angular\nDESCRIPTION: TypeScript code to import and use the ApiModule from @swagger/angular2-typescript-petstore in an Angular module without configuring providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from '@swagger/angular2-typescript-petstore';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Describes the properties of the ArrayOfNumberOnly model using a markdown table. The model has one optional property 'array_number' of type list[float].\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_number** | **list[float]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Amount Data Model Properties in Kotlin\nDESCRIPTION: This snippet defines the properties of the Amount class in Kotlin. It includes a value property of type Double with a description, and a currency property that references the Currency class defined in another file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**value** | **kotlin.Double** | some description  | \n**currency** | [**Currency**](Currency.md) |  | \n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for EnumStringRequiredEnum including UPPER, LOWER, and EMPTY. These are required string-based enum values with different casing patterns and an empty string option.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\nEMPTY | &quot;&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ReadOnlyFirst model using a markdown table. It specifies two optional string properties: 'Bar' and 'Baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n| **Bar** | **string** |  | [optional] |\n| **Baz** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in Swagger/OpenAPI Schema\nDESCRIPTION: Class schema documentation that defines two map properties: a simple Map<String,String> and a nested Map<String,Map<String,String>>. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Ints Model Properties in Markdown\nDESCRIPTION: This code snippet represents a markdown table structure for defining the properties of the Ints model. It includes columns for Name, Type, Description, and Notes, although no specific properties are listed in this example.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Documenting ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of the ReadOnlyFirst model class. Includes property names, data types, descriptions and optional status notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ReadOnlyFirst\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**baz** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Specifying HTTP Headers for Pet Update API in Kotlin\nDESCRIPTION: Defines the HTTP request headers for the pet update API endpoint. It specifies the Content-Type as multipart/form-data and Accept as application/json.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n### HTTP request headers\n\n - **Content-Type**: multipart/form-data\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Defining User properties in Swagger Petstore API\nDESCRIPTION: Table defining the properties of the User model in the Swagger Petstore API. Each property is listed with its data type, description, and optionality status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**username** | **String** |  | [optional] \n**firstName** | **String** |  | [optional] \n**lastName** | **String** |  | [optional] \n**email** | **String** |  | [optional] \n**password** | **String** |  | [optional] \n**phone** | **String** |  | [optional] \n**userStatus** | **Number** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing the Go Petstore API Client\nDESCRIPTION: Shows how to import the generated Petstore package into a Go project. This is the basic installation step required to use the API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/README.md#2025-04-20_snippet_0\n\nLANGUAGE: golang\nCODE:\n```\nimport \"./petstore\"\n```\n\n----------------------------------------\n\nTITLE: Controlling Documentation and Test Generation in Swagger Codegen\nDESCRIPTION: Examples showing how to control the generation of tests and documentation for models and APIs using boolean system properties. These options can be combined with other selective generation options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generation-selective.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# generate only models (with tests and documentation)\njava -Dmodels {opts}\n\n# generate only models (with tests but no documentation)\njava -Dmodels -DmodelDocs=false {opts}\n\n# generate only User and Pet models (no tests and no documentation)\njava -Dmodels=User,Pet -DmodelTests=false {opts}\n\n# generate only apis (without tests)\njava -Dapis -DapiTests=false {opts}\n\n# generate only apis (modelTests option is ignored)\njava -Dapis -DmodelTests=false {opts}\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for User Not Found Error\nDESCRIPTION: JSON schema defining the response structure when a user cannot be found in the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_22\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"User not found\"\n}\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table in Markdown\nDESCRIPTION: Defines the properties table for the Order class showing field names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model with BigDecimal Property in Swagger/OpenAPI\nDESCRIPTION: This snippet defines a data model called NumberOnly with a single optional property 'justNumber' of type BigDecimal. This appears to be part of a Swagger/OpenAPI specification that documents the structure of this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization with FakeApi\nDESCRIPTION: Example demonstrating how to test serialization of outer string types using the FakeApi. Makes a POST request to /fake/outer/string endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Order Model Properties in Markdown\nDESCRIPTION: Structured documentation of the Order model properties in a markdown table format. It defines the properties such as id, pet_id, quantity, ship_date, status, and complete along with their types, descriptions, and optional parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Order\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**pet_id** | **int** |  | [optional] \n**quantity** | **int** |  | [optional] \n**ship_date** | **datetime** |  | [optional] \n**status** | **str** | Order Status | [optional] \n**complete** | **bool** |  | [optional] [default to False]\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the EnumArrays model, including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_symbol** | **str** |  | [optional] \n**array_enum** | **list[str]** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining CLASS_MODEL Properties in Markdown\nDESCRIPTION: Specifies the properties of the CLASS_MODEL class using a markdown table. It defines a single property 'var_class' of type STRING_32, which is optional and has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/CLASS_MODEL.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**var_class** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Class in Haskell\nDESCRIPTION: Defines the ArrayTest data type with constructor, accessors for array_of_string, array_array_of_integer, and array_array_of_model fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_20\n\nLANGUAGE: haskell\nCODE:\n```\n-- | ArrayTest\ndata ArrayTest\nArrayTest :: !(Maybe [Text]) -> !(Maybe [[Integer]]) -> !(Maybe [[ReadOnlyFirst]]) -> ArrayTest\n\n-- | \"array_of_string\"\n[arrayTestArrayOfString] :: ArrayTest -> !(Maybe [Text])\n\n-- | \"array_array_of_integer\"\n[arrayTestArrayArrayOfInteger] :: ArrayTest -> !(Maybe [[Integer]])\n\n-- | \"array_array_of_model\"\n[arrayTestArrayArrayOfModel] :: ArrayTest -> !(Maybe [[ReadOnlyFirst]])\n\n-- | FromJSON ArrayTest\n\n-- | ToJSON ArrayTest\n\n-- | Construct a value of type <a>ArrayTest</a> (by applying it's required\n--   fields, if any)\nmkArrayTest :: ArrayTest\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in C#\nDESCRIPTION: Defines a property ArrayArrayNumber as a nested list of nullable decimal values. This property is marked as optional and represents a two-dimensional array of numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | **List<List<decimal?>>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Request Parameters and Body in Haskell\nDESCRIPTION: Defines classes and functions for handling request parameters, including body parameters, optional parameters, and various parameter types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_5\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Designates the body parameter of a request\nclass HasBodyParam req param\nsetBodyParam :: forall contentType res accept. (HasBodyParam req param, Consumes req contentType, MimeRender contentType param) => SwaggerPetstoreRequest req contentType res accept -> param -> SwaggerPetstoreRequest req contentType res accept\n\n-- | Designates the optional parameters of a request\nclass HasOptionalParam req param\n\n-- | Apply an optional parameter to a request\napplyOptionalParam :: HasOptionalParam req param => SwaggerPetstoreRequest req contentType res accept -> param -> SwaggerPetstoreRequest req contentType res accept\n\n-- | infix operator / alias for <tt>addOptionalParam</tt>\n(-&-) :: HasOptionalParam req param => SwaggerPetstoreRequest req contentType res accept -> param -> SwaggerPetstoreRequest req contentType res accept\n\n-- | Request Params\ndata Params\nParams :: Query -> RequestHeaders -> ParamBody -> Params\n[paramsQuery] :: Params -> Query\n[paramsHeaders] :: Params -> RequestHeaders\n[paramsBody] :: Params -> ParamBody\n\n-- | <a>paramsQuery</a> Lens\nparamsQueryL :: Lens_' Params Query\n\n-- | <a>paramsHeaders</a> Lens\nparamsHeadersL :: Lens_' Params RequestHeaders\n\n-- | <a>paramsBody</a> Lens\nparamsBodyL :: Lens_' Params ParamBody\n\n-- | Request Body\ndata ParamBody\nParamBodyNone :: ParamBody\nParamBodyB :: ByteString -> ParamBody\nParamBodyBL :: ByteString -> ParamBody\nParamBodyFormUrlEncoded :: Form -> ParamBody\nParamBodyMultipartFormData :: [Part] -> ParamBody\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Definition\nDESCRIPTION: Defines the possible values for the InnerEnum type used in mapOfEnumString property. Contains two possible values: UPPER and lower, demonstrating mixed case enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Properties Table in Markdown\nDESCRIPTION: A markdown table that defines the properties of the ModelReturn class, including its single property '_return' of type Number which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties in Swagger Codegen Markdown\nDESCRIPTION: This Markdown table defines the properties of a model named 'Name'. It includes four properties: 'name', 'snakeCase', 'property', and '_123Number'. Each property is specified with its type and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays class, including their names, types, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the OuterEnum Model Package in Perl\nDESCRIPTION: Shows how to include the OuterEnum model class in a Perl script. This is necessary before using the OuterEnum model in any Swagger client implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::OuterEnum;\n```\n\n----------------------------------------\n\nTITLE: Integer Enumeration Definition in SwaggerPetstore\nDESCRIPTION: Defines an enumeration named 'Ints' in the SwaggerPetstore namespace containing integer values from 0 to 6. Each enum member is prefixed with an underscore in its name while maintaining the integer value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_0` (value: `0`)\n\n* `_1` (value: `1`)\n\n* `_2` (value: `2`)\n\n* `_3` (value: `3`)\n\n* `_4` (value: `4`)\n\n* `_5` (value: `5`)\n\n* `_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Java Client Remotely\nDESCRIPTION: Command to deploy the Swagger Java client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the ModelReturn model. Contains a single optional integer property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in FakeApi with Java\nDESCRIPTION: Example code for calling the testInlineAdditionalProperties method which tests inline additional properties. It demonstrates how to initialize and pass an Object parameter to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the ArrayEnumEnum, which includes 'fish' and 'crab'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Category model using a Markdown table. The table includes columns for the property name, data type, description, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ReadOnlyFirst model using a markdown table. The model has two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the SpecialModelName class using a markdown table. The class has a single optional property named specialPropertyName of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Empty Properties Table for AnimalFarm Model in Markdown\nDESCRIPTION: This snippet presents an empty markdown table structure for defining properties of the AnimalFarm model. The table includes columns for Name, Type, Description, and Notes, but contains no actual property definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: A markdown table that defines the ReadOnlyFirst model with two optional string properties. The table specifies the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the Name model, including field names, data types, descriptions and optional status. Contains fields for name, snakeCase, property and _123Number.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | \n**snakeCase** | **Number** |  | [optional] \n**property** | **String** |  | [optional] \n**_123Number** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: OAuth Configuration for Petstore API Authentication\nDESCRIPTION: Defines OAuth 2.0 authentication configuration including implicit flow, authorization URL, and scopes for read/write access to pet resources. Uses implicit flow with authorization URL at petstore.swagger.io.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n### petstore_auth\n\n- **Type**: OAuth\n- **Flow**: implicit\n- **Authorization URL**: http://petstore.swagger.io/api/oauth/dialog\n- **Scopes**: \n  - write:pets: modify pets in your account\n  - read:pets: read your pets\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Table Definition\nDESCRIPTION: Defines the main properties of the MapTest class including a nested map of strings and a map of enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining 200Response Model Properties in Swagger\nDESCRIPTION: Defines the properties of the 200Response model with their types and attributes. Contains two optional properties: 'name' of type Integer and 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Data Class Properties in Kotlin\nDESCRIPTION: This snippet shows the property definitions for a Tag data class in Kotlin. It defines two optional properties: 'id' as a Long type and 'name' as a String type. These properties are used to uniquely identify and label tags in the pet store API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **kotlin.Long** |  |  [optional]\n**name** | **kotlin.String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining SessionDelegate Override Closures in Swift\nDESCRIPTION: Demonstrates the available override closures for customizing NSURLSession delegate behavior in Alamofire's SessionDelegate.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_58\n\nLANGUAGE: swift\nCODE:\n```\n/// Overrides default behavior for NSURLSessionDelegate method `URLSession:didReceiveChallenge:completionHandler:`.\npublic var sessionDidReceiveChallenge: ((NSURLSession, NSURLAuthenticationChallenge) -> (NSURLSessionAuthChallengeDisposition, NSURLCredential?))?\\n\n/// Overrides default behavior for NSURLSessionDelegate method `URLSessionDidFinishEventsForBackgroundURLSession:`.\npublic var sessionDidFinishEventsForBackgroundURLSession: ((NSURLSession) -> Void)?\\n\n/// Overrides default behavior for NSURLSessionTaskDelegate method `URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:`.\npublic var taskWillPerformHTTPRedirection: ((NSURLSession, NSURLSessionTask, NSHTTPURLResponse, NSURLRequest) -> NSURLRequest?)?\\n\n/// Overrides default behavior for NSURLSessionDataDelegate method `URLSession:dataTask:willCacheResponse:completionHandler:`.\npublic var dataTaskWillCacheResponse: ((NSURLSession, NSURLSessionDataTask, NSCachedURLResponse) -> NSCachedURLResponse?)?\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documents the arrayNumber property which is an optional List of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List<BigDecimal>**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model using a markdown table. It defines a single optional property 'arrayNumber' as a List of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Data Structure in Swagger Markdown\nDESCRIPTION: Markdown table defining the ModelReturn model with a single optional integer property '_return'. This is used for Swagger/OpenAPI specification documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table for Numbers Model in Markdown\nDESCRIPTION: This snippet presents a markdown table structure for defining properties of the Numbers model class. The table includes columns for Name, Type, Description, and Notes, though no specific properties are listed in this example.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Model200Response class. Includes property names, data types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | [optional] \n**_class** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Additional Properties Class Structure in Markdown\nDESCRIPTION: Documents the structure of AdditionalPropertiesClass model with two optional map properties: a simple string map and a nested map of maps. Used for data model documentation in Swagger/OpenAPI specifications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Data Type in Haskell\nDESCRIPTION: Defines the ModelList data type with a single Maybe Text field and associated constructor and accessor functions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_32\n\nLANGUAGE: Haskell\nCODE:\n```\ndata ModelList\nModelList :: !(Maybe Text) -> ModelList\n\n-- | \"123-list\"\n[modelList123List] :: ModelList -> !(Maybe Text)\n\n-- | FromJSON ModelList\n\n-- | ToJSON ModelList\n\n-- | Construct a value of type <a>ModelList</a> (by applying it's required\n--   fields, if any)\nmkModelList :: ModelList\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Class Properties in Markdown\nDESCRIPTION: This snippet defines the structure for documenting properties of the AnimalFarm class. It uses a Markdown table to list the name, type, description, and notes for each property. However, the table is currently empty, indicating no properties are defined for this class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Implementing TestInlineAdditionalProperties Method in C#\nDESCRIPTION: Example of using the TestInlineAdditionalProperties method from the FakeApi. This endpoint demonstrates how to pass an object with inline additional properties in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestInlineAdditionalPropertiesExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = ;  // Object | request body\n\n            try\n            {\n                // test inline additionalProperties\n                apiInstance.TestInlineAdditionalProperties(param);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestInlineAdditionalProperties: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition\nDESCRIPTION: Defines the allowed integer values for the EnumIntegerEnum type including positive and negative integers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a markdown table. It includes three optional properties: myNumber, myString, and myBoolean, each referencing another model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**OuterNumber**](OuterNumber.md) |  | [optional] \n**myString** | [**OuterString**](OuterString.md) |  | [optional] \n**myBoolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining InlineResponse200 Properties in Ruby for Swagger-generated API Client\nDESCRIPTION: Documentation of the InlineResponse200 class properties including their types and descriptions. The class represents a pet with attributes such as tags, id, category, status, name, and photo URLs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/InlineResponse200.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::InlineResponse200\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**tags** | [**Array&lt;Tag&gt;**](Tag.md) |  | [optional] \n**id** | **Integer** |  | \n**category** | **Object** |  | [optional] \n**status** | **String** | pet status in the store | [optional] \n**name** | **String** |  | [optional] \n**photo_urls** | **Array&lt;String&gt;** |  | [optional] \n\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Values in Markdown\nDESCRIPTION: Specifies the enumeration values for ArrayEnumEnum. It includes two values: 'FISH' and 'CRAB', along with their string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"List<ArrayEnumEnum>\"></a>\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore SDK via NPM\nDESCRIPTION: Command to install the Swagger Petstore JavaScript client via NPM package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install swagger_petstore --save\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition\nDESCRIPTION: Defines the possible values for the enumStringRequired property including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* `UPPER` (value: `\"UPPER\"`)\n* `lower` (value: `\"lower\"`)\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the JustSymbolEnum enumeration with its possible values and their corresponding symbols.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;&#x3D;\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: User Object Structure Example in Haskell\nDESCRIPTION: Example of a User data structure showing fields like user ID, username, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/example-app/infoLog.txt#2025-04-20_snippet_3\n\nLANGUAGE: haskell\nCODE:\n```\nUser {userId = Just 21, userUsername = Just \"hsusername\", userFirstName = Nothing, userLastName = Nothing, userEmail = Nothing, userPassword = Nothing, userPhone = Nothing, userUserStatus = Just 0}\n```\n\n----------------------------------------\n\nTITLE: Building JAR Package\nDESCRIPTION: Command to generate the JAR file package\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/README.md#2025-04-20_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean package\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Properties Table in Markdown\nDESCRIPTION: A markdown table template for documenting model properties with columns for name, type, description and notes. Currently shows only the header structure without any property entries.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Class Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the FormatTest class. It includes property names, their corresponding data types, and indicates which properties are optional. The table covers various data types including primitive types, BigDecimal, LocalDate, OffsetDateTime, and UUID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Configuring Alamofire in Cartfile\nDESCRIPTION: Example Cartfile configuration for integrating Alamofire into a project using Carthage dependency manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_4\n\nLANGUAGE: ogdl\nCODE:\n```\ngithub \"Alamofire/Alamofire\" ~> 3.4\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Category model including field names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Number** |  | [optional] |\n| **name** | **String** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Format Test Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the FORMAT_TEST model including property names, data types, descriptions and configuration notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FORMAT_TEST.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **INTEGER_32** |  | [optional] [default to null]\n**int32** | **INTEGER_32** |  | [optional] [default to null]\n**int64** | **INTEGER_64** |  | [optional] [default to null]\n**number** | **REAL_32** |  | [default to null]\n**float** | **REAL_32** |  | [optional] [default to null]\n**double** | **REAL_64** |  | [optional] [default to null]\n**string** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**byte** | [**ARRAY [NATURAL_8]**](ARRAY [NATURAL_8].md) |  | [default to null]\n**binary** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**date** | [**DATE**](DATE.md) |  | [default to null]\n**date_time** | [**DATE_TIME**](DATE_TIME.md) |  | [optional] [default to null]\n**uuid** | [**UUID**](UUID.md) |  | [optional] [default to null]\n**password** | [**STRING_32**](STRING_32.md) |  | [default to null]\n```\n\n----------------------------------------\n\nTITLE: OuterComposite Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the OuterComposite model, including property names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional] |\n| **myString** | **String** |  |  [optional] |\n| **myBoolean** | **Boolean** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum in Markdown\nDESCRIPTION: This snippet defines the EnumStringRequiredEnum, which is identical to EnumStringEnum. It's used for required string enum fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"EnumStringRequiredEnum\"></a>\n## Enum: EnumStringRequiredEnum\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Markdown Schema Definition for SpecialModelName Model\nDESCRIPTION: Table defining the properties of the SpecialModelName class, including property name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.SpecialModelName\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Schema for Cat Model Properties\nDESCRIPTION: Table defining the properties for a Cat model in Swagger/OpenAPI format. The schema includes a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition in Markdown\nDESCRIPTION: Defines the properties of EnumTest model including their types, descriptions, and whether they are optional. The properties include various enum types with different data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Property Definition for ArrayOfArrayOfNumberOnly Class in Swagger\nDESCRIPTION: Defines the arrayArrayNumber property which accepts a two-dimensional array of numbers. This property is optional as noted in the documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**arrayArrayNumber** | **[[Number]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Currency Model Structure in Markdown\nDESCRIPTION: This snippet defines the structure of the Currency model using a Markdown table. The table is set up to list properties, their types, descriptions, and any additional notes. However, the table is empty, suggesting the Currency model currently has no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Currency\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore REST Assured to Local Maven Repository\nDESCRIPTION: This command installs the API client library to your local Maven repository. It requires Maven to be installed on your system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Loading the Cat Model Package in Perl\nDESCRIPTION: This snippet demonstrates how to load the Cat model package in a Perl application using the WWW::SwaggerClient library. This is the first step required before using the Cat model in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Cat;\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Promise Chain Usage in Swift\nDESCRIPTION: This snippet shows how to use PromiseKit to handle asynchronous operations like network requests and location updates. It demonstrates chaining promises, error handling, and cleanup operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_0\n\nLANGUAGE: swift\nCODE:\n```\nUIApplication.shared.isNetworkActivityIndicatorVisible = true\n\nfirstly {\n    when(URLSession.dataTask(with: url).asImage(), CLLocationManager.promise())\n}.then { image, location -> Void in\n    self.imageView.image = image\n    self.label.text = \"\\(location)\"\n}.always {\n    UIApplication.shared.isNetworkActivityIndicatorVisible = false\n}.catch { error in\n    self.show(UIAlertController(for: error), sender: self)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Cat model using a markdown table. It includes the property names, their types, descriptions, and additional notes such as optional status and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **ClassName** | **string** |  | \n| **Color** | **string** |  | [optional] [default to \"red\"]\n| **Declawed** | **bool?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: FormatTest Properties Table Definition in Markdown\nDESCRIPTION: Markdown table defining properties of the FormatTest class including data types, descriptions, and optional status flags. The properties cover various data types from primitive integers to complex types like UUID and datetime.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining a ParentAwareContainerInterface in PHP\nDESCRIPTION: Code showing a proposed interface for containers that can be aware of parent containers. This interface would enforce a setParentContainer method, though this approach was ultimately rejected in favor of a standard feature without a specific interface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/container-interop/container-interop/docs/Delegate-lookup-meta.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ninterface ParentAwareContainerInterface extends ReadableContainerInterface {\n    /**\n     * Sets the parent container associated to that container. This container will call\n     * the parent container to fetch dependencies.\n     *\n     * @param ContainerInterface $container\n     */\n    public function setParentContainer(ContainerInterface $container);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the FormatTest model using a markdown table. It specifies the name, type, description, and optional status of each property. The model includes various data types such as integers, floats, strings, dates, and UUIDs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **int** |  | [optional] \n**int32** | **int** |  | [optional] \n**int64** | **int** |  | [optional] \n**number** | **float** |  | \n**float** | **float** |  | [optional] \n**double** | **double** |  | [optional] \n**string** | **string** |  | [optional] \n**byte** | **string** |  | \n**binary** | **string** |  | [optional] \n**date** | [**\\DateTime**](Date.md) |  | \n**date_time** | [**\\DateTime**](\\DateTime.md) |  | [optional] \n**uuid** | [**UUID**](UUID.md) |  | [optional] \n**password** | **string** |  | \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition\nDESCRIPTION: Defines the allowed string values for the EnumStringRequiredEnum type including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the EnumArrays model, including their types and descriptions. The properties include justSymbol (with type JustSymbolEnum) and arrayEnum (a list of ArrayEnumEnum values).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of the AnimalFarm model. It includes columns for Name, Type, Description, and Notes, though no specific properties are listed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Category model using a markdown table. It includes the property names, data types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/CATEGORY.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **INTEGER_64** |  | [optional] [default to null]\n**name** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the enumeration for the arrayEnum property, specifying allowed values for the array elements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"[ArrayEnumEnum]\"></a>\n## Enum: [ArrayEnumEnum]\n\n\n* `fish` (value: `\"fish\"`)\n\n* `crab` (value: `\"crab\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Model200Response class, including name (Integer) and propertyClass (String) fields, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order in Markdown\nDESCRIPTION: Defines an enumeration for the possible status values of an order: PLACED, APPROVED, and DELIVERED.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Defines the property structure of the OuterComposite model with three optional fields: myNumber (BigDecimal), myString (String), and myBoolean (Boolean). Each property includes type information and optionality status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ModelList Property Documentation Table\nDESCRIPTION: Markdown table defining the _123List property for ModelList. The property is an optional String type value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelList class using a Markdown table. The class has a single optional property named '_123List' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Model Properties in Markdown\nDESCRIPTION: Documents the properties of the ApiResponse model including their types and optionality. The model has three optional properties: code (Number), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Number** |  | [optional] \n**type** | **String** |  | [optional] \n**message** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Sending DELETE Request to Remove Pet\nDESCRIPTION: Endpoint for deleting a pet from the store. Requires the pet ID as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\ndelete /pet/{petId}\n```\n\n----------------------------------------\n\nTITLE: Importing Petstore API Package\nDESCRIPTION: Code snippet showing how to import the Petstore API package after installation. This is required before using any API functionality in your Python application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/README.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport petstore_api\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Schema in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a ModelList model. Contains a single optional string property named '_123List'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining User model properties including field names, data types, descriptions and optional status flags. Used for API documentation in Swagger/OpenAPI.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Class with Properties in Swagger\nDESCRIPTION: Schema definition for the HasOnlyReadOnly class that includes two optional String properties: bar and foo. This follows the Swagger/OpenAPI specification format for defining model classes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays model, including their names, types, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ClassModel class using a Markdown table. It specifies the name, type, description, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **String** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the HasOnlyReadOnly model using a markdown table. The model has two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for the properties of an AnimalFarm model. It includes columns for the property name, type, description, and additional notes. However, the table is empty, indicating that no properties have been defined for this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Class Properties in Java\nDESCRIPTION: Specifies the properties of the ArrayTest class, including arrays of strings, nested arrays of integers, and nested arrays of custom models. Each property is annotated with optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class ArrayTest {\n    private List<String> arrayOfString;  // optional\n    private List<List<Long>> arrayArrayOfInteger;  // optional\n    private List<List<ReadOnlyFirst>> arrayArrayOfModel;  // optional\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Model Structure in Markdown\nDESCRIPTION: This snippet defines the structure of the OuterBoolean model using a markdown table. The table is empty, suggesting that the OuterBoolean model has no specific properties defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterBoolean\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Creating a User with SwagUserApi in Java\nDESCRIPTION: This snippet demonstrates how to create a new user using the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'body' => SwagUser.getExample()\n};\n\ntry {\n    // cross your fingers\n    api.createUser(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment for Base Path in Angular CLI\nDESCRIPTION: TypeScript code to configure the API base path in Angular CLI environment files.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing User API Endpoints for Swagger Petstore in Haskell\nDESCRIPTION: This snippet defines functions for user-related API operations in the Swagger Petstore, including creating users, logging in/out, and managing user data. Each function corresponds to a specific API endpoint and includes details about HTTP methods, request/response types, and content types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_42\n\nLANGUAGE: Haskell\nCODE:\n```\nmodule SwaggerPetstore.API.User\n\n-- | <pre>\n--   POST /user\n--   </pre>\n--   \n--   Create user\n--   \n--   This can only be done by the logged in user.\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\ncreateUser :: (Consumes CreateUser contentType, MimeRender contentType User) => ContentType contentType -> Accept accept -> User -> SwaggerPetstoreRequest CreateUser contentType res accept\ndata CreateUser\n\n-- ... (similar functions for other user operations)\n\n-- | <pre>\n--   PUT /user/{username}\n--   </pre>\n--   \n--   Updated user\n--   \n--   This can only be done by the logged in user.\n--   \n--   Note: Has <a>Produces</a> instances, but no response schema\nupdateUser :: (Consumes UpdateUser contentType, MimeRender contentType User) => ContentType contentType -> Accept accept -> Username -> User -> SwaggerPetstoreRequest UpdateUser contentType res accept\ndata UpdateUser\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single optional property 'justNumber' of type BigDecimal. This model likely represents a simple data structure used in API requests or responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the MapTest class including a nested map structure for strings and an enum mapping. The mapMapOfString property is an optional nested map of strings, while mapOfEnumString is an optional map of string to enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding Alamofire as Git Submodule\nDESCRIPTION: Command to add Alamofire as a Git submodule for manual framework integration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ git submodule add https://github.com/Alamofire/Alamofire.git\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of the List model. It includes a single property 'Var123List' of type string, which is optional and has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# List\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Var123List** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Properties in Swagger Markdown\nDESCRIPTION: Specifies the properties of a Category object using Swagger markdown syntax. Includes an optional Long id and an optional String name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the Model200Response class. It includes the property names, their types, descriptions, and notes on optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | [optional] \n**_class** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Class Properties in Swagger/OpenAPI Schema\nDESCRIPTION: Schema definition table specifying properties for an Animal class. Includes required className property of type String and optional color property of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterNumber Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties table for the OuterNumber model. However, the table is empty, suggesting the model has no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Properties Definition in Markdown\nDESCRIPTION: Markdown table defining the properties, types and validation rules for the ReadOnlyFirst model. Contains two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Model Properties\nDESCRIPTION: Documents the properties of the MixedPropertiesAndAdditionalPropertiesClass model, including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Uuid** | **Guid?** |  | [optional] \n**DateTime** | **DateTime?** |  | [optional] \n**Map** | [**Dictionary<string, Animal>**](Animal.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Animal Class in Haskell\nDESCRIPTION: Defines the Animal data type with constructor, accessors for className and color fields, JSON conversion instances, and a utility function for creating instances with the required className field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_15\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Animal\ndata Animal\nAnimal :: !(Text) -> !(Maybe Text) -> Animal\n\n-- | <i>Required</i> \"className\"\n[animalClassName] :: Animal -> !(Text)\n\n-- | \"color\"\n[animalColor] :: Animal -> !(Maybe Text)\n\n-- | FromJSON Animal\n\n-- | ToJSON Animal\n\n-- | Construct a value of type <a>Animal</a> (by applying it's required\n--   fields, if any)\nmkAnimal :: Text -> Animal\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the ArrayEnumEnum enumeration with its possible values and their corresponding string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: FakeOuterBooleanSerialize Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing serialization of outer boolean types. It accepts an optional OuterBoolean body parameter and returns an OuterBoolean object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\n# **FakeOuterBooleanSerialize**\n> OuterBoolean FakeOuterBooleanSerialize(ctx, optional)\n\n\nTest serialization of outer boolean types\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n **optional** | ***FakeApiFakeOuterBooleanSerializeOpts** | optional parameters | nil if no parameters\n\n### Optional Parameters\nOptional parameters are passed through a pointer to a FakeApiFakeOuterBooleanSerializeOpts struct\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**optional.Interface of OuterBoolean**](OuterBoolean.md)| Input boolean as post body | \n\n### Return type\n\n[**OuterBoolean**](OuterBoolean.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Enum Value Definitions with Special Characters\nDESCRIPTION: Defines three enum values with special character handling. Uses underscore prefixes and suffixes in enum names and includes special characters in the string values like hyphen and parentheses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Swagger Schema in Markdown\nDESCRIPTION: Defines a Swagger model schema for ModelReturn with a single optional integer property '_return'. Uses markdown table format to specify property details including name, type, description and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Dog Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a Dog model, including a single optional breed property of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Properties in SwaggerPetstore\nDESCRIPTION: This snippet defines the properties of the AdditionalPropertiesClass in SwaggerPetstore. It includes two optional properties: mapProperty (a map of strings to strings) and mapOfMapProperty (a nested map structure).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **{String: String}** |  | [optional] \n**mapOfMapProperty** | **{String: {String: String}}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values Definition - Markdown\nDESCRIPTION: Defines the possible values for the JustSymbolEnum including comparison operators and special characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \">=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Retrofit2 Client Dependency to Maven Project\nDESCRIPTION: XML dependency configuration to add the Swagger Petstore Retrofit2 client library to a Maven project. This should be added to the project's pom.xml file after the library has been installed or deployed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-retrofit2</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Properties Table for ReadOnlyFirst Class\nDESCRIPTION: Markdown table defining two optional string properties: 'bar' and 'baz' with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Swagger/OpenAPI\nDESCRIPTION: Defines the properties of a FormatTest model class with various data types including primitives, dates, and binary data. Properties are marked as optional or required, with appropriate type mappings for different programming languages.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of an AnimalFarm model. The table includes columns for the property name, data type, description, and additional notes. However, the table is currently empty, indicating that no properties have been defined for this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition\nDESCRIPTION: Defines the allowed decimal number values for the EnumNumberEnum type including positive and negative decimals.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Documenting ModelReturn Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of the ModelReturn class. Defines a single optional numeric property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Describes the properties of the ArrayTest model using a markdown table. It includes three properties: arrayOfString (an optional list of strings), arrayArrayOfInteger (an optional nested list of long integers), and arrayArrayOfModel (an optional nested list of ReadOnlyFirst objects).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Properties Table Definition in Markdown\nDESCRIPTION: A markdown table defining the properties of the ModelReturn class, including a single optional integer property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: SpecialModelName Property Definition Table\nDESCRIPTION: Markdown table defining the properties of the SpecialModelName model. Includes property name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ANIMAL Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ANIMAL model using a markdown table. It includes the property names, types, descriptions, and additional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ANIMAL.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | [**STRING_32**](STRING_32.md) |  | [default to null]\n**color** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Invalid Login Credentials\nDESCRIPTION: JSON schema defining the response structure when invalid login credentials are provided.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_27\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"Invalid username/password supplied\"\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in C#\nDESCRIPTION: Example code demonstrating how to test serialization of outer boolean types using the FakeApi. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterBooleanSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new bool?(); // bool? | Input boolean as post body (optional) \n\n            try\n            {\n                bool? result = apiInstance.FakeOuterBooleanSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterBooleanSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Go\nDESCRIPTION: Function definition for testing inline additional properties with context and interface parameter. Accepts a generic interface parameter and returns an empty response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: go\nCODE:\n```\nTestInlineAdditionalProperties(ctx context.Context, param interface{})\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Schema in Swagger Markdown\nDESCRIPTION: Markdown table defining the Animal model properties. Includes a required className property of type String and an optional color property of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient via CocoaPods from local path\nDESCRIPTION: This snippet shows how to install the SwaggerClient SDK using CocoaPods from a local path. It assumes the SDK is placed in a specific directory structure under the project folder.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\npod 'SwaggerClient', :path => 'Vendor/SwaggerClient'\n```\n\n----------------------------------------\n\nTITLE: Installing Petstore API client using Setuptools\nDESCRIPTION: Command to install the Petstore API Python client locally using Setuptools. This alternative installation method installs the package only for the current user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npython setup.py install --user\n```\n\n----------------------------------------\n\nTITLE: Networking with Alamofire and Promises in Swift\nDESCRIPTION: This code example shows how to use Alamofire with PromiseKit extensions to perform a POST request and handle the JSON response with promise chains.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_3\n\nLANGUAGE: swift\nCODE:\n```\n// pod 'PromiseKit/Alamofire'\n// https://github.com/PromiseKit/Alamofire\nAlamofire.request(\"http://example.com\", method: .post).responseJSON().then { json in\n    //…\n}.catch { error in\n    //…\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Properties in Swagger/OpenAPI Schema\nDESCRIPTION: Markdown table defining the properties of the ModelList class. Contains a single optional property '_123List' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Feign API Client to Local Maven Repository\nDESCRIPTION: This command installs the API client library to the local Maven repository. It requires Maven to be installed on the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/feign/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Fetch Client for Petstore API\nDESCRIPTION: Commands to build and compile the TypeScript sources to JavaScript. This process installs dependencies and runs the build script defined in the package.json file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-fetch/builds/with-npm-version/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order in Markdown\nDESCRIPTION: Specifies the possible values for the StatusEnum used in the Order object. The enum includes placed, approved, and delivered statuses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties Table in Markdown\nDESCRIPTION: Table structure defining the schema properties for the AnimalFarm model. The table includes columns for Name, Type, Description and Notes but contains no property rows.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining Python Test Dependencies in requirements.txt\nDESCRIPTION: Lists the Python packages required for testing, including their minimum versions. These dependencies are necessary for running test suites and measuring code coverage for Python code generated by Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/test-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nflask_testing==0.6.1\ncoverage>=4.0.3\nnose>=1.3.7\npluggy>=0.3.1\npy>=1.4.31\nrandomize>=0.13\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Tag model using a markdown table. It includes two properties: Id (a nullable long) and Name (a string), both of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Id** | **long?** |  | [optional] |\n| **Name** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Enum Constants in Java\nDESCRIPTION: This code snippet defines an enum named 'Numbers' with four constants representing the numbers 7, 8, 9, and 10. Each constant is initialized with a new BigDecimal object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\n\nNUMBER_8 (value: new BigDecimal(8))\n\nNUMBER_9 (value: new BigDecimal(9))\n\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Model Properties in Markdown\nDESCRIPTION: This snippet presents a Markdown table structure for documenting the properties of the OuterEnum model. The table is currently empty, suggesting that the OuterEnum model might not have any properties or they are yet to be defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# IO.Swagger.Model.OuterEnum\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum in Markdown\nDESCRIPTION: Specifies the enum values for JustSymbolEnum, which includes symbols for 'greater than or equal to' and 'dollar'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;&#x3D;\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: ClassModel Property Table\nDESCRIPTION: Markdown table defining the propertyClass field with its type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn with Integer return property in Markdown\nDESCRIPTION: Documentation for a ModelReturn class containing a single integer property named '_return' which is marked as optional. The property description contains various special characters which are properly escaped.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/java/okhttp-gson/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** | property description  *_/ ' \\\" \\=end -- \\r\\n \\n \\r |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Order Model Package in Dart\nDESCRIPTION: Shows how to import the Order model package from the swagger API library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Enum Values in Swagger Model\nDESCRIPTION: Defines an enumerated boolean type with explicit true and false values. The enum is defined with explicit value mappings to maintain type safety and consistency in generated code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger JSON definition\nDESCRIPTION: URL to access the Swagger definition in JSON format. This provides the machine-readable API specification that can be used by other tools.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Enum Constants in Java\nDESCRIPTION: This code defines enum constants for numeric values using BigDecimal objects. Each constant represents a specific number (7, 8, 9, or 10) implemented as a BigDecimal instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining String Enum Values in Markdown\nDESCRIPTION: Defines an enumeration with three constant values, each with a specific string representation. The enum includes values with special characters and formatting.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values in Markdown\nDESCRIPTION: Defines the values for the InnerEnum used in the mapOfEnumString property. It includes two enum values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Installing API Client with Maven\nDESCRIPTION: Maven command to install the API client library to your local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the AdditionalPropertiesClass model. It includes two optional properties: mapProperty (a map of strings to strings) and mapOfMapProperty (a map of strings to maps of strings to strings).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Animal model using a markdown table. It specifies the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | \n**Color** | **string** |  | [optional] [default to \"red\"]\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Defines the properties of the HasOnlyReadOnly model using a markdown table. It specifies two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Browserify Command for Browser Usage\nDESCRIPTION: Command to use Browserify to bundle the SwaggerPetstore library for browser use.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbrowserify main.js > bundle.js\n```\n\n----------------------------------------\n\nTITLE: Defining SwagApiResponse Properties in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and metadata for the SwagApiResponse model class. Contains three optional fields - code (Integer), r_type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**r_type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of ClassModel, including a single optional string property 'propertyClass'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger Documentation URL\nDESCRIPTION: URL endpoint to access the Swagger JSON documentation when the server is running.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/default/README.md#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Structure in Markdown\nDESCRIPTION: Documents the structure of a NumberOnly model class that has a single property 'justNumber' of type BigDecimal which is optional. Uses markdown table format to define the model properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single property 'JustNumber' of type float32. The property is optional and has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustNumber** | **float32** |  | [optional] [default to null]\n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Dog model class. Includes three properties: ClassName (required string), Color (optional string defaulting to 'red'), and Breed (optional string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | \n**Color** | **string** |  | [optional] [default to \"red\"]\n**Breed** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Package Locally\nDESCRIPTION: Command to install the API client library to local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Opening Xcode Workspace for Flutter iOS Project\nDESCRIPTION: Command to open the iOS portion of a Flutter project in Xcode workspace for asset customization\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopen ios/Runner.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Properties Table in Markdown\nDESCRIPTION: Table defining the properties of ModelReturn class showing the '_return' Integer field that is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining SwaggerPetstore Model Types in Haskell\nDESCRIPTION: This snippet defines newtype wrappers for various SwaggerPetstore model types, including AdditionalMetadata, ApiKey, Body, and more. These types represent different entities and parameters used in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_13\n\nLANGUAGE: Haskell\nCODE:\n```\nmodule SwaggerPetstore.Model\nnewtype AdditionalMetadata\nAdditionalMetadata :: Text -> AdditionalMetadata\n[unAdditionalMetadata] :: AdditionalMetadata -> Text\nnewtype ApiKey\nApiKey :: Text -> ApiKey\n[unApiKey] :: ApiKey -> Text\nnewtype Body\nBody :: [User] -> Body\n[unBody] :: Body -> [User]\nnewtype Byte\nByte :: ByteArray -> Byte\n[unByte] :: Byte -> ByteArray\nnewtype Callback\nCallback :: Text -> Callback\n[unCallback] :: Callback -> Text\nnewtype EnumFormString\nEnumFormString :: E'EnumFormString -> EnumFormString\n[unEnumFormString] :: EnumFormString -> E'EnumFormString\nnewtype EnumFormStringArray\nEnumFormStringArray :: [E'Inner2] -> EnumFormStringArray\n[unEnumFormStringArray] :: EnumFormStringArray -> [E'Inner2]\nnewtype EnumHeaderString\nEnumHeaderString :: E'EnumFormString -> EnumHeaderString\n[unEnumHeaderString] :: EnumHeaderString -> E'EnumFormString\nnewtype EnumHeaderStringArray\nEnumHeaderStringArray :: [E'Inner2] -> EnumHeaderStringArray\n[unEnumHeaderStringArray] :: EnumHeaderStringArray -> [E'Inner2]\nnewtype EnumQueryDouble\nEnumQueryDouble :: E'EnumNumber -> EnumQueryDouble\n[unEnumQueryDouble] :: EnumQueryDouble -> E'EnumNumber\nnewtype EnumQueryInteger\nEnumQueryInteger :: E'EnumQueryInteger -> EnumQueryInteger\n[unEnumQueryInteger] :: EnumQueryInteger -> E'EnumQueryInteger\nnewtype EnumQueryString\nEnumQueryString :: E'EnumFormString -> EnumQueryString\n[unEnumQueryString] :: EnumQueryString -> E'EnumFormString\nnewtype EnumQueryStringArray\nEnumQueryStringArray :: [E'Inner2] -> EnumQueryStringArray\n[unEnumQueryStringArray] :: EnumQueryStringArray -> [E'Inner2]\nnewtype File\nFile :: FilePath -> File\n[unFile] :: File -> FilePath\nnewtype Int32\nInt32 :: Int -> Int32\n[unInt32] :: Int32 -> Int\nnewtype Int64\nInt64 :: Integer -> Int64\n[unInt64] :: Int64 -> Integer\nnewtype Name2\nName2 :: Text -> Name2\n[unName2] :: Name2 -> Text\nnewtype Number\nNumber :: Double -> Number\n[unNumber] :: Number -> Double\nnewtype OrderId\nOrderId :: Integer -> OrderId\n[unOrderId] :: OrderId -> Integer\nnewtype OrderIdText\nOrderIdText :: Text -> OrderIdText\n[unOrderIdText] :: OrderIdText -> Text\nnewtype Param\nParam :: Text -> Param\n[unParam] :: Param -> Text\nnewtype Param2\nParam2 :: Text -> Param2\n[unParam2] :: Param2 -> Text\nnewtype ParamBinary\nParamBinary :: Binary -> ParamBinary\n[unParamBinary] :: ParamBinary -> Binary\nnewtype ParamDate\nParamDate :: Date -> ParamDate\n[unParamDate] :: ParamDate -> Date\nnewtype ParamDateTime\nParamDateTime :: DateTime -> ParamDateTime\n[unParamDateTime] :: ParamDateTime -> DateTime\nnewtype ParamDouble\nParamDouble :: Double -> ParamDouble\n[unParamDouble] :: ParamDouble -> Double\nnewtype ParamFloat\nParamFloat :: Float -> ParamFloat\n[unParamFloat] :: ParamFloat -> Float\nnewtype ParamInteger\nParamInteger :: Int -> ParamInteger\n[unParamInteger] :: ParamInteger -> Int\nnewtype ParamString\nParamString :: Text -> ParamString\n[unParamString] :: ParamString -> Text\nnewtype Password\nPassword :: Text -> Password\n[unPassword] :: Password -> Text\nnewtype PatternWithoutDelimiter\nPatternWithoutDelimiter :: Text -> PatternWithoutDelimiter\n[unPatternWithoutDelimiter] :: PatternWithoutDelimiter -> Text\nnewtype PetId\nPetId :: Integer -> PetId\n[unPetId] :: PetId -> Integer\nnewtype Status\nStatus :: [E'Status2] -> Status\n[unStatus] :: Status -> [E'Status2]\nnewtype StatusText\nStatusText :: Text -> StatusText\n[unStatusText] :: StatusText -> Text\nnewtype Tags\nTags :: [Text] -> Tags\n[unTags] :: Tags -> [Text]\nnewtype Username\nUsername :: Text -> Username\n[unUsername] :: Username -> Text\n\n-- | AdditionalPropertiesClass\ndata AdditionalPropertiesClass\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Model Structure in Markdown\nDESCRIPTION: This snippet defines the structure of the EnumClass model using a markdown table. The table is set up to list properties, but no properties are actually defined, suggesting this might be a placeholder or an empty enum class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.EnumClass\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of an Animal model using a Markdown table. It specifies two properties: className (required) and color (optional), both of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Documenting SpecialModelName Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the SpecialModelName model, showing a single optional long property named SpecialPropertyName.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**SpecialPropertyName** | **long?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Generating JAR for Swagger Petstore Client\nDESCRIPTION: Shell command to generate the JAR file for the Swagger Petstore OkHttp4 Gson client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nmvn clean package\n```\n\n----------------------------------------\n\nTITLE: Deploying to Remote Maven Repository\nDESCRIPTION: Command to deploy the API client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Typechecking, Building, and Running Unit Tests for Haskell HTTP Client in Bash\nDESCRIPTION: This series of commands cleans up previous build artifacts, runs Haddock documentation generation, executes unit tests, and builds the example app and integration tests.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/CONTRIBUTING.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n(rm -Rf ./.stack-work ./example-app/.stack-work ./tests-integration/.stack-work);\n(stack haddock && stack test);\n(cd ./example-app; stack build);\n(cd ./tests-integration; stack build --no-run-tests);\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Capitalization model using a markdown table. It includes various naming conventions and optional status for all properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Values for MapTest in Markdown\nDESCRIPTION: Specifies the enum values for the mapOfEnumString property. It includes two possible values: UPPER and lower.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: {String: String}\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in SwaggerPetstore\nDESCRIPTION: This snippet documents the properties of the Category model class in SwaggerPetstore. It defines two properties: id as a Number type and name as a String type, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**name** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a Category model. It includes two properties: 'id' of type Long and 'name' of type String. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing API Module in Angular (Without Providers)\nDESCRIPTION: TypeScript code to import and configure the API module in an Angular application without custom providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n    imports: [\n        ApiModule,\n        // make sure to import the HttpClientModule in the AppModule only,\n        // see https://github.com/angular/angular/issues/20575\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: User Logout - Java\nDESCRIPTION: Example code for logging out the current user session. Requires no parameters and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Enumeration in Markdown\nDESCRIPTION: Defines the ArrayEnumEnum enumeration using a markdown table. It includes the enumeration names and their corresponding values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: AdditionalPropertiesClass Structure Definition in Markdown\nDESCRIPTION: Defines the structure of AdditionalPropertiesClass with two optional map properties - mapProperty for simple String-to-String mapping and mapOfMapProperty for nested map structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ArrayEnum Values\nDESCRIPTION: Specifies the allowed values for elements in the arrayEnum property, including 'fish' and 'crab' options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* `fish` (value: `\"fish\"`)\n\n* `crab` (value: `\"crab\"`)\n```\n\n----------------------------------------\n\nTITLE: Documenting NumberOnly Model Properties in Markdown\nDESCRIPTION: API documentation table defining the properties of the NumberOnly class. Contains a single optional property 'justNumber' of type BigDecimal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing logoutUser Method in PHP\nDESCRIPTION: Example implementation of the logoutUser method in the UserApi class. This method logs out the currently logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/UserApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\UserApiInterface;\n\nclass UserApi implements UserApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of UserApiInterface#logoutUser\n     */\n    public function logoutUser()\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: MapTest Enum String Values\nDESCRIPTION: Defines the allowed enum values for the mapOfEnumString property, consisting of 'UPPER' and 'lower' string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `UPPER` (value: `\"UPPER\"`)\n* `lower` (value: `\"lower\"`)\n```\n\n----------------------------------------\n\nTITLE: Configuring API Module with Providers\nDESCRIPTION: Setting up the API module with custom configuration parameters\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule, Configuration, ConfigurationParameters } from '';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Package Manager for RxSwift Integration\nDESCRIPTION: This Package.swift file demonstrates how to integrate RxSwift into a project using Swift Package Manager, specifying version 3.0 as a dependency.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Swift\nCODE:\n```\nimport PackageDescription\n\nlet package = Package(\n    name: \"RxTestProject\",\n    targets: [],\n    dependencies: [\n        .Package(url: \"https://github.com/ReactiveX/RxSwift.git\", majorVersion: 3)\n    ]\n)\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Properties in Swagger/OpenAPI\nDESCRIPTION: Defines a model class property named '_return' of type Number. The property is optional and includes a description with special characters and escape sequences.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstoreEndRnNR.ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Number** | property description  *_/ ' \\\" =end -- \\r\\n \\n \\r | [optional]\n```\n\n----------------------------------------\n\nTITLE: Tag Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of a Tag model with an integer ID and string name. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**name** | **str** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Model200Response class using a Markdown table. It specifies two optional properties: 'name' of type Integer and 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: HasOnlyReadOnly Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, descriptions and optional status for the HasOnlyReadOnly class properties\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **bar** | **String** |  |  [optional] |\n| **foo** | **String** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown\nDESCRIPTION: Specifies the properties of a Tag model using a markdown table. The model has two optional properties: 'id' (64-bit integer) and 'name' (string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **i64** |  | [optional] [default to null]\n**name** | **String** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Browserify Bundle Generation\nDESCRIPTION: Command to generate a browser-compatible bundle using Browserify.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbrowserify main.js > bundle.js\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in C#\nDESCRIPTION: Example code demonstrating how to serialize outer boolean types using the FakeApi. Shows API call with optional OuterBoolean body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterBooleanSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new OuterBoolean(); // OuterBoolean | Input boolean as post body (optional) \n\n            try\n            {\n                OuterBoolean result = apiInstance.FakeOuterBooleanSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterBooleanSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in C#\nDESCRIPTION: Describes the ArrayArrayNumber property of the ArrayOfArrayOfNumberOnly model, which is a nested list of decimal values. This property is optional as indicated by the [optional] note.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | **List<List<decimal?>>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Generated Module with ES6 Module Syntax\nDESCRIPTION: Examples of importing the generated TypeScript/JavaScript module using ES6 module syntax. Shows two methods: importing the entire module as a namespace or importing specific operations by name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/typescript-aurelia/README.md#2025-04-20_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport * as localName from 'npmName';\nimport {operationId} from 'npmName';\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore REST Template API Client with Maven\nDESCRIPTION: Command to install the API client library to your local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Java Client with Maven\nDESCRIPTION: Commands to install the Swagger Java client library to a local or remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Defining Swagger Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the SpecialModelName model class. Contains a single optional property of type long named SpecialPropertyName.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**SpecialPropertyName** | **long?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values\nDESCRIPTION: Defines the possible string enum values including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Package\nDESCRIPTION: Command to install the package from a local path (not recommended for production use).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-fetch/builds/es6-target/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for the enumNumber property, which includes the floating-point values 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"EnumNumberEnum\"></a>\n## Enum: EnumNumberEnum\n\n\n* `_11` (value: `1.1`)\n\n* `_12` (value: `-1.2`)\n```\n\n----------------------------------------\n\nTITLE: Order Status Enumeration in Markdown\nDESCRIPTION: A markdown section that defines the possible enumeration values for the Order status property including placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: This snippet defines the properties of a Cat model in a Swagger/OpenAPI specification using a markdown table format. It specifies a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Listing\nDESCRIPTION: URL to view the Swagger JSON listing after running the server. Note that the host may need to be adjusted if configured differently.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-datelib-j8/README.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nhttp://localhost:80/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Describes the properties of the OuterComposite model using a markdown table. It includes the property names, their types, and optional notes. The properties are MyNumber (decimal), MyString (string), and MyBoolean (bool), all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **MyNumber** | **decimal?** |  | [optional] |\n| **MyString** | **string** |  | [optional] |\n| **MyBoolean** | **bool?** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Invalid ID Error\nDESCRIPTION: JSON schema defining the response structure when an invalid ID is supplied to an API endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"Invalid ID supplied\"\n}\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the ReadOnlyFirst model. Contains two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **bar** | **string** |  | [optional] [default to null] |\n| **baz** | **string** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the ArrayEnumEnum enumeration with its possible values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining OuterNumber Class Properties in Markdown\nDESCRIPTION: Defines a table structure for the properties of the OuterNumber class. However, the table is empty, indicating that this class currently has no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of the Boolean model. It includes columns for Name, Type, Description, and Notes. However, no actual properties are listed in this example.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Boolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Boolean\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Navigation Links for Swagger Documentation\nDESCRIPTION: Navigation links to related documentation sections including model list, API endpoints, and the main README. These links help users navigate through the Swagger documentation structure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/USER.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ModelList class using a Markdown table. It specifies a single optional property '_123List' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building and Compiling the Swagger-Generated Pistache Server in Bash\nDESCRIPTION: Commands to build the C++ server by creating a build directory, running cmake, and compiling the project with make. This is the standard build process for C++ projects using CMake.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/pistache-server/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncd build\ncmake ..\nmake\n```\n\n----------------------------------------\n\nTITLE: Loading ModelReturn Perl Module\nDESCRIPTION: Demonstrates how to load the ModelReturn model package in a Perl application. This is required before using the model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/deep_module_test/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse Something::Deep::Object::ModelReturn;\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and constraints for a Category model. Includes two optional properties: id (Long) and name (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Table in Markdown\nDESCRIPTION: A markdown table defining the values of the InnerEnum enumeration used by the mapOfEnumString property, specifying the name and value of each enum constant.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Order Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Order model, including their types, descriptions, and optional notes. This documents the structure of an Order object in the Swagger Petstore API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**petId** | **Number** |  | [optional] \n**quantity** | **Number** |  | [optional] \n**shipDate** | **Date** |  | [optional] \n**status** | **String** | Order Status | [optional] \n**complete** | **Boolean** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Swagger Codegen Jar in Bash\nDESCRIPTION: This command rebuilds the Swagger Codegen jar file by navigating to the project root and running Maven package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n(cd ../../../..; mvn package);\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ModelReturn class using a markdown table. It specifies a single property '_return' of type Number, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of the AnimalFarm model. It includes columns for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown Table\nDESCRIPTION: Documents the properties of the ReadOnlyFirst data model using a markdown table. The model contains two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ModelClient Class Properties Table in Markdown\nDESCRIPTION: A markdown table that documents the properties of the ModelClient class, showing the name, type, description, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/ModelClient.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**__Client** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Model Properties Table\nDESCRIPTION: Markdown table documenting the properties, types, and descriptions for the EnumArrays model. Includes two fields: just_symbol (string) and array_enum (array of strings), both optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_symbol** | **str** |  | [optional] \n**array_enum** | **list[str]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization in C# Using FakeApi\nDESCRIPTION: Example showing how to test serialization of outer number types using the FakeApi. It creates an instance of FakeApi, calls the FakeOuterNumberSerialize method with an optional decimal body parameter, and handles possible exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterNumberSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new decimal?(); // decimal? | Input number as post body (optional) \n\n            try\n            {\n                decimal? result = apiInstance.FakeOuterNumberSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterNumberSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username with SwagUserApi in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a user's information by their username using the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'username' => 'username_example'\n};\n\ntry {\n    // cross your fingers\n    SwagUser result = api.getUserByName(params);\n    System.debug(result);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Class Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the schema properties for a ClassModel, containing a single optional String property named 'propertyClass'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining User API Service in YAML\nDESCRIPTION: YAML configuration for defining the User API service in Symfony bundle. It sets up the service class and tags it for Swagger Server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# src/Acme/MyBundle/Resources/services.yml\nservices:\n    # ...\n    acme.my_bundle.api.user:\n        class: Acme\\MyBundle\\Api\\UserApi\n        tags:\n            - { name: \"swagger_server.api\", api: \"user\" }\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Objective-C\nDESCRIPTION: An Objective-C method for creating multiple users at once by providing an array of SWGUser objects. The method sends a POST request to the /user/createWithArray endpoint and handles the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) createUsersWithArrayInputWithBody: (NSArray<SWGUser>*) body\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\nLANGUAGE: objc\nCODE:\n```\nNSArray<SWGUser>* body = @[[[SWGUser alloc] init]]; // List of user object (optional)\n\nSWGUserApi*apiInstance = [[SWGUserApi alloc] init];\n\n// Creates list of users with given input array\n[apiInstance createUsersWithArrayInputWithBody:body\n          completionHandler: ^(NSError* error) {\n                        if (error) {\n                            NSLog(@\"Error calling SWGUserApi->createUsersWithArrayInput: %@\", error);\n                        }\n                    }];\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the HasOnlyReadOnly class using a Markdown table. The class has two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Dog Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types and validation rules for the Dog model. Includes className (required String), color (optional String), and breed (optional String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays model, including their names, types, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | **String** |  | [optional] \n**arrayEnum** | **[String]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass model using a markdown table. It specifies the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Uuid** | **Guid?** |  | [optional] |\n| **DateTime** | **DateTime?** |  | [optional] |\n| **Map** | [**Dictionary&lt;string, Animal&gt;**](Animal.md) |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger Store API Package in Dart\nDESCRIPTION: This snippet shows how to import the Swagger-generated API package in a Dart application. It's a prerequisite for using the Store API functions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the HasOnlyReadOnly model using a markdown table. It specifies two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **string** |  | [optional] \n**foo** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: NumberOnly Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the NumberOnly model. Contains a single property 'justNumber' of type BigDecimal that is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger API Model Package in Dart\nDESCRIPTION: This code snippet demonstrates how to import the Swagger API model package in a Dart application. It's necessary to include this import statement to use the ApiResponse model and other related API functionalities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documents the properties of the ArrayOfNumberOnly model class. Contains a single optional property 'arrayNumber' that stores a List of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List<BigDecimal>**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This table documents the properties of the FormatTest model, showing the property names, their corresponding C# data types, descriptions (empty in this case), and optionality notes. The table includes various numeric types, strings, binary data, dates, UUIDs, and password fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Integer** | **int?** |  | [optional] \n**Int32** | **int?** |  | [optional] \n**Int64** | **long?** |  | [optional] \n**Number** | **decimal?** |  | \n**Float** | **float?** |  | [optional] \n**Double** | **double?** |  | [optional] \n**String** | **string** |  | [optional] \n**Byte** | **byte[]** |  | \n**Binary** | **byte[]** |  | [optional] \n**Date** | **DateTime?** |  | \n**DateTime** | **DateTime?** |  | [optional] \n**Uuid** | **Guid?** |  | [optional] \n**Password** | **string** |  | \n```\n\n----------------------------------------\n\nTITLE: Adding the Petstore Client to a Rust Project\nDESCRIPTION: Instructions for including the Petstore client library in a Rust project. The code snippet shows the import statement needed to use the library after placing it in the project folder.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/README.md#2025-04-20_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\n    \"./petstore_client\"\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values Definition\nDESCRIPTION: Markdown table defining the allowed values for ArrayEnumEnum, listing sea creatures as enum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nFISH | &quot;fish&quot;\nCRAB | &quot;crab&quot;\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags API Call in Java\nDESCRIPTION: Example code demonstrating how to make a PATCH request to test special tags endpoint. The code shows initialization of the API client, making the request with a Client model object, and handling the response or potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using the fake_outer_number_serialize endpoint in Perl\nDESCRIPTION: This example shows how to call the fake_outer_number_serialize endpoint that tests serialization of outer number types. It initializes an OuterNumber object and processes the API response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $body = WWW::SwaggerClient::Object::OuterNumber->new(); # OuterNumber | Input number as post body\n\neval { \n    my $result = $api_instance->fake_outer_number_serialize(body => $body);\n    print Dumper($result);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->fake_outer_number_serialize: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ClassModel class using a Markdown table. It specifies a single optional property 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Category model, including their names, data types, and optional status. The model has two properties: 'id' of type Long and 'name' of type String, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Order Statuses in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values representing different order statuses. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Documenting Animal Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of an Animal model. Specifies className as a required String property and color as an optional String property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the AdditionalPropertiesClass model using a markdown table. It includes two properties: mapProperty and mapOfMapProperty, both of which are optional and represent different types of map structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values Definition in Markdown\nDESCRIPTION: Defines the allowed values for the ArrayEnumEnum type, including marine creatures fish and crab.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Enum Arrays Model Structure in Swagger Documentation\nDESCRIPTION: Documents the properties of the EnumArrays model class, which contains two fields: JustSymbol as a string type and ArrayEnum as a list of strings. The documentation is formatted as a markdown table showing property names, types, and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.EnumArrays\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustSymbol** | **string** |  | [optional] \n**ArrayEnum** | **List<string>** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing Class Name in Snake Case with Python\nDESCRIPTION: This snippet demonstrates how to use the test_classname method of the FakeClassnameTags123Api class. It includes configuration for API key authorization and error handling. The method sends a PATCH request to '/fake_classname_test' with a Client object as the body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: api_key_query\nconfiguration = petstore_api.Configuration()\nconfiguration.api_key['api_key_query'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['api_key_query'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = petstore_api.FakeClassnameTags123Api(petstore_api.ApiClient(configuration))\nbody = petstore_api.Client() # Client | client model\n\ntry:\n    # To test class name in snake case\n    api_response = api_instance.test_classname(body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeClassnameTags123Api->test_classname: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Tag Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the Tag model properties with their types, descriptions, and whether they are required or optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Local npm Development Setup\nDESCRIPTION: Commands for setting up local development environment using npm link.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm link\nnpm link /path/to/<JAVASCRIPT_CLIENT_DIR>\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Properties Table in Markdown\nDESCRIPTION: Markdown table defining two optional string properties 'bar' and 'foo' for the HasOnlyReadOnly class. The table format follows Swagger documentation conventions with name, type, description and notes columns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Schema for AnimalFarm Model Properties\nDESCRIPTION: Property definition table for AnimalFarm model showing column headers for Name, Type, Description and Notes, though no actual properties are defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Table in Markdown\nDESCRIPTION: A markdown table defining the enumeration values for the InnerEnum type that's used in the mapOfEnumString property. The table is currently empty, suggesting the enum values are not defined or are defined elsewhere.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"Map<String, InnerEnum>\"></a>\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\n```\n\n----------------------------------------\n\nTITLE: Loading the Tag Model Package in Dart\nDESCRIPTION: Demonstrates how to import the Swagger API package in Dart to use the Tag model. This is the required import statement to access the Tag model and other API functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for API Base Path\nDESCRIPTION: Example of environment-specific configuration file with API base path setting.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Properties in Swagger Model Documentation\nDESCRIPTION: Documentation for the ArrayTest model class properties including array types. The model has three properties: a simple string array, a nested array of integers, and a nested array of ReadOnlyFirst model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ArrayTest\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **List&lt;string&gt;** |  | [optional] \n**ArrayArrayOfInteger** | **List&lt;List&lt;long?&gt;&gt;** |  | [optional] \n**ArrayArrayOfModel** | **List&lt;List&lt;ReadOnlyFirst&gt;&gt;** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Loading WWW::SwaggerClient::AnotherFakeApi Module in Perl\nDESCRIPTION: This snippet demonstrates how to load the AnotherFakeApi module in a Perl script. It's typically the first step when working with this API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/AnotherfakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::AnotherFakeApi;\n```\n\n----------------------------------------\n\nTITLE: Defining Status Enum for Order in Markdown for SwaggerPetstore API\nDESCRIPTION: This snippet defines the possible enumeration values for the status field of the Order model. It includes 'placed', 'approved', and 'delivered' as the available options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\n\n\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\")`\n```\n\n----------------------------------------\n\nTITLE: Browserify Bundle Generation\nDESCRIPTION: Command to generate a browser-compatible bundle using Browserify.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/README.md#2025-04-20_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbrowserify main.js > bundle.js\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Client to Remote Maven Repository\nDESCRIPTION: Shell command to deploy the Swagger Petstore OkHttp4 Gson client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/README.md#2025-04-20_snippet_3\n\nLANGUAGE: Shell\nCODE:\n```\nmvn clean deploy\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore REST Assured Dependency to Maven Project\nDESCRIPTION: This XML snippet adds the Swagger Petstore REST Assured client library as a dependency in a Maven project's pom.xml file. It specifies the groupId, artifactId, version, and scope of the dependency.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-rest-assured</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Category model including id and name. Both properties are marked as optional. The id is of type Long, while the name is a String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Number Constants as Enum with BigDecimal in Java\nDESCRIPTION: This code snippet defines an enum called 'Numbers' with four constants representing the numbers 7, 8, 9, and 10 as BigDecimal objects. Each constant is initialized with a new BigDecimal instance of the corresponding value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\n\nNUMBER_8 (value: new BigDecimal(8))\n\nNUMBER_9 (value: new BigDecimal(9))\n\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Publishing an Angular API Module\nDESCRIPTION: Command for publishing the built Angular API module to npm repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Number Constants in Java\nDESCRIPTION: Defines a set of enumerated BigDecimal constants with values 7 through 10. These constants are likely used in a context where precise decimal representation is required, such as financial calculations or other numeric operations that require exact precision.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enum Values\nDESCRIPTION: Defines an enumeration called OuterEnum with three possible status values for an order: placed, approved, and delivered. Each enum value is represented as a string constant.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayOfArrayOfNumberOnly model using a markdown table. It specifies the property name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Starting the Swagger-Sinatra Server with Rack\nDESCRIPTION: Command to start the Sinatra application using Rack. This runs the server on port 4567, which will expose the Swagger-documented API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/sinatra/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nrackup -p 4567 config.ru\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Category model. Includes two fields: an optional integer ID and an optional string name, both defaulting to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **integer** |  | [optional] [default to null]\n**name** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Order Not Found Error\nDESCRIPTION: JSON schema defining the response structure when an order cannot be found in the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"Order not found\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum in Markdown\nDESCRIPTION: This snippet defines an integer enum named 'Ints' with seven values ranging from 0 to 6. Each value is represented by a named constant prefixed with 'NUMBER_' followed by its numeric value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties for Swagger Petstore API\nDESCRIPTION: This code snippet defines the properties of the Capitalization model for the Swagger Petstore API. It includes various naming conventions for attributes, demonstrating different capitalization styles commonly used in API development.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  | [optional] \n**capitalCamel** | **String** |  | [optional] \n**smallSnake** | **String** |  | [optional] \n**capitalSnake** | **String** |  | [optional] \n**sCAETHFlowPoints** | **String** |  | [optional] \n**ATT_NAME** | **String** | Name of the pet  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the HasOnlyReadOnly model including their names, types, and optional attributes. The model has two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the Client model. It specifies a single property 'client' of type string, which is optional and has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **client** | **string** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Client via Github in Dart\nDESCRIPTION: Configuration to include in the pubspec.yaml file to install the Swagger API client from a Github repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/README.md#2025-04-20_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: swagger\nversion: 1.0.0\ndescription: Swagger API client\ndependencies:\n  swagger:\n    git: https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n      version: 'any'\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Definition\nDESCRIPTION: Defines the possible values for the InnerEnum type used in mapOfEnumString property. Contains two possible values: UPPER and lower.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Server on Linux/OS X\nDESCRIPTION: Shell command to build the Swagger server on Unix-based systems using the build script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2-interface-only/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsh build.sh\n```\n\n----------------------------------------\n\nTITLE: Importing ObjectReturn Module in Perl\nDESCRIPTION: Shows how to import the WWW::SwaggerClient::Object::ObjectReturn module into a Perl script. This module provides access to the ObjectReturn class functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ObjectReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ObjectReturn;\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the MapTest class, including property names, types, descriptions, and optional status indicators.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values\nDESCRIPTION: Defines the possible floating-point number enum values including positive and negative decimals.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ApiResponse model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Code** | **int?** |  | [optional] |\n| **Type** | **string** |  | [optional] |\n| **Message** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of ModelReturn class, specifying a single optional integer property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the HasOnlyReadOnly model using a markdown table. It specifies two optional string properties: Bar and Foo.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ---- | ---- | ----------- | ----- |\n| **Bar** | **string** |  | [optional] |\n| **Foo** | **string** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: ModelClient Class Structure Documentation in Markdown\nDESCRIPTION: Documents the ModelClient class structure with a single optional string property __Client. Includes property definition and navigation links to other documentation sections.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/ModelClient.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ModelClient\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**__Client** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumStringRequiredEnum, which are identical to EnumStringEnum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing Petstore Go API Client\nDESCRIPTION: Instructions for installing the Petstore Go API client package in a project. The package should be placed under the project folder and imported.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/README.md#2025-04-20_snippet_0\n\nLANGUAGE: golang\nCODE:\n```\nimport \"./petstore\"\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP POST Endpoint for Creating Users with Array\nDESCRIPTION: HTTP endpoint definition for creating multiple users at once using an array of user objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_18\n\nLANGUAGE: http\nCODE:\n```\npost /user/createWithArray\n```\n\n----------------------------------------\n\nTITLE: Custom ServerTrustPolicyManager Subclass Implementation\nDESCRIPTION: Example of subclassing ServerTrustPolicyManager to implement custom domain matching behavior.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_63\n\nLANGUAGE: swift\nCODE:\n```\nclass CustomServerTrustPolicyManager: ServerTrustPolicyManager {\n    override func serverTrustPolicyForHost(host: String) -> ServerTrustPolicy? {\n        var policy: ServerTrustPolicy?\n\n        // Implement your custom domain matching behavior...\n\n        return policy\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the ReadOnlyFirst model class. Shows two optional string properties: Bar and Baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Bar** | **string** |  | [optional] \n**Baz** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Schema in Swagger\nDESCRIPTION: Markdown table defining the properties of a Dog model. Includes a single optional property 'breed' of type string with navigation links to documentation sections.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for ADDITIONAL_PROPERTIES_CLASS in Markdown\nDESCRIPTION: This snippet defines the properties of the ADDITIONAL_PROPERTIES_CLASS using a markdown table. It specifies the name, type, description, and notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/ADDITIONAL_PROPERTIES_CLASS.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**map_property** | [**STRING_TABLE[STRING_32]**](STRING_32.md) |  | [optional] [default to null]\n**map_of_map_property** | [**STRING_TABLE[STRING_TABLE[STRING_32]]**](STRING_TABLE.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status in Markdown\nDESCRIPTION: This snippet describes the API endpoint for finding pets by status. It specifies the HTTP method, parameters, return type, and authorization requirements.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/PET_API.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# **find_pets_by_status**\n> find_pets_by_status (status: LIST [STRING_32] ): detachable LIST [PET]\n\t\n\nFinds Pets by status\n\nMultiple status values can be provided with comma separated strings\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **status** | [**LIST [STRING_32]**](STRING_32.md)| Status values that need to be considered for filter | \n\n### Return type\n\n[**LIST [PET]**](Pet.md)\n\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Importing the Order Model in Dart\nDESCRIPTION: Shows how to import the Order model package in a Dart application. This is the required import statement to access the Order model and related functionality from the Swagger API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet outlines the structure for defining properties of the AnimalFarm model. It includes columns for Name, Type, Description, and Notes, but currently contains no actual property definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Importing Amount Model in Dart\nDESCRIPTION: This snippet shows how to import the package containing the Amount model in a Dart project. It's typically used at the beginning of a Dart file that needs to use the Amount model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Number Constants\nDESCRIPTION: Defines a set of numeric constants using BigDecimal values. The enumeration includes numbers from 7 to 10, each initialized as a new BigDecimal instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 = new BigDecimal(7)\nNUMBER_8 = new BigDecimal(8)\nNUMBER_9 = new BigDecimal(9)\nNUMBER_10 = new BigDecimal(10)\n```\n\n----------------------------------------\n\nTITLE: Documenting SpecialModelName Class Properties\nDESCRIPTION: Markdown table defining properties of the SpecialModelName class, including a specialPropertyName field of type Long that is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: HasOnlyReadOnly Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the HasOnlyReadOnly model class, including property names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting up CPP REST SDK Dependencies\nDESCRIPTION: Configures paths and verification for the C++ REST SDK dependency. Includes error checking for missing SDK root path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/cpprest/CMakeLists.txt#2025-04-20_snippet_2\n\nLANGUAGE: cmake\nCODE:\n```\nset(CPPREST_INCLUDE_DIR ${CPPREST_ROOT}/include)\nset(CPPREST_LIBRARY_DIR ${CPPREST_ROOT}/lib)\n\nif( NOT DEFINED CPPREST_ROOT )\n    message( FATAL_ERROR \"Failed to find cpprest SDK (or missing components). Double check that \\\"CPPREST_ROOT\\\" is properly set\")\nendif( NOT DEFINED CPPREST_ROOT )\n```\n\n----------------------------------------\n\nTITLE: Initializing CMake Project for Swagger C++ Client\nDESCRIPTION: Sets up basic CMake project configuration including minimum version requirement and project name definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/cpprest/CMakeLists.txt#2025-04-20_snippet_0\n\nLANGUAGE: cmake\nCODE:\n```\ncmake_minimum_required (VERSION 2.8)\n\n#PROJECT's NAME\nproject(CppRestSwaggerClient)\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Structure\nDESCRIPTION: Documents the structure of the ArrayOfNumberOnly model class. Contains a single optional property 'arrayNumber' that accepts an array of numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | **[Number]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining BigDecimal Enum Constants in Java\nDESCRIPTION: Defines enumerated numeric constants using Java BigDecimal for precise decimal number representation. Contains values from 7 to 10 implemented as enum members.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nNUMBER_7 = new BigDecimal(7)\nNUMBER_8 = new BigDecimal(8)\nNUMBER_9 = new BigDecimal(9)\nNUMBER_10 = new BigDecimal(10)\n```\n\n----------------------------------------\n\nTITLE: Order Model Properties Table in Markdown\nDESCRIPTION: A markdown table describing the properties of the Order model, including property names, data types, descriptions, and additional notes such as optional flags and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**PetId** | **long?** |  | [optional] \n**Quantity** | **int?** |  | [optional] \n**ShipDate** | **DateTime?** |  | [optional] \n**Status** | **string** | Order Status | [optional] \n**Complete** | **bool?** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Handling GET Request with Data Response in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to make a GET request using Alamofire and handle the response as Data. It includes validation and prints the request, response, and result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_12\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n         .validate()\n         .responseData { response in\n             print(response.request)\n             print(response.response)\n             print(response.result)\n          }\n```\n\n----------------------------------------\n\nTITLE: Importing Currency Model in Dart\nDESCRIPTION: Shows how to import the Currency model class from the swagger package into a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Schema definition table for Dog model showing the breed property specification. The breed field is defined as an optional string property with no additional constraints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger Tag Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Swagger API package in Dart to use the Tag model. It's a prerequisite for working with the Tag model in a Dart project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Loading AnimalFarm Model Package in Perl\nDESCRIPTION: Example showing how to import the AnimalFarm model class in a Perl application using the WWW::SwaggerClient library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::AnimalFarm;\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore as a Dependency in Elixir Mix\nDESCRIPTION: This snippet shows how to add the swagger_petstore package as a dependency in an Elixir project's mix.exs file. It specifies version 0.1.0 as the minimum required version.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/elixir/README.md#2025-04-20_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\ndef deps do\n  [{:swagger_petstore, \"~> 0.1.0\"}]\nend\n```\n\n----------------------------------------\n\nTITLE: ModelApiResponse Properties Table\nDESCRIPTION: Markdown table defining the properties of ModelApiResponse class including their types and optionality status\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Creating NPM Link for Angular Client Package\nDESCRIPTION: Commands for creating and using an npm link to the generated package for development.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\n----------------------------------------\n\nTITLE: API Method Documentation for TestClassname in Swagger API\nDESCRIPTION: Documentation for the TestClassname method which tests class name in snake case. The method accepts a Client model as the request body and returns a Client model. It requires API key authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **TestClassname**\n> Client TestClassname(ctx, body)\nTo test class name in snake case\n\nTo test class name in snake case\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**Client**](Client.md)| client model | \n\n### Return type\n\n[**Client**](Client.md)\n\n### Authorization\n\n[api_key_query](../README.md#api_key_query)\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n\n[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SpecialModelName class using a Markdown table. It specifies a single property 'special_property_name' of type Integer, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**special_property_name** | **Integer** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration in Markdown\nDESCRIPTION: Defines an enumeration of integer values from 0 to 6 using Markdown syntax. Each enum value is represented as a bullet point with its name and corresponding integer value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Table in Markdown\nDESCRIPTION: A markdown table defining the available values for the InnerEnum used by the mapOfEnumString property, showing the name and string value for each enum option.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Loading the List Model Package in Perl Swagger Client\nDESCRIPTION: Demonstrates how to load the WWW::SwaggerClient::Object::List model package in a Perl application. This is required before using the List object in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::List;\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Petstore Package\nDESCRIPTION: Command to install the Petstore API client package from a local directory without publishing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE/dist --save\n```\n\n----------------------------------------\n\nTITLE: ModelList Property Definition Table in Markdown\nDESCRIPTION: A markdown table defining the properties of a ModelList class, containing a single optional String property named _123List.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Petstore API TypeScript Fetch Client\nDESCRIPTION: Command to install an unpublished version of the Petstore API TypeScript Fetch client package from a local directory. This is not recommended for production use.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-fetch/builds/with-npm-version/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Installing Published npm Package\nDESCRIPTION: Command to install the published version of the package as a dependency in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/additional-properties-expected/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install additionalPropertiesTest@1.0.2 --save\n```\n\n----------------------------------------\n\nTITLE: API Key Authorization Example in Rust\nDESCRIPTION: Example showing how to use API key authentication with the client. This creates a context with the API key and uses it in a service operation call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/README.md#2025-04-20_snippet_1\n\nLANGUAGE: rust\nCODE:\n```\n\tauth := context.WithValue(context.TODO(), sw.ContextAPIKey, sw.APIKey{\n\t\tKey: \"APIKEY\",\n\t\tPrefix: \"Bearer\", // Omit if not necessary.\n\t})\n    r, err := client.Service.Operation(auth, args)\n```\n\n----------------------------------------\n\nTITLE: Adding Scala Akka Petstore Client Dependency in SBT\nDESCRIPTION: SBT dependency declaration to add the Scala Akka Petstore client to an SBT project. This allows the project to use the client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/akka-scala/README.md#2025-04-20_snippet_4\n\nLANGUAGE: scala\nCODE:\n```\nlibraryDependencies += \"io.swagger\" % \"scala-akka-petstore-client\" % \"1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays model using a markdown table. It specifies two properties: 'just_symbol' as a string and 'array_enum' as an array of strings, both optional with default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_symbol** | **string** |  | [optional] [default to null]\n**array_enum** | **array[string]** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumIntegerEnum used in the EnumTest class. It includes two integer values: 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Setting Alamofire Dependency for Swift Package Manager (Swift 3)\nDESCRIPTION: Swift code snippet showing how to add Alamofire as a dependency in a Package.swift file for Swift 3 projects using Swift Package Manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_5\n\nLANGUAGE: Swift\nCODE:\n```\ndependencies: [\n    .Package(url: \"https://github.com/Alamofire/Alamofire.git\", majorVersion: 4)\n]\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Values\nDESCRIPTION: Enumeration defining array values for sea creatures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Value |\n| --- | --- |\n| FISH | \"fish\" |\n| CRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining StatusEnum for Order Status in Markdown\nDESCRIPTION: Enumerates the possible values for the Order Status: PLACED, APPROVED, and DELIVERED. This enum is used to define valid states for the status property of an Order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"StatusEnum\"></a>\n## Enum: StatusEnum\nName | Value\n---- | -----\nPLACED | &quot;placed&quot;\nAPPROVED | &quot;approved&quot;\nDELIVERED | &quot;delivered&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Numbers Enum with BigDecimal Values in Java\nDESCRIPTION: This code snippet defines an enumeration called Numbers with four constants representing the values 7, 8, 9, and 10 using BigDecimal objects. This approach ensures precise decimal representation for these numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Loading the Category Model Package in Dart\nDESCRIPTION: Code snippet showing how to import the Swagger API package containing the Category model in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Extending Environment Configuration for Base Path\nDESCRIPTION: TypeScript code showing how to extend the environment configuration files to include the API base path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Specification\nDESCRIPTION: URL to view the Swagger JSON specification after the server is running. Note that the host might be different if configured differently.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs/jersey1/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Retrofit Client to Local Maven Repository\nDESCRIPTION: This command installs the API client library to the local Maven repository. It requires Maven to be installed on the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the JustSymbolEnum, which includes symbols like greater than or equal to (>=) and dollar sign ($).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documentation for the ArrayOfArrayOfNumberOnly model class which contains a single property 'arrayArrayNumber' that represents a nested list of BigDecimal values. The property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Currency Model Package in Dart\nDESCRIPTION: This code snippet demonstrates how to import the package containing the Currency model in a Dart project. It's typically used at the beginning of a Dart file to make the Currency model available for use.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Importing SwaggerClient Components in Objective-C\nDESCRIPTION: Import statements for including the main SwaggerClient components, models and API classes in Objective-C code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/README.md#2025-04-20_snippet_2\n\nLANGUAGE: objc\nCODE:\n```\n#import <SwaggerClient/SWGApiClient.h>\n#import <SwaggerClient/SWGDefaultConfiguration.h>\n// load models\n#import <SwaggerClient/SWGCategory.h>\n#import <SwaggerClient/SWGOrder.h>\n#import <SwaggerClient/SWGPet.h>\n#import <SwaggerClient/SWGTag.h>\n#import <SwaggerClient/SWGUser.h>\n// load API classes for accessing endpoints\n#import <SwaggerClient/SWGPetApi.h>\n#import <SwaggerClient/SWGStoreApi.h>\n#import <SwaggerClient/SWGUserApi.h>\n```\n\n----------------------------------------\n\nTITLE: Defining String Enum Values\nDESCRIPTION: Markdown table defining the possible values for EnumStringEnum including UPPER, lower and empty string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Building the jQuery TypeScript Petstore Client\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources into JavaScript code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-jquery/npm/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Navigation Links to Swagger Documentation\nDESCRIPTION: Navigation links to other sections of the Swagger documentation, including the model list, API endpoints list, and the main README file. These links help users navigate between different parts of the API documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Format_test.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ReadOnlyFirst model using a Markdown table. The model has two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Property Definition Table for ClassModel\nDESCRIPTION: Markdown table defining the properties of the ClassModel class, containing a single optional _class property of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown\nDESCRIPTION: Specifies the properties of an Order object including id, petId, quantity, shipDate, status, and complete. Each property is described with its name, type, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of a Client object. Contains a single optional string property 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values in Markdown\nDESCRIPTION: Specifies the values for the InnerEnum enumeration used in the MapTest class. It defines two enum values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Order Model Properties\nDESCRIPTION: Table documenting the properties of the Order model class including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**PetId** | **long?** |  | [optional] \n**Quantity** | **int?** |  | [optional] \n**ShipDate** | **DateTime?** |  | [optional] \n**Status** | **string** | Order Status | [optional] \n**Complete** | **bool?** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown Table\nDESCRIPTION: Markdown table that documents the properties of a Cat model class including their types, descriptions and whether they are optional or required fields. Contains className (String, required), color (String, optional) and declawed (Boolean, optional).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelList class using a Markdown table. It defines a single optional property named _123List of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: Documents the properties of the AdditionalPropertiesClass model, including mapProperty (a simple string-to-string map) and mapOfMapProperty (a nested map structure). Each property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map&lt;String, String&gt;** |  |  [optional]\n**mapOfMapProperty** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition\nDESCRIPTION: Defines the possible values for the enumString property, including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Using testInlineAdditionalProperties with Java RestAssured in Swagger API\nDESCRIPTION: Example Java code demonstrating how to call the testInlineAdditionalProperties API endpoint using RestAssured. It shows how to configure the API client with a base URI and execute a request with a JSON body parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.testInlineAdditionalProperties()\n    .body(param).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Package Installation Commands\nDESCRIPTION: Different methods for installing the package including published, local path, and npm link approaches\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ --save\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\n----------------------------------------\n\nTITLE: Loading ReadOnlyFirst Model in Perl for Swagger Client\nDESCRIPTION: This code snippet demonstrates how to load the ReadOnlyFirst model package in a Perl script using the WWW::SwaggerClient::Object namespace.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ReadOnlyFirst;\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in OpenAPI/Swagger\nDESCRIPTION: Markdown table documenting the properties of the ReadOnlyFirst model. Contains two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ReadOnlyFirst\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Swagger\nDESCRIPTION: Property table defining the Cat model structure in Swagger. Contains a single optional boolean property 'declawed' with its type specification and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **bool** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Definition\nDESCRIPTION: Defines the base properties of the EnumArrays class including justSymbol string and arrayEnum string array.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | **String** |  | [optional] \n**arrayEnum** | **[String]** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with Swagger PHP Client API Example\nDESCRIPTION: Example showing how to use the testSpecialTags method of the AnotherFakeApi class. The example initializes the API client, creates a request body, makes the API call, and handles the response or any exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\AnotherFakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$body = new \\Swagger\\Client\\Model\\Client(); // \\Swagger\\Client\\Model\\Client | client model\n\ntry {\n    $result = $apiInstance->testSpecialTags($body);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling AnotherFakeApi->testSpecialTags: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Loading the OuterNumber Model Package in Perl\nDESCRIPTION: Example code showing how to load the OuterNumber model class from the WWW::SwaggerClient module in a Perl application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::OuterNumber;\n```\n\n----------------------------------------\n\nTITLE: Status Enum Values in Markdown\nDESCRIPTION: Markdown table defining the possible values for the Order Status enum, including placed, approved, and delivered states.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Value |\n| ---- | ----- |\n| PLACED | \"placed\" |\n| APPROVED | \"approved\" |\n| DELIVERED | \"delivered\" |\n```\n\n----------------------------------------\n\nTITLE: Defining SwaggerPetstoreConfig in Haskell\nDESCRIPTION: Defines functions for creating and manipulating the SwaggerPetstoreConfig, including validation, logging configuration, and authentication method addition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_3\n\nLANGUAGE: haskell\nCODE:\n```\n-- | throw exceptions if auth methods are not configured\n[configValidateAuthMethods] :: SwaggerPetstoreConfig -> Bool\n\n-- | display the config\n\n-- | constructs a default SwaggerPetstoreConfig\n--   \n--   configHost:\n--   \n--   <pre>\n--   <a>http://petstore.swagger.io:80/v2</a>\n--   </pre>\n--   \n--   configUserAgent:\n--   \n--   <pre>\n--   \"swagger-petstore/0.1.0.0\"\n--   </pre>\nnewConfig :: IO SwaggerPetstoreConfig\n\n-- | updates config use AuthMethod on matching requests\naddAuthMethod :: AuthMethod auth => SwaggerPetstoreConfig -> auth -> SwaggerPetstoreConfig\n\n-- | updates the config to use stdout logging\nwithStdoutLogging :: SwaggerPetstoreConfig -> IO SwaggerPetstoreConfig\n\n-- | updates the config to use stderr logging\nwithStderrLogging :: SwaggerPetstoreConfig -> IO SwaggerPetstoreConfig\n\n-- | updates the config to disable logging\nwithNoLogging :: SwaggerPetstoreConfig -> SwaggerPetstoreConfig\n```\n\n----------------------------------------\n\nTITLE: Order Object Structure Example in Haskell\nDESCRIPTION: Example of an Order data structure showing fields like ID, pet ID, quantity, ship date and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/example-app/infoLog.txt#2025-04-20_snippet_2\n\nLANGUAGE: haskell\nCODE:\n```\nOrder {orderId = Just 21, orderPetId = Just 0, orderQuantity = Just 210, orderShipDate = Just 2017-09-12 03:59:19.571 UTC, orderStatus = Nothing, orderComplete = Just False}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: Defines the properties of the ModelList class using a Markdown table. The class has a single optional property named _123List of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Starting PHP Development Server for Slim Application\nDESCRIPTION: This command starts a PHP development server for the Slim application. It specifies the host, port, document root, and entry point for the application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/slim/slim/example/README.md#2025-04-20_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n$ cd Slim\n$ php -S localhost:8888 -t example example/index.php\n```\n\n----------------------------------------\n\nTITLE: Loading the Amount Model Package in Dart\nDESCRIPTION: This code snippet shows how to import the Amount model class from the Swagger API package in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/Amount.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Finding Purchase Order by ID in Java using StoreApi\nDESCRIPTION: This snippet demonstrates how to find a purchase order by ID using the StoreApi. It creates an instance of StoreApi, calls the getOrderById method with an order ID, and prints the result. The method returns an Order object and may throw an ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Pet Object Instance\nDESCRIPTION: Declaration of a Pet_Type object to store pet information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_5\n\nLANGUAGE: ada\nCODE:\n```\n  Pet  : Samples.Petstore.Models.Pet_Type;\n```\n\n----------------------------------------\n\nTITLE: Installing Carthage Package Manager\nDESCRIPTION: Terminal command to install Carthage using Homebrew. Carthage is a decentralized dependency manager that can be used to integrate Alamofire.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\n$ brew install carthage\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the HasOnlyReadOnly class using a markdown table. It specifies two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**foo** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the FakeClassnameTags123Api Module in Perl\nDESCRIPTION: Example of how to load the FakeClassnameTags123Api module in a Perl application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::FakeClassnameTags123Api;\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Class Properties in Markdown\nDESCRIPTION: Defines the properties of the ModelList class using a Markdown table. The class has a single optional property named _123List of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Invalid Order Error\nDESCRIPTION: JSON schema defining the response structure when an invalid order is submitted to the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_16\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"Invalid Order\"\n}\n```\n\n----------------------------------------\n\nTITLE: Name Model Schema Definition in Markdown\nDESCRIPTION: Markdown table defining the properties of the Name model. Includes property names, data types, descriptions, and whether fields are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Number** |  | \n**snakeCase** | **Number** |  | [optional] \n**property** | **String** |  | [optional] \n**_123Number** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Running integration tests with tox\nDESCRIPTION: Commands to install tox and run the integration tests. Tox is a tool for automating testing in Python across multiple environments.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo pip install tox\ntox\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of an Animal model using a markdown table. It specifies two properties: className (required) and color (optional), both of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown Table\nDESCRIPTION: Markdown table defining the properties of a Cat model, specifying the declawed boolean property as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Type Structure in Markdown\nDESCRIPTION: Markdown table defining the structure of the OuterBoolean type. The table shows the standard Swagger/OpenAPI property definition format with columns for Name, Type, Description and Notes, but contains no actual properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.OuterBoolean\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerPetstoreEndRnNR via NPM\nDESCRIPTION: Command to install the SwaggerPetstoreEndRnNR package using npm package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install swagger_petstore____end____rn_n_r --save\n```\n\n----------------------------------------\n\nTITLE: Loading WWW::SwaggerClient::Object::ClassModel in Perl\nDESCRIPTION: Demonstrates how to load the ClassModel package in a Perl application. This is required before using the ClassModel object in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ClassModel;\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Schema in Markdown\nDESCRIPTION: Markdown table defining the properties of SpecialModelName model. Contains a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SpecialModelName\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading WWW::SwaggerClient::Object::HasOnlyReadOnly Model in Perl\nDESCRIPTION: This code snippet demonstrates how to load the HasOnlyReadOnly model package in a Perl application. It is typically used at the beginning of a script that needs to work with this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::HasOnlyReadOnly;\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Properties in Swagger Codegen\nDESCRIPTION: Defines a model class named ModelList with an optional String property named _123List. This class is part of the Swagger Codegen project which transforms OpenAPI specifications into code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring CocoaPods for RxSwift in Swift\nDESCRIPTION: This code snippet shows how to configure a Podfile to include RxSwift and RxCocoa dependencies for a main target, as well as RxBlocking and RxTest for a testing target using CocoaPods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Ruby\nCODE:\n```\n# Podfile\nuse_frameworks!\n\ntarget 'YOUR_TARGET_NAME' do\n    pod 'RxSwift',    '~> 3.0'\n    pod 'RxCocoa',    '~> 3.0'\nend\n\n# RxTests and RxBlocking make the most sense in the context of unit/integration tests\ntarget 'YOUR_TESTING_TARGET' do\n    pod 'RxBlocking', '~> 3.0'\n    pod 'RxTest',     '~> 3.0'\nend\n```\n\n----------------------------------------\n\nTITLE: Setting Up Database and Starting Rails Server\nDESCRIPTION: Creates and migrates the database, then starts the Rails server for the Swagger-integrated project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/rails5/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nbin/rake db:create db:migrate\nbin/rails s\n```\n\n----------------------------------------\n\nTITLE: Installing NuGet Package Dependencies for C# Swagger SDK\nDESCRIPTION: Commands to install the required NuGet packages for the C# Swagger client library. This includes RestSharp for HTTP requests, Newtonsoft.Json for JSON serialization, and JsonSubTypes for polymorphic deserialization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nInstall-Package RestSharp\nInstall-Package Newtonsoft.Json\nInstall-Package JsonSubTypes\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in Swagger Model\nDESCRIPTION: Specification of map properties in a Swagger model class, including a single-level string map and a nested map of maps. Both properties are optional with null defaults.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**map_property** | **map[String, string]** |  | [optional] [default to null]\n**map_of_map_property** | **map[String, map[String, string]]** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Class in Haskell\nDESCRIPTION: Defines the ClassModel data type for testing model with '_class' property, including constructor, accessor for _class field, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_23\n\nLANGUAGE: haskell\nCODE:\n```\n-- | ClassModel Model for testing model with \"_class\" property\ndata ClassModel\nClassModel :: !(Maybe Text) -> ClassModel\n\n-- | \"_class\"\n[classModelClass] :: ClassModel -> !(Maybe Text)\n\n-- | FromJSON ClassModel\n\n-- | ToJSON ClassModel\n\n-- | Construct a value of type <a>ClassModel</a> (by applying it's required\n--   fields, if any)\nmkClassModel :: ClassModel\n```\n\n----------------------------------------\n\nTITLE: Using CRUD Router for Reading User Data in Swift\nDESCRIPTION: Demonstrates using the CRUD Router to make a type-safe request to read a user. The Router handles constructing the proper URL, HTTP method, and any necessary headers for the request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_57\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(Router.ReadUser(\"mattt\")) // GET /users/mattt\n```\n\n----------------------------------------\n\nTITLE: MapTest Model Properties Definition\nDESCRIPTION: Defines two dictionary properties: MapMapOfString for nested string mappings and MapOfEnumString for enum-to-string mappings. Both properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\nMapMapOfString | Dictionary<string, Dictionary<string, string>> |  | [optional]\nMapOfEnumString | Dictionary<string, string> |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Values in Markdown\nDESCRIPTION: Specifies the enumeration values for JustSymbolEnum. It includes two values: 'GREATER_THAN_OR_EQUAL_TO' and 'DOLLAR', along with their string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"JustSymbolEnum\"></a>\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization with FakeApi in Java\nDESCRIPTION: Example of using the fakeOuterCompositeSerialize endpoint to test serialization of an object with outer number type. Shows how to create and submit an OuterComposite object and process the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger UI Endpoint\nDESCRIPTION: URL endpoint for accessing the Swagger UI interface in the browser.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/README.md#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://localhost:8080/v2/ui/\n```\n\n----------------------------------------\n\nTITLE: Loading the MixedPropertiesAndAdditionalPropertiesClass Model Package in Perl\nDESCRIPTION: This snippet demonstrates how to load the MixedPropertiesAndAdditionalPropertiesClass model package in a Perl Swagger client implementation. It shows the use statement required to import the model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::MixedPropertiesAndAdditionalPropertiesClass;\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration Constants in Markdown\nDESCRIPTION: Defines a set of integer enumeration constants from 0 to 6. Each constant is represented as a markdown list item with a name (NUMBER_X) and its corresponding numeric value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining MODEL_200_RESPONSE Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the MODEL_200_RESPONSE object. It includes the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/MODEL_200_RESPONSE.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **INTEGER_32** |  | [optional] [default to null]\n**var_class** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ReadOnlyFirst model using a Markdown table. It specifies two optional string properties: 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore REST Template Dependency in Gradle\nDESCRIPTION: Gradle dependency configuration for adding the API client library to a Gradle project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-resttemplate:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Building Swagger ASP.NET Core Server on Linux/macOS\nDESCRIPTION: Shell command to build the Swagger-generated ASP.NET Core server on Linux or macOS systems using the build script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nsh build.sh\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values\nDESCRIPTION: Defines integer enum values including positive and negative numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Adding Scala Akka Petstore Client Dependency in Gradle\nDESCRIPTION: Gradle dependency declaration to add the Scala Akka Petstore client to a Gradle project. This allows the project to use the client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/akka-scala/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:scala-akka-petstore-client:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies via Composer Configuration\nDESCRIPTION: JSON configuration for adding the Swagger server bundle repository to composer.json in a Symfony project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/README.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"repositories\": [{\n        \"type\": \"path\",\n        \"url\": \"//Path to your generated swagger bundle\"\n    }],\n}\n```\n\n----------------------------------------\n\nTITLE: FastRoute Optional Route Segments\nDESCRIPTION: Shows how to define routes with optional parts using square brackets. Explains the equivalence between routes with optional parts and multiple explicit routes, and demonstrates limitations of optional segment placement.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// This route\n$r->addRoute('GET', '/user/{id:\\d+}[/{name}]', 'handler');\n// Is equivalent to these two routes\n$r->addRoute('GET', '/user/{id:\\d+}', 'handler');\n$r->addRoute('GET', '/user/{id:\\d+}/{name}', 'handler');\n\n// Multiple nested optional parts are possible as well\n$r->addRoute('GET', '/user[/{id:\\d+}[/{name}]]', 'handler');\n\n// This route is NOT valid, because optional parts can only occur at the end\n$r->addRoute('GET', '/user[/{id:\\d+}]/{name}', 'handler');\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of a Cat model. It specifies a single property 'declawed' of type Boolean, which is optional. This format is commonly used in Swagger/OpenAPI specifications for describing data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **declawed** | **Boolean** |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining SWGReturn Model Properties in Markdown\nDESCRIPTION: Documents the SWGReturn model with its property named '_return' of type NSNumber* and includes a property description with special characters. The property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/objc/docs/SWGReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SWGReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **NSNumber*** | property description  *_/ &#39; \\&quot; &#x3D;end -- \\r\\n \\n \\r | [optional] \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum Values\nDESCRIPTION: Enum declaration defining boolean values TRUE and FALSE with their corresponding primitive boolean values true and false.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a markdown table. It includes the property names, their data types, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **MyNumber** | **decimal?** |  | [optional] |\n| **MyString** | **string** |  | [optional] |\n| **MyBoolean** | **bool?** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining ModelClient Class Properties in Markdown\nDESCRIPTION: Describes the properties of the ModelClient class using a markdown table. The class has one optional string property named __Client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/ModelClient.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**__Client** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Model Properties in Markdown\nDESCRIPTION: This snippet defines a markdown table structure for documenting the properties of the OuterBoolean model. However, the table is empty, indicating that no properties are currently defined for this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Properties in Markdown\nDESCRIPTION: This Markdown table defines the properties of the ModelReturn class. It specifies a single optional property named '_return' of type Integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Generating Java Client Library for Petstore API using Shell Script\nDESCRIPTION: Example of how to use the convenience shell script to generate a Java client library for the Swagger Petstore sample API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n./bin/java-petstore.sh\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Java Client with Maven\nDESCRIPTION: Command to install the API client library to your local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: Defining MIME Type Classes and Instances\nDESCRIPTION: Implements MIME type handling for HTTP requests and responses, including JSON, XML, form data, and plain text formats.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_1\n\nLANGUAGE: haskell\nCODE:\n```\ndata ContentType a\nContentType :: a -> ContentType a\nclass MimeType mtype => Consumes req mtype\nclass MimeType mtype => Produces req mtype\ndata MimeJSON\ndata MimeXML\ndata MimePlainText\ndata MimeFormUrlEncoded\ndata MimeMultipartFormData\ndata MimeOctetStream\ndata MimeNoContent\ndata MimeAny\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Petstore Tests with Maven\nDESCRIPTION: Command to run the integration tests using Maven with the integration-test profile. This executes the Haskell stack tests through the Maven build system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/tests-integration/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmvn -q verify -Pintegration-test\n```\n\n----------------------------------------\n\nTITLE: Swagger Model List Properties Table\nDESCRIPTION: Markdown table defining the properties of the List model class, showing the _123List string property as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of the ArrayOfNumberOnly model. Contains a single property 'array_number' that accepts an optional array of floating point numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **array_number** | **list[float]** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: Example implementation of making a PATCH request to test special tags endpoint. Shows how to create an API instance, set up the client model, make the API call, and handle potential exceptions. The endpoint accepts a Client model as input and returns the same model type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Model Classes in Perl Client\nDESCRIPTION: Example showing how to load the model classes in the Swagger Petstore Perl client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/README.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ModelReturn;\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Schema in Markdown\nDESCRIPTION: A markdown table that documents the NumberOnly model with a single optional property 'justNumber' of BigDecimal type. This format is commonly used in Swagger/OpenAPI specifications to document data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Type Class Instances for Swagger Petstore API Models in Haskell\nDESCRIPTION: Implements various type class instances (Show, Eq, Enum, Bounded, Ord) for the models and enums used in the Swagger Petstore API. This enables standard operations and comparisons on these types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_39\n\nLANGUAGE: Haskell\nCODE:\n```\ninstance GHC.Show.Show SwaggerPetstore.Model.AuthOAuthPetstoreAuth\ninstance GHC.Classes.Eq SwaggerPetstore.Model.AuthOAuthPetstoreAuth\ninstance GHC.Show.Show SwaggerPetstore.Model.AuthBasicHttpBasicTest\ninstance GHC.Classes.Eq SwaggerPetstore.Model.AuthBasicHttpBasicTest\ninstance GHC.Show.Show SwaggerPetstore.Model.AuthApiKeyApiKeyQuery\ninstance GHC.Classes.Eq SwaggerPetstore.Model.AuthApiKeyApiKeyQuery\ninstance GHC.Show.Show SwaggerPetstore.Model.AuthApiKeyApiKey\ninstance GHC.Classes.Eq SwaggerPetstore.Model.AuthApiKeyApiKey\ninstance GHC.Classes.Eq SwaggerPetstore.Model.EnumTest\ninstance GHC.Show.Show SwaggerPetstore.Model.EnumTest\ninstance GHC.Enum.Enum SwaggerPetstore.Model.OuterEnum\ninstance GHC.Enum.Bounded SwaggerPetstore.Model.OuterEnum\ninstance GHC.Classes.Ord SwaggerPetstore.Model.OuterEnum\ninstance GHC.Classes.Eq SwaggerPetstore.Model.OuterEnum\ninstance GHC.Show.Show SwaggerPetstore.Model.OuterEnum\ninstance GHC.Enum.Enum SwaggerPetstore.Model.EnumClass\ninstance GHC.Enum.Bounded SwaggerPetstore.Model.EnumClass\ninstance GHC.Classes.Ord SwaggerPetstore.Model.EnumClass\ninstance GHC.Classes.Eq SwaggerPetstore.Model.EnumClass\ninstance GHC.Show.Show SwaggerPetstore.Model.EnumClass\ninstance GHC.Show.Show SwaggerPetstore.Model.Status\ninstance GHC.Classes.Eq SwaggerPetstore.Model.Status\ninstance GHC.Classes.Eq SwaggerPetstore.Model.Pet\ninstance GHC.Show.Show SwaggerPetstore.Model.Pet\ninstance GHC.Enum.Enum SwaggerPetstore.Model.E'Status2\ninstance GHC.Enum.Bounded SwaggerPetstore.Model.E'Status2\ninstance GHC.Classes.Ord SwaggerPetstore.Model.E'Status2\ninstance GHC.Classes.Eq SwaggerPetstore.Model.E'Status2\ninstance GHC.Show.Show SwaggerPetstore.Model.E'Status2\ninstance GHC.Classes.Eq SwaggerPetstore.Model.Order\ninstance GHC.Show.Show SwaggerPetstore.Model.Order\ninstance GHC.Enum.Enum SwaggerPetstore.Model.E'Status\ninstance GHC.Enum.Bounded SwaggerPetstore.Model.E'Status\ninstance GHC.Classes.Ord SwaggerPetstore.Model.E'Status\ninstance GHC.Classes.Eq SwaggerPetstore.Model.E'Status\ninstance GHC.Show.Show SwaggerPetstore.Model.E'Status\n```\n\n----------------------------------------\n\nTITLE: Installing Maven Package\nDESCRIPTION: Commands to install the API client library to local or remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayTest model using a markdown table. It includes arrayOfString (List<String>), arrayArrayOfInteger (List<List<Long>>), and arrayArrayOfModel (List<List<ReadOnlyFirst>>), all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List<String>** |  |  [optional]\n**arrayArrayOfInteger** | [**List<List<Long>>**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List<List<ReadOnlyFirst>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing URLRequestConvertible for API Parameter Abstraction in Swift\nDESCRIPTION: Creates a Router enum that conforms to URLRequestConvertible for API parameter abstraction. The implementation handles search queries with pagination, converting enum cases into appropriate URL requests with query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_54\n\nLANGUAGE: swift\nCODE:\n```\nenum Router: URLRequestConvertible {\n    static let baseURLString = \"http://example.com\"\n    static let perPage = 50\n\n    case Search(query: String, page: Int)\n\n    // MARK: URLRequestConvertible\n\n    var URLRequest: NSMutableURLRequest {\n        let result: (path: String, parameters: [String: AnyObject]) = {\n            switch self {\n            case .Search(let query, let page) where page > 0:\n                return (\"/search\", [\"q\": query, \"offset\": Router.perPage * page])\n            case .Search(let query, _):\n                return (\"/search\", [\"q\": query])\n            }\n        }()\n\n        let URL = NSURL(string: Router.baseURLString)!\n        let URLRequest = NSURLRequest(URL: URL.URLByAppendingPathComponent(result.path))\n        let encoding = Alamofire.ParameterEncoding.URL\n\n        return encoding.encode(URLRequest, parameters: result.parameters).0\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: SWGTag Model Properties Definition\nDESCRIPTION: Defines two optional properties for the SWGTag model: _id as an NSNumber and name as an NSString. This structure is commonly used in Swagger-generated Objective-C client code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGTag.md#2025-04-20_snippet_0\n\nLANGUAGE: objective-c\nCODE:\n```\n**_id** | **NSNumber*** |  | [optional] \n**name** | **NSString*** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Various Parameters with Authentication in SwaggerPetstore FakeApi in JavaScript\nDESCRIPTION: Example demonstrating how to call the testEndpointParameters method with HTTP basic authentication. This endpoint tests various parameter types including numbers, strings, dates, and binary data.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure HTTP basic authorization: http_basic_test\nvar http_basic_test = defaultClient.authentications['http_basic_test'];\nhttp_basic_test.username = 'YOUR USERNAME';\nhttp_basic_test.password = 'YOUR PASSWORD';\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar _number = 8.14; // Number | None\n\nvar _double = 1.2; // Number | None\n\nvar patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\n\nvar _byte = \"QmFzZTY0IGV4YW1wbGU=\"; // Blob | None\n\nvar opts = { \n  'integer': 56, // Number | None\n  'int32': 56, // Number | None\n  'int64': 789, // Number | None\n  '_float': 3.4, // Number | None\n  '_string': \"_string_example\", // String | None\n  'binary': \"QmFzZTY0IGV4YW1wbGU=\", // Blob | None\n  '_date': new Date(\"2013-10-20\"), // Date | None\n  'dateTime': new Date(\"2013-10-20T19:20:30+01:00\"), // Date | None\n  'password': \"password_example\", // String | None\n  'callback': \"callback_example\" // String | None\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.testEndpointParameters(_number, _double, patternWithoutDelimiter, _byte, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Cat Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a Cat model with a single boolean property 'declawed' marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Name Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, descriptions and notes for the Name model schema. Includes required and optional fields with their data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a User model including field names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **int** |  | [optional] |\n| **username** | **str** |  | [optional] |\n| **first_name** | **str** |  | [optional] |\n| **last_name** | **str** |  | [optional] |\n| **email** | **str** |  | [optional] |\n| **password** | **str** |  | [optional] |\n| **phone** | **str** |  | [optional] |\n| **user_status** | **int** | User Status | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Initializing FakeApi and Testing Endpoint Parameters in PHP\nDESCRIPTION: This snippet demonstrates how to initialize the FakeApi class and call the testEndpointParameters method with various input types. It includes setting up HTTP basic authentication and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure HTTP basic authorization: http_basic_test\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()\n              ->setUsername('YOUR_USERNAME')\n              ->setPassword('YOUR_PASSWORD');\n\n\n$apiInstance = new Swagger\\Client\\Api\\FakeApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$number = 8.14; // float | None\n$double = 1.2; // double | None\n$pattern_without_delimiter = \"pattern_without_delimiter_example\"; // string | None\n$byte = \"B\"; // string | None\n$integer = 56; // int | None\n$int32 = 56; // int | None\n$int64 = 789; // int | None\n$float = 3.4; // float | None\n$string = \"string_example\"; // string | None\n$binary = \"B\"; // string | None\n$date = new \\DateTime(\"2013-10-20\"); // \\DateTime | None\n$date_time = new \\DateTime(\"2013-10-20T19:20:30+01:00\"); // \\DateTime | None\n$password = \"password_example\"; // string | None\n$callback = \"callback_example\"; // string | None\n\ntry {\n    $apiInstance->testEndpointParameters($number, $double, $pattern_without_delimiter, $byte, $integer, $int32, $int64, $float, $string, $binary, $date, $date_time, $password, $callback);\n} catch (Exception $e) {\n    echo 'Exception when calling FakeApi->testEndpointParameters: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of ModelList class, showing a single optional String property named _123List.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelList\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Swagger Codegen\nDESCRIPTION: Schema definition for the Client model with a single optional string property. This markdown table format is commonly used in Swagger/OpenAPI specifications to document model structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Starting PHP Development Server\nDESCRIPTION: Command to start PHP's built-in development server for testing the Slim application locally on port 8000.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/slim/slim/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ php -S localhost:8000\n```\n\n----------------------------------------\n\nTITLE: HasOnlyReadOnly Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and characteristics of the HasOnlyReadOnly class. Contains two optional string properties: bar and foo.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a List model using a markdown table. It specifies a single property '_123List' of type string, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **_123List** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of ClassModel class. Contains a single optional string property 'propertyClass'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient via CocoaPods from Local Path\nDESCRIPTION: CocoaPods configuration for installing the SwaggerClient SDK from a local directory path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\npod 'SwaggerClient', :path => 'Vendor/SwaggerClient'\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Table Definition - Markdown\nDESCRIPTION: Defines the main properties of the EnumArrays model including justSymbol and arrayEnum fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Enum Values for Swagger Model\nDESCRIPTION: Defines the possible boolean enum values that can be used in the Swagger Petstore API model. Contains two values: _true mapped to true and _false mapped to false.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_true` (value: `true`)\n\n* `_false` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Base Path in Angular Bootstrap\nDESCRIPTION: TypeScript code to set a custom base path for the generated Swagger service during Angular application bootstrap, allowing API calls to be directed to a specific URL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/array-and-object-expected/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from './path-to-swagger-gen-service/index';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - List Model Properties Definition\nDESCRIPTION: Defines the properties of the List model using a markdown table format. Contains a single property _123_list of type string that is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123_list** | **str** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundException Interface in PHP\nDESCRIPTION: This snippet defines the NotFoundException interface, which extends ContainerException. It represents the case when no entry was found in the container for a given identifier.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/container-interop/container-interop/docs/ContainerInterface.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Interop\\Container\\Exception;\n\n/**\n * No entry was found in the container.\n */\ninterface NotFoundException extends ContainerException\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Client Properties Schema in Markdown\nDESCRIPTION: Markdown table defining the properties of a Client class with a single optional string field named 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum Values\nDESCRIPTION: Markdown table defining the possible integer values for EnumIntegerEnum including 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Installing FastRoute via Composer in PHP\nDESCRIPTION: This snippet shows how to install FastRoute using Composer, the PHP dependency manager. It requires PHP 5.4 or newer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncomposer require nikic/fast-route\n```\n\n----------------------------------------\n\nTITLE: Importing Generated Module with ES6 Module Syntax from Local Directory\nDESCRIPTION: Examples of importing the generated TypeScript/JavaScript module using ES6 module syntax when the module is directly copied or symlinked into a local directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/typescript-aurelia/README.md#2025-04-20_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport * as localName from './symlinkDir';\nimport {operationId} from './symlinkDir';\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger Petstore Model Modules in Perl\nDESCRIPTION: Loads the model classes representing various objects used in the Swagger Petstore API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/README.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::AdditionalPropertiesClass;\nuse WWW::SwaggerClient::Object::Animal;\nuse WWW::SwaggerClient::Object::AnimalFarm;\nuse WWW::SwaggerClient::Object::ApiResponse;\nuse WWW::SwaggerClient::Object::ArrayOfArrayOfNumberOnly;\nuse WWW::SwaggerClient::Object::ArrayOfNumberOnly;\nuse WWW::SwaggerClient::Object::ArrayTest;\nuse WWW::SwaggerClient::Object::Capitalization;\nuse WWW::SwaggerClient::Object::Category;\nuse WWW::SwaggerClient::Object::ClassModel;\nuse WWW::SwaggerClient::Object::Client;\nuse WWW::SwaggerClient::Object::EnumArrays;\nuse WWW::SwaggerClient::Object::EnumClass;\nuse WWW::SwaggerClient::Object::EnumTest;\nuse WWW::SwaggerClient::Object::FormatTest;\nuse WWW::SwaggerClient::Object::HasOnlyReadOnly;\nuse WWW::SwaggerClient::Object::List;\nuse WWW::SwaggerClient::Object::MapTest;\nuse WWW::SwaggerClient::Object::MixedPropertiesAndAdditionalPropertiesClass;\nuse WWW::SwaggerClient::Object::Model200Response;\nuse WWW::SwaggerClient::Object::ModelReturn;\nuse WWW::SwaggerClient::Object::Name;\nuse WWW::SwaggerClient::Object::NumberOnly;\nuse WWW::SwaggerClient::Object::Order;\nuse WWW::SwaggerClient::Object::OuterBoolean;\nuse WWW::SwaggerClient::Object::OuterComposite;\nuse WWW::SwaggerClient::Object::OuterEnum;\nuse WWW::SwaggerClient::Object::OuterNumber;\nuse WWW::SwaggerClient::Object::OuterString;\nuse WWW::SwaggerClient::Object::Pet;\nuse WWW::SwaggerClient::Object::ReadOnlyFirst;\nuse WWW::SwaggerClient::Object::SpecialModelName;\nuse WWW::SwaggerClient::Object::Tag;\nuse WWW::SwaggerClient::Object::User;\nuse WWW::SwaggerClient::Object::Cat;\nuse WWW::SwaggerClient::Object::Dog;\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayOfArrayOfNumberOnly model using a markdown table. It specifies the property name, type, description, and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | **[[Number]]** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in AdditionalPropertiesClass Model\nDESCRIPTION: Documentation for the AdditionalPropertiesClass model which contains two map properties: mapProperty (a simple string-to-string map) and mapOfMapProperty (a nested map of string-to-string maps).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map&lt;String, String&gt;** |  |  [optional]\n**mapOfMapProperty** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring ServerTrustPolicy in Alamofire\nDESCRIPTION: Implementation of certificate pinning using ServerTrustPolicy with certificate chain and host validation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_61\n\nLANGUAGE: swift\nCODE:\n```\nlet serverTrustPolicy = ServerTrustPolicy.PinCertificates(\n    certificates: ServerTrustPolicy.certificatesInBundle(),\n    validateCertificateChain: true,\n    validateHost: true\n)\n```\n\n----------------------------------------\n\nTITLE: Defining SwagCategory Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SwagCategory model using a markdown table. It specifies the name, type, description, and notes for each property. The model has two optional properties: id (Long) and name (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagCategory.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the Pet model, including their types, descriptions, and whether they are optional. It covers fields such as id, category, name, photo_urls, tags, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**category** | [**\\Swagger\\Client\\Model\\Category**](Category.md) |  | [optional] \n**name** | **string** |  | \n**photo_urls** | **string[]** |  | \n**tags** | [**\\Swagger\\Client\\Model\\Tag[]**](Tag.md) |  | [optional] \n**status** | **string** | pet status in the store | [optional] \n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, sets up a Client object as the request body, and makes a PATCH request to test special tags. The method returns a Client object as the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Angular2 TypeScript Petstore Package\nDESCRIPTION: Command for installing the package directly from local path without publishing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE/dist --save\n```\n\n----------------------------------------\n\nTITLE: Building and Running Swagger Server on Windows\nDESCRIPTION: Batch command to build and run the Swagger Petstore server on Windows systems.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2-interface-controller/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\nbuild.bat\n```\n\n----------------------------------------\n\nTITLE: Implementing FastRoute Caching\nDESCRIPTION: Demonstrates how to enable route caching with FastRoute using the cachedDispatcher function. Includes configuration for cache file location and conditional cache disabling during development.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$dispatcher = FastRoute\\cachedDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/user/{name}/{id:[0-9]+}', 'handler0');\n    $r->addRoute('GET', '/user/{id:[0-9]+}', 'handler1');\n    $r->addRoute('GET', '/user/{name}', 'handler2');\n}, [\n    'cacheFile' => __DIR__ . '/route.cache', /* required */\n    'cacheDisabled' => IS_DEBUG_ENABLED,     /* optional, enabled by default */\n]);\n```\n\n----------------------------------------\n\nTITLE: EnumClass Value Definitions\nDESCRIPTION: Defines three enum values for EnumClass: _ABC, _EFG, and _XYZ_, each with a corresponding string representation. These are used for strong typing of specific enumerated values in an API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: This snippet defines the structure of the NumberOnly model class using a markdown table. It specifies a single optional property 'justNumber' of type BigDecimal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuration Options Output for Java in Swagger Codegen\nDESCRIPTION: Sample output showing configuration options for Java code generation in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_4\n\nLANGUAGE: text\nCODE:\n```\nCONFIG OPTIONS\nmodelPackage\n    package for generated models\n\napiPackage\n    package for generated api classes\n...... (results omitted)\nlibrary\n    library template (sub-template) to use:\n    jersey1 - HTTP client: Jersey client 1.18. JSON processing: Jackson 2.4.2\n    jersey2 - HTTP client: Jersey client 2.6\n    feign - HTTP client: Netflix Feign 8.1.1.  JSON processing: Jackson 2.6.3\n    okhttp-gson (default) - HTTP client: OkHttp 2.4.0. JSON processing: Gson 2.3.1\n    retrofit - HTTP client: OkHttp 2.4.0. JSON processing: Gson 2.3.1 (Retrofit 1.9.0)\n    retrofit2 - HTTP client: OkHttp 2.5.0. JSON processing: Gson 2.4 (Retrofit 2.0.0-beta2)\n    google-api-client - HTTP client: google-api-client 1.23.0. JSON processing: Jackson 2.8.9\n    rest-assured - HTTP client: rest-assured : 3.1.0. JSON processing: Gson 2.6.1. Only for Java8\n```\n\n----------------------------------------\n\nTITLE: Installing Published @swagger/angular2-typescript-petstore Package\nDESCRIPTION: Command to install the published @swagger/angular2-typescript-petstore package in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/angular2-typescript-petstore@0.0.1 --save\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for EnumIntegerEnum which include positive and negative integers. The enum consists of NUMBER_1 with value 1 and NUMBER_MINUS_1 with value -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Adding Gradle Dependency for Swagger Client\nDESCRIPTION: Gradle configuration to add the Swagger Petstore Spring Cloud dependency to a project's build file\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/spring-cloud/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-spring-cloud:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Links for Swagger Resources\nDESCRIPTION: Reference links to key Swagger-related resources including the main codegen project, OpenAPI specifications, and Slim Framework templates.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/README.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[swagger-codegen](https://github.com/swagger-api/swagger-codegen)\n[OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki)\n[TEMPLATES](https://github.com/swagger-api/swagger-codegen/tree/master/modules/swagger-codegen/src/main/resources/slim/)\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Properties in Markdown\nDESCRIPTION: Describes the properties of the SpecialModelName class using a markdown table. It defines a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SpecialModelName\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Schema in Markdown\nDESCRIPTION: Markdown table defining the properties of the ClassModel class. Contains a single optional property 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Order model using a markdown table. It includes field names, data types, descriptions, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**pet_id** | **int** |  | [optional] \n**quantity** | **int** |  | [optional] \n**ship_date** | [**\\DateTime**](\\DateTime.md) |  | [optional] \n**status** | **string** | Order Status | [optional] \n**complete** | **bool** |  | [optional] [default to false]\n```\n\n----------------------------------------\n\nTITLE: Order Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Order model class including field names, data types, descriptions and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **Id** | **long?** |  | [optional] |\n| **PetId** | **long?** |  | [optional] |\n| **Quantity** | **int?** |  | [optional] |\n| **ShipDate** | **DateTime?** |  | [optional] |\n| **Status** | **string** | Order Status | [optional] |\n| **Complete** | **bool?** |  | [optional] [default to false] |\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Model Properties in Markdown\nDESCRIPTION: Documents the properties of the ApiResponse model including their types and characteristics. Contains three optional properties: code (Number), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Number** |  | [optional] \n**type** | **String** |  | [optional] \n**message** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in C#\nDESCRIPTION: Defines the ArrayOfNumberOnly model class with a single property that is an array of nullable decimal values. The property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayNumber** | **List<decimal?>** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Model200Response class using a Markdown table. It specifies two optional properties: 'name' (Integer) and 'propertyClass' (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Sending GET Request to Find Pets by Tags\nDESCRIPTION: Endpoint for finding pets by their tags. Accepts tags as query parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_3\n\nLANGUAGE: markup\nCODE:\n```\nget /pet/findByTags\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Markdown\nDESCRIPTION: Describes the properties of the ModelReturn class using a markdown table. It specifies a single property named '_return' of type Integer, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Published Package\nDESCRIPTION: Command to install the published package in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ --save\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Structure in Markdown\nDESCRIPTION: Documents the properties of AdditionalPropertiesClass model including two map properties: mapProperty (a simple string-to-string map) and mapOfMapProperty (a nested map structure).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**MapProperty** | **map[string]string** |  | [optional] [default to null]\n**MapOfMapProperty** | [**map[string]map[string]string**](map.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Class in Haskell\nDESCRIPTION: Defines the ApiResponse data type with constructor, accessors for code, type, and message fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_17\n\nLANGUAGE: haskell\nCODE:\n```\n-- | ApiResponse\ndata ApiResponse\nApiResponse :: !(Maybe Int) -> !(Maybe Text) -> !(Maybe Text) -> ApiResponse\n\n-- | \"code\"\n[apiResponseCode] :: ApiResponse -> !(Maybe Int)\n\n-- | \"type\"\n[apiResponseType] :: ApiResponse -> !(Maybe Text)\n\n-- | \"message\"\n[apiResponseMessage] :: ApiResponse -> !(Maybe Text)\n\n-- | FromJSON ApiResponse\n\n-- | ToJSON ApiResponse\n\n-- | Construct a value of type <a>ApiResponse</a> (by applying it's\n--   required fields, if any)\nmkApiResponse :: ApiResponse\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties Example with C# Swagger Client\nDESCRIPTION: This example demonstrates how to call the TestInlineAdditionalProperties endpoint which tests inline additional properties in a C# client. It passes a generic Object parameter as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestInlineAdditionalPropertiesExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = ;  // Object | request body\n\n            try\n            {\n                // test inline additionalProperties\n                apiInstance.TestInlineAdditionalProperties(param);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestInlineAdditionalProperties: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of an Animal model using a Markdown table. It specifies two properties: 'className' (required) and 'color' (optional), along with their types and descriptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties for the ArrayOfArrayOfNumberOnly model, which contains a single optional property 'array_array_number' that is a nested list of floating-point numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**array_array_number** | **list[list[float]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Using FakeClassnameTags123Api with Authentication in Java\nDESCRIPTION: This example demonstrates how to initialize the API client with API key authentication and call the testClassname method. It shows the complete flow from client configuration to handling API responses and exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of an Order object including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **id** | **Long** |  |  [optional]\n| **petId** | **Long** |  |  [optional]\n| **quantity** | **Integer** |  |  [optional]\n| **shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n| **status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n| **complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Dependency\nDESCRIPTION: XML configuration to add the Swagger Petstore Retrofit2 RX client as a dependency in a Maven project's pom.xml file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-retrofit2-rx</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n\n```\n\n----------------------------------------\n\nTITLE: ApiResponse Model Properties Table\nDESCRIPTION: Markdown table defining the properties, types, and descriptions for the ApiResponse model. The model contains three optional fields: code (integer), type (string), and message (string).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **code** | **integer** |  | [optional] [default to null] |\n| **type** | **string** |  | [optional] [default to null] |\n| **message** | **string** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Loading Perl FakeApi Module\nDESCRIPTION: Instructions for loading the Something::Deep::FakeApi module in a Perl application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/deep_module_test/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse Something::Deep::Object::FakeApi;\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn with Integer return property in Swagger Codegen\nDESCRIPTION: Markdown table defining the ModelReturn class with a single property '_return' of Integer type. The property is marked as optional, indicating it can be null or undefined in implementations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Class Properties in Markdown\nDESCRIPTION: Describes the properties of an Animal class using a markdown table. The class has two properties: className (required) and color (optional). This format is commonly used in Swagger/OpenAPI specifications to define data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding Custom HTTP Headers in Swift using Alamofire\nDESCRIPTION: This snippet shows how to add custom HTTP headers to a request using Alamofire. It demonstrates setting Authorization and Accept headers for a GET request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_23\n\nLANGUAGE: swift\nCODE:\n```\nlet headers = [\n    \"Authorization\": \"Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==\",\n    \"Accept\": \"application/json\"\n]\n\nAlamofire.request(.GET, \"https://httpbin.org/get\", headers: headers)\n         .responseJSON { response in\n             debugPrint(response)\n         }\n```\n\n----------------------------------------\n\nTITLE: Running build_runner for Jaguar Implementation\nDESCRIPTION: Shell commands to run the build_runner tool, which is necessary for Jaguar to implement the API after code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nflutter packages pub run build_runner build\nor\npub run build_runner build\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: Defines ModelBoolean as an enumeration with two possible values: TRUE and FALSE. Each enum value is mapped to its respective boolean literal (true/false).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Documenting Capitalization Model Properties in Swagger\nDESCRIPTION: A markdown table that documents the properties of the Capitalization model class. The table shows property names, their types, descriptions, and optional status. It demonstrates various naming conventions including camelCase, PascalCase, snake_case, and other special formats.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **SmallCamel** | **string** |  | [optional] |\n| **CapitalCamel** | **string** |  | [optional] |\n| **SmallSnake** | **string** |  | [optional] |\n| **CapitalSnake** | **string** |  | [optional] |\n| **SCAETHFlowPoints** | **string** |  | [optional] |\n| **ATT_NAME** | **string** | Name of the pet  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Model Class Properties in C#\nDESCRIPTION: Defines the structure of the ArrayTest model class in the IO.Swagger.Model namespace. It contains three optional properties: a list of strings, a nested list of nullable long integers, and a nested list of ReadOnlyFirst model objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ArrayTest\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **List&lt;string&gt;** |  | [optional] \n**ArrayArrayOfInteger** | **List&lt;List&lt;long?&gt;&gt;** |  | [optional] \n**ArrayArrayOfModel** | **List&lt;List&lt;ReadOnlyFirst&gt;&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown\nDESCRIPTION: Describes the properties of the Client model using a markdown table. The model has a single optional string property named 'Client' with a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Client** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Swagger UI Resources URL Configuration\nDESCRIPTION: The URL to specify in Swagger UI to access the API documentation resources generated by the Sinatra application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/sinatra/README.md#2025-04-20_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://localhost:4567/resources.json\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Defining SpecialModelName Properties\nDESCRIPTION: Markdown table that documents the properties of the SpecialModelName model, showing the special_property_name field of type integer which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**special_property_name** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Snake Case Class Names with PATCH Request\nDESCRIPTION: API endpoint definition for testing class names in snake case format. This endpoint accepts a CLIENT model as the request body and returns the same model type. It requires api_key_query authorization and handles JSON content types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKECLASSNAMETAGS123_API.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# **test_classname**\n> test_classname (body: CLIENT ): detachable CLIENT\n\t\n\nTo test class name in snake case\n\nTo test class name in snake case\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Specifies the 'declawed' property for the Cat model. It is defined as an optional boolean field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Composer for Swagger Generated PHP Server\nDESCRIPTION: This command installs the Lumen framework and other dependencies required for the Swagger generated PHP server using Composer package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/lumen/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ncomposer install\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum Constants in Markdown\nDESCRIPTION: This snippet defines an enumeration named 'Ints' with seven constants representing integers from 0 to 6. Each constant is associated with its corresponding numeric value using Markdown list syntax.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values in Swagger\nDESCRIPTION: Enumeration values for the enumInteger property, containing positive (1) and negative (-1) integer values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n* `_1` (value: `1`)\n\n* `_1_2` (value: `-1`)\n```\n\n----------------------------------------\n\nTITLE: Extended Configuration JSON for Java Code Generation\nDESCRIPTION: Comprehensive JSON configuration file example for customizing Java code generation in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"groupId\": \"com.my.company\",\n  \"artifactId\": \"MyClient\",\n  \"artifactVersion\": \"1.2.0\",\n  \"library\": \"feign\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IO.Swagger.Model.Ints Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the IO.Swagger.Model.Ints class using a markdown table. However, the table is empty, suggesting that this class might not have any properties defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Ints\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Properties in Markdown\nDESCRIPTION: Documentation table that describes the properties of the ModelReturn model, specifically documenting the 'Return_' property which is an optional int32 value with a default of null. The property description contains special characters that are properly escaped.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/go/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Return_** | **int32** | property description  *_/ &#39; \\&quot; &#x3D;end -- \\r\\n \\n \\r | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Installation via Github in pubspec.yaml for Dart\nDESCRIPTION: YAML configuration for including the Swagger API Dart client as a dependency in a project via Github repository. This specifies the package name, version, description, and the Github repository location.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/README.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: swagger\nversion: 1.0.0\ndescription: Swagger API client\ndependencies:\n  swagger:\n    git: https://github.com/GIT_USER_ID/GIT_REPO_ID.git\n      version: 'any'\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for EnumClass Properties\nDESCRIPTION: A markdown table structure defining the properties schema for an EnumClass model. The table appears to be empty, suggesting this may be a template or an enum class without defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Loading Animal Model Package in Perl Swagger Client\nDESCRIPTION: Demonstrates how to load the Animal model package in a Perl application using the WWW::SwaggerClient module. This is required before using the Animal model class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Animal;\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Values with String Representations in Swagger Codegen\nDESCRIPTION: Declaration of an EnumClass with three enum constants and their string value mappings. The enum includes values with underscores, hyphens, and parentheses in their string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Referencing Lagom Framework in Markdown\nDESCRIPTION: This code snippet provides a link to the Lagom Framework website, which is the framework used for this API implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/scala-lagom-server/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n[lagomframework](https://www.lagomframework.com)\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path with Bootstrap\nDESCRIPTION: Example of configuring the base path for the API service during application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Installing the Published Petstore Package\nDESCRIPTION: Command to install the published Petstore API client package from npm registry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/angular2-typescript-petstore@0.0.1 --save\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: This snippet documents the properties of the OuterComposite model class including their types and optional status. It lists three properties: myNumber (BigDecimal), myString (String), and myBoolean (Boolean), all of which are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Category model. Includes two fields: an optional 64-bit integer ID and an optional String name field. Both properties default to null when not specified.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **i64** |  | [optional] [default to null]\n**name** | **String** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Handling GET Request with String Response in Swift using Alamofire\nDESCRIPTION: This snippet shows how to make a GET request using Alamofire and handle the response as a String. It includes validation and prints the success status and response string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_13\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\")\n         .validate()\n         .responseString { response in\n             print(\"Success: \\(response.result.isSuccess)\")\n             print(\"Response String: \\(response.result.value)\")\n         }\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass using a Markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values in Markdown\nDESCRIPTION: Table defining the possible values for the EnumIntegerEnum type, including positive and negative integer values (1 and -1).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Installing Published Angular2 TypeScript Petstore Package\nDESCRIPTION: Command for installing the published Petstore package from npm registry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/angular2-typescript-petstore@0.0.1 --save\n```\n\n----------------------------------------\n\nTITLE: Downloading a Test Swagger Definition File\nDESCRIPTION: This snippet shows how to download a sample Swagger definition file (petstore.yaml) to test the custom generator. This is useful when you don't already have a definition file to work with.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/standalone-gen-dev/standalone-generator-development.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nwget https://raw.githubusercontent.com/swagger-api/swagger-codegen/master/modules/swagger-codegen/src/test/resources/2_0/petstore.yaml -O petstore.yaml\n```\n\n----------------------------------------\n\nTITLE: Importing Angular2 TypeScript Petstore API Module\nDESCRIPTION: TypeScript code to import and use the API module in an Angular application without configuring providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from '@swagger/angular2-typescript-petstore';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum Constants in Swagger\nDESCRIPTION: Defines the ModelBoolean enumeration with two constants: TRUE and FALSE. Each constant maps to its corresponding boolean literal value, true and false respectively.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and descriptions for the ModelReturn class. Contains a single optional integer property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **_return** | **int** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Creating Gradle Wrapper Script for Kotlin Swagger Client\nDESCRIPTION: Command to create the gradle wrapper script required for building the Kotlin Swagger client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngradle wrapper\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient-php via Composer\nDESCRIPTION: Configuration for installing the PHP client via Composer by adding the repository and dependency to composer.json file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/README.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"repositories\": [\n    {\n      \"type\": \"git\",\n      \"url\": \"https://github.com/GIT_USER_ID/GIT_REPO_ID.git\"\n    }\n  ],\n  \"require\": {\n    \"GIT_USER_ID/GIT_REPO_ID\": \"*@dev\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Angular Module Integration with Custom Configuration\nDESCRIPTION: Angular module setup with custom configuration factory for the Petstore API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// configuring providers\nimport { ApiModule, Configuration, ConfigurationParameters } from '@swagger/angular2-typescript-petstore';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values in Swagger\nDESCRIPTION: Enumeration values for the enumStringRequired property, containing UPPER, lower, and empty options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Listing Swagger Codegen Language Files\nDESCRIPTION: Shell command to list available language-specific code generation files in the Swagger Codegen project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ ls -1 modules/swagger-codegen/src/main/java/io/swagger/codegen/languages/\nAbstractJavaJAXRSServerCodegen.java\nAbstractTypeScriptClientCodegen.java\n... (results omitted)\nTypeScriptAngularClientCodegen.java\nTypeScriptNodeClientCodegen.java\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Petstore Server in Docker\nDESCRIPTION: Docker commands to build and run the Swagger Petstore server in a Docker container. This includes changing to the project directory, building the Docker image, and running the container with port mapping.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-interface-controller/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ncd src/IO.Swagger\ndocker build -t io.swagger .\ndocker run -p 5000:5000 io.swagger\n```\n\n----------------------------------------\n\nTITLE: Importing CommonJS Module in TypeScript\nDESCRIPTION: Example of importing the generated module using CommonJS syntax in TypeScript.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-aurelia/default/README.md#2025-04-20_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport localName = require('npmName');\n```\n\n----------------------------------------\n\nTITLE: FormatTest Model Properties Table - Markdown\nDESCRIPTION: Markdown table defining the properties of the FormatTest model class, including property names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Integer** | **int?** |  | [optional] \n**Int32** | **int?** |  | [optional] \n**Int64** | **long?** |  | [optional] \n**Number** | **decimal?** |  | \n**Float** | **float?** |  | [optional] \n**Double** | **double?** |  | [optional] \n**String** | **string** |  | [optional] \n**Byte** | **byte[]** |  | \n**Binary** | **byte[]** |  | [optional] \n**Date** | **DateTime?** |  | \n**DateTime** | **DateTime?** |  | [optional] \n**Uuid** | **Guid?** |  | [optional] \n**Password** | **string** |  |\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Development Dependencies for Swagger Codegen\nDESCRIPTION: This snippet lists the Python packages required for development and testing of the Swagger Codegen project. It includes nose for testing, tox for standardized testing, coverage for code coverage analysis, randomize for test randomization, and flake8 for code linting.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/dev-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nnose\ntox\ncoverage\nrandomize\nflake8\n```\n\n----------------------------------------\n\nTITLE: Defining Special Model Properties in Swagger\nDESCRIPTION: Markdown table documenting the properties of the SpecialModelName class. Contains a single optional numeric property named 'specialPropertyName'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Markdown\nDESCRIPTION: Defines the 'return' property of the ModelReturn class. The property is of type integer, optional, and includes a complex description with various special characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/php/SwaggerClient-php/docs/Model/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**return** | **int** | property description  *_/ ' \\\" =end -- \\r\\n \\n \\r | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Swagger API Specification\nDESCRIPTION: This snippet defines the properties of the ClassModel in a Swagger API specification. It specifies a single optional property 'Class' of type string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ClassModel\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Class** | **string** |  | [optional] \n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Bash\nDESCRIPTION: Command example for testing the \"client\" model. This PATCH request accepts a Client model as input and returns the same model, with JSON content type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli testClientModel\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Model Properties Table in Markdown\nDESCRIPTION: A markdown table that documents the properties of the ArrayTest model class including property names, types, descriptions, and optional status notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **List&lt;string&gt;** |  | [optional] \n**ArrayArrayOfInteger** | **List&lt;List&lt;long?&gt;&gt;** |  | [optional] \n**ArrayArrayOfModel** | **List&lt;List&lt;ReadOnlyFirst&gt;&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Get Order by ID Example in Java\nDESCRIPTION: Shows how to fetch a purchase order by ID. Valid responses are returned for integer IDs <= 5 or > 10. Other values will generate exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagStoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nSwagStoreApi api = new SwagStoreApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'orderId' => 2147483648L\n};\n\ntry {\n    // cross your fingers\n    SwagOrder result = api.getOrderById(params);\n    System.debug(result);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Capitalization Model in Perl for Swagger Client\nDESCRIPTION: This snippet demonstrates how to load the Capitalization model package in a Perl script. It's typically used at the beginning of a script that needs to work with this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Capitalization;\n```\n\n----------------------------------------\n\nTITLE: Logging out a User with Petstore CLI\nDESCRIPTION: This snippet demonstrates how to log out the current user session using the Petstore CLI. It doesn't require any parameters and doesn't return any response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli logoutUser\n```\n\n----------------------------------------\n\nTITLE: Pet Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Pet model including their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the ArrayOfArrayOfNumberOnly model class. Contains a single property 'arrayArrayNumber' which is a nested List of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Name model class including their types, descriptions and optional status. Properties include _Name, SnakeCase, Property and _123Number with their respective data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Name** | **int?** |  | \n**SnakeCase** | **int?** |  | [optional] \n**Property** | **string** |  | [optional] \n**_123Number** | **int?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring and Using FakeClassnameTags123Api in Java\nDESCRIPTION: This snippet demonstrates how to configure the API client, set up authentication, and make a call to the testClassname endpoint. It includes error handling and shows how to process the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: ModelReturn Properties Table Definition in Markdown\nDESCRIPTION: Table defining the properties of the ModelReturn model, containing a single optional integer property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Published Angular2 TypeScript Petstore Package\nDESCRIPTION: Command to install the published @swagger/angular2-typescript-petstore package in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @swagger/angular2-typescript-petstore@0.0.1 --save\n```\n\n----------------------------------------\n\nTITLE: Return Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the Return model schema with property name, type, description and additional notes. Contains a single integer property named 'return' that is optional with a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **return** | **integer** |  | [optional] [default to null] |\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Example of SwaggerPetstore\nDESCRIPTION: JavaScript code demonstrating how to use the SwaggerPetstore library to make an API call.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar api = new SwaggerPetstore.AnotherFakeApi()\n\nvar body = new SwaggerPetstore.Client(); // {Client} client model\n\napi.testSpecialTags(body).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Properties in Markdown\nDESCRIPTION: Specifies the properties of the SpecialModelName class using a markdown table. The class has a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SpecialModelName\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Documenting Client Model Properties in Markdown Table Format\nDESCRIPTION: Markdown table documenting the properties of a Client model. Shows a single property 'client' of type String that is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Making POST Request with URL-Encoded Parameters in Swift using Alamofire\nDESCRIPTION: This snippet demonstrates how to make a POST request with URL-encoded parameters using Alamofire. It shows how complex nested parameters are encoded in the HTTP body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_19\n\nLANGUAGE: swift\nCODE:\n```\nlet parameters = [\n    \"foo\": \"bar\",\n    \"baz\": [\"a\", 1],\n    \"qux\": [\n        \"x\": 1,\n        \"y\": 2,\n        \"z\": 3\n    ]\n]\n\nAlamofire.request(.POST, \"https://httpbin.org/post\", parameters: parameters)\n// HTTP body: foo=bar&baz[]=a&baz[]=1&qux[x]=1&qux[y]=2&qux[z]=3\n```\n\n----------------------------------------\n\nTITLE: Running Swagger Server in Docker\nDESCRIPTION: Docker commands to build and run the Swagger Petstore server in a Docker container. It includes changing to the project directory, building the Docker image, and running the container with port mapping.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2-interface-controller/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\ncd src/IO.Swagger\ndocker build -t io.swagger .\ndocker run -p 5000:5000 io.swagger\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a Dog model in Swagger/OpenAPI format. Specifies a single optional string property 'breed' that can be used to indicate the dog's breed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Definition Table\nDESCRIPTION: Markdown table defining the properties of the EnumArrays class, including their types and optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Maven Dependency Configuration\nDESCRIPTION: XML configuration to add the library as a Maven dependency\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-petstore-okhttp-gson</artifactId>\n  <version>1.0.0</version>\n  <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Testing Body with Query Parameters in FakeApi in Java\nDESCRIPTION: Example showing how to call the testBodyWithQueryParams endpoint which demonstrates using both a request body and query parameters. It accepts a User object as the body and a string query parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nUser body = new User(); // User | \nString query = \"query_example\"; // String | \ntry {\n    apiInstance.testBodyWithQueryParams(body, query);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testBodyWithQueryParams\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Class Properties in Swagger/OpenAPI\nDESCRIPTION: Specifies the properties of a Dog class using Swagger/OpenAPI markdown table format. The class has a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Running a Slim Application with PHP's Built-in Server\nDESCRIPTION: Command to start PHP's built-in development server on localhost port 8000. This allows for quick testing of the Slim application without configuring a dedicated web server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/slim/slim/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ php -S localhost:8000\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Structure in Markdown\nDESCRIPTION: Defines the ModelReturn structure with a single optional integer property 'return_'. The property has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Return_** | **int32** |  | [optional] [default to null]\n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining ContainerException Interface in PHP\nDESCRIPTION: Defines the base exception interface for container-related errors. This interface is used to mark exceptions thrown by the container implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/ContainerInterface.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Interop\\Container\\Exception;\n\n/**\n * Base interface representing a generic exception in a container.\n */\ninterface ContainerException\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Java Array Property Definitions\nDESCRIPTION: Defines three array properties in Java: a List of Strings, a nested List of Long integers, and a nested List of ReadOnlyFirst model objects. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList<String> arrayOfString;  // optional\nList<List<Long>> arrayArrayOfInteger;  // optional\nList<List<ReadOnlyFirst>> arrayArrayOfModel;  // optional\n```\n\n----------------------------------------\n\nTITLE: Creating Alamofire Manager with Ephemeral Configuration\nDESCRIPTION: This snippet demonstrates how to create an Alamofire Manager with an ephemeral session configuration, which doesn't persist cookies, cache, or credentials to disk.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_40\n\nLANGUAGE: swift\nCODE:\n```\nlet configuration = NSURLSessionConfiguration.ephemeralSessionConfiguration()\nlet manager = Alamofire.Manager(configuration: configuration)\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Schema in Markdown\nDESCRIPTION: A Markdown table defining the Capitalization model schema with six string properties demonstrating different naming conventions. All properties are optional with default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **string** |  | [optional] [default to null]\n**CapitalCamel** | **string** |  | [optional] [default to null]\n**small_Snake** | **string** |  | [optional] [default to null]\n**Capital_Snake** | **string** |  | [optional] [default to null]\n**SCA_ETH_Flow_Points** | **string** |  | [optional] [default to null]\n**ATT_NAME** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Specifying Individual Components for Generation in Swagger Codegen\nDESCRIPTION: Examples showing how to selectively generate specific models or supporting files by providing CSV lists of component names. This allows for fine-grained control over which specific files get generated.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generation-selective.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# generate the User and Pet models only\n-Dmodels=User,Pet\n\n# generate the User model and the supportingFile `StringUtil.java`:\n-Dmodels=User -DsupportingFiles=StringUtil.java\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array - Java Swagger Client\nDESCRIPTION: Example of creating multiple users by passing an array of User objects using the Swagger client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the MapTest class, including their types, descriptions, and whether they are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Pimple via Composer\nDESCRIPTION: Command to add Pimple to your project using Composer. This installs version 3.0 or higher of Pimple.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ ./composer.phar require pimple/pimple ~3.0\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of Model200Response model including field names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Feign API Client to Remote Maven Repository\nDESCRIPTION: This command deploys the API client library to a remote Maven repository. It requires proper configuration of the remote repository settings.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/feign/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Referencing OpenAPI Specification in Markdown\nDESCRIPTION: This code snippet provides a link to the OpenAPI Specification documentation, which is used to define the API structure for code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/scala-lagom-server/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n[OpenAPI-Spec](https://github.com/swagger-api/swagger-core/wiki)\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration\nDESCRIPTION: Setting up environment configuration for API base path\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Gradle Dependency Configuration\nDESCRIPTION: Gradle configuration to add the library as a dependency\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-okhttp-gson:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Structure in Markdown\nDESCRIPTION: Documents the properties of the ArrayOfNumberOnly model class. Contains a single property 'arrayNumber' which is an optional array of numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | **[Number]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Properties in Markdown\nDESCRIPTION: Describes the properties of a Pet object using a markdown table. It includes the property names, data types, descriptions, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub Repository Search in Swift using RxSwift\nDESCRIPTION: This snippet demonstrates how to create a reactive search function for GitHub repositories using RxSwift. It throttles user input, filters distinct values, and performs API calls, handling errors and empty queries.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Swift\nCODE:\n```\nlet searchResults = searchBar.rx.text.orEmpty\n    .throttle(0.3, scheduler: MainScheduler.instance)\n    .distinctUntilChanged()\n    .flatMapLatest { query -> Observable<[Repository]> in\n        if query.isEmpty {\n            return .just([])\n        }\n        return searchGitHub(query)\n            .catchErrorJustReturn([])\n    }\n    .observeOn(MainScheduler.instance)\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table in Markdown\nDESCRIPTION: Table documenting the properties of MixedPropertiesAndAdditionalPropertiesClass, including UUID string, datetime object, and a dictionary mapping strings to Animal objects. All properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **uuid** | **str** |  | [optional] |\n| **date_time** | **datetime** |  | [optional] |\n| **map** | **dict(str, Animal)**(Animal.md) |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger API Documentation URL\nDESCRIPTION: URL endpoint to access the Swagger API documentation in JSON format on the local server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/eap/README.md#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Basic Angular Module Configuration\nDESCRIPTION: Configuration of Angular module without custom providers, importing ApiModule and HttpModule\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '@swagger/angular2-typescript-petstore';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundException Interface in PHP\nDESCRIPTION: Defines the exception interface for when entries are not found in the container. Extends the base ContainerException interface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/ContainerInterface.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Interop\\Container\\Exception;\n\n/**\n * No entry was found in the container.\n */\ninterface NotFoundException extends ContainerException\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Starting the Dart Server for Testing\nDESCRIPTION: Command to start the Dart server using 'pub serve' to enable browser-based testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/petstore/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npub serve\n```\n\n----------------------------------------\n\nTITLE: ModelBoolean Enum Definition\nDESCRIPTION: Defines an enumeration type that represents boolean values. Contains two possible values: TRUE mapped to true and FALSE mapped to false.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining Return Model Properties in Swagger\nDESCRIPTION: Documentation table for the Return model class that defines a single property named '_return' of type 'int?' which is optional. The property includes a description with escaped special characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Return\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** | property description  *_/ &#39; \\&quot; &#x3D;end - - \\\\r\\\\n \\\\n \\\\r | [optional]\n```\n\n----------------------------------------\n\nTITLE: Building Petstore Client with GPRBuild\nDESCRIPTION: Command to build the petstore client using the GNAT project build system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ada/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ngprbuild -Ppetstore -p\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Server with Docker\nDESCRIPTION: Docker commands to build and run the Swagger Petstore server in a Docker container. This includes navigating to the server directory, building a Docker image, and running the container with port mapping.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-interface-only/README.md#2025-04-20_snippet_2\n\nLANGUAGE: docker\nCODE:\n```\ncd src/IO.Swagger\ndocker build -t io.swagger .\ndocker run -p 5000:5000 io.swagger\n```\n\n----------------------------------------\n\nTITLE: Installing PromiseKit Extensions via CocoaPods\nDESCRIPTION: This snippet demonstrates how to install PromiseKit extensions for specific Apple frameworks (MapKit and CoreLocation) as CocoaPods subspecs.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_2\n\nLANGUAGE: ruby\nCODE:\n```\npod \"PromiseKit/MapKit\"          # MKDirections().promise().then { /*…*/ }\npod \"PromiseKit/CoreLocation\"    # CLLocationManager.promise().then { /*…*/ }\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Schema in Markdown\nDESCRIPTION: This code snippet defines the properties of a Capitalization object using a Markdown table. It includes various naming conventions and specifies the type and optional status for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Bash Completion on macOS using Homebrew\nDESCRIPTION: This command installs bash-completion on macOS using the Homebrew package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nbrew install bash-completion\n```\n\n----------------------------------------\n\nTITLE: Defining Parameters in Pimple\nDESCRIPTION: Demonstrates how to define parameters in the Pimple container for configuration and global values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n// define some parameters\n$container['cookie_name'] = 'SESSION_ID';\n$container['session_storage_class'] = 'SessionStorage';\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Server on Linux/OS X\nDESCRIPTION: Command to build and run the Swagger-generated ASP.NET Core 3.0 server on Linux or OS X systems using a shell script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsh build.sh\n```\n\n----------------------------------------\n\nTITLE: Defining Return Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Return model using a markdown table. It specifies the name, type, description, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/Return.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Return** | **int?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of a ModelApiResponse class. Contains three optional fields: code (Integer), type (String), and message (String). This structure is commonly used in API response handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Multiple API Modules in Angular\nDESCRIPTION: TypeScript code demonstrating how to import and use multiple API modules from different sources in an Angular application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    // make sure to import the HttpClientModule in the AppModule only,\n    // see https://github.com/angular/angular/issues/20575\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Order Status in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values representing different order statuses. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the HasOnlyReadOnly model. It includes two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Properties Table\nDESCRIPTION: Table defining the properties of the EnumTest class including enumString, enumStringRequired, enumInteger, enumNumber, and outerEnum fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Dart Package from Local Path in pubspec.yaml\nDESCRIPTION: YAML configuration to include the Swagger API client package from a local directory. Shows how to specify the local path dependency in a Dart/Flutter project's pubspec.yaml file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/README.md#2025-04-20_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  swagger:\n    path: /path/to/swagger\n```\n\n----------------------------------------\n\nTITLE: Loading the ArrayOfNumberOnly Model Package in Perl\nDESCRIPTION: Example of how to load the WWW::SwaggerClient::Object::ArrayOfNumberOnly model package in Perl for use in a client application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ArrayOfNumberOnly;\n```\n\n----------------------------------------\n\nTITLE: Installing PromiseKit via CocoaPods\nDESCRIPTION: This snippet shows how to add PromiseKit to a project via CocoaPods. It specifies the Swift version and sets the pod with a version constraint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nuse_frameworks!\nswift_version = \"3.1\"\npod \"PromiseKit\", \"~> 4.3\"\n```\n\n----------------------------------------\n\nTITLE: Defining Category Properties in Markdown for Petstore API\nDESCRIPTION: This snippet defines the properties of the Category model for the Petstore API. It includes two optional properties: 'id' of type Integer and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Integer** |  | [optional] \n**name** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store (Go)\nDESCRIPTION: This function adds a new pet to the store. It requires a Pet object in the request body and uses OAuth authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\nfunc AddPet(ctx context.Context, body Pet) error\n```\n\n----------------------------------------\n\nTITLE: Creating a Service Provider for Pimple\nDESCRIPTION: Shows how to create a reusable service provider by implementing the Pimple\\ServiceProviderInterface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nuse Pimple\\Container;\n\nclass FooProvider implements Pimple\\ServiceProviderInterface\n{\n    public function register(Container $pimple)\n    {\n        // register some services and parameters\n        // on $pimple\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Model Properties Table in Markdown\nDESCRIPTION: A markdown table that documents the properties of the ArrayTest model class, including their types, descriptions, and optional status. The model contains array properties of different complexity levels.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayOfString** | **List&lt;string&gt;** |  | [optional] \n**ArrayArrayOfInteger** | **List&lt;List&lt;long?&gt;&gt;** |  | [optional] \n**ArrayArrayOfModel** | **List&lt;List&lt;ReadOnlyFirst&gt;&gt;** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Structure in Markdown\nDESCRIPTION: Markdown table structure for documenting AnimalFarm model properties. The table is currently empty but defines columns for Name, Type, Description and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the ClassModel class, showing the class field with its type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **str** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: FastRoute Component Interfaces\nDESCRIPTION: Defines the core interfaces used by FastRoute: RouteParser for parsing route strings, DataGenerator for building route data, and Dispatcher for matching incoming requests to routes. Shows the structure and relationships between these components.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nnamespace FastRoute;\n\ninterface RouteParser {\n    public function parse($route);\n}\n\ninterface DataGenerator {\n    public function addRoute($httpMethod, $routeData, $handler);\n    public function getData();\n}\n\ninterface Dispatcher {\n    const NOT_FOUND = 0, FOUND = 1, METHOD_NOT_ALLOWED = 2;\n\n    public function dispatch($httpMethod, $uri);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Structure in Markdown\nDESCRIPTION: Documents the structure of an ArrayOfArrayOfNumberOnly model class with a single property 'arrayArrayNumber' that contains a nested list of BigDecimal numbers. The property is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing the Petstore API Package in Python\nDESCRIPTION: Example of how to import the petstore_api package after installation. This is the first step to using the library in a Python application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/README.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport petstore_api\n```\n\n----------------------------------------\n\nTITLE: Cat Model Definition in Markdown\nDESCRIPTION: Markdown table defining the Cat model class with its property 'declawed'. This property is of Boolean type and is marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration for AMD Loader\nDESCRIPTION: Webpack configuration to disable AMD loader and resolve module errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/README.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model in C# for Swagger API\nDESCRIPTION: This code snippet defines the ArrayOfNumberOnly model class with a single property ArrayNumber. The property is an optional list of nullable decimal values, likely used for API requests or responses that involve arrays of numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\npublic class ArrayOfNumberOnly\n{\n    public List<decimal?> ArrayNumber { get; set; }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ClassModel class using a markdown table. It specifies the name, type, description, and optional notes for each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **str** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Making GET Request with URL-Encoded Parameters in Swift using Alamofire\nDESCRIPTION: This snippet shows how to make a GET request with URL-encoded parameters using Alamofire. The parameters are added to the URL as a query string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_18\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n// https://httpbin.org/get?foo=bar\n```\n\n----------------------------------------\n\nTITLE: Importing API Module Without Configuration\nDESCRIPTION: Angular module configuration to import the API module without custom providers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from '';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpClientModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: Example code demonstrating how to use the testSpecialTags endpoint with the AnotherFakeApi client. Shows initialization of the API client, making the request with a Client model object, and handling the response and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in Markdown\nDESCRIPTION: Defines the properties of the MapTest class using a markdown table. It includes two map properties: mapMapOfString and mapOfEnumString, with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayTest Class Properties in Java\nDESCRIPTION: Defines the properties of the ArrayTest class including arrays of strings, nested arrays of integers, and nested arrays of custom models. Each property is annotated with optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class ArrayTest {\n    private List<String> arrayOfString;  // optional\n    private List<List<Long>> arrayArrayOfInteger;  // optional\n    private List<List<ReadOnlyFirst>> arrayArrayOfModel;  // optional\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Data Model Properties Table in Markdown\nDESCRIPTION: Structured table documenting data model properties with their data types, descriptions and optional status. Includes fields for name (required Integer), snakeCase (optional Integer), property (optional String), and _123Number (optional Integer).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Constants in Swagger Codegen\nDESCRIPTION: Defines three enum values with their corresponding string representations. The enum includes PLACED, APPROVED, and DELIVERED states, likely representing stages in an order processing workflow.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the ReadOnlyFirst class properties, including their types, descriptions and optional status. Contains two string properties: bar and baz, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model using a Markdown table. It includes the property name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Client from Local Path in Dart\nDESCRIPTION: Configuration to include in the pubspec.yaml file to use the Swagger API client package from a local directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/README.md#2025-04-20_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  swagger:\n    path: /path/to/swagger\n```\n\n----------------------------------------\n\nTITLE: Number Enum Values Definition\nDESCRIPTION: Defines floating-point number values for the enum, including positive and negative decimal numbers. Specifies two possible values: 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Creating a Docker Image for the REST Bash Client\nDESCRIPTION: Instructions for building and running a Docker image containing a preconfigured environment for the REST Bash client, including autocompletion and a welcome message.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker build -t my-rest-client .\ndocker run -it my-rest-client\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Definition in C#\nDESCRIPTION: Defines the properties of a User model class including basic user information fields. All properties are nullable/optional and follow C# naming conventions with appropriate data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**Id** | **long?** |  | [optional] \n**Username** | **string** |  | [optional] \n**FirstName** | **string** |  | [optional] \n**LastName** | **string** |  | [optional] \n**Email** | **string** |  | [optional] \n**Password** | **string** |  | [optional] \n**Phone** | **string** |  | [optional] \n**UserStatus** | **int?** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Referencing Fake Petstore YAML for Testing\nDESCRIPTION: This snippet links to a YAML file containing a Petstore API definition with fake endpoints and models, specifically designed for testing purposes. It is located in the Swagger Codegen test resources directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/fixtures/immutable/specifications/v2/specificationSources.txt#2025-04-20_snippet_1\n\nLANGUAGE: Plain Text\nCODE:\n```\npetstorefake.yaml -> https://raw.githubusercontent.com/swagger-api/swagger-codegen/8f1b693bf7727500c24e80a4930b5def6be2ad0e/modules/swagger-codegen/src/test/resources/2_0/petstore-with-fake-endpoints-models-for-testing.yaml\n```\n\n----------------------------------------\n\nTITLE: Starting the Sinatra Server with Rack\nDESCRIPTION: Command to start the Sinatra server on port 4567 using the Rack web server interface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/sinatra/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nrackup -p 4567 config.ru\n```\n\n----------------------------------------\n\nTITLE: Loading Bash Completion Script for Generated Client\nDESCRIPTION: This command loads the generated Bash completion script for the client into the current Bash session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsource output/petstore-cli.bash-completion\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger Client Model Classes in Perl\nDESCRIPTION: This snippet demonstrates how to load various model classes for the Swagger client library in Perl. It imports classes representing different data models used in the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/README.md#2025-04-20_snippet_3\n\nLANGUAGE: Perl\nCODE:\n```\n# load the models\nuse WWW::SwaggerClient::Object::AdditionalPropertiesClass;\nuse WWW::SwaggerClient::Object::Animal;\nuse WWW::SwaggerClient::Object::AnimalFarm;\nuse WWW::SwaggerClient::Object::ApiResponse;\nuse WWW::SwaggerClient::Object::ArrayOfArrayOfNumberOnly;\nuse WWW::SwaggerClient::Object::ArrayOfNumberOnly;\nuse WWW::SwaggerClient::Object::ArrayTest;\nuse WWW::SwaggerClient::Object::Capitalization;\nuse WWW::SwaggerClient::Object::Category;\nuse WWW::SwaggerClient::Object::ClassModel;\nuse WWW::SwaggerClient::Object::Client;\nuse WWW::SwaggerClient::Object::EnumArrays;\nuse WWW::SwaggerClient::Object::EnumClass;\nuse WWW::SwaggerClient::Object::EnumTest;\nuse WWW::SwaggerClient::Object::FormatTest;\nuse WWW::SwaggerClient::Object::HasOnlyReadOnly;\nuse WWW::SwaggerClient::Object::List;\nuse WWW::SwaggerClient::Object::MapTest;\nuse WWW::SwaggerClient::Object::MixedPropertiesAndAdditionalPropertiesClass;\nuse WWW::SwaggerClient::Object::Model200Response;\nuse WWW::SwaggerClient::Object::ModelReturn;\nuse WWW::SwaggerClient::Object::Name;\nuse WWW::SwaggerClient::Object::NumberOnly;\nuse WWW::SwaggerClient::Object::Order;\nuse WWW::SwaggerClient::Object::OuterBoolean;\nuse WWW::SwaggerClient::Object::OuterComposite;\nuse WWW::SwaggerClient::Object::OuterEnum;\nuse WWW::SwaggerClient::Object::OuterNumber;\nuse WWW::SwaggerClient::Object::OuterString;\nuse WWW::SwaggerClient::Object::Pet;\nuse WWW::SwaggerClient::Object::ReadOnlyFirst;\nuse WWW::SwaggerClient::Object::SpecialModelName;\nuse WWW::SwaggerClient::Object::Tag;\nuse WWW::SwaggerClient::Object::User;\nuse WWW::SwaggerClient::Object::Cat;\nuse WWW::SwaggerClient::Object::Dog;\n```\n\n----------------------------------------\n\nTITLE: Generating JAR for Manual Installation\nDESCRIPTION: Maven command to generate the JAR file for manual installation of the Swagger Petstore client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nmvn clean package\n```\n\n----------------------------------------\n\nTITLE: Multiple API Modules Configuration\nDESCRIPTION: Configuration for using multiple API modules from different Swagger files\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule } from 'my-api-path';\nimport { ApiModule as OtherApiModule } from 'my-other-api-path';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    ApiModule,\n    OtherApiModule,\n    HttpClientModule\n  ]\n})\nexport class AppModule {\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown List of Companies Using Swagger Codegen\nDESCRIPTION: A markdown-formatted list of companies and organizations, including their website links, that use Swagger Codegen in production environments.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/consumers.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Companies leveraging Swagger Codegen\n\nHere are some companies/projects using Swagger Codegen in production. To add your company/project to the list, please raise a PR.\n\n- [Acando](https://www.acando.de/)\n- [Accengage](https://www.accengage.com/)\n...\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Tests\nDESCRIPTION: Command to execute the PHPUnit test suite for the Slim Framework.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/slim/slim/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ phpunit\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Defines the properties of the HasOnlyReadOnly model using a Markdown table. The model has two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Constants Definition in Markdown\nDESCRIPTION: Defines a set of integer constants from 0 to 6 using markdown enumeration format. Each constant is defined as a key-value pair where the key is in NUMBER_X format and the value is the corresponding integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Retrofit Client to Remote Maven Repository\nDESCRIPTION: This command deploys the API client library to a remote Maven repository. It requires proper configuration of the remote repository settings before execution.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Defining MixedPropertiesAndAdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: This snippet outlines the properties of the MixedPropertiesAndAdditionalPropertiesClass model. It includes a uuid (String), dateTime (Date), and a map of Animals. All properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.MixedPropertiesAndAdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | **String** |  | [optional] \n**dateTime** | **Date** |  | [optional] \n**map** | [**{String: Animal}**](Animal.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties with Go Types in Markdown\nDESCRIPTION: This table defines all properties for the FormatTest model, including their Go types, optionality, and default values. It maps various primitive and complex data types for API interactions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Integer** | **int32** |  | [optional] [default to null]\n**Int32_** | **int32** |  | [optional] [default to null]\n**Int64_** | **int64** |  | [optional] [default to null]\n**Number** | **float32** |  | [default to null]\n**Float** | **float32** |  | [optional] [default to null]\n**Double** | **float64** |  | [optional] [default to null]\n**String_** | **string** |  | [optional] [default to null]\n**Byte_** | **string** |  | [default to null]\n**Binary** | **string** |  | [optional] [default to null]\n**Date** | **string** |  | [default to null]\n**DateTime** | [**time.Time**](time.Time.md) |  | [optional] [default to null]\n**Uuid** | **string** |  | [optional] [default to null]\n**Password** | **string** |  | [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Store API Instance Type Declarations in Haskell\nDESCRIPTION: Type instance declarations for the Store API endpoints, specifying body parameters and supported MIME types (XML and JSON) for each operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_45\n\nLANGUAGE: haskell\nCODE:\n```\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.Store.PlaceOrder SwaggerPetstore.Model.Order\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.PlaceOrder SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.PlaceOrder SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.GetOrderById SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.GetOrderById SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.GetInventory SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.DeleteOrder SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.Store.DeleteOrder SwaggerPetstore.MimeTypes.MimeJSON\n```\n\n----------------------------------------\n\nTITLE: Building and Testing Kotlin Swagger Client Library\nDESCRIPTION: Command to run all tests and package the Kotlin Swagger client library using the Gradle wrapper script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew check assemble\n```\n\n----------------------------------------\n\nTITLE: CocoaPods Installation for RxSwift and RxCocoa\nDESCRIPTION: This snippet shows the Podfile configuration for installing RxSwift and RxCocoa using CocoaPods. It also includes RxBlocking and RxTest for testing purposes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Ruby\nCODE:\n```\n# Podfile\nuse_frameworks!\n\ntarget 'YOUR_TARGET_NAME' do\n    pod 'RxSwift',    '~> 3.0'\n    pod 'RxCocoa',    '~> 3.0'\nend\n\n# RxTests and RxBlocking make the most sense in the context of unit/integration tests\ntarget 'YOUR_TESTING_TARGET' do\n    pod 'RxBlocking', '~> 3.0'\n    pod 'RxTest',     '~> 3.0'\nend\n```\n\n----------------------------------------\n\nTITLE: Expected Test Output in Console\nDESCRIPTION: The expected console output when tests run successfully, showing all 16 tests passing against the Petstore API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/petstore/README.md#2025-04-20_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nObservatory listening at http://127.0.0.1:39067/\nunittest-suite-wait-for-done\nGET http://petstore.swagger.io/v2/pet/957639 404 (Not Found)\nGET http://petstore.swagger.io/v2/pet/525946 404 (Not Found)\nGET http://petstore.swagger.io/v2/store/order/29756 404 (Not Found)\nGET http://petstore.swagger.io/v2/user/Riddlem325 404 (Not Found)\nPASS: Pet API  adds a new pet and gets it by id\nPASS: Pet API  doesn't get non-existing pet by id\nPASS: Pet API  deletes existing pet by id\nPASS: Pet API  updates pet with form\nPASS: Pet API  updates existing pet\nPASS: Pet API  finds pets by status\nPASS: Pet API  finds pets by tag\nPASS: Pet API  uploads a pet image\nPASS: Store API  places an order and gets it by id\nPASS: Store API  deletes an order\nPASS: Store API  gets the store inventory\nPASS: User API  creates a user\nPASS: User API  creates users with list input\nPASS: User API  updates a user\nPASS: User API  deletes a user\nPASS: User API  logs a user in\n\nAll 16 tests passed.\nunittest-suite-success\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Values in Swagger Codegen\nDESCRIPTION: Defines the OuterEnum enumeration with three possible values: PLACED, APPROVED, and DELIVERED. Each enum value is mapped to a string representation that can be used in API requests and responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: This snippet defines the properties of a Dog model in Swagger/OpenAPI specification format using a markdown table. It specifies a single optional property 'breed' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the Pet Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Pet model from the Swagger API package in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Including Swagger Specification in JSON Payload\nDESCRIPTION: This JSON payload demonstrates how to include the Swagger specification directly in the request body instead of using a URL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/online-generators.md#2025-04-20_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"options\": {},\n  \"spec\": {\n    \"swagger\": \"2.0\",\n    \"info\": {\n      \"version\": \"1.0.0\",\n      \"title\": \"Test API\"\n    },\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Carthage for RxSwift Integration in Swift\nDESCRIPTION: This Cartfile entry shows how to integrate RxSwift into a project using Carthage, specifying version 3.0 or higher.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_3\n\nLANGUAGE: Plain Text\nCODE:\n```\ngithub \"ReactiveX/RxSwift\" ~> 3.0\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum in Markdown\nDESCRIPTION: This snippet defines the ArrayEnumEnum enumeration with its possible values: FISH and CRAB.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Setting Execute Permissions for Generated Bash Client\nDESCRIPTION: This command sets the execute permissions for the generated Bash client script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ chmod +x generated/bash/petstore/petstore-cli\n```\n\n----------------------------------------\n\nTITLE: Creating a Pimple Container in PHP\nDESCRIPTION: Demonstrates how to create a new Pimple Container instance. This is the starting point for using Pimple in your application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse Pimple\\Container;\n\n$container = new Container();\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model using a markdown table. It defines a single optional property 'arrayNumber' of type List<BigDecimal>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Model Properties Definition\nDESCRIPTION: Defines the core properties of the EnumArrays model including justSymbol (String) and arrayEnum (String array) fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | **String** |  | [optional] \n**arrayEnum** | **[String]** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Updating User Information in Java\nDESCRIPTION: Example demonstrates updating an existing user's information. It takes a username to identify the user and a User object containing the updated information, with proper exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | name that need to be deleted\nUser body = new User(); // User | Updated user object\ntry {\n    apiInstance.updateUser(username, body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#updateUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Tag Properties Table Definition in Markdown\nDESCRIPTION: A markdown table that defines the properties of a Tag object, including their types, descriptions, and optional status. The Tag model has two properties: an optional Long id and an optional String name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ContainerException Interface in PHP\nDESCRIPTION: This snippet defines the ContainerException interface, which represents a generic exception in a container. It is a base interface with no specific methods.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/container-interop/container-interop/docs/ContainerInterface.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Interop\\Container\\Exception;\n\n/**\n * Base interface representing a generic exception in a container.\n */\ninterface ContainerException\n{\n}\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the properties of EnumTest class including enum fields for strings, integers, and numbers. Properties include optional and required enum fields with references to their enum definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger UI Documentation\nDESCRIPTION: Instructions for viewing the API documentation using Swagger UI. The documentation can be accessed by pointing a web browser to the localhost address on port 8080.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/springboot-beanvalidation/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nhttp://localhost:8080/\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of SwaggerClient-php\nDESCRIPTION: Code showing how to include the autoload.php file for manual installation of the PHP client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/php/SwaggerClient-php/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n    require_once('/path/to/SwaggerClient-php/vendor/autoload.php');\n```\n\n----------------------------------------\n\nTITLE: Defining SwaggerPetstoreRequest in Haskell\nDESCRIPTION: Defines the SwaggerPetstoreRequest data type and associated functions for manipulating request parameters, headers, and body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_4\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Represents a request.\n--   \n--   Type Variables:\n--   \n--   <ul>\n--   <li>req - request operation</li>\n--   <li>contentType - <a>MimeType</a> associated with request body</li>\n--   <li>res - response model</li>\n--   <li>accept - <a>MimeType</a> associated with response body</li>\n--   </ul>\ndata SwaggerPetstoreRequest req contentType res accept\nSwaggerPetstoreRequest :: Method -> [ByteString] -> Params -> [TypeRep] -> SwaggerPetstoreRequest req contentType res accept\n\n-- | Method of SwaggerPetstoreRequest\n[rMethod] :: SwaggerPetstoreRequest req contentType res accept -> Method\n\n-- | Endpoint of SwaggerPetstoreRequest\n[rUrlPath] :: SwaggerPetstoreRequest req contentType res accept -> [ByteString]\n\n-- | params of SwaggerPetstoreRequest\n[rParams] :: SwaggerPetstoreRequest req contentType res accept -> Params\n\n-- | types of auth methods\n[rAuthTypes] :: SwaggerPetstoreRequest req contentType res accept -> [TypeRep]\n\n-- | <a>rMethod</a> Lens\nrMethodL :: Lens_' (SwaggerPetstoreRequest req contentType res accept) Method\n\n-- | <a>rUrlPath</a> Lens\nrUrlPathL :: Lens_' (SwaggerPetstoreRequest req contentType res accept) [ByteString]\n\n-- | <a>rParams</a> Lens\nrParamsL :: Lens_' (SwaggerPetstoreRequest req contentType res accept) Params\n\n-- | <a>rParams</a> Lens\nrAuthTypesL :: Lens_' (SwaggerPetstoreRequest req contentType res accept) [TypeRep]\n```\n\n----------------------------------------\n\nTITLE: Installing a Published API Module with npm\nDESCRIPTION: Command to install the published API module as a dependency in a consuming project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ --save\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values in Markdown\nDESCRIPTION: Defines the possible values for the EnumIntegerEnum used in the EnumTest model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for AnimalFarm Properties\nDESCRIPTION: A markdown table structure defining the properties of the AnimalFarm model, including columns for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n```\n\n----------------------------------------\n\nTITLE: InnerEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for the InnerEnum type used in the mapOfEnumString property. Contains two possible values: UPPER and lower.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\n```\n\n----------------------------------------\n\nTITLE: Importing Tag Model in Dart\nDESCRIPTION: Shows how to import the Tag model class from the Swagger API package in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties in Markdown\nDESCRIPTION: Lists the properties of the Name model, including their names, types, descriptions, and optional flags. The properties include _Name, SnakeCase, Property, and _123Number.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Name\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_Name** | **int?** |  | \n**SnakeCase** | **int?** |  | [optional] \n**Property** | **string** |  | [optional] \n**_123Number** | **int?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the EnumStringRequiredEnum used in the EnumTest model. It includes uppercase, lowercase, and empty string options, similar to EnumStringEnum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Output Directories and Build Flags\nDESCRIPTION: Configures library output paths and sets C++11 compilation flag. Also sets default build type to Release if not specified.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/cpprest/CMakeLists.txt#2025-04-20_snippet_1\n\nLANGUAGE: cmake\nCODE:\n```\nset(CMAKE_LIBRARY_DIR ${PROJECT_SOURCE_DIR}/lib)\nset(LIBRARY_OUTPUT_PATH ${CMAKE_LIBRARY_DIR})\n\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE Release)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the SpecialModelName model using a markdown table. It specifies a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring PetStoreTest Project Build with CMake\nDESCRIPTION: This CMake configuration file sets up the build environment for the PetStoreTest project. It defines dependencies (glib-2.0, json-glib-1.0, libcurl), compiler flags, includes source files from both local and parent directories, and configures linking against required libraries. The output executable is placed in the bin directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/tizen/PetStoreTest/CMakeLists.txt#2025-04-20_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\nCMAKE_MINIMUM_REQUIRED(VERSION 2.6)\nPROJECT(\"PetStoreTest\")\nINCLUDE(GNUInstallDirs)\n\nSET(target ${PROJECT_NAME})\n\n# Dependencies\nSET(dependents \"glib-2.0 json-glib-1.0 libcurl\")\nINCLUDE(FindPkgConfig)\npkg_check_modules(pkgs REQUIRED ${dependents})\nFOREACH(flag ${pkgs_CFLAGS})\n\tSET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${flag}\")\nENDFOREACH(flag)\n\nADD_DEFINITIONS(-O2 -w -fPIC -fvisibility=default -Wno-unused-variable -Wno-shadow -Wno-cast-qual -fpermissive)\nSET(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -fPIC\")\n\nFILE(GLOB_RECURSE SRCS \"./src/*.cpp\" \"../src/*.cpp\")\nadd_executable(${PROJECT_NAME} ${SRCS})\n\ninclude_directories(${pkgs_INCLUDE_DIRS})\nlink_directories(${pkgs_LIBRARY_DIRS})\ntarget_link_libraries(${PROJECT_NAME} ${pkgs_LIBRARIES})\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Java using Swagger Client\nDESCRIPTION: Example of creating a single user using the Swagger API client. The operation requires a User object as input and can only be performed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Schema in Swagger/OpenAPI\nDESCRIPTION: Defines a data model schema for a NumberOnly object that contains a single optional numeric field 'justNumber' of type BigDecimal. This model definition is part of a Swagger/OpenAPI specification used for API documentation and code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Schema in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the Client model properties for a Swagger/OpenAPI specification. Contains a single optional string property named 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Building and Installing the Angular2 TypeScript Petstore Package\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources for the Petstore API client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v6/npm/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in C#\nDESCRIPTION: Example code demonstrating how to test inline additional properties with a simple object parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestInlineAdditionalPropertiesExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var param = ;  // Object | request body\n\n            try\n            {\n                apiInstance.TestInlineAdditionalProperties(param);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestInlineAdditionalProperties: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Package with npm\nDESCRIPTION: Commands to install dependencies and build the TypeScript package, converting TypeScript sources to JavaScript.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/additional-properties-expected/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Pushing Generated SDK to GitHub Using Shell Script\nDESCRIPTION: This snippet shows how to use the generated git_push.sh script to push the newly created SDK to GitHub. The script is automatically created during the code generation process and handles the Git operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/workflow-integration.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd /var/tmp/perl/petstore\n/bin/sh ./git_push.sh\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum in Markdown\nDESCRIPTION: Specifies the enum values for ArrayEnumEnum, which includes 'fish' and 'crab'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties for SwaggerPetstore in Markdown\nDESCRIPTION: This snippet defines the properties of the Client model for the SwaggerPetstore API. It specifies a single optional property 'client' of type String. The table format is commonly used in Swagger/OpenAPI documentation to describe model schemas.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Model Properties Table in Markdown\nDESCRIPTION: Markdown table structure for documenting Boolean model properties in Swagger/OpenAPI specification. The table includes columns for name, type, description and notes, though no specific properties are defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/Boolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table in Swagger Documentation\nDESCRIPTION: Markdown table defining the properties of MixedPropertiesAndAdditionalPropertiesClass including their types, descriptions, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | **String** |  | [optional] \n**dateTime** | **Date** |  | [optional] \n**map** | [**{String: Animal}**](Animal.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Installing Published Package via NPM\nDESCRIPTION: Command to install the published arrayAndAnyTest package as a dependency in a project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/array-and-object-expected/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install arrayAndAnyTest@1.0.2 --save\n```\n\n----------------------------------------\n\nTITLE: Defining String-Based Enum Values in TypeScript\nDESCRIPTION: Defines an enumeration with three string values using special characters and formatting. The enum includes values prefixed with underscores and wrapped in various delimiters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum EnumClass {\n  _ABC = \"_abc\",\n  _EFG = \"-efg\",\n  _XYZ_ = \"(xyz)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration for AMD Loader\nDESCRIPTION: Webpack configuration to disable AMD loader and resolve module errors.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/README.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for OuterEnum Properties\nDESCRIPTION: Property table structure for documenting OuterEnum model attributes, though no properties are currently defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n```\n\n----------------------------------------\n\nTITLE: Installing Required Ruby Gems for Swagger-Sinatra Integration\nDESCRIPTION: Lists the necessary Ruby gems that need to be installed to run a Swagger-enabled Sinatra application. The two required dependencies are sinatra (the core framework) and sinatra-cross_origin (for handling cross-origin requests).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/sinatra/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsinatra\nsinatra-cross_origin\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Unused Imports in Scala\nDESCRIPTION: Command to run Scalafix for removing unused imports after server generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/finch/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nscalafix RemoveUnusedImports\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore Client to Remote Maven Repository\nDESCRIPTION: Maven command to deploy the Swagger Petstore client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\nmvn clean deploy\n```\n\n----------------------------------------\n\nTITLE: Defining Python Test Dependencies for Swagger Codegen\nDESCRIPTION: This snippet lists the Python packages required for testing the Swagger Codegen project. It specifies minimum versions for each package, including coverage for code coverage analysis, nose for unit testing, pluggy and py which are pytest dependencies, and randomize for test randomization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/test-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncoverage>=4.0.3\nnose>=1.3.7\npluggy>=0.3.1\npy>=1.4.31\nrandomize>=0.13\n```\n\n----------------------------------------\n\nTITLE: Creating a Pimple Container\nDESCRIPTION: Demonstrates how to create a new instance of the Pimple Container class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nuse Pimple\\Container;\n\n$container = new Container();\n```\n\n----------------------------------------\n\nTITLE: Installing Required Ruby Gems for Swagger-Sinatra Integration\nDESCRIPTION: Lists the required Ruby gems that need to be installed as prerequisites for the Swagger-Sinatra integration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/sinatra/README.md#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nsinatra\nsinatra-cross_origin\n```\n\n----------------------------------------\n\nTITLE: Referencing Petstore YAML for Sample Servers\nDESCRIPTION: This snippet links to a YAML file containing a Petstore API definition specifically designed for testing sample server generation. It is located in the Swagger Codegen test resources directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/fixtures/immutable/specifications/v2/specificationSources.txt#2025-04-20_snippet_3\n\nLANGUAGE: Plain Text\nCODE:\n```\nsamplesServers.yaml -> https://raw.githubusercontent.com/swagger-api/swagger-codegen/343d3d8448d7f975d4cd856371b771a105ac5481/modules/swagger-codegen/src/test/resources/2_0/petstore-for-samples-servers.yaml\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Model Properties Table for Swagger Petstore API\nDESCRIPTION: A markdown table defining the properties of the ReadOnlyFirst model, including the property names, types, descriptions, and optional notes. The model has two optional string properties named 'bar' and 'baz'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**baz** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing NuGet Dependencies for C# SDK\nDESCRIPTION: Commands for installing required NuGet packages including RestSharp, Newtonsoft.Json, and JsonSubTypes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nInstall-Package RestSharp\nInstall-Package Newtonsoft.Json\nInstall-Package JsonSubTypes\n```\n\n----------------------------------------\n\nTITLE: Properties Table for MixedPropertiesAndAdditionalPropertiesClass\nDESCRIPTION: Markdown table defining the properties, types, and optional status of the MixedPropertiesAndAdditionalPropertiesClass fields\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **uuid** | [**UUID**](UUID.md) |  |  [optional] |\n| **dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional] |\n| **map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the FormatTest model using a Markdown table. It specifies the name, type, description, and optional status for each property. The model includes various data types such as Integer, Long, BigDecimal, Float, Double, String, byte[], LocalDate, OffsetDateTime, and UUID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the EnumArrays model, including JustSymbol (a string) and ArrayEnum (an array of strings). Both properties are optional and have default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# EnumArrays\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustSymbol** | **string** |  | [optional] [default to null]\n**ArrayEnum** | **[]string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Listing Routes in Rails 5 Swagger Project\nDESCRIPTION: Displays all defined routes in the Rails 5 project with Swagger integration using the rake command.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/rails5/README.md#2025-04-20_snippet_2\n\nLANGUAGE: Shell\nCODE:\n```\nbin/rake routes\n```\n\n----------------------------------------\n\nTITLE: Configuring Alamofire in Podfile\nDESCRIPTION: Example Podfile configuration for integrating Alamofire into an iOS project. Specifies the CocoaPods source, platform requirements, and dependency version.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '9.0'\nuse_frameworks!\n\ntarget '<Your Target Name>' do\n    pod 'Alamofire', '~> 3.4'\nend\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Angular2 TypeScript Petstore Package\nDESCRIPTION: Command to install an unpublished @swagger/angular2-typescript-petstore package from a local directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE/dist --save\n```\n\n----------------------------------------\n\nTITLE: Defining User API Instance Type Declarations in Haskell\nDESCRIPTION: Type instance declarations for the User API endpoints, specifying the body parameters and supported MIME types (XML and JSON) for each operation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_43\n\nLANGUAGE: haskell\nCODE:\n```\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.User.UpdateUser SwaggerPetstore.Model.User\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.UpdateUser SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.UpdateUser SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.LogoutUser SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.LogoutUser SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.LoginUser SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.LoginUser SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.GetUserByName SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.GetUserByName SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.DeleteUser SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.DeleteUser SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.User.CreateUsersWithListInput SwaggerPetstore.Model.Body\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.CreateUsersWithListInput SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.CreateUsersWithListInput SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.User.CreateUsersWithArrayInput SwaggerPetstore.Model.Body\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.CreateUsersWithArrayInput SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.CreateUsersWithArrayInput SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.User.CreateUser SwaggerPetstore.Model.User\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.CreateUser SwaggerPetstore.MimeTypes.MimeXML\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.User.CreateUser SwaggerPetstore.MimeTypes.MimeJSON\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown\nDESCRIPTION: Specifies the 'breed' property of the Dog model as an optional string. This markdown table format is commonly used in Swagger/OpenAPI documentation to define model properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| --- | --- | --- | --- |\n| **breed** | **str** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Accessing Petstore Swagger JSON Definition\nDESCRIPTION: This snippet provides a link to the official Petstore Swagger JSON definition, which is commonly used for testing and demonstration purposes in Swagger-related projects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/fixtures/immutable/specifications/v2/specificationSources.txt#2025-04-20_snippet_0\n\nLANGUAGE: Plain Text\nCODE:\n```\npetstore.json -> https://petstore.swagger.io/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: OAuth Bearer Token for API Testing\nDESCRIPTION: A long-lived OAuth bearer token for testing API endpoints. This token is issued by the undertow-server-oauth2 and can be used to access protected endpoints during development.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/undertow/README.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nBearer eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJ1cm46Y29tOm5ldHdvcmtudDpvYXV0aDI6djEiLCJhdWQiOiJ1cm46Y29tLm5ldHdvcmtudCIsImV4cCI6MTc4ODEzMjczNSwianRpIjoiNWtyM2ZWOHJaelBZNEJrSnNYZzFpQSIsImlhdCI6MTQ3Mjc3MjczNSwibmJmIjoxNDcyNzcyNjE1LCJ2ZXJzaW9uIjoiMS4wIiwidXNlcl9pZCI6InN0ZXZlIiwidXNlcl90eXBlIjoiRU1QTE9ZRUUiLCJjbGllbnRfaWQiOiJkZGNhZjBiYS0xMTMxLTIyMzItMzMxMy1kNmYyNzUzZjI1ZGMiLCJzY29wZSI6WyJhcGkuciIsImFwaS53Il19.gteJiy1uao8HLeWRljpZxHWUgQfofwmnFP-zv3EPUyXjyCOy3xclnfeTnTE39j8PgBwdFASPcDLLk1YfZJbsU6pLlmYXLtdpHDBsVmIRuch6LFPCVQ3JdqSQVci59OhSK0bBThGWqCD3UzDI_OnX4IVCAahcT9Bu94m5u_H_JNmwDf1XaP3Lt4I34buYMuRD9stchsnZi-tuIRkL13FARm1XA9aPZUMUXFdedBWDXo1zMREQ_qCJXOpaZDJM9Im0rIkq9wTEVU00pbRp_Vcdya3dfkFteBMHiwFVt6VNQaco5BXURDAIzXidwQxNEbX1ek03wra8AIani65ZK7fy_w\n```\n\n----------------------------------------\n\nTITLE: Defining Binary Data Types in Haskell\nDESCRIPTION: Defines ByteArray and Binary types for handling base64 encoded and raw binary data in API requests and responses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_9\n\nLANGUAGE: haskell\nCODE:\n```\n-- | base64 encoded characters\nnewtype ByteArray\nByteArray :: ByteString -> ByteArray\n[unByteArray] :: ByteArray -> ByteString\n\n-- | read base64 encoded characters\n_readByteArray :: Monad m => Text -> m ByteArray\n\n-- | show base64 encoded characters\n_showByteArray :: ByteArray -> Text\n\n-- | any sequence of octets\nnewtype Binary\nBinary :: ByteString -> Binary\n[unBinary] :: Binary -> ByteString\n_readBinaryBase64 :: Monad m => Text -> m Binary\n_showBinaryBase64 :: Binary -> Text\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom XML Response Serializer for Alamofire\nDESCRIPTION: This snippet demonstrates how to extend Alamofire.Request to add custom response serialization. It creates an XML response serializer using the Ono library and handles various error cases through the custom BackendError type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_43\n\nLANGUAGE: swift\nCODE:\n```\nextension Request {\n    public static func XMLResponseSerializer() -> ResponseSerializer<ONOXMLDocument, BackendError> {\n        return ResponseSerializer { request, response, data, error in\n            guard error == nil else { return .Failure(.Network(error: error!)) }\n\n            guard let validData = data else {\n                return .Failure(.DataSerialization(reason: \"Data could not be serialized. Input data was nil.\"))\n            }\n\n            do {\n                let XML = try ONOXMLDocument(data: validData)\n                return .Success(XML)\n            } catch {\n                return .Failure(.XMLSerialization(error: error as NSError))\n            }\n        }\n    }\n\n    public func responseXMLDocument(completionHandler: Response<ONOXMLDocument, BackendError> -> Void) -> Self {\n        return response(responseSerializer: Request.XMLResponseSerializer(), completionHandler: completionHandler)\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Configuration JSON for Java Code Generation\nDESCRIPTION: Example JSON configuration file for customizing Java code generation in Swagger Codegen.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators-configuration.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"apiPackage\" : \"petstore\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing API Interface\nDESCRIPTION: Sample PHP implementation of the PetApiInterface showing OAuth2 configuration and API method implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/PetApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\PetApiInterface;\n\nclass PetApi implements PetApiInterface // An interface is autogenerated\n{\n\n    /**\n     * Configure OAuth2 access token for authorization: petstore_auth\n     */\n    public function setpetstore_auth($oauthToken)\n    {\n        // Retrieve logged in user from $oauthToken ...\n    }\n    \n    /**\n     * Implementation of PetApiInterface#addPet\n     */\n    public function addPet(Pet $body)\n    {\n        // Implement the operation ...\n    }\n\n    // Other operation methods ...\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Dog Model Properties in Markdown\nDESCRIPTION: Specifies the properties of a Dog model using a markdown table. The model has a single optional property 'breed' of type string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **str** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Tag Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a Tag model, including field names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Class Names with C# Swagger Client\nDESCRIPTION: Example implementation showing how to use the FakeClassnameTags123Api to test class names in snake case. Demonstrates API key authentication setup and error handling while making a PATCH request to the /fake_classname_test endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClassnameExample\n    {\n        public void main()\n        {\n            // Configure API key authorization: api_key_query\n            Configuration.Default.AddApiKey(\"api_key_query\", \"YOUR_API_KEY\");\n            // Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n            // Configuration.Default.AddApiKeyPrefix(\"api_key_query\", \"Bearer\");\n\n            var apiInstance = new FakeClassnameTags123Api();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test class name in snake case\n                ModelClient result = apiInstance.TestClassname(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeClassnameTags123Api.TestClassname: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown Table\nDESCRIPTION: This snippet defines the properties of a Tag object using a markdown table. It specifies two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the EnumTest model using a markdown table. It specifies the name, type, description, and optional characteristics of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**EnumString** | **string** |  | [optional] [default to null]\n**EnumStringRequired** | **string** |  | [default to null]\n**EnumInteger** | **int32** |  | [optional] [default to null]\n**EnumNumber** | **float64** |  | [optional] [default to null]\n**OuterEnum** | [***OuterEnum**](OuterEnum.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger UI Interface\nDESCRIPTION: Command to open the Swagger UI documentation interface in a browser. The interface will be available at http://localhost:8080/docs after starting the server.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/nodejs/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nopen http://localhost:8080/docs\n```\n\n----------------------------------------\n\nTITLE: Configuring Podfile for Alamofire Integration\nDESCRIPTION: Sample Podfile configuration that specifies Alamofire as a dependency for an iOS project. It targets iOS 10.0 and uses Alamofire version 4.9.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Ruby\nCODE:\n```\nsource 'https://github.com/CocoaPods/Specs.git'\nplatform :ios, '10.0'\nuse_frameworks!\n\ntarget '<Your Target Name>' do\n  pod 'Alamofire', '~> 4.9'\nend\n```\n\n----------------------------------------\n\nTITLE: AnotherFake Module with TestSpecialTags Endpoint Definition in Haskell\nDESCRIPTION: Defines the AnotherFake module with a TestSpecialTags endpoint that accepts a Client model as body parameter. The endpoint is accessible via PATCH and uses JSON for both request and response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_52\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.API.AnotherFake\n\n-- | <pre>\n--   PATCH /another-fake/dummy\n--   </pre>\n--   \n--   To test special tags\n--   \n--   To test special tags\ntestSpecialTags :: (Consumes TestSpecialTags MimeJSON, MimeRender MimeJSON Client) => Client -> SwaggerPetstoreRequest TestSpecialTags MimeJSON Client MimeJSON\ndata TestSpecialTags\n\n-- | <i>Body Param</i> \"body\" - client model\n\n-- | <pre>\n--   application/json\n--   </pre>\n\n-- | <pre>\n--   application/json\n--   </pre>\ninstance SwaggerPetstore.Core.HasBodyParam SwaggerPetstore.API.AnotherFake.TestSpecialTags SwaggerPetstore.Model.Client\ninstance SwaggerPetstore.MimeTypes.Consumes SwaggerPetstore.API.AnotherFake.TestSpecialTags SwaggerPetstore.MimeTypes.MimeJSON\ninstance SwaggerPetstore.MimeTypes.Produces SwaggerPetstore.API.AnotherFake.TestSpecialTags SwaggerPetstore.MimeTypes.MimeJSON\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table for SpecialModelName\nDESCRIPTION: Markdown table defining the properties for the SpecialModelName model class. Contains a single optional property 'specialPropertyName' of type Long.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing URLStringConvertible on User Model for Type-Safe Routing\nDESCRIPTION: Extends the User model to conform to URLStringConvertible, allowing User objects to be directly passed to Alamofire request methods. This creates type-safe routing by mapping domain models to specific API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_51\n\nLANGUAGE: swift\nCODE:\n```\nextension User: URLStringConvertible {\n    static let baseURLString = \"http://example.com\"\n\n    var URLString: String {\n        return User.baseURLString + \"/users/\\(username)/\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting HasOnlyReadOnly Properties in Ruby\nDESCRIPTION: Markdown table documenting the properties of the HasOnlyReadOnly class. The class contains two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**foo** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumIntegerEnum, which includes 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: EnumIntegerEnum\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumNumberEnum used in the EnumTest class. It includes two floating-point values: 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumNumberEnum\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties table for the AnimalFarm model. Currently, the table is empty, indicating that no properties have been defined for this model yet.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Installing Petstore API Package using Setuptools\nDESCRIPTION: Shows how to install the petstore-api Python package using Setuptools with a user-specific installation. This method allows users to install the package without affecting other users on the system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npython setup.py install --user\n```\n\n----------------------------------------\n\nTITLE: Running Client Examples with Specific API Operations\nDESCRIPTION: Commands to run the example client with various API operations such as TestSpecialTags, FakeOuterBooleanSerialize, AddPet, etc.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rust-server/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo run --example client TestSpecialTags\ncargo run --example client FakeOuterBooleanSerialize\ncargo run --example client FakeOuterCompositeSerialize\ncargo run --example client FakeOuterNumberSerialize\ncargo run --example client FakeOuterStringSerialize\ncargo run --example client TestBodyWithQueryParams\ncargo run --example client TestClientModel\ncargo run --example client TestEndpointParameters\ncargo run --example client TestEnumParameters\ncargo run --example client TestInlineAdditionalProperties\ncargo run --example client TestJsonFormData\ncargo run --example client TestClassname\ncargo run --example client AddPet\ncargo run --example client DeletePet\ncargo run --example client FindPetsByStatus\ncargo run --example client FindPetsByTags\ncargo run --example client GetPetById\ncargo run --example client UpdatePet\ncargo run --example client UpdatePetWithForm\ncargo run --example client UploadFile\ncargo run --example client DeleteOrder\ncargo run --example client GetInventory\ncargo run --example client GetOrderById\ncargo run --example client PlaceOrder\ncargo run --example client CreateUser\ncargo run --example client CreateUsersWithArrayInput\ncargo run --example client CreateUsersWithListInput\ncargo run --example client DeleteUser\ncargo run --example client GetUserByName\ncargo run --example client LoginUser\ncargo run --example client LogoutUser\ncargo run --example client UpdateUser\n```\n\n----------------------------------------\n\nTITLE: Loading InlineResponse200 Model Package in Perl\nDESCRIPTION: Shows how to load the InlineResponse200 model class from the WWW::SwaggerClient Perl library for use in applications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/InlineResponse200.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::InlineResponse200;\n```\n\n----------------------------------------\n\nTITLE: Python Testing Dependencies List\nDESCRIPTION: A list of Python packages required for testing, including tox for test automation, coverage for code coverage reporting, randomize for test randomization, and flake8 for code style enforcement.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/dev-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ntox\ncoverage\nrandomize\nflake8\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger UI in browser\nDESCRIPTION: URL to access the Swagger UI interface in a web browser. This provides a visual interface for exploring and testing the API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion-python2/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/ui/\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumStringRequiredEnum used in the EnumTest class. It includes 'UPPER', 'lower', and an empty string as possible values, similar to EnumStringEnum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: User Logout in Java\nDESCRIPTION: Logs out the currently authenticated user session. No parameters required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single optional property 'JustNumber' of type decimal. The table format is used to display the property details.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.NumberOnly\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustNumber** | **decimal?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in AdditionalPropertiesClass\nDESCRIPTION: Specifies two map properties: mapProperty for string-to-string mapping and mapOfMapProperty for nested string-to-map mapping. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Package for petstore-integration-test\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources into JavaScript for the petstore-integration-test package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/petstore-expected/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Configuring Swift Package Manager for RxSwift\nDESCRIPTION: This code snippet shows how to configure a Package.swift file to include RxSwift as a dependency using Swift Package Manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_4\n\nLANGUAGE: Swift\nCODE:\n```\nimport PackageDescription\n\nlet package = Package(\n    name: \"RxTestProject\",\n    targets: [],\n    dependencies: [\n        .Package(url: \"https://github.com/ReactiveX/RxSwift.git\", majorVersion: 3)\n    ]\n)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values in Swagger\nDESCRIPTION: Enumeration values for the enumNumber property, containing positive (1.1) and negative (-1.2) floating-point values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n* `_11` (value: `1.1`)\n\n* `_12` (value: `-1.2`)\n```\n\n----------------------------------------\n\nTITLE: Implementing CompositeContainer in PHP\nDESCRIPTION: Code snippet illustrating how a composite container could automatically set itself as the parent container for any ParentAwareContainerInterface instances. Shows how to delegate parent container registration in a composite container implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/container-interop/container-interop/docs/Delegate-lookup-meta.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nclass CompositeContainer {\n\t...\n\t\n\tpublic function __construct($containers) {\n\t\tforeach ($containers as $container) {\n\t\t\tif ($container instanceof ParentAwareContainerInterface) {\n\t\t\t\t$container->setParentContainer($this);\n\t\t\t}\n\t\t}\n\t\t...\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table Structure in Markdown\nDESCRIPTION: Creates a markdown table structure for documenting model properties including name, type, description and notes columns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Model Properties in Markdown\nDESCRIPTION: This markdown table defines the properties of the EnumArrays model. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\nJustSymbol | **string** |  | [optional] \nArrayEnum | **List<string>** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Initializing Git Repository for Alamofire Integration\nDESCRIPTION: Command to initialize a git repository in your project directory, which is a prerequisite for adding Alamofire as a git submodule.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ git init\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration Constants in Markdown\nDESCRIPTION: Defines a set of integer enumeration values using markdown list format. Each constant is named with a 'NUMBER_' prefix followed by its value, ranging from 0 to 6.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the EnumArrays model, including JustSymbol (a string) and ArrayEnum (a list of strings). Both properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\nJustSymbol | **string** |  | [optional] \nArrayEnum | **List<string>** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished npm Package Locally\nDESCRIPTION: Command to install an unpublished version of the package from a local path. This approach is noted as not recommended.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/additional-properties-expected/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Manual Parameter Encoding of NSURLRequest in Swift using Alamofire\nDESCRIPTION: This snippet shows how to manually encode parameters for an NSURLRequest using Alamofire's ParameterEncoding. It demonstrates URL encoding of parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_21\n\nLANGUAGE: swift\nCODE:\n```\nlet URL = NSURL(string: \"https://httpbin.org/get\")!\nvar request = NSMutableURLRequest(URL: URL)\n\nlet parameters = [\"foo\": \"bar\"]\nlet encoding = Alamofire.ParameterEncoding.URL\n(request, _) = encoding.encode(request, parameters: parameters)\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger Category Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Swagger API package in Dart, which includes the Category model. This import is necessary to use the Category model in your Dart code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Binding Search Results to TableView in Swift using RxSwift\nDESCRIPTION: This snippet shows how to bind the search results to a table view using RxSwift. It uses the 'bind(to:)' method to connect the observable sequence of search results to the table view's items, defining how each cell should be populated.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Swift\nCODE:\n```\nsearchResults\n    .bind(to: tableView.rx.items(cellIdentifier: \"Cell\")) {\n        (index, repository: Repository, cell) in\n        cell.textLabel?.text = repository.name\n        cell.detailTextLabel?.text = repository.url\n    }\n    .disposed(by: disposeBag)\n```\n\n----------------------------------------\n\nTITLE: Loading EnumClass Model in Perl\nDESCRIPTION: Shows how to load the EnumClass model package in a Perl application using the WWW::SwaggerClient namespace.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::EnumClass;\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Android Client to Remote Maven Repository\nDESCRIPTION: Command to deploy the library to a remote Maven repository\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Codegen with Maven\nDESCRIPTION: Command to build Swagger Codegen from source using Maven. This command cleans the project and packages it.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/building.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmvn clean package\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documents the ArrayOfArrayOfNumberOnly model class from the IO.Swagger.Model namespace, specifying its single property 'ArrayArrayNumber' which is a nested list of decimal values that is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ArrayOfArrayOfNumberOnly\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ArrayArrayNumber** | **List&lt;List&lt;decimal?&gt;&gt;** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Category model using a Markdown table. It specifies two properties: 'Id' of type long? and 'Name' of type string, both optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.Category\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Name** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger Resources URL for UI Integration\nDESCRIPTION: The URL that should be entered into Swagger UI to access the API documentation. This endpoint exposes the resources.json file that contains the Swagger specification for the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/sinatra/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:4567/resources.json\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayEnumEnum Values in Markdown\nDESCRIPTION: A markdown table that lists the possible values for the ArrayEnumEnum enumeration type used in the arrayEnum property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: List&lt;ArrayEnumEnum&gt;\nName | Value\n---- | -----\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Structure in SwaggerPetstore API\nDESCRIPTION: Documentation for the ArrayOfNumberOnly model class which contains a single optional property 'arrayNumber' that accepts an array of Number values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | **[Number]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Python Testing Dependencies\nDESCRIPTION: A list of Python packages used for testing, code coverage analysis, and code quality checks. Includes nose for unit testing, tox for test automation, coverage for code coverage reporting, randomize for test randomization, and flake8 for code style checking.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/dev-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnose\ntox\ncoverage\nrandomize\nflake8\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment for API Base Path\nDESCRIPTION: TypeScript code to extend the environment configuration file with the API base path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\n----------------------------------------\n\nTITLE: Installing SwaggerClient via CocoaPods from Github\nDESCRIPTION: CocoaPods configuration for installing the SwaggerClient SDK from a Github repository. Allows specifying branch or commit.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/README.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\npod 'SwaggerClient', :git => 'https://github.com/GIT_USER_ID/GIT_REPO_ID.git'\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values Definition\nDESCRIPTION: Defines the possible integer values for the enumInteger property, including 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties Table in Swagger/OpenAPI Markdown\nDESCRIPTION: Markdown table defining model properties including name, type, description and optional status. Contains definitions for integer and string fields with proper naming conventions including snake case and numeric prefixes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition\nDESCRIPTION: Defines the allowed string values for the EnumStringEnum type including UPPER, lower, and empty string cases.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Definition\nDESCRIPTION: URL endpoint for accessing the Swagger JSON specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/README.md#2025-04-20_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Configuring Vendor Extensions in Swagger YAML\nDESCRIPTION: YAML configuration for enabling various integrations like Eureka, Zipkin and Spring Boot Admin through vendor extensions in the Swagger specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/java-pkmst/Readme.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nswagger: \"2.0\"\ninfo:\n  description: \"This is a sample Product Catalogue Server.\\    \\  For this sample, you can use the api key `special-key` to test the authorization\\ filters.\"\n  version: \"1.0.0\"\n  x-codegen:\n    eurekaUri: \"http://localhost:8080\"\n    zipkinUri: \"http://localhost:9411\"\n    springBootAdminUri: \"http://localhost:8000\"\n    pkmstInterceptor: \"true\"\n```\n\n----------------------------------------\n\nTITLE: Running Docker in Vagrant for Swagger Codegen Development\nDESCRIPTION: This snippet shows how to set up and use Vagrant with VirtualBox to run Docker for Swagger Codegen development. It includes cloning the repository, starting the Vagrant machine, SSHing into it, and running the Docker script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/docker.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ngit clone http://github.com/swagger-api/swagger-codegen.git\ncd swagger-codegen\nvagrant up\nvagrant ssh\ncd /vagrant\n./run-in-docker.sh mvn package\n```\n\n----------------------------------------\n\nTITLE: Testing Code Injection in Python for Petstore API\nDESCRIPTION: This code snippet demonstrates how to use the test_code_inject____end__rn_n_r method of the FakeApi class to test for code injection vulnerabilities. It includes error handling and shows how to pass an optional parameter for the test.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\ntest_code_inject____end____rn_n_r = 'test_code_inject____end____rn_n_r_example' # str | To test code injection */ ' \" =end -- \\r\\n \\n \\r (optional)\n\ntry:\n    # To test code injection */ ' \" =end -- \\r\\n \\n \\r\n    api_instance.test_code_inject____end__rn_n_r(test_code_inject____end____rn_n_r=test_code_inject____end____rn_n_r)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_code_inject____end__rn_n_r: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Value Mapping\nDESCRIPTION: Defines an enumeration mapping named constants to integer values from 0 to 6. Each constant follows the pattern NUMBER_X where X represents the corresponding integer value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values\nDESCRIPTION: Defines decimal number enum values including positive and negative numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the JustSymbolEnum enumeration with its possible values and their corresponding string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Adding a New Pet to the Store using C# and Swagger\nDESCRIPTION: This snippet demonstrates how to add a new pet to the store using the AddPet method of the PetApi class. It configures OAuth2 authentication, creates a Pet object, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Protecting Parameters in Pimple\nDESCRIPTION: Shows how to use the protect() method to store anonymous functions as parameters instead of service definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$container['random_func'] = $container->protect(function () {\n    return rand();\n});\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP GET Endpoint for User Logout\nDESCRIPTION: HTTP endpoint definition for logging out the currently authenticated user session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_28\n\nLANGUAGE: http\nCODE:\n```\nget /user/logout\n```\n\n----------------------------------------\n\nTITLE: Setting Up Database and Starting Rails Server with Swagger\nDESCRIPTION: Creates the database, runs migrations, and starts the Rails server for the Swagger-generated project. These commands initialize the application and make it available for testing Swagger API endpoints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rails5/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbin/rake db:create db:migrate\nbin/rails s\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration in Markdown\nDESCRIPTION: This snippet defines an enumeration called 'Ints' with integer values from 0 to 6. Each enum constant is represented as a bullet point with its name and corresponding value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining FormatTest Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the FormatTest model using a markdown table. It specifies the name, type, description, and optional status for each property. The table includes various data types such as Integer, Long, BigDecimal, Float, Double, String, byte[], LocalDate, OffsetDateTime, and UUID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: HasOnlyReadOnly Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the HasOnlyReadOnly class. Defines two optional string properties 'bar' and 'foo' with their types and characteristics.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# HasOnlyReadOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining MixedPropertiesAndAdditionalPropertiesClass Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass model using a Markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **uuid** | **String** |  | [optional] |\n| **dateTime** | **Date** |  | [optional] |\n| **map** | [**{String: Animal}**](Animal.md) |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: MapTest Class Properties Table in Markdown\nDESCRIPTION: A markdown table defining the properties of the MapTest class, which includes mapMapOfString (a nested map structure) and mapOfEnumString (a map with enum values).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building Angular2 TypeScript Petstore Package\nDESCRIPTION: Commands to install dependencies and build the TypeScript sources for the @swagger/angular2-typescript-petstore package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Generating Swagger Model Documentation Table in Markdown\nDESCRIPTION: Creates a table to document the properties of a Swagger API model. The table includes columns for the property name, data type, description, and optional notes. This template uses special placeholders that will be replaced with actual model and property names during code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/$special[model.name].md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# $special[model.name]\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**$special[property.name]** | **integer** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Implementing HTTP Redirection Control in Alamofire\nDESCRIPTION: Example showing how to prevent redirects to apple.com domains using taskWillPerformHTTPRedirection closure.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_59\n\nLANGUAGE: swift\nCODE:\n```\nlet delegate: Alamofire.Manager.SessionDelegate = manager.delegate\n\ndelegate.taskWillPerformHTTPRedirection = { session, task, response, request in\n    var finalRequest = request\n\n    if let originalRequest = task.originalRequest where originalRequest.URLString.containsString(\"apple.com\") {\n\t\tfinalRequest = originalRequest\n\t}\n\n\treturn finalRequest\n}\n```\n\n----------------------------------------\n\nTITLE: Dog Model Schema in Markdown Table\nDESCRIPTION: Markdown table defining the properties of a Dog model with a single optional breed field of String type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Number Enumeration with BigDecimal in Java\nDESCRIPTION: This code snippet defines an enumeration of numeric constants using Java's BigDecimal class. It includes constants for the numbers 7, 8, 9, and 10, which can be used for precise decimal arithmetic in Java applications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Loading NumberOnly Model Class in Perl\nDESCRIPTION: Demonstrates how to load the NumberOnly model class from the WWW::SwaggerClient package. This class contains a single optional number property named 'just_number'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::NumberOnly;\n```\n\n----------------------------------------\n\nTITLE: Installing Package Dependencies\nDESCRIPTION: Commands to install dependencies and build typescript sources\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the structure of the ArrayOfArrayOfNumberOnly model, which contains a single optional property 'arrayArrayNumber'. This property is a two-dimensional array of BigDecimal numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# ArrayOfArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | [**List<List<BigDecimal>>**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Currency Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining properties for Currency model, shown as empty with just headers for Name, Type, Description and Notes columns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Model/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Loading API Packages in Perl Client\nDESCRIPTION: Example showing how to load the API packages in the Swagger Petstore Perl client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/README.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::FakeApi;\n```\n\n----------------------------------------\n\nTITLE: Accessing Required Field Test JSON\nDESCRIPTION: This snippet provides a link to a JSON file used for testing required fields in Swagger definitions. It is part of the Swagger Codegen test resources.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/fixtures/immutable/specifications/v2/specificationSources.txt#2025-04-20_snippet_2\n\nLANGUAGE: Plain Text\nCODE:\n```\nrequiredTest.json -> https://raw.githubusercontent.com/swagger-api/swagger-codegen/1f9f8c5a3e157daf62c891ff9f27db7f76897e2a/modules/swagger-codegen/src/test/resources/2_0/requiredTest.json\n```\n\n----------------------------------------\n\nTITLE: Installing Pimple via Composer in PHP\nDESCRIPTION: Command to add Pimple to your project's composer.json file. This installs Pimple version 3.0 or higher.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ ./composer.phar require pimple/pimple ~3.0\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Server on Windows\nDESCRIPTION: Batch command to build the Swagger server on Windows systems using the build script.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-v2.2-interface-only/README.md#2025-04-20_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nbuild.bat\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Documentation for the ArrayOfNumberOnly class which defines a single property 'arrayNumber' that is an optional list of BigDecimal values. The property is marked as optional and represents an array of numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java using Swagger Codegen\nDESCRIPTION: This snippet shows how to call the testInlineAdditionalProperties method of the FakeApi class. It takes an Object parameter representing the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null;\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Swagger Model Properties with Various Capitalizations\nDESCRIPTION: Documents the properties of a Capitalization model class including different naming conventions like camelCase, PascalCase, snake_case and special formats. Each property is defined with its type and optionality status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\nSmallCamel | string |  | [optional] \nCapitalCamel | string |  | [optional] \nSmallSnake | string |  | [optional] \nCapitalSnake | string |  | [optional] \nSCAETHFlowPoints | string |  | [optional] \nATT_NAME | string | Name of the pet  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Composer\nDESCRIPTION: Command to install the Lumen framework and project dependencies using Composer package manager.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/lumen/lib/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncomposer install\n```\n\n----------------------------------------\n\nTITLE: Linking the global SDK to a local project\nDESCRIPTION: Command to link the globally available package to a local project for usage.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nnpm link /path/to/<JAVASCRIPT_CLIENT_DIR>\n```\n\n----------------------------------------\n\nTITLE: Defining Required String Enum Values\nDESCRIPTION: Markdown table defining the possible values for EnumStringRequiredEnum including UPPER, lower and empty string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enumeration in Markdown\nDESCRIPTION: Defines an enumeration of integer values from 0 to 6 using Markdown syntax. Each value is represented as a bullet point with a name and its corresponding numeric value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties for Petstore API in Markdown\nDESCRIPTION: This snippet defines the properties of the List model for the Petstore API. It specifies a single property named '_123_list' of type String, which is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123_list** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Swagger\nDESCRIPTION: Specifies the properties of a Capitalization model using different naming conventions. It includes optional string properties with various capitalization styles, demonstrating how to handle different naming patterns in API models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using Defined Services in Pimple\nDESCRIPTION: Demonstrates how to retrieve and use a service from the Pimple container. This example shows accessing the 'session' service.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// get the session object\n$session = $container['session'];\n\n// the above call is roughly equivalent to the following code:\n// $storage = new SessionStorage('SESSION_ID');\n// $session = new Session($storage);\n```\n\n----------------------------------------\n\nTITLE: Status Enum Values Table in Markdown\nDESCRIPTION: Markdown table defining the possible values for the order status enum.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nPLACED | \"placed\"\nAPPROVED | \"approved\"\nDELIVERED | \"delivered\"\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**my_number** | [**\\Swagger\\Client\\Model\\OuterNumber**](OuterNumber.md) |  | [optional] \n**my_string** | [**\\Swagger\\Client\\Model\\OuterString**](OuterString.md) |  | [optional] \n**my_boolean** | [**\\Swagger\\Client\\Model\\OuterBoolean**](OuterBoolean.md) |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown for Swagger Codegen\nDESCRIPTION: Specifies the properties of a Client model using a Markdown table format. The model has a single optional property 'client' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: This snippet defines a ModelBoolean enum with two possible values: TRUE (represented as true) and FALSE (represented as false). This enum is likely used in Swagger Codegen to represent boolean values in generated models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Using Environment-based Base Path in Angular Module\nDESCRIPTION: TypeScript code to use the environment-based API base path in the Angular module configuration.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Format Test Model Property Definitions in Markdown\nDESCRIPTION: Markdown table defining the properties, data types, and optional status for the FormatTest model. Includes various numeric types, strings, binary data, dates, and specialized types like UUID and password.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Number** |  | [optional] \n**int32** | **Number** |  | [optional] \n**int64** | **Number** |  | [optional] \n**_number** | **Number** |  | \n**_float** | **Number** |  | [optional] \n**_double** | **Number** |  | [optional] \n**_string** | **String** |  | [optional] \n**_byte** | **Blob** |  | \n**binary** | **Blob** |  | [optional] \n**_date** | **Date** |  | \n**dateTime** | **Date** |  | [optional] \n**uuid** | **String** |  | [optional] \n**password** | **String** |  |\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values Definition\nDESCRIPTION: Markdown table defining the possible values for the JustSymbolEnum enumeration, including comparison operators.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \">=\" \nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Loading Name Model Package in Perl\nDESCRIPTION: Code snippet demonstrating how to load the Name model class from the WWW::SwaggerClient::Object namespace in Perl. This is required before using the Name model in your application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::Name;\n```\n\n----------------------------------------\n\nTITLE: Browserify Bundle Creation\nDESCRIPTION: Command to create a browser-compatible bundle using Browserify.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nbrowserify main.js > bundle.js\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Properties in Markdown\nDESCRIPTION: A markdown table defining the properties of the HasOnlyReadOnly model class. It includes two optional String properties (bar and foo) with their respective types, descriptions, and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining HasOnlyReadOnly Model Properties in Markdown\nDESCRIPTION: Defines the properties of the HasOnlyReadOnly model using a markdown table. It specifies two optional string properties: 'bar' and 'foo'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **str** |  | [optional] \n**foo** | **str** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore REST Template Dependency in Maven POM\nDESCRIPTION: XML snippet to add the API client library as a dependency in a Maven project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-resttemplate</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Publishing @swagger/angular2-typescript-petstore Package\nDESCRIPTION: Command to publish the built package to npm registry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Testing Number Serialization in C#\nDESCRIPTION: Example code demonstrating how to test serialization of outer number types. The method accepts an optional decimal value as input and returns a decimal response from the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterNumberSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new decimal?(); // decimal? | Input number as post body (optional) \n\n            try\n            {\n                decimal? result = apiInstance.FakeOuterNumberSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterNumberSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: This code snippet defines the properties of the ArrayOfArrayOfNumberOnly model using a markdown table. It specifies the property name, type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayArrayNumber** | **[[Number]]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Using Default API in Component\nDESCRIPTION: Example of injecting and using the DefaultApi service in an Angular component\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DefaultApi } from '';\n\nexport class AppComponent {\n\t constructor(private apiGateway: DefaultApi) { }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Pimple 2 C Implementation using build tools\nDESCRIPTION: Commands for installing the C implementation of Pimple 2. This sequence runs phpize to prepare the PHP extension build environment, configures the build, compiles the code, and installs the extension.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/ext/pimple/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n> phpize\n> ./configure\n> make\n> make install\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Properties Table\nDESCRIPTION: Markdown table defining the main properties of the EnumArrays class including their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the NumberOnly model using a Markdown table. It specifies a single optional property 'JustNumber' of type decimal.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **JustNumber** | **decimal?** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Setting Up Docker-based Generator Development Environment\nDESCRIPTION: This snippet demonstrates how to set up a development environment for a standalone generator using Docker. It creates the necessary directory structure, downloads the Swagger Codegen CLI and helper scripts, and generates the initial generator stub.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/standalone-gen-dev/standalone-generator-development.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# project dir\nTARGET_DIR=/tmp/codegen/mygenerator\nmkdir -p $TARGET_DIR\ncd $TARGET_DIR\n# generated code location\nGENERATED_CODE_DIR=generated\nmkdir -p $GENERATED_CODE_DIR\n# download desired version\nwget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.19/swagger-codegen-cli-2.4.19.jar -O swagger-codegen-cli.jar\nwget https://raw.githubusercontent.com/swagger-api/swagger-codegen/master/standalone-gen-dev/docker-stub.sh -O docker-stub.sh\nwget https://raw.githubusercontent.com/swagger-api/swagger-codegen/master/standalone-gen-dev/generator-stub-docker.sh -O generator-stub-docker.sh\nchmod +x *.sh\n# generated initial stub: -p <root package> -n <generator name>\n./generator-stub-docker.sh -p io.swagger.codegen.custom -n custom\n```\n\n----------------------------------------\n\nTITLE: Installing NuGet Packages for Swagger Petstore C# SDK\nDESCRIPTION: Command to install required NuGet packages including RestSharp, Newtonsoft.Json, and JsonSubTypes which are dependencies for the SDK.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nInstall-Package RestSharp\nInstall-Package Newtonsoft.Json\nInstall-Package JsonSubTypes\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model with BigDecimal Array in Swagger\nDESCRIPTION: Definition of an ArrayOfNumberOnly model that contains an optional property 'arrayNumber' which is an array of BigDecimal values. This model documentation follows the Swagger standard format for model definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for MixedPropertiesAndAdditionalPropertiesClass in Markdown\nDESCRIPTION: This snippet defines the properties of the MixedPropertiesAndAdditionalPropertiesClass using a Markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | [**UUID**](UUID.md) |  |  [optional]\n**dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing Generated Swagger API Interface in Spring Controller\nDESCRIPTION: Example of implementing a generated Swagger API interface in a Spring Controller class. This snippet shows how to create a controller endpoint by adding the @Controller annotation to a class that implements the PetApi interface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/spring-stubs/README.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Controller\npublic class PetController implements PetApi {\n// implement all PetApi methods\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java with Swagger Client\nDESCRIPTION: Example code showing how to call the testInlineAdditionalProperties endpoint with a generic Object parameter. Demonstrates handling of additional properties in the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Values Definition in Markdown\nDESCRIPTION: Defines a set of enumerated integer values from 0 to 6, each represented as a named constant. This pattern is commonly used in API specifications to define valid state values or option selections.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Order Status Enum Definition\nDESCRIPTION: Defines the possible values for the order status enum: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nstatus | placed, approved, delivered\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Swagger Codegen\nDESCRIPTION: This code snippet lists the required Python packages and their version constraints for the Swagger Codegen project. It includes packages for testing (flask_testing, nose), code coverage (coverage), and various utility libraries (pluggy, py, randomize).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/test-requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nflask_testing==0.6.1\ncoverage>=4.0.3\nnose>=1.3.7\npluggy>=0.3.1\npy>=1.4.31\nrandomize>=0.13\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite in JavaScript for Swagger Petstore API\nDESCRIPTION: Shows how to use the fakeOuterCompositeSerialize method of the FakeApi class to test serialization of an object with outer number type. It accepts an optional OuterComposite body parameter and returns an OuterComposite object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.FakeApi();\n\nvar opts = { \n  'body': new SwaggerPetstore.OuterComposite() // OuterComposite | Input composite as post body\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.fakeOuterCompositeSerialize(opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Implementing CompositeContainer with Parent Container Registration in PHP\nDESCRIPTION: A code example showing how a composite container could register itself as the parent container for child containers implementing a hypothetical ParentAwareContainerInterface.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/Delegate-lookup-meta.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n$containerA = new ContainerA();\n$containerB = new ContainerB();\n\n$compositeContainer = new CompositeContainer([$containerA, $containerB]);\n\n// The call to 'setParentContainer' is delegated to the CompositeContainer\n// It is not the responsibility of the user anymore.\nclass CompositeContainer {\n\t...\n\t\n\tpublic function __construct($containers) {\n\t\tforeach ($containers as $container) {\n\t\t\tif ($container instanceof ParentAwareContainerInterface) {\n\t\t\t\t$container->setParentContainer($this);\n\t\t\t}\n\t\t}\n\t\t...\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Fake API Module Declarations in Haskell\nDESCRIPTION: Module declarations for fake test endpoints including serialization tests for various data types and parameter testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_50\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.API.Fake\n\nfakeOuterBooleanSerialize :: (Consumes FakeOuterBooleanSerialize contentType) => ContentType contentType -> Accept accept -> SwaggerPetstoreRequest FakeOuterBooleanSerialize contentType OuterBoolean accept\ndata FakeOuterBooleanSerialize\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: A table defining the properties for an OuterComposite model class with three optional fields: myNumber (BigDecimal), myString (String), and myBoolean (Boolean).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and metadata for the ReadOnlyFirst model. Contains two optional String properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ReadOnlyFirst\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  | [optional] \n**baz** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Tag Model Properties Definition in Markdown\nDESCRIPTION: Markdown table defining the properties of the Tag model. The model has two properties: Id (integer) and Name (string), both marked as optional with default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**Name** | **string** |  | [optional] [default to null]\n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Adding Scala Akka Petstore Client Dependency in Maven POM\nDESCRIPTION: XML snippet to add the Scala Akka Petstore client as a dependency in a Maven project's POM file. This allows the project to use the client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/akka-scala/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>scala-akka-petstore-client</artifactId>\n  <version>1.0.0</version>\n  <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Accessing Swagger JSON Documentation for JAX-RS Server\nDESCRIPTION: The URL endpoint to access the Swagger JSON documentation after deploying the server to a local JEE server. Note that if the host is configured to be something other than localhost, Swagger UI calls will be directed to that host.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/eap-java8/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Java Client Locally\nDESCRIPTION: Command to install the Swagger Java client library to the local Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn install\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the main properties of the EnumTest class with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Linking @swagger/angular2-typescript-petstore Package\nDESCRIPTION: Commands to create and use an npm link for the @swagger/angular2-typescript-petstore package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @swagger/angular2-typescript-petstore\n```\n\n----------------------------------------\n\nTITLE: ArrayEnumEnum Definition\nDESCRIPTION: Enum definition for array values containing string constants 'fish' and 'crab'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumArrays.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nFISH | \"fish\"\nCRAB | \"crab\"\n```\n\n----------------------------------------\n\nTITLE: Adding Navigation Links in Markdown\nDESCRIPTION: Provides navigation links to the Model list, API list, and README sections of the documentation using Markdown syntax.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/OuterBoolean.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values in Markdown\nDESCRIPTION: Defines the possible values for the EnumStringRequiredEnum used in the EnumTest model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumStringRequiredEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Installing CocoaPods for Alamofire Setup\nDESCRIPTION: Terminal command to install CocoaPods, which is a dependency manager for Cocoa projects and required for adding Alamofire to an iOS project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/default/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\n$ gem install cocoapods\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Model Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of the SpecialModelName model. Documents a single optional property 'SpecialPropertyName' of type long?.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**SpecialPropertyName** | **long?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown for Swagger\nDESCRIPTION: Specifies the properties of an Order object including id, petId, quantity, shipDate, status, and complete. Each property is defined with its name, type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: Markdown table defining the properties of Model200Response object. Includes property names, their types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Making a Basic GET Request with Alamofire\nDESCRIPTION: Basic example showing how to import Alamofire and make a simple GET request to a URL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_7\n\nLANGUAGE: swift\nCODE:\n```\nimport Alamofire\n\nAlamofire.request(.GET, \"https://httpbin.org/get\")\n```\n\n----------------------------------------\n\nTITLE: MapTest Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of the MapTest model, including a nested map structure and a map of enum values. The properties include optional maps with different value types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | [**Map&lt;String, Map&lt;String, String&gt;&gt;**](Map.md) |  |  [optional]\n**mapOfEnumString** | [**Map&lt;String, InnerEnum&gt;**](#Map&lt;String, InnerEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Integer Enum Constants in Markdown\nDESCRIPTION: This code snippet defines an enumeration of integer constants using Markdown syntax. It includes constants from NUMBER_0 to NUMBER_6, each associated with its corresponding integer value from 0 to 6.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Ints\n\n## Enum\n\n\n* `NUMBER_0` (value: `0`)\n\n* `NUMBER_1` (value: `1`)\n\n* `NUMBER_2` (value: `2`)\n\n* `NUMBER_3` (value: `3`)\n\n* `NUMBER_4` (value: `4`)\n\n* `NUMBER_5` (value: `5`)\n\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass values in Swagger Petstore\nDESCRIPTION: Defines three enum constant values for the EnumClass type in Swagger Petstore. Each constant has an identifier and a corresponding string value that includes special characters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `abc` (value: `\"_abc\"`)\n\n* `efg` (value: `\"-efg\"`)\n\n* `xyz` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies with Version Requirements\nDESCRIPTION: Lists required Python packages with version constraints. Connexion is pinned to version 1.1.15 for API framework functionality, python_dateutil is pinned to version 2.6.0 for date handling, and setuptools requires version 21.0.0 or newer for package building and distribution.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/flaskConnexion/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nconnexion == 1.1.15\npython_dateutil == 2.6.0\nsetuptools >= 21.0.0\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Client model using a Markdown table. The model has a single optional property 'client' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing PromiseKit via CocoaPods\nDESCRIPTION: This Ruby code snippet shows how to include PromiseKit in a project's Podfile. It specifies the use of frameworks, sets the Swift version, and defines the PromiseKit pod with version constraints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift3/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nuse_frameworks!\nswift_version = \"3.1\"\npod \"PromiseKit\", \"~> 4.3\"\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with Java Swagger Client\nDESCRIPTION: Example code showing how to call the testEnumParameters endpoint with various enum parameter types including form, header, and query parameters. Takes string arrays, strings, integers and doubles as parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\"); // List<String> | Form parameter enum test (string array)\nString enumFormString = \"-efg\"; // String | Form parameter enum test (string)\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\"); // List<String> | Header parameter enum test (string array)\nString enumHeaderString = \"-efg\"; // String | Header parameter enum test (string)\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\"); // List<String> | Query parameter enum test (string array)\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nInteger enumQueryInteger = 56; // Integer | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single optional property 'justNumber' of type BigDecimal. This markdown table specifies the property name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties for Swagger Petstore in Markdown\nDESCRIPTION: This snippet defines the properties of the ModelReturn class for the Swagger Petstore API. It specifies a single optional property '_return' of type Number.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Number** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Markdown Table Defining Animal Model Properties\nDESCRIPTION: Markdown table listing the properties of the Animal model class. Includes two properties: className (required string) and color (optional string with default value 'red').\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | \n**Color** | **string** |  | [optional] [default to \"red\"]\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository\nDESCRIPTION: Git command to clone the project repository from GitHub.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:GIT_USER_ID/GIT_REPO_ID.git\n```\n\n----------------------------------------\n\nTITLE: Model Definition for ArrayOfNumberOnly Class in SwaggerPetstore\nDESCRIPTION: Defines the ArrayOfNumberOnly model class which contains a single optional property called 'arrayNumber' that is an array of Number values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | **[Number]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumStringEnum, which includes 'UPPER', 'lower', and an empty string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: EnumStringEnum\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the HasOnlyReadOnly model class, including property names, types, descriptions and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Bar** | **string** |  | [optional] \n**Foo** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Structure in Markdown\nDESCRIPTION: This snippet defines the structure for the AnimalFarm model in a Swagger/OpenAPI specification. It uses a markdown table to list properties, but currently contains no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AnimalFarm\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n[[Back to Model list]](../README.md#documentation-for-models) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Client Object Schema in Swagger/OpenAPI\nDESCRIPTION: Defines the schema for a Client object with a single optional string property named 'client'. This is likely used as part of a model definition in Swagger Codegen for generating client-side code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Building a Ruby Gem for Petstore API\nDESCRIPTION: Instructions for building the Ruby gem from the source code. This command builds the gem using the gemspec file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/ruby/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngem build petstore.gemspec\n```\n\n----------------------------------------\n\nTITLE: Markdown Properties Table for SpecialModelName Model\nDESCRIPTION: A markdown table defining the properties of the SpecialModelName model. It shows that the model has a single optional property named 'SpecialPropertyName' of type 'long?'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**SpecialPropertyName** | **long?** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class with Properties in Swagger Codegen Documentation\nDESCRIPTION: Documentation for a model class called ModelReturn which contains a single optional property '_return' of Integer type. This is typically used in code generation templates to define data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelReturn\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties table for the Boolean model. However, the table is empty, indicating that the Boolean model has no specific properties defined.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/Boolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Value Definitions\nDESCRIPTION: Defines a set of enumerated integer constants from 0 to 6. Each constant is defined with a descriptive name (NUMBER_X) and its corresponding integer value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Generating a Standalone Codegen Project Using the CLI JAR\nDESCRIPTION: This snippet shows how to download the Swagger Codegen CLI jar and use it to generate a new code generator project scaffold. The meta command is used to create the initial project structure with specified namespace and generator name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/standalone-gen-dev/standalone-generator-development.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/2.4.19/swagger-codegen-cli-2.4.19.jar -O swagger-codegen-cli.jar\njava -jar swagger-codegen-cli.jar meta -o output/myLibrary -n myClientCodegen -p com.my.company.codegen\n```\n\n----------------------------------------\n\nTITLE: Defining OuterNumber Model Structure in Markdown\nDESCRIPTION: Defines the structure of the OuterNumber model using a markdown table. The table is empty, suggesting the model has no defined properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterNumber\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Testing Endpoint Parameters in Java\nDESCRIPTION: Example code demonstrating how to test various parameter types including numbers, strings, dates and files. Uses HTTP basic authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure HTTP basic authorization: http_basic_test\nHttpBasicAuth http_basic_test = (HttpBasicAuth) defaultClient.getAuthentication(\"http_basic_test\");\nhttp_basic_test.setUsername(\"YOUR USERNAME\");\nhttp_basic_test.setPassword(\"YOUR PASSWORD\");\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal number = new BigDecimal(); // BigDecimal | None\nDouble _double = 3.4D; // Double | None\nString patternWithoutDelimiter = \"patternWithoutDelimiter_example\"; // String | None\nbyte[] _byte = B; // byte[] | None\nInteger integer = 56; // Integer | None\nInteger int32 = 56; // Integer | None\nLong int64 = 789L; // Long | None\nFloat _float = 3.4F; // Float | None\nString string = \"string_example\"; // String | None\nbyte[] binary = B; // byte[] | None\nLocalDate date = LocalDate.now(); // LocalDate | None\nOffsetDateTime dateTime = OffsetDateTime.now(); // OffsetDateTime | None\nString password = \"password_example\"; // String | None\nString paramCallback = \"paramCallback_example\"; // String | None\ntry {\n    apiInstance.testEndpointParameters(number, _double, patternWithoutDelimiter, _byte, integer, int32, int64, _float, string, binary, date, dateTime, password, paramCallback);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEndpointParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumIntegerEnum Values in Swagger\nDESCRIPTION: Defines possible integer enum values including positive and negative numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: String Enum Values Definition\nDESCRIPTION: Defines possible values for string-based enums including UPPER, lower, and empty string options. Used for both optional and required string enum properties.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Enumeration in Markdown\nDESCRIPTION: This snippet defines the enumeration for the justSymbol property, specifying allowed values and their corresponding string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n<a name=\"JustSymbolEnum\"></a>\n## Enum: JustSymbolEnum\n\n\n* `GREATER_THAN_OR_EQUAL_TO` (value: `\">=\"`)\n\n* `DOLLAR` (value: `\"$\"`)\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet via Swagger API\nDESCRIPTION: Example of deleting a pet from the store using the SwagPetApi. Requires OAuth2 authentication and pet ID.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagPetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nSwagPetApi api = new SwagPetApi();\nSwagClient client = api.getClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nSwagger.OAuth petstore_auth = (Swagger.OAuth) client.getAuthentication('petstore_auth');\npetstore_auth.setAccessToken('YOUR ACCESS TOKEN');\n\nMap<String, Object> params = new Map<String, Object>{\n    'petId' => 2147483648L,\n    'apiKey' => 'apiKey_example'\n};\n\ntry {\n    // cross your fingers\n    api.deletePet(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Swagger Codegen Project in Markdown\nDESCRIPTION: This snippet demonstrates how to create a hyperlink in Markdown to reference the swagger-codegen project on GitHub.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/swagger/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[swagger-codegen](https://github.com/swagger-api/swagger-codegen)\n```\n\n----------------------------------------\n\nTITLE: Loading the MapTest Model Package in Perl\nDESCRIPTION: Shows how to load the MapTest model package in a Perl application. This must be included before using the MapTest object in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::MapTest;\n```\n\n----------------------------------------\n\nTITLE: Using Defined Services in Pimple\nDESCRIPTION: Demonstrates how to retrieve and use a defined service from the Pimple container.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// get the session object\n$session = $container['session'];\n\n// the above call is roughly equivalent to the following code:\n// $storage = new SessionStorage('SESSION_ID');\n// $session = new Session($storage);\n```\n\n----------------------------------------\n\nTITLE: Defining 200Response Model Properties in Markdown Table\nDESCRIPTION: A markdown table that defines the properties of the 200Response model. It includes two optional properties: 'name' (Integer type) and 'propertyClass' (String type). This format is typical in Swagger/OpenAPI specifications for defining data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Getting a Pet by ID using Java Swagger Client\nDESCRIPTION: Demonstrates how to use the getPetById method to retrieve a single pet by its ID. This method uses API key authentication instead of OAuth2 and returns a Pet object if found.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/PetApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet to return\ntry {\n    Pet result = apiInstance.getPetById(petId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#getPetById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Definition for SPECIAL_MODEL_NAME Model\nDESCRIPTION: Defines the properties of the SPECIAL_MODEL_NAME model using a markdown table format. Contains a single property 'special_property_name' of type INTEGER_64 that is optional with a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/SPECIAL_MODEL_NAME.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**special_property_name** | **INTEGER_64** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Publishing the Angular Client Package\nDESCRIPTION: Command for publishing the built Angular client package to npm registry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model in Markdown\nDESCRIPTION: Defines the NumberOnly model with a single optional property 'justNumber' of type BigDecimal. This markdown table format is commonly used in Swagger/OpenAPI specifications to document model structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Properties in Markdown\nDESCRIPTION: Defines the properties of the EnumArrays model, including their names, types, and optional status. The 'justSymbol' property uses the JustSymbolEnum, while 'arrayEnum' is a list of ArrayEnumEnum values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# EnumArrays\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ClassModel class using a markdown table. It specifies a single optional string property named 'Class'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Class** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Updating Pet with Form Data in C# using Swagger-generated Client\nDESCRIPTION: This snippet demonstrates how to update a pet's information using form data. It requires the pet's ID and optionally accepts updated name and status. The method uses OAuth2 authentication and makes a request to the PetApi endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetWithFormExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | ID of pet that needs to be updated\n            var name = name_example;  // string | Updated name of the pet (optional) \n            var status = status_example;  // string | Updated status of the pet (optional) \n\n            try\n            {\n                // Updates a pet in the store with form data\n                apiInstance.UpdatePetWithForm(petId, name, status);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePetWithForm: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: OuterNumber Model Properties Table in Markdown\nDESCRIPTION: A markdown table structure defining the properties, types, descriptions and notes for the OuterNumber model. The table is currently empty but follows the standard Swagger model documentation format.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/OuterNumber.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n```\n\n----------------------------------------\n\nTITLE: Executing Custom Codegen Library on Windows\nDESCRIPTION: This command shows how to run Swagger Codegen with a custom code generator library on Windows systems, using semicolons instead of colons in the classpath separator.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/generators.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\njava -cp output/myLibrary/target/myClientCodegen-swagger-codegen-1.0.0.jar;modules/swagger-codegen-cli/target/swagger-codegen-cli.jar io.swagger.codegen.SwaggerCodegen\n```\n\n----------------------------------------\n\nTITLE: EnumStringEnum Values Definition\nDESCRIPTION: Defines the allowed string values for the EnumStringEnum type including UPPER, lower, and empty string options.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Properties in Markdown\nDESCRIPTION: Documentation table that defines the NumberOnly model with its JustNumber property. The property is an integer type, optional, and has a default value of null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustNumber** | **integer** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Extending Services in Pimple\nDESCRIPTION: Demonstrates how to use the extend() method to modify a service after its initial definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$container['session_storage'] = function ($c) {\n    return new $c['session_storage_class']($c['cookie_name']);\n};\n\n$container->extend('session_storage', function ($storage, $c) {\n    $storage->...();\n\n    return $storage;\n});\n```\n\n----------------------------------------\n\nTITLE: Publishing npm Package\nDESCRIPTION: Command to publish the built package to npm registry.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm publish\n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Markdown\nDESCRIPTION: Markdown table documenting the List model's properties, specifically defining the _123List property as an optional String field.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.List\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Name Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a Name model. Includes four properties: name (required Integer), snakeCase (optional Integer), property (optional String), and _123Number (optional Integer).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Swagger Model Property Definition Table\nDESCRIPTION: Markdown table defining the properties of the List model class, showing the property name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information Using Form Data with Java PetApi Client\nDESCRIPTION: Demonstrates how to update a pet's name and status using form data. Includes OAuth2 authentication setup, error handling, and uses the PetApi client class. The endpoint accepts pet ID as required parameter, with optional name and status updates.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using Java Swagger Client\nDESCRIPTION: This code demonstrates how to find pets by tags using the PetApi. It sets up OAuth authentication, creates a list of tags to filter by, makes the API call to retrieve matching Pet objects, and handles any exceptions that may occur.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Swagger Petstore API Client Example in Perl\nDESCRIPTION: Complete example showing how to use the Swagger Petstore Perl client, including loading necessary modules, instantiating the API, and making an API call with special character handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/README.md#2025-04-20_snippet_2\n\nLANGUAGE: perl\nCODE:\n```\n#!/usr/bin/perl\nuse lib 'lib';\nuse strict;\nuse warnings;\n# load the API package\nuse WWW::SwaggerClient::FakeApi;\n\n# load the models\nuse WWW::SwaggerClient::Object::ModelReturn;\n\n# for displaying the API response data\nuse Data::Dumper;\nuse WWW::SwaggerClient::;\n\nmy $api_instance = WWW::SwaggerClient::->new(\n);\n\nmy $test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r = 'test_code_inject_*/_\\'_\"_=end____\\r\\n_\\n_\\r_example'; # string | To test code injection */ ' \\\" =_end -- \\\\r\\\\n \\\\n \\\\r\n\neval {\n    $api_instance->test_code_inject____end__rn_n_r(test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r => $test_code_inject_*/_&#39;_&quot;_&#x3D;end____\\r\\n_\\n_\\r);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_code_inject____end__rn_n_r: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization in C#\nDESCRIPTION: Example code showing how to test serialization of outer string types. The method accepts an optional string value as input and returns a string response from the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterStringSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new string(); // string | Input string as post body (optional) \n\n            try\n            {\n                string result = apiInstance.FakeOuterStringSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterStringSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: This snippet defines the ModelBoolean enum with two possible values: true and false. It uses a markdown format to clearly list the enum options and their corresponding values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ModelBoolean\n\n## Enum\n\n\n* `_true` (value: `true`)\n\n* `_false` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: TestClientModel Endpoint Definition in Go\nDESCRIPTION: Go function that defines the endpoint for testing the \"client\" model. It accepts a Client object in the request body and returns a Client object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: Go\nCODE:\n```\n# **TestClientModel**\n> Client TestClientModel(ctx, body)\nTo test \\\"client\\\" model\n\nTo test \\\"client\\\" model\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **ctx** | **context.Context** | context for authentication, logging, cancellation, deadlines, tracing, etc.\n  **body** | [**Client**](Client.md)| client model | \n\n### Return type\n\n[**Client**](Client.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: application/json\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Values Definition\nDESCRIPTION: Defines numeric enum constants from 0 to 6. Each constant is defined in a bullet point format with both the constant name and its corresponding integer value.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Basic Robots.txt Configuration Template\nDESCRIPTION: A template for robots.txt showing the standard format and commented examples. Includes instructions for banning all spiders from the entire site.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/rails5/public/robots.txt#2025-04-20_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\n# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n#\n# To ban all spiders from the entire site uncomment the next two lines:\n# User-agent: *\n# Disallow: /\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Definition in Swagger\nDESCRIPTION: Defines an enumeration called 'Ints' with numbered constants from 0 to 6. Each constant follows the pattern NUMBER_X where X is the numeric value. This provides named constants for integer values that can be used in API specifications or code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `NUMBER_0` (value: `0`)\n* `NUMBER_1` (value: `1`)\n* `NUMBER_2` (value: `2`)\n* `NUMBER_3` (value: `3`)\n* `NUMBER_4` (value: `4`)\n* `NUMBER_5` (value: `5`)\n* `NUMBER_6` (value: `6`)\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Structure in Markdown\nDESCRIPTION: A markdown table that defines the properties of the ModelReturn class. It includes a single optional Integer property named '_return'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Basic Angular Module Configuration\nDESCRIPTION: Simple Angular module setup without provider configuration\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// without configuring providers\nimport { ApiModule } from '';\n\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n    imports: [\n        ApiModule,\n        HttpModule\n    ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: API Response Model Properties Definition in Markdown\nDESCRIPTION: Defines the properties of an API response model including an optional numeric code, string type, and string message. Used for documenting API response structures in Swagger/OpenAPI specifications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **int** |  | [optional] \n**type** | **string** |  | [optional] \n**message** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Map Properties in AdditionalPropertiesClass\nDESCRIPTION: Markdown table defining two map properties: mapProperty for string-to-string mapping and mapOfMapProperty for nested string-to-map mapping. Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\nmapProperty | **Map<String, String>** |  |  [optional]\nmapOfMapProperty | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Structure in Swagger/OpenAPI\nDESCRIPTION: Table defining the properties of a Client model class. Contains a single optional string property named 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Currency Model Package in Dart\nDESCRIPTION: This code snippet demonstrates how to import the Currency model package in a Dart application. It is essential for using the Currency model in your Swagger API implementation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags using PHP Swagger Client\nDESCRIPTION: This code snippet shows how to find pets by their tags using the Swagger PHP client. It requires OAuth2 authentication and accepts an array of tag values as filter parameters, returning an array of Pet objects that match the specified tags.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n// Configure OAuth2 access token for authorization: petstore_auth\n$config = Swagger\\Client\\Configuration::getDefaultConfiguration()->setAccessToken('YOUR_ACCESS_TOKEN');\n\n$apiInstance = new Swagger\\Client\\Api\\PetApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client(),\n    $config\n);\n$tags = array(\"tags_example\"); // string[] | Tags to filter by\n\ntry {\n    $result = $apiInstance->findPetsByTags($tags);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling PetApi->findPetsByTags: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: User Model Schema Definition in Markdown\nDESCRIPTION: Markdown table defining the User model properties with their types, descriptions and optional status. Includes core user attributes like ID, username, name fields, email, password, phone and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining EnumNumberEnum Values in Markdown\nDESCRIPTION: This snippet defines the possible values for the EnumNumberEnum, which includes 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: EnumNumberEnum\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Installing the SDK from Git repository\nDESCRIPTION: Command to install the package directly from a Git repository instead of npm.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nnpm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n----------------------------------------\n\nTITLE: Defining ModelClient Class Properties in Markdown\nDESCRIPTION: Describes the properties of the ModelClient class using a markdown table. The class has one optional property named __Client of type string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientWithPropertyChanged/docs/ModelClient.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# IO.Swagger.Model.ModelClient\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**__Client** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining List Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Markdown table defining the properties of the List model in SwaggerPetstore API. Contains a single optional String property named _123List.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/List.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.List\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Capitalization model using a markdown table. It includes property names, types, descriptions, and optional flags. The properties demonstrate various naming conventions and capitalization styles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**SmallCamel** | **string** |  | [optional] [default to null]\n**CapitalCamel** | **string** |  | [optional] [default to null]\n**SmallSnake** | **string** |  | [optional] [default to null]\n**CapitalSnake** | **string** |  | [optional] [default to null]\n**SCAETHFlowPoints** | **string** |  | [optional] [default to null]\n**ATT_NAME** | **string** | Name of the pet  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Updating Pet Information with Form Data using Java PetApi\nDESCRIPTION: Example of updating a pet's information using form data through the PetApi. Demonstrates OAuth2 authentication setup and error handling. Requires petId parameter, with optional name and status updates.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Using the test_classname endpoint in Ruby Swagger Client\nDESCRIPTION: This example demonstrates how to use the test_classname method from the FakeClassnameTags123Api class. It shows how to load the Petstore gem, configure API key authorization, initialize the API instance, and make a request with a Client model object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\n# load the gem\nrequire 'petstore'\n# setup authorization\nPetstore.configure do |config|\n  # Configure API key authorization: api_key_query\n  config.api_key['api_key_query'] = 'YOUR API KEY'\n  # Uncomment the following line to set a prefix for the API key, e.g. 'Bearer' (defaults to nil)\n  #config.api_key_prefix['api_key_query'] = 'Bearer'\nend\n\napi_instance = Petstore::FakeClassnameTags123Api.new\n\nbody = Petstore::Client.new # Client | client model\n\n\nbegin\n  #To test class name in snake case\n  result = api_instance.test_classname(body)\n  p result\nrescue Petstore::ApiError => e\n  puts \"Exception when calling FakeClassnameTags123Api->test_classname: #{e}\"\nend\n```\n\n----------------------------------------\n\nTITLE: Dog Model Schema Definition in Markdown\nDESCRIPTION: Defines the schema for a Dog model with an optional breed property of type String. The schema follows Swagger/OpenAPI table format for model property documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Dog\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**breed** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Java FakeApi Boolean Serialization Example\nDESCRIPTION: Example code showing how to test serialization of outer boolean types using the FakeApi client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.restassured.builder.RequestSpecBuilder;\n//import io.restassured.filter.log.ErrorLoggingFilter;\n\nFakeApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).fake();\n\napi.fakeOuterBooleanSerialize().execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining ContainerInterface in PHP\nDESCRIPTION: This snippet defines the ContainerInterface, which exposes two methods: get() for retrieving entries and has() for checking entry existence. It includes method signatures with parameters, return types, and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/container-interop/container-interop/docs/ContainerInterface.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Interop\\Container;\n\nuse Interop\\Container\\Exception\\ContainerException;\nuse Interop\\Container\\Exception\\NotFoundException;\n\n/**\n * Describes the interface of a container that exposes methods to read its entries.\n */\ninterface ContainerInterface\n{\n    /**\n     * Finds an entry of the container by its identifier and returns it.\n     *\n     * @param string $id Identifier of the entry to look for.\n     *\n     * @throws NotFoundException  No entry was found for this identifier.\n     * @throws ContainerException Error while retrieving the entry.\n     *\n     * @return mixed Entry.\n     */\n    public function get($id);\n\n    /**\n     * Returns true if the container can return an entry for the given identifier.\n     * Returns false otherwise.\n     *\n     * @param string $id Identifier of the entry to look for.\n     *\n     * @return boolean\n     */\n    public function has($id);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a Tag model using a markdown table. It specifies two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Array of Numbers Model Schema Definition\nDESCRIPTION: Markdown table defining the ArrayOfNumberOnly model schema with a single property 'arrayNumber' of type Number array that is optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.ArrayOfNumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | **[Number]** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Specifying Return Type for Pet Update API in Markdown\nDESCRIPTION: This snippet defines the return type for the pet update API endpoint, which is an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n### Return type\n\n[**ApiResponse**](ApiResponse.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of Model200Response class, including name and propertyClass fields with their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Angular Client Package Locally\nDESCRIPTION: Command for installing the package directly from a local path without publishing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Testing Class Name in Snake Case using Fake_classname_tags123Api in Java\nDESCRIPTION: This code snippet demonstrates how to use the testClassname method of the Fake_classname_tags123Api class. It creates an instance of the API, sets up a client model, and makes a PATCH request to the 'fake_classname_test' endpoint. The method handles potential API exceptions and prints the result or error message.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Fake_classname_tags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.Fake_classname_tags123Api;\n\n\nFake_classname_tags123Api apiInstance = new Fake_classname_tags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling Fake_classname_tags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: OUTER_BOOLEAN Model Properties Table in Markdown\nDESCRIPTION: Empty markdown table defining the properties, types, descriptions and notes for the OUTER_BOOLEAN model. Contains column headers but no data rows.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/OUTER_BOOLEAN.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Starting Dynamic HTML API Documentation Server\nDESCRIPTION: Commands to navigate to the generated dynamic HTML documentation directory, install Node.js dependencies, and start a local server to serve the dynamic API documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\ncd samples/dynamic-html/\nnpm install\nnode .\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in C#\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It configures OAuth2 authentication, specifies the pet ID to delete, and calls the DeletePet method. Optional API key parameter is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using FakeClassnameTags123Api in Java\nDESCRIPTION: This snippet demonstrates how to initialize the ApiClient, configure API key authorization, and make a call to the testClassname method of FakeClassnameTags123Api. It includes error handling and displays the result.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeClassnameTags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.FakeClassnameTags123Api;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key_query\nApiKeyAuth api_key_query = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key_query\");\napi_key_query.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key_query.setApiKeyPrefix(\"Token\");\n\nFakeClassnameTags123Api apiInstance = new FakeClassnameTags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeClassnameTags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger Petstore API using C#\nDESCRIPTION: This snippet shows how to create multiple users at once using an array input. It initializes the UserApi, creates a List of User objects, and calls the CreateUsersWithArrayInput method. Exception handling is included.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class CreateUsersWithArrayInputExample\n    {\n        public void main()\n        {\n            var apiInstance = new UserApi();\n            var body = new List<User>(); // List<User> | List of user object\n\n            try\n            {\n                // Creates list of users with given input array\n                apiInstance.CreateUsersWithArrayInput(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling UserApi.CreateUsersWithArrayInput: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java Swagger Client\nDESCRIPTION: Example of calling the testEnumParameters endpoint with various enum parameter types including form, header, and query parameters. Demonstrates handling of string arrays, strings, integers and doubles with enum constraints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the ArrayOfNumberOnly model using a Markdown table. It defines a single optional property 'arrayNumber' of type List<BigDecimal>.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Values\nDESCRIPTION: Definition of possible values for the EnumIntegerEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumTest.md#2025-04-20_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining Numeric Constants with BigDecimal in Java Enum\nDESCRIPTION: This code snippet defines an enumeration of numeric constants using Java's BigDecimal class. It includes constants for the numbers 7, 8, 9, and 10, each initialized with a new BigDecimal object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\n\nNUMBER_8 (value: new BigDecimal(8))\n\nNUMBER_9 (value: new BigDecimal(9))\n\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining AnimalFarm Model Properties in Markdown\nDESCRIPTION: This snippet defines a table structure for documenting the properties of the AnimalFarm model. The table includes columns for Name, Type, Description, and Notes. However, the table is currently empty, indicating that no specific properties have been defined for this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/AnimalFarm.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Defining Property Types with Various Capitalizations\nDESCRIPTION: A structured table defining properties with different naming conventions and their data types. Includes camelCase, PascalCase, snake_case and constant case patterns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished @swagger/angular2-typescript-petstore Package\nDESCRIPTION: Command to install an unpublished @swagger/angular2-typescript-petstore package from a local path (not recommended).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/npm/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java using Swagger Client\nDESCRIPTION: Example code demonstrating how to test enum parameters using the FakeApi class. Shows initialization and calling of testEnumParameters method with various enum types including string arrays, strings, integers and doubles.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet with C# API Client\nDESCRIPTION: Example showing how to update an existing pet using the PetApi.UpdatePet method. The code configures OAuth2 authentication, creates a Pet object with updated information, and makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class UpdatePetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Update an existing pet\n                apiInstance.UpdatePet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.UpdatePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags Implementation in C# using Swagger Client\nDESCRIPTION: Example implementation showing how to call the TestSpecialTags endpoint using the generated Swagger C# client. The code demonstrates error handling and makes a PATCH request to '/another-fake/dummy' endpoint with a ModelClient object as the request body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestSpecialTagsExample\n    {\n        public void main()\n        {\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with C# AnotherFakeApi Client\nDESCRIPTION: Example implementation showing how to test special tags using the AnotherFakeApi client. The code demonstrates creating an API instance, making a PATCH request with a ModelClient body parameter, and handling the response with error catching.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestSpecialTagsExample\n    {\n        public void main()\n        {\n            var apiInstance = new AnotherFakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test special tags\n                ModelClient result = apiInstance.TestSpecialTags(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling AnotherFakeApi.TestSpecialTags: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet illustrates how to find pets by their status using the PetApi. It configures OAuth2 authentication, creates a list of status values to filter by, and calls the findPetsByStatus method. The result is a list of Pet objects matching the specified statuses.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Handling JSON Response in Alamofire\nDESCRIPTION: Example of making a GET request with parameters and handling the JSON response using a response handler.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_8\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\", parameters: [\"foo\": \"bar\"])\n         .responseJSON { response in\n             print(response.request)  // original URL request\n             print(response.response) // URL response\n             print(response.data)     // server data\n             print(response.result)   // result of response serialization\n\n             if let JSON = response.result.value {\n                 print(\"JSON: \\(JSON)\")\n             }\n         }\n```\n\n----------------------------------------\n\nTITLE: Importing Currency Model in Dart\nDESCRIPTION: Demonstrates how to import the Currency model from the Swagger API package in Dart code. This is the first step to using the Currency model in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/Currency.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Adding a Pet to the Store in C#\nDESCRIPTION: Example code demonstrating how to add a new pet to the Swagger Petstore using OAuth2 authentication. This creates a Pet object, configures the access token, and calls the AddPet method on the PetApi instance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/PetApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class AddPetExample\n    {\n        public void main()\n        {\n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var body = new Pet(); // Pet | Pet object that needs to be added to the store\n\n            try\n            {\n                // Add a new pet to the store\n                apiInstance.AddPet(body);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.AddPet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Petstore API using Python\nDESCRIPTION: Example demonstrating how to fetch a user by their username. The code creates an instance of the UserApi class, calls the get_user_by_name method with the specified username, and prints the response. Includes error handling via ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The name that needs to be fetched. Use user1 for testing.\n\ntry:\n    # Get user by user name\n    api_response = api_instance.get_user_by_name(username)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->get_user_by_name: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Using testEnumQueryParameters Method with Java Swagger Client\nDESCRIPTION: Example code demonstrating how to call the testEnumQueryParameters endpoint which tests enum-based query parameters. This endpoint accepts string, integer, and double enum parameters and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString enumQueryString = \"-efg\"; // String | Query parameter enum test (string)\nBigDecimal enumQueryInteger = new BigDecimal(); // BigDecimal | Query parameter enum test (double)\nDouble enumQueryDouble = 3.4D; // Double | Query parameter enum test (double)\ntry {\n    apiInstance.testEnumQueryParameters(enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumQueryParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Java\nDESCRIPTION: This snippet demonstrates how to find pets by their status using the PetApi. It configures OAuth2 authentication, creates a list of status values, and calls the findPetsByStatus method. The method returns a List of Pet objects and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> status = Arrays.asList(\"status_example\"); // List<String> | Status values that need to be considered for filter\ntry {\n    List<Pet> result = apiInstance.findPetsByStatus(status);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByStatus\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Updating an Existing Pet with the Swagger Client API in Java\nDESCRIPTION: Example of how to use the updatePet method of the PetApi class to update an existing pet. This code demonstrates OAuth2 authentication setup and exception handling when updating a pet's information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/PetApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiClient;\n//import io.swagger.client.ApiException;\n//import io.swagger.client.Configuration;\n//import io.swagger.client.auth.*;\n//import io.swagger.client.api.PetApi;\n\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nPet body = new Pet(); // Pet | Pet object that needs to be added to the store\ntry {\n    apiInstance.updatePet(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: HasOnlyReadOnly Properties Definition in Markdown\nDESCRIPTION: A table defining the properties of the HasOnlyReadOnly class. It specifies two optional String properties: 'bar' and 'foo'. The table includes columns for property name, data type, description, and notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/HasOnlyReadOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**foo** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumIntegerEnum Values\nDESCRIPTION: Defines the possible integer enum values including positive and negative numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of the ClassModel class using a Markdown table. It specifies a single optional property 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading FormatTest Model Package in Perl\nDESCRIPTION: Shows how to load the FormatTest model class in a Perl application using the WWW::SwaggerClient module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::FormatTest;\n```\n\n----------------------------------------\n\nTITLE: Defining Name Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Name model schema. Includes property names, data types, descriptions and optional status indicators.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **int** |  | \n**snake_case** | **int** |  | [optional] \n**property** | **string** |  | [optional] \n**_123_number** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Serialization with fakeOuterBooleanSerialize in Bash\nDESCRIPTION: Command example for testing the serialization of outer boolean types. This endpoint takes an optional OuterBoolean input body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli fakeOuterBooleanSerialize\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, prepares a Client object as the request body, and makes an API call to test special tags. The method returns a Client object and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: This code snippet demonstrates how to use the testSpecialTags method of the AnotherFakeApi class. It creates an instance of AnotherFakeApi, prepares a Client object as the request body, and makes an API call to test special tags. The method returns a Client object and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading an Image for a Pet using SwaggerPetstore in JavaScript\nDESCRIPTION: This snippet shows how to upload an image for a pet using the SwaggerPetstore PetApi. It requires OAuth2 authentication and accepts a pet ID as input. It returns an ApiResponse object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\nvar defaultClient = SwaggerPetstore.ApiClient.instance;\n\n// Configure OAuth2 access token for authorization: petstore_auth\nvar petstore_auth = defaultClient.authentications['petstore_auth'];\npetstore_auth.accessToken = 'YOUR ACCESS TOKEN';\n\nvar apiInstance = new SwaggerPetstore.PetApi();\n\nvar petId = 789; // Number | ID of pet to update\n\nvar opts = { \n  'additionalMetadata': \"additionalMetadata_example\", // String | Additional data to pass to server\n  'file': \"/path/to/file.txt\" // File | file to upload\n};\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully. Returned data: ' + data);\n  }\n};\napiInstance.uploadFile(petId, opts, callback);\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization with FakeOuterBooleanSerialize in C#\nDESCRIPTION: Example code demonstrating how to test serialization of outer boolean types using the FakeApi. The method accepts an optional boolean value as input and returns a boolean response from the API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class FakeOuterBooleanSerializeExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new bool?(); // bool? | Input boolean as post body (optional) \n\n            try\n            {\n                bool? result = apiInstance.FakeOuterBooleanSerialize(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.FakeOuterBooleanSerialize: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with CocoaPods\nDESCRIPTION: Command to install Alamofire dependencies using CocoaPods after configuring the Podfile.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pod install\n```\n\n----------------------------------------\n\nTITLE: Loading the WWW::SwaggerClient::FakeApi module in Perl\nDESCRIPTION: This snippet demonstrates how to load the FakeApi package in a Perl application to interact with the Swagger-generated client API.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::FakeApi;\n```\n\n----------------------------------------\n\nTITLE: Fetching a Purchase Order by ID in C# using Swagger-Generated Client\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order by its ID using the StoreApi. It specifies that integer IDs less than or equal to 5 or greater than 10 are valid.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class GetOrderByIdExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = 789;  // long? | ID of pet that needs to be fetched\n\n            try\n            {\n                // Find purchase order by ID\n                Order result = apiInstance.GetOrderById(orderId);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.GetOrderById: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ContainerInterface in PHP\nDESCRIPTION: Defines the core ContainerInterface with get() and has() methods for dependency injection containers. The get() method retrieves entries by ID while has() checks for entry existence.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/ContainerInterface.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\nnamespace Interop\\Container;\n\nuse Interop\\Container\\Exception\\ContainerException;\nuse Interop\\Container\\Exception\\NotFoundException;\n\n/**\n * Describes the interface of a container that exposes methods to read its entries.\n */\ninterface ContainerInterface\n{\n    /**\n     * Finds an entry of the container by its identifier and returns it.\n     *\n     * @param string $id Identifier of the entry to look for.\n     *\n     * @throws NotFoundException  No entry was found for this identifier.\n     * @throws ContainerException Error while retrieving the entry.\n     *\n     * @return mixed Entry.\n     */\n    public function get($id);\n\n    /**\n     * Returns true if the container can return an entry for the given identifier.\n     * Returns false otherwise.\n     *\n     * @param string $id Identifier of the entry to look for.\n     *\n     * @return boolean\n     */\n    public function has($id);\n}\n```\n\n----------------------------------------\n\nTITLE: Finding a Purchase Order by ID in Java\nDESCRIPTION: This snippet demonstrates how to retrieve a purchase order using its ID. It uses the StoreApi class and handles potential ApiExceptions. The method accepts order IDs as longs, with a note that valid responses are for IDs less than or equal to 5 or greater than 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters in Java using Swagger Codegen FakeApi\nDESCRIPTION: This snippet demonstrates how to call the testEnumParameters method of the FakeApi class. It includes setting up various enum parameters and handling potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nList<String> enumFormStringArray = Arrays.asList(\"enumFormStringArray_example\");\nString enumFormString = \"-efg\";\nList<String> enumHeaderStringArray = Arrays.asList(\"enumHeaderStringArray_example\");\nString enumHeaderString = \"-efg\";\nList<String> enumQueryStringArray = Arrays.asList(\"enumQueryStringArray_example\");\nString enumQueryString = \"-efg\";\nInteger enumQueryInteger = 56;\nDouble enumQueryDouble = 3.4D;\ntry {\n    apiInstance.testEnumParameters(enumFormStringArray, enumFormString, enumHeaderStringArray, enumHeaderString, enumQueryStringArray, enumQueryString, enumQueryInteger, enumQueryDouble);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testEnumParameters\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: FormatTest Model Properties Table in Markdown\nDESCRIPTION: A markdown table that defines all properties of the FormatTest model, including their types, descriptions, and whether they are optional or required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/FormatTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# FormatTest\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**integer** | **Integer** |  |  [optional]\n**int32** | **Integer** |  |  [optional]\n**int64** | **Long** |  |  [optional]\n**number** | [**BigDecimal**](BigDecimal.md) |  | \n**_float** | **Float** |  |  [optional]\n**_double** | **Double** |  |  [optional]\n**string** | **String** |  |  [optional]\n**_byte** | **byte[]** |  | \n**binary** | **byte[]** |  |  [optional]\n**date** | [**LocalDate**](LocalDate.md) |  | \n**dateTime** | [**DateTime**](DateTime.md) |  |  [optional]\n**uuid** | **String** |  |  [optional]\n**password** | **String** |  | \n```\n\n----------------------------------------\n\nTITLE: Defining Property Types with Various Capitalization Patterns in Swagger\nDESCRIPTION: Markdown table defining properties with different capitalization patterns including camelCase (smallCamel), PascalCase (capitalCamel), snake_case (small_snake), SCREAMING_SNAKE_CASE (CAPITAL_SNAKE), and special cases like scAETHFlowPoints and ATT_NAME.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using PetApi in Java\nDESCRIPTION: This example demonstrates how to update a pet's information using form data with the updatePetWithForm method from the PetApi class. It allows updating specific fields like name and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Markdown\nDESCRIPTION: A markdown table describing all properties of the User model, including property names, data types, descriptions, and whether they are optional. The properties include user identification, personal information, authentication details, and status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**username** | **String** |  | [optional] \n**firstName** | **String** |  | [optional] \n**lastName** | **String** |  | [optional] \n**email** | **String** |  | [optional] \n**password** | **String** |  | [optional] \n**phone** | **String** |  | [optional] \n**userStatus** | **Number** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a pet from the Petstore using Python\nDESCRIPTION: Example code for deleting a pet from the Petstore API using Python. Requires OAuth2 authentication with the petstore_auth token, pet ID to identify the pet to delete, and an optional API key.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# Configure OAuth2 access token for authorization: petstore_auth\nconfiguration = petstore_api.Configuration()\nconfiguration.access_token = 'YOUR_ACCESS_TOKEN'\n\n# create an instance of the API class\napi_instance = petstore_api.PetApi(petstore_api.ApiClient(configuration))\npet_id = 789 # int | Pet id to delete\napi_key = 'api_key_example' # str |  (optional)\n\ntry:\n    # Deletes a pet\n    api_instance.delete_pet(pet_id, api_key=api_key)\nexcept ApiException as e:\n    print(\"Exception when calling PetApi->delete_pet: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Updating a Pet with Form Data using Java\nDESCRIPTION: This snippet demonstrates how to update a pet in the store using form data with the PetApi. It takes a pet ID, name, and status as parameters, then calls the updatePetWithForm method, handling any potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/docs/PetApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.api.PetApi;\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | ID of pet that needs to be updated\nString name = \"name_example\"; // String | Updated name of the pet\nString status = \"status_example\"; // String | Updated status of the pet\ntry {\n    apiInstance.updatePetWithForm(petId, name, status);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#updatePetWithForm\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Importing User Model Package in Dart\nDESCRIPTION: This snippet shows how to import the package containing the User model in a Dart application. It's typically used at the beginning of a Dart file that needs to work with User objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Testing String Serialization in Java\nDESCRIPTION: Example code showing string serialization using the Fake API. Makes a POST request to /fake/outer/string endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString body = \"body_example\"; // String | Input string as post body\ntry {\n    String result = apiInstance.fakeOuterStringSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterStringSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: EnumArrays Model Properties Table Definition in Markdown\nDESCRIPTION: Markdown table defining the properties, types, and characteristics of the EnumArrays model class. Shows two properties: JustSymbol as a string and ArrayEnum as a List of strings, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**JustSymbol** | **string** |  | [optional] \n**ArrayEnum** | **List&lt;string&gt;** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Class Properties in Markdown\nDESCRIPTION: Describes the properties of the SpecialModelName class using a markdown table. It specifies the property name, data type, description, and whether it's optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Dog Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, descriptions and notes for the Dog model class. Includes three properties: class_name (required), color (optional with default value), and breed (optional).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/Dog.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | **String** |  | \n**color** | **String** |  | [optional] [default to 'red']\n**breed** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Complete Example of Using the Petstore API in Python\nDESCRIPTION: Comprehensive example demonstrating how to use the Petstore API client, including importing dependencies, initializing the API client, making a request, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/python/README.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi(petstore_api.ApiClient(configuration))\ntest_code_inject____end____rn_n_r = 'test_code_inject____end____rn_n_r_example' # str | To test code injection */ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r (optional)\n\ntry:\n    # To test code injection */ ' \\\" =end -- \\\\r\\\\n \\\\n \\\\r\n    api_instance.test_code_inject____end__rn_n_r(test_code_inject____end____rn_n_r=test_code_inject____end____rn_n_r)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_code_inject____end__rn_n_r: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Status using Kotlin\nDESCRIPTION: Example of how to find pets by their status using the PetApi class. The snippet demonstrates creating an instance of PetApi, defining status values as a filter, and handling the returned array of Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval status : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Status values that need to be considered for filter\ntry {\n    val result : kotlin.Array<Pet> = apiInstance.findPetsByStatus(status)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#findPetsByStatus\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#findPetsByStatus\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking fake_outer_string_serialize in Python for Swagger Petstore API\nDESCRIPTION: Demonstrates how to call the fake_outer_string_serialize endpoint to test serialization of outer string types. This example creates an API instance, makes the call with an optional string body parameter, and handles exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/FakeApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nbody = petstore_api.OuterString() # OuterString | Input string as post body (optional)\n\ntry:\n    api_response = api_instance.fake_outer_string_serialize(body=body)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->fake_outer_string_serialize: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Service Creation Function in Pimple\nDESCRIPTION: Shows how to use the raw() method to get the underlying anonymous function for a service definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n$container['session'] = function ($c) {\n    return new Session($c['session_storage']);\n};\n\n$sessionFunction = $container->raw('session');\n```\n\n----------------------------------------\n\nTITLE: Swagger User Model Schema Definition\nDESCRIPTION: Defines the data structure for a User model with properties for identification, personal information, authentication and status tracking. All fields are optional and include proper C# type mappings.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **long?** |  | [optional] \n**Username** | **string** |  | [optional] \n**FirstName** | **string** |  | [optional] \n**LastName** | **string** |  | [optional] \n**Email** | **string** |  | [optional] \n**Password** | **string** |  | [optional] \n**Phone** | **string** |  | [optional] \n**UserStatus** | **int?** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite Objects in Swagger API\nDESCRIPTION: This endpoint is used to test serialization of objects with outer number type. It accepts an optional OUTER_COMPOSITE object as the request body and returns the same type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/FAKE_API.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# **fake_outer_composite_serialize**\n> fake_outer_composite_serialize (body:  detachable OUTER_COMPOSITE ): detachable OUTER_COMPOSITE\n\t\n\n\n\nTest serialization of object with outer number type\n\n\n### Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n **body** | [**OUTER_COMPOSITE**](OUTER_COMPOSITE.md)| Input composite as post body | [optional] \n\n### Return type\n\n[**OUTER_COMPOSITE**](OuterComposite.md)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: Not defined\n```\n\n----------------------------------------\n\nTITLE: Using testClassname method with Fake_classname_tags123Api in Java\nDESCRIPTION: This example demonstrates how to use the testClassname method of the Fake_classname_tags123Api class. It initializes an API instance, creates a client model, makes a PATCH request to '/fake_classname_test', and handles any resulting exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Fake_classname_tags123Api.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.Fake_classname_tags123Api;\n\n\nFake_classname_tags123Api apiInstance = new Fake_classname_tags123Api();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClassname(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling Fake_classname_tags123Api#testClassname\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties for SwaggerPetstore API in Markdown\nDESCRIPTION: This snippet defines the properties of the User model for the SwaggerPetstore API. It includes fields for user identification, personal information, and account status. All fields are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.User\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**username** | **String** |  | [optional] \n**firstName** | **String** |  | [optional] \n**lastName** | **String** |  | [optional] \n**email** | **String** |  | [optional] \n**password** | **String** |  | [optional] \n**phone** | **String** |  | [optional] \n**userStatus** | **Number** | User Status | [optional]\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for AdditionalPropertiesClass Model\nDESCRIPTION: Markdown table defining the properties of AdditionalPropertiesClass including mapProperty (a string-to-string map) and mapOfMapProperty (a nested map structure).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **{String: String}** |  | [optional] \n**mapOfMapProperty** | **{String: {String: String}}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading ArrayOfArrayOfNumberOnly Model in Perl\nDESCRIPTION: Demonstrates how to load the ArrayOfArrayOfNumberOnly model class in a Perl application. This model contains a property 'array_array_number' which is an optional two-dimensional array of numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ArrayOfArrayOfNumberOnly;\n```\n\n----------------------------------------\n\nTITLE: Defining EnumStringRequiredEnum Values\nDESCRIPTION: Enumeration defining the possible string values for the enumStringRequired property: UPPER, lower, and empty string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: Deleting User in Java using Swagger Client\nDESCRIPTION: Deletes a user by username. Can only be performed by logged in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Calling testSpecialTags Method in Java using Swagger Client\nDESCRIPTION: Example code demonstrating how to call the testSpecialTags method using the AnotherFakeApi client. This code creates an API instance, initializes a Client model object, and makes the API call while handling potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java using FakeApi\nDESCRIPTION: This snippet illustrates how to use the testClientModel method of FakeApi to test the \"client\" model. It shows the process of creating a FakeApi instance, calling the method with a Client object, and handling the response and potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in Java\nDESCRIPTION: This snippet illustrates how to use the testClientModel method of the FakeApi class to test the 'client' model. It shows the process of creating an API instance, setting up the request body, making the API call, and handling the response or potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testClientModel(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testClientModel\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: User Login Authentication in Swagger Petstore API\nDESCRIPTION: Example demonstrating how to authenticate a user by logging them into the system. This endpoint requires username and password parameters and returns a string value, likely a session token or authentication confirmation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar username = \"username_example\"; // String | The user name for login\n\nvar password = \"password_example\"; // String | The password for login in clear text\n\napiInstance.loginUser(username, password).then(function(data) {\n  console.log('API called successfully. Returned data: ' + data);\n}, function(error) {\n  console.error(error);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Composite in Java\nDESCRIPTION: This code example shows how to use the fakeOuterCompositeSerialize method of the FakeApi class to test serialization of an object with outer number type. It demonstrates creating an API instance, setting up the request body, and handling the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Response Schema for Successful Order Operation\nDESCRIPTION: JSON schema defining the response structure for a successful order operation, referencing the Order model definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"description\" : \"successful operation\",\n  \"schema\" : {\n    \"$ref\" : \"#/definitions/Order\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet from Store using Java API Client\nDESCRIPTION: Example code demonstrating pet deletion using the Swagger API client. Requires OAuth2 authentication and accepts petId and optional apiKey parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags - Java Implementation\nDESCRIPTION: Example code demonstrating how to find pets by tags using PetApi client. Shows handling of list parameters and OAuth2 authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nList<String> tags = Arrays.asList(\"tags_example\"); // List<String> | Tags to filter by\ntry {\n    List<Pet> result = apiInstance.findPetsByTags(tags);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#findPetsByTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating SwaggerPetstore Server in Haskell\nDESCRIPTION: This code snippet shows how to set up a server for the SwaggerPetstore API using the auto-generated bindings. It imports the necessary modules, defines a server with handlers, and runs the server on a specified host and port.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/haskell-servant/README.md#2025-04-20_snippet_1\n\nLANGUAGE: haskell\nCODE:\n```\n{-# LANGUAGE RecordWildCards #-}\n\nimport SwaggerPetstore.API\n\n-- A module you wrote yourself, containing all handlers needed for the SwaggerPetstoreBackend type.\nimport SwaggerPetstore.Handlers\n\n-- Run a SwaggerPetstore server on localhost:8080\nmain :: IO ()\nmain = do\n  let server = SwaggerPetstoreBackend{..}\n  runSwaggerPetstoreServer (ServerConfig \"localhost\" 8080) server\n```\n\n----------------------------------------\n\nTITLE: Defining EnumTest Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumTest class, including their names, types, and optional status. It uses a markdown table format to present the information clearly.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Capitalization model using a markdown table. It includes different naming conventions (camel case, snake case) and a specific attribute for pet name.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**small_camel** | **str** |  | [optional] \n**capital_camel** | **str** |  | [optional] \n**small_snake** | **str** |  | [optional] \n**capital_snake** | **str** |  | [optional] \n**sca_eth_flow_points** | **str** |  | [optional] \n**att_name** | **str** | Name of the pet  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Class Properties in Swagger/OpenAPI\nDESCRIPTION: Markdown table defining the properties of the NumberOnly class. Contains a single optional property 'just_number' of type Float.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/ruby/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Petstore::NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**just_number** | **Float** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: MapTest Properties Schema Definition\nDESCRIPTION: Defines two map properties: mapMapOfString (a nested map of strings) and mapOfEnumString (a map with enum string values).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | **{String: {String: String}}** |  | [optional] \n**mapOfEnumString** | **{String: String}** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: User Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties, data types, descriptions and optional status for the User model. The table includes basic user information fields with their corresponding data types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving a User by Username in Swagger PHP Client\nDESCRIPTION: This example demonstrates how to retrieve a user's details by their username. The response is a User model object containing the user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Api/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\nrequire_once(__DIR__ . '/vendor/autoload.php');\n\n$apiInstance = new Swagger\\Client\\Api\\UserApi(\n    // If you want use custom http client, pass your client which implements `GuzzleHttp\\ClientInterface`.\n    // This is optional, `GuzzleHttp\\Client` will be used as default.\n    new GuzzleHttp\\Client()\n);\n$username = \"username_example\"; // string | The name that needs to be fetched. Use user1 for testing.\n\ntry {\n    $result = $apiInstance->getUserByName($username);\n    print_r($result);\n} catch (Exception $e) {\n    echo 'Exception when calling UserApi->getUserByName: ', $e->getMessage(), PHP_EOL;\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Markdown API Response Model Schema\nDESCRIPTION: Markdown table defining the properties of an ApiResponse model including code (integer), type (string), and message (string). All fields are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **int** |  | [optional] \n**type** | **string** |  | [optional] \n**message** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Enum Values in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines three enum values for the 'EnumClass' enumeration. Each value is represented by a specific string, including special characters and formatting.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: FakeClassnameTags API Module in Haskell\nDESCRIPTION: Module declaration and type class instances for the fake_classname_test endpoint that tests class names in snake case format.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_49\n\nLANGUAGE: haskell\nCODE:\n```\nmodule SwaggerPetstore.API.FakeClassnameTags123\n\ntestClassname :: (Consumes TestClassname MimeJSON, MimeRender MimeJSON Client) => Client -> SwaggerPetstoreRequest TestClassname MimeJSON Client MimeJSON\ndata TestClassname\n```\n\n----------------------------------------\n\nTITLE: Updating User in Swagger API\nDESCRIPTION: This endpoint updates an existing user. It requires the username and a User object in the request body. It can only be performed by a logged-in user. The response is empty.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: Markdown\nCODE:\n```\n# **update_user**\n> update_user(username, body)\nUpdated user\n\nThis can only be done by the logged in user.\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **username** | **String**| name that need to be deleted | \n  **body** | [**User**](User.md)| Updated user object | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Model Properties with Mapped Types in JavaScript/TypeScript\nDESCRIPTION: Defines the MapTest model with two main properties: mapMapOfString (a nested map structure) and mapOfEnumString (a map with enum string values). Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | **{String: {String: String}}** |  | [optional] \n**mapOfEnumString** | **{String: String}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet using PetApi in Java\nDESCRIPTION: This snippet shows how to delete a pet from the store using the PetApi. It includes setting up the API client, configuring OAuth2 authentication, and handling exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure OAuth2 access token for authorization: petstore_auth\nOAuth petstore_auth = (OAuth) defaultClient.getAuthentication(\"petstore_auth\");\npetstore_auth.setAccessToken(\"YOUR ACCESS TOKEN\");\n\nPetApi apiInstance = new PetApi();\nLong petId = 789L; // Long | Pet id to delete\nString apiKey = \"apiKey_example\"; // String | \ntry {\n    apiInstance.deletePet(petId, apiKey);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling PetApi#deletePet\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a User in Java using Swagger Client\nDESCRIPTION: This snippet demonstrates how to create a new user using the Swagger client in Java. It initializes a UserApi instance, creates a User object, and calls the createUser method. The code also includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pet Inventory using StoreApi in Java\nDESCRIPTION: This snippet shows how to get the pet inventories by status using the StoreApi. It includes API key authentication setup and error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/StoreApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApiClient defaultClient = Configuration.getDefaultApiClient();\n\n// Configure API key authorization: api_key\nApiKeyAuth api_key = (ApiKeyAuth) defaultClient.getAuthentication(\"api_key\");\napi_key.setApiKey(\"YOUR API KEY\");\n// Uncomment the following line to set a prefix for the API key, e.g. \"Token\" (defaults to null)\n//api_key.setApiKeyPrefix(\"Token\");\n\nStoreApi apiInstance = new StoreApi();\ntry {\n    Map<String, Integer> result = apiInstance.getInventory();\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getInventory\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java with Swagger Client\nDESCRIPTION: Example code for testing the serialization of an object with outer number type using the FakeApi. It sends an OuterComposite object as the request body and receives an OuterComposite response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties with FakeApi in Perl\nDESCRIPTION: This snippet demonstrates how to use the test_inline_additional_properties method of the FakeApi. It creates an object parameter and makes the API call with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: perl\nCODE:\n```\nuse Data::Dumper;\nuse WWW::SwaggerClient::FakeApi;\nmy $api_instance = WWW::SwaggerClient::FakeApi->new(\n);\n\nmy $param = WWW::SwaggerClient::Object::object->new(); # object | request body\n\neval { \n    $api_instance->test_inline_additional_properties(param => $param);\n};\nif ($@) {\n    warn \"Exception when calling FakeApi->test_inline_additional_properties: $@\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean in Java\nDESCRIPTION: This snippet demonstrates how to use the fakeOuterBooleanSerialize method of the FakeApi class to test serialization of outer boolean types. It shows how to create an instance of FakeApi, call the method with a boolean input, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Numeric Constants Enum with BigDecimal in Java\nDESCRIPTION: This code snippet defines an enum called 'Numbers' with four constants representing the numbers 7, 8, 9, and 10. Each constant is initialized with a new BigDecimal object for precise decimal representation. This approach ensures exact decimal values and allows for consistent mathematical operations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\n\nNUMBER_8 (value: new BigDecimal(8))\n\nNUMBER_9 (value: new BigDecimal(9))\n\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Capitalization model using a Markdown table format. It includes various naming conventions and specifies the type and optionality of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Getting Pet Inventory Status in Dart\nDESCRIPTION: Example demonstrating how to get pet inventories by status. This endpoint requires API key authorization and returns a map of status codes to quantities.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure API key authorization: api_key\n//swagger.api.Configuration.apiKey{'api_key'} = 'YOUR_API_KEY';\n// uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n//swagger.api.Configuration.apiKeyPrefix{'api_key'} = \"Bearer\";\n\nvar api_instance = new StoreApi();\n\ntry { \n    var result = api_instance.getInventory();\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getInventory: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Pet Properties Definition in Markdown\nDESCRIPTION: Defines the core properties of the Pet model including data types and optional status. Properties include id, category, name, photoUrls, tags and status fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**category** | [**Category**](Category.md) |  |  [optional]\n**name** | **String** |  | \n**photoUrls** | **List&lt;String&gt;** |  | \n**tags** | [**List&lt;Tag&gt;**](Tag.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | pet status in the store |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ReadOnlyFirst Model Structure in Swagger/OpenAPI\nDESCRIPTION: Defines the ReadOnlyFirst model with two optional string properties 'bar' and 'baz'. This markdown table format is commonly used in Swagger/OpenAPI specifications to define model structures that will be used for code generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ReadOnlyFirst\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Boolean in Java\nDESCRIPTION: This snippet demonstrates how to call the fakeOuterBooleanSerialize method of the FakeApi class to test serialization of outer boolean types. It shows how to set up the API instance, make the call, and handle potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model using a Markdown table. It includes the property names, their types, descriptions, and notes on optionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **my_number** | [**OuterNumber**](OuterNumber.md) |  | [optional] |\n| **my_string** | [**OuterString**](OuterString.md) |  | [optional] |\n| **my_boolean** | [**OuterBoolean**](OuterBoolean.md) |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Maven Dependency Configuration\nDESCRIPTION: Maven POM dependency configuration for including the Swagger Petstore Vertx client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/README.md#2025-04-20_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-petstore-vertx</artifactId>\n    <version>1.0.0</version>\n    <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the SpecialModelName class. Contains a single optional Long property named specialPropertyName.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**specialPropertyName** | **Long** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterBoolean Model Structure in Markdown\nDESCRIPTION: This snippet outlines the structure of the OuterBoolean model using a markdown table. The table is set up to display properties, but no actual properties are defined for this model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/OuterBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterBoolean\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Dart\nDESCRIPTION: Example of how to update a user's information using the updateUser method. Requires the username and a User object containing the updated information. Can only be done by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | name that need to be deleted\nvar body = new User(); // User | Updated user object\n\ntry { \n    api_instance.updateUser(username, body);\n} catch (e) {\n    print(\"Exception when calling UserApi->updateUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: User Login with SwagUserApi in Java\nDESCRIPTION: This code snippet shows how to log a user into the system using their username and password with the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'username' => 'username_example',\n    'password' => 'password_example'\n};\n\ntry {\n    // cross your fingers\n    String result = api.loginUser(params);\n    System.debug(result);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ContainerInterface Methods in PHP\nDESCRIPTION: Core interface definition specifying two required methods: get() for retrieving container entries which throws an exception if not found, and has() for checking entry existence. Both methods take a string identifier parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/ContainerInterface-meta.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ninterface ContainerInterface {\n    public function get(string $id);\n    public function has(string $id): bool;\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading Pet Image - Kotlin Implementation\nDESCRIPTION: Example code for uploading an image file for a pet. Includes optional metadata and returns an ApiResponse.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_7\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval petId : kotlin.Long = 789 // kotlin.Long | ID of pet to update\nval additionalMetadata : kotlin.String = additionalMetadata_example // kotlin.String | Additional data to pass to server\nval file : java.io.File = /path/to/file.txt // java.io.File | file to upload\ntry {\n    val result : ApiResponse = apiInstance.uploadFile(petId, additionalMetadata, file)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#uploadFile\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#uploadFile\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: ApiResponse Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the ApiResponse model including field names, data types, descriptions and optional status. The model contains three optional fields: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/volley/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing getOrderById Method in PHP\nDESCRIPTION: This PHP snippet shows the implementation of the getOrderById method in the StoreApi class. It takes an orderId parameter to fetch a specific purchase order and returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/StoreApiInterface.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/StoreApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\StoreApiInterface;\n\nclass StoreApi implements StoreApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of StoreApiInterface#getOrderById\n     */\n    public function getOrderById($orderId)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Swagger Property Definitions Table in Markdown\nDESCRIPTION: Defines a table of model properties including their names, types, descriptions and optional status. Shows handling of regular property names, snake case properties, and properties starting with numbers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Name\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating a User with SwagUserApi in Java\nDESCRIPTION: This code snippet shows how to update a user's information using their username and a user object with the SwagUserApi. It includes error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagUserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nSwagUserApi api = new SwagUserApi();\n\nMap<String, Object> params = new Map<String, Object>{\n    'username' => 'username_example',\n    'body' => SwagUser.getExample()\n};\n\ntry {\n    // cross your fingers\n    api.updateUser(params);\n} catch (Swagger.ApiException e) {\n    // ...handle your exceptions\n}\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition\nDESCRIPTION: Defines the possible decimal number values for the enumNumber property, including 1.1 and -1.2.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Deploying Scala Akka Petstore Client to Remote Maven Repository\nDESCRIPTION: Command to deploy the API client library to a remote Maven repository. This is useful for sharing the library with other developers or projects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/akka-scala/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean deploy\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with List Input in Java\nDESCRIPTION: Example of creating multiple users using a list input through the UserApi client. Similar to array input method, takes List of User objects and handles ApiException.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/UserApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithListInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithListInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in Java using Swagger Client\nDESCRIPTION: Example code demonstrating how to test JSON serialization of form data using the FakeApi class. Shows initialization and calling of testJsonFormData method with two string parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Codegen Properties in JSON\nDESCRIPTION: This JSON snippet defines custom properties for the Bash client generator, including markdown processing, cURL options, script name, and completion script generation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/bash/README.md#2025-04-20_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"processMarkdown\": true,\n  \"curlOptions\": \"-sS --tlsv1.2\",\n  \"scriptName\": \"petstore-cli\",\n  \"generateBashCompletion\": true,\n  \"generateZshCompletion\": true,\n  \"hostEnvironmentVariable\": \"PETSTORE_HOST\",\n  \"basicAuthEnvironmentVariable\": \"PETSTORE_BASIC_AUTH\",\n  \"apiKeyAuthEnvironmentVariable\": \"PETSTORE_API_KEY\"\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Outer Number Types in Java\nDESCRIPTION: Example of using the fakeOuterNumberSerialize endpoint to test serialization of outer number types. Uses BigDecimal as the data type for the request body and response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/FakeApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nBigDecimal body = new BigDecimal(); // BigDecimal | Input number as post body\ntry {\n    BigDecimal result = apiInstance.fakeOuterNumberSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterNumberSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties Table in Markdown\nDESCRIPTION: Markdown table defining class properties including their types, descriptions and optional status. The class contains UUID, OffsetDateTime, and Map properties that are all marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **uuid** | [**UUID**](UUID.md) |  |  [optional] |\n| **dateTime** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional] |\n| **map** | [**Map&lt;String, Animal&gt;**](Animal.md) |  |  [optional] |\n```\n\n----------------------------------------\n\nTITLE: Configuring Source Files and Library Target\nDESCRIPTION: Sets up include directories, defines supporting files, and creates the library target with all necessary source files.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/cpprest/CMakeLists.txt#2025-04-20_snippet_3\n\nLANGUAGE: cmake\nCODE:\n```\ninclude_directories(${PROJECT_SOURCE_DIR} api model ${CPPREST_INCLUDE_DIR})\n\n#SUPPORTING FILES\nset(SUPPORTING_FILES  \"ApiClient\" \"ApiConfiguration\" \"ApiException\" \"HttpContent\" \"IHttpBody\" \"JsonBody\" \"ModelBase\" \"MultipartFormData\" \"Object\")\n#SOURCE FILES\nfile(GLOB SOURCE_FILES  \"api/*\"  \"model/*\")\n\nadd_library(${PROJECT_NAME} ${SUPPORTING_FILES} ${SOURCE_FILES})\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet - Java REST Client Implementation\nDESCRIPTION: Example code showing how to delete a pet from the store using the REST client. Requires petId parameter and petstore_auth authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nPetApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).pet();\n\napi.deletePet()\n    .petIdPath(petId).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Route Methods in FastRoute\nDESCRIPTION: Examples showing how to define routes that respond to multiple HTTP methods. The code demonstrates both individual method definitions and the equivalent array-based syntax.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n// These two calls\n$r->addRoute('GET', '/test', 'handler');\n$r->addRoute('POST', '/test', 'handler');\n// Are equivalent to this one call\n$r->addRoute(['GET', 'POST'], '/test', 'handler');\n```\n\n----------------------------------------\n\nTITLE: Creating a User Example in Dart\nDESCRIPTION: Shows how to create a user using the UserApi. This operation can only be performed by a logged-in user. It takes a User object as input and returns no response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar body = new User(); // User | Created user object\n\ntry { \n    api_instance.createUser(body);\n} catch (e) {\n    print(\"Exception when calling UserApi->createUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Maven Dependency Configuration for Swagger Codegen 2.X\nDESCRIPTION: Maven dependency configuration for adding Swagger Codegen 2.X maven plugin to a project. Uses groupId io.swagger with version 2.4.44.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/versioning.md#2025-04-20_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n    <groupId>io.swagger</groupId>\n    <artifactId>swagger-codegen-maven-plugin</artifactId>\n    <version>2.4.44</version>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Creating browser bundle with Browserify\nDESCRIPTION: Command to bundle the JavaScript code with Browserify for browser usage.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nbrowserify main.js > bundle.js\n```\n\n----------------------------------------\n\nTITLE: Creating multiple users with array input\nDESCRIPTION: Example showing how to create multiple users at once by passing an array of User objects to the createWithArray endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nbody = [petstore_api.User()] # list[User] | List of user object\n\ntry:\n    # Creates list of users with given input array\n    api_instance.create_users_with_array_input(body)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->create_users_with_array_input: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining Category Class in Haskell\nDESCRIPTION: Defines the Category data type with constructor, accessors for id and name fields, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_22\n\nLANGUAGE: haskell\nCODE:\n```\n-- | Category\ndata Category\nCategory :: !(Maybe Integer) -> !(Maybe Text) -> Category\n\n-- | \"id\"\n[categoryId] :: Category -> !(Maybe Integer)\n\n-- | \"name\"\n[categoryName] :: Category -> !(Maybe Text)\n\n-- | FromJSON Category\n\n-- | ToJSON Category\n\n-- | Construct a value of type <a>Category</a> (by applying it's required\n--   fields, if any)\nmkCategory :: Category\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration for SwaggerPetstore\nDESCRIPTION: Webpack configuration snippet to resolve module loading issues with SwaggerPetstore.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/README.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding FastRoute Components\nDESCRIPTION: Shows how to customize FastRoute by overriding the default components via the options array. Demonstrates replacing the route parser, data generator, or dispatcher with custom implementations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    /* ... */\n}, [\n    'routeParser' => 'FastRoute\\\\RouteParser\\\\Std',\n    'dataGenerator' => 'FastRoute\\\\DataGenerator\\\\GroupCountBased',\n    'dispatcher' => 'FastRoute\\\\Dispatcher\\\\GroupCountBased',\n]);\n```\n\n----------------------------------------\n\nTITLE: Defining Number Enum Constants with BigDecimal in Java\nDESCRIPTION: This code snippet defines an enumeration of numeric constants using BigDecimal objects in Java. It includes the numbers 7, 8, 9, and 10 as enum values, which can be useful for representing precise decimal numbers in calculations or data structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Numbers.md#2025-04-20_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nNUMBER_7 (value: new BigDecimal(7))\nNUMBER_8 (value: new BigDecimal(8))\nNUMBER_9 (value: new BigDecimal(9))\nNUMBER_10 (value: new BigDecimal(10))\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path in Angular Bootstrap\nDESCRIPTION: TypeScript code showing how to set the base path for the API service during Angular application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: EnumTest Properties Definition\nDESCRIPTION: Defines the properties of EnumTest class including optional and required enum fields with their respective types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/EnumTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n**enumString** | [**EnumStringEnum**](#EnumStringEnum) |  |  [optional]\n**enumStringRequired** | [**EnumStringRequiredEnum**](#EnumStringRequiredEnum) |  | \n**enumInteger** | [**EnumIntegerEnum**](#EnumIntegerEnum) |  |  [optional]\n**enumNumber** | [**EnumNumberEnum**](#EnumNumberEnum) |  |  [optional]\n**outerEnum** | [**OuterEnum**](OuterEnum.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ParentAwareContainerInterface in PHP\nDESCRIPTION: An alternative approach (not adopted) that would have defined a ParentAwareContainerInterface with a setParentContainer method to establish relationships between containers.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/container-interop/container-interop/docs/Delegate-lookup-meta.md#2025-04-20_snippet_0\n\nLANGUAGE: php\nCODE:\n```\ninterface ParentAwareContainerInterface extends ReadableContainerInterface {\n    /**\n     * Sets the parent container associated to that container. This container will call\n     * the parent container to fetch dependencies.\n     *\n     * @param ContainerInterface $container\n     */\n    public function setParentContainer(ContainerInterface $container);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the OuterComposite model, including their names, types, descriptions, and optionality. It uses a markdown table format commonly used in API documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Using Swagger Petstore REST Template API Client in Java\nDESCRIPTION: Java code example demonstrating how to use the FakeApi from the Swagger Petstore REST Template API client library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/README.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.*;\nimport io.swagger.client.auth.*;\nimport io.swagger.client.model.*;\nimport io.swagger.client.api.FakeApi;\n\nimport java.io.File;\nimport java.util.*;\n\npublic class FakeApiExample {\n\n    public static void main(String[] args) {\n        \n        FakeApi apiInstance = new FakeApi();\n        Boolean body = true; // Boolean | Input boolean as post body\n        try {\n            Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n            System.out.println(result);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a user by username\nDESCRIPTION: Example showing how to delete a user by providing their username. This operation can only be performed by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.UserApi()\nusername = 'username_example' # str | The name that needs to be deleted\n\ntry:\n    # Delete user\n    api_instance.delete_user(username)\nexcept ApiException as e:\n    print(\"Exception when calling UserApi->delete_user: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Finding Pets by Tags - Kotlin Implementation\nDESCRIPTION: Example code for finding pets using multiple tags as filter criteria. Returns an array of matching Pet objects.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/PetApi.md#2025-04-20_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\n// Import classes:\n//import io.swagger.client.infrastructure.*\n//import io.swagger.client.models.*\n\nval apiInstance = PetApi()\nval tags : kotlin.Array<kotlin.String> =  // kotlin.Array<kotlin.String> | Tags to filter by\ntry {\n    val result : kotlin.Array<Pet> = apiInstance.findPetsByTags(tags)\n    println(result)\n} catch (e: ClientException) {\n    println(\"4xx response calling PetApi#findPetsByTags\")\n    e.printStackTrace()\n} catch (e: ServerException) {\n    println(\"5xx response calling PetApi#findPetsByTags\")\n    e.printStackTrace()\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing deleteOrder Method in PHP\nDESCRIPTION: This PHP snippet shows the implementation of the deleteOrder method in the StoreApi class. It takes an orderId parameter to delete a specific purchase order.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/StoreApiInterface.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n// src/Acme/MyBundle/Api/StoreApiInterface.php\n\nnamespace Acme\\MyBundle\\Api;\n\nuse Swagger\\Server\\Api\\StoreApiInterface;\n\nclass StoreApi implements StoreApiInterface\n{\n\n    // ...\n\n    /**\n     * Implementation of StoreApiInterface#deleteOrder\n     */\n    public function deleteOrder($orderId)\n    {\n        // Implement the operation ...\n    }\n\n    // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Get Order By ID Example - Java Swagger Client\nDESCRIPTION: Example showing how to retrieve a purchase order by ID using the Swagger Java client. Takes a Long order ID parameter and returns an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.StoreApi;\n\nStoreApi apiInstance = new StoreApi();\nLong orderId = 789L; // Long | ID of pet that needs to be fetched\ntry {\n    Order result = apiInstance.getOrderById(orderId);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#getOrderById\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of a Category model using a markdown table. It specifies two properties: Id (int64) and Name (string), both optional with default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**Id** | **int64** |  | [optional] [default to null]\n**Name** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Logging in a User in Dart\nDESCRIPTION: Example code for user login functionality. Takes username and password parameters and returns a string token upon successful authentication.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | The user name for login\nvar password = password_example; // String | The password for login in clear text\n\ntry { \n    var result = api_instance.loginUser(username, password);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling UserApi->loginUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Boolean Enumeration Values in Swagger Codegen\nDESCRIPTION: Defines two enum values TRUE and FALSE that correspond to the actual boolean values true and false. This is likely used for serialization or mapping between boolean values and string representations in API definitions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Defining MapTest Properties in SwaggerPetstore\nDESCRIPTION: Defines the properties of the MapTest class including mapMapOfString (a nested map of strings) and mapOfEnumString (a map with enumerated string values). Both properties are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/MapTest.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapMapOfString** | **{String: {String: String}}** |  | [optional] \n**mapOfEnumString** | **{String: String}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring Bash Completion for the Petstore CLI\nDESCRIPTION: Steps to set up Bash completion for the petstore-cli script, including loading the completion script and installing bash-completion on macOS.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nsource petstore-cli.bash-completion\n\n# Or copy to system-wide completion directory\nsudo cp petstore-cli.bash-completion /etc/bash-completion.d/petstore-cli\n\n# On macOS with Homebrew\nbrew install bash-completion\n\n# Add to ~/.bashrc\nif [ -f $(brew --prefix)/etc/bash_completion ]; then\n  . $(brew --prefix)/etc/bash_completion\nfi\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties Table in Markdown\nDESCRIPTION: Markdown table defining properties for a model class with four fields: name, snakeCase, property, and _123Number. Specifies data types and whether fields are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Documents the properties of the ModelApiResponse model including field names, types, and optionality. The model consists of three optional fields: code (Integer), type (String), and message (String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ModelApiResponse Properties in Markdown\nDESCRIPTION: Specifies the properties of the ModelApiResponse class using a markdown table. It includes the property names, their types, and optional status. This format is commonly used in Swagger/OpenAPI documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/ModelApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **Integer** |  |  [optional]\n**type** | **String** |  |  [optional]\n**message** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum for Order Statuses in Markdown\nDESCRIPTION: This code snippet defines an enumeration called OuterEnum with three possible values representing different stages of an order process. Each enum value is associated with a string representation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# OuterEnum\n\n## Enum\n\n\n* `PLACED` (value: `\"placed\"`)\n\n* `APPROVED` (value: `\"approved\"`)\n\n* `DELIVERED` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Declaring OuterEnum Type in TypeScript\nDESCRIPTION: Defines an enumeration type for order status with three possible values: placed, approved, and delivered. Used to represent the status of orders in the pet store system.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Testing Composite Object Serialization in Java\nDESCRIPTION: Example code demonstrating serialization of composite objects using the FakeApi client. Shows how to make a POST request with a composite object and handle the response.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/FakeApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nOuterComposite body = new OuterComposite(); // OuterComposite | Input composite as post body\ntry {\n    OuterComposite result = apiInstance.fakeOuterCompositeSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterCompositeSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Order by ID Example in Dart\nDESCRIPTION: Shows how to retrieve a purchase order using its ID. Valid for IDs <= 5 or > 10. Includes error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/StoreApi.md#2025-04-20_snippet_3\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new StoreApi();\nvar orderId = 789; // int | ID of pet that needs to be fetched\n\ntry { \n    var result = api_instance.getOrderById(orderId);\n    print(result);\n} catch (e) {\n    print(\"Exception when calling StoreApi->getOrderById: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Pet Example\nDESCRIPTION: Example code demonstrating how to delete a pet from the store using its ID. Requires OAuth2 authorization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/PetApi.md#2025-04-20_snippet_2\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n// TODO Configure OAuth2 access token for authorization: petstore_auth\n//swagger.api.Configuration.accessToken = 'YOUR_ACCESS_TOKEN';\n\nvar api_instance = new PetApi();\nvar petId = 789; // int | Pet id to delete\nvar apiKey = apiKey_example; // String | \n\ntry { \n    api_instance.deletePet(petId, apiKey);\n} catch (e) {\n    print(\"Exception when calling PetApi->deletePet: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Published petstore-integration-test Package\nDESCRIPTION: npm command to install the published version 1.0.3 of the petstore-integration-test package as a dependency in a project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/petstore-expected/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install petstore-integration-test@1.0.3 --save\n```\n\n----------------------------------------\n\nTITLE: Defining CAT Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Documents the properties of a CAT model including class_name (required STRING_32), color (optional STRING_32), and declawed (optional BOOLEAN). Each property includes type definition and nullability information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/CAT.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# CAT\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | [**STRING_32**](STRING_32.md) |  | [default to null]\n**color** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**declawed** | **BOOLEAN** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Testing Inline Additional Properties in Java Swagger Client\nDESCRIPTION: Example demonstrating how to call testInlineAdditionalProperties() method with an Object parameter. Shows basic error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/FakeApi.md#2025-04-20_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nObject param = null; // Object | request body\ntry {\n    apiInstance.testInlineAdditionalProperties(param);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testInlineAdditionalProperties\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModelBoolean Enum in Markdown\nDESCRIPTION: This snippet defines a ModelBoolean enum with two possible values: TRUE (represented as true) and FALSE (represented as false). This enum is likely used for boolean representations in generated code or API specifications.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ModelBoolean.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ModelBoolean\n\n## Enum\n\n\n* `TRUE` (value: `true`)\n\n* `FALSE` (value: `false`)\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Dependency in Gradle\nDESCRIPTION: Gradle dependency configuration to include the swagger-petstore-jersey2 client in your project's build file. This adds the client library to your project's dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-petstore-jersey2:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Adding Gradle Dependency for Swagger Android Client\nDESCRIPTION: Gradle configuration to add the Swagger Android client as a project dependency\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/README.md#2025-04-20_snippet_3\n\nLANGUAGE: groovy\nCODE:\n```\ncompile \"io.swagger:swagger-android-client:1.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array Input in Swagger Petstore API\nDESCRIPTION: Creates multiple users using an array input. Takes an array of User objects as input and returns no response body.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar SwaggerPetstore = require('swagger_petstore');\n\nvar apiInstance = new SwaggerPetstore.UserApi();\n\nvar body = [new SwaggerPetstore.User()]; // [User] | List of user object\n\n\nvar callback = function(error, data, response) {\n  if (error) {\n    console.error(error);\n  } else {\n    console.log('API called successfully.');\n  }\n};\napiInstance.createUsersWithArrayInput(body, callback);\n```\n\n----------------------------------------\n\nTITLE: Creating Gradle Wrapper Script for Kotlin Swagger Client\nDESCRIPTION: This command creates the Gradle wrapper script, which is a prerequisite for building the Kotlin client library for Swagger Petstore.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-threetenbp/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngradle wrapper\n```\n\n----------------------------------------\n\nTITLE: Testing Special Tags with AnotherFakeApi in Java\nDESCRIPTION: Example implementation of the testSpecialTags endpoint that sends a PATCH request to 'another-fake/dummy'. Takes a Client model as input and returns a Client model response. Demonstrates proper error handling for API exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/AnotherFakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.AnotherFakeApi;\n\n\nAnotherFakeApi apiInstance = new AnotherFakeApi();\nClient body = new Client(); // Client | client model\ntry {\n    Client result = apiInstance.testSpecialTags(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling AnotherFakeApi#testSpecialTags\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Values in Markdown\nDESCRIPTION: This snippet defines an EnumClass with three enum values. Each value is represented by a key and its corresponding string value. The enum includes special characters and parentheses in its values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `_ABC` (value: `\"_abc\"`)\n\n* `_EFG` (value: `\"-efg\"`)\n\n* `_XYZ_` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in OpenAPI/Swagger Markdown\nDESCRIPTION: This snippet defines the properties of an Animal model using OpenAPI/Swagger markdown syntax. It specifies two properties: className (a required String) and color (an optional String).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Animal\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**className** | **String** |  | \n**color** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Implementing Network Reachability Monitoring in Swift\nDESCRIPTION: This Swift example demonstrates how to use the NetworkReachabilityManager to listen for network status changes. It sets up a listener for network reachability changes and starts the monitoring process.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_65\n\nLANGUAGE: swift\nCODE:\n```\nlet manager = NetworkReachabilityManager(host: \"www.apple.com\")\n\nmanager?.listener = { status in\n    print(\"Network Status Changed: \\(status)\")\n}\n\nmanager?.startListening()\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Model Properties in Markdown for Swagger\nDESCRIPTION: This snippet defines the properties of the Tag model for the Swagger Petstore API. It includes two optional properties: 'id' of type Number and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Number** |  | [optional] \n**name** | **String** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining OuterComposite Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the OuterComposite model using a markdown table. It includes three optional properties: myNumber (BigDecimal), myString (String), and myBoolean (Boolean).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**myNumber** | [**BigDecimal**](BigDecimal.md) |  |  [optional]\n**myString** | **String** |  |  [optional]\n**myBoolean** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Networking with OMGHTTPURLRQ and Promises in Swift\nDESCRIPTION: This code example demonstrates using OMGHTTPURLRQ with PromiseKit extensions to perform a POST request and handle the JSON response with promise chains.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift5/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_4\n\nLANGUAGE: swift\nCODE:\n```\n// pod 'PromiseKit/OMGHTTPURLRQ'\n// https://github.com/PromiseKit/OMGHTTPURLRQ\nURLSession.POST(\"http://example.com\").asDictionary().then { json in\n    //…\n}.catch { error in\n    //…\n}\n```\n\n----------------------------------------\n\nTITLE: Updating User Details - API Method Definition in Objective-C\nDESCRIPTION: Defines the updateUser API method that takes a username and user object as parameters. The method updates user details and can only be executed by logged-in users.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/objc/default/docs/SWGUserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: objc\nCODE:\n```\n-(NSURLSessionTask*) updateUserWithUsername: (NSString*) username\n    body: (SWGUser*) body\n        completionHandler: (void (^)(NSError* error)) handler;\n```\n\n----------------------------------------\n\nTITLE: User Login in Java using Swagger Client\nDESCRIPTION: Example of logging in a user using username and password credentials. Returns a session string upon successful login.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/UserApi.md#2025-04-20_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The user name for login\nString password = \"password_example\"; // String | The password for login in clear text\ntry {\n    String result = apiInstance.loginUser(username, password);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#loginUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Class in Haskell\nDESCRIPTION: Defines the ArrayOfNumberOnly data type with constructor, accessor for ArrayNumber field, JSON conversion instances, and a utility function for creating instances.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_19\n\nLANGUAGE: haskell\nCODE:\n```\n-- | ArrayOfNumberOnly\ndata ArrayOfNumberOnly\nArrayOfNumberOnly :: !(Maybe [Double]) -> ArrayOfNumberOnly\n\n-- | <a>ArrayNumber</a>\n[arrayOfNumberOnlyArrayNumber] :: ArrayOfNumberOnly -> !(Maybe [Double])\n\n-- | FromJSON ArrayOfNumberOnly\n\n-- | ToJSON ArrayOfNumberOnly\n\n-- | Construct a value of type <a>ArrayOfNumberOnly</a> (by applying it's\n--   required fields, if any)\nmkArrayOfNumberOnly :: ArrayOfNumberOnly\n```\n\n----------------------------------------\n\nTITLE: Generating JAR for Manual Installation\nDESCRIPTION: Maven command to generate the JAR file for manual installation of the Swagger Java client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/README.md#2025-04-20_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn package\n```\n\n----------------------------------------\n\nTITLE: Creating NuGet Package from Swagger C# SDK\nDESCRIPTION: Command to build and package the C# SDK into a NuGet package. This uses the .nuspec file included with the project to create a package in the specified output directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet40/README.md#2025-04-20_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nnuget pack -Build -OutputDirectory out IO.Swagger.csproj\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies for Swagger Codegen\nDESCRIPTION: This snippet lists the required Python packages and their minimum versions for the Swagger Codegen project. It ensures compatibility and proper functionality of the codebase.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/requirements.txt#2025-04-20_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\ncertifi >= 14.05.14\nsix >= 1.10\npython_dateutil >= 2.5.3\nsetuptools >= 21.0.0\nurllib3 >= 1.15.1\n```\n\n----------------------------------------\n\nTITLE: Deleting an Order in Java\nDESCRIPTION: This snippet demonstrates how to delete a purchase order by ID using the StoreApi. It handles potential API exceptions and includes error logging.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nStoreApi apiInstance = new StoreApi();\nString orderId = \"orderId_example\"; // String | ID of the order that needs to be deleted\ntry {\n    apiInstance.deleteOrder(orderId);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling StoreApi#deleteOrder\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store in Go\nDESCRIPTION: This function deletes a pet from the store based on its ID. It requires the pet's ID and optionally an API key. The request is made via HTTP DELETE to the /pet/{petId} endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: Go\nCODE:\n```\nfunc DeletePet(ctx context.Context, petId int64, optional *PetApiDeletePetOpts) error\n```\n\n----------------------------------------\n\nTITLE: Creating Single User in Swagger API - Java\nDESCRIPTION: Example code showing how to create a single user through the Swagger API. Requires a User object as input and handles API exceptions. No authorization required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/UserApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nUser body = new User(); // User | Created user object\ntry {\n    apiInstance.createUser(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Enumeration for SwaggerPetstore in Markdown\nDESCRIPTION: This code snippet defines the OuterEnum enumeration with three possible values: placed, approved, and delivered. Each value is represented as a string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# SwaggerPetstore.OuterEnum\n\n## Enum\n\n\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger Petstore API using Java\nDESCRIPTION: This snippet shows how to delete a user by username. It uses the UserApi and handles potential ApiExceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be deleted\ntry {\n    apiInstance.deleteUser(username);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#deleteUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition in Markdown\nDESCRIPTION: Defines the possible values for the enumStringRequired property, which includes 'UPPER', 'lower', and empty string values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"EnumStringRequiredEnum\"></a>\n## Enum: EnumStringRequiredEnum\n\n\n* `UPPER` (value: `\"UPPER\"`)\n\n* `lower` (value: `\"lower\"`)\n\n* `empty` (value: `\"\"`)\n```\n\n----------------------------------------\n\nTITLE: Model200Response Properties Table in Markdown\nDESCRIPTION: Table defining the properties, types and descriptions for Model200Response object. Contains optional properties 'name' of type Integer and 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the AdditionalPropertiesClass model using a markdown table. It specifies the name, type, description, and optional status of each property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-asyncio/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**map_property** | **dict(str, str)** |  | [optional] \n**map_of_map_property** | **dict(str, dict(str, str))** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Example Usage of Swagger Pet API\nDESCRIPTION: Java code example demonstrating how to use the PetApi to add a new pet to the store\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/android/httpclient/README.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nimport io.swagger.client.api.PetApi;\n\npublic class PetApiExample {\n\n    public static void main(String[] args) {\n        PetApi apiInstance = new PetApi();\n        Pet body = new Pet(); // Pet | Pet object that needs to be added to the store\n        try {\n            apiInstance.addPet(body);\n        } catch (ApiException e) {\n            System.err.println(\"Exception when calling PetApi#addPet\");\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Custom SessionDelegate Subclass in Swift\nDESCRIPTION: Example of subclassing SessionDelegate to add logging functionality for HTTP redirections.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_60\n\nLANGUAGE: swift\nCODE:\n```\nclass LoggingSessionDelegate: Manager.SessionDelegate {\n    override func URLSession(\n        session: NSURLSession,\n        task: NSURLSessionTask,\n        willPerformHTTPRedirection response: NSHTTPURLResponse,\n        newRequest request: NSURLRequest,\n        completionHandler: NSURLRequest? -> Void)\n    {\n        print(\"URLSession will perform HTTP redirection to request: \\(request)\")\n\n        super.URLSession(\n            session,\n            task: task,\n            willPerformHTTPRedirection: response,\n            newRequest: request,\n            completionHandler: completionHandler\n        )\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Swagger Petstore Dependency in Maven POM\nDESCRIPTION: Maven dependency configuration to include the swagger-petstore-jersey2 client in your project's POM file. This adds the client library to your project's dependencies.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-petstore-jersey2</artifactId>\n  <version>1.0.0</version>\n  <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger\nDESCRIPTION: Specifies the properties of the Category model including id and name. Both properties are marked as optional. The id is of type Long, while the name is a String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Model200Response Property Table Definition in Markdown\nDESCRIPTION: Markdown table defining the properties of Model200Response model including property names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **name** | **int** |  | [optional] |\n| **_class** | **str** |  | [optional] |\n```\n\n----------------------------------------\n\nTITLE: Configuring Providers for Angular2 TypeScript Petstore API\nDESCRIPTION: TypeScript code to import and configure providers for the API module in an Angular application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/npm/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule, Configuration, ConfigurationParameters } from '@swagger/angular2-typescript-petstore';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Installation via Local Path in pubspec.yaml for Dart\nDESCRIPTION: YAML configuration for including the Swagger API Dart client as a dependency in a project via local file path. This is useful for development or when using a local copy of the package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/swagger/README.md#2025-04-20_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndependencies:\n  swagger:\n    path: /path/to/swagger\n```\n\n----------------------------------------\n\nTITLE: Manual Installation of SwaggerClient-php\nDESCRIPTION: Code snippet showing how to include the autoload.php file when manually installing the PHP client without Composer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n    require_once('/path/to/SwaggerClient-php/vendor/autoload.php');\n```\n\n----------------------------------------\n\nTITLE: Importing API Module With Configuration\nDESCRIPTION: Angular module configuration to import the API module with custom configuration factory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular2/README.md#2025-04-20_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiModule, Configuration, ConfigurationParameters } from '';\n\nexport function apiConfigFactory (): Configuration => {\n  const params: ConfigurationParameters = {\n    // set configuration parameters here.\n  }\n  return new Configuration(params);\n}\n\n@NgModule({\n    imports: [ ApiModule.forRoot(apiConfigFactory) ],\n    declarations: [ AppComponent ],\n    providers: [],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Loading Swagger Tag Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Swagger API package in Dart, which includes the Tag model.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Category Model Properties Table in Markdown\nDESCRIPTION: A markdown table that defines the properties of the Category model. It includes two properties: 'id' of type integer and 'name' of type string, both marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Model/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**name** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: User Logout in Dart\nDESCRIPTION: Example showing how to log out the currently logged-in user, ending their active session. This method requires no parameters.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\n\ntry { \n    api_instance.logoutUser();\n} catch (e) {\n    print(\"Exception when calling UserApi->logoutUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Flutter iOS Project in Xcode\nDESCRIPTION: Command to open a Flutter iOS project in Xcode workspace for customizing assets. This allows developers to access the Runner/Assets.xcassets in the Project Navigator for visual asset management.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/flutter_petstore/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nopen ios/Runner.xcworkspace\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the Category model using a markdown table. It specifies two optional properties: 'id' of type Long and 'name' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating a User in Dart\nDESCRIPTION: Example of how to update an existing user's information. This can only be done by the logged-in user.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/UserApi.md#2025-04-20_snippet_8\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n\nvar api_instance = new UserApi();\nvar username = username_example; // String | name that need to be deleted\nvar body = new User(); // User | Updated user object\n\ntry { \n    api_instance.updateUser(username, body);\n} catch (e) {\n    print(\"Exception when calling UserApi->updateUser: $e\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Getting User by Username in Java\nDESCRIPTION: Example of retrieving user details by username using the Swagger client API. Returns User object with full user information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/UserApi.md#2025-04-20_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nString username = \"username_example\"; // String | The name that needs to be fetched. Use user1 for testing.\ntry {\n    User result = apiInstance.getUserByName(username);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#getUserByName\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Boolean Serialization in Java Swagger Client\nDESCRIPTION: Example of using the FakeApi to test serialization of outer boolean types. Makes a POST request to /fake/outer/boolean endpoint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/FakeApi.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nBoolean body = true; // Boolean | Input boolean as post body\ntry {\n    Boolean result = apiInstance.fakeOuterBooleanSerialize(body);\n    System.out.println(result);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#fakeOuterBooleanSerialize\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Model Properties in Markdown\nDESCRIPTION: Documents the properties of the AdditionalPropertiesClass model including mapProperty and mapOfMapProperty. Both properties are optional and represent different kinds of map structures.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **{String: String}** |  | [optional] \n**mapOfMapProperty** | **{String: {String: String}}** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Composer for Slim PHP Application\nDESCRIPTION: This snippet shows how to use Composer to install the required dependencies for a Slim PHP application. It assumes you're in the project root directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/slim/slim/example/README.md#2025-04-20_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n$ cd Slim\n$ composer install\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in the Petstore API using Go\nDESCRIPTION: Function for deleting a user by their username. This operation can only be performed by the logged-in user. It requires a context for authentication and the username of the user to be deleted.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nDeleteUser(ctx, username)\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP Request Headers Configuration in Markdown\nDESCRIPTION: Specification of HTTP request headers including Content-Type and Accept values with navigation links to other documentation sections.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNet35/docs/FakeApi.md#2025-04-20_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n### HTTP request headers\n\n - **Content-Type**: application/json\n - **Accept**: Not defined\n\n[[Back to top]](#) [[Back to API list]](../README.md#documentation-for-api-endpoints) [[Back to Model list]](../README.md#documentation-for-models) [[Back to README]](../README.md)\n```\n\n----------------------------------------\n\nTITLE: Defining E'ArrayEnum Enum in Haskell\nDESCRIPTION: Defines an enum E'ArrayEnum with values 'fish' and 'crab', along with functions to convert between the enum and Text.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/docs/swagger-petstore.txt#2025-04-20_snippet_34\n\nLANGUAGE: Haskell\nCODE:\n```\ndata E'ArrayEnum\n\n-- | <pre>\n--   \"fish\"\n--   </pre>\nE'ArrayEnum'Fish :: E'ArrayEnum\n\n-- | <pre>\n--   \"crab\"\n--   </pre>\nE'ArrayEnum'Crab :: E'ArrayEnum\n\n-- | unwrap <a>E'ArrayEnum</a> enum\nfromE'ArrayEnum :: E'ArrayEnum -> Text\n\n-- | parse <a>E'ArrayEnum</a> enum\ntoE'ArrayEnum :: Text -> Either String E'ArrayEnum\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Swagger\nDESCRIPTION: Markdown table defining the properties of a Category model in Swagger specification. Includes two optional properties: an id of type Long and a name of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Category\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Container-Interop via Composer\nDESCRIPTION: Composer configuration for installing the container-interop package with version constraint.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/container-interop/container-interop/README.md#2025-04-20_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"require\": {\n        \"container-interop/container-interop\": \"~1.0\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Users with Array in Java\nDESCRIPTION: Creates multiple users by passing an array of User objects. Demonstrates bulk user creation with error handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/UserApi.md#2025-04-20_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUserApi apiInstance = new UserApi();\nList<User> body = Arrays.asList(new User()); // List<User> | List of user object\ntry {\n    apiInstance.createUsersWithArrayInput(body);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#createUsersWithArrayInput\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values Definition\nDESCRIPTION: Markdown table defining the allowed values for JustSymbolEnum, including greater than or equal to symbol and dollar sign.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | &quot;&gt;&#x3D;&quot;\nDOLLAR | &quot;$&quot;\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of ArrayTest class, including their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ArrayTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayOfString** | **List&lt;String&gt;** |  |  [optional]\n**arrayArrayOfInteger** | [**List&lt;List&lt;Long&gt;&gt;**](List.md) |  |  [optional]\n**arrayArrayOfModel** | [**List&lt;List&lt;ReadOnlyFirst&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfNumberOnly Model Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ArrayOfNumberOnly model using a Markdown table. It specifies the property name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/ArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**arrayNumber** | [**List&lt;BigDecimal&gt;**](BigDecimal.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing Enum Parameters with Python Petstore API Client\nDESCRIPTION: This code example shows how to test enum parameters with the FakeApi. It demonstrates setting up various enum parameter types including form, header, and query parameters with string arrays, strings, integers, and floating-point values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/FakeApi.md#2025-04-20_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom __future__ import print_function\nimport time\nimport petstore_api\nfrom petstore_api.rest import ApiException\nfrom pprint import pprint\n\n# create an instance of the API class\napi_instance = petstore_api.FakeApi()\nenum_form_string_array = ['enum_form_string_array_example'] # list[str] | Form parameter enum test (string array) (optional)\nenum_form_string = '-efg' # str | Form parameter enum test (string) (optional) (default to -efg)\nenum_header_string_array = ['enum_header_string_array_example'] # list[str] | Header parameter enum test (string array) (optional)\nenum_header_string = '-efg' # str | Header parameter enum test (string) (optional) (default to -efg)\nenum_query_string_array = ['enum_query_string_array_example'] # list[str] | Query parameter enum test (string array) (optional)\nenum_query_string = '-efg' # str | Query parameter enum test (string) (optional) (default to -efg)\nenum_query_integer = 56 # int | Query parameter enum test (double) (optional)\nenum_query_double = 1.2 # float | Query parameter enum test (double) (optional)\n\ntry:\n    # To test enum parameters\n    api_instance.test_enum_parameters(enum_form_string_array=enum_form_string_array, enum_form_string=enum_form_string, enum_header_string_array=enum_header_string_array, enum_header_string=enum_header_string, enum_query_string_array=enum_query_string_array, enum_query_string=enum_query_string, enum_query_integer=enum_query_integer, enum_query_double=enum_query_double)\nexcept ApiException as e:\n    print(\"Exception when calling FakeApi->test_enum_parameters: %s\\n\" % e)\n```\n\n----------------------------------------\n\nTITLE: Defining ModelList Properties Table in Markdown\nDESCRIPTION: Markdown table defining the ModelList data structure with a single optional string property named _123List.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/ModelList.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_123List** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Setting Base Path During Bootstrap\nDESCRIPTION: TypeScript code showing how to set a custom base path for API services during application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/npm/README.md#2025-04-20_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Running Haskell Swagger Petstore Tests with Stack\nDESCRIPTION: Command to run the integration tests using the Haskell Stack tool. The --install-ghc flag ensures that the Glasgow Haskell Compiler is installed if not already present.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/haskell-http-client/tests-integration/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nstack --install-ghc test\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values in Markdown\nDESCRIPTION: Specifies the possible values for the InnerEnum used in the mapOfEnumString property. It defines two enum values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining Category Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Category model using a markdown table. It defines two optional properties: 'id' as an integer and 'name' as a string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/python-tornado/docs/Category.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **int** |  | [optional] \n**name** | **str** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Defining EnumArrays Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the EnumArrays class, including their types and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justSymbol** | [**JustSymbolEnum**](#JustSymbolEnum) |  |  [optional]\n**arrayEnum** | [**List&lt;ArrayEnumEnum&gt;**](#List&lt;ArrayEnumEnum&gt;) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Package Installation Commands\nDESCRIPTION: Various npm commands for installing the package through different methods\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v5/with-interfaces/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @ --save\nnpm install PATH_TO_GENERATED_PACKAGE --save\nnpm link\n```\n\n----------------------------------------\n\nTITLE: Setting API Base Path with NgModule\nDESCRIPTION: Example of configuring the base path for the API service using Angular's dependency injection with NgModule.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\n\n@NgModule({\n    imports: [],\n    declarations: [ AppComponent ],\n    providers: [ provide: BASE_PATH, useValue: 'https://your-web-service.com' ],\n    bootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Base Path for Swagger Service in Angular\nDESCRIPTION: TypeScript code to override the default base path for the Swagger-generated service during Angular application bootstrap.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/additional-properties-expected/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from './path-to-swagger-gen-service/index';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: ArrayTest Property Definitions in Java\nDESCRIPTION: Defines three array properties: a simple string array, a nested array of integers, and a nested array of ReadOnlyFirst model objects. All properties are optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2/docs/ArrayTest.md#2025-04-20_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList<String> arrayOfString;\nList<List<Long>> arrayArrayOfInteger;\nList<List<ReadOnlyFirst>> arrayArrayOfModel;\n```\n\n----------------------------------------\n\nTITLE: Logging a User out of the System in Java\nDESCRIPTION: Example of logging the current user out of the system, which terminates their active session.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/UserApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.UserApi;\n\n\nUserApi apiInstance = new UserApi();\ntry {\n    apiInstance.logoutUser();\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling UserApi#logoutUser\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ArrayOfArrayOfNumberOnly Properties Table in Markdown\nDESCRIPTION: Markdown table documenting the properties of the ArrayOfArrayOfNumberOnly class. Defines the arrayArrayNumber property as an optional nested list of BigDecimal values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/vertx/docs/ArrayOfArrayOfNumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **arrayArrayNumber** | [**List&lt;List&lt;BigDecimal&gt;&gt;**](List.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Order by ID Using CLI\nDESCRIPTION: Command line example for fetching a purchase order by ID. Valid for integer IDs <= 5 or > 10, with other values generating exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npetstore-cli getOrderById order_id=value\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of a Tag model, including field names, data types, descriptions and optional notations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Factory Services in Pimple\nDESCRIPTION: Shows how to use the factory() method to create a new instance of a service each time it's requested.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$container['session'] = $container->factory(function ($c) {\n    return new Session($c['session_storage']);\n});\n```\n\n----------------------------------------\n\nTITLE: Referencing Swagger Codegen Project in Markdown\nDESCRIPTION: This code snippet provides a link to the Swagger Codegen project on GitHub, which was used to generate the server stub.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/scala-lagom-server/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[swagger-codegen](https://github.com/swagger-api/swagger-codegen)\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore Client with Maven\nDESCRIPTION: Command to install the API client library to your local Maven repository. This step is required before using the client in your Java application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/README.md#2025-04-20_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean install\n```\n\n----------------------------------------\n\nTITLE: Defining SpecialModelName Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the SpecialModelName model using a markdown table. It specifies the property name, type, description, and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**special_property_name** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum in Markdown\nDESCRIPTION: This snippet defines the enum values for the JustSymbolEnum, which are used by the 'justSymbol' property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<a name=\"JustSymbolEnum\"></a>\n## Enum: JustSymbolEnum\n\n\n* `GREATER_THAN_OR_EQUAL_TO` (value: `\">=\"`)\n\n* `DOLLAR` (value: `\"$\"`)\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values in Markdown\nDESCRIPTION: Table defining the possible values for the EnumNumberEnum type, including positive and negative decimal values (1.1 and -1.2).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: EnumNumberEnum\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Defining Order Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of the Order model, including their types, descriptions, and optional status. It uses a markdown table format commonly used in Swagger documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**DateTime**](DateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Pet Status Enumeration in Markdown\nDESCRIPTION: Defines an enumeration for the pet's status in the store. This enum specifies the possible values for the status property of a Pet object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/Pet.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\nName | Value\n---- | -----\nAVAILABLE | &quot;available&quot;\nPENDING | &quot;pending&quot;\nSOLD | &quot;sold&quot;\n```\n\n----------------------------------------\n\nTITLE: Importing User Model Package in Dart\nDESCRIPTION: This snippet shows how to import the Swagger API package in Dart, which includes the User model. This is a prerequisite for using the User model in a Dart application.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Using Environment Variables for API Base Path\nDESCRIPTION: Example of configuring the API base path using environment variables with Angular CLI.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Integer Enum Values Definition\nDESCRIPTION: Specifies possible integer values for the enum, including positive and negative integers. Defines two possible values: 1 and -1.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1 | 1\nNUMBER_MINUS_1 | -1\n```\n\n----------------------------------------\n\nTITLE: Webpack configuration for AMD loader issue\nDESCRIPTION: Configuration to add to webpack config to resolve the 'Module not found' error by disabling AMD loader.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/javascript/README.md#2025-04-20_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nmodule: {\n  rules: [\n    {\n      parser: {\n        amd: false\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting ReadOnlyFirst Model Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of the ReadOnlyFirst model class. Defines two optional string properties: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play24/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ReadOnlyFirst\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**bar** | **String** |  |  [optional]\n**baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties Table in Markdown\nDESCRIPTION: Markdown table that documents the properties, types, and optional status of the Model200Response model fields.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumNumberEnum Values Definition\nDESCRIPTION: Defines the allowed decimal number values for the EnumNumberEnum type including positive and negative decimals.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Using Parameters in Service Definitions\nDESCRIPTION: Shows how to use defined parameters within a service definition, allowing for easier configuration changes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$container['session_storage'] = function ($c) {\n    return new $c['session_storage_class']($c['cookie_name']);\n};\n```\n\n----------------------------------------\n\nTITLE: Getting Store Order by ID Using Rest Assured\nDESCRIPTION: Example showing how to retrieve a purchase order by ID using the Rest Assured client. Valid for integer IDs <= 5 or > 10.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/rest-assured/docs/StoreApi.md#2025-04-20_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStoreApi api = ApiClient.api(ApiClient.Config.apiConfig().withReqSpecSupplier(\n                () -> new RequestSpecBuilder()\n                        .setBaseUri(\"http://petstore.swagger.io:80/v2\"))).store();\n\napi.getOrderById()\n    .orderIdPath(orderId).execute(r -> r.prettyPeek());\n```\n\n----------------------------------------\n\nTITLE: Defining Model200Response Properties in Markdown\nDESCRIPTION: Defines the properties of the Model200Response class using a Markdown table. The class has two optional properties: 'name' of type Integer and 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  |  [optional]\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading the OuterComposite Model Package in Perl\nDESCRIPTION: Example showing how to load the WWW::SwaggerClient::Object::OuterComposite model package in a Perl application. This is required before using the OuterComposite model in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/OuterComposite.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::OuterComposite;\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: Defines the structure of a ClassModel object using a Markdown table. It specifies a single optional property 'propertyClass' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Name Schema Properties in Markdown for Swagger/OpenAPI\nDESCRIPTION: This table defines the properties of the 'Name' schema for Swagger Codegen. It includes property names, their data types, descriptions, and whether they are optional. The schema contains one required property ('name') and three optional properties ('snakeCase', 'property', and '_123Number').\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/Name.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **Integer** |  | \n**snakeCase** | **Integer** |  |  [optional]\n**property** | **String** |  |  [optional]\n**_123Number** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Angular CLI Environment Configuration\nDESCRIPTION: Setting up API base path using Angular CLI environment files\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/default/README.md#2025-04-20_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [ ],\n  providers: [{ provide: BASE_PATH, useValue: environment.API_BASE_PATH }],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n```\n\n----------------------------------------\n\nTITLE: Defining EnumClass Values in SwaggerPetstore\nDESCRIPTION: Defines three enum values for the EnumClass in SwaggerPetstore. Each enum has a name and a corresponding string value. The values are 'abc', 'efg', and 'xyz' with specific string representations.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/EnumClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* `abc` (value: `\"_abc\"`)\n\n* `efg` (value: `\"-efg\"`)\n\n* `xyz` (value: `\"(xyz)\"`)\n```\n\n----------------------------------------\n\nTITLE: Registering a Service Provider in Pimple\nDESCRIPTION: Shows how to register a service provider with a Pimple container, allowing the provider to add its services and parameters to the container.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n$pimple->register(new FooProvider());\n```\n\n----------------------------------------\n\nTITLE: JustSymbolEnum Values Definition in Markdown\nDESCRIPTION: Defines the allowed values for the JustSymbolEnum type, including greater than or equal to symbol and dollar symbol.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \">=\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Dependency\nDESCRIPTION: XML snippet to add the API client library as a dependency in a Maven project's POM file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/README.md#2025-04-20_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<dependency>\n  <groupId>io.swagger</groupId>\n  <artifactId>swagger-petstore-jersey2</artifactId>\n  <version>1.0.0</version>\n  <scope>compile</scope>\n</dependency>\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum in Markdown\nDESCRIPTION: This snippet defines the JustSymbolEnum enumeration with its possible values: GREATER_THAN_OR_EQUAL_TO and DOLLAR.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;&#x3D;\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Defining Cat Model Properties in Swagger Markdown\nDESCRIPTION: Swagger/OpenAPI markdown table defining the properties of a Cat model. Contains a single optional boolean property 'declawed'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2rx2/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining JustSymbolEnum Values in Markdown\nDESCRIPTION: A markdown table that lists the possible values for the JustSymbolEnum enumeration type used in the justSymbol property.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate-withXml/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: JustSymbolEnum\nName | Value\n---- | -----\nGREATER_THAN_OR_EQUAL_TO | \"&gt;&#x3D;\"\nDOLLAR | \"$\"\n```\n\n----------------------------------------\n\nTITLE: Installing NuGet Packages for C# Swagger Petstore SDK\nDESCRIPTION: This snippet shows how to install the required NuGet packages for the C# Swagger Petstore SDK using the Package Manager Console.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/README.md#2025-04-20_snippet_0\n\nLANGUAGE: nuget\nCODE:\n```\nInstall-Package RestSharp\nInstall-Package Newtonsoft.Json\nInstall-Package JsonSubTypes\n```\n\n----------------------------------------\n\nTITLE: Installing Carthage with Homebrew\nDESCRIPTION: Commands to install Carthage dependency manager using Homebrew, an alternative to CocoaPods for integrating Alamofire.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ brew update\n$ brew install carthage\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of ClassModel class, showing the property name, type, description and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ClassModel\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**propertyClass** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: EnumStringRequiredEnum Values Definition\nDESCRIPTION: Defines the allowed string values for the EnumStringRequiredEnum type, matching the optional enum but marked as required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/EnumTest.md#2025-04-20_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nUPPER | \"UPPER\"\nLOWER | \"lower\"\nEMPTY | \"\"\n```\n\n----------------------------------------\n\nTITLE: ReadOnlyFirst Properties Table\nDESCRIPTION: Markdown table defining properties of the ReadOnlyFirst model with two optional string fields: bar and baz.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson/docs/ReadOnlyFirst.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n| ------------ | ------------- | ------------- | ------------- |\n| **bar** | **String** |  |  [optional]\n| **baz** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Loading Model Classes in Perl Swagger Client\nDESCRIPTION: Example of how to load model classes in the Perl Swagger client library. This snippet demonstrates importing the ModelReturn object class.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/deep_module_test/README.md#2025-04-20_snippet_1\n\nLANGUAGE: perl\nCODE:\n```\nuse Something::Deep::Object::ModelReturn;\n```\n\n----------------------------------------\n\nTITLE: Order Properties Table in Markdown\nDESCRIPTION: Markdown table defining the properties of the Order model including field names, types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Order.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Name | Type | Description | Notes |\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | [**OffsetDateTime**](OffsetDateTime.md) |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Configuring Carthage for RxSwift in Swift\nDESCRIPTION: This snippet demonstrates how to add RxSwift as a dependency using Carthage by adding an entry to the Cartfile.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\ngithub \"ReactiveX/RxSwift\" ~> 3.0\n```\n\n----------------------------------------\n\nTITLE: Swagger Client Model Properties Table\nDESCRIPTION: Markdown table defining the properties of the Client model. Specifies a single optional string property named 'client'.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Client\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Unpublished Package via NPM\nDESCRIPTION: Command to install an unpublished package directly from a local path, though this approach is not recommended.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/array-and-object-expected/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm install PATH_TO_GENERATED_PACKAGE --save\n```\n\n----------------------------------------\n\nTITLE: Documenting Authorization for Pet Update API in Markdown\nDESCRIPTION: This snippet specifies the authorization method required for the pet update API endpoint, which is petstore_auth.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart/swagger-browser-client/docs/PetApi.md#2025-04-20_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n### Authorization\n\n[petstore_auth](../README.md#petstore_auth)\n```\n\n----------------------------------------\n\nTITLE: Sending GET Request to Retrieve Order by ID\nDESCRIPTION: Endpoint for finding a purchase order by its ID. Requires the order ID as a path parameter.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/documentation/cwiki/confluence-markup.txt#2025-04-20_snippet_10\n\nLANGUAGE: markup\nCODE:\n```\nget /store/order/{orderId}\n```\n\n----------------------------------------\n\nTITLE: Loading API Packages in Perl Swagger Client\nDESCRIPTION: Example of how to load the API packages in the Perl Swagger client library. This snippet demonstrates importing the FakeApi module.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/deep_module_test/README.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse Something::Deep::FakeApi;\n```\n\n----------------------------------------\n\nTITLE: Opening Generated Static HTML Documentation\nDESCRIPTION: Command to navigate to the generated static HTML documentation directory and open the index.html file in the default browser to view the documentation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/README.md#2025-04-20_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\ncd samples/html/\nopen index.html\n```\n\n----------------------------------------\n\nTITLE: Installing PromiseKit via CocoaPods\nDESCRIPTION: CocoaPods configuration for installing PromiseKit. Specifies Swift version requirement and PromiseKit version constraints.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/promisekit/SwaggerClientTests/Pods/PromiseKit/README.md#2025-04-20_snippet_1\n\nLANGUAGE: ruby\nCODE:\n```\nuse_frameworks!\nswift_version = \"3.1\"\npod \"PromiseKit\", \"~> 4.3\"\n```\n\n----------------------------------------\n\nTITLE: Loading the ModelReturn Package in Perl Swagger Client\nDESCRIPTION: This snippet demonstrates how to load the ModelReturn class from the WWW::SwaggerClient::Object namespace in a Perl application. This is required before using the ModelReturn object in your code.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/perl/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::ModelReturn;\n```\n\n----------------------------------------\n\nTITLE: Defining Swagger Model Properties with Mixed Capitalization\nDESCRIPTION: Markdown table defining model properties with different capitalization styles. Includes standard camelCase, PascalCase, snake_case naming patterns and special cases like acronyms. All properties are optional String types.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  | [optional] \n**capitalCamel** | **String** |  | [optional] \n**smallSnake** | **String** |  | [optional] \n**capitalSnake** | **String** |  | [optional] \n**sCAETHFlowPoints** | **String** |  | [optional] \n**ATT_NAME** | **String** | Name of the pet  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Accessing the Swagger JSON endpoint\nDESCRIPTION: URL to access the swagger specification in JSON format from the running server. This provides the API documentation that can be used by Swagger UI or other tools.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/jaxrs-resteasy/joda/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttp://localhost:8080/v2/swagger.json\n```\n\n----------------------------------------\n\nTITLE: Browser Bundle Generation\nDESCRIPTION: Command to generate a browser-compatible bundle using browserify.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/README.md#2025-04-20_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nbrowserify main.js > bundle.js\n```\n\n----------------------------------------\n\nTITLE: Loading the EnumArrays Model Package in Perl\nDESCRIPTION: Shows how to load the EnumArrays model package in a Perl application using the WWW::SwaggerClient library.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/perl/docs/EnumArrays.md#2025-04-20_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\nuse WWW::SwaggerClient::Object::EnumArrays;\n```\n\n----------------------------------------\n\nTITLE: JustSymbol Enum Values\nDESCRIPTION: Defines the allowed values for the justSymbol property, including >= and $ symbols.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript/docs/EnumArrays.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* `GREATER_THAN_OR_EQUAL_TO` (value: `\">=\"`)\n\n* `DOLLAR` (value: `\"$\"`)\n```\n\n----------------------------------------\n\nTITLE: Building and Installing Dependencies for Swagger-Generated Angular Client\nDESCRIPTION: Commands for installing dependencies and building the TypeScript sources for the generated Angular client.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4.3/with-interfaces/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing FastRoute with Composer\nDESCRIPTION: Command to install the FastRoute PHP router library using Composer package manager. Requires PHP 5.4 or newer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncomposer require nikic/fast-route\n```\n\n----------------------------------------\n\nTITLE: Creating Gradle Wrapper for Kotlin Server\nDESCRIPTION: Command to create the Gradle wrapper script which is needed before building the project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/kotlin-server/ktor/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngradle wrapper\n```\n\n----------------------------------------\n\nTITLE: Including SDK Namespaces in C# Project\nDESCRIPTION: Code showing the required using statements to include the SDK namespaces in a C# project.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/csharp/SwaggerClient/README.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n```\n\n----------------------------------------\n\nTITLE: Defining Order Status Enum Values in Swagger\nDESCRIPTION: Specifies the allowed values for the status property of an Order. The enum includes three possible states: placed, approved, and delivered.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/kotlin-string/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nstatus | placed, approved, delivered\n```\n\n----------------------------------------\n\nTITLE: Loading Pet Model Package in Dart\nDESCRIPTION: This snippet demonstrates how to import the Pet model package in a Dart application. It uses the swagger API package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/flutter_petstore/swagger/docs/Pet.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Setting Base Path in Bootstrap\nDESCRIPTION: Examples of setting API base path during application bootstrap\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v4/npm/README.md#2025-04-20_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from '@swagger/angular2-typescript-petstore';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Installing Swagger Petstore SDK via Git\nDESCRIPTION: Command to install the Swagger Petstore JavaScript client from a Git repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-es6/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install GIT_USER_ID/GIT_REPO_ID --save\n```\n\n----------------------------------------\n\nTITLE: Testing Client Model in C# Using FakeApi\nDESCRIPTION: Example showing how to test the \"client\" model using the FakeApi. It creates an instance of FakeApi, calls the TestClientModel method with a ModelClient object body, and handles possible exceptions. The method returns a ModelClient object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClient/docs/FakeApi.md#2025-04-20_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class TestClientModelExample\n    {\n        public void main()\n        {\n            var apiInstance = new FakeApi();\n            var body = new ModelClient(); // ModelClient | client model\n\n            try\n            {\n                // To test \\\"client\\\" model\n                ModelClient result = apiInstance.TestClientModel(body);\n                Debug.WriteLine(result);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling FakeApi.TestClientModel: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining 200 Response Model Properties in Markdown\nDESCRIPTION: Markdown table documenting the properties of a 200 response model. Includes field names, data types, descriptions and optional status.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/Model200Response.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Model200Response\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**name** | **int** |  | [optional] \n**class** | **string** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Deploying Swagger Petstore REST Template API Client with Maven\nDESCRIPTION: Command to deploy the API client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resttemplate/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Base Path for petstore-integration-test Service in Angular 2\nDESCRIPTION: TypeScript code to set a custom base path for the petstore-integration-test service during Angular 2 app bootstrap. This is useful when the service base URL differs from the generated base path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/test/resources/integrationtests/typescript/petstore-expected/README.md#2025-04-20_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BASE_PATH } from './path-to-swagger-gen-service/index';\n\nbootstrap(AppComponent, [\n    { provide: BASE_PATH, useValue: 'https://your-web-service.com' },\n]);\n```\n\n----------------------------------------\n\nTITLE: Defining HTTP Request Headers in Markdown for Swagger API Documentation\nDESCRIPTION: This snippet documents the HTTP request headers for an API endpoint. It specifies that no Content-Type is defined for the request, while the endpoint accepts both XML and JSON response formats.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/UserApiInterface.md#2025-04-20_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n\n[[Back to top]](#) [[Back to API list]](../../README.md#documentation-for-api-endpoints) [[Back to Model list]](../../README.md#documentation-for-models) [[Back to README]](../../README.md)\n```\n\n----------------------------------------\n\nTITLE: Using npm link for Local Development\nDESCRIPTION: Commands to link the package locally for development purposes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm link\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm link @\n```\n\n----------------------------------------\n\nTITLE: Generating JAR File\nDESCRIPTION: Maven command to generate the JAR file for manual installation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/README.md#2025-04-20_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean package\n```\n\n----------------------------------------\n\nTITLE: Building TypeScript Package\nDESCRIPTION: Commands to install dependencies and build the TypeScript package.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore-security-test/typescript-angular/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Defining User Properties in Swagger Markdown\nDESCRIPTION: This snippet defines the properties of a User object using Swagger markdown syntax. It includes fields for user identification, personal information, contact details, and account status. All fields are marked as optional.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/retrofit2-play25/docs/User.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**username** | **String** |  |  [optional]\n**firstName** | **String** |  |  [optional]\n**lastName** | **String** |  |  [optional]\n**email** | **String** |  |  [optional]\n**password** | **String** |  |  [optional]\n**phone** | **String** |  |  [optional]\n**userStatus** | **Integer** | User Status |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deploying API Client to Remote Maven Repository\nDESCRIPTION: Maven command to deploy the API client library to a remote Maven repository.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2-java8/README.md#2025-04-20_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nmvn clean deploy\n```\n\n----------------------------------------\n\nTITLE: Importing the Swagger API Package in Dart\nDESCRIPTION: Shows how to import the Swagger API package in a Dart application to use the Store API functionality.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/dart-jaguar/swagger/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'package:swagger/api.dart';\n```\n\n----------------------------------------\n\nTITLE: Building Swagger Petstore Server on Windows\nDESCRIPTION: Batch command to build the Swagger Petstore server on Windows systems. This command executes the build batch file.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/aspnetcore-interface-controller/README.md#2025-04-20_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\nbuild.bat\n```\n\n----------------------------------------\n\nTITLE: Deleting a User in Swagger API\nDESCRIPTION: This endpoint deletes a user. It requires the username as a parameter and can only be performed by a logged-in user. The response is empty and no authorization is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/UserApi.md#2025-04-20_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n# **delete_user**\n> delete_user(username)\nDelete user\n\nThis can only be done by the logged in user.\n\n### Required Parameters\n\nName | Type | Description  | Notes\n------------- | ------------- | ------------- | -------------\n  **username** | **String**| The name that needs to be deleted | \n\n### Return type\n\n (empty response body)\n\n### Authorization\n\nNo authorization required\n\n### HTTP request headers\n\n - **Content-Type**: Not defined\n - **Accept**: application/xml, application/json\n```\n\n----------------------------------------\n\nTITLE: Defining ClassModel Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ClassModel using a markdown table. It specifies a single optional property '_class' of type string.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/ClassModel.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_class** | **string** |  | [optional] \n```\n\n----------------------------------------\n\nTITLE: Generating Ruby API Client with Swagger Codegen\nDESCRIPTION: This curl command sends a POST request to generate a Ruby API client using the Swagger Petstore demo API specification.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/docs/online-generators.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncurl -X POST -H \"content-type:application/json\" -d '{\"swaggerUrl\":\"https://petstore.swagger.io/v2/swagger.json\"}' https://generator.swagger.io/api/gen/clients/ruby\n```\n\n----------------------------------------\n\nTITLE: Defining InnerEnum Values in Markdown\nDESCRIPTION: Defines the possible values for the InnerEnum used in the mapOfEnumString property. It includes two enum values: UPPER and LOWER.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp4-gson-parcelableModel/docs/MapTest.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: Map&lt;String, InnerEnum&gt;\nName | Value\n---- | -----\nUPPER | &quot;UPPER&quot;\nLOWER | &quot;lower&quot;\n```\n\n----------------------------------------\n\nTITLE: Defining NumberOnly Model Structure in Markdown\nDESCRIPTION: Describes the structure of the NumberOnly model, which contains a single optional property 'justNumber' of type Number. This model is likely used in the Swagger Petstore API for scenarios where only a numeric value is required.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-override-default-config/docs/NumberOnly.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# SwaggerPetstore.NumberOnly\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**justNumber** | **Number** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data in FakeApi with Java\nDESCRIPTION: Example code for calling the testJsonFormData method which tests JSON serialization of form data. It demonstrates how to initialize and pass string parameters to the API for form field testing.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/FakeApi.md#2025-04-20_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n// Import classes:\n//import io.swagger.client.ApiException;\n//import io.swagger.client.api.FakeApi;\n\n\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\"; // String | field1\nString param2 = \"param2_example\"; // String | field2\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Structure for Ints Model Properties\nDESCRIPTION: Defines the structure for documenting properties of the Ints model class using a markdown table format. The table is currently empty but includes headers for Name, Type, Description, and Notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetCoreProject/docs/Ints.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n```\n\n----------------------------------------\n\nTITLE: Order Status Enum Definition in Markdown\nDESCRIPTION: Markdown enumeration of possible values for the Order status property. This defines the allowed string values that can be assigned to the status field of an Order object.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/javascript-promise-es6/docs/Order.md#2025-04-20_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## Enum: StatusEnum\n\n\n* `placed` (value: `\"placed\"`)\n\n* `approved` (value: `\"approved\"`)\n\n* `delivered` (value: `\"delivered\"`)\n```\n\n----------------------------------------\n\nTITLE: Defining AdditionalPropertiesClass Properties in Swagger/OpenAPI\nDESCRIPTION: Defines the properties of AdditionalPropertiesClass including mapProperty (a simple string to string map) and mapOfMapProperty (a nested map structure). Both properties are optional as indicated by the [optional] notation.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson/docs/AdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# AdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**mapProperty** | **Map<String, String>** |  |  [optional]\n**mapOfMapProperty** | [**Map<String, Map<String, String>>**](Map.md) |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining ApiResponse Model Properties in Markdown\nDESCRIPTION: Documents the properties of the ApiResponse model including data types and optional status. The model contains three fields: code (integer), type (string), and message (string), all of which are optional with null defaults.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/rust/docs/ApiResponse.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ApiResponse\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**code** | **i32** |  | [optional] [default to null]\n**_type** | **String** |  | [optional] [default to null]\n**message** | **String** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Chaining Multiple Response Handlers in Swift using Alamofire\nDESCRIPTION: This snippet shows how to chain multiple response handlers for a single request using Alamofire. It handles both String and JSON responses for the same GET request.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift/promisekit/SwaggerClientTests/Pods/Alamofire/README.md#2025-04-20_snippet_15\n\nLANGUAGE: swift\nCODE:\n```\nAlamofire.request(.GET, \"https://httpbin.org/get\")\n         .validate()\n         .responseString { response in\n             print(\"Response String: \\(response.result.value)\")\n         }\n         .responseJSON { response in\n             print(\"Response JSON: \\(response.result.value)\")\n         }\n```\n\n----------------------------------------\n\nTITLE: Defining SwagOrder Properties in Markdown\nDESCRIPTION: Defines the properties of the SwagOrder model, including their types and optional status. It covers fields such as id, petId, quantity, shipDate, status, and complete.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/apex/docs/SwagOrder.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**petId** | **Long** |  |  [optional]\n**quantity** | **Integer** |  |  [optional]\n**shipDate** | **Datetime** |  |  [optional]\n**status** | [**StatusEnum**](#StatusEnum) | Order Status |  [optional]\n**complete** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Pet from the Store using C# and Swagger\nDESCRIPTION: This snippet shows how to delete a pet from the store using the DeletePet method of the PetApi class. It sets up OAuth2 authentication, specifies the pet ID to delete, and handles potential exceptions.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp-dotnet2/SwaggerClientTest/Lib/SwaggerClient/docs/PetApi.md#2025-04-20_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeletePetExample\n    {\n        public void main()\n        {\n            \n            // Configure OAuth2 access token for authorization: petstore_auth\n            Configuration.Default.AccessToken = \"YOUR_ACCESS_TOKEN\";\n\n            var apiInstance = new PetApi();\n            var petId = 789;  // long? | Pet id to delete\n            var apiKey = apiKey_example;  // string |  (optional) \n\n            try\n            {\n                // Deletes a pet\n                apiInstance.DeletePet(petId, apiKey);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling PetApi.DeletePet: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Model Property Definition Table in Markdown\nDESCRIPTION: Markdown table defining the properties, types, descriptions and optional status for the SpecialModelName model\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/php/SwaggerClient-php/docs/Model/SpecialModelName.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**special_property_name** | **int** |  | [optional]\n```\n\n----------------------------------------\n\nTITLE: Importing Generated Module with CommonJS Syntax from Local Directory\nDESCRIPTION: Example of importing the generated TypeScript/JavaScript module using CommonJS module syntax when the module is directly copied or symlinked into a local directory.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/typescript-aurelia/README.md#2025-04-20_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport localName = require('./symlinkDir')';\n```\n\n----------------------------------------\n\nTITLE: Defining Tag Properties in Markdown for Swagger Codegen\nDESCRIPTION: This snippet defines the properties of a Tag model using a Markdown table. It specifies two optional properties: id (Long type) and name (String type).\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/resteasy/docs/Tag.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**id** | **Long** |  |  [optional]\n**name** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Updating a User in the Petstore API using Go\nDESCRIPTION: Function for updating an existing user's information. This operation can only be performed by the logged-in user. It requires a context, the username of the user to update, and a User object containing the updated information.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore/docs/UserApi.md#2025-04-20_snippet_7\n\nLANGUAGE: go\nCODE:\n```\nUpdateUser(ctx, username, body)\n```\n\n----------------------------------------\n\nTITLE: Configuring Pet API Service in YAML\nDESCRIPTION: YAML configuration for registering the Pet API service in Symfony bundle\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/php-symfony/SymfonyBundle-php/Resources/docs/Api/PetApiInterface.md#2025-04-20_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n    # ...\n    acme.my_bundle.api.pet:\n        class: Acme\\MyBundle\\Api\\PetApi\n        tags:\n            - { name: \"swagger_server.api\", api: \"pet\" }\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Defining ModelReturn Class Properties in Markdown\nDESCRIPTION: This snippet defines the properties of the ModelReturn class using a Markdown table. It specifies a single optional property '_return' of type Integer.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey1/docs/ModelReturn.md#2025-04-20_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**_return** | **Integer** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Installing Pimple as a PHP C extension\nDESCRIPTION: Series of commands to clone, compile, and install Pimple as a PHP C extension for improved performance.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone https://github.com/silexphp/Pimple\n$ cd Pimple/ext/pimple\n$ phpize\n$ ./configure\n$ make\n$ make install\n```\n\n----------------------------------------\n\nTITLE: Namespace Definitions for Swagger Petstore API Server\nDESCRIPTION: Defines the namespaces used in the Swagger Petstore API server implementation. These namespaces organize server API components and data models.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/restbed/README.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nio::swagger::server::api\nio::swagger::server::model\n```\n\n----------------------------------------\n\nTITLE: Deleting Store Orders in C#\nDESCRIPTION: Example code demonstrating how to delete a purchase order by ID using the Store API. Works with integer IDs below 1000. Includes error handling and API client initialization.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/StoreApi.md#2025-04-20_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nusing System;\nusing System.Diagnostics;\nusing IO.Swagger.Api;\nusing IO.Swagger.Client;\nusing IO.Swagger.Model;\n\nnamespace Example\n{\n    public class DeleteOrderExample\n    {\n        public void main()\n        {\n            var apiInstance = new StoreApi();\n            var orderId = orderId_example;  // string | ID of the order that needs to be deleted\n\n            try\n            {\n                // Delete purchase order by ID\n                apiInstance.DeleteOrder(orderId);\n            }\n            catch (Exception e)\n            {\n                Debug.Print(\"Exception when calling StoreApi.DeleteOrder: \" + e.Message );\n            }\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Animal Model Properties in Markdown Table\nDESCRIPTION: Table defining the properties of the Animal class model. Includes two properties: className (required string) and color (optional string), with their types and default values.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/go/go-petstore-withXml/docs/Animal.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**ClassName** | **string** |  | [default to null]\n**Color** | **string** |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Client Model Properties in Markdown\nDESCRIPTION: Specifies the properties of the Client model using a markdown table. The model has a single optional property 'client' of type String.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Client.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**client** | **String** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration for API Base Path\nDESCRIPTION: Example of extending environment files for different build configurations to set API base path.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/typescript-angular-v2/with-interfaces/README.md#2025-04-20_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nexport const environment = {\n  production: false,\n  API_BASE_PATH: 'http://127.0.0.1:8080'\n};\n```\n\n----------------------------------------\n\nTITLE: Accessing REST API URLs for Spring Boot Deployment\nDESCRIPTION: URLs to access various services and API documentation when the application is deployed using Spring Boot. Includes links for available services listing, Swagger API, and CXF WADL.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/resources/JavaJaxRS/cxf/server/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* Available services listing\nhttp://localhost:8080/\n\n* Swagger API  \n http://localhost:8080/services/swagger.json\n\n* CXF WADL\n http://localhost:8080/services?_wadl\n```\n\n----------------------------------------\n\nTITLE: Defining GitHub Repository Search in Swift using RxSwift\nDESCRIPTION: This code snippet demonstrates how to define a search for GitHub repositories using RxSwift. It throttles user input, performs distinct checks, and flat maps the search query to an observable sequence of repository results.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/swift4/rxswift/SwaggerClientTests/Pods/RxSwift/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Swift\nCODE:\n```\nlet searchResults = searchBar.rx.text.orEmpty\n    .throttle(0.3, scheduler: MainScheduler.instance)\n    .distinctUntilChanged()\n    .flatMapLatest { query -> Observable<[Repository]> in\n        if query.isEmpty {\n            return .just([])\n        }\n        return searchGitHub(query)\n            .catchErrorJustReturn([])\n    }\n    .observeOn(MainScheduler.instance)\n```\n\n----------------------------------------\n\nTITLE: Testing JSON Form Data Serialization with FakeApi\nDESCRIPTION: Example code demonstrating JSON serialization of form data using the FakeApi class. Shows how to handle string parameters and API exception handling.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/okhttp-gson-parcelableModel/docs/FakeApi.md#2025-04-20_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nFakeApi apiInstance = new FakeApi();\nString param = \"param_example\";\nString param2 = \"param2_example\";\ntry {\n    apiInstance.testJsonFormData(param, param2);\n} catch (ApiException e) {\n    System.err.println(\"Exception when calling FakeApi#testJsonFormData\");\n    e.printStackTrace();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OuterEnum Model Properties in Markdown\nDESCRIPTION: This snippet defines a markdown table for the properties of the OuterEnum model. The table includes columns for Name, Type, Description, and Notes, but no actual properties are listed.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/csharp/SwaggerClientNetStandard/docs/OuterEnum.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Properties\n\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n\n```\n\n----------------------------------------\n\nTITLE: Caching Route Data with FastRoute in PHP\nDESCRIPTION: This example shows how to use the cachedDispatcher to cache the generated routing data for improved performance. It demonstrates setting the cache file location and conditionally disabling the cache.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore/slim/vendor/nikic/fast-route/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\n$dispatcher = FastRoute\\cachedDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/user/{name}/{id:[0-9]+}', 'handler0');\n    $r->addRoute('GET', '/user/{id:[0-9]+}', 'handler1');\n    $r->addRoute('GET', '/user/{name}', 'handler2');\n}, [\n    'cacheFile' => __DIR__ . '/route.cache', /* required */\n    'cacheDisabled' => IS_DEBUG_ENABLED,     /* optional, enabled by default */\n]);\n```\n\n----------------------------------------\n\nTITLE: Number Enum Values\nDESCRIPTION: Definition of possible values for the EnumNumberEnum type.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/EnumTest.md#2025-04-20_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nName | Value\n---- | -----\nNUMBER_1_DOT_1 | 1.1\nNUMBER_MINUS_1_DOT_2 | -1.2\n```\n\n----------------------------------------\n\nTITLE: Dog Model Properties Schema\nDESCRIPTION: Markdown table defining the properties of a Dog model, including data types, descriptions and validation notes. The schema includes required and optional fields with links to STRING_32 type definition.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/eiffel/docs/DOG.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**class_name** | [**STRING_32**](STRING_32.md) |  | [default to null]\n**color** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n**breed** | [**STRING_32**](STRING_32.md) |  | [optional] [default to null]\n```\n\n----------------------------------------\n\nTITLE: Defining Capitalization Properties in Swagger Schema\nDESCRIPTION: Markdown table defining the properties of a Capitalization model, including their types, descriptions, and optional status. The schema includes different naming conventions to demonstrate capitalization patterns.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/google-api-client/docs/Capitalization.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Capitalization\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**smallCamel** | **String** |  |  [optional]\n**capitalCamel** | **String** |  |  [optional]\n**smallSnake** | **String** |  |  [optional]\n**capitalSnake** | **String** |  |  [optional]\n**scAETHFlowPoints** | **String** |  |  [optional]\n**ATT_NAME** | **String** | Name of the pet  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Cat Properties Schema Definition in Markdown\nDESCRIPTION: Defines the schema for a Cat class that contains a single optional Boolean property 'declawed'. The schema is presented in a Markdown table format with columns for property name, data type, description, and optional notes.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/java/jersey2/docs/Cat.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Cat\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**declawed** | **Boolean** |  |  [optional]\n```\n\n----------------------------------------\n\nTITLE: Defining Factory Services in Pimple\nDESCRIPTION: Shows how to create a factory service that returns a new instance each time it's accessed, using the factory() method.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/server/petstore-security-test/slim/vendor/pimple/pimple/README.rst#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$container['session'] = $container->factory(function ($c) {\n    return new Session($c['session_storage']);\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Model Properties in Swagger/OpenAPI Markdown\nDESCRIPTION: Documents the properties of MixedPropertiesAndAdditionalPropertiesClass including UUID string, datetime string, and a map of Animal objects. All properties are optional with default values set to null.\nSOURCE: https://github.com/swagger-api/swagger-codegen/blob/master/samples/client/petstore/bash/docs/MixedPropertiesAndAdditionalPropertiesClass.md#2025-04-20_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# MixedPropertiesAndAdditionalPropertiesClass\n\n## Properties\nName | Type | Description | Notes\n------------ | ------------- | ------------- | -------------\n**uuid** | **string** |  | [optional] [default to null]\n**dateTime** | **string** |  | [optional] [default to null]\n**map** | [**map[String, Animal]**](Animal.md) |  | [optional] [default to null]\n```"
  }
]
[
  {
    "owner": "tabler",
    "repo": "tabler",
    "content": "TITLE: Creating Basic Dashboard Layout with Header in HTML\nDESCRIPTION: This code snippet demonstrates how to create a basic dashboard layout with a header using Tabler UI components. It includes a navbar with a logo and user profile, followed by a page wrapper with a grid of cards.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-layouts.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"page\">\n  <header class=\"navbar navbar-expand-sm navbar-light d-print-none\">\n    <div class=\"container-xl\">\n      <h1 class=\"navbar-brand navbar-brand-autodark d-none-navbar-horizontal pe-0 pe-md-3\">\n        <a href=\"#\">\n          <img\n            src=\"/static/logo.svg\"\n            width=\"110\"\n            height=\"32\"\n            alt=\"Tabler\"\n            class=\"navbar-brand-image\"\n          />\n        </a>\n      </h1>\n      <div class=\"navbar-nav flex-row order-md-last\">\n        <div class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link d-flex lh-1 text-reset p-0\">\n            <span\n              class=\"avatar avatar-sm\"\n              style=\"background-image: url(/static/avatars/002m.jpg)\"\n            ></span>\n            <div class=\"d-none d-xl-block ps-2\">\n              <div>Pawe≈Ç Kuna</div>\n              <div class=\"mt-1 small text-secondary\">UI Designer</div>\n            </div>\n          </a>\n        </div>\n      </div>\n    </div>\n  </header>\n  <div class=\"page-wrapper\">\n    <div class=\"page-body\">\n      <div class=\"container-xl\">\n        <div class=\"row row-deck row-cards\">\n          <div class=\"col-4\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-4\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-4\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Color Variations for Buttons\nDESCRIPTION: Shows extended color options for buttons including blue, azure, indigo, purple, pink, red, orange, yellow, lime, green, teal, and cyan.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-blue\">Blue</a>\n<a href=\"#\" class=\"btn btn-azure\">Azure</a>\n<a href=\"#\" class=\"btn btn-indigo\">Indigo</a>\n<a href=\"#\" class=\"btn btn-purple\">Purple</a>\n<a href=\"#\" class=\"btn btn-pink\">Pink</a>\n<a href=\"#\" class=\"btn btn-red\">Red</a>\n<a href=\"#\" class=\"btn btn-orange\">Orange</a>\n<a href=\"#\" class=\"btn btn-yellow\">Yellow</a>\n<a href=\"#\" class=\"btn btn-lime\">Lime</a>\n<a href=\"#\" class=\"btn btn-green\">Green</a>\n<a href=\"#\" class=\"btn btn-teal\">Teal</a>\n<a href=\"#\" class=\"btn btn-cyan\">Cyan</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Page Header with Breadcrumb Navigation and Action Buttons in HTML\nDESCRIPTION: This HTML snippet creates a page header with breadcrumb navigation trail and action buttons. The layout uses Tabler's grid system with responsive classes to organize elements, including a breadcrumb navigation, page title with text truncation, and action buttons that adapt to different screen sizes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-headers.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-header\">\n  <div class=\"row align-items-center mw-100\">\n    <div class=\"col\">\n      <div class=\"mb-1\">\n        <ol class=\"breadcrumb\" aria-label=\"breadcrumbs\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"#\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item\">\n            <a href=\"#\">Library</a>\n          </li>\n          <li class=\"breadcrumb-item active\" aria-current=\"page\">\n            <a href=\"#\">Articles</a>\n          </li>\n        </ol>\n      </div>\n      <h2 class=\"page-title\">\n        <span class=\"text-truncate\"\n          >Knights of Ni, we are but simple travelers who seek the enchanter who lives beyond these\n          woods.</span\n        >\n      </h2>\n    </div>\n    <div class=\"col-auto\">\n      <div class=\"btn-list\">\n        <a href=\"#\" class=\"btn d-none d-md-inline-flex\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1\" />\n            <path d=\"M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z\" />\n            <path d=\"M16 5l3 3\" />\n          </svg>\n          Edit\n        </a>\n        <a href=\"#\" class=\"btn btn-primary\"> Publish </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Tabler CSS and JavaScript to HTML\nDESCRIPTION: This snippet demonstrates how to include Tabler's CSS and JavaScript files from a CDN in the HTML structure, setting up the core Tabler styles and functionality.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/installation.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler.min.css\" />\n<script src=\"{{ cdnUrl }}/dist/js/tabler.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating a Line Chart with ApexCharts in Tabler\nDESCRIPTION: Implementation of a line chart that visualizes session duration, page views, and total visits over time. The chart includes customized styling, tooltips, and a legend positioned at the bottom of the chart.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/charts.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div id=\"chart-demo-line\" class=\"chart-lg\"></div>\n  </div>\n</div>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.ApexCharts &&\n      new ApexCharts(document.getElementById(\"chart-demo-line\"), {\n        chart: {\n          type: \"line\",\n          fontFamily: \"inherit\",\n          height: 240,\n          parentHeightOffset: 0,\n          toolbar: {\n            show: false,\n          },\n          animations: {\n            enabled: false,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        stroke: {\n          width: 2,\n          lineCap: \"round\",\n          curve: \"straight\",\n        },\n        series: [\n          {\n            name: \"Session Duration\",\n            data: [117, 92, 94, 98, 75, 110, 69, 80, 109, 113, 115, 95],\n          },\n          {\n            name: \"Page Views\",\n            data: [59, 80, 61, 66, 70, 84, 87, 64, 94, 56, 55, 67],\n          },\n          {\n            name: \"Total Visits\",\n            data: [53, 51, 52, 41, 46, 60, 45, 43, 30, 50, 58, 59],\n          },\n        ],\n        tooltip: {\n          theme: \"dark\",\n        },\n        grid: {\n          padding: {\n            top: -20,\n            right: 0,\n            left: -4,\n            bottom: -4,\n          },\n          strokeDashArray: 4,\n        },\n        xaxis: {\n          labels: {\n            padding: 0,\n          },\n          tooltip: {\n            enabled: false,\n          },\n          type: \"datetime\",\n        },\n        yaxis: {\n          labels: {\n            padding: 4,\n          },\n        },\n        labels: [\n          \"2020-06-21\",\n          \"2020-06-22\",\n          \"2020-06-23\",\n          \"2020-06-24\",\n          \"2020-06-25\",\n          \"2020-06-26\",\n          \"2020-06-27\",\n          \"2020-06-28\",\n          \"2020-06-29\",\n          \"2020-06-30\",\n          \"2020-07-01\",\n          \"2020-07-02\",\n        ],\n        colors: [\"var(--tblr-yellow)\", \"var(--tblr-green)\", \"var(--tblr-primary)\"],\n        legend: {\n          show: true,\n          position: \"bottom\",\n          offsetY: 12,\n          markers: {\n            width: 10,\n            height: 10,\n            radius: 100,\n          },\n          itemMargin: {\n            horizontal: 8,\n            vertical: 8,\n          },\n        },\n      }).render();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Bootstrap Tooltips with Different Placements\nDESCRIPTION: Shows how to create tooltips that appear in different positions (top, right, bottom, left) relative to the trigger element. Uses Bootstrap's data-bs-toggle and data-bs-placement attributes to control tooltip behavior.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tooltips.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-toggle=\"tooltip\"\n  data-bs-placement=\"top\"\n  title=\"Tooltip on top\"\n>\n  Tooltip on top\n</button>\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-toggle=\"tooltip\"\n  data-bs-placement=\"right\"\n  title=\"Tooltip on right\"\n>\n  Tooltip on right\n</button>\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-toggle=\"tooltip\"\n  data-bs-placement=\"bottom\"\n  title=\"Tooltip on bottom\"\n>\n  Tooltip on bottom\n</button>\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-toggle=\"tooltip\"\n  data-bs-placement=\"left\"\n  title=\"Tooltip on left\"\n>\n  Tooltip on left\n</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Sidebar Layout with Header in HTML\nDESCRIPTION: This code snippet shows how to create a dashboard layout with a sidebar and header using Tabler UI components. It includes a vertical navbar with a logo and menu items, followed by a page wrapper with a header and a complex grid of cards.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-layouts.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"page\">\n  <!-- Sidebar -->\n  <aside class=\"navbar navbar-vertical navbar-expand-sm position-absolute\" data-bs-theme=\"dark\">\n    <div class=\"container-fluid\">\n      <button class=\"navbar-toggler\" type=\"button\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <h1 class=\"navbar-brand navbar-brand-autodark\">\n        <a href=\"#\">\n          <img\n            src=\"/static/logo-white.svg\"\n            width=\"110\"\n            height=\"32\"\n            alt=\"Tabler\"\n            class=\"navbar-brand-image\"\n          />\n        </a>\n      </h1>\n      <div class=\"collapse navbar-collapse\" id=\"sidebar-menu\">\n        <ul class=\"navbar-nav pt-lg-3\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"./\">\n              <span class=\"nav-link-title\"> Home </span>\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              <span class=\"nav-link-title\"> Link 1 </span>\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              <span class=\"nav-link-title\"> Link 2 </span>\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">\n              <span class=\"nav-link-title\"> Link 3 </span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </aside>\n  <div class=\"page-wrapper\">\n    <div class=\"page-header d-print-none\">\n      <div class=\"container-xl\">\n        <div class=\"row g-2 align-items-center\">\n          <div class=\"col\">\n            <h2 class=\"page-title\">Vertical layout</h2>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"page-body\">\n      <div class=\"container-xl\">\n        <div class=\"row row-deck row-cards\">\n          <div class=\"col-sm-6 col-lg-3\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-sm-6 col-lg-3\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-sm-6 col-lg-3\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-sm-6 col-lg-3\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-lg-6\">\n            <div class=\"row row-cards\">\n              <div class=\"col-12\">\n                <div class=\"card\">\n                  <div class=\"card-body\" style=\"height: 10rem\"></div>\n                </div>\n              </div>\n              <div class=\"col-12\">\n                <div class=\"card\">\n                  <div class=\"card-body\" style=\"height: 10rem\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-lg-6\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-md-12 col-lg-8\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-md-6 col-lg-4\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-md-12 col-lg-8\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n          <div class=\"col-12\">\n            <div class=\"card\">\n              <div class=\"card-body\" style=\"height: 10rem\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic HTML Structure for Tabler Project\nDESCRIPTION: This snippet shows the initial HTML structure for a Tabler project, including the necessary meta tags for proper responsiveness.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/installation.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Tabler demo</title>\n  </head>\n  <body>\n    <h1>Hello, world!</h1>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Structure with Tabler Resources\nDESCRIPTION: This snippet shows the complete HTML file structure with Tabler CSS and JavaScript resources included, ready for building a Tabler-powered web application.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/installation.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>Tabler Demo</title>\n    <link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler.min.css\" />\n  </head>\n  <body>\n    <h1>Hello, Tabler!</h1>\n    <script src=\"{{ cdnUrl }}/dist/js/tabler.min.js\"></script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing Alert Component with Buttons in Tabler\nDESCRIPTION: This HTML code demonstrates how to add primary and secondary buttons to alert modals. It includes examples of success, info, warning, and danger alerts with titles, descriptive text, and action buttons. The code also showcases the dismissible functionality with a close button.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-success alert-dismissible\" role=\"alert\">\n  <h3 class=\"mb-1\">Some Title</h3>\n  <p class=\"text-secondary\">\n    Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.\n  </p>\n  <div class=\"btn-list\">\n    <a href=\"#\" class=\"btn btn-success\">Okay</a>\n    <a href=\"#\" class=\"btn\">Cancel</a>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-info alert-dismissible\" role=\"alert\">\n  <h3 class=\"mb-1\">Some Title</h3>\n  <p class=\"text-secondary\">\n    Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.\n  </p>\n  <div class=\"btn-list\">\n    <a href=\"#\" class=\"btn btn-info\">Okay</a>\n    <a href=\"#\" class=\"btn\">Cancel</a>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\n  <h3 class=\"mb-1\">Some Title</h3>\n  <p class=\"text-secondary\">\n    Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.\n  </p>\n  <div class=\"btn-list\">\n    <a href=\"#\" class=\"btn btn-warning\">Okay</a>\n    <a href=\"#\" class=\"btn\">Cancel</a>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n  <h3 class=\"mb-1\">Some Title</h3>\n  <p class=\"text-secondary\">\n    Lorem ipsum Minim ad pariatur eiusmod ea ut nulla aliqua est quis id dolore minim voluptate.\n  </p>\n  <div class=\"btn-list\">\n    <a href=\"#\" class=\"btn btn-danger\">Okay</a>\n    <a href=\"#\" class=\"btn\">Cancel</a>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Cards with Status Colors in HTML\nDESCRIPTION: HTML snippet showing how to add colored status indicators to cards. The examples demonstrate adding a status bar at the top of a card using card-status-top and on the side using card-status-start, with different color classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/cards.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-status-top bg-danger\"></div>\n  <div class=\"card-body\">\n    <h3 class=\"card-title\">Card with top status</h3>\n    <p class=\"text-secondary\">\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam deleniti fugit incidunt,\n      iste, itaque minima neque pariatur perferendis sed suscipit velit vitae voluptatem.\n    </p>\n  </div>\n</div>\n<div class=\"card\">\n  <div class=\"card-status-start bg-green\"></div>\n  <div class=\"card-body\">\n    <h3 class=\"card-title\">Card with side status</h3>\n    <p class=\"text-secondary\">\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aperiam deleniti fugit incidunt,\n      iste, itaque minima neque pariatur perferendis sed suscipit velit vitae voluptatem.\n    </p>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Comprehensive Navbar with Tabler Components in HTML\nDESCRIPTION: This extensive HTML snippet demonstrates a full implementation of a navbar using Tabler components. It includes a responsive toggle button, logo placement, navigation links with icons, and a user dropdown menu. The snippet showcases various Tabler classes and components to create a functional and visually appealing navbar.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/navbars.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<header class=\"navbar navbar-expand-md d-print-none\">\n  <div class=\"container-xl\">\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbar-menu\"\n      aria-controls=\"navbar-menu\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\t{% include \"layout/navbar-logo.html\" class=\"me-3\" %}\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">\n          <span class=\"nav-link-icon\">\n            {% include \"ui/icon.html\" icon=\"home\" %}\n          </span>\n          <span class=\"nav-link-title\"> Home </span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">\n          <span class=\"nav-link-icon\"\n            >{% include \"ui/icon.html\" icon=\"checkbox\" %}\n          </span>\n          <span class=\"nav-link-title\"> Profile </span>\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">\n          <span class=\"nav-link-icon\"\n            >{% include \"ui/icon.html\" icon=\"checkbox\" %}\n          </span>\n          <span class=\"nav-link-title\"> Settings </span>\n        </a>\n      </li>\n    </ul>\n    <div class=\"navbar-nav flex-row order-md-last ms-auto\">\n      <div class=\"nav-item dropdown\">\n        <a\n          href=\"#\"\n          class=\"nav-link d-flex lh-1 text-reset\"\n          data-bs-toggle=\"dropdown\"\n          aria-label=\"Open user menu\"\n        >\n          <span\n            class=\"avatar avatar-sm\"\n            style=\"background-image: url(/static/avatars/044m.jpg)\"\n          ></span>\n          <div class=\"d-none d-xl-block ps-2\">\n            <div>Pawe≈Ç Kuna</div>\n            <div class=\"mt-1 small text-secondary\">UI Designer</div>\n          </div>\n        </a>\n        <div class=\"dropdown-menu dropdown-menu-end dropdown-menu-arrow\">\n          <a href=\"#\" class=\"dropdown-item\">Status</a>\n          <a href=\"./profile.html\" class=\"dropdown-item\">Profile</a>\n          <a href=\"#\" class=\"dropdown-item\">Feedback</a>\n          <div class=\"dropdown-divider\"></div>\n          <a href=\"./settings.html\" class=\"dropdown-item\">Settings</a>\n          <a href=\"./sign-in.html\" class=\"dropdown-item\">Logout</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n```\n\n----------------------------------------\n\nTITLE: Including Tabler Core via CDN\nDESCRIPTION: Code for including Tabler's minified JavaScript and CSS files from the jsDelivr CDN. This provides the core functionality of Tabler in your web project.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/download.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"{{ cdnUrl }}/dist/js/tabler.min.js\"></script>\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler.min.css\" />\n```\n\n----------------------------------------\n\nTITLE: Initializing TinyMCE WYSIWYG Editor with Custom Configuration in JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize TinyMCE 6 on a textarea element. It configures the editor with custom height, plugins for advanced functionality, custom toolbar buttons, and responsive styling. It also includes theme detection to apply dark mode when appropriate.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tinymce.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form method=\"post\">\n  <textarea id=\"tinymce-default\">Hello, <b>Tabler</b>!</textarea>\n</form>\n<script src=\"{{ cdnUrl }}/dist/libs/tinymce/tinymce.min.js\" defer></script>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    let options = {\n      selector: \"#tinymce-default\",\n      height: 300,\n      menubar: false,\n      statusbar: false,\n      plugins: [\n        \"advlist autolink lists link image charmap print preview anchor\",\n        \"searchreplace visualblocks code fullscreen\",\n        \"insertdatetime media table paste code help wordcount\",\n      ],\n      toolbar:\n        \"undo redo | formatselect | \" +\n        \"bold italic backcolor | alignleft aligncenter \" +\n        \"alignright alignjustify | bullist numlist outdent indent | \" +\n        \"removeformat\",\n      content_style:\n        \"body { font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif; font-size: 14px; -webkit-font-smoothing: antialiased; }\",\n    };\n    if (localStorage.getItem(\"tablerTheme\") === \"dark\") {\n      options.skin = \"oxide-dark\";\n      options.content_css = \"dark\";\n    }\n    tinyMCE.init(options);\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Buttons with Icons Implementation\nDESCRIPTION: Demonstrates how to combine buttons with icons for enhanced visual communication.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"btn\">\n  {% include \"ui/icon.html\" icon=\"upload\" -%}\n  Upload\n</button>\n<button type=\"button\" class=\"btn btn-warning\">\n  {% include \"ui/icon.html\" icon=\"heart\" -%}\n  I like\n</button>\n<button type=\"button\" class=\"btn btn-success\">\n  {% include \"ui/icon.html\" icon=\"check\" -%}\n  I agree\n</button>\n<button type=\"button\" class=\"btn btn-primary\">\n  {% include \"ui/icon.html\" icon=\"plus\" -%}\n  More\n</button>\n<button type=\"button\" class=\"btn btn-danger\">\n  {% include \"ui/icon.html\" icon=\"link\" -%}\n  Link\n</button>\n<button type=\"button\" class=\"btn btn-info\">\n  {% include \"ui/icon.html\" icon=\"message\" -%}\n  Comment\n</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Empty State with Illustration in HTML\nDESCRIPTION: This HTML snippet shows how to create an empty state with an illustration. It includes an image placeholder, title, subtitle, and an action button. This design aims to make the empty state more attractive and engaging, improving brand image and user-friendliness.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/empty.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"empty\">\n  <div class=\"empty-img\">\n    <img src=\"...\" height=\"128\" alt=\"\" />\n  </div>\n  <p class=\"empty-title\">Invoices are managed from here</p>\n  <p class=\"empty-subtitle text-secondary\">\n    Try adjusting your search or filter to find what you're looking for.\n  </p>\n  <div class=\"empty-action\">\n    <a href=\"#\" class=\"btn btn-primary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n        <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n      </svg>\n      New invoice\n    </a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Progress Bar with Accessibility in HTML\nDESCRIPTION: HTML markup for a standard progress bar with proper accessibility attributes including ARIA roles and labels. This allows screen readers to properly announce the progress to users with disabilities.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/progress.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"progress\">\n  <div\n    class=\"progress-bar\"\n    style=\"width: 38%\"\n    role=\"progressbar\"\n    aria-valuenow=\"38\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n    aria-label=\"38% Complete\"\n  >\n    <span class=\"visually-hidden\">38% Complete</span>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Form Fieldset in HTML\nDESCRIPTION: This snippet demonstrates how to create a form fieldset using HTML. It includes various form elements such as text inputs, email input, phone number input, and a checkbox, all grouped within a fieldset for better structure and clarity.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-fieldset.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"form-fieldset\">\n  <div class=\"mb-3\">\n    <label class=\"form-label required\">Full name</label>\n    <input type=\"text\" class=\"form-control\" autocomplete=\"off\" />\n  </div>\n  <div class=\"mb-3\">\n    <label class=\"form-label required\">Company</label>\n    <input type=\"text\" class=\"form-control\" autocomplete=\"off\" />\n  </div>\n  <div class=\"mb-3\">\n    <label class=\"form-label required\">Email</label>\n    <input type=\"email\" class=\"form-control\" autocomplete=\"off\" />\n  </div>\n  <div class=\"mb-3\">\n    <label class=\"form-label\">Phone number</label>\n    <input type=\"tel\" class=\"form-control\" autocomplete=\"off\" />\n  </div>\n  <label class=\"form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" />\n    <span class=\"form-check-label required\">I agree to the Terms & Conditions</span>\n  </label>\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: Including Tabler Plugins via CDN\nDESCRIPTION: Code for loading additional Tabler plugins like flags, payments, social, and vendors via CDN. These extend the functionality of the core Tabler framework.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/download.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-flags.min.css\" />\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-payments.min.css\" />\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-social.min.css\" />\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-vendors.min.css\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Tabs with Icons in Tabler UI\nDESCRIPTION: Enhanced tab implementation that includes SVG icons alongside text labels. This example includes three tabs (Home, Profile, and Settings) with the Settings tab positioned on the right using margin utilities. Each tab uses SVG icons for visual representation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tabs.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-header\">\n    <ul class=\"nav nav-tabs card-header-tabs\" data-bs-toggle=\"tabs\">\n      <li class=\"nav-item\">\n        <a href=\"#tabs-home-ex2\" class=\"nav-link active\" data-bs-toggle=\"tab\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon me-2\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <polyline points=\"5 12 3 12 12 3 21 12 19 12\" />\n            <path d=\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\" />\n            <path d=\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\" />\n          </svg>\n          Home\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"#tabs-profile-ex2\" class=\"nav-link\" data-bs-toggle=\"tab\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon me-2\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <circle cx=\"12\" cy=\"7\" r=\"4\" />\n            <path d=\"M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\n          </svg>\n          Profile\n        </a>\n      </li>\n      <li class=\"nav-item ms-auto\">\n        <a href=\"#tabs-settings-ex2\" class=\"nav-link\" title=\"Settings\" data-bs-toggle=\"tab\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path\n              d=\"M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z\"\n            />\n            <circle cx=\"12\" cy=\"12\" r=\"3\" />\n          </svg>\n        </a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"tab-content\">\n      <div class=\"tab-pane active show\" id=\"tabs-home-ex2\">\n        <h4>Home tab</h4>\n        <div>\n          Cursus turpis vestibulum, dui in pharetra vulputate id sed non turpis ultricies fringilla\n          at sed facilisis lacus pellentesque purus nibh\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-profile-ex2\">\n        <h4>Profile tab</h4>\n        <div>\n          Fringilla egestas nunc quis tellus diam rhoncus ultricies tristique enim at diam, sem nunc\n          amet, pellentesque id egestas velit sed\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-settings-ex2\">\n        <h4>Settings tab</h4>\n        <div>\n          Donec ac vitae diam amet vel leo egestas consequat rhoncus in luctus amet, facilisi sit\n          mauris accumsan nibh habitant senectus\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Colored Alerts in Tabler\nDESCRIPTION: This HTML demonstrates how to use custom colors for alerts beyond the default color palette. It showcases lime, cyan, and social media branded alerts (Facebook, Instagram) with various content layouts including avatars and dismissible functionality.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-lime\" role=\"alert\">\n  <h4 class=\"alert-title\">Wow! Everything worked!</h4>\n  <div class=\"text-secondary\">Your account has been saved!</div>\n</div>\n<div class=\"alert alert-cyan\" role=\"alert\">\n  <h4 class=\"alert-title\">Did you know?</h4>\n  <div class=\"text-secondary\">Here is something that you might like to know.</div>\n</div>\n<div class=\"alert alert-facebook\" role=\"alert\">\n  <h4 class=\"alert-title\">You have a new friend on Facebook</h4>\n  <div class=\"text-secondary\">Say hello to your new friend!</div>\n</div>\n<div class=\"alert alert-instagram alert-dismissible alert-important\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <span\n        class=\"avatar me-3\"\n        style=\"background-image: url(/static/avatars/035f.jpg)\"\n      ></span>\n    </div>\n    <div>\n      <h4 class=\"alert-title\">Sophia just added a new post on Instagram</h4>\n      <div>Be the first to see it!</div>\n    </div>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Clickable Badge Links in HTML\nDESCRIPTION: Examples of badges used as links by placing them inside anchor elements. This makes the badges clickable and able to navigate to other pages.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"badge bg-blue-lt\">Blue</a>\n<a href=\"#\" class=\"badge bg-azure-lt\">Azure</a>\n<a href=\"#\" class=\"badge bg-indigo-lt\">Indigo</a>\n<a href=\"#\" class=\"badge bg-purple-lt\">Purple</a>\n<a href=\"#\" class=\"badge bg-pink-lt\">Pink</a>\n<a href=\"#\" class=\"badge bg-red-lt\">Red</a>\n<a href=\"#\" class=\"badge bg-orange-lt\">Orange</a>\n<a href=\"#\" class=\"badge bg-yellow-lt\">Yellow</a>\n<a href=\"#\" class=\"badge bg-lime-lt\">Lime</a>\n<a href=\"#\" class=\"badge bg-green-lt\">Green</a>\n<a href=\"#\" class=\"badge bg-teal-lt\">Teal</a>\n<a href=\"#\" class=\"badge bg-cyan-lt\">Cyan</a>\n```\n\n----------------------------------------\n\nTITLE: Creating a Functional Modal with Launch Button in HTML\nDESCRIPTION: This example shows a complete modal implementation including a launch button. It demonstrates how to structure the modal content and use data attributes for toggling.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/modals.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n  Launch demo modal\n</button>\n<div class=\"modal\" id=\"exampleModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Modal title</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci animi beatae delectus\n        deleniti dolorem eveniet facere fuga iste nemo nesciunt nihil odio perspiciatis, quia quis\n        reprehenderit sit tempora totam unde.\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn me-auto\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Including Tabler JavaScript via CDN\nDESCRIPTION: HTML code to include the Tabler JavaScript library from a CDN. This allows using Tabler without local installation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/@tabler/core@latest/dist/js/tabler.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabbed Card Component with Tabler in HTML\nDESCRIPTION: This snippet demonstrates the HTML structure for creating a tabbed card component using Tabler classes. It includes a navigation bar with tabs and corresponding content panes. The component uses Bootstrap's tab functionality for interactivity.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/cards.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- Cards with tabs component -->\n<div class=\"card-tabs\">\n  <!-- Cards navigation -->\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a href=\"#tab-top-1\" class=\"nav-link active\" data-bs-toggle=\"tab\">Tab 1</a>\n    </li>\n    <li class=\"nav-item\">\n      <a href=\"#tab-top-2\" class=\"nav-link\" data-bs-toggle=\"tab\">Tab 2</a>\n    </li>\n    <li class=\"nav-item\">\n      <a href=\"#tab-top-3\" class=\"nav-link\" data-bs-toggle=\"tab\">Tab 3</a>\n    </li>\n    <li class=\"nav-item\">\n      <a href=\"#tab-top-4\" class=\"nav-link\" data-bs-toggle=\"tab\">Tab 4</a>\n    </li>\n  </ul>\n  <div class=\"tab-content\">\n    <!-- Content of card #1 -->\n    <div id=\"tab-top-1\" class=\"card tab-pane active show\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">Content of tab #1</div>\n        <p class=\"text-secondary\">\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, alias aliquid\n          distinctio dolorem expedita, fugiat hic magni molestiae molestias odit.\n        </p>\n      </div>\n    </div>\n    <!-- Content of card #2 -->\n    <div id=\"tab-top-2\" class=\"card tab-pane\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">Content of tab #2</div>\n        <p class=\"text-secondary\">\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, alias aliquid\n          distinctio dolorem expedita, fugiat hic magni molestiae molestias odit.\n        </p>\n      </div>\n    </div>\n    <!-- Content of card #3 -->\n    <div id=\"tab-top-3\" class=\"card tab-pane\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">Content of tab #3</div>\n        <p class=\"text-secondary\">\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, alias aliquid\n          distinctio dolorem expedita, fugiat hic magni molestiae molestias odit.\n        </p>\n      </div>\n    </div>\n    <!-- Content of card #4 -->\n    <div id=\"tab-top-4\" class=\"card tab-pane\">\n      <div class=\"card-body\">\n        <div class=\"card-title\">Content of tab #4</div>\n        <p class=\"text-secondary\">\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, alias aliquid\n          distinctio dolorem expedita, fugiat hic magni molestiae molestias odit.\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Color-Coded Table Variants in HTML with Tabler\nDESCRIPTION: This snippet demonstrates how to create a table with different row color variants using Tabler's CSS classes. It includes examples of primary, secondary, success, danger, warning, info, light, and dark row styles that can be applied to highlight different types of data or states.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tables.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Class</th>\n      <th scope=\"col\">Heading</th>\n      <th scope=\"col\">Heading</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Default</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-primary\">\n      <th scope=\"row\">Primary</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-secondary\">\n      <th scope=\"row\">Secondary</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-success\">\n      <th scope=\"row\">Success</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-danger\">\n      <th scope=\"row\">Danger</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-warning\">\n      <th scope=\"row\">Warning</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-info\">\n      <th scope=\"row\">Info</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-light\">\n      <th scope=\"row\">Light</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-dark\">\n      <th scope=\"row\">Dark</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Autosize Textarea with Label Example\nDESCRIPTION: Complete example showing an autosize textarea with a form label. Demonstrates the implementation within a form context with proper labeling.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/autosize.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-label\">Autosize example</label>\n<textarea class=\"form-control\" data-bs-toggle=\"autosize\" placeholder=\"Type something‚Ä¶\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Creating Advanced Tabs with Dropdown Menus\nDESCRIPTION: This code shows how to enhance tabbed navigation by adding dropdown functionality. It uses the .dropdown class and Bootstrap's data attributes to toggle dropdown menus, providing additional navigation options under a single tab.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/navs-tabls.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"nav nav-tabs\">\n  ...\n  <li class=\"nav-item dropdown\">\n    <a\n      class=\"nav-link dropdown-toggle\"\n      data-bs-toggle=\"dropdown\"\n      href=\"#\"\n      role=\"button\"\n      aria-expanded=\"false\"\n      >Dropdown</a\n    >\n    <ul class=\"dropdown-menu\">\n      ...\n    </ul>\n  </li>\n  ...\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Including Tabler CSS via CDN\nDESCRIPTION: HTML code to include the Tabler CSS stylesheet from a CDN. This allows using Tabler styles without local installation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@tabler/core@latest/dist/css/tabler.min.css\">\n```\n\n----------------------------------------\n\nTITLE: Creating Loading Buttons with Spinner in HTML\nDESCRIPTION: This snippet shows how to create a loading button with a spinner using Tabler and Bootstrap classes. It's useful for indicating processing states in user interfaces.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"#\" class=\"btn btn-primary\">\n  <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\n  Button\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dismissible Alerts with Close Button in Tabler\nDESCRIPTION: Complete implementation of dismissible alerts for all four alert types (success, info, warning, danger). Each includes content area with title, description and a close button for dismissing the alert.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-success alert-dismissible\" role=\"alert\">\n  <div>\n    <h4 class=\"alert-title\">Wow! Everything worked!</h4>\n    <div class=\"text-secondary\">Your account has been saved!</div>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-info alert-dismissible\" role=\"alert\">\n  <div>\n    <h4 class=\"alert-title\">Did you know?</h4>\n    <div class=\"text-secondary\">Here is something that you might like to know.</div>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\n  <div>\n    <h4 class=\"alert-title\">Uh oh, something went wrong</h4>\n    <div class=\"text-secondary\">Sorry! There was a problem with your request.</div>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-danger alert-dismissible\" role=\"alert\">\n  <div>\n    <h4 class=\"alert-title\">I'm so sorry&hellip;</h4>\n    <div class=\"text-secondary\">Your account has been deleted and can't be restored.</div>\n  </div>\n  <a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing YouTube Video Player\nDESCRIPTION: Complete implementation of a YouTube video player using Plyr, including the container div and initialization script. The player is initialized after the DOM content is loaded.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/inline-player.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"player-youtube\" data-plyr-provider=\"youtube\" data-plyr-embed-id=\"dQw4w9WgXcQ\"></div>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.Plyr && new Plyr(\"#player-youtube\");\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Important Alerts with Icons in Tabler\nDESCRIPTION: This HTML code shows how to create eye-catching important alerts with background colors and SVG icons. It includes examples of success and danger alerts with inline SVG icons and dismissible buttons.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-important alert-success alert-dismissible\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon alert-icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n        <path d=\"M5 12l5 5l10 -10\"></path>\n      </svg>\n    </div>\n    <div>Wow! Everything worked!</div>\n  </div>\n  <a class=\"btn-close btn-close-white\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n<div class=\"alert alert-important alert-danger alert-dismissible\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon alert-icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <circle cx=\"12\" cy=\"12\" r=\"9\" />\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\n        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\n      </svg>\n    </div>\n    <div>Your account has been deleted and can't be restored.</div>\n  </div>\n  <a class=\"btn-close btn-close-white\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Page Header with Search and Actions in Tabler\nDESCRIPTION: Page header with title, pagination info, search functionality, and action button. Includes responsive design for search bar visibility.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-headers.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-header\">\n  <div class=\"row align-items-center\">\n    <div class=\"col\">\n      <h2 class=\"page-title\">Gallery</h2>\n      <div class=\"text-secondary mt-1\">1-12 of 241 photos</div>\n    </div>\n    <div class=\"col-auto ms-auto d-print-none\">\n      <div class=\"d-flex\">\n        <div class=\"me-3 d-none d-md-block\">\n          <div class=\"input-icon\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search‚Ä¶\" />\n            <span class=\"input-icon-addon\"></span>\n          </div>\n        </div>\n        <a href=\"#\" class=\"btn btn-primary\">Add photo</a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Building Tabbed Navigation Interface\nDESCRIPTION: This snippet demonstrates the HTML structure for creating a tabbed navigation interface using the .nav-tabs class. Tabs are ideal for displaying different content sections within a single interface.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/navs-tabls.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"nav nav-tabs\">\n  ...\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler with npm\nDESCRIPTION: Command to install Tabler via npm package manager. This allows integrating Tabler into projects using JavaScript package management.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install --save @tabler/core\n```\n\n----------------------------------------\n\nTITLE: Implementing Data Grid Component in HTML\nDESCRIPTION: This snippet demonstrates how to create a data grid component using HTML. It showcases various types of content that can be displayed within the grid, including text, avatars, checkboxes, icons, and form controls. The grid is structured using div elements with specific classes for styling and layout.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/datagrid.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"datagrid\">\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Registrar</div>\n    <div class=\"datagrid-content\">Third Party</div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Nameservers</div>\n    <div class=\"datagrid-content\">Third Party</div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Port number</div>\n    <div class=\"datagrid-content\">3306</div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Expiration date</div>\n    <div class=\"datagrid-content\">‚Äì</div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Creator</div>\n    <div class=\"datagrid-content\">\n      <div class=\"d-flex align-items-center\">\n        <span\n          class=\"avatar avatar-xs me-2 rounded\"\n          style=\"background-image: url(/static/avatars/027m.jpg)\"\n        ></span>\n        Pawe≈Ç Kuna\n      </div>\n    </div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Age</div>\n    <div class=\"datagrid-content\">15 days</div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Edge network</div>\n    <div class=\"datagrid-content\">\n      <span class=\"status status-green\"> Active </span>\n    </div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Avatars list</div>\n    <div class=\"datagrid-content\">\n      <div class=\"avatar-list avatar-list-stacked\">\n        <span\n          class=\"avatar avatar-xs rounded\"\n          style=\"background-image: url(/static/avatars/029f.jpg)\"\n        ></span>\n        <span class=\"avatar avatar-xs rounded\">JL</span>\n        <span\n          class=\"avatar avatar-xs rounded\"\n          style=\"background-image: url(/static/avatars/015f.jpg)\"\n        ></span>\n        <span\n          class=\"avatar avatar-xs rounded\"\n          style=\"background-image: url(/static/avatars/004m.jpg)\"\n        ></span>\n        <span\n          class=\"avatar avatar-xs rounded\"\n          style=\"background-image: url(/static/avatars/037m.jpg)\"\n        ></span>\n        <span class=\"avatar avatar-xs rounded\">+3</span>\n      </div>\n    </div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Checkbox</div>\n    <div class=\"datagrid-content\">\n      <label class=\"form-check\">\n        <input class=\"form-check-input\" type=\"checkbox\" checked />\n        <span class=\"form-check-label\">Click me</span>\n      </label>\n    </div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Icon</div>\n    <div class=\"datagrid-content\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon text-green\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M5 12l5 5l10 -10\" />\n      </svg>\n      Checked\n    </div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Form control</div>\n    <div class=\"datagrid-content\">\n      <input type=\"text\" class=\"form-control form-control-flush\" placeholder=\"Input placeholder\" />\n    </div>\n  </div>\n  <div class=\"datagrid-item\">\n    <div class=\"datagrid-title\">Longer description</div>\n    <div class=\"datagrid-content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Offcanvas with 'show' Class in HTML\nDESCRIPTION: This example shows an offcanvas component with the 'show' class that makes it visible by default. It includes ARIA attributes for accessibility and demonstrates the basic structure with content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/offcanvas.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div\n  class=\"offcanvas offcanvas-start show\"\n  tabindex=\"-1\"\n  id=\"offcanvas\"\n  aria-labelledby=\"offcanvasLabel\"\n>\n  <div class=\"offcanvas-body\">\n    Content for the offcanvas goes here. You can place just about any Tabler component or custom\n    elements here.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Modal Dialog with Form using Tabler and HTML\nDESCRIPTION: This code snippet demonstrates how to create a modal dialog containing a form using Tabler's CSS classes and Bootstrap's modal functionality. The form includes various input types such as text inputs, radio buttons, select dropdowns, and a textarea.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/modals.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"modal\" id=\"exampleModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">New report</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"example-text-input\"\n            placeholder=\"Your report name\"\n          />\n        </div>\n        <label class=\"form-label\">Report type</label>\n        <div class=\"form-selectgroup-boxes row mb-3\">\n          <div class=\"col-md-6\">\n            <label class=\"form-selectgroup-item\">\n              <input\n                type=\"radio\"\n                name=\"report-type\"\n                value=\"1\"\n                class=\"form-selectgroup-input\"\n                checked\n              />\n              <span class=\"form-selectgroup-label d-flex align-items-center p-3\">\n                <span class=\"me-3\">\n                  <span class=\"form-selectgroup-check\"></span>\n                </span>\n                <span class=\"form-selectgroup-label-content\">\n                  <span class=\"form-selectgroup-title strong mb-1\">Simple</span>\n                  <span class=\"d-block text-secondary\"\n                    >Provide only basic data needed for the report</span\n                  >\n                </span>\n              </span>\n            </label>\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"form-selectgroup-item\">\n              <input type=\"radio\" name=\"report-type\" value=\"1\" class=\"form-selectgroup-input\" />\n              <span class=\"form-selectgroup-label d-flex align-items-center p-3\">\n                <span class=\"me-3\">\n                  <span class=\"form-selectgroup-check\"></span>\n                </span>\n                <span class=\"form-selectgroup-label-content\">\n                  <span class=\"form-selectgroup-title strong mb-1\">Advanced</span>\n                  <span class=\"d-block text-secondary\"\n                    >Insert charts and additional advanced analyses to be inserted in the\n                    report</span\n                  >\n                </span>\n              </span>\n            </label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-lg-8\">\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Report url</label>\n              <div class=\"input-group input-group-flat\">\n                <span class=\"input-group-text\"> https://tabler.io/reports/ </span>\n                <input type=\"text\" class=\"form-control ps-0\" value=\"report-01\" autocomplete=\"off\" />\n              </div>\n            </div>\n          </div>\n          <div class=\"col-lg-4\">\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Visibility</label>\n              <select class=\"form-select\">\n                <option value=\"1\" selected>Private</option>\n                <option value=\"2\">Public</option>\n                <option value=\"3\">Hidden</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\">\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Client name</label>\n              <input type=\"text\" class=\"form-control\" />\n            </div>\n          </div>\n          <div class=\"col-lg-6\">\n            <div class=\"mb-3\">\n              <label class=\"form-label\">Reporting period</label>\n              <input type=\"date\" class=\"form-control\" />\n            </div>\n          </div>\n          <div class=\"col-lg-12\">\n            <div>\n              <label class=\"form-label\">Additional information</label>\n              <textarea class=\"form-control\" rows=\"3\"></textarea>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <a href=\"#\" class=\"btn btn-link link-secondary\" data-bs-dismiss=\"modal\"> Cancel </a>\n        <a href=\"#\" class=\"btn btn-primary ms-auto\" data-bs-dismiss=\"modal\">\n          {% include \"ui/icon.html\" icon=\"plus\" %}\n          Create new report\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dropdown Buttons with Icons in HTML\nDESCRIPTION: This example demonstrates how to create a dropdown button with an icon using Tabler and Bootstrap classes. It includes the button trigger and the dropdown menu structure.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dropdown\">\n  <button type=\"button\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\">\n    <svg>...</svg>\n  </button>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" href=\"#\">Action</a>\n    <a class=\"dropdown-item\" href=\"#\">Another action</a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Color Check Inputs in HTML\nDESCRIPTION: This snippet demonstrates how to create a set of color check inputs with various colors. It uses a grid layout and includes options for dark, white, and various color swatches.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-color-check.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mb-3\">\n  <label class=\"form-label\">Color Input</label>\n  <div class=\"row g-2\">\n    <div class=\"col-auto\">\n      <label class=\"form-colorinput\">\n        <input name=\"color\" type=\"radio\" value=\"dark\" class=\"form-colorinput-input\" />\n        <span class=\"form-colorinput-color bg-dark\"></span>\n      </label>\n    </div>\n    <div class=\"col-auto\">\n      <label class=\"form-colorinput form-colorinput-light\">\n        <input name=\"color\" type=\"radio\" value=\"white\" class=\"form-colorinput-input\" checked />\n        <span class=\"form-colorinput-color bg-white\"></span>\n      </label>\n    </div>\n    <!-- More color options... -->\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Buttons with Avatars in HTML using Tabler UI\nDESCRIPTION: This snippet shows how to create buttons that incorporate avatar images alongside text labels using Tabler UI classes. The buttons use the 'btn' class for styling and include avatar spans with background images.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_14\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"#\" class=\"btn\">\n  <span\n    class=\"avatar\"\n    style=\"background-image: url(/static/avatars/002f.jpg);\"\n  ></span>\n  Avatar\n</a>\n<a href=\"#\" class=\"btn\">\n  <span\n    class=\"avatar\"\n    style=\"\n      background-image: url(/static/avatars/002m.jpg);\n    \"\n  ></span>\n  Avatar\n</a>\n<a href=\"#\" class=\"btn\">\n  <span\n    class=\"avatar\"\n    style=\"\n      background-image: url(/static/avatars/004f.jpg);\n    \"\n  ></span>\n  Avatar\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Table Structure with Tabler\nDESCRIPTION: Creates a basic responsive table with vertical centering. Includes styling for header and data cells with email links and action buttons. Uses table-vcenter class for vertical alignment.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tables.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"table-responsive\">\n  <table class=\"table table-vcenter\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Title</th>\n        <th>Email</th>\n        <th>Role</th>\n        <th class=\"w-1\"></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Pawe≈Ç Kuna</td>\n        <td class=\"text-secondary\">UI Designer, Training</td>\n        <td class=\"text-secondary\">\n          <a href=\"#\" class=\"text-reset\">paweluna@howstuffworks.com</a>\n        </td>\n        <td class=\"text-secondary\">User</td>\n        <td>\n          <a href=\"#\">Edit</a>\n        </td>\n      </tr>\n      <!-- Additional rows omitted for brevity -->\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Initializing Basic Range Slider with noUiSlider in JavaScript\nDESCRIPTION: Creates a basic range slider using the noUiSlider library. The slider is initialized with a starting value of 20, connects the lower part of the slider, uses step increments of 10, and defines a range from 0 to 100.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/range-slider.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"range-simple\"></div>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.noUiSlider &&\n      noUiSlider.create(document.getElementById(\"range-simple\"), {\n        start: 20,\n        connect: [true, false],\n        step: 10,\n        range: {\n          min: 0,\n          max: 100,\n        },\n      });\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Animated Status Dots in HTML\nDESCRIPTION: This code shows how to create animated status dots by adding the .status-dot-animated class. It can be used for both standalone dots and within status indicators.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/statuses.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"status-dot status-dot-animated status-blue\"></span>\n```\n\n----------------------------------------\n\nTITLE: Button with Badge Implementation Examples in HTML\nDESCRIPTION: Implementation examples of buttons with notification badges in different colors. These examples show red and green badges positioned within buttons using margin spacing.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"btn\">Notifications <span class=\"badge bg-red-lt ms-2\">4</span></button>\n<button type=\"button\" class=\"btn\">\n  Notifications <span class=\"badge bg-green-lt ms-2\">4</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Dropdown with Card Content in HTML using Tabler\nDESCRIPTION: This snippet shows how to create a dropdown with rich card content using Tabler classes. It includes a dropdown toggle button, a card with an image, title, description, author details, and interaction icons. The dropdown is designed to provide more information without overwhelming the user interface.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropdowns.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dropdown\">\n  <a href=\"#\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\">Open dropdown</a>\n  <div class=\"dropdown-menu dropdown-menu-card\" style=\"max-width: 16rem\">\n    <div class=\"card d-flex flex-column\">\n      <a href=\"#\">\n        <img\n          class=\"card-img-top\"\n          src=\"/static/photos/friends-at-a-restaurant-drinking-wine.jpg\"\n          alt=\"How do you know she is a witch?\"\n        />\n      </a>\n      <div class=\"card-body d-flex flex-column\">\n        <h3 class=\"card-title\">\n          <a href=\"#\">How do you know she is a witch?</a>\n        </h3>\n        <div class=\"text-secondary\">\n          Are you suggesting that coconuts migrate? No, no, no! Yes, yes. A bit. But she's got a\n          wart. You ...\n        </div>\n        <div class=\"d-flex align-items-center pt-4 mt-auto\">\n          <span class=\"avatar\" style=\"background-image: url(/static/avatars/013m.jpg)\"></span>\n          <div class=\"ms-3\">\n            <a href=\"#\" class=\"text-body\">Maryjo Lebarree</a>\n            <div class=\"text-secondary\">3 days ago</div>\n          </div>\n          <div class=\"ms-auto\">\n            <a href=\"#\" class=\"icon d-none d-md-inline-block ms-3 text-secondary\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                class=\"icon\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                stroke-width=\"2\"\n                stroke=\"currentColor\"\n                fill=\"none\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path\n                  d=\"M19.5 12.572l-7.5 7.428l-7.5 -7.428m0 0a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572\"\n                />\n              </svg>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Basic Dropzone Form Implementation\nDESCRIPTION: Basic HTML structure for implementing a Dropzone upload form with fallback for browsers that don't support drag-and-drop.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropzone.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<form class=\"dropzone\" id=\"dropzone-default\" action=\".\" autocomplete=\"off\" novalidate>\n  <div class=\"fallback\">\n    <input name=\"file\" type=\"file\" />\n  </div>\n</form>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Alert Notifications in HTML with Tabler\nDESCRIPTION: Demonstrates the HTML structure for four types of alert messages: success, info, warning, and danger. Each alert includes a title and secondary text with appropriate semantic styling.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-success\" role=\"alert\">\n  <h4 class=\"alert-title\">Wow! Everything worked!</h4>\n  <div class=\"text-secondary\">Your account has been saved!</div>\n</div>\n<div class=\"alert alert-info\" role=\"alert\">\n  <h4 class=\"alert-title\">Did you know?</h4>\n  <div class=\"text-secondary\">Here is something that you might like to know.</div>\n</div>\n<div class=\"alert alert-warning\" role=\"alert\">\n  <h4 class=\"alert-title\">Uh oh, something went wrong</h4>\n  <div class=\"text-secondary\">Sorry! There was a problem with your request.</div>\n</div>\n<div class=\"alert alert-danger\" role=\"alert\">\n  <h4 class=\"alert-title\">I'm so sorry&hellip;</h4>\n  <div class=\"text-secondary\">Your account has been deleted and can't be restored.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Dropdown Menu\nDESCRIPTION: Creates a basic dropdown menu with a toggle button and three action items. Uses Bootstrap's dropdown classes and data attributes for functionality.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropdowns.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dropdown\">\n  <a href=\"#\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\">Open dropdown</a>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" href=\"#\">Action</a>\n    <a class=\"dropdown-item\" href=\"#\">Another action</a>\n    <a class=\"dropdown-item\" href=\"#\">Third action</a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Page Header with Meta Info and Avatar in Tabler\nDESCRIPTION: Advanced page header with user profile information, including avatar, name, job title, social stats, and verification status. Features SVG icons and responsive layout.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-headers.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-header\">\n  <div class=\"row align-items-center\">\n    <div class=\"col-auto\">\n      <span class=\"avatar avatar-md\" style=\"background-image: url(/static/avatars/023m.jpg)\"></span>\n    </div>\n    <div class=\"col\">\n      <h2 class=\"page-title\">Pawe≈Ç Kuna</h2>\n      <div class=\"page-subtitle\">\n        <div class=\"row\">\n          <div class=\"col-auto\">\n            <a href=\"#\" class=\"text-reset\">UI Designer at Tabler</a>\n          </div>\n          <div class=\"col-auto\">\n            <a href=\"#\" class=\"text-reset\">194 friends</a>\n          </div>\n          <div class=\"col-auto text-success\">Verified</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Tabs with Dropdown in Tabler UI\nDESCRIPTION: Tab implementation that includes a dropdown menu for additional options. This example shows how to incorporate a dropdown alongside regular tabs, combining horizontal navigation with a vertical menu to provide more options within limited horizontal space.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tabs.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-header\">\n    <ul class=\"nav nav-tabs card-header-tabs\" data-bs-toggle=\"tabs\">\n      <li class=\"nav-item\">\n        <a href=\"#tabs-home-ex4\" class=\"nav-link active\" data-bs-toggle=\"tab\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"#tabs-profile-ex4\" class=\"nav-link\" data-bs-toggle=\"tab\">Profile</a>\n      </li>\n      <li class=\"nav-item dropdown\">\n        <a\n          class=\"nav-link dropdown-toggle\"\n          data-bs-toggle=\"dropdown\"\n          role=\"button\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          >Dropdown</a\n        >\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item\" href=\"#\"> Action </a>\n          <a class=\"dropdown-item\" href=\"#\"> Another action </a>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"tab-content\">\n      <div class=\"tab-pane active show\" id=\"tabs-home-ex4\">\n        <h4>Home tab</h4>\n        <div>\n          Cursus turpis vestibulum, dui in pharetra vulputate id sed non turpis ultricies fringilla\n          at sed facilisis lacus pellentesque purus nibh\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-profile-ex4\">\n        <h4>Profile tab</h4>\n        <div>\n          Fringilla egestas nunc quis tellus diam rhoncus ultricies tristique enim at diam, sem nunc\n          amet, pellentesque id egestas velit sed\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Modal Structure in HTML\nDESCRIPTION: This snippet demonstrates the basic structure of a modal in HTML. It includes the modal container, dialog, content, header, body, and footer elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/modals.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"modal\" tabindex=\"-1\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">...</div>\n      <div class=\"modal-body\">...</div>\n      <div class=\"modal-footer\">...</div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Empty State with Header in HTML\nDESCRIPTION: This HTML code demonstrates how to create an empty state with a header. It includes a large header text (404), title, subtitle, and an action button. This design is suitable for error pages or situations where a simple textual representation is preferred over icons or illustrations.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/empty.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"empty\">\n  <div class=\"empty-header\">404</div>\n  <p class=\"empty-title\">Oops‚Ä¶ You just found an error page</p>\n  <p class=\"empty-subtitle text-secondary\">\n    Try adjusting your search or filter to find what you're looking for.\n  </p>\n  <div class=\"empty-action\">\n    <a href=\"#\" class=\"btn btn-primary\">\n      {% include \"ui/icon.html\" icon=\"arrow-left\" %}\n      Take me home\n    </a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Tab Navigation in Tabler UI\nDESCRIPTION: Basic tab implementation with card-based layout. This snippet shows how to structure the navigation and content areas with two tabs labeled 'Home' and 'Profile'. Uses Bootstrap's tab toggle functionality to switch between content sections.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tabs.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-header\">\n    <ul class=\"nav nav-tabs card-header-tabs\" data-bs-toggle=\"tabs\">\n      <li class=\"nav-item\">\n        <a href=\"#tabs-home-ex1\" class=\"nav-link active\" data-bs-toggle=\"tab\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"#tabs-profile-ex1\" class=\"nav-link\" data-bs-toggle=\"tab\">Profile</a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"tab-content\">\n      <div class=\"tab-pane active show\" id=\"tabs-home-ex1\">\n        <h4>Home tab</h4>\n        <div>\n          Cursus turpis vestibulum, dui in pharetra vulputate id sed non turpis ultricies fringilla\n          at sed facilisis lacus pellentesque purus nibh\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-profile-ex1\">\n        <h4>Profile tab</h4>\n        <div>\n          Fringilla egestas nunc quis tellus diam rhoncus ultricies tristique enim at diam, sem nunc\n          amet, pellentesque id egestas velit sed\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Form Validation States in HTML\nDESCRIPTION: Add `.is-valid` or `.is-invalid` classes to form controls to indicate validation state. This provides visual feedback to users about whether their input is correct or incorrect.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-validation.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" class=\"form-control is-valid\" placeholder=\"Valid State...\" />\n<input type=\"text\" class=\"form-control is-invalid\" placeholder=\"Invalid State...\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Full-width Navigation Tabs with Icons in Tabler UI\nDESCRIPTION: Creates a card-based tabbed interface with full-width navigation using .nav-fill class. The tabs feature icon-based navigation and corresponding content panels. Uses Bootstrap's tab functionality with data-bs-toggle attributes for interactivity.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tabs.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-header\">\n    <ul class=\"nav nav-tabs card-header-tabs nav-fill\" data-bs-toggle=\"tabs\">\n      <li class=\"nav-item\">\n        <a href=\"#tabs-home-ex5\" class=\"nav-link active\" data-bs-toggle=\"tab\">\n\t\t  \t {% include \"ui/icon.html\" icon=\"home\" %}\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"#tabs-profile-ex5\" class=\"nav-link\" data-bs-toggle=\"tab\">\n\t\t    {% include \"ui/icon.html\" icon=\"user\" %}\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"#tabs-activity-ex5\" class=\"nav-link\" data-bs-toggle=\"tab\">\n          {% include \"ui/icon.html\" icon=\"activity\" %}\n        </a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"tab-content\">\n      <div class=\"tab-pane active show\" id=\"tabs-home-ex5\">\n        <h4>Home tab</h4>\n        <div>\n          Cursus turpis vestibulum, dui in pharetra vulputate id sed non turpis ultricies fringilla\n          at sed facilisis lacus pellentesque purus nibh\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-profile-ex5\">\n        <h4>Profile tab</h4>\n        <div>\n          Fringilla egestas nunc quis tellus diam rhoncus ultricies tristique enim at diam, sem nunc\n          amet, pellentesque id egestas velit sed\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-activity-ex5\">\n        <h4>Activity tab</h4>\n        <div>\n          Donec ac vitae diam amet vel leo egestas consequat rhoncus in luctus amet, facilisi sit\n          mauris accumsan nibh habitant senectus\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Alerts with Icons in Tabler UI\nDESCRIPTION: Demonstrates how to enhance alert components with SVG icons using the alert-icon class. Each alert type (success, info, warning, danger) is shown with an appropriate contextual icon.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-success\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon alert-icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M5 12l5 5l10 -10\" />\n      </svg>\n    </div>\n    <div>\n      <h4 class=\"alert-title\">Wow! Everything worked!</h4>\n      <div class=\"text-secondary\">Your account has been saved!</div>\n    </div>\n  </div>\n</div>\n<div class=\"alert alert-info\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon alert-icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <circle cx=\"12\" cy=\"12\" r=\"9\" />\n        <line x1=\"12\" y1=\"8\" x2=\"12.01\" y2=\"8\" />\n        <polyline points=\"11 12 12 12 12 16 13 16\" />\n      </svg>\n    </div>\n    <div>\n      <h4 class=\"alert-title\">Did you know?</h4>\n      <div class=\"text-secondary\">Here is something that you might like to know.</div>\n    </div>\n  </div>\n</div>\n<div class=\"alert alert-warning\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon alert-icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 9v2m0 4v.01\" />\n        <path\n          d=\"M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75\"\n        />\n      </svg>\n    </div>\n    <div>\n      <h4 class=\"alert-title\">Uh oh, something went wrong</h4>\n      <div class=\"text-secondary\">Sorry! There was a problem with your request.</div>\n    </div>\n  </div>\n</div>\n<div class=\"alert alert-danger\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon alert-icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <circle cx=\"12\" cy=\"12\" r=\"9\" />\n        <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\" />\n        <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\" />\n      </svg>\n    </div>\n    <div>\n      <h4 class=\"alert-title\">I'm so sorry&hellip;</h4>\n      <div class=\"text-secondary\">Your account has been deleted and can't be restored.</div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: YouTube Player Complete Implementation\nDESCRIPTION: Full implementation example including both the player container and required scripts for YouTube video playback.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/inline-player.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"player-youtube\" data-plyr-provider=\"youtube\" data-plyr-embed-id=\"dQw4w9WgXcQ\"></div>\n<script src=\"{{ cdnUrl }}/dist/libs/plyr/dist/plyr.min.js\"></script>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.Plyr && new Plyr(\"#player-youtube\");\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Toast Message in Tabler UI\nDESCRIPTION: This code snippet demonstrates the default toast message markup with a header containing an avatar, user name, timestamp, and close button. It includes a toast body with a sample message. The toast uses Bootstrap attributes for control and is set to not auto-hide.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/toasts.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div\n  class=\"toast show\"\n  role=\"alert\"\n  aria-live=\"assertive\"\n  aria-atomic=\"true\"\n  data-bs-autohide=\"false\"\n  data-bs-toggle=\"toast\"\n>\n  <div class=\"toast-header\">\n    <span\n      class=\"avatar avatar-xs me-2\"\n      style=\"background-image: url(/static/avatars/018f.jpg)\"\n    ></span>\n    <strong class=\"me-auto\">Mallory Hulme</strong>\n    <small>11 mins ago</small>\n    <button\n      type=\"button\"\n      class=\"ms-2 btn-close\"\n      data-bs-dismiss=\"toast\"\n      aria-label=\"Close\"\n    ></button>\n  </div>\n  <div class=\"toast-body\">Hello, world! This is a toast message.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: World Map with Markers and Labels\nDESCRIPTION: Advanced implementation featuring markers for specific locations with custom styling and interactive labels.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/vector-maps.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const map = new jsVectorMap({\n      selector: \"#map-world-markers\",\n      map: \"world_merc\",\n      backgroundColor: \"transparent\",\n      regionStyle: {\n        initial: {\n          fill: \"var(--tblr-body-bg)\",\n          stroke: \"var(--tblr-border-color)\",\n          strokeWidth: 2,\n        },\n      },\n      zoomOnScroll: false,\n      zoomButtons: false,\n      markers: [\n        {\n          coords: [61.524, 105.3188],\n          name: \"Russia\",\n        },\n        {\n          coords: [56.1304, -106.3468],\n          name: \"Canada\",\n        },\n        {\n          coords: [71.7069, -42.6043],\n          name: \"Greenland\",\n        },\n        {\n          coords: [26.8206, 30.8025],\n          name: \"Egypt\",\n        },\n        {\n          coords: [-14.235, -51.9253],\n          name: \"Brazil\",\n        },\n        {\n          coords: [35.8617, 104.1954],\n          name: \"China\",\n        },\n        {\n          coords: [37.0902, -95.7129],\n          name: \"United States\",\n        },\n        {\n          coords: [60.472024, 8.468946],\n          name: \"Norway\",\n        },\n        {\n          coords: [48.379433, 31.16558],\n          name: \"Ukraine\",\n        },\n      ],\n      markerStyle: {\n        initial: {\n          r: 4,\n          stroke: \"#fff\",\n          opacity: 1,\n          strokeWidth: 3,\n          stokeOpacity: 0.5,\n          fill: \"var(--tblr-primary)\",\n        },\n        hover: {\n          fill: \"var(--tblr-primary)\",\n          stroke: \"var(--tblr-primary)\",\n        },\n      },\n      markerLabelStyle: {\n        initial: {\n          fontSize: 10,\n        },\n      },\n      labels: {\n        markers: {\n          render: function (marker) {\n            return marker.name;\n          },\n        },\n      },\n    });\n    window.addEventListener(\"resize\", () => {\n      map.updateSize();\n    });\n  });\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Bootstrap Popover in HTML\nDESCRIPTION: Basic implementation of a Bootstrap popover that toggles on click. The popover includes a title and content text that appears when the button is clicked.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/popover.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-toggle=\"popover\"\n  title=\"Popover title\"\n  data-bs-content=\"And here's some amazing content. It's very engaging. Right?\"\n>\n  Click to toggle popover\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Breadcrumb Navigation in HTML\nDESCRIPTION: Basic HTML structure for implementing a breadcrumb navigation component. Uses the 'breadcrumb' class with list items marked as 'breadcrumb-item' and 'active' for the current page.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/breadcrumb.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ol class=\"breadcrumb\">\n  <li class=\"breadcrumb-item\">\n    <a href=\"#\">...</a>\n  </li>\n  <li class=\"breadcrumb-item active\">\n    <a href=\"#\">...</a>\n  </li>\n</ol>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Heatmap Chart with ApexCharts in Tabler\nDESCRIPTION: This code creates a heatmap chart using ApexCharts in Tabler. It visualizes average temperatures by day and city, with custom configurations for tooltip, colors, and data labels. The chart includes data for multiple cities across different days of the week.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/charts.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div id=\"chart-demo-heatmap\" class=\"chart-lg\"></div>\n  </div>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  window.ApexCharts &&\n    new ApexCharts(document.getElementById(\"chart-demo-heatmap\"), {\n      chart: {\n        type: \"heatmap\",\n        fontFamily: \"inherit\",\n        height: 240,\n        animations: {\n          enabled: false,\n        },\n        toolbar: {\n          show: false,\n        },\n      },\n      tooltip: {\n        theme: \"dark\",\n      },\n      fill: {\n        opacity: 1,\n      },\n      series: [\n        {\n          name: \"New York\",\n          data: [\n            { x: \"Monday\", y: 22 },\n            { x: \"Tuesday\", y: 24 },\n            { x: \"Wednesday\", y: 19 },\n            { x: \"Thursday\", y: 23 },\n            { x: \"Friday\", y: 25 },\n            { x: \"Saturday\", y: 27 },\n            { x: \"Sunday\", y: 26 },\n          ],\n        },\n        {\n          name: \"Los Angeles\",\n          data: [\n            { x: \"Monday\", y: 28 },\n            { x: \"Tuesday\", y: 30 },\n            { x: \"Wednesday\", y: 27 },\n            { x: \"Thursday\", y: 29 },\n            { x: \"Friday\", y: 31 },\n            { x: \"Saturday\", y: 32 },\n            { x: \"Sunday\", y: 33 },\n          ],\n        },\n        {\n          name: \"Chicago\",\n          data: [\n            { x: \"Monday\", y: 18 },\n            { x: \"Tuesday\", y: 20 },\n            { x: \"Wednesday\", y: 17 },\n            { x: \"Thursday\", y: 19 },\n            { x: \"Friday\", y: 21 },\n            { x: \"Saturday\", y: 22 },\n            { x: \"Sunday\", y: 23 },\n          ],\n        },\n        {\n          name: \"Houston\",\n          data: [\n            { x: \"Monday\", y: 25 },\n            { x: \"Tuesday\", y: 27 },\n            { x: \"Wednesday\", y: 24 },\n            { x: \"Thursday\", y: 26 },\n            { x: \"Friday\", y: 28 },\n            { x: \"Saturday\", y: 29 },\n            { x: \"Sunday\", y: 30 },\n          ],\n        },\n        {\n          name: \"Phoenix\",\n          data: [\n            { x: \"Monday\", y: 33 },\n            { x: \"Tuesday\", y: 35 },\n            { x: \"Wednesday\", y: 32 },\n            { x: \"Thursday\", y: 34 },\n            { x: \"Friday\", y: 36 },\n            { x: \"Saturday\", y: 37 },\n            { x: \"Sunday\", y: 38 },\n          ],\n        },\n        {\n          name: \"Philadelphia\",\n          data: [\n            { x: \"Monday\", y: 20 },\n            { x: \"Tuesday\", y: 22 },\n            { x: \"Wednesday\", y: 19 },\n            { x: \"Thursday\", y: 21 },\n            { x: \"Friday\", y: 23 },\n            { x: \"Saturday\", y: 24 },\n            { x: \"Sunday\", y: 25 },\n          ],\n        },\n      ],\n      colors: [\"var(--tblr-primary)\"],\n      dataLabels: {\n        enabled: false,\n      },\n      xaxis: {\n        tooltip: {\n          enabled: false,\n        },\n      },\n      title: {\n        text: \"Average Temperature by Day and City\",\n      },\n    }).render();\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Button Elements Implementation in HTML\nDESCRIPTION: Demonstrates different HTML elements that can be styled as buttons using the .btn class, including links, button elements, and input elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn\" role=\"button\">Link</a>\n<button class=\"btn\">Button</button>\n<input type=\"button\" class=\"btn\" value=\"Input\" />\n<input type=\"submit\" class=\"btn\" value=\"Submit\" />\n<input type=\"reset\" class=\"btn\" value=\"Reset\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a Success Alert Modal in HTML\nDESCRIPTION: This example demonstrates how to implement a success alert modal. It includes custom styling for the modal status, icon, and content layout to effectively communicate a successful action.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/modals.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"modal\" id=\"exampleModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog modal-sm\" role=\"document\">\n    <div class=\"modal-content\">\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      <div class=\"modal-status bg-success\"></div>\n      <div class=\"modal-body text-center py-4\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"icon mb-2 text-green icon-lg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"2\"\n          stroke=\"currentColor\"\n          fill=\"none\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <circle cx=\"12\" cy=\"12\" r=\"9\" />\n          <path d=\"M9 12l2 2l4 -4\" />\n        </svg>\n        <h3>Payment succeeded</h3>\n        <div class=\"text-secondary\">\n          Your payment of $290 has been successfully submitted. Your invoice has been sent to\n          support@tabler.io.\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"w-100\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <a href=\"#\" class=\"btn w-100\" data-bs-dismiss=\"modal\"> Go to dashboard </a>\n            </div>\n            <div class=\"col\">\n              <a href=\"#\" class=\"btn btn-success w-100\" data-bs-dismiss=\"modal\"> View invoice </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Offcanvas Component in HTML\nDESCRIPTION: This snippet shows the basic structure of an offcanvas component in Tabler. It demonstrates how to create an offcanvas that slides in from the left side of the screen using the 'offcanvas-start' class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/offcanvas.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"offcanvas offcanvas-start\" tabindex=\"-1\" id=\"offcanvas\">\n  <div class=\"offcanvas-body\">\n    Content for the offcanvas goes here. You can place just about any Tabler component or custom\n    elements here.\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Table with Sticky Header in HTML with Tabler\nDESCRIPTION: This snippet shows how to implement a table with a sticky header using Tabler's CSS classes. The 'sticky-top' class is applied to the thead element to keep the header visible at the top of the viewport when scrolling through a large table, improving usability and data context.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tables.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"table\">\n  <thead class=\"sticky-top\">\n    <tr>\n      <th scope=\"col\">Class</th>\n      <th scope=\"col\">Heading</th>\n      <th scope=\"col\">Heading</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th scope=\"row\">Default</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Primary</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Secondary</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Success</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Danger</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Warning</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Info</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr>\n      <th scope=\"row\">Light</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n    <tr class=\"table-dark\">\n      <th scope=\"row\">Dark</th>\n      <td>Cell</td>\n      <td>Cell</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Example of Input Mask Implementation in HTML\nDESCRIPTION: This code provides a complete example of implementing an input mask for a telephone number, including a label and additional attributes for visibility and autocomplete.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-input-mask.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-label\">Telephone mask</label>\n<input\n  type=\"text\"\n  name=\"input-mask\"\n  class=\"form-control\"\n  data-mask=\"(00) 0000-0000\"\n  data-mask-visible=\"true\"\n  placeholder=\"(00) 0000-0000\"\n  autocomplete=\"off\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating Progress Bar as Background Element in HTML\nDESCRIPTION: HTML markup for using progress bars as background elements for statistics visualization. This pattern includes text labels and percentage values alongside the visual progress indicator.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/progress.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"progressbg\">\n  <div class=\"progress progressbg-progress\">\n    <div class=\"progress-bar bg-primary-lt\" style=\"width: 65%\"></div>\n  </div>\n  <div class=\"progressbg-text\">Poland</div>\n  <div class=\"progressbg-value\">65%</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Pie Chart with ApexCharts in Tabler\nDESCRIPTION: This snippet demonstrates how to create a pie chart using ApexCharts in Tabler. It sets up a donut-style chart with custom colors, labels, and legend configuration. The chart visualizes distribution across categories such as Direct, Affiliate, E-mail, and Other.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/charts.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div id=\"chart-demo-pie\" class=\"chart-lg\"></div>\n  </div>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  window.ApexCharts &&\n    new ApexCharts(document.getElementById(\"chart-demo-pie\"), {\n      chart: {\n        type: \"donut\",\n        fontFamily: \"inherit\",\n        height: 240,\n        sparkline: {\n          enabled: true,\n        },\n        animations: {\n          enabled: false,\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      series: [44, 55, 12, 2],\n      labels: [\"Direct\", \"Affilliate\", \"E-mail\", \"Other\"],\n      tooltip: {\n        theme: \"dark\",\n      },\n      grid: {\n        strokeDashArray: 4,\n      },\n      colors: [\n        \"var(--tblr-primary)\",\n        \"color-mix(in oklab, var(--tblr-primary) 0.8, transparent)\",\n        \"color-mix(in oklab, var(--tblr-primary) 0.6, transparent)\",\n        \"var(--tblr-gray-300)\",\n      ],\n      legend: {\n        show: true,\n        position: \"bottom\",\n        offsetY: 12,\n        markers: {\n          width: 10,\n          height: 10,\n          radius: 100,\n        },\n        itemMargin: {\n          horizontal: 8,\n          vertical: 8,\n        },\n      },\n    }).render();\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Spinner to Button in HTML\nDESCRIPTION: Implementation of a button with a loading spinner to indicate processing state.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/spinners.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-primary\">\n  <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\n  Button\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Status Tracking Card in HTML/Bootstrap\nDESCRIPTION: Creates a card component with status monitoring functionality including a header with dropdown menu, status percentage display, and tracking blocks that show operational status. Uses Bootstrap classes for styling and data-bs-toggle for tooltips and dropdown functionality.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tracking.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div class=\"d-flex align-items-center\">\n      <div class=\"subheader\">Status monitoring</div>\n      <div class=\"ms-auto lh-1\">\n        <div class=\"dropdown\">\n          <a\n            class=\"dropdown-toggle text-secondary\"\n            href=\"#\"\n            data-bs-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n            >Current month</a\n          >\n          <div class=\"dropdown-menu dropdown-menu-end\">\n            <a class=\"dropdown-item active\" href=\"#\">Current month</a>\n            <a class=\"dropdown-item\" href=\"#\">Last month</a>\n            <a class=\"dropdown-item\" href=\"#\">Last 3 months</a>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex align-items-baseline\">\n      <div class=\"h1 mb-3 me-2\">99.5%</div>\n      <div class=\"me-auto\">\n        <span class=\"text-green d-inline-flex align-items-center lh-1\">\n          2%\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon ms-1\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke=\"currentColor\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <polyline points=\"3 17 9 11 13 15 21 7\" />\n            <polyline points=\"14 7 21 7 21 14\" />\n          </svg>\n        </span>\n      </div>\n    </div>\n    <div class=\"mt-2\">\n      <div class=\"tracking\">\n        <div\n          class=\"tracking-block bg-success\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"Operational\"\n        ></div>\n        <div\n          class=\"tracking-block bg-danger\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"Downtime\"\n        ></div>\n        <div\n          class=\"tracking-block bg-success\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"Operational\"\n        ></div>\n        <div\n          class=\"tracking-block bg-warning\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"Big load\"\n        ></div>\n        <div\n          class=\"tracking-block\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"No data\"\n        ></div>\n        <div\n          class=\"tracking-block\"\n          data-bs-toggle=\"tooltip\"\n          data-bs-placement=\"top\"\n          title=\"No data\"\n        ></div>\n        ...\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Stacking Multiple Toasts in Tabler UI\nDESCRIPTION: This code demonstrates how to stack multiple toasts within a single container. It includes two toast components, each with their own header, avatar, username, timestamp, and close button. The toast-container class is used to properly group and stack the toasts.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/toasts.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"toast-container\">\n  <div\n    class=\"toast show\"\n    role=\"alert\"\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n    data-bs-autohide=\"false\"\n    data-bs-toggle=\"toast\"\n  >\n    <div class=\"toast-header\">\n      <span\n        class=\"avatar avatar-xs me-2\"\n        style=\"background-image: url(/static/avatars/008m.jpg)\"\n      ></span>\n      <strong class=\"me-auto\">Dunn Slane</strong>\n      <small>11 mins ago</small>\n      <button\n        type=\"button\"\n        class=\"ms-2 btn-close\"\n        data-bs-dismiss=\"toast\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n    <div class=\"toast-body\">Hello, world! This is a toast message.</div>\n  </div>\n  <div\n    class=\"toast show\"\n    role=\"alert\"\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n    data-bs-autohide=\"false\"\n    data-bs-toggle=\"toast\"\n  >\n    <div class=\"toast-header\">\n      <span\n        class=\"avatar avatar-xs me-2\"\n        style=\"background-image: url(/static/avatars/020m.jpg)\"\n      ></span>\n      <strong class=\"me-auto\">Mallory Hulme</strong>\n      <small>7 mins ago</small>\n      <button\n        type=\"button\"\n        class=\"ms-2 btn-close\"\n        data-bs-dismiss=\"toast\"\n        aria-label=\"Close\"\n      ></button>\n    </div>\n    <div class=\"toast-body\">This is another toast message.</div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Avatar Image Check\nDESCRIPTION: Structure for creating an image check using avatar components instead of regular images. Includes avatar styling and background image implementation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-image-check.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-imagecheck\">\n  <input name=\"...\" type=\"checkbox\" value=\"...\" class=\"form-imagecheck-input\" />\n  <span class=\"form-imagecheck-figure\">\n    <span class=\"form-imagecheck-image\">\n      <span class=\"avatar avatar-md\" style=\"background-image: url(...)\"></span>\n    </span>\n  </span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Implementing Animated Status Indicators with Various Colors in HTML\nDESCRIPTION: This code shows how to create animated status indicators with different color variations in the Tabler UI framework. Each indicator consists of three circles wrapped in a container with appropriate color classes. The 'status-indicator-animated' class enables the animation effect.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/statuses.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"status-indicator status-blue status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-azure status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-indigo status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-purple status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-pink status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-red status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-orange status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-yellow status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-lime status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-green status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-teal status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n<span class=\"status-indicator status-cyan status-indicator-animated\">\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n  <span class=\"status-indicator-circle\"></span>\n</span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Image Radio Button\nDESCRIPTION: Structure for creating an image-based radio button input using form-imagecheck classes. Similar to checkbox but uses radio input type.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-image-check.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-imagecheck\">\n  <input name=\"...\" type=\"radio\" value=\"1\" class=\"form-imagecheck-input\" />\n  <span class=\"form-imagecheck-figure\">\n    <img src=\"...\" alt=\"\" class=\"form-imagecheck-image\" />\n  </span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Creating Horizontal Navigation Bar in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic horizontal navigation bar using the .nav class. It includes examples of active, regular, and disabled navigation items with appropriate ARIA attributes for accessibility.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/navs-tabls.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"nav\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\">Link</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\n  </li>\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Prompt Modal with Warning in HTML\nDESCRIPTION: This snippet shows how to create a prompt modal with a warning message. It includes custom styling for the modal status and icon, demonstrating more advanced modal usage.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/modals.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"modal\" id=\"exampleModal\" tabindex=\"-1\">\n  <div class=\"modal-dialog modal-sm\" role=\"document\">\n    <div class=\"modal-content\">\n      <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      <div class=\"modal-status bg-danger\"></div>\n      <div class=\"modal-body text-center py-4\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"icon mb-2 text-danger icon-lg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          stroke-width=\"2\"\n          stroke=\"currentColor\"\n          fill=\"none\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        >\n          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M12 9v2m0 4v.01\" />\n          <path\n            d=\"M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75\"\n          />\n        </svg>\n        <h3>Are you sure?</h3>\n        <div class=\"text-secondary\">\n          Do you really want to remove 84 files? What you've done cannot be undone.\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <div class=\"w-100\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <a href=\"#\" class=\"btn w-100\" data-bs-dismiss=\"modal\"> Cancel </a>\n            </div>\n            <div class=\"col\">\n              <a href=\"#\" class=\"btn btn-danger w-100\" data-bs-dismiss=\"modal\"> Delete 84 items </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Theme Toggle Implementation in JavaScript\nDESCRIPTION: JavaScript function and event listeners that handle theme toggling between light and dark modes. The code sets the data-bs-theme attribute on the document root element based on user selection.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst toggleTheme = (theme) => {\n  if (theme === \"dark\") {\n    document.documentElement.setAttribute(\"data-bs-theme\", \"dark\");\n  } else {\n    document.documentElement.setAttribute(\"data-bs-theme\", \"light\");\n  }\n};\ndocument.querySelectorAll(\".form-check-input\").forEach((input) => {\n  input.addEventListener(\"change\", (e) => {\n    console.log(e.target.value);\n    toggleTheme(e.target.value);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Button Style Variations Implementation\nDESCRIPTION: Shows different button style variations using contextual classes like primary, secondary, success, warning, danger, info, dark, and light.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-primary\">Primary</a>\n<a href=\"#\" class=\"btn btn-secondary\">Secondary</a>\n<a href=\"#\" class=\"btn btn-success\">Success</a>\n<a href=\"#\" class=\"btn btn-warning\">Warning</a>\n<a href=\"#\" class=\"btn btn-danger\">Danger</a>\n<a href=\"#\" class=\"btn btn-info\">Info</a>\n<a href=\"#\" class=\"btn btn-dark\">Dark</a>\n<a href=\"#\" class=\"btn btn-light\">Light</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing a Basic Tracking Visualization Grid in HTML\nDESCRIPTION: This code snippet demonstrates how to create a tracking grid that visualizes system status using color-coded blocks. Each block has a tooltip that displays its status on hover using Bootstrap's tooltip functionality. Status types include operational (green), downtime (red), high load (yellow), and no data (default style).\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tracking.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"tracking\">\n  ...\n  <div\n    class=\"tracking-block bg-success\"\n    data-bs-toggle=\"tooltip\"\n    data-bs-placement=\"top\"\n    title=\"Operational\"\n  ></div>\n  <div\n    class=\"tracking-block\"\n    data-bs-toggle=\"tooltip\"\n    data-bs-placement=\"top\"\n    title=\"No data\"\n  ></div>\n  <div\n    class=\"tracking-block bg-failed\"\n    data-bs-toggle=\"tooltip\"\n    data-bs-placement=\"top\"\n    title=\"Operational\"\n  ></div>\n  ...\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Alignment in Table Cells with HTML\nDESCRIPTION: Shows how to apply vertical alignment utility classes to table cells, allowing for controlled positioning of content within each cell. This example demonstrates all six alignment options within a table structure.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/vertical-align.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<table>\n  <tbody>\n    <tr>\n      <td class=\"align-baseline\">baseline</td>\n      <td class=\"align-top\">top</td>\n      <td class=\"align-middle\">middle</td>\n      <td class=\"align-bottom\">bottom</td>\n      <td class=\"align-text-top\">text-top</td>\n      <td class=\"align-text-bottom\">text-bottom</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Creating an Advanced Line Chart for Social Media Referrals with ApexCharts in Tabler\nDESCRIPTION: This snippet showcases an advanced line chart implementation using ApexCharts in Tabler. It visualizes social media referrals from Facebook, Twitter, and Dribbble over time. The chart includes custom configurations for multiple data series, tooltip, grid, and legend.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/charts.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div id=\"chart-social-referrals\" class=\"chart-lg\"></div>\n  </div>\n</div>\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  window.ApexCharts &&\n    new ApexCharts(document.getElementById(\"chart-social-referrals\"), {\n      chart: {\n        type: \"line\",\n        fontFamily: \"inherit\",\n        height: 240,\n        parentHeightOffset: 0,\n        toolbar: {\n          show: false,\n        },\n        animations: {\n          enabled: false,\n        },\n      },\n      fill: {\n        opacity: 1,\n      },\n      stroke: {\n        width: 2,\n        lineCap: \"round\",\n        curve: \"smooth\",\n      },\n      series: [\n        {\n          name: \"Facebook\",\n          data: [\n            13281, 8521, 15038, 9983, 15417, 8888, 7052, 14270, 5214, 9587, 5950, 16852, 17836,\n            12217, 17406, 12262, 9147, 14961, 18292, 15230, 13435, 10649, 5140, 13680, 4508,\n            13271, 13413, 5543, 18727, 18238, 18175, 6246, 5864, 17847, 9170, 6445, 12945, 8142,\n            8980, 10422, 15535, 11569, 10114, 17621, 16138, 13046, 6652, 9906, 14100, 16495, 6749,\n          ],\n        },\n        {\n          name: \"Twitter\",\n          data: [\n            3680, 1862, 3070, 2252, 5348, 3091, 3000, 3984, 5176, 5325, 2420, 5474, 3098, 1893,\n            3748, 2879, 4197, 5186, 4213, 4334, 2807, 1594, 4863, 2030, 3752, 4856, 5341, 3954,\n            3461, 3097, 3404, 4949, 2283, 3227, 3630, 2360, 3477, 4675, 1901, 2252, 3347, 2954,\n            5029, 2079, 2830, 3292, 4578, 3401, 4104, 3749, 4457, 3734,\n          ],\n        },\n        {\n          name: \"Dribbble\",\n          data: [\n            722, 1866, 961, 1108, 1110, 561, 1753, 1815, 1985, 776, 859, 547, 1488, 766, 702, 621,\n            1599, 1372, 1620, 963, 759, 764, 739, 789, 1696, 1454, 1842, 734, 551, 1689, 1924,\n            1875, 908, 1675, 1541, 1953, 534, 502, 1524, 1867, 719, 1472, 1608, 1025, 889, 1150,\n            654, 1695, 1662, 1285, 1787,\n          ],\n        },\n      ],\n      tooltip: {\n        theme: \"dark\",\n      },\n      grid: {\n        padding: {\n          top: -20,\n          right: 0,\n          left: -4,\n          bottom: -4,\n        },\n        strokeDashArray: 4,\n        xaxis: {\n          lines: {\n            show: true,\n          },\n        },\n      },\n      xaxis: {\n        labels: {\n          padding: 0,\n        },\n        tooltip: {\n          enabled: false,\n        },\n        type: \"datetime\",\n      },\n      yaxis: {\n        labels: {\n          padding: 4,\n        },\n      },\n      labels: [\n        \"2020-06-21\", \"2020-06-22\", \"2020-06-23\", \"2020-06-24\", \"2020-06-25\", \"2020-06-26\",\n        \"2020-06-27\", \"2020-06-28\", \"2020-06-29\", \"2020-06-30\", \"2020-07-01\", \"2020-07-02\",\n        \"2020-07-03\", \"2020-07-04\", \"2020-07-05\", \"2020-07-06\", \"2020-07-07\", \"2020-07-08\",\n        \"2020-07-09\", \"2020-07-10\", \"2020-07-11\", \"2020-07-12\", \"2020-07-13\", \"2020-07-14\",\n        \"2020-07-15\", \"2020-07-16\", \"2020-07-17\", \"2020-07-18\", \"2020-07-19\", \"2020-07-20\",\n        \"2020-07-21\", \"2020-07-22\", \"2020-07-23\", \"2020-07-24\", \"2020-07-25\", \"2020-07-26\",\n        \"2020-07-27\", \"2020-07-28\", \"2020-07-29\", \"2020-07-30\", \"2020-07-31\", \"2020-08-01\",\n        \"2020-08-02\", \"2020-08-03\", \"2020-08-04\", \"2020-08-05\", \"2020-08-06\", \"2020-08-07\",\n        \"2020-08-08\", \"2020-08-09\", \"2020-08-10\",\n      ],\n      colors: [\n        \"var(--tblr-facebook)\",\n        \"var(--tblr-twitter)\",\n        \"var(--tblr-dribbble)\",\n      ],\n      legend: {\n        show: true,\n        position: \"bottom\",\n        offsetY: 12,\n        markers: {\n          width: 10,\n          height: 10,\n          radius: 100,\n        },\n        itemMargin: {\n          horizontal: 8,\n          vertical: 8,\n        },\n      },\n    }).render();\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Segmented Control in HTML\nDESCRIPTION: This snippet demonstrates how to create a vertical segmented control by adding the nav-segmented-vertical class to the nav element. This changes the orientation of the control from horizontal to vertical.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/segmented-control.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"nav nav-segmented-vertical\" role=\"tablist\">...</nav>\n```\n\n----------------------------------------\n\nTITLE: Implementing Vertical Navigation with flex-column\nDESCRIPTION: This code shows how to transform a horizontal nav into a vertical navigation menu by adding the .flex-column class to the .nav element. This structure is useful for sidebars or vertical menus.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/navs-tabls.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ul class=\"nav flex-column\">\n  ...\n</ul>\n```\n\n----------------------------------------\n\nTITLE: Creating Default Steps Component in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic steps component using HTML and CSS classes. It shows a progress tracker with three steps, where the third step is active.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/steps.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"steps\">\n  <a href=\"#\" class=\"step-item\"> Step 1 </a>\n  <a href=\"#\" class=\"step-item\"> Step 2 </a>\n  <a href=\"#\" class=\"step-item active\"> Step 3 </a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Bootstrap Tooltips with HTML Content\nDESCRIPTION: Demonstrates how to create tooltips that can contain HTML markup using the data-bs-html attribute. This allows for rich formatting within the tooltip content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tooltips.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-toggle=\"tooltip\"\n  data-bs-html=\"true\"\n  title=\"<em>Tooltip</em> <u>with</u> <b>HTML</b>\"\n>\n  Tooltip with HTML\n</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Icon Buttons in HTML using Tabler Classes\nDESCRIPTION: This snippet shows how to create a primary-colored icon button using Tabler classes. The btn-icon class removes extra padding, making it suitable for icon-only buttons.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"#\" class=\"btn btn-primary btn-icon\" aria-label=\"Button\">\n  <svg>...</svg>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Creating Active State Dropdown\nDESCRIPTION: Shows how to implement an active state for dropdown items, highlighting the selected option.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropdowns.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dropdown\">\n  <a href=\"#\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\">Open dropdown</a>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" href=\"#\"> Action </a>\n    <a class=\"dropdown-item\" href=\"#\"> Another action </a>\n    <a class=\"dropdown-item active\" href=\"#\">Active action</a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Filled Tabler Icons\nDESCRIPTION: Demonstrates how to implement filled variants of Tabler icons using the filled suffix in the icon name.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/icons.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% include \"ui/icon.html\" icon=\"heart-filled\" %}\n```\n\n----------------------------------------\n\nTITLE: Creating Pill-Shaped Badges in HTML\nDESCRIPTION: Examples of pill-shaped badges with rounded corners using the badge-pill class. These badges automatically adjust width based on content and work well for numerical indicators.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"badge badge-pill bg-blue-lt\">1</span>\n<span class=\"badge badge-pill bg-azure-lt\">2</span>\n<span class=\"badge badge-pill bg-indigo-lt\">3</span>\n<span class=\"badge badge-pill bg-purple-lt\">4</span>\n<span class=\"badge badge-pill bg-pink-lt\">5</span>\n<span class=\"badge badge-pill bg-red-lt\">6</span>\n<span class=\"badge badge-pill bg-orange-lt\">7</span>\n<span class=\"badge badge-pill bg-yellow-lt\">8</span>\n<span class=\"badge badge-pill bg-lime-lt\">9</span>\n<span class=\"badge badge-pill bg-green-lt\">10</span>\n<span class=\"badge badge-pill bg-teal-lt\">11</span>\n<span class=\"badge badge-pill bg-cyan-lt\">12</span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Bordered Page Header in Tabler\nDESCRIPTION: Page header with border styling, including issue reference numbers, author information, and action buttons. Designed for clear content separation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-headers.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-header page-header-border\">\n  <div class=\"container-fluid\">\n    <div class=\"row align-items-center\">\n      <div class=\"col\">\n        <h2 class=\"page-title\">Improve cards with no border</h2>\n        <div class=\"text-secondary mt-1\">\n          <a href=\"#\" class=\"text-reset\">#693</a>\n          opened by <a href=\"#\" class=\"text-body\">Jeffie Lewzey</a> in\n          <a href=\"#\" class=\"text-body\">Calendar Page</a>\n        </div>\n      </div>\n      <div class=\"col-auto\">\n        <div class=\"btn-list\">\n          <a href=\"#\" class=\"btn\">Edit</a>\n          <a href=\"#\" class=\"btn d-none d-md-inline-flex\">Subscribe</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Navbar Structure in HTML\nDESCRIPTION: This snippet shows the basic HTML structure for creating a navbar using Tabler classes. It demonstrates the use of the .navbar and .navbar-expand-md classes to create a responsive navigation bar.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/navbars.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<header class=\"navbar navbar-expand-md d-print-none\">...</header>\n```\n\n----------------------------------------\n\nTITLE: Creating Directional Bootstrap Popovers in HTML\nDESCRIPTION: Implementation of Bootstrap popovers with four different placement directions: top, right, bottom, and left. Each button demonstrates a different popover position using the data-bs-placement attribute.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/popover.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-container=\"body\"\n  data-bs-toggle=\"popover\"\n  data-bs-placement=\"top\"\n  data-bs-content=\"Top popover\"\n>\n  Popover on top\n</button>\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-container=\"body\"\n  data-bs-toggle=\"popover\"\n  data-bs-placement=\"right\"\n  data-bs-content=\"Right popover\"\n>\n  Popover on right\n</button>\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-container=\"body\"\n  data-bs-toggle=\"popover\"\n  data-bs-placement=\"bottom\"\n  data-bs-content=\"Bottom popover\"\n>\n  Popover on bottom\n</button>\n<button\n  type=\"button\"\n  class=\"btn\"\n  data-bs-container=\"body\"\n  data-bs-toggle=\"popover\"\n  data-bs-placement=\"left\"\n  data-bs-content=\"Left popover\"\n>\n  Popover on left\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Tabler Icon in HTML\nDESCRIPTION: Shows how to add a basic Tabler icon to HTML using the icon include template. This snippet demonstrates the fundamental implementation of a heart icon.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/icons.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{% include \"ui/icon.html\" icon=\"heart\" %}\n```\n\n----------------------------------------\n\nTITLE: Adding Links to Alert Messages in Tabler\nDESCRIPTION: Shows how to incorporate a clickable link within an alert message using the alert-link class to maintain consistent styling with the alert's color scheme.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-danger m-0\">\n  This is a danger alert ‚Äî <a href=\"#\" class=\"alert-link\">check it out</a>!\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Cookies Banner with Offcanvas in HTML\nDESCRIPTION: This code demonstrates how to implement a cookies consent banner using the offcanvas component. It shows a bottom-positioned offcanvas with buttons for accepting different cookie options and information text.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/offcanvas.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div\n  class=\"offcanvas offcanvas-bottom h-auto show\"\n  tabindex=\"-1\"\n  id=\"offcanvasBottom\"\n  aria-modal=\"true\"\n  role=\"dialog\"\n>\n  <div class=\"offcanvas-body\">\n    <div class=\"container\">\n      <div class=\"row align-items-center\">\n        <div class=\"col\">\n          <strong>Do you like cookies?</strong> üç™ We use cookies to ensure you get the best\n          experience on our website.\n          <a href=\"./terms-of-service.html\" target=\"_blank\">Learn more</a>\n        </div>\n        <div class=\"col-auto\">\n          <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"offcanvas\">\n            Essential Cookies Only\n          </button>\n        </div>\n        <div class=\"col-auto\">\n          <button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"offcanvas\">\n            Allow All Cookies\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Badges to Buttons in HTML\nDESCRIPTION: Example of how to implement a badge within a button to create a counter or notification indicator. The badge is positioned using the ms-2 class for margin spacing.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"btn\">\n  Notifications <span class=\"badge bg-red-lt ms-2\">4</span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Visually Hidden Elements in HTML for Accessibility\nDESCRIPTION: This example demonstrates three applications of visually hidden elements: a completely hidden heading for screen readers, a skip link that appears when focused, and a container with focusable content that becomes visible when any child receives focus.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/visually-hidden.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h2 class=\"visually-hidden\">Title for screen readers</h2>\n<a class=\"visually-hidden-focusable\" href=\"#content\">Skip to main content</a>\n<div class=\"visually-hidden-focusable\">A container with a <a href=\"#\">focusable element</a>.</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Cards with Different Sizes in HTML\nDESCRIPTION: HTML snippet demonstrating how to create cards with different padding sizes using the card-sm, card-md, and card-lg modifier classes. These classes control the internal padding of the card component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/cards.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card card-sm\">...</div>\n<div class=\"card\">...</div>\n<div class=\"card card-md\">...</div>\n<div class=\"card card-lg\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Autosize Textarea with HTML\nDESCRIPTION: Basic implementation of an auto-adjusting textarea using the autosize library. Requires the autosize npm package to be installed. The textarea will automatically adjust its height as users type content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/autosize.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<textarea class=\"form-control\" data-bs-toggle=\"autosize\" placeholder=\"Type something‚Ä¶\"></textarea>\n```\n\n----------------------------------------\n\nTITLE: Creating Striped Animated Progress Bar in HTML\nDESCRIPTION: HTML markup for an animated striped progress bar. The 'progress-bar-striped' and 'progress-bar-animated' classes add visual interest and indicate active processes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/progress.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"progress\">\n  <div class=\"progress-bar progress-bar-striped progress-bar-animated\" style=\"width: 60%\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Integrating Breadcrumbs in Page Headers\nDESCRIPTION: Complex example showing how to integrate breadcrumb navigation within a page header, including additional elements like buttons and titles.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/breadcrumb.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-header\">\n  <div class=\"row align-items-center mw-100\">\n    <div class=\"col\">\n      <div class=\"mb-1\">\n        <ol class=\"breadcrumb\">\n          <li class=\"breadcrumb-item\">\n            <a href=\"#\">Home</a>\n          </li>\n          <li class=\"breadcrumb-item\">\n            <a href=\"#\">Library</a>\n          </li>\n          <li class=\"breadcrumb-item active\">\n            <a href=\"#\">Articles</a>\n          </li>\n        </ol>\n      </div>\n      <h2 class=\"page-title\">\n        <span class=\"text-truncate\">Knights of Ni, we are but simple travelers who seek the enchanter who lives beyond these woods.</span>\n      </h2>\n    </div>\n    <div class=\"col-auto\">\n      <div class=\"btn-list\">\n        <a href=\"#\" class=\"btn d-none d-md-inline-flex\">\n          Edit\n        </a>\n        <a href=\"#\" class=\"btn btn-primary\">Publish</a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Colors to Dividers in HTML\nDESCRIPTION: This snippet illustrates how to apply different colors to dividers using HTML and CSS classes. It shows examples of green, red, and primary-colored dividers.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/divider.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias, dolore dolores doloribus est ex.\n</p>\n<div class=\"hr-text text-green\">Green divider</div>\n<p>\n  Dicta error hic illo iure necessitatibus nihil officiis omnis perferendis, praesentium repellendus\n  rerum, saepe sed, sit!\n</p>\n<div class=\"hr-text text-red\">Red divider</div>\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias, dolore dolores doloribus est ex.\n</p>\n<div class=\"hr-text text-primary\">Primary divider</div>\n<p>\n  Dicta error hic illo iure necessitatibus nihil officiis omnis perferendis, praesentium repellendus\n  rerum, saepe sed, sit!\n</p>\n```\n\n----------------------------------------\n\nTITLE: Implementing an Area Chart with ApexCharts in Tabler\nDESCRIPTION: Creation of a smooth area chart with two data series. This implementation features partially transparent area fill, customized tooltips, and a responsive design suitable for displaying time-series data.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/charts.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div id=\"chart-demo-area\" class=\"chart-lg\"></div>\n  </div>\n</div>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.ApexCharts &&\n      new ApexCharts(document.getElementById(\"chart-demo-area\"), {\n        chart: {\n          type: \"area\",\n          fontFamily: \"inherit\",\n          height: 240,\n          parentHeightOffset: 0,\n          toolbar: {\n            show: false,\n          },\n          animations: {\n            enabled: false,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        fill: {\n          opacity: 0.16,\n          type: \"solid\",\n        },\n        stroke: {\n          width: 2,\n          lineCap: \"round\",\n          curve: \"smooth\",\n        },\n        series: [\n          {\n            name: \"series1\",\n            data: [56, 40, 39, 47, 34, 48, 44],\n          },\n          {\n            name: \"series2\",\n            data: [45, 43, 30, 23, 38, 39, 54],\n          },\n        ],\n        tooltip: {\n          theme: \"dark\",\n        },\n        grid: {\n          padding: {\n            top: -20,\n            right: 0,\n            left: -4,\n            bottom: -4,\n          },\n          strokeDashArray: 4,\n        },\n        xaxis: {\n          labels: {\n            padding: 0,\n          },\n          tooltip: {\n            enabled: false,\n          },\n          axisBorder: {\n            show: false,\n          },\n          type: \"datetime\",\n        },\n        yaxis: {\n          labels: {\n            padding: 4,\n          },\n        },\n        labels: [\n          \"2020-06-21\",\n          \"2020-06-22\",\n          \"2020-06-23\",\n          \"2020-06-24\",\n          \"2020-06-25\",\n          \"2020-06-26\",\n          \"2020-06-27\",\n        ],\n        colors: [\"var(--tblr-primary)\", \"var(--tblr-purple)\"],\n        legend: {\n          show: true,\n          position: \"bottom\",\n          offsetY: 12,\n          markers: {\n            width: 10,\n            height: 10,\n            radius: 100,\n          },\n          itemMargin: {\n            horizontal: 8,\n            vertical: 8,\n          },\n        },\n      }).render();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Button Shape Variations\nDESCRIPTION: Shows how to implement square and pill-shaped buttons using specific CSS classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-square\">Square button</a>\n<a href=\"#\" class=\"btn btn-pill\">Pill button</a>\n```\n\n----------------------------------------\n\nTITLE: Button Size Variations\nDESCRIPTION: Shows how to implement different button sizes using btn-lg and btn-sm classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button>\n<button type=\"button\" class=\"btn btn-lg\">Large button</button>\n<button type=\"button\" class=\"btn btn-primary btn-sm\">Small button</button>\n<button type=\"button\" class=\"btn btn-sm\">Small button</button>\n```\n\n----------------------------------------\n\nTITLE: Creating Hover-Triggered Bootstrap Popover in HTML\nDESCRIPTION: Implementation of a Bootstrap popover that triggers on hover rather than click. This uses the data-bs-trigger attribute set to 'hover' to change the default activation method.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/popover.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<button\n  type=\"button\"\n  class=\"btn btn-primary\"\n  data-bs-trigger=\"hover\"\n  data-bs-toggle=\"popover\"\n  title=\"Popover title\"\n  data-bs-content=\"And here's some amazing content. It's very engaging. Right?\"\n>\n  Hover to toggle popover\n</button>\n```\n\n----------------------------------------\n\nTITLE: Vimeo Player Implementation\nDESCRIPTION: Complete implementation for embedding a Vimeo video using the Plyr player, including the container and initialization script.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/inline-player.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"player-vimeo\" data-plyr-provider=\"vimeo\" data-plyr-embed-id=\"515937365\"></div>\n<script src=\"{{ cdnUrl }}/dist/libs/plyr/dist/plyr.min.js\"></script>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.Plyr && new Plyr(\"#player-vimeo\");\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Muted Breadcrumb Navigation\nDESCRIPTION: Example of implementing a muted style breadcrumb navigation using the breadcrumb-muted class. Includes proper ARIA labeling for accessibility.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/breadcrumb.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb breadcrumb-muted\">\n    <li class=\"breadcrumb-item\">\n      <a href=\"#\">Home</a>\n    </li>\n    <li class=\"breadcrumb-item\">\n      <a href=\"#\">Library</a>\n    </li>\n    <li class=\"breadcrumb-item active\">\n      <a href=\"#\">Data</a>\n    </li>\n  </ol>\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Creating Dismissible Alert Close Button in HTML\nDESCRIPTION: Code snippet showing the HTML structure for creating a dismissible close button to be used within alert components. Uses Bootstrap's data-bs-dismiss attribute for functionality.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"close\"></a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Ribbon in HTML with Tabler\nDESCRIPTION: Basic markup for adding a default ribbon element to a card component, featuring a star icon inside the ribbon.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/ribbons.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\"></div>\n  <div class=\"ribbon\">\n    {% include \"ui/icon.html\" icon=\"star\" %}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adding a Form Hint in HTML\nDESCRIPTION: Provides supplementary information below a form input using the 'form-hint' class. This technique helps guide users with additional context about the expected input.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-helpers.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"form-hint\">We'll never share your email with anyone else.</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Social Media Buttons with Icons in HTML\nDESCRIPTION: This snippet shows how to create a button for Facebook using Tabler classes. It includes an icon and text label. Similar structure can be used for other social media platforms.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"#\" class=\"btn btn-facebook\">\n  <svg>...</svg>\n  Facebook\n</a>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Separator Styles for Breadcrumbs\nDESCRIPTION: Implementation of breadcrumb navigation with custom separator styles. Shows how to use the breadcrumb-dots class for different visual separators between items.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/breadcrumb.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<ol class=\"breadcrumb breadcrumb-dots\">\n  ...\n</ol>\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Stacked Progress Bars in HTML\nDESCRIPTION: HTML markup for stacking multiple progress bars using the 'progress-stacked' container. This allows for creating complex visual representations of progress for different categories or metrics.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/progress.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"progress-stacked\">\n  <div class=\"progress\">...</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Disabled Button States Implementation\nDESCRIPTION: Demonstrates how to create disabled button states using the disabled class across different button variations.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-primary disabled\">Primary</a>\n<a href=\"#\" class=\"btn btn-secondary disabled\">Secondary</a>\n<a href=\"#\" class=\"btn btn-success disabled\">Success</a>\n<a href=\"#\" class=\"btn btn-warning disabled\">Warning</a>\n<a href=\"#\" class=\"btn btn-danger disabled\">Danger</a>\n<a href=\"#\" class=\"btn btn-info disabled\">Info</a>\n<a href=\"#\" class=\"btn btn-dark disabled\">Dark</a>\n<a href=\"#\" class=\"btn btn-light disabled\">Light</a>\n```\n\n----------------------------------------\n\nTITLE: Creating Outline Badges with Text Colors in HTML\nDESCRIPTION: Examples of outline badges with colored text. These badges use the badge-outline class with text-color classes to create outlined badges with colored text.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"badge badge-outline text-blue\">blue</span>\n<span class=\"badge badge-outline text-azure\">azure</span>\n<span class=\"badge badge-outline text-indigo\">indigo</span>\n<span class=\"badge badge-outline text-purple\">purple</span>\n<span class=\"badge badge-outline text-pink\">pink</span>\n<span class=\"badge badge-outline text-red\">red</span>\n<span class=\"badge badge-outline text-orange\">orange</span>\n<span class=\"badge badge-outline text-yellow\">yellow</span>\n<span class=\"badge badge-outline text-lime\">lime</span>\n<span class=\"badge badge-outline text-green\">green</span>\n<span class=\"badge badge-outline text-teal\">teal</span>\n<span class=\"badge badge-outline text-cyan\">cyan</span>\n```\n\n----------------------------------------\n\nTITLE: Applying Vertical Alignment Classes to Inline Elements in HTML\nDESCRIPTION: Demonstrates the use of vertical alignment utility classes (.align-baseline, .align-top, .align-middle, .align-bottom, .align-text-top, and .align-text-bottom) with inline span elements to control their alignment relative to surrounding text.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/vertical-align.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"align-baseline\">baseline</span>\n<span class=\"align-top\">top</span>\n<span class=\"align-middle\">middle</span>\n<span class=\"align-bottom\">bottom</span>\n<span class=\"align-text-top\">text-top</span>\n<span class=\"align-text-bottom\">text-bottom</span>\n```\n\n----------------------------------------\n\nTITLE: Creating a Required Field Label in HTML\nDESCRIPTION: Adds a required indicator (red asterisk) to a form label by applying the 'required' CSS class. This visually indicates to users which fields must be completed.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-helpers.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-label required\">Required</label>\n```\n\n----------------------------------------\n\nTITLE: Creating Translucent Toast Components in Tabler\nDESCRIPTION: This code shows a translucent toast that blends over elements it appears on. The toast utilizes the 'backdrop-filter' CSS property for a blurred effect on underlying elements when supported by the browser. It maintains the standard toast structure with header and body.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/toasts.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div\n  class=\"toast show\"\n  role=\"alert\"\n  aria-live=\"assertive\"\n  aria-atomic=\"true\"\n  data-bs-autohide=\"false\"\n  data-bs-toggle=\"toast\"\n>\n  <div class=\"toast-header\">\n    <span\n      class=\"avatar avatar-xs me-2\"\n      style=\"background-image: url(/static/avatars/029m.jpg)\"\n    ></span>\n    <strong class=\"me-auto\">Mallory Hulme</strong>\n    <small>11 mins ago</small>\n    <button\n      type=\"button\"\n      class=\"ms-2 btn-close\"\n      data-bs-dismiss=\"toast\"\n      aria-label=\"Close\"\n    ></button>\n  </div>\n  <div class=\"toast-body\">Hello, world! This is a toast message.</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Progress Bar Size in HTML\nDESCRIPTION: HTML markup for creating a smaller-sized progress bar using the 'progress-sm' class. This allows for creating progress bars of different visual weights based on the design requirements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/progress.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"progress progress-sm\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Input Color Picker in HTML\nDESCRIPTION: This snippet demonstrates how to implement a color picker input in HTML. It uses the 'color' input type and custom CSS classes for styling.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-color-check.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<input\n  type=\"color\"\n  class=\"form-control form-control-color\"\n  value=\"#066fd1\"\n  title=\"Choose your color\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Icon-only Social Media Buttons in HTML\nDESCRIPTION: This example demonstrates how to create a Facebook button with only an icon, using the btn-icon class. This approach is useful for displaying multiple buttons in a limited space.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\"#\" class=\"btn btn-facebook btn-icon\" aria-label=\"Button\">\n  <svg>...</svg>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Icon-Only Tabs in Tabler UI\nDESCRIPTION: Space-efficient tab implementation using only icons without text labels. This example uses Tabler's icon includes to display Home, User, and Settings icons. This approach is useful for interfaces with limited space or for creating a more visual navigation experience.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tabs.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-header\">\n    <ul class=\"nav nav-tabs card-header-tabs\" data-bs-toggle=\"tabs\">\n      <li class=\"nav-item\">\n        <a href=\"#tabs-home-ex3\" class=\"nav-link active\" data-bs-toggle=\"tab\">\n\t\t    {% include \"ui/icon.html\" icon=\"home\" %}\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a href=\"#tabs-profile-ex3\" class=\"nav-link\" data-bs-toggle=\"tab\">\n          {% include \"ui/icon.html\" icon=\"user\" %}\n        </a>\n      </li>\n      <li class=\"nav-item ms-auto\">\n        <a href=\"#tabs-settings-ex3\" class=\"nav-link\" title=\"Settings\" data-bs-toggle=\"tab\">\n          {% include \"ui/icon.html\" icon=\"setings\" %}\n        </a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"tab-content\">\n      <div class=\"tab-pane active show\" id=\"tabs-home-ex3\">\n        <h4>Home tab</h4>\n        <div>\n          Cursus turpis vestibulum, dui in pharetra vulputate id sed non turpis ultricies fringilla\n          at sed facilisis lacus pellentesque purus nibh\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-profile-ex3\">\n        <h4>Profile tab</h4>\n        <div>\n          Fringilla egestas nunc quis tellus diam rhoncus ultricies tristique enim at diam, sem nunc\n          amet, pellentesque id egestas velit sed\n        </div>\n      </div>\n      <div class=\"tab-pane\" id=\"tabs-settings-ex3\">\n        <h4>Settings tab</h4>\n        <div>\n          Donec ac vitae diam amet vel leo egestas consequat rhoncus in luctus amet, facilisi sit\n          mauris accumsan nibh habitant senectus\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Placeholder Avatars in HTML\nDESCRIPTION: Demonstrates how to create placeholder avatars using the 'avatar' component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"avatar placeholder\"></div>\n```\n\n----------------------------------------\n\nTITLE: Creating Responsive Scrollable Table\nDESCRIPTION: Implements a horizontally scrollable table using the table-responsive class. Shows how to handle many columns responsively with basic cell content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tables.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<table class=\"table table-responsive\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th class=\"text-nowrap\">Heading 1</th>\n      <!-- Additional headers omitted for brevity -->\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>Cell</td>\n      <!-- Additional cells omitted for brevity -->\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Adding Dots to Status Indicators in HTML\nDESCRIPTION: This code shows how to add a dot to a status indicator to make it more noticeable. It uses the .status-dot class inside the .status element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/statuses.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"status status-blue\">\n  <span class=\"status-dot\"></span>\n  Blue\n</span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Avatar with Icon in HTML\nDESCRIPTION: Shows how to create an avatar that displays an icon instead of an image or initials. This example uses a template include to add a user icon within the avatar element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/avatars.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"avatar\">\n  {% include \"ui/icon.html\" icon=\"user\" %}\n</span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Empty State in HTML\nDESCRIPTION: This snippet demonstrates how to create a default empty state using HTML. It includes an icon, title, subtitle, and an action button. The empty state is designed to inform users about the current situation and guide them on what to do next.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/empty.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"empty\">\n  <div class=\"empty-icon\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <circle cx=\"12\" cy=\"12\" r=\"9\" />\n      <line x1=\"9\" y1=\"10\" x2=\"9.01\" y2=\"10\" />\n      <line x1=\"15\" y1=\"10\" x2=\"15.01\" y2=\"10\" />\n      <path d=\"M9.5 15.25a3.5 3.5 0 0 1 5 0\" />\n    </svg>\n  </div>\n  <p class=\"empty-title\">No results found</p>\n  <p class=\"empty-subtitle text-secondary\">\n    Try adjusting your search or filter to find what you're looking for.\n  </p>\n  <div class=\"empty-action\">\n    <a href=\"#\" class=\"btn btn-primary\">\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"icon\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        stroke-width=\"2\"\n        stroke=\"currentColor\"\n        fill=\"none\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <circle cx=\"10\" cy=\"10\" r=\"7\" />\n        <line x1=\"21\" y1=\"21\" x2=\"15\" y2=\"15\" />\n      </svg>\n      Search again\n    </a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Simple Page Header with Actions in Tabler\nDESCRIPTION: Basic page header implementation with a pretitle, main title, and action buttons. Includes responsive design elements that show/hide buttons based on screen size.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/layout/page-headers.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"page-header\">\n  <div class=\"row align-items-center\">\n    <div class=\"col\">\n      <div class=\"page-pretitle\">Overview</div>\n      <h2 class=\"page-title\">Dashboard</h2>\n    </div>\n    <div class=\"col-auto ms-auto\">\n      <div class=\"btn-list\">\n        <span class=\"d-none d-sm-inline\">\n          <a href=\"#\" class=\"btn\"> New view </a>\n        </span>\n        <a href=\"#\" class=\"btn btn-primary d-none d-sm-inline-block\" data-bs-toggle=\"modal\" data-bs-target=\"#modal-report\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n          </svg>\n          Create new report\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Positioning Ribbons with Classes in HTML\nDESCRIPTION: Example showing how to position a ribbon in the top-left corner of a card using the ribbon-top and ribbon-start modifier classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/ribbons.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\"></div>\n  <div class=\"ribbon ribbon-top ribbon-start\">\n    {% include \"ui/icon.html\" icon=\"star\" %}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Full-width Segmented Control in HTML\nDESCRIPTION: This snippet shows how to create a full-width segmented control by adding the w-100 class to the nav element. This makes the control span the entire width of its parent container.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/segmented-control.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"nav nav-segmented w-100\" role=\"tablist\">...</nav>\n```\n\n----------------------------------------\n\nTITLE: Implementing Cursor Utilities in HTML\nDESCRIPTION: This snippet demonstrates how to apply various cursor utility classes to HTML elements. Each div element showcases a different cursor style, allowing developers to indicate different types of interactions or element states.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/cursors.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"cursor-auto\">auto</div>\n<div class=\"cursor-pointer\">pointer</div>\n<div class=\"cursor-move\">move</div>\n<div class=\"cursor-not-allowed\">not-allowed</div>\n<div class=\"cursor-zoom-in\">zoom-in</div>\n<div class=\"cursor-zoom-out\">zoom-out</div>\n<div class=\"cursor-default\">default</div>\n<div class=\"cursor-none\">none</div>\n<div class=\"cursor-help\">help</div>\n<div class=\"cursor-progress\">progress</div>\n<div class=\"cursor-wait\">wait</div>\n<div class=\"cursor-text\">text</div>\n<div class=\"cursor-v-text\">vertical-text</div>\n<div class=\"cursor-grab\">grab</div>\n<div class=\"cursor-grabbing\">grabbing</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Numbered Steps Component in HTML\nDESCRIPTION: This snippet shows how to create a steps component with numbered indicators instead of text. It uses the 'steps-counter' class to display numbers for each step.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/steps.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"steps steps-counter\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Alerts with Avatars in Tabler\nDESCRIPTION: Shows how to incorporate avatars within alert components for personalized notifications. Examples include alerts with image avatars and text-based avatar placeholders across different alert types.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-success\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <span\n        class=\"avatar me-3\"\n        style=\"background-image: url(/static/avatars/039m.jpg)\"\n      ></span>\n    </div>\n    <div>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Lorem ipsum dolor sit amet,\n      consectetur adipisicing elit. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    </div>\n  </div>\n</div>\n<div class=\"alert alert-info\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <span class=\"avatar me-3\">JL</span>\n    </div>\n    <div>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Lorem ipsum dolor sit amet,\n      consectetur adipisicing elit. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    </div>\n  </div>\n</div>\n<div class=\"alert alert-warning\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <span\n        class=\"avatar me-3\"\n        style=\"background-image: url(/static/avatars/035f.jpg)\"\n      ></span>\n    </div>\n    <div>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Lorem ipsum dolor sit amet,\n      consectetur adipisicing elit. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    </div>\n  </div>\n</div>\n<div class=\"alert alert-danger\" role=\"alert\">\n  <div class=\"d-flex\">\n    <div>\n      <span\n        class=\"avatar me-3\"\n        style=\"background-image: url(/static/avatars/056f.jpg)\"\n      ></span>\n    </div>\n    <div>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Lorem ipsum dolor sit amet,\n      consectetur adipisicing elit. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Divider Text Position in HTML\nDESCRIPTION: This example shows how to adjust the position of text within dividers using HTML and CSS classes. It demonstrates left-aligned, centered, and right-aligned text in dividers.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/divider.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias, dolore dolores doloribus est ex.\n</p>\n<div class=\"hr-text hr-text-start\">Start divider</div>\n<p>\n  Dicta error hic illo iure necessitatibus nihil officiis omnis perferendis, praesentium repellendus\n  rerum, saepe sed, sit!\n</p>\n<div class=\"hr-text\">Centered divider</div>\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias, dolore dolores doloribus est ex.\n</p>\n<div class=\"hr-text hr-text-end\">End divider</div>\n<p>\n  Dicta error hic illo iure necessitatibus nihil officiis omnis perferendis, praesentium repellendus\n  rerum, saepe sed, sit!\n</p>\n```\n\n----------------------------------------\n\nTITLE: Creating Documentation Navigation Cards Layout in HTML\nDESCRIPTION: A structured layout for navigation cards using Bootstrap grid system. This implementation creates a deck of cards with proper spacing and includes template references for individual documentation section cards.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/index.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mt-6 pt-6\">\n\t<div class=\"row row-deck row-cards\">\n\t\t{% include \"docs/docs-card.html\" title=\"UI Components\" href=\"/ui\" icon=\"paint\" description=\"Free and open source web application UI kit based on Bootstrap\" %}\n\t\t{% include \"docs/docs-card.html\" title=\"Plugins\" href=\"/plugins\" icon=\"plug\" description=\"Free and open source plugins for Tabler UI components\" %}\n\t\t{% include \"docs/docs-card.html\" title=\"Icons\" href=\"/icons\" icon=\"ghost\" description=\"Pixel-perfect icons for web design and development\" %}\n\t\t{% include \"docs/docs-card.html\" title=\"Illustrations\" href=\"/illustrations\" icon=\"brand-figma\" description=\"Customizable SVG illustrations for your web project\" %}\n\t\t{% include \"docs/docs-card.html\" title=\"Email Templates\" href=\"/emails\" icon=\"mail\" description=\"Responsive email templates ready to use in your marketing campaigns\" %}\n\t</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Payment Icons with Different Sizes\nDESCRIPTION: Demonstration of payment icons in various sizes using Bootstrap's size modifiers (xl, lg, md, sm, xs).\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/payments.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"payment payment-xl payment-provider-shopify\"></span>\n<span class=\"payment payment-lg payment-provider-visa\"></span>\n<span class=\"payment payment-md payment-provider-paypal\"></span>\n<span class=\"payment payment-sm payment-provider-amazon\"></span>\n<span class=\"payment payment-xs payment-provider-blik\"></span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Switch Icon in HTML\nDESCRIPTION: This snippet demonstrates the basic implementation of a Switch Icon component. The transition is triggered by adding an '.active' class to the 'switch-icon' component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/switch-icon.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"switch-icon\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    {% include \"ui/icon.html\" icon=\"heart\" %}\n  </span>\n  <span class=\"switch-icon-b text-red\">\n    {% include \"ui/icon.html\" icon=\"heart-filled\" %}\n  </span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Applying Border Direction Utilities in HTML\nDESCRIPTION: Demonstrates how to apply borders to specific sides of elements using Tabler's utility classes. These classes allow for granular control of border placement including all sides, individual sides, or just horizontal/vertical borders.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border\">1</div>\n<div class=\"border-top\">2</div>\n<div class=\"border-end\">3</div>\n<div class=\"border-bottom\">4</div>\n<div class=\"border-start\">5</div>\n<div class=\"border-x\">6</div>\n<div class=\"border-y\">7</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Steps Component Color in HTML\nDESCRIPTION: This snippet demonstrates how to change the color of the steps component. It uses additional CSS classes to modify the default appearance of the progress indicator.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/steps.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"steps steps-green\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Input Help Tooltip in HTML\nDESCRIPTION: Creates a question mark help icon that displays a popover with additional information when hovered. Uses Bootstrap's popover functionality with data attributes to control placement and content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-helpers.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span\n  class=\"form-help\"\n  data-bs-toggle=\"popover\"\n  data-bs-placement=\"top\"\n  data-bs-html=\"true\"\n  data-bs-content=\"<p>...</p>\"\n  >?</span\n>\n```\n\n----------------------------------------\n\nTITLE: Implementing Badges with Headings in HTML\nDESCRIPTION: Examples of badges used with different heading levels (h1-h6). This demonstrates how badges can be incorporated with headings to indicate new or special content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<h1>Example heading <span class=\"badge\">New</span></h1>\n<h2>Example heading <span class=\"badge\">New</span></h2>\n<h3>Example heading <span class=\"badge\">New</span></h3>\n<h4>Example heading <span class=\"badge\">New</span></h4>\n<h5>Example heading <span class=\"badge\">New</span></h5>\n<h6>Example heading <span class=\"badge\">New</span></h6>\n```\n\n----------------------------------------\n\nTITLE: Basic Payment Provider Icons Implementation\nDESCRIPTION: Example showing how to implement basic payment provider icons for Shopify, Visa, and PayPal using the payment class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/payments.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"payment payment-provider-shopify\"></span>\n<span class=\"payment payment-provider-visa\"></span>\n<span class=\"payment payment-provider-paypal\"></span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Divider with Text in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic divider with centered text using HTML. It separates paragraphs of text with a divider that includes the text 'See also'.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/divider.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias, dolore dolores doloribus est ex.\n</p>\n<div class=\"hr-text\">See also</div>\n<p>\n  Dicta error hic illo iure necessitatibus nihil officiis omnis perferendis, praesentium repellendus\n  rerum, saepe sed, sit!\n</p>\n```\n\n----------------------------------------\n\nTITLE: Creating Colored Spinners in HTML\nDESCRIPTION: Implementation of spinners with different color variations using text color utility classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/spinners.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"spinner-border text-blue\" role=\"status\"></div>\n<div class=\"spinner-border text-red\" role=\"status\"></div>\n```\n\n----------------------------------------\n\nTITLE: Custom Dropzone Interface\nDESCRIPTION: Enhanced Dropzone implementation with custom messaging and styling elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropzone.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<form class=\"dropzone\" id=\"dropzone-custom\" action=\".\" autocomplete=\"off\" novalidate>\n  <div class=\"fallback\">\n    <input name=\"file\" type=\"file\" />\n  </div>\n  <div class=\"dz-message\">\n    <h3 class=\"dropzone-msg-title\">Your text here</h3>\n    <span class=\"dropzone-msg-desc\">Your custom description here</span>\n  </div>\n</form>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    new Dropzone(\"#dropzone-custom\");\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating Default Colored Badges in HTML\nDESCRIPTION: Examples of default square badges with light color variants. These badges use background color classes with the -lt suffix to create lighter colored badges.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/badges.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"badge bg-blue-lt\">Blue</span>\n<span class=\"badge bg-azure-lt\">Azure</span>\n<span class=\"badge bg-indigo-lt\">Indigo</span>\n<span class=\"badge bg-purple-lt\">Purple</span>\n<span class=\"badge bg-pink-lt\">Pink</span>\n<span class=\"badge bg-red-lt\">Red</span>\n<span class=\"badge bg-orange-lt\">Orange</span>\n<span class=\"badge bg-yellow-lt\">Yellow</span>\n<span class=\"badge bg-lime-lt\">Lime</span>\n<span class=\"badge bg-green-lt\">Green</span>\n<span class=\"badge bg-teal-lt\">Teal</span>\n<span class=\"badge bg-cyan-lt\">Cyan</span>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dark Mode Illustration in Tabler with SVG\nDESCRIPTION: This code snippet shows a complete SVG illustration with dark mode styling. It uses CSS variables for theming (--tblr-primary, --tblr-illustrations-primary, etc.) and includes properly structured paths with opacity settings for visual effects.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_17\n\nLANGUAGE: HTML\nCODE:\n```\n<div>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 800 600\">\n    <path\n      d=\"M165.042 305.17C165.042 347.031 209.306 377.394 228.857 411.189C249.036 446.056 253.885 499.359 288.752 519.524C322.561 539.075 370.672 517.207 412.534 517.207C454.395 517.207 502.506 539.075 536.301 519.524C571.168 499.359 576.017 446.056 596.196 411.189C615.747 377.394 660.011 347.031 660.011 305.17C660.011 263.309 615.747 232.961 596.196 199.166C576.017 164.298 571.168 110.996 536.301 90.8302C502.506 71.2798 454.38 93.1471 412.534 93.1471C370.687 93.1471 322.561 71.2798 288.752 90.8302C253.885 110.996 249.036 164.298 228.857 199.166C209.306 232.961 165.042 263.323 165.042 305.17Z\"\n      fill=\"black\"\n      opacity=\"0.07\"\n    />\n    <path\n      d=\"M375.492 479.923C470.481 479.923 547.485 476.824 547.485 473.001C547.485 469.178 470.481 466.079 375.492 466.079C280.503 466.079 203.5 469.178 203.5 473.001C203.5 476.824 280.503 479.923 375.492 479.923Z\"\n      fill=\"black\"\n      opacity=\"0.26\"\n    />\n    <path\n      d=\"M511.988 174.667C493.855 167.122 474.216 163.9 454.624 165.256L456.64 177.084L511.988 174.667Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-primary, var(--tblr-illustrations-primary, #0455a4))\"\n    />\n    <path\n      d=\"M518.452 301.638L572.584 329.197L591.949 299.006L602.918 281.844C608.639 272.891 617.062 260.034 627.674 244.159C626.096 241.199 624.176 238.434 621.954 235.921C616.989 230.419 610.739 226.233 603.762 223.736H603.633C599.858 222.306 595.996 221.019 592.192 219.674C585.755 217.369 579.457 214.695 573.328 211.665C568.623 209.377 563.545 206.66 558.154 203.428C555.15 210.807 552.161 218.187 549.187 225.567C543.466 239.868 537.697 254.132 531.881 268.357C527.419 279.465 522.943 290.558 518.452 301.638Z\"\n      fill=\"#DADCE0\"\n    />\n    <path\n      d=\"M573.328 211.665L580.908 225.338L581.866 225.567C589.204 227.065 596.817 226.429 603.805 223.736H603.676C599.9 222.306 596.039 221.019 592.235 219.674C585.784 217.371 579.471 214.697 573.328 211.665Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M627.674 244.216C617.062 260.091 608.696 272.948 602.918 281.901C601.087 284.762 599.757 286.807 594.509 295.016L591.949 299.006L582.738 313.308L572.584 329.14L518.466 301.623C522.929 290.563 527.405 279.494 531.896 268.415L549.186 225.638C549.287 225.409 549.372 225.181 549.473 224.966C551.379 220.132 553.329 215.303 555.322 210.478C556.275 208.152 557.229 205.816 558.182 203.471C561.171 205.287 564.089 206.917 566.878 208.405C569.109 209.606 571.268 210.707 573.356 211.737C579.485 214.732 585.778 217.377 592.206 219.66C596.01 221.004 599.872 222.234 603.647 223.722H603.776C604.649 224.079 605.521 224.423 606.365 224.823C612.359 227.307 617.709 231.121 622.011 235.978C624.21 238.497 626.11 241.261 627.674 244.216Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-primary, var(--tblr-illustrations-primary, #0455a4))\"\n    />\n    <path\n      d=\"M600.816 220.246C592.32 224.537 585.441 224.852 580.507 224.165C580.221 224.165 579.949 224.094 579.678 224.036L572.069 212.595C578.203 212.59 584.3 213.555 590.132 215.455C593.844 216.693 597.423 218.298 600.816 220.246Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M191.729 429.895L559.226 429.895C571.011 429.895 580.564 420.342 580.564 408.557V198.408C580.564 186.623 571.011 177.07 559.226 177.07L191.729 177.07C179.945 177.07 170.391 186.623 170.391 198.408V408.557C170.391 420.342 179.945 429.895 191.729 429.895Z\"\n      fill=\"#232B41\"\n    />\n    <path\n      d=\"M585.584 197.736C585.395 190.871 582.537 184.35 577.619 179.557C572.701 174.764 566.108 172.076 559.241 172.064H191.686C184.702 172.072 178.006 174.849 173.067 179.788C168.128 184.727 165.35 191.423 165.343 198.408V408.643C165.35 415.628 168.128 422.324 173.067 427.262C178.006 432.201 184.702 434.979 191.686 434.987H326.008V443.94C324.578 453.679 318.042 456.425 313.466 457.126H262.537C261.503 457.13 260.512 457.542 259.78 458.274C259.049 459.005 258.637 459.996 258.633 461.03V465.55C258.637 466.584 259.049 467.575 259.78 468.306C260.512 469.038 261.503 469.45 262.537 469.454H488.504C489.017 469.454 489.525 469.353 489.998 469.157C490.472 468.961 490.903 468.673 491.265 468.31C491.628 467.948 491.915 467.517 492.111 467.044C492.308 466.57 492.409 466.062 492.409 465.55V461.03C492.409 460.517 492.308 460.01 492.111 459.536C491.915 459.062 491.628 458.632 491.265 458.269C490.903 457.907 490.472 457.619 489.998 457.423C489.525 457.227 489.017 457.126 488.504 457.126H437.476C432.899 456.425 426.306 453.665 424.933 443.868V434.915H559.241C566.226 434.908 572.924 432.13 577.865 427.192C582.806 422.254 585.587 415.557 585.599 408.572V198.336C585.599 198.179 585.599 197.964 585.584 197.736ZM575.573 408.572C575.569 412.898 573.849 417.047 570.789 420.106C567.73 423.166 563.582 424.886 559.255 424.89H191.701C187.374 424.886 183.226 423.166 180.166 420.106C177.107 417.047 175.386 412.898 175.382 408.572V198.336C175.386 194.01 177.107 189.861 180.166 186.802C183.226 183.742 187.374 182.022 191.701 182.018H559.255C561.484 182.012 563.691 182.469 565.734 183.362C568.656 184.626 571.144 186.717 572.892 189.378C574.641 192.039 575.573 195.153 575.573 198.336V408.572Z\"\n      fill=\"#444B5E\"\n    />\n    <path\n      d=\"M211.108 222.706L443.454 222.706C444.497 222.706 445.342 221.861 445.342 220.819V214.798C445.342 213.755 444.497 212.91 443.454 212.91L211.108 212.91C210.066 212.91 209.22 213.755 209.22 214.798V220.819C209.22 221.861 210.066 222.706 211.108 222.706Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-primary, var(--tblr-illustrations-primary, #0455a4))\"\n    />\n    <path\n      d=\"M211.094 314.981H252.111C253.146 314.981 253.985 314.142 253.985 313.108V307.058C253.985 306.023 253.146 305.184 252.111 305.184H211.094C210.059 305.184 209.22 306.023 209.22 307.058V313.108C209.22 314.142 210.059 314.981 211.094 314.981Z\"\n      fill=\"#DADCE0\"\n    />\n    <path\n      d=\"M211.809 279.856H368.971C370.4 279.856 371.559 278.697 371.559 277.267V250.595C371.559 249.165 370.4 248.006 368.971 248.006L211.809 248.006C210.379 248.006 209.22 249.165 209.22 250.595V277.267C209.22 278.697 210.379 279.856 211.809 279.856Z\"\n      fill=\"#A7AAB3\"\n    />\n    <path\n      d=\"M389.479 335.733L382.271 326.78L363.822 341.611L346.56 320.144L331.586 332.2L348.848 353.667L330.399 368.498L337.593 377.465L356.042 362.62L373.304 384.087L388.292 372.031L371.03 350.564L389.479 335.733Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-primary, var(--tblr-illustrations-primary, #0455a4))\"\n    />\n    <path\n      d=\"M591.934 268.701C593.522 258.689 602.961 233.776 606.393 224.895C605.55 224.494 604.677 224.151 603.805 223.793H603.676C597.784 223.936 594.695 223.45 594.451 222.363C594.266 221.548 595.567 220.418 598.356 218.945C595.969 217.727 593.498 216.68 590.962 215.813C589.216 215.204 587.44 214.684 585.642 214.254L585.413 309.389C587.615 305.957 589.818 302.539 592.006 299.106L594.566 295.116C592.635 286.034 590.919 275.094 591.934 268.701ZM485.401 254.857C484.8 254.942 484.114 259.376 486.288 262.208C486.835 262.909 487.534 263.476 488.333 263.867C487.189 258.861 486.002 254.785 485.401 254.857ZM507.354 307.487C505.774 306.55 504.119 305.747 502.406 305.084C503.966 306.056 505.625 306.862 507.354 307.487ZM469.283 332.115L465.765 355.569L469.583 349.491C469.14 343.71 469.039 337.908 469.283 332.115ZM514.004 331.385C514.763 329.722 515.32 327.975 515.663 326.179C506.08 322.786 496.693 318.861 487.546 314.423C485.44 321.176 482.706 327.717 479.38 333.959L469.583 349.534C469.755 351.293 469.984 353.038 470.298 354.711C472.043 364.122 476.219 370.586 479.408 375.535C485.661 385.147 494.013 393.215 503.836 399.132C530.306 400.116 556.093 390.607 575.588 372.674V364.994L514.004 331.385Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M514.376 314.638C512.764 311.667 510.325 309.227 507.354 307.616C505.625 306.99 503.966 306.185 502.406 305.213L502.148 305.084C502.148 305.084 502.248 305.084 502.406 305.213C504.119 305.875 505.774 306.679 507.354 307.616C507.997 307.787 508.527 307.802 508.784 307.53C510.1 306.243 503.478 300.451 502.005 290.783C501.633 288.251 500.761 282.502 504.05 277.182C508.169 270.517 515.935 269.244 517.422 269.015C511.358 267.019 505.07 265.785 498.701 265.34C494.411 265.039 490.835 265.182 488.318 263.91C489.348 268.372 490.349 273.549 490.864 277.153C492.515 289.684 491.377 302.426 487.532 314.466C496.679 318.904 506.065 322.829 515.649 326.222C516.477 322.324 516.031 318.263 514.376 314.638ZM585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397C565.562 223.564 557.567 213.668 557.567 202.069C557.567 190.47 565.562 180.616 576.789 176.741C579.63 175.787 582.59 175.233 585.584 175.096Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M585.57 222.935L609.483 216.128L613.501 223.278L588.974 239.868C587.815 237.194 586.643 234.505 585.484 231.817C585.556 228.827 585.556 225.967 585.57 222.935Z\"\n      fill=\"#DADCE0\"\n    />\n    <path\n      d=\"M585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397L575.559 226.954V198.351C575.558 195.167 574.626 192.053 572.878 189.392C571.13 186.732 568.641 184.641 565.719 183.377C568.431 180.786 571.61 178.733 575.087 177.327C575.645 177.098 576.217 176.884 576.789 176.683C579.633 175.749 582.593 175.215 585.584 175.096Z\"\n      fill=\"black\"\n      opacity=\"0.15\"\n    />\n    <path\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Flag Element\nDESCRIPTION: Shows how to create a basic flag element by using the 'flag' class with a country-specific class. The example displays the United States flag.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/flags.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"flag flag-country-us\"></span>\n```\n\n----------------------------------------\n\nTITLE: Applying Border Radius for Rounded Corners\nDESCRIPTION: Shows how to create rounded corners on elements using Tabler's border-radius utility classes. Options range from no rounding to different levels of roundness, including fully circular elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border rounded-0\">1</div>\n<div class=\"border rounded\">2</div>\n<div class=\"border rounded-1\">3</div>\n<div class=\"border rounded-2\">4</div>\n<div class=\"border rounded-3\">5</div>\n<div class=\"border rounded-circle\">6</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Growing Spinners in HTML\nDESCRIPTION: Example of growing spinners with different color variations using the spinner-grow class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/spinners.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"spinner-grow text-blue\" role=\"status\"></div>\n<div class=\"spinner-grow text-azure\" role=\"status\"></div>\n```\n\n----------------------------------------\n\nTITLE: Setting Border Opacity with Utility Classes\nDESCRIPTION: Demonstrates how to adjust border opacity using Tabler's border-opacity utility classes. This allows for creating subtle visual effects by controlling the transparency of borders.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border border-success border-opacity-50\">This is 50% opacity success border</div>\n```\n\n----------------------------------------\n\nTITLE: Advanced World Map with Custom Styling\nDESCRIPTION: Enhanced world map implementation with custom styling, transparent background, and responsive behavior.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/vector-maps.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    const map = new jsVectorMap({\n      selector: \"#map-world\",\n      map: \"world\",\n      backgroundColor: \"transparent\",\n      regionStyle: {\n        initial: {\n          fill: \"var(--tblr-body-bg)\",\n          stroke: \"var(--tblr-border-color)\",\n          strokeWidth: 2,\n        },\n      },\n      zoomOnScroll: false,\n      zoomButtons: false,\n    });\n    window.addEventListener(\"resize\", () => {\n      map.updateSize();\n    });\n  });\n```\n\n----------------------------------------\n\nTITLE: Adding Tooltips to Steps Component in HTML\nDESCRIPTION: This snippet shows how to add tooltips to a step item in the steps component. It uses Bootstrap's tooltip functionality and data attributes to provide additional information on hover.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/steps.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a\n  href=\"#\"\n  class=\"step-item\"\n  data-bs-toggle=\"tooltip\"\n  data-bs-placement=\"top\"\n  title=\"Step 1 description\"\n>\n  Step 1\n</a>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Segmented Control in HTML\nDESCRIPTION: This snippet demonstrates how to create a basic segmented control using the nav element with nav-segmented class. It includes button elements with nav-link class for individual segments.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/segmented-control.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"nav nav-segmented\" role=\"tablist\">\n  <button class=\"nav-link\" role=\"tab\" data-bs-toggle=\"tab\" aria-selected=\"true\" aria-current=\"page\">\n    First\n  </button>\n  ...\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Centering Elements Horizontally with Tabler CSS\nDESCRIPTION: Centers a block-level element horizontally within its container by setting left and right margins to auto. This requires the element to have a width specified.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-auto\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Border Colors with Semantic Classes\nDESCRIPTION: Demonstrates how to style border colors using Tabler's color utility classes. These semantic color classes (primary, secondary, success, etc.) help maintain visual consistency across the interface.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border border-primary\">1</div>\n<div class=\"border border-secondary\">2</div>\n<div class=\"border border-success\">3</div>\n<div class=\"border border-warning\">4</div>\n<div class=\"border border-danger\">5</div>\n<div class=\"border border-info\">6</div>\n<div class=\"border border-dark\">7</div>\n<div class=\"border border-light\">8</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Spinner in HTML\nDESCRIPTION: Basic implementation of a loading spinner using the default border spinner class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/spinners.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"spinner-border\"></div>\n```\n\n----------------------------------------\n\nTITLE: Removing Specific Borders with Utility Classes\nDESCRIPTION: Illustrates how to selectively remove borders from specific sides of an element using Tabler's border removal utilities. This enables creating seamless connections between elements or achieving minimalistic designs.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border border-top-0\">1</div>\n<div class=\"border border-end-0\">2</div>\n<div class=\"border border-bottom-0\">3</div>\n<div class=\"border border-start-0\">4</div>\n<div class=\"border border-x-0\">5</div>\n<div class=\"border border-y-0\">6</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Various Switch Icon Animations in HTML\nDESCRIPTION: This snippet showcases different animations for the Switch Icon component, including fade, scale, flip, slide-up, slide-left, slide-down, and slide-right effects.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/switch-icon.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<button class=\"switch-icon\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    {% include \"ui/icon.html\" icon=\"circle\" %}\n  </span>\n  <span class=\"switch-icon-b text-primary\">\n    {% include \"ui/icon.html\" icon=\"circle-filled\" %}\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-fade\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    {% include \"ui/icon.html\" icon=\"heart\" %}\n  </span>\n  <span class=\"switch-icon-b text-red\">\n    {% include \"ui/icon.html\" icon=\"heart-filled\" %}\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-scale\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    {% include \"ui/icon.html\" icon=\"star\" %}\n  </span>\n  <span class=\"switch-icon-b text-yellow\">\n    {% include \"ui/icon.html\" icon=\"star-filled\" %}\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-flip\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    {% include \"ui/icon.html\" icon=\"thumb-up\" %}\n  </span>\n  <span class=\"switch-icon-b text-facebook\">\n    {% include \"ui/icon.html\" icon=\"thumb-up-filled\" %}\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-slide-up\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path\n        d=\"M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z\"\n      />\n    </svg>\n  </span>\n  <span class=\"switch-icon-b text-twitter\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path\n        d=\"M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z\"\n      />\n    </svg>\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-slide-left\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <path d=\"M5 12l5 5l10 -10\" />\n    </svg>\n  </span>\n  <span class=\"switch-icon-b text-red\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\n      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\n    </svg>\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-slide-down\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n      <line x1=\"18\" y1=\"13\" x2=\"12\" y2=\"19\" />\n      <line x1=\"6\" y1=\"13\" x2=\"12\" y2=\"19\" />\n    </svg>\n  </span>\n  <span class=\"switch-icon-b text-secondary\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n      <line x1=\"18\" y1=\"11\" x2=\"12\" y2=\"5\" />\n      <line x1=\"6\" y1=\"11\" x2=\"12\" y2=\"5\" />\n    </svg>\n  </span>\n</button>\n<button class=\"switch-icon switch-icon-slide-right\" data-bs-toggle=\"switch-icon\">\n  <span class=\"switch-icon-a text-secondary\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <circle cx=\"7\" cy=\"17\" r=\"2\" />\n      <circle cx=\"17\" cy=\"17\" r=\"2\" />\n      <path d=\"M5 17h-2v-6l2 -5h9l4 5h1a2 2 0 0 1 2 2v4h-2m-4 0h-6m-6 -6h15m-6 0v-5\" />\n    </svg>\n  </span>\n  <span class=\"switch-icon-b text-secondary\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      class=\"icon\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      stroke-width=\"2\"\n      stroke=\"currentColor\"\n      fill=\"none\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    >\n      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n      <circle cx=\"18\" cy=\"17\" r=\"2\" />\n      <circle cx=\"6\" cy=\"17\" r=\"2\" />\n      <path d=\"M8 17h5a6 6 0 0 1 5 -5v-5a2 2 0 0 0 -2 -2h-1\" />\n    </svg>\n  </span>\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing Default Status Dots in HTML\nDESCRIPTION: This snippet demonstrates how to create basic status dots using Tabler UI classes. It shows the usage of different color classes for various status indicators.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/statuses.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"status status-blue\">Blue</span>\n<span class=\"status status-azure\">Azure</span>\n...\n```\n\n----------------------------------------\n\nTITLE: Changing Tabler's Primary Color\nDESCRIPTION: CSS code to customize Tabler's primary color theme by modifying the --tblr-primary CSS variable. This example sets a custom red color (#F11D46) as the primary color for the entire framework.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/customize.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n\t --tblr-primary: #F11D46;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Adding Dropdown Divider\nDESCRIPTION: Demonstrates how to separate dropdown items using a divider element. Adds visual separation between groups of menu items.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropdowns.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dropdown\">\n  <a href=\"#\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\">Open dropdown</a>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" href=\"#\"> Action </a>\n    <a class=\"dropdown-item\" href=\"#\"> Another action </a>\n    <div class=\"dropdown-divider\"></div>\n    <a class=\"dropdown-item\" href=\"#\">Separated link</a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Countup in HTML\nDESCRIPTION: Basic implementation of the countup component using the data-countup attribute. The animation starts automatically when the element enters the viewport.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup>30000</h1>\n```\n\n----------------------------------------\n\nTITLE: Border Opacity Example with Multiple Levels\nDESCRIPTION: Comprehensive example showing different opacity levels applied to success borders. Demonstrates how the border-opacity utility can be used to create a range of visual effects from subtle to prominent.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border border-success p-2 mb-2\">This is default success border</div>\n<div class=\"border border-success p-2 mb-2 border-opacity-75\">\n  This is 75% opacity success border\n</div>\n<div class=\"border border-success p-2 mb-2 border-opacity-50\">\n  This is 50% opacity success border\n</div>\n<div class=\"border border-success p-2 mb-2 border-opacity-25\">\n  This is 25% opacity success border\n</div>\n<div class=\"border border-success p-2 border-opacity-10\">This is 10% opacity success border</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Validation Feedback Messages in HTML\nDESCRIPTION: Use `.valid-feedback` or `.invalid-feedback` classes to provide additional information about the validation state. This example shows how to add a feedback message for invalid input.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-validation.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" class=\"form-control is-valid\" placeholder=\"Valid State...\" />\n<div class=\"valid-feedback\">Looks good!</div>\n```\n\n----------------------------------------\n\nTITLE: Ghost Button Implementation\nDESCRIPTION: Demonstrates ghost button styles using btn-ghost-* classes for a more subtle button appearance.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-ghost-primary\">Primary</a>\n<a href=\"#\" class=\"btn btn-ghost-secondary\">Secondary</a>\n<a href=\"#\" class=\"btn btn-ghost-success\">Success</a>\n<a href=\"#\" class=\"btn btn-ghost-warning\">Warning</a>\n<a href=\"#\" class=\"btn btn-ghost-danger\">Danger</a>\n<a href=\"#\" class=\"btn btn-ghost-info\">Info</a>\n<a href=\"#\" class=\"btn btn-ghost-dark\">Dark</a>\n<div class=\"p-2 bg-dark\">\n  <a href=\"#\" class=\"btn btn-ghost-light\">Light</a>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Tabler Icons in Svelte with Props\nDESCRIPTION: Shows how to customize Tabler Icons by passing props such as size and stroke. This allows for adjusting the icon appearance without additional CSS.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/svelte.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<IconHeart size={48} stroke={1} />\n```\n\n----------------------------------------\n\nTITLE: Styled Table with Vertical Alignment Classes in HTML\nDESCRIPTION: A practical example of a table with fixed height (100px) that applies vertical alignment classes to demonstrate the visual effect of each alignment option in table cells.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/vertical-align.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<table style=\"height: 100px\">\n  <tbody>\n    <tr>\n      <td class=\"align-baseline\">baseline</td>\n      <td class=\"align-top\">top</td>\n      <td class=\"align-middle\">middle</td>\n      <td class=\"align-bottom\">bottom</td>\n      <td class=\"align-text-top\">text-top</td>\n      <td class=\"align-text-bottom\">text-bottom</td>\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Customizing Thousands Separator in Countup\nDESCRIPTION: Changing the default thousands separator used in the countup display to a custom character or string.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"separator\":\" \"}'>3000000</h1>\n```\n\n----------------------------------------\n\nTITLE: Displaying Cursor Utilities with Background in HTML\nDESCRIPTION: This snippet shows how to apply cursor utility classes along with background and padding classes to create a visual representation of different cursor styles. Each div element has a light background and padding for better visibility.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/cursors.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"cursor-auto bg-light p-3\">auto</div>\n<div class=\"cursor-pointer bg-light p-3\">pointer</div>\n<div class=\"cursor-move bg-light p-3\">move</div>\n<div class=\"cursor-not-allowed bg-light p-3\">not-allowed</div>\n<div class=\"cursor-zoom-in bg-light p-3\">zoom-in</div>\n<div class=\"cursor-zoom-out bg-light p-3\">zoom-out</div>\n<div class=\"cursor-default bg-light p-3\">default</div>\n<div class=\"cursor-none bg-light p-3\">none</div>\n<div class=\"cursor-help bg-light p-3\">help</div>\n<div class=\"cursor-progress bg-light p-3\">progress</div>\n<div class=\"cursor-wait bg-light p-3\">wait</div>\n<div class=\"cursor-text bg-light p-3\">text</div>\n<div class=\"cursor-v-text bg-light p-3\">vertical-text</div>\n<div class=\"cursor-grab bg-light p-3\">grab</div>\n<div class=\"cursor-grabbing bg-light p-3\">grabbing</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Placeholder Lines in HTML\nDESCRIPTION: Demonstrates how to create placeholder lines with different lengths using Bootstrap column classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"placeholder col-9\"></div>\n<div class=\"placeholder col-11\"></div>\n<div class=\"placeholder col-10\"></div>\n<div class=\"placeholder col-8\"></div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Subtle Validation States in HTML\nDESCRIPTION: Use `.is-valid-lite` or `.is-invalid-lite` classes together with validation state classes for a more subtle visual indication using tick and cross symbols without colored frames.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-validation.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input type=\"text\" class=\"form-control is-valid is-valid-lite\" placeholder=\"Valid State...\" />\n```\n\n----------------------------------------\n\nTITLE: Multiple File Upload Input\nDESCRIPTION: HTML input configuration for enabling multiple file uploads in Dropzone.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropzone.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input name=\"...\" type=\"file\" multiple />\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Tabler Icons in Svelte Components\nDESCRIPTION: Demonstrates how to import and use Tabler Icons as Svelte components. The example shows importing the IconHeart component and rendering it within a Svelte template.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/svelte.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script lang=\"ts\">\nimport { IconHeart } from '@tabler/icons-svelte';\n</script>\n\n<main>\n  <IconHeart />\n</main>\n```\n\n----------------------------------------\n\nTITLE: Creating Placeholder Headings in HTML\nDESCRIPTION: Shows how to create a placeholder that resembles a heading with subtext.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"placeholder col-9 mb-3\"></div>\n<div class=\"placeholder placeholder-xs col-10\"></div>\n<div class=\"placeholder placeholder-xs col-11\"></div>\n```\n\n----------------------------------------\n\nTITLE: Disabling Easing in Countup Animation\nDESCRIPTION: Disabling the easing effect to create a linear animation instead of the default speed variation over the animation duration.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"useEasing\": false}'>30000</h1>\n```\n\n----------------------------------------\n\nTITLE: Creating Grid Gaps with Tabler CSS\nDESCRIPTION: Adds consistent spacing between grid items in a grid layout. The gap-6 class creates a gap of 3rem between grid items within a d-grid container.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"d-grid gap-6\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing No-wrap Table with Extended Content\nDESCRIPTION: Demonstrates a table with the table-nowrap class to prevent content wrapping. Includes longer text content while maintaining single-line display in cells.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/tables.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"table-responsive\">\n  <table class=\"table table-vcenter table-nowrap\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Title</th>\n        <th>Email</th>\n        <th>Role</th>\n        <th></th>\n        <th class=\"w-1\"></th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Pawe≈Ç Kuna</td>\n        <td class=\"text-secondary\">UI Designer, Training</td>\n        <td class=\"text-secondary\">\n          <a href=\"#\" class=\"text-reset\">paweluna@howstuffworks.com</a>\n        </td>\n        <td class=\"text-secondary\">User</td>\n        <td>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit...\n        </td>\n        <td>\n          <a href=\"#\">Edit</a>\n        </td>\n      </tr>\n      <!-- Additional rows omitted for brevity -->\n    </tbody>\n  </table>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Outline Button Styles\nDESCRIPTION: Demonstrates outline button styles that remove the background color for a more subtle appearance.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/buttons.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"#\" class=\"btn btn-outline-primary\">Primary</a>\n<a href=\"#\" class=\"btn btn-outline-secondary\">Secondary</a>\n<a href=\"#\" class=\"btn btn-outline-success\">Success</a>\n<a href=\"#\" class=\"btn btn-outline-warning\">Warning</a>\n<a href=\"#\" class=\"btn btn-outline-danger\">Danger</a>\n<a href=\"#\" class=\"btn btn-outline-info\">Info</a>\n<a href=\"#\" class=\"btn btn-outline-dark\">Dark</a>\n<a href=\"#\" class=\"btn btn-outline-light\">Light</a>\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Social Icons via CDN\nDESCRIPTION: Code snippet showing how to include the Tabler social icons CSS file through CDN.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/social-icons.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-socials.min.css\" />\n```\n\n----------------------------------------\n\nTITLE: Customizing Placeholder Colors in HTML\nDESCRIPTION: Demonstrates how to customize placeholder colors using background color utility classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"placeholder col-12 bg-dark\"></span>\n```\n\n----------------------------------------\n\nTITLE: Disabling Number Grouping in Countup\nDESCRIPTION: Turning off the default number grouping that adds separators for thousands, millions, etc. in the displayed number.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"useGrouping\": false}'>30000</h1>\n```\n\n----------------------------------------\n\nTITLE: Applying Pointer Event Controls in HTML\nDESCRIPTION: This snippet shows how to use Tabler's .pe-none and .pe-auto classes to prevent or enable element interactions, specifically for links. It includes examples of a non-clickable link and a clickable link.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/interactions.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n  <a href=\"#\" class=\"pe-none\" tabindex=\"-1\" aria-disabled=\"true\">This link</a> can not be clicked.\n</p>\n<p><a href=\"#\" class=\"pe-auto\">This link</a> can be clicked (this is default behavior).</p>\n```\n\n----------------------------------------\n\nTITLE: Simplified Form Fieldset Example in HTML\nDESCRIPTION: This snippet shows a simplified version of the form fieldset, focusing on the structure and key elements. It demonstrates how to use the fieldset class and include form elements within it.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-fieldset.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<fieldset class=\"form-fieldset\">\n  ...\n  <div class=\"mb-3\">\n    <label class=\"form-label required\">Company</label>\n    <input type=\"text\" class=\"form-control\" autocomplete=\"off\" />\n  </div>\n  ...\n</fieldset>\n```\n\n----------------------------------------\n\nTITLE: SVG with Autodark Mode Styling\nDESCRIPTION: Complete SVG implementation with CSS styles for automatic dark mode switching based on system preferences and theme attributes. Includes styling for different components and color variations.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_23\n\nLANGUAGE: svg\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 800 600\">\n  <style>\n    :where(.theme-dark, [data-bs-theme=\"dark\"]) .tblr-illustrations-boy-girl-a {\n      fill: black;\n      opacity: 0.07;\n    }\n    :where(.theme-dark, [data-bs-theme=\"dark\"]) .tblr-illustrations-boy-girl-b {\n      fill: #1a2030;\n    }\n    :where(.theme-dark, [data-bs-theme=\"dark\"]) .tblr-illustrations-boy-girl-c {\n      fill: #454c5e;\n    }\n    @media (prefers-color-scheme: dark) {\n      .tblr-illustrations-boy-girl-a {\n        fill: black;\n        opacity: 0.07;\n      }\n      .tblr-illustrations-boy-girl-b {\n        fill: #1a2030;\n      }\n      .tblr-illustrations-boy-girl-c {\n        fill: #454c5e;\n      }\n    }\n  </style>\n  <path\n    d=\"M658.744 282.266C658.744 325.973 612.535 357.656 592.114 392.937C571.053 429.346 565.991 484.976 529.581 506.037C494.299 526.458 444.065 503.618 400.367 503.618C356.669 503.618 306.435 526.458 271.153 506.037C234.753 484.976 229.681 429.346 208.62 392.937C188.209 357.656 142 325.953 142 282.266C142 238.579 188.209 206.865 208.62 171.584C229.681 135.185 234.753 79.5143 271.153 58.4839C306.435 38.0736 356.669 60.9031 400.367 60.9031C444.065 60.9031 494.299 38.0736 529.581 58.4839C565.991 79.5448 571.053 135.185 592.114 171.584C612.535 206.865 658.744 238.568 658.744 282.266Z\"\n    fill=\"#F7F8FC\"\n    class=\"tblr-illustrations-boy-girl-a\"\n  />\n  <!-- Additional paths omitted for brevity -->\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Color Check Input in HTML\nDESCRIPTION: This snippet shows how to create a basic color check input using HTML. It uses radio input type and custom CSS classes to create a clickable color swatch.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-color-check.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-colorinput\">\n  <input name=\"...\" type=\"radio\" value=\"...\" class=\"form-colorinput-input\" />\n  <span class=\"form-colorinput-color bg-lime\"></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Loading Tabler Icons (Outline Version) from CDN\nDESCRIPTION: Use the CDN to load outline versions of Tabler icons without local installation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/svg.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://unpkg.com/@tabler/icons@$ICONS_VERSION/icons/outline/home.svg\" />\n```\n\n----------------------------------------\n\nTITLE: Animating Placeholders in HTML\nDESCRIPTION: Demonstrates how to add animations to placeholders using .placeholder-glow or .placeholder-wave classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<p class=\"placeholder-glow\">\n  <span class=\"placeholder col-12\"></span>\n</p>\n<p class=\"placeholder-wave\">\n  <span class=\"placeholder col-12\"></span>\n</p>\n```\n\n----------------------------------------\n\nTITLE: Adding Icon Animations\nDESCRIPTION: Demonstrates how to implement icon animations using icon-pulse, icon-tada, or icon-rotate classes with SVG elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/icons.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n{% include \"ui/icon.html\" icon=\"heart\" %}\n{% include \"ui/icon.html\" icon=\"bell\" %}\n{% include \"ui/icon.html\" icon=\"rotate-clockwise\" %}\n```\n\n----------------------------------------\n\nTITLE: Including Additional Information in Form Label in HTML\nDESCRIPTION: Adds extra information within a form label using the 'form-label-description' class. Useful for displaying character counts, field requirements, or other contextual information next to the label.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-helpers.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-label\">Textarea <span class=\"form-label-description\">56/100</span> </label>\n```\n\n----------------------------------------\n\nTITLE: Implementing Disabled State Dropdown\nDESCRIPTION: Demonstrates how to create disabled dropdown items that are visually distinct and non-interactive.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropdowns.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"dropdown\">\n  <a href=\"#\" class=\"btn dropdown-toggle\" data-bs-toggle=\"dropdown\">Open dropdown</a>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" href=\"#\"> Action </a>\n    <a class=\"dropdown-item\" href=\"#\"> Another action </a>\n    <a class=\"dropdown-item disabled\" href=\"#\">Disabled action</a>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Complete SVG Illustration with Customizable Skin Tones\nDESCRIPTION: This example shows a full SVG illustration implementation with customizable skin tones. The illustration includes paths with the `--tblr-illustrations-skin` variable applied to elements that represent skin in the image.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"--tblr-illustrations-skin: #5a433c\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 800 600\">\n    <path\n      d=\"M165.042 305.17C165.042 347.031 209.306 377.394 228.857 411.189C249.036 446.056 253.885 499.359 288.752 519.524C322.562 539.075 370.673 517.207 412.534 517.207C454.395 517.207 502.506 539.075 536.301 519.524C571.168 499.359 576.017 446.056 596.196 411.189C615.747 377.394 660.011 347.031 660.011 305.17C660.011 263.309 615.747 232.961 596.196 199.166C576.017 164.298 571.168 110.996 536.301 90.8302C502.506 71.2798 454.381 93.1471 412.534 93.1471C370.687 93.1471 322.562 71.2798 288.752 90.8302C253.885 110.996 249.036 164.298 228.857 199.166C209.306 232.961 165.042 263.323 165.042 305.17Z\"\n      fill=\"#F7F8FC\"\n      class=\"tblr-illustrations-computer-fix-a\"\n    />\n    <path\n      d=\"M375.492 479.923C470.481 479.923 547.485 476.824 547.485 473.001C547.485 469.178 470.481 466.079 375.492 466.079C280.503 466.079 203.5 469.178 203.5 473.001C203.5 476.824 280.503 479.923 375.492 479.923Z\"\n      fill=\"#A6A9B3\"\n      class=\"tblr-illustrations-computer-fix-b\"\n    />\n    <path\n      d=\"M511.988 174.667C493.855 167.122 474.216 163.9 454.624 165.256L456.64 177.084L511.988 174.667Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n    />\n    <path\n      d=\"M518.452 301.638L572.584 329.197L591.949 299.006L602.918 281.844C608.639 272.891 617.062 260.034 627.674 244.159C626.096 241.199 624.176 238.434 621.954 235.921C616.989 230.419 610.739 226.233 603.762 223.736H603.633C599.858 222.306 595.996 221.019 592.192 219.674C585.755 217.369 579.457 214.695 573.328 211.665C568.623 209.377 563.545 206.66 558.154 203.428C555.15 210.807 552.161 218.187 549.187 225.567C543.466 239.868 537.697 254.132 531.881 268.357C527.419 279.465 522.943 290.558 518.452 301.638Z\"\n      fill=\"#DADBE0\"\n    />\n    <path\n      d=\"M573.328 211.665L580.908 225.338L581.866 225.567C589.204 227.065 596.817 226.429 603.805 223.736H603.676C599.9 222.306 596.039 221.019 592.235 219.674C585.784 217.371 579.471 214.697 573.328 211.665Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M627.674 244.216C617.062 260.091 608.696 272.948 602.918 281.901C601.087 284.762 599.757 286.807 594.509 295.016L591.949 299.006L582.738 313.308L572.584 329.14L518.466 301.623C522.928 290.563 527.405 279.494 531.896 268.415L549.186 225.638C549.286 225.409 549.372 225.181 549.472 224.966C551.379 220.132 553.329 215.303 555.322 210.478C556.275 208.152 557.229 205.816 558.182 203.471C561.171 205.287 564.089 206.917 566.878 208.405C569.109 209.606 571.268 210.707 573.356 211.737C579.485 214.732 585.778 217.377 592.206 219.66C596.01 221.004 599.872 222.234 603.647 223.722H603.776C604.648 224.079 605.521 224.423 606.365 224.823C612.359 227.307 617.709 231.121 622.011 235.978C624.209 238.497 626.11 241.261 627.674 244.216Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n    />\n    <path\n      d=\"M600.816 220.246C592.321 224.537 585.441 224.852 580.507 224.165C580.221 224.165 579.95 224.094 579.678 224.036L572.069 212.595C578.204 212.59 584.3 213.555 590.132 215.455C593.844 216.693 597.423 218.298 600.816 220.246Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M191.729 429.895L559.226 429.895C571.011 429.895 580.564 420.342 580.564 408.557V198.408C580.564 186.623 571.011 177.07 559.226 177.07L191.729 177.07C179.945 177.07 170.391 186.623 170.391 198.408V408.557C170.391 420.342 179.945 429.895 191.729 429.895Z\"\n      fill=\"white\"\n      class=\"tblr-illustrations-computer-fix-c\"\n    />\n    <path\n      d=\"M585.585 197.736C585.395 190.871 582.538 184.35 577.619 179.557C572.701 174.764 566.108 172.076 559.241 172.064H191.687C184.702 172.072 178.006 174.849 173.067 179.788C168.128 184.727 165.35 191.423 165.343 198.408V408.643C165.35 415.628 168.128 422.324 173.067 427.263C178.006 432.201 184.702 434.979 191.687 434.987H326.008V443.94C324.578 453.679 318.042 456.425 313.466 457.126H262.537C261.503 457.13 260.512 457.542 259.781 458.274C259.049 459.005 258.637 459.996 258.633 461.03V465.55C258.637 466.584 259.049 467.575 259.781 468.306C260.512 469.038 261.503 469.45 262.537 469.454H488.504C489.017 469.454 489.525 469.353 489.999 469.157C490.472 468.961 490.903 468.673 491.265 468.31C491.628 467.948 491.915 467.517 492.112 467.044C492.308 466.57 492.409 466.062 492.409 465.55V461.03C492.409 460.517 492.308 460.01 492.112 459.536C491.915 459.062 491.628 458.632 491.265 458.269C490.903 457.907 490.472 457.619 489.999 457.423C489.525 457.227 489.017 457.126 488.504 457.126H437.476C432.899 456.425 426.306 453.665 424.933 443.868V434.915H559.241C566.226 434.908 572.924 432.13 577.865 427.192C582.806 422.254 585.587 415.557 585.599 408.571V198.336C585.599 198.179 585.599 197.964 585.585 197.736ZM575.573 408.571C575.57 412.898 573.849 417.047 570.79 420.106C567.73 423.166 563.582 424.886 559.255 424.89H191.701C187.374 424.886 183.226 423.166 180.166 420.106C177.107 417.047 175.386 412.898 175.383 408.571V198.336C175.386 194.01 177.107 189.861 180.166 186.802C183.226 183.742 187.374 182.022 191.701 182.018H559.255C561.484 182.012 563.691 182.469 565.734 183.362C568.656 184.626 571.144 186.717 572.892 189.378C574.641 192.039 575.573 195.153 575.573 198.336V408.571Z\"\n      fill=\"#232B41\"\n      class=\"tblr-illustrations-computer-fix-d\"\n    />\n    <path\n      d=\"M211.108 222.706L443.454 222.706C444.497 222.706 445.342 221.861 445.342 220.819V214.798C445.342 213.755 444.497 212.91 443.454 212.91L211.108 212.91C210.066 212.91 209.22 213.755 209.22 214.798V220.819C209.22 221.861 210.066 222.706 211.108 222.706Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n    />\n    <path\n      d=\"M211.094 314.981H252.111C253.146 314.981 253.985 314.142 253.985 313.108V307.058C253.985 306.023 253.146 305.184 252.111 305.184H211.094C210.059 305.184 209.22 306.023 209.22 307.058V313.108C209.22 314.142 210.059 314.981 211.094 314.981Z\"\n      fill=\"#DADBE0\"\n    />\n    <path\n      d=\"M211.809 279.856H368.97C370.4 279.856 371.559 278.697 371.559 277.267V250.595C371.559 249.165 370.4 248.006 368.97 248.006L211.809 248.006C210.379 248.006 209.22 249.165 209.22 250.595V277.267C209.22 278.697 210.379 279.856 211.809 279.856Z\"\n      fill=\"#A7AAB3\"\n    />\n    <path\n      d=\"M389.479 335.733L382.271 326.78L363.822 341.611L346.56 320.144L331.586 332.2L348.848 353.667L330.399 368.498L337.593 377.465L356.042 362.62L373.304 384.087L388.292 372.031L371.03 350.564L389.479 335.733Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n    />\n    <path\n      d=\"M591.934 268.701C593.522 258.689 602.961 233.776 606.393 224.895C605.55 224.494 604.677 224.151 603.805 223.793H603.676C597.784 223.936 594.695 223.45 594.451 222.363C594.266 221.548 595.567 220.418 598.356 218.945C595.969 217.727 593.498 216.68 590.962 215.813C589.216 215.204 587.44 214.684 585.642 214.254L585.413 309.389C587.615 305.957 589.818 302.539 592.006 299.106L594.566 295.116C592.635 286.034 590.919 275.094 591.934 268.701ZM485.401 254.857C484.8 254.942 484.114 259.376 486.288 262.208C486.835 262.909 487.534 263.476 488.333 263.867C487.189 258.861 486.002 254.785 485.401 254.857ZM507.354 307.487C505.774 306.55 504.119 305.747 502.406 305.084C503.966 306.056 505.625 306.862 507.354 307.487ZM469.283 332.115L465.765 355.569L469.583 349.491C469.14 343.71 469.039 337.908 469.283 332.115ZM514.004 331.385C514.763 329.722 515.32 327.975 515.663 326.179C506.08 322.786 496.693 318.861 487.546 314.423C485.44 321.176 482.706 327.717 479.38 333.959L469.583 349.534C469.755 351.293 469.984 353.038 470.298 354.711C472.043 364.122 476.219 370.586 479.408 375.535C485.661 385.147 494.013 393.215 503.836 399.132C530.306 400.116 556.093 390.607 575.588 372.674V364.994L514.004 331.385Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M514.376 314.638C512.764 311.667 510.325 309.227 507.354 307.616C505.625 306.99 503.966 306.185 502.406 305.213L502.148 305.084C502.148 305.084 502.248 305.084 502.406 305.213C504.119 305.875 505.774 306.679 507.354 307.616C507.997 307.787 508.527 307.802 508.784 307.53C510.1 306.243 503.478 300.451 502.005 290.783C501.633 288.251 500.761 282.502 504.05 277.182C508.169 270.517 515.935 269.244 517.422 269.015C511.358 267.019 505.07 265.785 498.701 265.34C494.411 265.039 490.835 265.182 488.318 263.91C489.348 268.372 490.349 273.549 490.864 277.153C492.515 289.684 491.377 302.426 487.532 314.466C496.679 318.904 506.065 322.829 515.649 326.222C516.477 322.324 516.031 318.263 514.376 314.638ZM585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397C565.562 223.564 557.567 213.668 557.567 202.069C557.567 190.47 565.562 180.616 576.789 176.741C579.63 175.787 582.59 175.233 585.584 175.096Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M585.57 222.935L609.483 216.128L613.501 223.278L588.974 239.868C587.816 237.194 586.643 234.505 585.484 231.817C585.556 228.827 585.556 225.967 585.57 222.935Z\"\n      fill=\"#DADBE0\"\n    />\n    <path\n      d=\"M585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397L575.559 226.954V198.351C575.558 195.167 574.626 192.053 572.878 189.392C571.13 186.732 568.641 184.641 565.719 183.377C568.431 180.786 571.61 178.733 575.087 177.327C575.645 177.098 576.217 176.884 576.789 176.683C579.633 175.749 582.593 175.215 585.584 175.096Z\"\n\n```\n\n----------------------------------------\n\nTITLE: Implementing Rounded Color Check Inputs in HTML\nDESCRIPTION: This snippet shows how to create rounded color check inputs using radio input type and custom CSS classes. It includes various color options with circular swatches.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-color-check.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-colorinput\">\n  <input name=\"...\" type=\"radio\" value=\"...\" class=\"form-colorinput-input\" />\n  <span class=\"form-colorinput-color bg-dark rounded-circle\"></span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Including Tabler Icons Webfont via CDN\nDESCRIPTION: HTML code to include the Tabler Icons webfont in your project using a CDN link. Use 'latest' instead of a specific version to always get the newest icons.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<link\n  rel=\"stylesheet\"\n  href=\"https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@$ICONS_VERSION/dist/tabler-icons.min.css\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Aligning Placeholder Lines in HTML\nDESCRIPTION: Demonstrates how to align placeholder lines to the right or center using text alignment classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"text-end\">\n  <div class=\"placeholder col-11\"></div>\n  <div class=\"placeholder col-10\"></div>\n  <div class=\"placeholder col-8\"></div>\n</div>\n<div class=\"text-center mt-3\">\n  <div class=\"placeholder col-11\"></div>\n  <div class=\"placeholder col-10\"></div>\n  <div class=\"placeholder col-8\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Adjusting Line Height in Tabler\nDESCRIPTION: Demonstrates how to control the leading (line height) of text elements in Tabler using specific classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<p class=\"lh-1\">...</p>\n<p class=\"lh-sm\">...</p>\n<p class=\"lh-base\">...</p>\n<p class=\"lh-lg\">...</p>\n```\n\n----------------------------------------\n\nTITLE: Importing IMask Library in JavaScript\nDESCRIPTION: This snippet shows how to import the IMask library in a JavaScript file. It's a prerequisite for using input masks in your application.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-input-mask.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport IMask from 'imask';\n```\n\n----------------------------------------\n\nTITLE: Adjusting Segmented Control Size in HTML\nDESCRIPTION: This snippet shows how to change the size of a segmented control by adding either nav-sm or nav-lg class to the nav element. The nav-sm class makes the control smaller, while nav-lg makes it larger.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/segmented-control.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<nav class=\"nav nav-segmented nav-sm\" role=\"tablist\">...</nav>\n```\n\n----------------------------------------\n\nTITLE: Creating Bookmark-Style Ribbon with Orange Background in HTML\nDESCRIPTION: Implementation of a specialized bookmark-style ribbon using the ribbon-bookmark class and orange background color.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/ribbons.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\"></div>\n  <div class=\"ribbon ribbon-bookmark bg-orange\">\n    {% include \"ui/icon.html\" icon=\"star\" %}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons Filled Version from CDN in HTML\nDESCRIPTION: Code snippet showing how to include a filled version of a Tabler icon using the unpkg CDN. The example uses the 'home' icon PNG.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/png.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://unpkg.com/@tabler/icons-png@$ICONS_VERSION/icons/filled/home.png\" />\n```\n\n----------------------------------------\n\nTITLE: Creating Full-Width Placeholder Lines in HTML\nDESCRIPTION: Shows how to create full-width placeholder lines for more effective content fitting.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"placeholder col-12\"></div>\n<div class=\"placeholder col-12\"></div>\n<div class=\"placeholder col-12\"></div>\n<div class=\"placeholder col-12\"></div>\n```\n\n----------------------------------------\n\nTITLE: Using Keyboard Input Elements in Tabler\nDESCRIPTION: Shows how to use the <kbd> tag to indicate input typically entered via keyboard in Tabler.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\nTo edit settings, press <kbd>ctrl</kbd> + <kbd>,</kbd> or <kbd>ctrl</kbd> + <kbd>C</kbd>.\n```\n\n----------------------------------------\n\nTITLE: Implementing Input Mask for Phone Number in HTML\nDESCRIPTION: This snippet shows how to apply an input mask to a text input field for a phone number. It uses the data-mask attribute to specify the mask pattern.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-input-mask.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<input\n  type=\"text\"\n  name=\"input-mask\"\n  class=\"form-control\"\n  data-mask=\"(00) 0000-0000\"\n  placeholder=\"(00) 0000-0000\"\n  autocomplete=\"off\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating Important Alert with Background Color in Tabler\nDESCRIPTION: This HTML snippet shows how to implement an important alert with a colored background using the alert-important class. The alert includes standard alert content and a dismissible button.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/alerts.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"alert alert-important alert-success alert-dismissible\" role=\"alert\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Color Input Radio Elements with Tabler UI Framework in HTML\nDESCRIPTION: HTML markup for a grid of color input radio buttons using Tabler's form-colorinput component. Each input represents a different color option (blue, azure, indigo, etc.) that users can select to customize the theme.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_15\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"blue\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-blue\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"azure\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-azure\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"indigo\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-indigo\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"purple\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-purple\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"pink\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-pink\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"red\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-red\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"orange\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-orange\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"yellow\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-yellow\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"lime\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-lime\"></span>\n    </label>\n  </div>\n  <div class=\"col-auto\">\n    <label class=\"form-colorinput\">\n      <input name=\"color\" type=\"radio\" value=\"green\" class=\"form-colorinput-input\" />\n      <span class=\"form-colorinput-color bg-green\"></span>\n    </label>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Customizing Tabler Icon Colors\nDESCRIPTION: Shows how to change icon colors using text utility classes. The example wraps the icon in a span element with a specific color class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/icons.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"text-red\">\n  {% include \"ui/icon.html\" icon=\"heart\" %}\n</span>\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons Outline Version from CDN in HTML\nDESCRIPTION: Code snippet showing how to include an outline version of a Tabler icon using the unpkg CDN. The example uses the 'home' icon PNG.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/png.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://unpkg.com/@tabler/icons-png@$ICONS_VERSION/icons/outline/home.png\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Top Margin in HTML with Tabler CSS\nDESCRIPTION: Applies a top margin to an element. The mt-4 class adds a margin of 1.5rem to the top of the element, creating vertical spacing above it.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mt-4\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Adding Start Margin in HTML with Tabler CSS\nDESCRIPTION: Applies a start margin (left margin in LTR layouts) to an element. The ms-4 class adds a margin of 1.5rem to the left side of the element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"ms-4\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Controlling Letter Spacing in Tabler\nDESCRIPTION: Shows how to control the tracking (letter spacing) of text elements in Tabler using specific classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<p class=\"tracking-tight\">Lorem ipsum dolor sit amet. Tight letter spacing.</p>\n<p class=\"tracking-normal\">Lorem ipsum dolor sit amet. Normal letter spacing.</p>\n<p class=\"tracking-wide\">Lorem ipsum dolor sit amet. Wide letter spacing.</p>\n```\n\n----------------------------------------\n\nTITLE: Installing jsVectorMap Library via CDN\nDESCRIPTION: Basic installation of jsVectorMap library and world map data through CDN links.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/vector-maps.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"{{ cdnUrl }}/dist/libs/jsvectormap/dist/js/jsvectormap.min.js\"></script>\n<script src=\"{{ cdnUrl }}/dist/libs/jsvectormap/dist/maps/js/jsvectormap-world.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Creating Native HTML5 Progress Element\nDESCRIPTION: HTML markup for using the native HTML5 progress element with Tabler's styling. This approach provides a simpler way to create progress indicators without the need for nested div elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/progress.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<progress class=\"progress progress-sm\" value=\"15\" max=\"100\" />\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons in SCSS\nDESCRIPTION: Example of referencing a Tabler icon in SCSS using a predefined variable that maps to the icon's unicode value.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_6\n\nLANGUAGE: scss\nCODE:\n```\ncontent: $ti-icon-brand-tabler;\n```\n\n----------------------------------------\n\nTITLE: Creating Paragraphs in Tabler\nDESCRIPTION: Shows how to use the <p> tag to create paragraphs for organizing longer pieces of text in Tabler.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>At vero eos et accusam et justo duo dolores et ea rebum.</p>\n```\n\n----------------------------------------\n\nTITLE: Adding End Margin in HTML with Tabler CSS\nDESCRIPTION: Applies an end margin (right margin in LTR layouts) to an element. The me-4 class adds a margin of 1.5rem to the right side of the element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"me-4\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Social Icons Using Tabler Classes\nDESCRIPTION: Example showing how to create social media icons for Facebook, X (Twitter), and Instagram using Tabler's social classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/social-icons.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"social social-app-facebook\"></span>\n<span class=\"social social-app-x\"></span>\n<span class=\"social social-app-instagram\"></span>\n```\n\n----------------------------------------\n\nTITLE: Basic World Map Implementation\nDESCRIPTION: Simple implementation of a world map using jsVectorMap with minimal configuration.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/vector-maps.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"map-world\" class=\"w-100 h-100\"></div>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    const map = new jsVectorMap({\n      selector: \"#map-world\",\n      map: \"world\",\n    });\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Image Checkbox\nDESCRIPTION: Basic structure for creating an image checkbox using form-imagecheck classes. Includes input element with checkbox type and image container structure.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-image-check.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<label class=\"form-imagecheck\">\n  <input name=\"...\" type=\"checkbox\" value=\"\" class=\"form-imagecheck-input\" checked />\n  <span class=\"form-imagecheck-figure\">\n    <img src=\"...\" alt=\"\" class=\"form-imagecheck-image\" />\n  </span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Headings in Tabler\nDESCRIPTION: Demonstrates the use of HTML heading tags (h1 to h6) to organize content and create a clear structure in Tabler.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h1>H1 Heading</h1>\n<h2>H2 Heading</h2>\n<h3>H3 Heading</h3>\n<h4>H4 Heading</h4>\n<h5>H5 Heading</h5>\n<h6>H6 Heading</h6>\n```\n\n----------------------------------------\n\nTITLE: Building Tabler for Production\nDESCRIPTION: Command to compile Tabler files for production before submitting a pull request, ensuring all changes are properly built.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/how-to-contribute.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Adding Horizontal Rules in Tabler\nDESCRIPTION: Shows how to use the <hr> tag to create a thematic break between paragraphs in Tabler.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<hr />\n```\n\n----------------------------------------\n\nTITLE: Importing Google Fonts in Tabler\nDESCRIPTION: Code to import a custom Google Font (Inter) by adding link tags in the head section of your HTML document. This establishes the connection to Google Fonts and loads the Inter font with various weights.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/customize.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n<link\n  href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap\"\n  rel=\"stylesheet\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Flag Sizes\nDESCRIPTION: Shows how to adjust flag sizes using Bootstrap's sizing classes. Available sizes include extra-large (xl), large (lg), medium (md), small (sm), and extra-small (xs).\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/flags.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"flag flag-xl ...\"></span>\n<span class=\"flag flag-lg ...\"></span>\n<span class=\"flag flag-md ...\"></span>\n<span class=\"flag flag-sm ...\"></span>\n<span class=\"flag flag-xs ...\"></span>\n```\n\n----------------------------------------\n\nTITLE: Setting Starting Value for Countup in HTML\nDESCRIPTION: Configuring a custom starting value for the countup animation instead of the default zero. This can also be used to create a countdown effect.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"startVal\":12345}'>30000</h1>\n```\n\n----------------------------------------\n\nTITLE: Using Semantic Text Elements in Tabler\nDESCRIPTION: Demonstrates various semantic text elements available in Tabler for different content representations.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<abbr title=\"Internationalization\">I18N</abbr>\n<strong>Bold</strong>\n<cite>Citation</cite>\n<code>Hello World!</code>\n<del>Deleted</del>\n<em>Emphasis</em>\n<i>Italic</i>\n<ins>Inserted</ins>\n<kbd>Ctrl + S</kbd>\n<mark>Highlighted</mark>\n<s>Strikethrough</s>\n<samp>Sample</samp>\nText <sub>Subscripted</sub> Text <sup>Superscripted</sup>\n<time>20:00</time>\n<u>Underline</u>\n<var>x</var> = <var>y</var> + 2\n```\n\n----------------------------------------\n\nTITLE: Creating Standalone Status Dots in HTML\nDESCRIPTION: This snippet demonstrates how to create standalone status dots without text. It uses the .status-dot class with color variations.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/statuses.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"status-dot status-blue\"></span>\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Icons Webfont via PNPM\nDESCRIPTION: Command to install the Tabler Icons webfont package using PNPM package manager.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npnpm install @tabler/icons-webfont\n```\n\n----------------------------------------\n\nTITLE: Customizing Ribbon Background Color in HTML\nDESCRIPTION: Implementation of a ribbon with a custom background color (red) applied using the bg-red utility class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/ribbons.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\"></div>\n  <div class=\"ribbon bg-red\">\n    {% include \"ui/icon.html\" icon=\"star\" %}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating Placeholder Images with Different Ratios in HTML\nDESCRIPTION: Shows how to create placeholder images with different aspect ratios using the 'ratio' component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"ratio ratio-1x1 placeholder\">\n  <div class=\"placeholder-image\"></div>\n</div>\n<div class=\"ratio ratio-4x3 placeholder\">\n  <div class=\"placeholder-image\"></div>\n</div>\n<div class=\"ratio ratio-16x9 placeholder\">\n  <div class=\"placeholder-image\"></div>\n</div>\n<div class=\"ratio ratio-21x9 placeholder\">\n  <div class=\"placeholder-image\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiple Country Flags\nDESCRIPTION: Demonstrates how to create flags for multiple countries by using the appropriate country code in the class name. The example shows the implementation for Andorra and United Arab Emirates flags.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/flags.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"flag flag-country-ad\"></span>\n<span class=\"flag flag-country-ae\"></span>\n```\n\n----------------------------------------\n\nTITLE: Configuring Decimal Places in Countup\nDESCRIPTION: Setting the number of decimal places to be displayed in the countup animation. The default is zero decimal places.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"decimalPlaces\":1}'>3.123</h1>\n```\n\n----------------------------------------\n\nTITLE: Displaying Tabler Emails Folder Structure\nDESCRIPTION: This snippet shows the folder structure of the Tabler Emails package, including the main directories and subdirectories for email templates and image assets.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/emails/introduction/contents.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntabler-emails/\n‚îú‚îÄ‚îÄ emails/\n|   ‚îú‚îÄ‚îÄ absence/\n|   |   ‚îú‚îÄ‚îÄ assets/\n|   |   ‚îú‚îÄ‚îÄ compiled.html\n|   |   ‚îú‚îÄ‚îÄ compiled-dark.html\n|   |   ‚îú‚îÄ‚îÄ source.html\n|   |   ‚îú‚îÄ‚îÄ source-dark.html\n|   |   ‚îú‚îÄ‚îÄ screenshot.jpg\n|   |   ‚îú‚îÄ‚îÄ screenshot-dark.jpg\n|   |   ‚îú‚îÄ‚îÄ screenshot-mobile.jpg\n|   |   ‚îî‚îÄ‚îÄ screenshot-mobile-dark.jpg\n|   ‚îú‚îÄ‚îÄ access-token/\n|   ‚îú‚îÄ‚îÄ account-deleted/\n|   ‚îú‚îÄ‚îÄ .../\n|   ‚îú‚îÄ‚îÄ welcome/\n|   ‚îî‚îÄ‚îÄ whishlist/\n‚îú‚îÄ‚îÄ images/\n|   ‚îú‚îÄ‚îÄ chart-donuts/\n|   ‚îú‚îÄ‚îÄ icons/\n|   ‚îú‚îÄ‚îÄ illustrations/\n|   ‚îî‚îÄ‚îÄ overlays/\n‚îú‚îÄ‚îÄ license.txt\n‚îî‚îÄ‚îÄ readme.html\n```\n\n----------------------------------------\n\nTITLE: Changing Skin Color with CSS Variables in HTML\nDESCRIPTION: This snippet demonstrates how to use the CSS variable `--tblr-illustrations-skin` to modify the color of skin tones in illustrations. The variable is applied inline to a div containing an SVG element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"--tblr-illustrations-skin: #5a433c\">\n  <svg>...</svg>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Building a Stacked Bar Chart with ApexCharts in Tabler\nDESCRIPTION: Implementation of a horizontal stacked bar chart with five data series representing different categories across multiple years. Features custom formatting for values, color-coded bars, and a comprehensive legend.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/charts.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div id=\"chart-demo-bar\" class=\"chart-lg\"></div>\n  </div>\n</div>\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    window.ApexCharts &&\n      new ApexCharts(document.getElementById(\"chart-demo-bar\"), {\n        chart: {\n          type: \"bar\",\n          fontFamily: \"inherit\",\n          height: 240,\n          parentHeightOffset: 0,\n          toolbar: {\n            show: false,\n          },\n          animations: {\n            enabled: false,\n          },\n          stacked: true,\n        },\n        plotOptions: {\n          bar: {\n            barHeight: \"50%\",\n            horizontal: true,\n          },\n        },\n        dataLabels: {\n          enabled: false,\n        },\n        fill: {\n          opacity: 1,\n        },\n        series: [\n          {\n            name: \"Container for a Fanta\",\n            data: [44, 55, 41, 37, 22, 43, 21],\n          },\n          {\n            name: \"Strange sunglasses\",\n            data: [53, 32, 33, 52, 13, 43, 32],\n          },\n          {\n            name: \"Pen Pineapple Apple Pen\",\n            data: [12, 17, 11, 9, 15, 11, 20],\n          },\n          {\n            name: \"Binoculars\",\n            data: [9, 7, 5, 8, 6, 9, 4],\n          },\n          {\n            name: \"Magical notebook\",\n            data: [25, 12, 19, 32, 25, 24, 10],\n          },\n        ],\n        tooltip: {\n          theme: \"dark\",\n        },\n        grid: {\n          padding: {\n            top: -20,\n            right: 0,\n            left: -4,\n            bottom: -4,\n          },\n          strokeDashArray: 4,\n        },\n        xaxis: {\n          labels: {\n            padding: 0,\n            formatter: function (val) {\n              return val + \"K\";\n            },\n          },\n          tooltip: {\n            enabled: false,\n          },\n          axisBorder: {\n            show: false,\n          },\n          categories: [\"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\"],\n        },\n        yaxis: {\n          labels: {\n            padding: 4,\n          },\n        },\n        colors: [\n          \"var(--tblr-purple)\",\n          \"var(--tblr-green)\",\n          \"var(--tblr-yellow)\",\n          \"var(--tblr-red)\",\n          \"var(--tblr-primary)\",\n        ],\n        legend: {\n          show: true,\n          position: \"bottom\",\n          offsetY: 12,\n          markers: {\n            width: 10,\n            height: 10,\n            radius: 100,\n          },\n          itemMargin: {\n            horizontal: 8,\n            vertical: 8,\n          },\n        },\n      }).render();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Customizing Tabler Icons with Props in React\nDESCRIPTION: Shows how to customize Tabler icons by passing props for color and size. The example demonstrates setting the arrow icon to red color and increasing its size to 48 pixels.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/react.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n<IconArrowLeft color=\"red\" size={48} />\n```\n\n----------------------------------------\n\nTITLE: Adding Prefix to Countup Display\nDESCRIPTION: Adding a prefix such as currency symbols to the countup number display using the prefix parameter.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"prefix\":\"$\"}'>30000</h1>\n```\n\n----------------------------------------\n\nTITLE: Full SVG Illustration Example with Custom Color\nDESCRIPTION: Complete example showing an SVG illustration implementation with custom primary color set through CSS variable.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"--tblr-illustrations-primary: #cc0000\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 800 600\">\n    <path\n      d=\"M165.042 305.17C165.042 347.031 209.306 377.394 228.857 411.189C249.036 446.056 253.885 499.359 288.752 519.524C322.562 539.075 370.673 517.207 412.534 517.207C454.395 517.207 502.506 539.075 536.301 519.524C571.168 499.359 576.017 446.056 596.196 411.189C615.747 377.394 660.011 347.031 660.011 305.17C660.011 263.309 615.747 232.961 596.196 199.166C576.017 164.298 571.168 110.996 536.301 90.8302C502.506 71.2798 454.381 93.1471 412.534 93.1471C370.687 93.1471 322.562 71.2798 288.752 90.8302C253.885 110.996 249.036 164.298 228.857 199.166C209.306 232.961 165.042 263.323 165.042 305.17Z\"\n      fill=\"#F7F8FC\"\n      class=\"tblr-illustrations-computer-fix-a\"\n    />\n    <!-- Additional paths omitted for brevity -->\n  </svg>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Tabler Icons in SolidJS\nDESCRIPTION: This snippet demonstrates how to import and use a Tabler icon component in a SolidJS application. It shows the basic usage of the IconArrowRight component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/solidjs.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { IconArrowRight } from '@tabler/icons-solidjs';\n\nconst App = () => {\n  return <IconArrowRight />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Including Tabler Icons EPS package documentation tabs\nDESCRIPTION: Liquid template include directive for displaying package installation tabs specific to the @tabler/icons-eps package.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/eps.md#2025-04-22_snippet_0\n\nLANGUAGE: liquid\nCODE:\n```\n{% include \"docs/tabs-package.html\" name=\"@tabler/icons-eps\" %}\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabler Illustration with Custom Brand Colors\nDESCRIPTION: Example showing how to implement a Tabler illustration with custom brand color support using CSS variables. The illustration uses --tblr-primary as a fallback color if --tblr-illustrations-primary is not set, ensuring consistency with the project's design system.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\">\n    <div>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 800 600\">\n        <path\n          d=\"M165.042 305.17C165.042 347.031 209.306 377.394 228.857 411.189C249.036 446.056 253.885 499.359 288.752 519.524C322.562 539.075 370.673 517.207 412.534 517.207C454.395 517.207 502.506 539.075 536.301 519.524C571.168 499.359 576.017 446.056 596.196 411.189C615.747 377.394 660.011 347.031 660.011 305.17C660.011 263.309 615.747 232.961 596.196 199.166C576.017 164.298 571.168 110.996 536.301 90.8302C502.506 71.2798 454.381 93.1471 412.534 93.1471C370.687 93.1471 322.562 71.2798 288.752 90.8302C253.885 110.996 249.036 164.298 228.857 199.166C209.306 232.961 165.042 263.323 165.042 305.17Z\"\n          fill=\"#F7F8FC\"\n          class=\"tblr-illustrations-computer-fix-a\"\n        />\n        <path\n          d=\"M375.492 479.923C470.481 479.923 547.485 476.824 547.485 473.001C547.485 469.178 470.481 466.079 375.492 466.079C280.503 466.079 203.5 469.178 203.5 473.001C203.5 476.824 280.503 479.923 375.492 479.923Z\"\n          fill=\"#A6A9B3\"\n          class=\"tblr-illustrations-computer-fix-b\"\n        />\n        <!-- Additional SVG paths omitted for brevity -->\n      </svg>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Tabler Image with Dark/Light Mode Support in HTML\nDESCRIPTION: A responsive image implementation that displays different images based on light/dark mode. It includes specific width, height, and margin settings for proper display on the documentation page.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/index.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ResponsiveImage src=\"/docs/tabler.png\" src-dark=\"/docs/tabler-dark.png\" alt=\"Tabler\" width=\"816\" height=\"620\" class=\"mb-4\" />\n```\n\n----------------------------------------\n\nTITLE: Customizing Tabler Icons with Props in Vue\nDESCRIPTION: This example shows how to customize Tabler icons by passing props. It demonstrates setting the color, size, and stroke width of an icon component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/vue.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<IconHome color=\"red\" :size=\"48\" stroke-width=\"1\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Text Selection Control in HTML\nDESCRIPTION: This snippet demonstrates how to use Tabler's utility classes to control text selection behavior. It includes examples of making text fully selectable, using default selection behavior, and preventing text selection.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/interactions.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<p class=\"user-select-all\">This paragraph will be entirely selected when clicked by the user.</p>\n<p class=\"user-select-auto\">This paragraph has default select behavior.</p>\n<p class=\"user-select-none\">This paragraph will not be selectable when clicked by the user.</p>\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Icons PDF Package\nDESCRIPTION: Package name reference for installing Tabler Icons in PDF format via package manager.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/pdf.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n@tabler/icons-pdf\n```\n\n----------------------------------------\n\nTITLE: Defining SVG Paths for Tabler Illustration Components\nDESCRIPTION: This snippet contains multiple SVG path definitions that form parts of a larger illustration. It includes paths for various shapes, some with specific fill colors and opacity settings. The paths seem to be parts of a human figure and computer-related elements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_5\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n      d=\"M585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397L575.559 226.954V198.351C575.558 195.167 574.626 192.053 572.878 189.392C571.13 186.732 568.641 184.641 565.719 183.377C568.431 180.786 571.61 178.733 575.087 177.327C575.645 177.098 576.217 176.884 576.789 176.683C579.633 175.749 582.593 175.215 585.584 175.096Z\"\n      fill=\"black\"\n      opacity=\"0.3\"\n    />\n    <path\n      d=\"M610.198 137.454C611.056 141.973 612.186 148.609 613.358 156.818C613.587 158.62 613.816 160.194 613.902 160.737C614.881 169.779 614.722 178.908 613.43 187.91C613.144 189.698 612.843 191.4 612.429 193.073C611.299 197.707 600.287 205.258 587.072 209.706C582.519 211.261 577.817 212.34 573.042 212.924C558.182 214.712 548.414 204.586 548.343 195.762C548.293 193.608 548.896 191.488 550.073 189.684C552.13 186.006 553.496 181.983 554.106 177.813C555.126 172.287 555.748 166.695 555.966 161.08C556.166 157.877 556.151 155.789 556.151 155.789L567.593 140.214L601.845 132.348C602.761 138.197 605.178 141.844 607.066 141.787C608.953 141.73 609.955 138.212 610.198 137.454Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Tabler Icons in React\nDESCRIPTION: Demonstrates how to import a specific icon from the Tabler Icons React package and use it in a React component. The example shows importing the IconArrowLeft component and using it in a simple React application.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/react.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { IconArrowLeft } from '@tabler/icons-react';\n\nconst App = () => {\n  return <IconArrowLeft />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Tabler Icons in Vue Components\nDESCRIPTION: This snippet demonstrates how to import a Tabler icon as a Vue component and use it in a template. It shows the basic structure for incorporating icons into Vue applications.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/vue.md#2025-04-22_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <IconHome />\n</template>\n\n<script>\n  // Returns Vue component\n  import { IconHome } from '@tabler/icons-vue';\n\n  export default {\n    components: {\n      IconHome\n    }\n  };\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Border Size with HTML Classes\nDESCRIPTION: Shows how to control border thickness using Tabler's size utility classes. Options range from no border to standard and wide borders, providing flexibility for different design requirements.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/borders.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"border-0\">1</div>\n<div class=\"border\">2</div>\n<div class=\"border-wide\">3</div>\n```\n\n----------------------------------------\n\nTITLE: Creating SVG Path with Opacity for Shading\nDESCRIPTION: This SVG path defines a shape with black fill color and 0.1 opacity, likely used for shading or shadow effects in the illustration.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_19\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n  d=\"M610.198 137.454C611.041 141.973 612.185 148.609 613.373 156.818C613.587 158.62 613.816 160.208 613.887 160.737C614.877 169.778 614.728 178.907 613.444 187.91C611.07 187.716 608.754 187.071 606.622 186.008C604.293 184.813 602.223 183.171 600.53 181.174C598.789 179.022 597.399 176.608 596.411 174.023C595.671 172.382 595.036 170.696 594.509 168.975C582.401 176.336 568.178 179.433 554.106 177.77C555.126 172.244 555.747 166.652 555.965 161.037C556.166 157.834 556.151 155.731 556.151 155.731L567.593 140.171L601.845 132.348C602.761 138.197 605.178 141.844 607.065 141.773C608.953 141.701 610.026 138.212 610.269 137.482\"\n  fill=\"black\"\n  opacity=\"0.1\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Customizing Tabler Icons in SolidJS\nDESCRIPTION: This example shows how to customize a Tabler icon component by passing additional props. It demonstrates setting the color and size of the IconArrowRight component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/solidjs.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<IconArrowRight color=\"red\" size={48} />\n```\n\n----------------------------------------\n\nTITLE: Customizing Tabler Icons with Props in Preact\nDESCRIPTION: Example showing how to customize Tabler icons by passing props such as color and size. This allows for easy adjustment of the icon appearance.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/preact.md#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<IconArrowDown color=\"red\" size={48} />\n```\n\n----------------------------------------\n\nTITLE: Implementing Customizable SVG Illustration in HTML\nDESCRIPTION: This code snippet demonstrates how to implement a customizable computer illustration using SVG within HTML. It shows the usage of custom CSS classes and color variables that can be modified to match your brand. The SVG includes paths with customizable fill attributes using CSS variables.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 800 600\">\n  <path\n    d=\"M165.042 305.17C165.042 347.031 209.306 377.394 228.857 411.189C249.036 446.056 253.885 499.359 288.752 519.524C322.562 539.075 370.673 517.207 412.534 517.207C454.395 517.207 502.506 539.075 536.301 519.524C571.168 499.359 576.017 446.056 596.196 411.189C615.747 377.394 660.011 347.031 660.011 305.17C660.011 263.309 615.747 232.961 596.196 199.166C576.017 164.298 571.168 110.996 536.301 90.8302C502.506 71.2798 454.381 93.1471 412.534 93.1471C370.687 93.1471 322.562 71.2798 288.752 90.8302C253.885 110.996 249.036 164.298 228.857 199.166C209.306 232.961 165.042 263.323 165.042 305.17Z\"\n    fill=\"#F7F8FC\"\n    class=\"tblr-illustrations-computer-fix-a\"\n  />\n  <path\n    d=\"M375.492 479.923C470.481 479.923 547.485 476.824 547.485 473.001C547.485 469.178 470.481 466.079 375.492 466.079C280.503 466.079 203.5 469.178 203.5 473.001C203.5 476.824 280.503 479.923 375.492 479.923Z\"\n    fill=\"#A6A9B3\"\n    class=\"tblr-illustrations-computer-fix-b\"\n  />\n  <path\n    d=\"M511.988 174.667C493.855 167.122 474.216 163.9 454.624 165.256L456.64 177.084L511.988 174.667Z\"\n    fill=\"#0455A4\"\n    style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n  />\n  <path\n    d=\"M518.452 301.638L572.584 329.197L591.949 299.006L602.918 281.844C608.639 272.891 617.062 260.034 627.674 244.159C626.096 241.199 624.176 238.434 621.954 235.921C616.989 230.419 610.739 226.233 603.762 223.736H603.633C599.858 222.306 595.996 221.019 592.192 219.674C585.755 217.369 579.457 214.695 573.328 211.665C568.623 209.377 563.545 206.66 558.154 203.428C555.15 210.807 552.161 218.187 549.187 225.567C543.466 239.868 537.697 254.132 531.881 268.357C527.419 279.465 522.943 290.558 518.452 301.638Z\"\n    fill=\"#DADBE0\"\n  />\n  <path\n    d=\"M573.328 211.665L580.908 225.338L581.866 225.567C589.204 227.065 596.817 226.429 603.805 223.736H603.676C599.9 222.306 596.039 221.019 592.235 219.674C585.784 217.371 579.471 214.697 573.328 211.665Z\"\n    fill=\"#FFCB9D\"\n    style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n  />\n  <path\n    d=\"M627.674 244.216C617.062 260.091 608.696 272.948 602.918 281.901C601.087 284.762 599.757 286.807 594.509 295.016L591.949 299.006L582.738 313.308L572.584 329.14L518.466 301.623C522.928 290.563 527.405 279.494 531.896 268.415L549.186 225.638C549.286 225.409 549.372 225.181 549.472 224.966C551.379 220.132 553.329 215.303 555.322 210.478C556.275 208.152 557.229 205.816 558.182 203.471C561.171 205.287 564.089 206.917 566.878 208.405C569.109 209.606 571.268 210.707 573.356 211.737C579.485 214.732 585.778 217.377 592.206 219.66C596.01 221.004 599.872 222.234 603.647 223.722H603.776C604.648 224.079 605.521 224.423 606.365 224.823C612.359 227.307 617.709 231.121 622.011 235.978C624.209 238.497 626.11 241.261 627.674 244.216Z\"\n    fill=\"#0455A4\"\n    style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n  />\n  <path\n    d=\"M600.816 220.246C592.321 224.537 585.441 224.852 580.507 224.165C580.221 224.165 579.95 224.094 579.678 224.036L572.069 212.595C578.204 212.59 584.3 213.555 590.132 215.455C593.844 216.693 597.423 218.298 600.816 220.246Z\"\n    fill=\"#FFCB9D\"\n    style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n  />\n  <path\n    d=\"M191.729 429.895L559.226 429.895C571.011 429.895 580.564 420.342 580.564 408.557V198.408C580.564 186.623 571.011 177.07 559.226 177.07L191.729 177.07C179.945 177.07 170.391 186.623 170.391 198.408V408.557C170.391 420.342 179.945 429.895 191.729 429.895Z\"\n    fill=\"white\"\n    class=\"tblr-illustrations-computer-fix-c\"\n  />\n  <path\n    d=\"M585.585 197.736C585.395 190.871 582.538 184.35 577.619 179.557C572.701 174.764 566.108 172.076 559.241 172.064H191.687C184.702 172.072 178.006 174.849 173.067 179.788C168.128 184.727 165.35 191.423 165.343 198.408V408.643C165.35 415.628 168.128 422.324 173.067 427.263C178.006 432.201 184.702 434.979 191.687 434.987H326.008V443.94C324.578 453.679 318.042 456.425 313.466 457.126H262.537C261.503 457.13 260.512 457.542 259.781 458.274C259.049 459.005 258.637 459.996 258.633 461.03V465.55C258.637 466.584 259.049 467.575 259.781 468.306C260.512 469.038 261.503 469.45 262.537 469.454H488.504C489.017 469.454 489.525 469.353 489.999 469.157C490.472 468.961 490.903 468.673 491.265 468.31C491.628 467.948 491.915 467.517 492.112 467.044C492.308 466.57 492.409 466.062 492.409 465.55V461.03C492.409 460.517 492.308 460.01 492.112 459.536C491.915 459.062 491.628 458.632 491.265 458.269C490.903 457.907 490.472 457.619 489.999 457.423C489.525 457.227 489.017 457.126 488.504 457.126H437.476C432.899 456.425 426.306 453.665 424.933 443.868V434.915H559.241C566.226 434.908 572.924 432.13 577.865 427.192C582.806 422.254 585.587 415.557 585.599 408.571V198.336C585.599 198.179 585.599 197.964 585.585 197.736ZM575.573 408.571C575.57 412.898 573.849 417.047 570.79 420.106C567.73 423.166 563.582 424.886 559.255 424.89H191.701C187.374 424.886 183.226 423.166 180.166 420.106C177.107 417.047 175.386 412.898 175.383 408.571V198.336C175.386 194.01 177.107 189.861 180.166 186.802C183.226 183.742 187.374 182.022 191.701 182.018H559.255C561.484 182.012 563.691 182.469 565.734 183.362C568.656 184.626 571.144 186.717 572.892 189.378C574.641 192.039 575.573 195.153 575.573 198.336V408.571Z\"\n    fill=\"#232B41\"\n    class=\"tblr-illustrations-computer-fix-d\"\n  />\n  <path\n    d=\"M211.108 222.706L443.454 222.706C444.497 222.706 445.342 221.861 445.342 220.819V214.798C445.342 213.755 444.497 212.91 443.454 212.91L211.108 212.91C210.066 212.91 209.22 213.755 209.22 214.798V220.819C209.22 221.861 210.066 222.706 211.108 222.706Z\"\n    fill=\"#0455A4\"\n    style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n  />\n  <path\n    d=\"M211.094 314.981H252.111C253.146 314.981 253.985 314.142 253.985 313.108V307.058C253.985 306.023 253.146 305.184 252.111 305.184H211.094C210.059 305.184 209.22 306.023 209.22 307.058V313.108C209.22 314.142 210.059 314.981 211.094 314.981Z\"\n    fill=\"#DADBE0\"\n  />\n  <path\n    d=\"M211.809 279.856H368.97C370.4 279.856 371.559 278.697 371.559 277.267V250.595C371.559 249.165 370.4 248.006 368.97 248.006L211.809 248.006C210.379 248.006 209.22 249.165 209.22 250.595V277.267C209.22 278.697 210.379 279.856 211.809 279.856Z\"\n    fill=\"#A7AAB3\"\n  />\n  <path\n    d=\"M389.479 335.733L382.271 326.78L363.822 341.611L346.56 320.144L331.586 332.2L348.848 353.667L330.399 368.498L337.593 377.465L356.042 362.62L373.304 384.087L388.292 372.031L371.03 350.564L389.479 335.733Z\"\n    fill=\"#0455A4\"\n    style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n  />\n  <path\n    d=\"M591.934 268.701C593.522 258.689 602.961 233.776 606.393 224.895C605.55 224.494 604.677 224.151 603.805 223.793H603.676C597.784 223.936 594.695 223.45 594.451 222.363C594.266 221.548 595.567 220.418 598.356 218.945C595.969 217.727 593.498 216.68 590.962 215.813C589.216 215.204 587.44 214.684 585.642 214.254L585.413 309.389C587.615 305.957 589.818 302.539 592.006 299.106L594.566 295.116C592.635 286.034 590.919 275.094 591.934 268.701ZM485.401 254.857C484.8 254.942 484.114 259.376 486.288 262.208C486.835 262.909 487.534 263.476 488.333 263.867C487.189 258.861 486.002 254.785 485.401 254.857ZM507.354 307.487C505.774 306.55 504.119 305.747 502.406 305.084C503.966 306.056 505.625 306.862 507.354 307.487ZM469.283 332.115L465.765 355.569L469.583 349.491C469.14 343.71 469.039 337.908 469.283 332.115ZM514.004 331.385C514.763 329.722 515.32 327.975 515.663 326.179C506.08 322.786 496.693 318.861 487.546 314.423C485.44 321.176 482.706 327.717 479.38 333.959L469.583 349.534C469.755 351.293 469.984 353.038 470.298 354.711C472.043 364.122 476.219 370.586 479.408 375.535C485.661 385.147 494.013 393.215 503.836 399.132C530.306 400.116 556.093 390.607 575.588 372.674V364.994L514.004 331.385Z\"\n    fill=\"black\"\n    opacity=\"0.1\"\n  />\n  <path\n    d=\"M514.376 314.638C512.764 311.667 510.325 309.227 507.354 307.616C505.625 306.99 503.966 306.185 502.406 305.213L502.148 305.084C502.148 305.084 502.248 305.084 502.406 305.213C504.119 305.875 505.774 306.679 507.354 307.616C507.997 307.787 508.527 307.802 508.784 307.53C510.1 306.243 503.478 300.451 502.005 290.783C501.633 288.251 500.761 282.502 504.05 277.182C508.169 270.517 515.935 269.244 517.422 269.015C511.358 267.019 505.07 265.785 498.701 265.34C494.411 265.039 490.835 265.182 488.318 263.91C489.348 268.372 490.349 273.549 490.864 277.153C492.515 289.684 491.377 302.426 487.532 314.466C496.679 318.904 506.065 322.829 515.649 326.222C516.477 322.324 516.031 318.263 514.376 314.638ZM585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397C565.562 223.564 557.567 213.668 557.567 202.069C557.567 190.47 565.562 180.616 576.789 176.741C579.63 175.787 582.59 175.233 585.584 175.096Z\"\n    fill=\"black\"\n    opacity=\"0.1\"\n  />\n  <path\n    d=\"M585.57 222.935L609.483 216.128L613.501 223.278L588.974 239.868C587.816 237.194 586.643 234.505 585.484 231.817C585.556 228.827 585.556 225.967 585.57 222.935Z\"\n    fill=\"#DADBE0\"\n  />\n  <path\n    d=\"M585.584 175.096V229.042C582.59 228.905 579.63 228.351 576.789 227.397L575.559 226.954V198.351C575.558 195.167 574.626 192.053 572.878 189.392C571.13 186.732 568.641 184.641 565.719 183.377C568.431 180.786 571.61 178.733 575.087 177.327C575.645 177.098 576.217 176.884 576.789 176.683C579.633 175.749 582.593 175.215 585.584 175.096Z\"\n    fill=\"black\"\n    opacity=\"0.3\"\n  />\n  <path\n```\n\n----------------------------------------\n\nTITLE: Setting Global Illustration Color via CSS\nDESCRIPTION: Example showing how to set the illustration color globally by defining the --tblr-illustrations-primary CSS variable on the body element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\nbody {\n--tblr-illustrations-primary: #CC0000;\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Placeholder Sizes in HTML\nDESCRIPTION: Shows how to customize placeholder sizes using modifier classes like .placeholder-lg, .placeholder-sm, or .placeholder-xs.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/placeholder.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"placeholder col-12 placeholder-lg\"></span>\n<span class=\"placeholder col-12\"></span>\n<span class=\"placeholder col-12 placeholder-sm\"></span>\n<span class=\"placeholder col-12 placeholder-xs\"></span>\n```\n\n----------------------------------------\n\nTITLE: Theme Toggle Radio Button Implementation\nDESCRIPTION: HTML form controls for toggling between light and dark themes. The radio input allows users to select the light theme, affecting the appearance of the SVG illustration through the CSS variables.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_26\n\nLANGUAGE: HTML\nCODE:\n```\n<div>\n  <div class=\"text-center\">\n    <label class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"theme\" value=\"light\" checked />\n      <span class=\"form-check-label\">Light</span>\n    </label>\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Tabler Icons in Preact\nDESCRIPTION: Basic example of importing and using a Tabler icon component in a Preact application. The example shows how to import an icon and render it in a component.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/preact.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { IconArrowDown } from '@tabler/icons-preact';\n\nconst App = () => {\n  return <IconArrowDown />;\n};\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Icons Webfont via NPM\nDESCRIPTION: Command to install the Tabler Icons webfont package using NPM package manager.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @tabler/icons-webfont\n```\n\n----------------------------------------\n\nTITLE: Including IMask Library via CDN in HTML\nDESCRIPTION: This code demonstrates how to include the IMask library in an HTML file using a CDN link. This method is an alternative to npm installation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/forms/form-input-mask.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/imask\"></script>\n```\n\n----------------------------------------\n\nTITLE: Primary Button Implementation in HTML\nDESCRIPTION: HTML code for a primary action button with full width (w-100) styling. Uses the btn and btn-primary classes for styling.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"mt-4\">\n  <button class=\"btn btn-primary w-100\">Primary Button</button>\n</div>\n```\n\n----------------------------------------\n\nTITLE: SVG Path Elements for Human Figure Illustration in Tabler UI\nDESCRIPTION: A collection of SVG path elements that define a stylized human figure illustration. Each path element contains specific coordinates, fill colors, and opacity settings to create different parts of the character's appearance.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_24\n\nLANGUAGE: HTML\nCODE:\n```\n<path\n    d=\"M367.199 344.272C330.201 344.935 293.193 345.649 256.176 346.413C256.233 343.868 256.27 341.238 256.336 338.673V338.542C315.929 341.501 350.957 319.557 361.224 311.244C363.197 322.244 365.264 333.253 367.199 344.272Z\"\n    fill=\"black\"\n    opacity=\"0.1\"\n  />\n  <path\n    d=\"M280.017 380.052C274.531 389.041 263.503 391.437 255.35 384.965C250.399 380.597 225.45 357.564 220.594 316.006C218.13 294.148 221.708 272.032 230.936 252.064C231.509 250.843 232.007 249.829 232.429 249.002L249.723 259.119C249.103 260.124 248.173 261.674 247.13 263.637C243.063 271.34 237.267 285.609 240.743 300.272C242.621 308.276 246.266 313.912 253.706 324.695C259.993 333.807 267.133 342.299 275.029 350.058C283.671 356.662 285.804 370.564 280.017 380.052Z\"\n    fill=\"#FFCB9D\"\n    style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n  />\n```\n\n----------------------------------------\n\nTITLE: Styling Tabler Icons with CSS\nDESCRIPTION: Change the size, color, and stroke-width of Tabler icons using CSS styles.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/svg.md#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.icon-tabler {\ncolor: red;\nwidth: 32px;\nheight: 32px;\nstroke-width: 1.25;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Icons Webfont via Yarn\nDESCRIPTION: Command to install the Tabler Icons webfont package using Yarn package manager.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nyarn add @tabler/icons-webfont\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Font in Tabler\nDESCRIPTION: CSS code to configure Tabler to use the imported Google Font by setting the font-sans-serif CSS variable. This custom property overrides Tabler's default font with the Inter font family.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/customize.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    --tblr-font-sans-serif: \"Inter\";\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Adding Green Background to Ribbon Element in HTML\nDESCRIPTION: Example showing a ribbon with a green background color applied using the bg-green utility class.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/ribbons.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"card\">\n  <div class=\"card-body\"></div>\n  <div class=\"ribbon bg-green\">\n    {% include \"ui/icon.html\" icon=\"star\" %}\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Radio Button Theme Selection in HTML\nDESCRIPTION: HTML markup for a radio button that allows users to select the 'Dark' theme option. This is part of a form check component using Bootstrap classes.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_27\n\nLANGUAGE: HTML\nCODE:\n```\n<label class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"theme\" value=\"dark\" />\n  <span class=\"form-check-label\">Dark</span>\n</label>\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons in CSS\nDESCRIPTION: Example of referencing a Tabler icon in CSS using its unicode value as content for a pseudo-element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_5\n\nLANGUAGE: css\nCODE:\n```\ncontent: 'ec8f';\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons in HTML\nDESCRIPTION: Example of how to use a Tabler icon in HTML markup by applying the appropriate CSS class to an <i> element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/libraries/webfont.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<i class=\"ti ti-brand-tabler\"></i>\n```\n\n----------------------------------------\n\nTITLE: Setting Illustration Color via HTML Style Attribute\nDESCRIPTION: Example showing how to set the illustration color directly on a div container using an inline style attribute with the --tblr-illustrations-primary CSS variable.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"--tblr-illustrations-primary: #cc0000\">\n  <svg>...</svg>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Checkbox Form Element Implementation\nDESCRIPTION: HTML implementation of a checked checkbox input with associated label. Uses form-check classes for styling the checkbox container and label.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"mt-4\">\n  <label class=\"form-check\">\n    <input class=\"form-check-input\" type=\"checkbox\" checked />\n    <span class=\"form-check-label\">Checked checkbox input</span>\n  </label>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Text Transformations in Tabler\nDESCRIPTION: Demonstrates the use of text capitalization classes for transforming text content in Tabler.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/typography.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<p class=\"text-lowercase\">Lowercased text.</p>\n<p class=\"text-uppercase\">Uppercased text.</p>\n<p class=\"text-capitalize\">Capitalized text.</p>\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Structure for Dark Theme\nDESCRIPTION: Shows the basic HTML structure needed to enable dark theme using the data-bs-theme attribute.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_22\n\nLANGUAGE: html\nCODE:\n```\n<html data-bs-theme=\"dark\">\n  <body>\n    <svg>...</svg>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing project dependencies with pnpm\nDESCRIPTION: Command to install all dependencies for local Tabler development using pnpm package manager.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabler Icons as Inline HTML\nDESCRIPTION: Paste the content of the icon file directly into your HTML code to display it on the page.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/svg.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"\">\n  {% include \"ui/icon.html\" icon=\"disabled\" %}\n  Click me\n</a>\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Theme Color Switching with JavaScript\nDESCRIPTION: JavaScript that adds event listeners to all color input radio buttons. When a color is selected, it updates the primary theme color CSS variable on the document root element, applying the selected color throughout the UI.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script>\n  document.querySelectorAll(\".form-colorinput-input\").forEach((input) => {\n    input.addEventListener(\"change\", (event) => {\n      document.documentElement.style.setProperty(\n        \"--tblr-primary\",\n        `var(--tblr-${event.target.value})`,\n      );\n    });\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Grid Gap Example with Tabler CSS\nDESCRIPTION: Demonstrates a grid layout with gap-6 spacing between items. This example shows three grid items with consistent 3rem spacing in a grid container with indigo background styling.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"d-grid gap-6 bg-indigo-lt\">\n  <div class=\"px-3 py-2 bg-indigo text-white rounded\">Grid item 1</div>\n  <div class=\"px-3 py-2 bg-indigo text-white rounded\">Grid item 2</div>\n  <div class=\"px-3 py-2 bg-indigo text-white rounded\">Grid item 3</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating SVG Path for Primary Color Element\nDESCRIPTION: This SVG path defines a shape with the primary color (#0455A4) of the illustration, potentially representing a main feature or background element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_21\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n  d=\"M640.36 287.951C638.93 310.59 624.628 332.93 601.002 350.178C579.177 366.095 549.387 377.694 514.39 381.184C508.167 370.155 502.23 358.967 496.585 347.632C494.726 343.928 492.909 340.181 491.079 336.362C483.928 321.46 477.664 307.044 472.129 293.271C487.689 298.377 551.975 318.442 589.932 302.152C596.811 299.206 610.541 293.4 612.486 282.13C613.048 278.08 612.317 273.956 610.398 270.345C608.798 267.347 607.829 264.053 607.55 260.666C607.271 257.279 607.688 253.871 608.776 250.652C609.864 247.432 611.599 244.469 613.875 241.946C616.152 239.422 618.92 237.392 622.011 235.978C640.46 260.177 640.86 279.87 640.36 287.951Z\"\n  fill=\"#0455A4\"\n  style=\"fill: #0455a4; fill: var(--tblr-primary, var(--tblr-illustrations-primary, #0455a4))\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Running Tabler development environment in Docker\nDESCRIPTION: Command to run the Tabler Docker container with volume mounting for source files and port forwarding for development servers.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -p 3000:3000 -p 3001:3001 -v $(pwd)/src:/app/src tabler\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons as HTML Images\nDESCRIPTION: Load Tabler icons as an HTML image element, allowing you to modify its size using CSS.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/svg.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"path/to/icon.svg\" alt=\"icon title\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Tabler Icons (Filled Version) from CDN\nDESCRIPTION: Use the CDN to load filled versions of Tabler icons without local installation.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/svg.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"https://unpkg.com/@tabler/icons@$ICONS_VERSION/icons/filled/home.svg\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Bottom Margin in HTML with Tabler CSS\nDESCRIPTION: Applies a bottom margin to an element. The mb-4 class adds a margin of 1.5rem to the bottom of the element, creating vertical spacing below it.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mb-4\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Defining SVG Path for Clothing or Hair\nDESCRIPTION: This SVG path creates a shape with a dark color (#444B5E), possibly representing clothing or hair in the illustration.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_20\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n  d=\"M616.147 143.804C617.621 150.946 616.333 158.382 612.543 164.613C611.699 165.705 610.934 166.857 610.255 168.059C608.586 171.497 607.8 175.297 607.967 179.115C605.963 177.555 604.47 175.434 603.676 173.022C602.575 169.318 602.618 161.996 602.475 161.009V160.408C602.475 160.079 602.389 159.636 602.275 158.778C601.977 156.941 601.562 155.126 601.03 153.343C601.023 153.249 600.988 153.16 600.93 153.086C593.479 160.322 571.769 178.829 552.304 169.962C549.27 168.595 546.452 166.793 543.938 164.613C543.696 164.444 543.479 164.242 543.294 164.012C542.682 163.466 542.104 162.884 541.564 162.267L541.406 162.11C540.013 160.506 538.892 158.685 538.088 156.718L537.488 155.889C537.211 155.006 537.005 154.102 536.873 153.186C536.555 149.566 537.5 145.948 539.547 142.946C543.251 137.068 549.701 132.62 553.105 130.303C566.291 121.136 588.001 114.728 603.505 124.983C607.42 127.703 610.643 131.303 612.915 135.494C614.324 138.117 615.359 140.923 615.99 143.832\"\n  fill=\"#444B5E\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining SVG Path for Skin-Colored Shape\nDESCRIPTION: This SVG path defines a shape with a skin-like color (#FFCB9D). It uses the 'd' attribute to specify the path coordinates and the 'fill' attribute to set the color.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_18\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n  d=\"M610.198 137.454C611.056 141.973 612.186 148.609 613.358 156.818C613.587 158.62 613.816 160.194 613.902 160.737C614.881 169.779 614.722 178.908 613.43 187.91C613.144 189.698 612.843 191.4 612.429 193.073C611.299 197.707 600.287 205.258 587.072 209.706C582.519 211.261 577.817 212.34 573.042 212.924C558.182 214.712 548.414 204.586 548.343 195.762C548.293 193.608 548.896 191.488 550.073 189.684C552.13 186.006 553.496 181.983 554.106 177.813C555.126 172.287 555.748 166.695 555.966 161.08C556.166 157.877 556.151 155.789 556.151 155.789L567.593 140.214L601.845 132.348C602.761 138.197 605.178 141.844 607.066 141.787C608.953 141.73 609.955 138.212 610.198 137.454Z\"\n  fill=\"#FFCB9D\"\n  style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Starting the Tabler development server\nDESCRIPTION: Command to start the development server for Tabler, which provides auto-refresh functionality for development.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\npnpm run start\n```\n\n----------------------------------------\n\nTITLE: Using Tabler Icons as SVG Sprites\nDESCRIPTION: Implement Tabler icons using the SVG sprite technique, which allows for efficient icon management.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/icons/static-files/svg.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<svg width=\"24\" height=\"24\">\n  <use xlink:href=\"path/to/tabler-sprite.svg#tabler-activity\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Adding Horizontal Margin in HTML with Tabler CSS\nDESCRIPTION: Applies horizontal margins (left and right) to an element. The mx-4 class adds a margin of 1.5rem to both the left and right sides of the element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"mx-4\">...</div>\n```\n\n----------------------------------------\n\nTITLE: SVG Component with CSS Variable Integration for Theming\nDESCRIPTION: SVG path elements with CSS variable integrations for dynamic theming. The paths use variables like --tblr-illustrations-skin and --tblr-illustrations-primary to allow color customization based on the selected theme.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_25\n\nLANGUAGE: HTML\nCODE:\n```\n<path\n    d=\"M543.657 336.39L536.311 514.22H521.873L501.893 376.83L488.178 514.22H477.479L458.213 336.39H543.657Z\"\n    fill=\"#0455A4\"\n    style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n  />\n  <path\n    d=\"M505.697 538.906L537.926 535.318C537.926 535.318 539.091 526.967 534.037 524.046C528.984 521.124 510.967 531.081 505.697 538.906ZM458.26 538.906L490.479 535.318C490.479 535.318 491.644 526.967 486.6 524.046C481.556 521.124 463.473 531.081 458.26 538.906ZM420.385 276.76C422.47 282.504 425.272 287.961 428.726 293.002C434.133 300.991 441.72 307.26 450.585 311.065C451.487 303.348 449.862 295.547 445.954 288.831C439.472 277.634 428.754 272.852 420.385 276.76Z\"\n    fill=\"#232B41\"\n    class=\"tblr-illustrations-boy-girl-c\"\n  />\n```\n\n----------------------------------------\n\nTITLE: Building Tabler without development mode\nDESCRIPTION: Command to build Tabler without the auto-refresh functionality, for production or one-time builds.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npnpm run build\n```\n\n----------------------------------------\n\nTITLE: Building Docker image for Tabler development\nDESCRIPTION: Command to build a Docker image for Tabler development environment. This creates a containerized development setup.\nSOURCE: https://github.com/tabler/tabler/blob/dev/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ndocker build -t tabler .\n```\n\n----------------------------------------\n\nTITLE: Including Base Colors Template in Markdown\nDESCRIPTION: Template inclusion for displaying the base color palette that forms the foundation of the design system.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/colors.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% include \"docs/colors.html\" colors=site.colors %}\n```\n\n----------------------------------------\n\nTITLE: Adding Vertical Margin in HTML with Tabler CSS\nDESCRIPTION: Applies vertical margins (top and bottom) to an element. The my-4 class adds a margin of 1.5rem to both the top and bottom of the element.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/utilities/margins.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"my-4\">...</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Dependencies with pnpm\nDESCRIPTION: Command to install all required npm packages for Tabler development using pnpm package manager.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/how-to-contribute.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Starting Tabler Development Server with Live Reload\nDESCRIPTION: Command to run Tabler in development mode with autocompilation and live reload, creating a local server at http://localhost:3000/.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/how-to-contribute.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Displaying Tabler Version and Release Date\nDESCRIPTION: Shows the version number and release date for a Tabler update in markdown format. This pattern is repeated throughout the changelog to denote different releases.\nSOURCE: https://github.com/tabler/tabler/blob/dev/core/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## `1.0.0-beta24` - 2025-01-11\n```\n\n----------------------------------------\n\nTITLE: Cloning the Tabler Repository for Development\nDESCRIPTION: Command to clone the forked Tabler repository to your local machine after forking it on GitHub.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/how-to-contribute.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/YOUR_USERNAME/tabler.git\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Payments Plugin via CDN\nDESCRIPTION: Instructions for including the Tabler payments plugin CSS file through CDN link.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/payments.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-payments.min.css\" />\n```\n\n----------------------------------------\n\nTITLE: Dropzone JavaScript Initialization\nDESCRIPTION: JavaScript code to initialize the Dropzone instance on the form element after DOM content is loaded.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/dropzone.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    new Dropzone(\"#dropzone-default\");\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Modifying Compiled HTML Email Templates\nDESCRIPTION: Steps to modify the compiled.html file, including changing text, images, and links. It also covers removing unnecessary elements and managing assets.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/emails/introduction/compiled-html.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<body>\n  <!-- Find and modify content here -->\n  <p>Change text inside paragraph tags</p>\n  <h1>Change text inside heading tags</h1>\n  <img src=\"path/to/image.jpg\" alt=\"Change image source\">\n  <a href=\"https://example.com\">Change link destination</a>\n</body>\n```\n\n----------------------------------------\n\nTITLE: Listing Changelog Updates in Markdown\nDESCRIPTION: Demonstrates how individual changes, updates, and fixes are listed using markdown bullet points. This format is consistent throughout the changelog for documenting specific modifications in each release.\nSOURCE: https://github.com/tabler/tabler/blob/dev/core/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Enhanced documentation.\n- Updated illustrations and improved SVG handling in HTML.\n- Updated copyright year in LICENSE file to 2025.\n- Added marketing pages plugin.\n```\n\n----------------------------------------\n\nTITLE: Creating a New Branch for Tabler Development\nDESCRIPTION: Command to create and switch to a new git branch for your development changes to Tabler.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/how-to-contribute.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b your-branch-name\n```\n\n----------------------------------------\n\nTITLE: Defining Extra Colors in SCSS\nDESCRIPTION: This SCSS code snippet defines a map of extra colors with their corresponding color variables. It includes various shades like blue, azure, indigo, purple, and more.\nSOURCE: https://github.com/tabler/tabler/blob/dev/preview/pages/markdown.md#2025-04-22_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\n$extra-colors: (\n  \"blue\": $blue,\n  \"azure\": $azure,\n  \"indigo\": $indigo,\n  \"purple\": $purple,\n  \"pink\": $pink,\n  \"red\": $red,\n  \"orange\": $orange,\n  \"yellow\": $yellow,\n  \"lime\": $lime,\n  \"green\": $green,\n  \"teal\": $teal,\n  \"cyan\": $cyan,\n  \"gray\": $gray-600,\n  \"gray-dark\": $gray-800,\n  \"dark\": $dark\n) !default;\n```\n\n----------------------------------------\n\nTITLE: JavaScript Function Example\nDESCRIPTION: This JavaScript code snippet demonstrates a simple function that increments a number and logs the result to the console. It's used as an example of syntax highlighting in Markdown.\nSOURCE: https://github.com/tabler/tabler/blob/dev/preview/pages/markdown.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n----------------------------------------\n\nTITLE: Including Light Colors Template in Markdown\nDESCRIPTION: Template inclusion for displaying pastel shade variants of the base colors for subtle design applications.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/colors.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n{% include \"docs/colors.html\" colors=site.lightColors %}\n```\n\n----------------------------------------\n\nTITLE: Installing Tabler Flags via CDN\nDESCRIPTION: Demonstrates how to include the Tabler flags plugin via CDN by adding a link to the CSS file in the HTML head section.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/plugins/flags.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<link rel=\"stylesheet\" href=\"{{ cdnUrl }}/dist/css/tabler-flags.min.css\" />\n```\n\n----------------------------------------\n\nTITLE: Including Gray Palette Template in Markdown\nDESCRIPTION: Template inclusion for displaying the gray color palette used for neutral backgrounds and professional designs.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/colors.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n{% include \"docs/colors.html\" colors=site.grayColors %}\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog for @tabler/docs in Markdown\nDESCRIPTION: This markdown snippet shows the changelog for @tabler/docs version 1.0.1, listing all the dependency updates from @tabler/core version 1.2.0. It follows standard changelog formatting with headers for the package name, version number, and change type.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @tabler/docs\n\n## 1.0.1\n\n### Patch Changes\n\n- Updated dependencies [c59bc9d]\n- Updated dependencies [f9e4da2]\n- Updated dependencies [aea3b0a]\n- Updated dependencies [92a3afe]\n- Updated dependencies [3fc7b84]\n- Updated dependencies [199f39a]\n- Updated dependencies [2f8a372]\n- Updated dependencies [9fceadd]\n- Updated dependencies [44250db]\n- Updated dependencies [be1f3d1]\n- Updated dependencies [c20d076]\n- Updated dependencies [042e50f]\n- Updated dependencies [473fa38]\n- Updated dependencies [8646192]\n- Updated dependencies [922bb03]\n- Updated dependencies [44250db]\n- Updated dependencies [9bbcb99]\n- Updated dependencies [b17b488]\n- Updated dependencies [ddcd3a7]\n- Updated dependencies [e3d68d6]\n- Updated dependencies [215eaa4]\n- Updated dependencies [4846828]\n- Updated dependencies [6b6617a]\n- Updated dependencies [94bea00]\n- Updated dependencies [e14e492]\n- Updated dependencies [6d6d1bd]\n- Updated dependencies [6c566cf]\n  - @tabler/core@1.2.0\n```\n\n----------------------------------------\n\nTITLE: Color Radio Input Implementation\nDESCRIPTION: HTML code for a color selection radio input used in a form. The input is styled with form-colorinput classes and is checked by default with a value of 'blue'.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_14\n\nLANGUAGE: HTML\nCODE:\n```\n<div class=\"col-auto\">\n  <label class=\"form-colorinput\">\n    <input name=\"color\" type=\"radio\" value=\"blue\" class=\"form-colorinput-input\" checked />\n```\n\n----------------------------------------\n\nTITLE: Including Social Colors Template in Markdown\nDESCRIPTION: Template inclusion for displaying social media platform colors for recognition and familiarity.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/base/colors.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n{% include \"docs/colors.html\" colors=site.socialColors %}\n```\n\n----------------------------------------\n\nTITLE: Defining SVG Paths for Tabler Illustration Components\nDESCRIPTION: This snippet contains multiple SVG path elements that define different parts of an illustration. Each path has specific attributes like 'd' for path data, 'fill' for color, and sometimes custom styles or opacity settings.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_1\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n    d=\"M610.198 137.454C611.056 141.973 612.186 148.609 613.358 156.818C613.587 158.62 613.816 160.194 613.902 160.737C614.881 169.779 614.722 178.908 613.43 187.91C613.144 189.698 612.843 191.4 612.429 193.073C611.299 197.707 600.287 205.258 587.072 209.706C582.519 211.261 577.817 212.34 573.042 212.924C558.182 214.712 548.414 204.586 548.343 195.762C548.293 193.608 548.896 191.488 550.073 189.684C552.13 186.006 553.496 181.983 554.106 177.813C555.126 172.287 555.748 166.695 555.966 161.08C556.166 157.877 556.151 155.789 556.151 155.789L567.593 140.214L601.845 132.348C602.761 138.197 605.178 141.844 607.066 141.787C608.953 141.73 609.955 138.212 610.198 137.454Z\"\n    fill=\"#FFCB9D\"\n    style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n  />\n```\n\n----------------------------------------\n\nTITLE: Star Icon SVG Implementation\nDESCRIPTION: SVG implementation of a star icon using the Tabler icon set. The icon uses stroke-based rendering with customizable stroke properties and includes a hidden path to define the boundaries.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_13\n\nLANGUAGE: SVG\nCODE:\n```\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  width=\"24\"\n  height=\"24\"\n  viewBox=\"0 0 24 24\"\n  fill=\"none\"\n  stroke=\"currentColor\"\n  stroke-width=\"2\"\n  stroke-linecap=\"round\"\n  stroke-linejoin=\"round\"\n  class=\"icon icon-tabler icons-tabler-outline icon-tabler-star\"\n>\n  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n  <path\n    d=\"M12 17.75l-6.172 3.245l1.179 -6.873l-5 -4.867l6.9 -1l3.086 -6.253l3.086 6.253l6.9 1l-5 4.867l1.179 6.873z\"\n  />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Displaying Tabler Illustrations Folder Structure\nDESCRIPTION: A comprehensive directory tree showing the organization of the Tabler Illustrations package, including all supported file formats and theme variations.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/contents.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ntabler-illustrations/\n‚îú‚îÄ‚îÄ eps/\n|   ‚îú‚îÄ‚îÄ dark/\n|   ‚îî‚îÄ‚îÄ light/\n‚îú‚îÄ‚îÄ figma/ \n‚îú‚îÄ‚îÄ pdf/ \n|  ‚îú‚îÄ‚îÄ dark/\n|  ‚îî‚îÄ‚îÄ light/\n‚îú‚îÄ‚îÄ png/ \n|  ‚îú‚îÄ‚îÄ dark/\n|  ‚îî‚îÄ‚îÄ light/\n‚îú‚îÄ‚îÄ png-background/ \n|   ‚îú‚îÄ‚îÄ dark/\n|   ‚îî‚îÄ‚îÄ light/\n‚îú‚îÄ‚îÄ svg/ \n|  ‚îú‚îÄ‚îÄ dark/\n|  ‚îî‚îÄ‚îÄ light/\n‚îú‚îÄ‚îÄ svg-css-autodark/ \n‚îî‚îÄ‚îÄ svg-css-variables/\n    ‚îú‚îÄ‚îÄ dark/\n    ‚îî‚îÄ‚îÄ light/\n```\n\n----------------------------------------\n\nTITLE: SVG Path Definitions for UI Illustration\nDESCRIPTION: A collection of SVG path elements that together create a detailed illustration. The paths define various shapes with different fill colors and opacities, including skin tones (#FFCB9D) and primary color (#0455A4) elements that can be customized via CSS variables.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_10\n\nLANGUAGE: SVG\nCODE:\n```\n<path\n  d=\"M585.57 222.935L609.483 216.128L613.501 223.278L588.974 239.868C587.816 237.194 586.643 234.505 585.484 231.817C585.556 228.827 585.556 225.967 585.57 222.935Z\"\n  fill=\"#DADBE0\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Version Support Matrix in Markdown\nDESCRIPTION: Markdown table showing which versions of Tabler are currently supported from a security perspective. Version 1.0.x is supported while version 0.x is not supported.\nSOURCE: https://github.com/tabler/tabler/blob/dev/SECURITY.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported          |\n| ------- | ------------------ |\n| 1.0.x   | :white_check_mark: |\n| 0.x     | :x:                |\n```\n\n----------------------------------------\n\nTITLE: SVG Path Definitions for Tabler UI Illustration\nDESCRIPTION: A collection of SVG path elements that form a complex illustration for the Tabler UI framework. The paths use various fill colors including custom CSS variables for theming (like --tblr-illustrations-skin and --tblr-illustrations-primary), along with opacity settings to create depth and visual interest.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/illustrations/introduction/customization.md#2025-04-22_snippet_8\n\nLANGUAGE: svg\nCODE:\n```\n      fill=\"black\"\n      opacity=\"0.3\"\n    />\n    <path\n      d=\"M610.198 137.454C611.056 141.973 612.186 148.609 613.358 156.818C613.587 158.62 613.816 160.194 613.902 160.737C614.881 169.779 614.722 178.908 613.43 187.91C613.144 189.698 612.843 191.4 612.429 193.073C611.299 197.707 600.287 205.258 587.072 209.706C582.519 211.261 577.817 212.34 573.042 212.924C558.182 214.712 548.414 204.586 548.343 195.762C548.293 193.608 548.896 191.488 550.073 189.684C552.13 186.006 553.496 181.983 554.106 177.813C555.126 172.287 555.748 166.695 555.966 161.08C556.166 157.877 556.151 155.789 556.151 155.789L567.593 140.214L601.845 132.348C602.761 138.197 605.178 141.844 607.066 141.787C608.953 141.73 609.955 138.212 610.198 137.454Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M610.198 137.454C611.041 141.973 612.185 148.609 613.373 156.818C613.587 158.62 613.816 160.208 613.887 160.737C614.877 169.778 614.728 178.907 613.444 187.91C611.07 187.716 608.754 187.071 606.622 186.008C604.293 184.813 602.223 183.171 600.53 181.174C598.789 179.022 597.399 176.608 596.411 174.023C595.671 172.382 595.036 170.696 594.509 168.975C582.401 176.336 568.178 179.433 554.106 177.77C555.126 172.244 555.747 166.652 555.965 161.037C556.166 157.834 556.151 155.731 556.151 155.731L567.593 140.171L601.845 132.348C602.761 138.197 605.178 141.844 607.065 141.773C608.953 141.701 610.026 138.212 610.269 137.482\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M616.147 143.804C617.621 150.946 616.333 158.382 612.543 164.613C611.699 165.705 610.934 166.857 610.255 168.059C608.586 171.497 607.8 175.297 607.967 179.115C605.963 177.555 604.47 175.434 603.676 173.022C602.575 169.318 602.618 161.996 602.475 161.009V160.408C602.475 160.079 602.389 159.636 602.275 158.778C601.977 156.941 601.562 155.126 601.03 153.343C601.023 153.249 600.988 153.16 600.93 153.086C593.479 160.322 571.769 178.829 552.304 169.962C549.27 168.595 546.452 166.793 543.938 164.613C543.696 164.444 543.479 164.242 543.294 164.012C542.682 163.466 542.104 162.884 541.564 162.267L541.406 162.11C540.013 160.506 538.892 158.685 538.088 156.718L537.488 155.889C537.211 155.006 537.005 154.102 536.873 153.186C536.555 149.566 537.5 145.948 539.547 142.946C543.251 137.068 549.701 132.62 553.105 130.303C566.291 121.136 588.001 114.728 603.505 124.983C607.42 127.703 610.643 131.303 612.915 135.494C614.324 138.117 615.359 140.923 615.99 143.832\"\n      fill=\"#232B41\"\n      class=\"tblr-illustrations-computer-fix-d\"\n    />\n    <path\n      d=\"M600.744 153.028C593.293 160.265 571.583 178.771 552.118 169.904C549.084 168.538 546.266 166.736 543.752 164.556C543.51 164.387 543.293 164.185 543.108 163.955C542.496 163.409 541.918 162.827 541.378 162.21L541.22 162.053C539.83 160.447 538.709 158.626 537.902 156.661C542.634 159.548 547.809 161.635 553.219 162.839C580.007 168.674 602.146 148.724 605.678 145.534L605.95 145.291C604.428 148.012 602.707 150.618 600.801 153.086\"\n      fill=\"black\"\n      opacity=\"0.5\"\n    />\n    <path\n      d=\"M483.942 177.727C483.944 179.167 483.81 180.604 483.542 182.018H457.484C457.216 180.604 457.082 179.167 457.083 177.727C457.072 175.8 457.298 173.879 457.756 172.007H483.284C483.729 173.881 483.95 175.801 483.942 177.727Z\"\n      fill=\"black\"\n      opacity=\"0.3\"\n    />\n    <path\n      d=\"M466.422 169.089C467.695 170.426 468.769 171.938 469.612 173.58C472.744 179.386 472.315 185.679 468.053 189.169C462.618 193.559 453.165 191.729 446.872 185.064C446.186 184.326 445.55 183.543 444.97 182.719C440.493 176.412 440.451 168.875 445.256 164.999C450.633 160.594 460.144 162.425 466.422 169.089Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M466.422 169.089C467.695 170.426 468.769 171.938 469.612 173.58C469.011 173.98 468.468 174.338 467.881 174.695C460.144 179.344 455.167 178.385 446.114 182.161C445.722 182.324 445.34 182.51 444.97 182.719C440.493 176.412 440.451 168.875 445.256 164.999C450.633 160.594 460.144 162.425 466.422 169.089Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M585.599 343.37V364.122L575.587 372.703V346.831L585.384 342.212L585.599 343.37Z\"\n      fill=\"black\"\n      opacity=\"0.15\"\n    />\n    <path\n      d=\"M520.025 263.695C518.559 268.03 515.781 271.802 512.076 274.488C508.37 277.173 503.921 278.64 499.345 278.683L483.141 326.766L476.205 347.274L473.273 355.927C476.717 358.617 479.284 362.269 480.65 366.42C482.016 370.571 482.119 375.034 480.946 379.243C479.772 383.452 477.376 387.219 474.059 390.064C470.743 392.91 466.657 394.707 462.318 395.228L469.04 375.377C469.299 374.598 469.24 373.747 468.876 373.011C468.512 372.274 467.872 371.711 467.095 371.444L454.967 367.34C454.187 367.08 453.337 367.139 452.6 367.503C451.864 367.867 451.301 368.508 451.034 369.285L444.326 389.135C441.191 386.09 439.031 382.181 438.122 377.905C437.212 373.629 437.594 369.179 439.219 365.121C440.843 361.063 443.637 357.579 447.246 355.112C450.855 352.644 455.115 351.305 459.486 351.265L462.347 342.941L469.412 322.046L485.573 274.021C482.129 271.331 479.561 267.679 478.195 263.528C476.829 259.377 476.726 254.914 477.9 250.705C479.073 246.495 481.47 242.729 484.786 239.883C488.102 237.038 492.189 235.24 496.528 234.72L489.806 254.571C489.673 254.956 489.619 255.365 489.645 255.772C489.671 256.179 489.778 256.577 489.959 256.942C490.14 257.308 490.391 257.634 490.699 257.902C491.006 258.17 491.364 258.375 491.751 258.504L503.864 262.608C504.644 262.868 505.494 262.809 506.231 262.445C506.967 262.08 507.53 261.44 507.797 260.663L514.519 240.812C517.507 243.715 519.611 247.406 520.585 251.457C521.56 255.507 521.366 259.751 520.025 263.695Z\"\n      fill=\"#A7AAB3\"\n    />\n    <path\n      d=\"M483.141 326.766L476.205 347.274C473.637 346.92 471.106 346.341 468.639 345.544C466.472 344.831 464.359 343.961 462.318 342.941L469.383 322.046C471.541 322.405 473.668 322.926 475.747 323.605C478.306 324.422 480.782 325.48 483.141 326.766Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M477.421 302.581C474.667 302.666 471.941 303.148 469.326 304.012C459.915 306.872 453.765 314.023 454.638 322.175C455.782 332.544 467.738 340.524 481.396 340.052C482.907 339.986 484.412 339.823 485.901 339.566C497.257 337.549 505.209 329.555 504.179 320.459C503.063 310.147 491.05 302.11 477.421 302.581Z\"\n      fill=\"#FFCB9D\"\n      style=\"fill: #ffcb9d; fill: var(--tblr-illustrations-skin, #ffcb9d)\"\n    />\n    <path\n      d=\"M477.42 302.581C474.667 302.666 471.941 303.148 469.326 304.012C469.555 305.07 469.755 306.014 470.012 307.001C473.344 320.058 479.623 324.263 485.244 337.764C485.499 338.35 485.719 338.952 485.901 339.566C497.257 337.549 505.209 329.555 504.179 320.459C503.063 310.147 491.05 302.11 477.42 302.581Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n    <path\n      d=\"M640.36 287.951C638.93 310.59 624.628 332.93 601.002 350.178C579.177 366.095 549.387 377.694 514.391 381.184C508.167 370.155 502.23 358.967 496.585 347.632C494.726 343.928 492.909 340.181 491.079 336.362C483.928 321.46 477.664 307.044 472.129 293.271C487.689 298.377 551.975 318.442 589.932 302.152C596.811 299.206 610.541 293.4 612.486 282.13C613.048 278.08 612.317 273.956 610.398 270.345C608.798 267.347 607.829 264.053 607.55 260.666C607.271 257.279 607.688 253.871 608.776 250.652C609.864 247.432 611.599 244.469 613.876 241.946C616.152 239.422 618.92 237.392 622.011 235.978C640.46 260.177 640.861 279.87 640.36 287.951Z\"\n      fill=\"#0455A4\"\n      style=\"fill: #0455a4; fill: var(--tblr-illustrations-primary, var(--tblr-primary, #0455a4))\"\n    />\n    <path\n      d=\"M601.002 350.178C579.177 366.095 549.387 377.694 514.39 381.184C511.347 375.792 508.372 370.361 505.466 364.894C501.376 357.2 497.519 349.634 493.896 342.197C505.942 349.292 519.121 354.256 532.854 356.871C555.749 361.042 579.355 358.723 601.002 350.178Z\"\n      fill=\"black\"\n      opacity=\"0.1\"\n    />\n  </svg>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration for Tabler Documentation\nDESCRIPTION: YAML frontmatter configuration for the Tabler documentation page, specifying the title, summary, order, and description of the content.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/getting-started/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Introduction\nsummary: Free and open-source HTML Dashboard UI Kit built on Bootstrap\norder: 1\ndescription: Overview of Tabler UI Kit.\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Countup Duration in HTML\nDESCRIPTION: Configuring the duration of the countup animation using a JSON parameter. By default, the animation takes 2 seconds, but this can be customized.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"duration\":4}'>30000</h1>\n```\n\n----------------------------------------\n\nTITLE: Installing Plyr Library via CDN\nDESCRIPTION: Script tag for including the Plyr library from CDN into the webpage.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/inline-player.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"{{ cdnUrl }}/dist/libs/plyr/dist/plyr.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Adding Suffix to Countup Display\nDESCRIPTION: Adding a suffix such as percentage symbols to the countup number display using the suffix parameter.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"suffix\":\"%\"}'>300</h1>\n```\n\n----------------------------------------\n\nTITLE: Customizing Decimal Separator in Countup\nDESCRIPTION: Specifying a custom decimal separator to replace the default decimal point in the countup display.\nSOURCE: https://github.com/tabler/tabler/blob/dev/docs/content/ui/components/countup.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<h1 data-countup='{\"decimal\":\",\"}'>3.12</h1>\n```"
  }
]
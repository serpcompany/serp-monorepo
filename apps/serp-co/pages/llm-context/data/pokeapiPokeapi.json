[
  {
    "owner": "pokeapi",
    "repo": "pokeapi",
    "content": "TITLE: Installing PokeAPI Dependencies with Python\nDESCRIPTION: This command installs all required packages and libraries for using PokeAPI using pip.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmake install\n```\n\n----------------------------------------\n\nTITLE: Setting Up Local Development Environment for PokeAPI\nDESCRIPTION: This command sets up the local development environment for PokeAPI.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nmake setup\n```\n\n----------------------------------------\n\nTITLE: Running PokeAPI Server on Port 8000\nDESCRIPTION: This command starts the PokeAPI server on port 8000.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nmake serve\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Pokemon Example with Node.js\nDESCRIPTION: Commands to install the required dependencies and run the pokemon.js example file which fetches information about Staryu from the PokeAPI using node-fetch.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/graphql/examples/node/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm i\nnode pokemon.js\n```\n\n----------------------------------------\n\nTITLE: Setting Up PokeAPI with Docker Compose\nDESCRIPTION: This command sets up PokeAPI using Docker Compose, creating a production-like environment with separate containers for each service.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nmake docker-setup\n```\n\n----------------------------------------\n\nTITLE: Specifying PokéAPI Dependencies in Python\nDESCRIPTION: This snippet lists all the required Python packages and their specific versions for the PokéAPI project. It includes Django, DRF, database connectors, and various utility libraries essential for the API's functionality.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\nDjango==3.2.25\nUnipath==1.1\ncoverage==4.5.4\ndjango-cors-headers==3.14.0\ndjango-discover-runner==1.0\ndjango-redis==4.12.1\ndjango-cachalot==2.4.5\ndjangorestframework==3.14.0\ngunicorn==23.0.0\nmimeparse==0.1.3\npsycopg2-binary==2.9.10\npython-dateutil==2.8.2\npython-mimeparse==1.6.0\ndrf-spectacular==0.28.0\n```\n\n----------------------------------------\n\nTITLE: Cloning the PokeAPI Repository\nDESCRIPTION: Command for cloning the forked PokeAPI repository to your local machine using git. This is the first step in the contribution process after forking the project.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:<YOUR_USERNAME>/pokeapi.git\n```\n\n----------------------------------------\n\nTITLE: Building or Rebuilding PokeAPI Database\nDESCRIPTION: This command builds or rebuilds the PokeAPI database by applying any CSV file updates.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmake build-db\n```\n\n----------------------------------------\n\nTITLE: Setting Up PokeAPI with Docker Compose (Alternative)\nDESCRIPTION: These commands set up PokeAPI using Docker Compose without using the make command, including database migration and building.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ndocker compose up -d\ndocker compose exec -T app python manage.py migrate --settings=config.docker-compose\ndocker compose exec -T app sh -c 'echo \"from data.v2.build import build_all; build_all()\" | python manage.py shell --settings=config.docker-compose'\n```\n\n----------------------------------------\n\nTITLE: Building Pokémon Data in PokeAPI Docker Container\nDESCRIPTION: These shell commands execute database migrations and build all Pokémon data within the running PokeAPI container. This process is necessary as the image doesn't include pre-built data.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/Resources/docker/app/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndocker exec pokeapi python manage.py migrate --settings=config.docker-compose\ndocker exec pokeapi sh -c 'echo \"from data.v2.build import build_all; build_all()\" | python manage.py shell --settings=config.docker-compose'\n```\n\n----------------------------------------\n\nTITLE: Cloning the Forked PokeAPI Repository with Submodules in Shell\nDESCRIPTION: Command to clone the forked PokeAPI repository including all submodules to your local machine. This is the first step after forking the project to your GitHub profile.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_12\n\nLANGUAGE: shell\nCODE:\n```\ngit clone --recurse-submodules git@github.com:<YOUR_USERNAME>/pokeapi.git\n```\n\n----------------------------------------\n\nTITLE: Creating a Branch for Contributions\nDESCRIPTION: Command for creating a new git branch with a descriptive name for your contribution. This helps organize changes and keeps the main branch clean.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/CONTRIBUTING.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b my_new_branch\n```\n\n----------------------------------------\n\nTITLE: Creating a New Branch in Git for Feature Development\nDESCRIPTION: Command to create and switch to a new branch with a descriptive name for your contribution. This helps organize and isolate your changes from the main codebase.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_13\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b my_new_branch\n```\n\n----------------------------------------\n\nTITLE: Generating and Applying Database Migrations for PokeAPI\nDESCRIPTION: These commands generate outstanding migrations and apply them to the PokeAPI database.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nmake make-migrations\nmake migrate\n```\n\n----------------------------------------\n\nTITLE: Running Pokemon Data Fetcher in Go\nDESCRIPTION: Shell command to execute the pokemon.go script which fetches Pokemon details and optionally pipes the output through jq for JSON formatting.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/graphql/examples/go/README.md#2025-04-19_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo run pokemon.go # | jq\n```\n\n----------------------------------------\n\nTITLE: Deploying PokeAPI with Kubernetes\nDESCRIPTION: These commands deploy PokeAPI using Kubernetes, including applying configurations, setting the namespace, migrating the database, and building it.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nkubectl apply -k Resources/k8s/kustomize/base/\nkubectl config set-context --current --namespace pokeapi\nkubectl exec --namespace pokeapi deployment/pokeapi -- python manage.py migrate --settings=config.docker-compose\nkubectl exec --namespace pokeapi deployment/pokeapi -- sh -c 'echo \"from data.v2.build import build_all; build_all()\" | python manage.py shell --settings=config.docker-compose'\nkubectl wait --namespace pokeapi --timeout=120s --for=condition=complete job/load-graphql\n```\n\n----------------------------------------\n\nTITLE: Rebuilding PokeAPI Database with Docker\nDESCRIPTION: This command rebuilds the PokeAPI database and applies any CSV file updates when using Docker.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nmake docker-build-db\n```\n\n----------------------------------------\n\nTITLE: Generating and Applying Migrations with Docker\nDESCRIPTION: These commands generate and apply database migrations when using Docker with PokeAPI.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nmake docker-make-migrations\nmake docker-migrate\n```\n\n----------------------------------------\n\nTITLE: Applying Hasura GraphQL Configuration for PokeAPI\nDESCRIPTION: This command applies the Hasura GraphQL configuration to track all PokeAPI tables and foreign keys.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nmake hasura-apply\n```\n\n----------------------------------------\n\nTITLE: Wiping PokeAPI SQLite Database\nDESCRIPTION: This command wipes the PokeAPI SQLite database.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/README.md#2025-04-19_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nmake wipe-sqlite-db\n```\n\n----------------------------------------\n\nTITLE: Specifying Dependencies for PokeAPI\nDESCRIPTION: References the main requirements.txt file and specifies Black version 23.12.1. This file is used to declare dependencies needed for the project, with Black being used for code formatting.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/test-requirements.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-r requirements.txt\nblack==23.12.1\n```\n\n----------------------------------------\n\nTITLE: Displaying Supported PokeAPI Versions in Markdown Table\nDESCRIPTION: This snippet shows a markdown table that indicates which versions of PokeAPI are currently supported with security updates. It uses emoji to visually represent support status.\nSOURCE: https://github.com/pokeapi/pokeapi/blob/master/SECURITY.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Version | Supported |\n| --- | --- |\n| `master` | :white_check_mark: |\n| any other version/release/tag  | :x: |\n```"
  }
]
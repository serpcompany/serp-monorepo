[
  {
    "owner": "farcasterxyz",
    "repo": "miniapps",
    "content": "TITLE: Installing Frame SDK with Package Managers\nDESCRIPTION: Commands for installing the Farcaster Frame SDK in an existing project using different package managers.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/getting-started.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @farcaster/frame-sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @farcaster/frame-sdk\n```\n\n----------------------------------------\n\nTITLE: Setting Up Mini App with Package Managers\nDESCRIPTION: Commands for creating a new Mini App project using different package managers via the @farcaster/create-mini-app CLI tool.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/getting-started.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create @farcaster/mini-app\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm create @farcaster/mini-app\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn create @farcaster/mini-app\n```\n\n----------------------------------------\n\nTITLE: Implementing Farcaster Mini App Embed in HTML\nDESCRIPTION: Complete HTML example showing how to implement a Farcaster Mini App embed, including the meta tag with stringified JSON content in the head section.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/sharing.mdx#2025-04-16_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<html lang=\"en\">\n  <head>\n    <!-- head content -->\n    <meta name=\"fc:frame\" content='{\"version\":\"next\",\"imageUrl\":\"https://yoink.party/framesV2/opengraph-image\",\"button\":{\"title\":\"ðŸš© Start\",\"action\":{\"type\":\"launch_frame\",\"name\":\"Yoink!\",\"url\":\"https://yoink.party/framesV2\",\"splashImageUrl\":\"https://yoink.party/logo.png\",\"splashBackgroundColor\":\"#f5f0ec\"}}}' />\n  </head>\n  <body>\n    <!-- page content -->\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Calling ready to dismiss splash screen in Farcaster Mini App\nDESCRIPTION: This snippet demonstrates how to use the sdk.actions.ready() function to indicate that the app's interface is ready to be displayed, which dismisses the splash screen in a Farcaster Mini App.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/loading.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.ready();\n```\n\n----------------------------------------\n\nTITLE: Implementing Mini App Embed Metatag in HTML\nDESCRIPTION: HTML meta tag implementation that enables Mini App URL rendering in casts. The fc:frame tag contains stringified JSON that defines how the Mini App appears and functions when embedded.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"fc:frame\" content=\"<stringified Embed JSON>\" />\n```\n\n----------------------------------------\n\nTITLE: Complete Farcaster Mini App Manifest Example in JSON\nDESCRIPTION: Fully functional example of a farcaster.json manifest file that verifies domain ownership through accountAssociation and provides metadata for the Mini App through the frame object.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"accountAssociation\": {\n    \"header\": \"eyJmaWQiOjM2MjEsInR5cGUiOiJjdXN0b2R5Iiwia2V5IjoiMHgyY2Q4NWEwOTMyNjFmNTkyNzA4MDRBNkVBNjk3Q2VBNENlQkVjYWZFIn0\",\n    \"payload\": \"eyJkb21haW4iOiJ5b2luay5wYXJ0eSJ9\",\n    \"signature\": \"MHgwZmJiYWIwODg3YTU2MDFiNDU3MzVkOTQ5MDRjM2Y1NGUxMzVhZTQxOGEzMWQ5ODNhODAzZmZlYWNlZWMyZDYzNWY4ZTFjYWU4M2NhNTAwOTMzM2FmMTc1NDlmMDY2YTVlOWUwNTljNmZiNDUxMzg0Njk1NzBhODNiNjcyZWJjZTFi\"\n  },\n  \"frame\": {\n    \"version\": \"1\",\n    \"name\": \"Yoink!\",\n    \"iconUrl\": \"https://yoink.party/logo.png\",\n    \"homeUrl\": \"https://yoink.party/framesV2/\",\n    \"imageUrl\": \"https://yoink.party/framesV2/opengraph-image\",\n    \"buttonTitle\": \"ðŸš© Start\",\n    \"splashImageUrl\": \"https://yoink.party/logo.png\",\n    \"splashBackgroundColor\": \"#f5f0ec\",\n    \"webhookUrl\": \"https://yoink.party/api/webhook\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Farcaster Mini App Manifest Configuration\nDESCRIPTION: Example JSON manifest file for a Mini App called 'Yoink!' with essential configuration properties including version, name, icons, URLs, and styling information. This configuration defines how the app appears in Farcaster clients.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/publishing.mdx#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"frame\": {\n    \"version\": \"1\",\n    \"name\": \"Yoink!\",\n    \"iconUrl\": \"https://yoink.party/logo.png\",\n    \"homeUrl\": \"https://yoink.party/framesV2/\",\n    \"imageUrl\": \"https://yoink.party/framesV2/opengraph-image\",\n    \"buttonTitle\": \"ðŸš© Start\",\n    \"splashImageUrl\": \"https://yoink.party/logo.png\",\n    \"splashBackgroundColor\": \"#f5f0ec\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Including @farcaster/frame-sdk via CDN and Initializing\nDESCRIPTION: This HTML snippet demonstrates how to include the @farcaster/frame-sdk via a CDN and initialize it using the global 'frame' object. It loads the minified version of the SDK and calls the ready() action.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-sdk/README.md#2025-04-16_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/@farcaster/frame-sdk/dist/index.min.js\"></script>\n<script>\n  frame.sdk.actions.ready();\n</script>\n```\n\n----------------------------------------\n\nTITLE: Complete Farcaster Mini App Manifest with Account Association\nDESCRIPTION: Comprehensive JSON manifest file that includes both app configuration and account association for ownership verification. The accountAssociation object contains cryptographically signed data that proves ownership of the Mini App by a specific Farcaster account.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/publishing.mdx#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"accountAssociation\": {\n    \"header\": \"eyJmaWQiOjM2MjEsInR5cGUiOiJjdXN0b2R5Iiwia2V5IjoiMHgyY2Q4NWEwOTMyNjFmNTkyNzA4MDRBNkVBNjk3Q2VBNENlQkVjYWZFIn0\",\n    \"payload\": \"eyJkb21haW4iOiJ5b2luay5wYXJ0eSJ9\",\n    \"signature\": \"MHgwZmJiYWIwODg3YTU2MDFiNDU3MzVkOTQ5MDRjM2Y1NGUxMzVhZTQxOGEzMWQ5ODNhODAzZmZlYWNlZWMyZDYzNWY4ZTFjYWU4M2NhNTAwOTMzM2FmMTc1NDlmMDY2YTVlOWUwNTljNmZiNDUxMzg0Njk1NzBhODNiNjcyZWJjZTFi\"\n  },\n  \"frame\": {\n    \"version\": \"1\",\n    \"name\": \"Yoink!\",\n    \"iconUrl\": \"https://yoink.party/logo.png\",\n    \"homeUrl\": \"https://yoink.party/framesV2/\",\n    \"imageUrl\": \"https://yoink.party/framesV2/opengraph-image\",\n    \"buttonTitle\": \"ðŸš© Start\",\n    \"splashImageUrl\": \"https://yoink.party/logo.png\",\n    \"splashBackgroundColor\": \"#f5f0ec\",\n    \"webhookUrl\": \"https://yoink.party/api/webhook\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using ready() to hide splash screen in Farcaster frame-sdk\nDESCRIPTION: This snippet demonstrates how to import and call the ready function from the Farcaster frame-sdk to hide the splash screen when a miniapp has finished loading.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/ready.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.ready()\n```\n\n----------------------------------------\n\nTITLE: Defining Frame Context Type in TypeScript\nDESCRIPTION: Core type definition for the FrameContext object that provides session information including user details, location context, and client information.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/context.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type FrameContext = {\n  user: {\n    fid: number;\n    username?: string;\n    displayName?: string;\n    pfpUrl?: string;\n  };\n  location?: FrameLocationContext;\n  client: {\n    clientFid: number;\n    added: boolean;\n    safeAreaInsets?: SafeAreaInsets;\n    notificationDetails?: FrameNotificationDetails;\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Meta Tag for Sharable Farcaster Mini App Embed\nDESCRIPTION: Demonstrates how to add a meta tag in the HTML head section to make a page sharable as a Farcaster Mini App embed. The meta tag includes stringified JSON data specifying the embed properties.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/sharing.mdx#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<meta name=\"fc:frame\" content=\"<stringified FrameEmbed JSON>\" />\n```\n\n----------------------------------------\n\nTITLE: Installing @farcaster/frame-sdk via pnpm\nDESCRIPTION: This command installs the @farcaster/frame-sdk package using the pnpm package manager. It adds the package to your project's dependencies.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-sdk/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-sdk\n```\n\n----------------------------------------\n\nTITLE: Handling Farcaster Mini App Notification Webhook Events\nDESCRIPTION: This TypeScript code demonstrates how to handle and verify webhook events for a Farcaster Mini App using the @farcaster/frame-node library. It includes error handling for various scenarios during the event verification process.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/notifications.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  ParseWebhookEvent,\n  parseWebhookEvent,\n  verifyAppKeyWithNeynar,\n} from \"@farcaster/frame-node\";\n\ntry {\n  const data = await parseWebhookEvent(requestJson, verifyAppKeyWithNeynar);\n} catch (e: unknown) {\n  const error = e as ParseWebhookEvent.ErrorType;\n\n  switch (error.name) {\n    case \"VerifyJsonFarcasterSignature.InvalidDataError\":\n    case \"VerifyJsonFarcasterSignature.InvalidEventDataError\":\n      // The request data is invalid\n    case \"VerifyJsonFarcasterSignature.InvalidAppKeyError\":\n      // The app key is invalid\n    case \"VerifyJsonFarcasterSignature.VerifyAppKeyError\":\n      // Internal error verifying the app key (caller may want to try again)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Event Callbacks in Farcaster Mini Apps\nDESCRIPTION: Example of how to register event callbacks using sdk.on() and clean them up with sdk.removeListener() or sdk.removeAllListeners(). This pattern allows Mini Apps to respond to user actions like adding/removing the app or enabling/disabling notifications.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/events.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nsdk.on('frameAdded', () => { /* handle frame added */ });\nsdk.on('frameRemoved', () => { /* handle frame removed */ });\nsdk.removeListener('frameAdded', callback);\nsdk.removeAllListeners();\n```\n\n----------------------------------------\n\nTITLE: Defining Farcaster Mini App Embed Properties in TypeScript\nDESCRIPTION: Example of creating a frame object in TypeScript that defines the properties for a Farcaster Mini App embed, including version, image URL, button details, and action specifications.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/sharing.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst frame = {\n  version: \"next\",\n  imageUrl: \"https://yoink.party/framesV2/opengraph-image\",\n  button: {\n    title: \"ðŸš© Start\",\n    action: {\n      type: \"launch_frame\",\n      url: \"https://yoink.party/framesV2\",\n      name:\"Yoink!\",\n      splashImageUrl: \"https://yoink.party/logo.png\",\n      splashBackgroundColor:\"#f5f0ec\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Signing In a User with Farcaster in TypeScript\nDESCRIPTION: This snippet demonstrates how to use the signIn function from the Farcaster frame-sdk to authenticate a user. It requires a cryptographically secure nonce generated on the server and associated with the user's session.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/sign-in.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * Cryptographically secure nonce generated on the server and associated with\n * the user's session.\n */ \nconst nonce = 'securenonce';\n\n// ---cut---\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.signIn({ \n  nonce \n})\n```\n\n----------------------------------------\n\nTITLE: Installing Farcaster Frame Node Package\nDESCRIPTION: Instructions for installing the @farcaster/frame-node package using pnpm package manager.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-node/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-node\n```\n\n----------------------------------------\n\nTITLE: Importing Frame SDK via CDN\nDESCRIPTION: HTML script tag for importing the Farcaster Frame SDK from an ESM-compatible CDN when not using a package manager.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/getting-started.mdx#2025-04-16_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n  import { sdk } from 'https://esm.sh/@farcaster/frame-sdk'\n</script>\n```\n\n----------------------------------------\n\nTITLE: Disabling native gestures in Farcaster Mini App\nDESCRIPTION: This code shows how to disable native gestures when calling the ready function in a Farcaster Mini App. This is useful when the app has conflicting gestures that might interfere with the default closing behavior.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/loading.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nawait sdk.actions.ready({ disableNativeGestures: true });\n```\n\n----------------------------------------\n\nTITLE: Using composeCast to Open Cast Composer in Farcaster SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to use the composeCast action from the Farcaster Frame SDK to open a cast composer with suggested text and embeds. It shows the basic implementation with optional parameters.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/compose-cast.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.composeCast({ \n  text,\n  embeds,\n})\n```\n\n----------------------------------------\n\nTITLE: Mini App Embed Schema Example in JSON\nDESCRIPTION: Example of a Mini App embed configuration in JSON format. This defines the version, image URL, button appearance, and action details for launching the app.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"next\",\n  \"imageUrl\": \"https://yoink.party/framesV2/opengraph-image\",\n  \"button\": {\n    \"title\": \"ðŸš© Start\",\n    \"action\": {\n      \"type\": \"launch_frame\",\n      \"name\": \"Yoink!\",\n      \"url\": \"https://yoink.party/framesV2\",\n      \"splashImageUrl\": \"https://yoink.party/logo.png\",\n      \"splashBackgroundColor\": \"#f5f0ec\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Wagmi for Farcaster Mini Apps\nDESCRIPTION: TypeScript code to configure Wagmi for use in Farcaster Mini Apps. It sets up the base chain, HTTP transport, and adds the Mini App connector.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/wallets.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { http, createConfig } from 'wagmi'\nimport { base } from 'wagmi/chains'\nimport { farcasterFrame as miniAppConnector } from '@farcaster/frame-wagmi-connector'\n\nexport const config = createConfig({\n  chains: [base],\n  transports: {\n    [base.id]: http(),\n  },\n  connectors: [\n    miniAppConnector()\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Farcaster Mini App JSON Settings\nDESCRIPTION: Defines the core configuration for a Farcaster mini app including app metadata, URLs for assets and endpoints, and visual customization settings. Contains essential properties like version, name, icons, URLs, and button configuration.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/snippets/manifestAppConfigExample.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"1\",\n  \"name\": \"Yoink!\",\n  \"iconUrl\": \"https://yoink.party/logo.png\",\n  \"homeUrl\": \"https://yoink.party/framesV2/\",\n  \"imageUrl\": \"https://yoink.party/framesV2/opengraph-image\",\n  \"buttonTitle\": \"ðŸš© Start\",\n  \"splashImageUrl\": \"https://yoink.party/logo.png\",\n  \"splashBackgroundColor\": \"#f5f0ec\",\n  \"webhookUrl\": \"https://yoink.party/api/webhook\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing frame-wagmi-connector for Farcaster Mini Apps\nDESCRIPTION: Commands to install the @farcaster/frame-wagmi-connector package using different package managers. This connector is used to interact with the user's wallet in Farcaster Mini Apps.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/wallets.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @farcaster/frame-wagmi-connector\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-wagmi-connector\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @farcaster/frame-wagmi-connector\n```\n\n----------------------------------------\n\nTITLE: Implementing Farcaster Frame Meta Tag in HTML\nDESCRIPTION: Demonstrates how to add the fc:frame meta tag in the HTML head section to make the root app URL sharable in feeds. The meta tag includes configuration for frame version, image URL, and button action properties.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/create-mini-app/templates/default/README.md#2025-04-16_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n  <head>\n    <!--- other tags --->\n    <meta name=\"fc:frame\" content='{\"version\":\"next\",\"imageUrl\":\"https://placehold.co/900x600.png?text=Frame%20Image\",\"button\":{\"title\":\"Open\",\"action\":{\"type\":\"launch_frame\",\"name\":\"App Name\",\"url\":\"https://app.com\"}}}' /> \n  </head>\n```\n\n----------------------------------------\n\nTITLE: Opening External URL with Farcaster SDK in TypeScript\nDESCRIPTION: Demonstrates how to use the openUrl function from the Farcaster Frame SDK to open an external URL or deep link into Farcaster clients on mobile devices.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/open-url.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.openUrl(url)\n```\n\n----------------------------------------\n\nTITLE: Using viewProfile Function in Farcaster Mini-App SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to use the viewProfile function from the Farcaster frame SDK to display a user's profile. It requires the user's Farcaster ID (fid) as a parameter and returns void.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/view-profile.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst fid = 6841;\n\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.viewProfile({ \n  fid\n})\n```\n\n----------------------------------------\n\nTITLE: Examining Return Value from composeCast Action (TypeScript)\nDESCRIPTION: This snippet shows how to capture and examine the return value from the composeCast action. The return value contains the cast posted by the user, or undefined if the close parameter was set to true.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/compose-cast.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = await sdk.actions.composeCast({ \n//    ^?  \n  text: \"I just learned how to compose a cast\",\n  embeds: [\"https://miniapps.farcaster.xyz/docs/sdk/actions/compose-cast\"]\n})\n```\n\n----------------------------------------\n\nTITLE: Closing a Mini App with Farcaster Frame SDK in TypeScript\nDESCRIPTION: Demonstrates how to use the close method from the Farcaster Frame SDK to programmatically close a mini app. The method is asynchronous and returns void.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/close.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.close()\n```\n\n----------------------------------------\n\nTITLE: Adding Farcaster Mini App using Frame SDK\nDESCRIPTION: Demonstrates how to implement the addFrame action to prompt users to add a mini app. The action returns void and may throw RejectedByUser or InvalidDomainManifestJson errors.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/actions/add-frame.mdx#2025-04-16_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sdk } from '@farcaster/frame-sdk'\n\nawait sdk.actions.addFrame()\n```\n\n----------------------------------------\n\nTITLE: JSON Farcaster Signature Structure for Server Events\nDESCRIPTION: Defines the structure of server events using the JSON Farcaster Signature format. Events are signed with the user's app key and include a header, payload, and signature, all base64url encoded.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"header\": \"string\",\n  \"payload\": \"string\",\n  \"signature\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Connecting to User's Wallet with Farcaster Frame Connector\nDESCRIPTION: React component example showing how to use the farcasterFrame connector with Wagmi's useConnect hook. This code creates a button that, when clicked, initiates the wallet connection process using the Farcaster Frame connector.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-wagmi-connector/README.md#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { useConnect } from 'wagmi'\nimport { farcasterFrame } from \"@farcaster/frame-wagmi-connector\";\n\nfunction App() {\n  const { connect } = useConnect()\n\n  return (\n    <button onClick={() => connect({ connector: farcasterFrame() })}>\n      Connect\n    </button>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Webhook URL in farcaster.json for Farcaster Mini App\nDESCRIPTION: This JSON snippet shows how to define the webhookUrl property in the farcaster.json configuration file for a Farcaster Mini App. The webhookUrl is essential for receiving notification-related events from the Farcaster client.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/notifications.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"accountAssociation\": {\n    \"header\": \"eyJmaWQiOjU0NDgsInR5cGUiOiJjdXN0b2R5Iiwia2V5IjoiMHg2MWQwMEFENzYwNjhGOEQ0NzQwYzM1OEM4QzAzYUFFYjUxMGI1OTBEIn0\",\n    \"payload\": \"eyJkb21haW4iOiJleGFtcGxlLmNvbSJ9\",\n    \"signature\": \"MHg3NmRkOWVlMjE4OGEyMjliNzExZjUzOTkxYTc1NmEzMGZjNTA3NmE5OTU5OWJmOWFmYjYyMzAyZWQxMWQ2MWFmNTExYzlhYWVjNjQ3OWMzODcyMTI5MzA2YmJhYjdhMTE0MmRhMjA4MmNjNTM5MTJiY2MyMDRhMWFjZTY2NjE5OTFj\"\n  },\n  \"frame\": {\n    \"version\": \"1\",\n    \"name\": \"Example App\",\n    \"iconUrl\": \"https://example.com/icon.png\",\n    \"homeUrl\": \"https://example.com\",\n    \"imageUrl\": \"https://example.com/image.png\",\n    \"buttonTitle\": \"Check this out\",\n    \"splashImageUrl\": \"https://example.com/splash.png\",\n    \"splashBackgroundColor\": \"#eeccff\",\n    \"webhookUrl\": \"https://example.com/api/webhook\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Farcaster Frame Wagmi Connector with pnpm\nDESCRIPTION: Command to install the @farcaster/frame-wagmi-connector package using pnpm package manager. This assumes Wagmi has already been installed and set up in the project.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-wagmi-connector/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-wagmi-connector\n```\n\n----------------------------------------\n\nTITLE: Creating a Wallet Connection Component in React\nDESCRIPTION: React component using Wagmi hooks to handle wallet connection. It displays the connected address if a wallet is connected, or a connect button if not.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/wallets.mdx#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { useAccount, useConnect } from 'wagmi'\n\nfunction ConnectMenu() {\n  const { isConnected, address } = useAccount()\n  const { connect, connectors } = useConnect()\n\n  if (isConnected) {\n    return (\n      <>\n        <div>You're connected!\n        <div>Address: {address}</div>\n      </>\n    )\n  }\n\n  return (\n    <button\n      type=\"button\"\n      onClick={() => connect({ connector: connectors[0] })}\n    >\n      Connect\n    </button>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload for frame_added Event in JSON\nDESCRIPTION: Specifies the webhook payload structure for the frame_added event. It includes the event type and notification details with a URL and token for sending notifications.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"frame-added\",\n  \"notificationDetails\": {\n    \"url\": \"https://api.warpcast.com/v1/frame-notifications\",\n    \"token\": \"a05059ef2415c67b08ecceb539201cbc6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload for notifications_enabled Event in JSON\nDESCRIPTION: Specifies the webhook payload structure for the notifications_enabled event, including a new notification URL and token for sending notifications.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"notifications-enabled\",\n  \"notificationDetails\": {\n    \"url\": \"https://api.warpcast.com/v1/frame-notifications\",\n    \"token\": \"a05059ef2415c67b08ecceb539201cbc6\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for frame_added Event Payload\nDESCRIPTION: Defines a TypeScript interface for the frame_added event payload, including an optional notificationDetails property.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntype EventFrameAddedPayload = {\n  event: 'frame_added';\n  notificationDetails?: FrameNotificationDetails;\n};\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for notifications_enabled Event Payload\nDESCRIPTION: Defines a TypeScript interface for the notifications_enabled event payload, including the required notificationDetails property.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\ntype EventNotificationsEnabledPayload = {\n  event: 'notifications_enabled';\n  notificationDetails: FrameNotificationDetails;\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Location Context Types in TypeScript\nDESCRIPTION: Type definitions for different location contexts from which a Mini App can be launched, including cast embeds, notifications, launcher, and channels.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/context.mdx#2025-04-16_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport type CastEmbedLocationContext = {\n  type: 'cast_embed';\n  embed: string;\n  cast: {\n    fid: number;\n    hash: string;\n  };\n};\n\nexport type NotificationLocationContext = {\n  type: 'notification';\n  notification: {\n    notificationId: string;\n    title: string;\n    body: string;\n  };\n};\n\nexport type LauncherLocationContext = {\n  type: 'launcher';\n};\n\nexport type ChannelLocationContext = {\n  type: 'channel';\n  channel: {\n    key: string;\n    name: string;\n    imageUrl?: string;\n  };\n};\n\nexport type LocationContext =\n  | CastEmbedLocationContext\n  | NotificationLocationContext\n  | LauncherLocationContext\n  | ChannelLocationContext;\n```\n\n----------------------------------------\n\nTITLE: Installing @farcaster/frame-core with pnpm\nDESCRIPTION: This command installs the @farcaster/frame-core library using the pnpm package manager. It adds the library to the project's dependencies.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-core/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/core\n```\n\n----------------------------------------\n\nTITLE: Example Cast Embed Location Context\nDESCRIPTION: Example showing the location context structure when a Mini App is launched from a cast embed.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/context.mdx#2025-04-16_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n> sdk.context.location\n{\n  type: \"cast_embed\",\n  cast: {\n    fid: 3621,\n    hash: \"0xa2fbef8c8e4d00d8f84ff45f9763b8bae2c5c544\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Example Notification Location Context\nDESCRIPTION: Example showing the location context structure when a Mini App is launched from a notification.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/context.mdx#2025-04-16_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n> sdk.context.location\n{\n  type: \"notification\",\n  notification: {\n    notificationId: \"f7e9ebaf-92f0-43b9-a410-ad8c24f3333b\"\n    title: \"Yoinked!\",\n    body: \"horsefacts captured the flag from you.\",\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload for notifications_disabled Event in JSON\nDESCRIPTION: Defines the webhook payload structure for the notifications_disabled event, which is triggered when a user disables frame notifications.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"notifications_disabled\"\n}\n```\n\n----------------------------------------\n\nTITLE: Webhook Payload for frame_removed Event in JSON\nDESCRIPTION: Specifies the webhook payload structure for the frame_removed event, which is sent when a user removes a frame.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/specification.mdx#2025-04-16_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"frame-removed\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Farcaster Mini App CLI with Package Managers\nDESCRIPTION: Commands to create a new Farcaster Mini App using different package managers (npm, pnpm, or yarn). Each command initializes a new Mini App project with the necessary scaffolding.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/create-mini-app/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm create @farcaster/mini-app\n# or\npnpm create @farcaster/mini-app\n# or\nyarn create @farcaster/mini-app\n```\n\n----------------------------------------\n\nTITLE: Creating a cloudflared Tunnel to Expose Localhost\nDESCRIPTION: Command to create a temporary cloudflared tunnel that exposes a local server running on port 8080. This generates a public URL that can be used in Warpcast developer tools.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/snippets/exposeLocalhost.mdx#2025-04-16_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncloudflared tunnel --url http://localhost:8080\n```\n\n----------------------------------------\n\nTITLE: Notification Response Properties Table in Markdown\nDESCRIPTION: Defines the structure of the notification response object with three token arrays: successTokens for successful notifications, invalidTokens for permanently invalid tokens, and rateLimitedTokens for temporarily blocked tokens.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/snippets/sendNotificationResponseSchema.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Property          | Type     | Required | Description                                                                                                                                                        |\n|-------------------|----------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\n| successTokens     | string[] | Yes      | Tokens for which the notification succeeded.                                                                                                                                       |\n| invalidTokens     | string[] | Yes      | Tokens which are no longer valid and should never be used again. This could happen if the user disabled notifications but for some reason the Mini App server has no record of it. |\n| rateLimitedTokens | string[] | Yes      | Tokens for which the rate limit was exceeded. Mini App server can try later.                                                                                                       |\n```\n\n----------------------------------------\n\nTITLE: SafeArea Implementation Example\nDESCRIPTION: Example showing how to implement safe area insets in a React component to avoid navigation elements obscuring the view.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/sdk/context.mdx#2025-04-16_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n<div style={{\n  marginTop: context.client.safeAreaInsets.top,\n  marginBottom: context.client.safeAreaInsets.bottom,\n  marginLeft: context.client.safeAreaInsets.left,\n  marginRight: context.client.safeAreaInsets.right,\n}}>\n  ...your app view\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing @farcaster/frame-host with pnpm\nDESCRIPTION: Command to install the @farcaster/frame-host library using the pnpm package manager. This library is used for hosting Mini Apps in the Farcaster ecosystem.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-host/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-host\n```\n\n----------------------------------------\n\nTITLE: Installing Farcaster Frame Host React Native Package\nDESCRIPTION: Command to install the @farcaster/frame-host-react-native package using pnpm package manager. This library allows developers to host Mini Apps within React Native applications in the Farcaster ecosystem.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-host-react-native/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @farcaster/frame-host-react-native\n```\n\n----------------------------------------\n\nTITLE: Installing and Running React TypeScript Frame\nDESCRIPTION: Commands to install dependencies and start the development server using pnpm package manager\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/examples/react-ts/README.md#2025-04-16_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npnpm install\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Creating an Empty Manifest File with Shell Command\nDESCRIPTION: Shell command to create an empty manifest file at the required location within the public directory. This file will later be populated with Mini App configuration.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/pages/docs/guides/publishing.mdx#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ntouch public/.well-known/farcaster.json\n```\n\n----------------------------------------\n\nTITLE: Installing cloudflared via Homebrew for Localhost Tunneling\nDESCRIPTION: Command to install the cloudflared CLI tool using Homebrew. This tool is required to create a secure tunnel that exposes your localhost to the internet.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/site/snippets/exposeLocalhost.mdx#2025-04-16_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nbrew install cloudflared\n```\n\n----------------------------------------\n\nTITLE: Adding composeCast Action in Markdown\nDESCRIPTION: Patch change adding the composeCast action to the package functionality.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-core/CHANGELOG.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- [#169](https://github.com/farcasterxyz/miniapps/pull/169) [`e0554b7`](https://github.com/farcasterxyz/miniapps/commit/e0554b77543f0f176e7125d9cd03b7ff76762e29) Thanks [@deodad](https://github.com/deodad)! - Added composeCast action\n```\n\n----------------------------------------\n\nTITLE: Increasing URL Max Length in Markdown\nDESCRIPTION: Patch change increasing the maximum allowed URL length to 1024 characters.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-core/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [#185](https://github.com/farcasterxyz/miniapps/pull/185) [`c960c03`](https://github.com/farcasterxyz/miniapps/commit/c960c0397c3812ed627f6c2b5ab3927ab02f2366) Thanks [@horsefacts](https://github.com/horsefacts)! - chore: increase URL max length to 1024 characters\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.0.20\nDESCRIPTION: Documents patch change with dependency update to @farcaster/frame-core@0.0.31\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-node/CHANGELOG.md#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.0.20\n\n### Patch Changes\n\n- Updated dependencies [[`c960c03`](https://github.com/farcasterxyz/miniapps/commit/c960c0397c3812ed627f6c2b5ab3927ab02f2366)]:\n  - @farcaster/frame-core@0.0.31\n```\n\n----------------------------------------\n\nTITLE: Refactoring Ethereum Code and Ready Function in Markdown\nDESCRIPTION: Patch changes refactoring Ethereum code into a module, removing duplicate types, and refactoring the ready function into a module.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-core/CHANGELOG.md#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- [#118](https://github.com/farcasterxyz/frames/pull/118) [`11818e0`](https://github.com/farcasterxyz/frames/commit/11818e024da7d12c23c7e90a1c9f19b9d18cd33e) Thanks [@deodad](https://github.com/deodad)! - Refactor eth code into module\n\n- [#118](https://github.com/farcasterxyz/frames/pull/118) [`11818e0`](https://github.com/farcasterxyz/frames/commit/11818e024da7d12c23c7e90a1c9f19b9d18cd33e) Thanks [@deodad](https://github.com/deodad)! - Removed duplicate type, use SignIn.SignInOptions\n\n- [#118](https://github.com/farcasterxyz/frames/pull/118) [`11818e0`](https://github.com/farcasterxyz/frames/commit/11818e024da7d12c23c7e90a1c9f19b9d18cd33e) Thanks [@deodad](https://github.com/deodad)! - refactored ready into module\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for v0.0.11\nDESCRIPTION: Documents multiple patch changes including adding zod dependency, updating dependencies and removing unused devDependencies\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-node/CHANGELOG.md#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.0.11\n\n### Patch Changes\n\n- [#59](https://github.com/farcasterxyz/frames/pull/59) [`507da38`](https://github.com/farcasterxyz/frames/commit/507da38b26340827c3d6958c7ef66ae07faa4cdd) Thanks [@deodad](https://github.com/deodad)! - add zod dependency\n\n- [#68](https://github.com/farcasterxyz/frames/pull/68) [`937fc7c`](https://github.com/farcasterxyz/frames/commit/937fc7cecd66412077f790c92b12750b7ac3a99f) Thanks [@deodad](https://github.com/deodad)! - update dependencies\n\n- [#66](https://github.com/farcasterxyz/frames/pull/66) [`b7624a6`](https://github.com/farcasterxyz/frames/commit/b7624a69fac63f4a533848ec470430c66d8b03e2) Thanks [@deodad](https://github.com/deodad)! - remove unused devDependencies\n```\n\n----------------------------------------\n\nTITLE: Adding MIT License in Markdown\nDESCRIPTION: Patch change adding the MIT license to the project.\nSOURCE: https://github.com/farcasterxyz/miniapps/blob/main/packages/frame-core/CHANGELOG.md#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- [#120](https://github.com/farcasterxyz/frames/pull/120) [`7b9d2e1`](https://github.com/farcasterxyz/frames/commit/7b9d2e1947f824d1e0bb4111ba408a00325d1866) Thanks [@deodad](https://github.com/deodad)! - added MIT license\n```"
  }
]
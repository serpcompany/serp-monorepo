[
  {
    "owner": "fiso64",
    "repo": "slsk-batchdl",
    "content": "TITLE: General Options for sldl Soulseek Downloader\nDESCRIPTION: Comprehensive list of general configuration options for the sldl tool, including path settings, naming formats, download limitations, playlist creation, and file handling options.\n\nLANGUAGE: bash\nCODE:\n```\n-p, --path <path>               Download directory\n--input-type <type>             [csv|youtube|spotify|bandcamp|string|list]\n--name-format <format>          Name format for downloaded tracks. See `--help name-format`\n    \n-n, --number <maxtracks>        Download the first n tracks of a playlist\n-o, --offset <offset>           Skip a specified number of tracks\n-r, --reverse                   Download tracks in reverse order\n-c, --config <path>             Set config file location. Set to 'none' to ignore config\n--profile <names>               Configuration profile(s) to use. See `--help config`.\n--concurrent-downloads <num>    Max concurrent downloads for normal mode (default: 2)\n--write-playlist                Create an m3u playlist file in the output directory\n--playlist-path <path>          Override default path for m3u playlist file\n\n--no-skip-existing              Do not skip downloaded tracks\n--no-write-index                Do not create a file indexing all downloaded tracks\n--index-path <path>             Override default path for sldl index\n--skip-check-cond               Check file conditions when skipping existing files\n--skip-check-pref-cond          Check preferred conditions when skipping existing files  \n--skip-music-dir <path>         Also skip downloading tracks found in a music library by\n                                comparing filenames. Not 100% reliable.\n--skip-not-found                Skip searching for tracks that weren't found on Soulseek\n                                during the last run.\n    \n--listen-port <port>            Port for incoming connections (default: 49998)\n--on-complete <command>         Run a command when a download completes. See `--help\n                                on-complete`\n\n-v, --verbose                   Print extra debug info\n--log-file <path>               Write debug info to a specified file\n--no-progress                   Disable progress bars/percentages, only simple printing\n--print <option>                Print tracks or search results instead of downloading:\n                                'tracks': Print all tracks to be downloaded\n                                'tracks-full': Print extended information about all tracks\n                                'results': Print search results satisfying file conditions\n                                'results-full': Print search results including full paths.\n                                'json': Print first result in json format\n                                'json-all': Print json of all results in sorted order\n                                'link': Print first result slsk:// link\n                                'index': Print sldl index as formatted json\n                                'index-failed': Print failed downloads from sldl index\n```\n\n----------------------------------------\n\nTITLE: Required Arguments for sldl Soulseek Downloader\nDESCRIPTION: Lists the mandatory arguments needed to run the sldl tool, including input source specification and Soulseek login credentials.\n\nLANGUAGE: bash\nCODE:\n```\n<input>                         A url, search string, or path to a local CSV file.\n                                Run `--help input` to view the accepted inputs.\n                                Can also be passed with -i, --input <input>\n--user <username>               Soulseek username\n--pass <password>               Soulseek password\n```\n\n----------------------------------------\n\nTITLE: Sample sldl Configuration File with Credentials and Preferences\nDESCRIPTION: Example configuration file for sldl showing how to set Soulseek credentials, preferred file format, and search speed options.\n\nLANGUAGE: ini\nCODE:\n```\nusername = your-username\npassword = your-password\npref-format = flac\nfast-search = true\n```\n\n----------------------------------------\n\nTITLE: File Condition Options for slsk-batchdl\nDESCRIPTION: Command line options for filtering files based on format, length, bitrate, sample rate, bit depth, and other criteria. Includes both strict requirements and preferred settings for file selection.\n\nLANGUAGE: bash\nCODE:\n```\n--format <formats>              Accepted file format(s), comma-separated, without periods\n--length-tol <sec>              Length tolerance in seconds\n--min-bitrate <rate>            Minimum file bitrate\n--max-bitrate <rate>            Maximum file bitrate\n--min-samplerate <rate>         Minimum file sample rate\n--max-samplerate <rate>         Maximum file sample rate\n--min-bitdepth <depth>          Minimum bit depth\n--max-bitdepth <depth>          Maximum bit depth\n--strict-title                  File name must contain title\n--strict-artist                 File path must contain artist name\n--strict-album                  File path must contain album name\n--banned-users <list>           Comma-separated list of users to ignore\n\n--pref-format <formats>         Preferred file format(s), comma-separated (default: mp3)\n--pref-length-tol <sec>         Preferred length tolerance in seconds (default: 3)\n--pref-min-bitrate <rate>       Preferred minimum bitrate (default: 200)\n--pref-max-bitrate <rate>       Preferred maximum bitrate (default: 2500)\n--pref-min-samplerate <rate>    Preferred minimum sample rate\n--pref-max-samplerate <rate>    Preferred maximum sample rate (default: 48000)\n--pref-min-bitdepth <depth>     Preferred minimum bit depth\n--pref-max-bitdepth <depth>     Preferred maximum bit depth\n--pref-banned-users <list>      Comma-separated list of users to downrank\n\n--strict-conditions             Skip files with missing properties instead of accepting by\n                                default; if --min-bitrate is set, ignores any files with\n                                unknown bitrate. Warning: Available props depend on client\n```\n\n----------------------------------------\n\nTITLE: Search Options for sldl Soulseek Downloader\nDESCRIPTION: Configuration options for controlling how sldl searches for tracks on Soulseek, including search optimization flags, text processing options, user ranking parameters, and fallback to yt-dlp for tracks not found on Soulseek.\n\nLANGUAGE: bash\nCODE:\n```\n--fast-search                   Begin downloading as soon as a file satisfying the preferred\n                                conditions is found. Only for normal download mode.\n--remove-ft                     Remove 'feat.' and everything after before searching\n--no-remove-special-chars       Do not remove special characters before searching\n--remove-brackets               Remove square brackets and their contents before searching\n--regex <regex>                 Remove a regexp from all track titles and artist names.\n                                Optionally specify a replacement regex after a semicolon.\n                                Add 'T:', 'A:' or 'L:' at the start to only apply this to\n                                the track title, artist, or album respectively.\n--artist-maybe-wrong            Performs an additional search without the artist name.\n                                Useful for sources like SoundCloud where \"artist\"\n                                could just be an uploader. Note that when downloading a\n                                YouTube playlist via url, this option is set automatically\n                                on a per-track basis, so it is best kept off in that case.\n-d, --desperate                 Tries harder to find the desired track by searching for the\n                                artist/album/title only, then filtering. (slower search)\n--fails-to-downrank <num>       Number of fails to downrank a user's shares (default: 1)\n--fails-to-ignore <num>         Number of fails to ban/ignore a user's shares (default: 2)\n\n--yt-dlp                        Use yt-dlp to download tracks that weren't found on\n                                Soulseek. yt-dlp must be available from the command line.\n--yt-dlp-argument <str>         The command line arguments when running yt-dlp. Default:\n                                \"{id}\" -f bestaudio/best -cix -o \"{savepath}.%(ext)s\"\n                                Available vars are: {id}, {savedir}, {savepath} (w/o ext).\n                                Note that -x causes yt-dlp to download webms in case ffmpeg\n                                is unavailable.\n\n--search-timeout <ms>           Max search time in ms (default: 6000)\n--max-stale-time <ms>           Max download time without progress in ms (default: 30000)\n--searches-per-time <num>       Max searches per time interval. Higher values may cause\n                                30-minute bans, see `--help search`. (default: 34)\n--searches-renew-time <sec>     Controls how often available searches are replenished.\n                                See `--help search`. (default: 220)\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Command for sldl CLI Tool\nDESCRIPTION: The basic command structure for using the sldl Soulseek downloader tool, showing the standard format with input and options parameters.\n\nLANGUAGE: bash\nCODE:\n```\nUsage: sldl <input> [OPTIONS]\n```\n\n----------------------------------------\n\nTITLE: Configuration Profiles with Conditional Activation\nDESCRIPTION: Example of profile configuration including a lossless profile for FLAC/WAV preferences and conditional profiles that activate based on runtime conditions like input type or download mode.\n\nLANGUAGE: ini\nCODE:\n```\n[lossless]\npref-format = flac,wav\n\n# never automatically cancel album downloads in interactive mode\n[no-stale]\nprofile-cond = interactive && download-mode == \"album\"\nmax-stale-time = 9999999\n\n# download to another location for youtube\n[youtube]\nprofile-cond = input-type == \"youtube\"\npath = ~/downloads/sldl-youtube\n```\n\n----------------------------------------\n\nTITLE: Configuring Preferred File Conditions in INI Format\nDESCRIPTION: Default preferred file conditions configuration for sldl that specifies format preferences, length tolerance, bitrate ranges, and title/album matching requirements.\n\nLANGUAGE: ini\nCODE:\n```\npref-format = mp3\npref-length-tol = 3\npref-min-bitrate = 200\npref-max-bitrate = 2500\npref-max-samplerate = 48000\npref-strict-title = true\npref-strict-album = true\n```\n\n----------------------------------------\n\nTITLE: Configuring a Wishlist Profile in sldl.conf\nDESCRIPTION: INI configuration for setting up an automated wishlist profile in sldl.conf that creates and references an index file to track downloaded items.\n\nLANGUAGE: ini\nCODE:\n```\n[wishlist]\ninput = ~/sldl/wishlist.txt \ninput-type = list\nindex-path = ~/sldl/wishlist-index.sldl\nalbum-parallel-search = true\n```\n\n----------------------------------------\n\nTITLE: CSV File Options for sldl Soulseek Downloader\nDESCRIPTION: Configuration options for working with CSV input files, including column mapping, time format specification, YouTube parsing options, and source file modification settings.\n\nLANGUAGE: bash\nCODE:\n```\n--artist-col                    Artist column name\n--title-col                     Track title column name\n--album-col                     Album column name\n--length-col                    Track length column name\n--album-track-count-col         Album track count column name (sets --album-track-count)\n--yt-desc-col                   Youtube description column (improves --yt-parse)\n--yt-id-col                     Youtube video id column (improves --yt-parse)\n\n--time-format <format>          Time format in Length column of the csv file (e.g h:m:s.ms\n                                for durations like 1:04:35.123). Default: s\n--yt-parse                      Enable if the CSV contains YouTube video titles and channel\n                                names; attempt to parse them into title and artist names.\n--remove-from-source            Remove downloaded tracks from source CSV file\n```\n\n----------------------------------------\n\nTITLE: Spotify Authentication Setup for slsk-batchdl\nDESCRIPTION: Instructions for setting up Spotify authentication to download playlists, albums, or liked songs with slsk-batchdl. Includes steps for obtaining credentials and using them with the tool.\n\nLANGUAGE: bash\nCODE:\n```\nsldl spotify-likes --spotify-id 123456 --spotify-secret 123456 -n 1 --print-tracks\n```\n\nLANGUAGE: bash\nCODE:\n```\nsldl spotify-likes --spotify-id 123456 --spotify-secret 123456 --spotify-refresh 123456 --spotify-token 123456 -n 1 --pt\n```\n\n----------------------------------------\n\nTITLE: Spotify Options for sldl Soulseek Downloader\nDESCRIPTION: Spotify-specific configuration options for the sldl tool, including API credentials for authentication and playlist manipulation settings.\n\nLANGUAGE: bash\nCODE:\n```\n--spotify-id <id>               Spotify client ID\n--spotify-secret <secret>       Spotify client secret\n--spotify-token <token>         Spotify access token\n--spotify-refresh <token>       Spotify refresh token\n--remove-from-source            Remove downloaded tracks from source playlist\n```\n\n----------------------------------------\n\nTITLE: Album Download Options for slsk-batchdl\nDESCRIPTION: Command line options specific to album downloads, including interactive selection, track count filtering, album art retrieval, and folder browsing settings.\n\nLANGUAGE: bash\nCODE:\n```\n-a, --album                     Album download mode: Download a folder\n-t, --interactive               Interactively select folders. See --help shortcuts.\n--album-track-count <num>       Specify the exact number of tracks in the album. Add a + or\n                                - for inequalities, e.g '5+' for five or more tracks.\n--album-art <option>            Retrieve additional images after downloading the album:\n                                'default': No additional images\n                                'largest': Download from the folder with the largest image\n                                'most': Download from the folder containing the most images\n--album-art-only                Only download album art for the provided album\n--no-browse-folder              Do not automatically browse user shares to get all files in\n                                the folder\n--failed-album-path             Path to move all album files to when one of the items from\n                                the directory fails to download. Set to 'delete' to delete\n                                the files instead. Set to 'disable' keep them where they \n                                are. Default: {configured output dir}/failed\n--album-parallel-search         Run album searches in parallel, then download sequentially.\n```\n\n----------------------------------------\n\nTITLE: Aggregate Download Options for slsk-batchdl\nDESCRIPTION: Command line options for aggregate download mode, which finds and downloads all distinct songs associated with the provided artist, album, or title based on specified criteria.\n\nLANGUAGE: bash\nCODE:\n```\n-g, --aggregate                 Aggregate download mode: Find and download all distinct\n                                songs associated with the provided artist, album, or title.\n--aggregate-length-tol <tol>    Max length tolerance in seconds to consider two tracks or\n                                albums equal. (Default: 3)\n--min-shares-aggregate <num>    Minimum number of shares of a track or album for it to be\n                                downloaded in aggregate mode. (Default: 2)\n--relax-filtering               Slightly relax file filtering in aggregate mode to include\n                                more results\n```\n\n----------------------------------------\n\nTITLE: Available Metadata Variables for Tag-Based Naming\nDESCRIPTION: List of variables that can be used in naming formats, sourced from the downloaded file's tags including artist, title, album, and track information.\n\nLANGUAGE: ini\nCODE:\n```\nartist                         First artist\nartists                        Artists, joined with '&'\nalbumartist                    First album artist\nalbumartists                   Album artists, joined with '&'\ntitle                          Track title\nalbum                          Album name\nyear                           Track year\ntrack                          Track number\ndisc                           Disc number\nlength                         Track length (in seconds)\n```\n\n----------------------------------------\n\nTITLE: Downloading a Specific Song with Length and Format Preferences\nDESCRIPTION: Command example showing how to download a specific song by name and length, with a preference for lossless audio formats.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"MC MENTAL @ HIS BEST, length=242\" --pref-format \"flac,wav\"\n```\n\n----------------------------------------\n\nTITLE: Downloading Spotify Playlists and Liked Songs\nDESCRIPTION: Command examples for downloading tracks from Spotify playlists or a user's liked songs collection.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"https://open.spotify.com/playlist/id\"\nsldl \"spotify-likes\"\n```\n\n----------------------------------------\n\nTITLE: Creating a Sample Wishlist Text File for slsk-batchdl\nDESCRIPTION: Sample content for wishlist.txt file showing how to specify individual tracks and albums with specific format requirements.\n\nLANGUAGE: plaintext\nCODE:\n```\n\"Artist - My Favorite Song\"            format=flac\na:\"Artist - Some Album\"                strict-album=true;album-track-count=5\n```\n\n----------------------------------------\n\nTITLE: List File Format for slsk-batchdl\nDESCRIPTION: Example of the list file format used with --input-type=list, showing how to specify inputs and conditions for batch downloads in a text file.\n\nLANGUAGE: ini\nCODE:\n```\n# input                         conditions                    pref. conditions\n\"artist=Artist,album=Album\"     \"format=mp3; br>128\"          \"br >= 320\"\n```\n\n----------------------------------------\n\nTITLE: Interactive Album Download with sldl\nDESCRIPTION: Command for downloading an album in interactive mode, which allows selecting specific folders or files.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"Album Name\" -at\n```\n\n----------------------------------------\n\nTITLE: Interactive Download of All Albums by an Artist\nDESCRIPTION: Command for downloading all albums by a specific artist in interactive mode with global search enabled.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"artist=MC MENTAL\" -a -g -t\n```\n\n----------------------------------------\n\nTITLE: Downloading Albums from a Spotify Playlist\nDESCRIPTION: Command example for downloading full albums from tracks in a Spotify playlist using the -a flag.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"https://open.spotify.com/playlist/id\" -a\n```\n\n----------------------------------------\n\nTITLE: Downloading Tracks from a CSV File with sldl\nDESCRIPTION: Command example showing how to download tracks from a CSV file using sldl.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"tracks.csv\"\n```\n\n----------------------------------------\n\nTITLE: Listing Songs by an Artist Not in Local Library\nDESCRIPTION: Command that prints all songs by a specific artist that are not already in your music library, useful for finding missing tracks.\n\nLANGUAGE: bash\nCODE:\n```\nsldl \"artist=MC MENTAL\" -g --skip-music-dir \"path/to/music\" --print results\n```\n\n----------------------------------------\n\nTITLE: YouTube Options for sldl Soulseek Downloader\nDESCRIPTION: YouTube-specific configuration options for the sldl tool, including API key for authentication and options for handling deleted videos.\n\nLANGUAGE: bash\nCODE:\n```\n--youtube-key <key>             Youtube data API key\n--get-deleted                   Attempt to retrieve titles of deleted videos from wayback\n                                machine. Requires yt-dlp.\n--deleted-only                  Only retrieve & download deleted music.\n```\n\n----------------------------------------\n\nTITLE: Converting Downloaded Files to MP3 with On-Complete Actions\nDESCRIPTION: Multi-step on-complete action that checks if a downloaded file is audio and not already MP3, converts it to MP3 using ffmpeg, then deletes the original file and updates the index with the new path.\n\nLANGUAGE: ini\nCODE:\n```\n# Check if file is audio and not already MP3\non-complete =   1:h:r: cmd /c if {is-audio}==true if /i not {ext}==.mp3 if not exist \"{path-noext}.mp3\" echo true\n\n# Convert to MP3 if check passed\non-complete = + 1:h:r: cmd /c if {stdout}==true (ffmpeg -i \"{path}\" -q:a 0 \"{path-noext}.mp3\" && echo success)\n\n# Delete original and update index if conversion succeeded\non-complete = + 1:h:u: cmd /c if {stdout}==success (del \"{path}\" & echo \"1;{path-noext}.mp3\")\n```\n\n----------------------------------------\n\nTITLE: Queuing Downloaded Files in Foobar2000 with On-Complete Action\nDESCRIPTION: On-complete action configuration that adds downloaded audio files to foobar2000 music player queue. This command executes only for successful downloads and only if the file is detected as audio.\n\nLANGUAGE: ini\nCODE:\n```\non-complete = 1:h: cmd /c if {is-audio}==true start \"\" \"C:\\Program Files\\foobar2000\\foobar2000.exe\" /immediate /add \"{path}\"\n```\n\n----------------------------------------\n\nTITLE: Running slsk-batchdl with the Wishlist Profile\nDESCRIPTION: Bash command to execute sldl with a specified profile, suitable for manual execution or scheduling via cron jobs.\n\nLANGUAGE: bash\nCODE:\n```\nsldl --profile wishlist\n```\n\n----------------------------------------\n\nTITLE: Building and Starting the Docker Container for slsk-batchdl\nDESCRIPTION: Shell commands to clone the repository, build and start the Docker container using docker compose.\n\nLANGUAGE: shell\nCODE:\n```\nclone https://github.com/fiso64/slsk-batchdl\ncd slsk-batchdl\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Accessing the slsk-batchdl Docker Container\nDESCRIPTION: Shell commands to access the running Docker container and start using sldl within the containerized environment.\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose exec sldl sh\nsldl --help\n```\n\n----------------------------------------\n\nTITLE: Configuring Cron Jobs for Automated slsk-batchdl Downloads\nDESCRIPTION: Example crontab configuration that schedules sldl to run every Sunday at 1am to download missing tracks from a Spotify playlist.\n\nLANGUAGE: plaintext\nCODE:\n```\n# min   hour    day     month   weekday command\n0 1 * * 0 sldl https://open.spotify.com/playlist/6sf1WR5grXGJ6dET -c /config -p /data --index-path /data/index.sldl\n```"
  }
]
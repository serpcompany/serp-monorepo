[
  {
    "owner": "scalar",
    "repo": "scalar",
    "content": "TITLE: Installing Scalar API Reference via npm\nDESCRIPTION: Command to install the Scalar API Reference package using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/api-reference\n```\n\n----------------------------------------\n\nTITLE: Customizing Heading Slug Generation\nDESCRIPTION: Function to customize how heading URLs are generated in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// Default behavior - results in hash: #description/heading-slug\n{\n  generateHeadingSlug: (heading) => `#description/${heading.slug}`\n}\n\n// Custom example\n{\n  generateHeadingSlug: (heading) => `#custom-section/${heading.slug}`\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Scalar with Django Views\nDESCRIPTION: This code demonstrates how to integrate Scalar with Django views. It uses the get_filter_parameters function to automatically generate OpenAPI parameters for the ProductViewSet.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# products/views.py\nfrom rest_framework import viewsets\nfrom drf_spectacular.utils import extend_schema, OpenApiParameter\nfrom .models import Product\nfrom .serializers import ProductSerializer\nfrom .filters import ProductFilter\nfrom scalar.get_filter_parameters import get_filter_parameters\n\n@extend_schema(tags=['Products'])\nclass ProductViewSet(viewsets.ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    filterset_class = ProductFilter\n\n    @extend_schema(\n        description=\"List all products\",\n        parameters=get_filter_parameters(ProductFilter)\n    )\n    def list(self, request, *args, **kwargs):\n        return super().list(request, *args, **kwargs)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Basic Django Ninja API Endpoints\nDESCRIPTION: Python code showing how to set up a Django Ninja API with two simple endpoints: an 'add' function that adds two numbers and a 'reverse' function that reverses a string.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom django.contrib import admin\nfrom django.urls import path\nfrom ninja import NinjaAPI\n\napi = NinjaAPI()\n\n@api.get(\"/add\")\ndef add(request, a: int, b: int):\n    return {\"result\": a + b}\n\n@api.get(\"/reverse\")\ndef reverse_string(request, text: str):\n    return {\"result\": text[::-1]}\n\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/\", api.urls),\n]\n\n```\n\n----------------------------------------\n\nTITLE: Defining Environment Variables with x-scalar-environments\nDESCRIPTION: Demonstrates how to specify predefined environment variables for API Client/References to consume. Includes examples for production and staging environments with descriptions, colors, and variable definitions.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nx-scalar-environments:\n  production:\n    description: \"Production environment\"\n    color: \"#0082D0\"\n    # Variables are saved directly to the specification\n    variables:\n      userId:\n        description: \"User ID\"\n        default: \"1234567890\"\n      apiUrl:\n        description: \"API URL\"\n        default: \"https://api.production.example.com\"\n  staging:\n    description: \"Staging environment\"\n    variables:\n      userId: \"1234567890\"\n      apiUrl:\n        description: \"API URL\"\n        default: \"https://api.staging.example.com\"\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Snippetz with Node/Undici\nDESCRIPTION: Demonstrates how to generate a basic HTTP request example using the snippetz library with Node.js and Undici client\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/snippetz/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { snippetz } from '@scalar/snippetz'\n\nconst snippet = snippetz().print('node', 'undici', {\n  url: 'https://example.com',\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Scalar Express API Reference\nDESCRIPTION: Basic implementation of the apiReference middleware in an Express application. This example shows how to mount the API reference documentation at a specific route ('/reference') and point it to an OpenAPI document.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/express/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { apiReference } from '@scalar/express-api-reference'\n\napp.use(\n  '/reference',\n  apiReference({\n    // Put your OpenAPI url here:\n    url: '/openapi.json',\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple API References in Docusaurus\nDESCRIPTION: Advanced configuration example showing how to configure multiple API references in a Docusaurus site. Each plugin instance requires a unique ID and can point to different API specifications with their own routes and labels.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { ScalarOptions } from '@scalar/docusaurus'\n\nplugins: [\n  // First API definition\n  [\n    '@scalar/docusaurus',\n    {\n      // the `id` is required if you have multiple instances of the @scalar/docusaurus plugin\n      id: 'scalar/galaxy',\n      label: 'Scalar',\n      route: '/scalar',\n      showNavLink: true, // optional, default is true\n      configuration: {\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n      },\n    } as ScalarOptions,\n  ],\n  // Second API definition\n  [\n    '@scalar/docusaurus',\n    {\n      // the `id` is required if you have multiple instances of the @scalar/docusaurus plugin\n      id: 'petstore',\n      label: 'Petstore',\n      route: '/petstore',\n      showNavLink: true, // optional, default is true\n      configuration: {\n        url: 'https://petstore3.swagger.io/api/v3/openapi.json',\n      },\n    } as ScalarOptions,\n  ],\n],\n```\n\n----------------------------------------\n\nTITLE: Initializing the Scalar API Client Modal\nDESCRIPTION: TypeScript code showing how to create and use the modal version of the Scalar API Client. Includes examples of opening the modal immediately or opening it with a specific operation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// main.js\nimport { createApiClientApp } from '@/App'\n\n// Initialize\nconst { open } = await createApiClientApp(\n  document.getElementById('scalar-client'),\n  {\n    url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n    proxyUrl: 'https://proxy.scalar.com',\n  },\n)\n\n// Open the API client right-away\nopen()\n\n// Or: Open a specific operation\n// open({\n//   method: 'GET',\n//   path: '/me',\n// })\n```\n\n----------------------------------------\n\nTITLE: Setting up Scalar API Reference Viewer in Django\nDESCRIPTION: This code sets up the Scalar API Reference viewer in a Django project. It includes a function to render the HTML for the viewer and defines URL patterns for the schema and documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n# scalar/scalar.py\nfrom django.http import HttpResponse\nfrom django.urls import path\nfrom drf_spectacular.views import SpectacularAPIView, SpectacularSwaggerView\n\ndef scalar_viewer(request):\n    openapi_url = \"/api/schema/\"\n    title = \"Scalar Api Reference\"\n    scalar_js_url = \"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"\n    scalar_proxy_url = \"\"\n    scalar_favicon_url = \"/static/favicon.ico\"\n\n    html = f\"\"\"\n    <!DOCTYPE html>\n    <html>\n    <head>\n        <title>{title}</title>\n        <meta charset=\"utf-8\"/>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"shortcut icon\" href=\"{scalar_favicon_url}\">\n        <style>\n        body {{\n            margin: 0;\n            padding: 0;\n        }}\n        </style>\n    </head>\n    <body>\n        <noscript>\n            Scalar requires Javascript to function. Please enable it to browse the documentation.\n        </noscript>\n        <script\n            id=\"api-reference\"\n            data-url=\"{openapi_url}\"\n            data-proxy-url=\"{scalar_proxy_url}\"\n            >\n        </script>\n        <script src=\"{scalar_js_url}\"></script>\n    </body>\n    </html>\n    \"\"\"\n    return HttpResponse(html)\n\nurlpatterns_scalar = [\n    path(\"api/schema/\", SpectacularAPIView.as_view(), name=\"schema\"),\n    path(\"api/docs/\", scalar_viewer, name=\"docs\"),\n]\n```\n\n----------------------------------------\n\nTITLE: Setting up Scalar API Reference with HTML and JavaScript\nDESCRIPTION: A basic HTML template showing how to implement the Scalar API Reference documentation UI by loading and initializing it with an OpenAPI document. The example demonstrates the minimal setup required including proper viewport configuration and initialization options.\nSOURCE: https://github.com/scalar/scalar/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <title>Scalar API Reference</title>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n\n  <body>\n    <div id=\"app\"></div>\n\n    <!-- Load the Script -->\n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n\n    <!-- Initialize the Scalar API Reference -->\n    <script>\n      Scalar.createApiReference('#app', {\n        // The URL of the OpenAPI/Swagger document\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n        // Avoid CORS issues\n        proxyUrl: 'https://proxy.scalar.com',\n      })\n    </script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar API Reference with Next.js Pages Router\nDESCRIPTION: JavaScript code snippet for implementing Scalar API Reference using the Next.js Pages Router. This creates a new page that renders the API reference using the React component.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/nextjs.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ApiReferenceReact } from '@scalar/api-reference-react'\n\nimport '@scalar/api-reference-react/style.css'\n\nexport default function References() {\n  return (\n    <ApiReferenceReact\n      configuration={{\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n      }}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: CDN Integration with HTML\nDESCRIPTION: Complete HTML example showing how to integrate Scalar API Reference using CDN with a configuration for theme customization.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <title>Scalar API Reference</title>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <!-- Need a Custom Header? Check out this example: https://codepen.io/scalarorg/pen/VwOXqam -->\n    <!-- Note: We're using our public proxy to avoid CORS issues. You can remove the `data-proxy-url` attribute if you don't need it. -->\n    <script\n      id=\"api-reference\"\n      data-url=\"https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml\"\n      data-proxy-url=\"https://proxy.scalar.com\"></script>\n\n    <!-- Optional: You can set a full configuration object like this: -->\n    <script>\n      var configuration = {\n        theme: 'purple',\n      }\n\n      document.getElementById('api-reference').dataset.configuration =\n        JSON.stringify(configuration)\n    </script>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Theme to Scalar API Reference in Vue\nDESCRIPTION: Demonstrates how to apply a custom theme to the Scalar API Reference component using Vue. The example shows setting the 'moon' theme.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/themes.md#2025-04-22_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n/* theme?: 'alternate' | 'default' | 'moon' | 'purple' | 'solarized' |\n'bluePlanet' | 'saturn' | 'kepler' | 'mars' | 'deepSpace' | laserwave | 'none' */\n<ApiReference :configuration=\"{ theme: 'moon' }\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar API Reference in React Component\nDESCRIPTION: This React component demonstrates how to use the ApiReferenceReact component from the @scalar/api-reference-react package. It includes the necessary import statements and component configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/react.md#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n// src/App.jsx\nimport { ApiReferenceReact } from '@scalar/api-reference-react'\n\nimport '@scalar/api-reference-react/style.css'\n\nfunction App() {\n  return (\n    <ApiReferenceReact\n      configuration={{\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n      }}\n    />\n  )\n}\n\nexport default App\n```\n\n----------------------------------------\n\nTITLE: Configuring Authentication\nDESCRIPTION: Configuration for various authentication methods including API Key, HTTP Bearer, Basic Auth, and OAuth2.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  authentication: {\n    // The OpenAPI file has keys for all security schemes.\n    // Specify which security scheme(s) should be used by default.\n    // Can be a single string:\n    preferredSecurityScheme: 'my_custom_security_scheme',\n    // Or an array for multiple schemes (OR relationship):\n    preferredSecurityScheme: ['scheme1', 'scheme2'],\n    // Or an array of arrays for complex AND/OR relationships:\n    preferredSecurityScheme: [['scheme1', 'scheme2'], 'scheme3'],\n\n    // Define security scheme configurations:\n    securitySchemes: {\n      // For API Key\n      apiKeyHeader: {\n        name: 'X-API-KEY',\n        in: 'header',\n        value: 'tokenValue',\n      },\n      // For HTTP Bearer\n      httpBearer: {\n        token: 'xyz token value',\n      },\n      // For HTTP Basic\n      httpBasic: {\n        username: 'username',\n        password: 'password',\n      },\n      // For OAuth2\n      oauth2: {\n        flows: {\n          authorizationCode: {\n            token: 'auth code token',\n          },\n        },\n      },\n    },\n}\n```\n\n----------------------------------------\n\nTITLE: Generating OpenAPI Parameters from Django FilterSet\nDESCRIPTION: This function automatically generates OpenAPI parameters from a FilterSet class. It handles various filter types and creates appropriate parameter descriptions based on the lookup expressions.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django.md#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# scalar/get_filter_parameters.py\nfrom typing import Type, List\nfrom django_filters import FilterSet\nfrom drf_spectacular.utils import OpenApiParameter\nfrom django_filters.filters import (\n    CharFilter,\n    NumberFilter,\n    DateFilter,\n    BooleanFilter,\n    ChoiceFilter,\n    ModelChoiceFilter,\n)\nfrom rest_framework.fields import DecimalField\n\ndef get_filter_parameters(filter_class: Type[FilterSet]) -> List[OpenApiParameter]:\n    \"\"\"\n    Automatically generate OpenAPI parameters from a FilterSet class.\n    Args:\n        filter_class: The FilterSet class to generate parameters from\n    Returns:\n        List of OpenApiParameter objects\n    \"\"\"\n    parameters = []\n\n    for field_name, filter_instance in filter_class().filters.items():\n        parameter_type = str  # default type\n        parameter_format = None\n        enum = None\n\n        # Determine parameter type based on filter type\n        if isinstance(filter_instance, NumberFilter):\n            parameter_type = (\n                float if isinstance(filter_instance.field, DecimalField) else int\n            )\n        elif isinstance(filter_instance, BooleanFilter):\n            parameter_type = bool\n        elif isinstance(filter_instance, DateFilter):\n            parameter_type = str\n            parameter_format = \"date\"\n        elif isinstance(filter_instance, ChoiceFilter):\n            parameter_type = str\n            enum = [choice[0] for choice in filter_instance.extra[\"choices\"]]\n        elif isinstance(filter_instance, ModelChoiceFilter):\n            parameter_type = int\n            description = (\n                f\"ID of related {filter_instance.field.queryset.model.__name__}\"\n            )\n\n        # Get lookup expression for description\n        lookup_expr = getattr(filter_instance, \"lookup_expr\", \"exact\")\n\n        # Build description\n        if lookup_expr == \"icontains\":\n            description = f\"Filter by {field_name} (case-insensitive, partial match)\"\n        elif lookup_expr == \"gte\":\n            description = f\"Filter by {field_name} (greater than or equal)\"\n        elif lookup_expr == \"lte\":\n            description = f\"Filter by {field_name} (less than or equal)\"\n        elif lookup_expr == \"iexact\":\n            description = f\"Filter by exact {field_name} (case-insensitive)\"\n        else:\n            description = f\"Filter by {field_name}\"\n\n        # Create parameter\n        param = OpenApiParameter(\n            name=field_name,\n            type=parameter_type,\n            location=\"query\",\n            description=description,\n            required=False,\n            enum=enum,\n        )\n\n        parameters.append(param)\n      return parameters\n```\n\n----------------------------------------\n\nTITLE: Creating and Starting a Mock Server in TypeScript\nDESCRIPTION: This TypeScript code demonstrates how to create and start a mock server using @scalar/mock-server. It includes a sample OpenAPI specification, creates mocked routes, and starts the server on port 3000.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/mock-server/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { serve } from '@hono/node-server'\nimport { createMockServer } from '@scalar/mock-server'\n\n// Your OpenAPI document\nconst specification = {\n  openapi: '3.1.1',\n  info: {\n    title: 'Hello World',\n    version: '1.0.0',\n  },\n  paths: {\n    '/foobar': {\n      get: {\n        responses: {\n          '200': {\n            description: 'OK',\n            content: {\n              'application/json': {\n                example: {\n                  foo: 'bar',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n}\n\n// Create the mocked routes\nconst app = await createMockServer({\n  specification,\n  // Custom logging\n  onRequest({ context, operation }) {\n    console.log(context.req.method, context.req.path)\n  },\n})\n\n// Start the server\nserve(\n  {\n    fetch: app.fetch,\n    port: 3000,\n  },\n  (info) => {\n    console.log(`Listening on http://localhost:${info.port}`)\n  },\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar API Reference in Fastify\nDESCRIPTION: Code snippet to integrate Scalar API Reference into a Fastify project. This configures the plugin with a route prefix and additional request hooks for the reference pages.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_7\n\nLANGUAGE: js\nCODE:\n```\n// …\n// Render the API reference\nimport ScalarApiReference from '@scalar/fastify-api-reference'\n\nawait fastify.register(ScalarApiReference, {\n  routePrefix: '/reference',\n  // Additional hooks for the API reference routes. You can provide the onRequest and preHandler hooks\n  hooks: {\n    onRequest: function (request, reply, done) {\n      done()\n    },\n    preHandler: function (request, reply, done) {\n      done()\n    },\n  },\n})\n\n// …\n```\n\n----------------------------------------\n\nTITLE: Implementing Clipboard Copy with useClipboard Hook in Vue\nDESCRIPTION: Example demonstrating how to use the useClipboard hook to copy text to clipboard in a Vue component. Shows both default toast notification setup and how to implement custom notifications. Requires @scalar/use-toasts for default notifications.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-hooks/src/useClipboard/README.md#2025-04-22_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { useClipboard } from '@scalar/use-hooks'\n\nconst { copyToClipboard } = useClipboard()\n\n// Text to be copied\nconst text = 'Hello, Scalar!'\n\n// Optional: Custom notification function\nconst customNotify = (message: string) => console.log(message)\n\n// Use custom notification\n// const { copyToClipboard } = useClipboard({ notify: customNotify })\n</script>\n\n<template>\n  <button @click=\"() => copyToClipboard(text)\">\n    Copy \"{{ text }}\" to clipboard\n  </button>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar API Reference in React\nDESCRIPTION: Example of how to import and use the ApiReferenceReact component in a React application. Includes required style import and basic configuration with a CDN URL for the API specification.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-react/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { ApiReferenceReact } from '@scalar/api-reference-react'\nimport '@scalar/api-reference-react/style.css'\n\nfunction App() {\n  return (\n    <ApiReferenceReact\n      configuration={{\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n      }}\n    />\n  )\n}\n\nexport default App\n```\n\n----------------------------------------\n\nTITLE: Updating References Configuration\nDESCRIPTION: TypeScript example demonstrating how to update the API reference configuration dynamically by dispatching the scalar:update-references-config event.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { type ReferenceProps } from './types'\n\nconst ev = new CustomEvent('scalar:update-references-config', {\n  detail: {\n    configuration: {\n      url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n    },\n  } satisfies ReferenceProps,\n})\ndocument.dispatchEvent(ev)\n```\n\n----------------------------------------\n\nTITLE: Integrating Scalar API Reference with FastAPI Application\nDESCRIPTION: This Python code demonstrates how to integrate Scalar API reference documentation into a FastAPI application. It imports necessary modules, creates a FastAPI app, defines routes, and sets up the Scalar API reference endpoint.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastapi/README.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom fastapi import FastAPI\nfrom scalar_fastapi import get_scalar_api_reference\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/scalar\", include_in_schema=False)\nasync def scalar_html():\n    return get_scalar_api_reference(\n        openapi_url=app.openapi_url,\n        title=app.title,\n    )\n```\n\n----------------------------------------\n\nTITLE: Configuration Options for Scalar API Client\nDESCRIPTION: TypeScript interface defining the configuration options available for the Scalar API Client. Includes options for specifying the OpenAPI document, proxy URL, theme, sidebar visibility, and search hotkey.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n/** Configuration options for the Scalar API client */\nexport type ClientConfiguration = {\n  /** The Swagger/OpenAPI document to render */\n  spec: SpecConfiguration\n  /** Pass in a proxy to the API client */\n  proxyUrl?: string\n  /** Pass in a theme API client */\n  themeId?: string\n  /** Whether to show the sidebar */\n  showSidebar?: boolean\n  /** Whether dark mode is on or off initially (light mode) */\n  // darkMode?: boolean\n  /** Key used with CTRL/CMD to open the search modal (defaults to 'k' e.g. CMD+k) */\n  searchHotKey?:\n    | 'a'\n    | 'b'\n    | 'c'\n    | 'd'\n    | 'e'\n    | 'f'\n    | 'g'\n    | 'h'\n    | 'i'\n    | 'j'\n    | 'k'\n    | 'l'\n    | 'm'\n    | 'n'\n    | 'o'\n    | 'p'\n    | 'q'\n    | 'r'\n    | 's'\n    | 't'\n    | 'u'\n    | 'v'\n    | 'w'\n    | 'x'\n    | 'y'\n    | 'z'\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar with Actix Web Server\nDESCRIPTION: Complete example of setting up Scalar documentation with Actix web server. Includes route handlers for documentation and OpenAPI specification, along with server configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/rust.md#2025-04-22_snippet_2\n\nLANGUAGE: rust\nCODE:\n```\nuse actix_web::{get, App, HttpResponse, HttpServer, Responder};\nuse scalar_doc::scalar_actix::ActixDocumentation;\n\n#[get(\"/\")]\nasync fn doc() -> impl Responder {\n    ActixDocumentation::new(\"Api Documentation title\", \"/openapi\")\n        .theme(scalar_doc::Theme::Kepler)\n        .service()\n}\n\n#[get(\"/openapi\")]\nasync fn openapi() -> impl Responder {\n    let open = include_str!(\"openapi.json\");\n    HttpResponse::Ok().body(open)\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(doc).service(openapi))\n        .bind((\"127.0.0.1\", 8080))?\n        .run()\n        .await\n}\n```\n\n----------------------------------------\n\nTITLE: Sanitizing OpenAPI Specification\nDESCRIPTION: Shows how to use the sanitize function to ensure an OpenAPI document is valid and complete by adding missing required properties and normalizing security schemes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sanitize } from '@scalar/openapi-parser'\n\nconst result = sanitize({\n  info: {\n    title: 'Hello World',\n  },\n})\n\nconsole.log(result)\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with Swashbuckle\nDESCRIPTION: C# code snippet for configuring Scalar API Reference with Swashbuckle, including setting up the service dependencies and mapping the appropriate routes with custom template.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger(options =>\n    {\n        options.RouteTemplate = \"/openapi/{documentName}.json\";\n    });\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Default Environment with x-scalar-active-environment\nDESCRIPTION: Shows how to specify the default active environment that users will see when accessing the API documentation. If not set, the first environment from x-scalar-environments becomes the default.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nx-scalar-active-environment: staging\n```\n\n----------------------------------------\n\nTITLE: Adding a Request Proxy for API Client\nDESCRIPTION: HTML example demonstrating how to add a proxy URL to avoid CORS issues when making API requests.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script\n  id=\"api-reference\"\n  type=\"application/json\"\n  data-proxy-url=\"https://proxy.scalar.com\">\n  { … }\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar API Reference with Next.js App Router\nDESCRIPTION: JavaScript code snippet for implementing Scalar API Reference using the Next.js App Router. This creates a new route that renders the API reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/nextjs.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// app/reference/route.js\nimport { ApiReference } from '@scalar/nextjs-api-reference'\n\nconst config = {\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n}\n\nexport const GET = ApiReference(config)\n```\n\n----------------------------------------\n\nTITLE: Using useApiClientModal Hook in React Components\nDESCRIPTION: Demonstrates how to use the useApiClientModal hook to access the API client modal functionality from any component within the provider. This example shows how to open the modal for a specific API endpoint when a button is clicked.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client-react/README.md#2025-04-22_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useApiClientModal } from '@scalar/api-client-react'\n\nconst client = useApiClientModal()\n\nreturn (\n  <button onClick={() => client?.open({ path: '/auth/token', method: 'get' })}>\n    Click me to open the Api Client\n  </button>\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar API Reference with Direct Document Passing in NestJS\nDESCRIPTION: Code example showing how to set up the apiReference middleware in a NestJS application by directly passing an OpenAPI/Swagger document created with NestJS Swagger module.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger'\nimport { apiReference } from '@scalar/nestjs-api-reference'\n\n/* ... */\nconst app = await NestFactory.create(AppModule)\n\nconst config = new DocumentBuilder()\n  .setTitle('Cats example')\n  .setDescription('The cats API description')\n  .setVersion('1.0')\n  .addTag('cats')\n  .build()\n\nconst document = SwaggerModule.createDocument(app, config)\n/* ... */\n\nconst OpenApiSpecification =\n  /* … */\n\n  app.use(\n    '/reference',\n    apiReference({\n      content: document,\n    }),\n  )\n```\n\n----------------------------------------\n\nTITLE: Creating a basic Fastify server in Node.js\nDESCRIPTION: A minimal implementation of a Fastify server that sets up a single route and starts listening on port 3000. This example uses ECMAScript modules for imports.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n// index.js\nimport Fastify from 'fastify'\n\n// Instantiate the framework\nconst fastify = Fastify({\n  logger: true,\n})\n\n// Declare a route\nfastify.get('/', function (request, reply) {\n  reply.send({ hello: 'world' })\n})\n\n// Run the server\nfastify.listen({ port: 3000 }, function (err, address) {\n  if (err) {\n    fastify.log.error(err)\n    process.exit(1)\n  }\n\n  console.log(`Fastify is now listening on ${address}`)\n})\n```\n\n----------------------------------------\n\nTITLE: Converting Postman Collection to OpenAPI using TypeScript\nDESCRIPTION: This TypeScript code snippet demonstrates how to use the convert function from the @scalar/postman-to-openapi package. It converts a Postman collection (myPostmanCollection) to OpenAPI format and logs the result.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/postman-to-openapi/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { convert } from '@scalar/postman-to-openapi'\n\n// Free the postman!\nconst result = await convert(myPostmanCollection)\n\nconsole.log(result)\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with Microsoft.AspNetCore.OpenApi\nDESCRIPTION: C# code snippet showing how to configure Scalar API Reference with Microsoft's OpenApi library, adding the service during startup and mapping routes for development environment.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddOpenApi();\n\nif (app.Environment.IsDevelopment())\n{\n    app.MapOpenApi();\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 Authentication in Scalar\nDESCRIPTION: C# code showing how to pre-fill OAuth2 authentication details such as client ID and scopes for Scalar API Reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_12\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    options\n        .WithOAuth2Authentication(oauth =>\n        {\n            oauth.ClientId = \"your-client-id\";\n            oauth.Scopes = [\"profile\"];\n        });\n});\n```\n\n----------------------------------------\n\nTITLE: Using Pipeline Syntax for OpenAPI Operations\nDESCRIPTION: Demonstrates how to use the pipeline syntax to chain multiple operations on an OpenAPI specification, including loading, upgrading, and filtering.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openapi } from '@scalar/openapi-parser'\n\nconst specification = …\n\n// New pipeline …\nconst result = openapi()\n  // loads the specification …\n  .load(specification)\n  // upgrades to OpenAPI 3.1 …\n  .upgrade()\n  // removes all internal operations …\n  .filter((schema) => !schema?.['x-internal'])\n  // done!\n  .get()\n```\n\n----------------------------------------\n\nTITLE: Resolving References in OpenAPI Specification\nDESCRIPTION: Shows how to dereference an OpenAPI specification using the dereference function from the Scalar OpenAPI Parser.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { dereference } from '@scalar/openapi-parser'\n\nconst specification = `{\n  \"openapi\": \"3.1.0\",\n  \"info\": {\n    \"title\": \"Hello World\",\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {}\n}`\n\nconst { schema, errors } = await dereference(specification)\n```\n\n----------------------------------------\n\nTITLE: Complete Example of Scalar Version Configuration\nDESCRIPTION: Full implementation showing the integration of API versioning, OpenAPI document generation, and Scalar configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\nstring[] versions = [\"v1\", \"v2\"];\n\nforeach (var version in versions)\n{\n  builder.Services.Configure<ScalarOptions>(options => options.AddDocument(version));\n  builder.Services.AddOpenApi(version, options =>\n  {\n    // Add the appropriate API version information to the document\n    options.AddDocumentTransformer((document, context, _) =>\n    {\n      var descriptionProvider = context.ApplicationServices.GetRequiredService<IApiVersionDescriptionProvider>();\n      var versionDescription = descriptionProvider.ApiVersionDescriptions.FirstOrDefault(x => x.GroupName == version);\n      document.Info.Version = versionDescription?.ApiVersion.ToString();\n      return Task.CompletedTask;\n    });\n\n    // Indicate if the API is deprecated\n    options.AddOperationTransformer((operation, context, _) =>\n    {\n      var apiDescription = context.Description;\n      operation.Deprecated = apiDescription.IsDeprecated();\n      return Task.CompletedTask;\n    });\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Setup for Scalar API Reference\nDESCRIPTION: Basic HTML implementation to initialize Scalar API Reference using CDN. Includes viewport setup and basic configuration for OpenAPI document loading with proxy support.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <title>Scalar API Reference</title>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n\n  <body>\n    <div id=\"app\"></div>\n\n    <!-- Load the Script -->\n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n\n    <!-- Initialize the Scalar API Reference -->\n    <script>\n      Scalar.createApiReference('#app', {\n        // The URL of the OpenAPI/Swagger document\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n        // Avoid CORS issues\n        proxyUrl: 'https://proxy.scalar.com',\n      })\n    </script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Multiple OpenAPI Sources Configuration\nDESCRIPTION: Configure multiple OpenAPI documents with titles and slugs for distinction.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', {\n  sources: [\n    {\n      title: 'Scalar Galaxy',\n      slug: 'scalar-galaxy',\n      url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n    },\n    {\n      url: 'https://example.com/openapi.json',\n    },\n    {\n      content: '{ \"openapi\": \"3.1.1\", … }',\n    }\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Validating API Response Data with Zod Schema in TypeScript\nDESCRIPTION: Demonstrates how to use the request function with a zod schema to validate the response data from a GET request.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = await request({\n  disableAuth: true,\n  url: 'https://galaxy.scalar.com/planets/1',\n  method: 'get',\n  schema: z.object({\n    id: z.number(),\n    name: z.string(),\n    description: z.string(),\n    image: z.string(),\n    creator: z.object({\n      id: z.number(),\n      name: z.string(),\n      email: z.string().z.email(),\n    }),\n  }),\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Scalar API Reference Initialization\nDESCRIPTION: Shows how to initialize Scalar API Reference with basic configuration in a standalone HTML file.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', {\n  // Your configuration goes here…\n  url: '…'\n})\n```\n\n----------------------------------------\n\nTITLE: Making an Authenticated GET Request with Access Token in TypeScript\nDESCRIPTION: Demonstrates how to make an authenticated GET request using an access token and validating the response with a zod schema.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = await request({\n  accessToken: 'MY_SECRET_TOKEN',\n  baseUrl: 'https://galaxy.scalar.com',\n  url: '/me',\n  method: 'get',\n  schema: z.object({\n    id: z.number(),\n    name: z.string(),\n    email: z.string().z.email(),\n  }),\n})\n```\n\n----------------------------------------\n\nTITLE: Registering Scalar API Reference with Fastify\nDESCRIPTION: Basic example of how to register the Scalar API reference plugin with a Fastify application, specifying a route prefix for the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastify/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nawait fastify.register(import('@scalar/fastify-api-reference'), {\n  routePrefix: '/reference',\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Operations Sorting\nDESCRIPTION: Configuration for sorting operations either alphabetically, by method, or using a custom sorting function.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  operationsSorter: 'alpha'\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  operationsSorter: (a, b) => {\n    const methodOrder = ['GET', 'POST', 'PUT', 'DELETE']\n    const methodComparison = methodOrder.indexOf(a.httpVerb) - methodOrder.indexOf(b.httpVerb)\n\n    if (methodComparison !== 0) {\n      return methodComparison\n    }\n\n    return a.path.localeCompare(b.path)\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing OpenAPI Route Handler in Next.js\nDESCRIPTION: Configuration code for setting up the OpenAPI route handler in a Next.js application. The file should be placed in app/api/openapi/[[...openapi]] directory structure.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/nextjs-openapi/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// app/api/openapi/[[...slug]]/route.ts\nimport { OpenAPI } from '@scalar/nextjs-openapi'\n\nexport const GET = OpenAPI()\n```\n\n----------------------------------------\n\nTITLE: Configuring Swagger and Static Files in ASP.NET Core\nDESCRIPTION: This code snippet shows how to configure Swagger/OpenAPI and static file serving in an ASP.NET Core application. It includes options for both Swashbuckle and NSwag, and sets up the necessary middleware.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_18\n\nLANGUAGE: csharp\nCODE:\n```\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddControllers();\n    \n    // Using Swashbuckle\n    services.AddSwaggerGen(c =>\n    {\n        c.SwaggerDoc(\"v1\", new OpenApiInfo { Title = \"My API\", Version = \"v1\" });\n    });\n    \n    // OR using NSwag\n    services.AddOpenApiDocument();\n}\n\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env)\n{\n    // Enable the endpoint for generating the OpenAPI documents\n    app.UseSwagger();\n    \n    // Required for serving static scalar files\n    app.UseStaticFiles();\n    \n    // Other middleware\n    app.UseRouting();\n    app.UseEndpoints(endpoints =>\n    {\n        endpoints.MapControllers();\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Theme\nDESCRIPTION: Configuration for setting the color scheme theme of the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  theme: 'default'\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Scalar Options with Fluent API\nDESCRIPTION: C# code demonstrating how to customize Scalar using both the fluent API and object initializer syntax, allowing for UI personalization.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    // Fluent API\n    options\n        .WithTitle(\"Custom API\")\n        .WithSidebar(false);\n\n    // Object initializer\n    options.Title = \"Custom API\";\n    options.ShowSidebar = false;\n});\n\n// Or with HttpContext\napp.MapScalarApiReference((options, httpContext) =>\n{\n    // Fluent API\n    options\n        .WithTitle(\"Custom API\")\n        .WithSidebar(false);\n\n    // Object initializer\n    options.Title = \"Custom API\";\n    options.ShowSidebar = false;\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with NSwag\nDESCRIPTION: C# code snippet for setting up Scalar API Reference with NSwag, including the required services and route configuration for OpenAPI document access.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddOpenApiDocument();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseOpenApi(options =>\n    {\n        options.Path = \"/openapi/{documentName}.json\";\n    });\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Vue.js Integration Example\nDESCRIPTION: A simple Vue.js component example showing how to import and use the ApiReference component with its required styles.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { ApiReference } from '@scalar/api-reference'\nimport '@scalar/api-reference/style.css'\n</script>\n\n<template>\n  <ApiReference />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTTP Basic and Bearer Authentication in Scalar\nDESCRIPTION: C# code demonstrating how to pre-fill HTTP Basic and Bearer authentication credentials for Scalar API Reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_13\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    // Basic\n    options\n        .WithHttpBasicAuthentication(basic =>\n        {\n            basic.Username = \"your-username\";\n            basic.Password = \"your-password\";\n        });\n\n    // Bearer\n    options\n        .WithHttpBearerAuthentication(bearer =>\n        {\n            bearer.Token = \"your-bearer-token\";\n        });\n});\n```\n\n----------------------------------------\n\nTITLE: Naming Additional Properties with x-additionalPropertiesName\nDESCRIPTION: Shows how to add a custom attribute name to additionalProperties in a schema using the x-additionalPropertiesName extension, providing more descriptive documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\ncomponents:\n  schemas:\n    Planet:\n      required:\n        - name\n      properties:\n        name:\n          type: string\n      additionalProperties:\n        x-additionalPropertiesName: anyCustomAttribute\n        type: string\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Code Samples with x-codeSamples\nDESCRIPTION: Demonstrates how to provide custom code examples for specific operations, such as showing the use of a custom SDK. Example shows adding a ValTown JS SDK sample to a POST endpoint.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Val Town API\n  version: 1.0\npaths:\n  '/v1/eval':\n    post:\n      x-codeSamples:\n      - label: ValTown JS SDK\n        lang: JavaScript\n        source: |-\n          import ValTown from '@valtown/sdk';\n\n          const valTown = new ValTown();\n\n          async function main() {\n            const valRunAnonymousResponse = await valTown.vals.runAnonymous({ code: 'console.log(1);' });\n\n            console.log(valRunAnonymousResponse);\n          }\n\n          main();\n```\n\n----------------------------------------\n\nTITLE: Hiding Operations with x-scalar-ignore\nDESCRIPTION: Shows how to hide specific operations from the reference documentation using the x-scalar-ignore extension. This can be applied to individual operations or entire tags.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\npaths:\n  '/planets':\n    get:\n      summary: Get all planets\n    post:\n      summary: Create a new planet\n      x-scalar-ignore: true\n```\n\n----------------------------------------\n\nTITLE: Implementing Swagger Documentation in ElysiaJS with TypeScript\nDESCRIPTION: This code snippet demonstrates how to integrate Swagger documentation into an ElysiaJS application. It imports the necessary modules, initializes an Elysia instance, applies the swagger plugin, defines simple GET and POST routes, and starts the server on port 8080. The Swagger documentation is accessible at http://localhost:8080/swagger.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/elysiajs.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { swagger } from '@elysiajs/swagger'\nimport { Elysia } from 'elysia'\n\nnew Elysia()\n  .use(swagger())\n  .get('/', () => 'hi')\n  .post('/hello', () => 'world')\n  .listen(8080)\n\n// open http://localhost:8080/swagger\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with Axum Router in Rust\nDESCRIPTION: Sets up an API router using Aide and Scalar to generate OpenAPI documentation. Configures a route handler with security requirements and documentation endpoints.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/rust.md#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nuse aide::{\n    axum::{\n        routing::{get_with},\n        ApiRouter, IntoApiResponse,\n    },\n    openapi::OpenApi,\n    scalar::Scalar,\n};\n\n// …\n\nlet router: ApiRouter = ApiRouter::new()\n    .api_route_with(\n        \"/\",\n        get_with(\n            Scalar::new(\"/docs/private/api.json\")\n                .with_title(\"Aide Axum\")\n                .axum_handler(),\n            |op| op.description(\"This documentation page.\"),\n        ),\n        |p| p.security_requirement(\"ApiKey\"),\n    )\n\n// …\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Font with Google Fonts in Scalar API Reference\nDESCRIPTION: Demonstrates how to use a custom font (Roboto) from Google Fonts with the Scalar API Reference CDN. It includes disabling default fonts and setting up the configuration object.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/themes.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <!-- Link to the font on Google -->\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Roboto\"\n      rel=\"stylesheet\" />\n    <!-- Overwrite the scalar font variable -->\n    <style>\n      :root {\n        --scalar-font: 'Roboto', sans-serif;\n      }\n    </style>\n  </head>\n  <body>\n    <!-- Pass the custom configuration object -->\n    <script>\n      var configuration = {\n        theme: 'kepler',\n        // Do not use the default fonts from the Scalar CDN\n        withDefaultFonts: 'false',\n      }\n    </script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuration Update Implementation\nDESCRIPTION: TypeScript example showing how to update the configuration of an existing Scalar API Reference instance.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst app = Scalar.createApiReference('#app', {\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n})\n\n// Updating the configuration\napp.updateConfiguration({\n  url: 'https://petstore.swagger.io/v2/swagger.json',\n})\n```\n\n----------------------------------------\n\nTITLE: Upgrading OpenAPI Specification Version\nDESCRIPTION: Demonstrates how to upgrade an OpenAPI specification to the latest version using the upgrade function.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { upgrade } from '@scalar/openapi-parser'\n\nconst { specification } = upgrade({\n  swagger: '2.0',\n  info: {\n    title: 'Hello World',\n    version: '1.0.0',\n  },\n  paths: {},\n})\n\nconsole.log(specification.openapi)\n// Output: 3.1.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal API Endpoint for Scalar API Reference in C#\nDESCRIPTION: This snippet demonstrates how to set up a minimal API endpoint for Scalar API Reference using the MapScalarApiReference method. It also shows how to apply authorization settings to the endpoint.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_17\n\nLANGUAGE: csharp\nCODE:\n```\napp\n  .MapScalarApiReference()\n  .AllowAnonymous();\n```\n\n----------------------------------------\n\nTITLE: OpenAPI URL Configuration\nDESCRIPTION: Configure Scalar API Reference using a URL to fetch the OpenAPI document.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', {\n  url: '/openapi.json'\n})\n```\n\n----------------------------------------\n\nTITLE: Complete Vue.js Integration with Configuration\nDESCRIPTION: Advanced Vue.js example showing how to use the ApiReference component with custom configuration for specifying an OpenAPI URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_7\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { ApiReference } from '@scalar/api-reference'\nimport '@scalar/api-reference/style.css'\n</script>\n\n<template>\n  <ApiReference\n    :configuration=\"{\n      url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n    }\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Customizing Model Slug Generation\nDESCRIPTION: Function to customize how model URLs are generated in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// Default behavior - results in hash: #model/model-name\n{\n  generateModelSlug: (model) => slug(model.name)\n}\n\n// Custom example - results in hash: #model/custom-prefix-model-name\n{\n  generateModelSlug: (model) => `custom-prefix-${model.name.toLowerCase()}`\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Django URL Patterns with Scalar\nDESCRIPTION: This code shows how to configure Django URL patterns to include the Scalar API Reference viewer. It combines the default router URLs with the Scalar-specific URLs.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# myapi/urls.py\nfrom django.contrib import admin\nfrom django.urls import path, include\nfrom rest_framework.routers import DefaultRouter\nfrom scalar.scalar import urlpatterns_scalar\nfrom products.views import ProductViewSet\n\nrouter = DefaultRouter()\nrouter.register('products', ProductViewSet)\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', include(router.urls)),\n] + urlpatterns_scalar\n```\n\n----------------------------------------\n\nTITLE: Indicating Endpoint Stability with x-scalar-stability\nDESCRIPTION: Demonstrates how to show the stability status of an endpoint by setting the x-scalar-stability extension to 'stable', 'experimental', or 'deprecated'.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\npaths:\n  '/planets':\n    get:\n      summary: Get all planets\n    post:\n      summary: Create a new planet\n      x-scalar-stability: 'experimental'\n```\n\n----------------------------------------\n\nTITLE: Adding Global Security Requirement for Bearer Authentication\nDESCRIPTION: Extends the OpenApiDocumentTransformer to add a global security requirement for Bearer authentication across all endpoints.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\noptions.AddDocumentTransformer((document, _, _) =>\n{\n    var securityScheme = new OpenApiSecurityScheme\n    {\n        Type = SecuritySchemeType.Http,\n        In = ParameterLocation.Header,\n        Scheme = \"bearer\"\n    };\n    document.Components ??= new OpenApiComponents();\n    document.Components.SecuritySchemes.Add(JwtBearerDefaults.AuthenticationScheme, securityScheme);\n\n    // Adds a global security requirement\n    var referenceScheme = new OpenApiSecurityScheme\n    {\n        Reference = new OpenApiReference\n        {\n            Id = JwtBearerDefaults.AuthenticationScheme,\n            Type = ReferenceType.SecurityScheme\n        }\n    };\n    \n    document.SecurityRequirements.Add(new OpenApiSecurityRequirement\n    {\n        [referenceScheme] = []\n    });\n\n    return Task.CompletedTask;\n});\n```\n\n----------------------------------------\n\nTITLE: Combined Scalar Configuration with Multiple Documents and Dynamic Base URL\nDESCRIPTION: This comprehensive example shows how to configure Scalar with multiple OpenAPI documents and dynamic base server URL detection. It demonstrates how to effectively combine multiple configuration options.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/subpath-deployment.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddOpenApi();\n\nvar app = builder.Build();\n\napp.MapScalarApiReference(options => {\n    options\n      .AddDocuments(\"v1\", \"v2\")\n      .WithDynamicBaseServerUrl();\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with FastEndpoints\nDESCRIPTION: C# code snippet for integrating Scalar API Reference with FastEndpoints, showing the setup for Swagger document generation and Scalar routing.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.SwaggerDocument();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwaggerGen(options =>\n    {\n        options.Path = \"/openapi/{documentName}.json\";\n    });\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Scalar Docusaurus Plugin in TypeScript\nDESCRIPTION: Basic configuration example for adding the Scalar plugin to a Docusaurus site. It sets up a single API reference with a label, route, visibility settings, and configuration URL pointing to a YAML specification.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { ScalarOptions } from '@scalar/docusaurus'\n\nplugins: [\n  [\n    '@scalar/docusaurus',\n    {\n      label: 'Scalar',\n      route: '/scalar',\n      showNavLink: true, // optional, default is true\n      configuration: {\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n      },\n    } as ScalarOptions,\n  ],\n],\n```\n\n----------------------------------------\n\nTITLE: Integrating Scalar API Reference with Django Ninja\nDESCRIPTION: Updated Python code that integrates Scalar API Reference with Django Ninja by importing ScalarViewer and configuring the API with documentation settings.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom django.contrib import admin\nfrom django.urls import path\nfrom ninja import NinjaAPI\nfrom scalar_django_ninja import ScalarViewer\n\napi = NinjaAPI(\n    version=\"1.0.0\",\n    title=\"API Reference\",\n    description=\"API Reference for the Scalar Django Ninja Plugin\",\n    docs=ScalarViewer(),\n    docs_url=\"/docs/\"\n)\n\n@api.get(\"/add\")\ndef add(request, a: int, b: int):\n    return {\"result\": a + b}\n\n@api.get(\"/reverse\")\ndef reverse_string(request, text: str):\n    return {\"result\": text[::-1]}\n\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/\", api.urls),\n]\n\n```\n\n----------------------------------------\n\nTITLE: Creating a Mock Server with Authentication in TypeScript\nDESCRIPTION: This TypeScript code shows how to create a mock server with authentication support. It defines security schemes in the OpenAPI document and demonstrates how the mock server validates authentication.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/mock-server/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { serve } from '@hono/node-server'\nimport { createMockServer } from '@scalar/mock-server'\n\n// Your OpenAPI document\nconst specification = {\n  openapi: '3.1.1',\n  info: {\n    title: 'Hello World',\n    version: '1.0.0',\n  },\n  paths: {\n    '/secret': {\n      get: {\n        security: [\n          {\n            bearerAuth: [],\n          },\n          {\n            apiKey: [],\n          },\n        ],\n        responses: {\n          '200': {\n            description: 'OK',\n            content: {\n              'application/json': {\n                example: {\n                  foo: 'bar',\n                },\n              },\n            },\n          },\n          '401': {\n            description: 'Unauthorized',\n            content: {\n              'application/json': {\n                example: {\n                  error: 'Unauthorized',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  components: {\n    securitySchemes: {\n      bearerAuth: {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n      },\n      apiKey: {\n        type: 'apiKey',\n        in: 'header',\n        name: 'X-API-Key',\n      },\n    },\n  },\n}\n\n// Create the mocked routes\nconst app = await createMockServer({\n  specification,\n  // Custom logging\n  onRequest({ context, operation }) {\n    console.log(context.req.method, context.req.path)\n  },\n})\n\n// Start the server\nserve(\n  {\n    fetch: app.fetch,\n    port: 3000,\n  },\n  (info) => {\n    console.log(`Listening on http://localhost:${info.port}`)\n  },\n)\n```\n\n----------------------------------------\n\nTITLE: Manual Mounting Implementation\nDESCRIPTION: TypeScript example demonstrating manual mounting of Scalar API Reference with separate mount step.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst app = Scalar.createApiReference({\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n})\n\n// Mounting\napp.mount('#app')\n```\n\n----------------------------------------\n\nTITLE: Direct OpenAPI Content Configuration\nDESCRIPTION: Initialize API Reference by directly passing OpenAPI content as a string.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', {\n  content: `{\n    \"openapi\": \"3.1.0\",\n    \"info\": {\n      \"title\": \"Hello World\",\n      \"version\": \"1.0.0\"\n    },\n    \"paths\": {\n      // …\n    }\n  }`\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Hidden HTTP Clients\nDESCRIPTION: Controls visibility of HTTP clients in the documentation by specifying which clients to hide.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  hiddenClients: []\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  hiddenClients: ['fetch']\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  hiddenClients: ['libcurl', 'clj_http', 'httpclient', 'restsharp', 'native', 'http1.1', 'asynchttp', 'nethttp', 'okhttp', 'unirest', 'xhr', 'axios', 'fetch', 'jquery', 'okhttp', 'native', 'request', 'unirest', 'axios', 'fetch', 'nsurlsession', 'cohttp', 'curl', 'guzzle', 'http1', 'http2', 'webrequest', 'restmethod', 'python3', 'requests', 'httr', 'native', 'curl', 'httpie', 'wget', 'nsurlsession', 'undici']\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  hiddenClients: true\n}\n```\n\n----------------------------------------\n\nTITLE: Using AddDocuments for Multiple API Versions\nDESCRIPTION: Shows how to add multiple API versions at once using the AddDocuments method.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nstring[] versions = [\"v1\", \"v2\", \"v3\"];\n\napp.MapScalarApiReference(options =>\n{\n    // Adds multiple documents using default route patterns\n    options.AddDocuments(versions);\n\n    // Alternative syntax for multiple documents\n    options.AddDocuments(\"v4\", \"v5\", \"v6\");\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Default HTTP Client in Scalar\nDESCRIPTION: Specifies the default HTTP client configuration for API examples using targetKey and clientKey properties.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  defaultHttpClient: {\n    targetKey: 'node',\n    clientKey: 'undici',\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Hono Framework Integration\nDESCRIPTION: Example of integrating Scalar API Reference with the Hono server framework.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\napp.get(\n  '/doc',\n  apiReference({\n    // Your configuration goes here…\n    url: '…'\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Basic Scalar Middleware Integration with Hono\nDESCRIPTION: A basic example of how to set up Scalar middleware with Hono to serve an API reference at a specific endpoint. This imports the necessary modules and mounts the Scalar middleware at the '/scalar' path with the API documentation URL specified.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/hono/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Hono } from 'hono'\nimport { Scalar } from '@scalar/hono-api-reference'\n\nconst app = new Hono()\n\n// Use the middleware to serve the Scalar API Reference at /scalar\napp.get('/scalar', Scalar({ url: '/doc' }))\n\nexport default app\n```\n\n----------------------------------------\n\nTITLE: Using OpenAPI Types in TypeScript\nDESCRIPTION: This example demonstrates how to import and use the OpenAPI types in a TypeScript file to define a basic OpenAPI 3.1.0 document structure.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-types/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { OpenAPI } from '@scalar/openapi-types'\n\nconst file: OpenAPI.Document = {\n  openapi: '3.1.0',\n  info: {\n    title: 'Hello World',\n    version: '1.0.0',\n  },\n  paths: {},\n}\n```\n\n----------------------------------------\n\nTITLE: Using custom OpenAPI files with Scalar API Reference\nDESCRIPTION: Implementation for using handcrafted OpenAPI files instead of auto-generated ones. This approach uses a URL configuration to point to the location of the OpenAPI specification.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_9\n\nLANGUAGE: js\nCODE:\n```\nimport ScalarApiReference from '@scalar/fastify-api-reference'\n\nawait fastify.register(ScalarApiReference, {\n  routePrefix: '/reference',\n  configuration: {\n    // On your domain:\n    url: '/openapi.json',\n    // Or somewhere else:\n    // url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Using Scalar Icons in Vue Components\nDESCRIPTION: Example of importing and using a Scalar icon component in a Vue template with TypeScript setup. Shows how to apply Tailwind classes for styling and the weight prop for icon appearance.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/icons/README.md#2025-04-22_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { ScalarIconMagnifyingGlass } from '@scalar/icons'\n</script>\n\n<template>\n  <!-- You can size and color the icons easily using Tailwind -->\n  <ScalarIconMagnifyingGlass class=\"size-4 text-c-3\" weight=\"bold\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Extending Zod Schemas for OpenAPI Objects\nDESCRIPTION: This example demonstrates how to extend the OpenApiObjectSchema to add custom properties and merge with extension schemas. It shows adding an extension at the top level and a custom property to a nested object.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-types/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { OpenApiObjectSchema } from '@scalar/openapi-types/schemas/3.1/unprocessed'\nimport { XScalarIconSchema } from '@scalar/openapi-types/schemas/extensions'\n\nconst MyCustomSchema = OpenApiObjectSchema\n  // Add the `x-scalar-icon` OpenAPI extension\n  .merge(\n    XScalarIconSchema\n  )\n  // Add a custom property\n  .extend({\n    'x-customProperty': z.boolean().optional(),\n  })\n\nconst MyCustomSchema = OpenApiObjectSchema\n  .extend({\n    // Overwrite the Schema\n    'info': InfoObjectSchema.extend({\n      // Add a custom property\n      'x-customProperty': z.boolean().optional(),\n    }),\n  })\n```\n\n----------------------------------------\n\nTITLE: Adding Single OpenAPI Document to Scalar\nDESCRIPTION: C# code showing different ways to add a single OpenAPI document to Scalar, with options for document name, title, and custom route patterns.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_9\n\nLANGUAGE: csharp\nCODE:\n```\n// Basic usage with default route pattern /openapi/{documentName}.json. Only document name is required\napp.MapScalarApiReference(options => options.AddDocument(\"v1\"));\n\n// Optional title parameter\napp.MapScalarApiReference(options => options.AddDocument(\"v1\", \"Production API\"));\n\n// Skip title but specify routePattern\napp.MapScalarApiReference(options => options.AddDocument(\"v1\", routePattern: \"api-specs/{documentName}/openapi.json\"));\n\n// All parameters specified\napp.MapScalarApiReference(options => options.AddDocument(\"v1\", \"Production API\", \"api-specs/v1/openapi.json\"));\n\n// Using external URL without title\napp.MapScalarApiReference(options => options.AddDocument(\"external\", routePattern: \"https://api.example.com/v1/openapi.json\"));\n```\n\n----------------------------------------\n\nTITLE: Multiple Configurations with Custom CSS\nDESCRIPTION: Configure multiple OpenAPI documents with specific configurations including custom CSS.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', [\n  {\n    title: 'Scalar Galaxy',\n    slug: 'scalar-galaxy',\n    url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n    customCss: `body { background-color: #BADA55}`\n  },\n  {\n    url: 'https://example.com/openapi.json',\n    customCss: `body { background-color: #c0ffee}`\n  },\n  {\n    content: '{ \"openapi\": \"3.1.1\", … }',\n    customCss: `body { background-color: #facade}`\n  }\n])\n```\n\n----------------------------------------\n\nTITLE: Initializing Scalar Module in Django\nDESCRIPTION: This code initializes the Scalar module in Django, making the urlpatterns_scalar and get_filter_parameters functions available for import in other parts of the project.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom .scalar import urlpatterns_scalar\nfrom .get_filter_parameters import get_filter_parameters\n\n__all__ = ['urlpatterns_scalar', 'get_filter_parameters']\n```\n\n----------------------------------------\n\nTITLE: Adding Bearer Security Scheme to OpenAPI Document\nDESCRIPTION: Implements an OpenApiDocumentTransformer to add Bearer authentication scheme to the OpenAPI document.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\noptions.AddDocumentTransformer((document, _, _) =>\n{\n    var securityScheme = new OpenApiSecurityScheme\n    {\n        Type = SecuritySchemeType.Http,\n        In = ParameterLocation.Header,\n        Scheme = \"bearer\"\n    };\n    document.Components ??= new OpenApiComponents();\n    document.Components.SecuritySchemes.Add(JwtBearerDefaults.AuthenticationScheme, securityScheme);\n    return Task.CompletedTask;\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar plugin in Docusaurus (TypeScript)\nDESCRIPTION: This snippet demonstrates how to configure the Scalar plugin in the Docusaurus configuration file using TypeScript. It includes type imports and proper type casting for the plugin options.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/docusaurus.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// docusaurus.config.ts\nimport type { Config } from '@docusaurus/types'\nimport type { ScalarOptions } from '@scalar/docusaurus'\n\n// …\n\nconst config: Config = {\n  // …\n  plugins: [\n    [\n      '@scalar/docusaurus',\n      {\n        label: 'Scalar',\n        route: '/scalar',\n        configuration: {\n          // Put the URL to your OpenAPI document here:\n          url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n        },\n      } as ScalarOptions,\n    ],\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Theme for Scalar API Reference\nDESCRIPTION: Example of configuring a custom theme for the API reference. This snippet shows how to use one of the predefined themes ('purple') while maintaining the same basic configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/express/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { apiReference } from '@scalar/express-api-reference'\n\napp.use(\n  '/reference',\n  apiReference({\n    theme: 'purple',\n    url: '/openapi.json',\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Prefilling OAuth Credentials in Scalar API Reference\nDESCRIPTION: Configures the Scalar API Reference to preselect OAuth authentication and prefill client credentials.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_6\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options => options.Authentication = new ScalarAuthenticationOptions\n{\n    PreferredSecurityScheme = \"OAuth\",\n    OAuth2 = new OAuth2Options\n    {\n        ClientId = \"your-client-id\"\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Request Body Data for POST Request in TypeScript\nDESCRIPTION: Shows how to use the request function for a POST request with a defined request body and response schema.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = await request({\n  disableAuth: true,\n  baseUrl: 'https://galaxy.scalar.com',\n  url: '/user/signup',\n  method: 'post',\n  data: {\n    name: 'Marc',\n    email: 'marc@scalar.com',\n    passowrd: 'i-love-scalar',\n  },\n  schema: z.object({\n    id: z.number(),\n    name: z.string(),\n    email: z.string().z.email(),\n  }),\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenAPI Document Generation for Multiple Versions\nDESCRIPTION: Implements version-specific OpenAPI document generation with support for version information and deprecation status.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nstring[] versions = [\"v1\", \"v2\"];\n\nforeach (var version in versions)\n{\n  builder.Services.AddOpenApi(version, options =>\n  {\n    // Add the appropriate API version information to the document\n    options.AddDocumentTransformer((document, context, _) =>\n    {\n      var descriptionProvider = context.ApplicationServices.GetRequiredService<IApiVersionDescriptionProvider>();\n      var versionDescription = descriptionProvider.ApiVersionDescriptions.FirstOrDefault(x => x.GroupName == version);\n      document.Info.Version = versionDescription?.ApiVersion.ToString();\n      return Task.CompletedTask;\n    });\n\n    // Indicate if the API is deprecated\n    options.AddOperationTransformer((operation, context, _) =>\n    {\n      var apiDescription = context.Description;\n      operation.Deprecated = apiDescription.IsDeprecated();\n      return Task.CompletedTask;\n    });\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Default Source Configuration\nDESCRIPTION: Configure multiple OpenAPI sources with an explicit default document.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', {\n  sources: [\n    {\n      url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n    },\n    {\n      url: 'https://example.com/openapi.json',\n      default: true,\n    }\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar API Reference with External OpenAPI URL\nDESCRIPTION: Example of registering the Scalar plugin with a custom configuration that specifies a title and URL to an OpenAPI/Swagger JSON document.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastify/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Render an API reference for a given OpenAPI/Swagger spec URL\nfastify.register(import('@scalar/fastify-api-reference'), {\n  routePrefix: '/reference',\n  configuration: {\n    title: 'Our API Reference',\n    url: '/openapi.json',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple OpenAPI Documents to Scalar\nDESCRIPTION: C# code demonstrating various approaches to add multiple OpenAPI documents to Scalar, using both individual document configuration and bulk document addition.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_10\n\nLANGUAGE: csharp\nCODE:\n```\n// Using AddDocument with different route patterns\napp.MapScalarApiReference(options =>\n{\n    options\n        .AddDocument(\"v1\", \"Production API\", \"api/{documentName}/spec.json\")\n        .AddDocument(\"v2-beta\", \"Beta API\", \"beta/openapi.json\");\n});\n\n// Using AddDocuments with string array (uses default route pattern)\nstring[] versions = [\"v1\", \"v2\"];\napp.MapScalarApiReference(options => options.AddDocuments(versions));\n\n// Using AddDocuments with ScalarDocument objects\nvar documents = new[]\n{\n    new ScalarDocument(\"v1\", \"Production API\", \"api/v1/spec.json\"),\n    new ScalarDocument(\"v2-beta\", \"Beta API\", \"beta/openapi.json\"),\n    new ScalarDocument(\"v3-dev\", \"Development API\", \"dev/{documentName}.json\")\n};\napp.MapScalarApiReference(options => options.AddDocuments(documents));\n```\n\n----------------------------------------\n\nTITLE: Setting up ApiClientModalProvider in React\nDESCRIPTION: Shows how to set up the ApiClientModalProvider at a high level in your React application. This component requires a configuration object with a URL pointing to your API specification and wraps child components that need access to the API client.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client-react/README.md#2025-04-22_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ApiClientModalProvider } from '@scalar/api-client-react'\n\nimport '@scalar/api-client-react/style.css'\n;<ApiClientModalProvider\n  configuration={{\n    url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n  }}>\n  {children}\n</ApiClientModalProvider>\n```\n\n----------------------------------------\n\nTITLE: Setting Default HTTP Client for Code Samples\nDESCRIPTION: C# code showing how to configure a default HTTP client for code samples in a specific language using Scalar's enumeration types.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_14\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    options.WithDefaultHttpClient(ScalarTarget.CSharp, ScalarClient.HttpClient);\n    // or\n    options.DefaultHttpClient = new(ScalarTarget.CSharp, ScalarClient.HttpClient);\n});\n```\n\n----------------------------------------\n\nTITLE: Intercepting HTTP Requests for OpenAPI Specification\nDESCRIPTION: Shows how to intercept HTTP requests when fetching OpenAPI specifications, useful for handling CORS issues in browser environments.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { dereference, load } from '@scalar/openapi-parser'\nimport { fetchUrls } from '@scalar/openapi-parser/plugins/fetch-urls'\n\n// Load a file and all referenced files\nconst { filesystem } = await load(\n  'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n  {\n    plugins: [\n      fetchUrls({\n        fetch: (url) => fetch(url.replace('BANANA.net', 'jsdelivr.net')),\n      }).get('https://cdn.BANANA.net/npm/@scalar/galaxy/dist/latest.yaml'),\n    ],\n  }\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring JWT Bearer Authentication in DI Container\nDESCRIPTION: Sets up JWT Bearer authentication in the dependency injection container with a specified authority URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddAuthentication().AddJwtBearer(options =>\n{\n    options.Authority = \"http://localhost:8080/realms/master/.well-known/openid-configuration\";\n});\n```\n\n----------------------------------------\n\nTITLE: Overriding Tag Display Names with x-displayName\nDESCRIPTION: Shows how to override OpenAPI tag names in the documentation with more user-friendly display names using the x-displayName extension.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\ntags:\n  - name: pl4n3t5\n    x-displayName: planets\npaths:\n  '/planets':\n    get:\n      summary: Get all planets\n      tags:\n        - pl4n3t5\n```\n\n----------------------------------------\n\nTITLE: Adding Enum Descriptions with x-enumDescriptions\nDESCRIPTION: Shows how to add descriptions to enum values using the x-enumDescriptions extension, providing more context for each option in an enumeration.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\ncomponents:\n  schemas:\n    CustomerCancellationReason:\n      type: string\n      enum:\n      - missing_features\n      - too_expensive\n      - unused\n      - other\n      x-enumDescriptions:\n        missing_features: Missing features\n        too_expensive: Too expensive\n        unused: Unused\n        other: Other\n```\n\n----------------------------------------\n\nTITLE: Defining API Error Response Type in TypeScript\nDESCRIPTION: Type definition for an API error response, including status, message, error flag, and original error object.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ApiError = {\n  status: number\n  message: string\n  error: true\n  originalError: any\n}\n```\n\n----------------------------------------\n\nTITLE: Using Then/Catch Syntax for OpenAPI Validation\nDESCRIPTION: Shows how to use the then/catch syntax for handling the result of OpenAPI validation, with error throwing enabled.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate } from '@scalar/openapi-parser'\n\nconst specification = …\n\nvalidate(specification, {\n  throwOnError: true,\n})\n.then(result => {\n  // Success\n})\n.catch(error => {\n  // Failure\n})\n```\n\n----------------------------------------\n\nTITLE: Using Scalar Icon Library in a Vue.js Component\nDESCRIPTION: This Vue.js component demonstrates how to import and use an icon from the Scalar Icon Library. It imports the LibraryIcon component and uses it in the template with a specific icon source.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/icons/src/library/README.md#2025-04-22_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { LibraryIcon } from '@scalar/icons/library'\n</script>\n\n<template>\n  <LibraryIcon src=\"basic-shape-diamond\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Initializing Scalar Void Server with Node.js\nDESCRIPTION: Example of creating and starting a Void Server instance using Hono and Node.js. The server is configured to run on port 3000 and logs the listening URL on startup.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/void-server/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { serve } from '@hono/node-server'\nimport { createVoidServer } from '@scalar/void-server'\n\n// Create the server instance\nconst app = await createVoidServer()\n\n// Start the server\nserve(\n  {\n    fetch: app.fetch,\n    port: 3000,\n  },\n  (info) => {\n    console.log(`Listening on http://localhost:${info.port}`)\n  },\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Successful API Response Type in TypeScript\nDESCRIPTION: Type definition for a successful API response, including status, data, and error flag.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ApiResponse<T> = {\n  status: number\n  data: T\n  error: false\n}\n```\n\n----------------------------------------\n\nTITLE: Advanced Scalar Configuration\nDESCRIPTION: Comprehensive configuration example showing various customization options including dark mode, metadata, proxy settings, and path routing.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  modules: ['@scalar/nuxt'],\n  scalar: {\n    darkMode: true,\n    hideModals: false,\n    hideDownloadButton: false,\n    metaData: {\n      title: 'API Documentation by Scalar',\n    },\n    proxyUrl: 'https://proxy.scalar.com',\n    searchHotKey: 'k',\n    showSidebar: true,\n    pathRouting: {\n      basePath: '/scalar',\n    },\n    url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Custom CDN for Scalar API Reference\nDESCRIPTION: Example of specifying a custom CDN for loading the API reference assets. This configuration allows changing the default CDN source while maintaining other required parameters like the OpenAPI URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/express/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { apiReference } from '@scalar/express-api-reference'\n\napp.use(\n  '/reference',\n  apiReference({\n    cdn: 'https://cdn.jsdelivr.net/npm/@scalar/api-reference',\n    url: '/openapi.json',\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Validate OpenAPI Files\nDESCRIPTION: Commands for validating OpenAPI files against Swagger 2.0, OpenAPI 3.0 or 3.1 specifications.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nscalar validate\nscalar validate openapi.json\nscalar validate https://example.com/openapi.json\n```\n\n----------------------------------------\n\nTITLE: Initializing the Full Scalar API Client App\nDESCRIPTION: TypeScript code to initialize and mount the full Scalar API Client application to a DOM element. Demonstrates how to configure the client with a URL and proxy URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// main.js\nimport { createApiClientApp } from '@/App'\n\n// Initialize\nawait createApiClientApp(document.getElementById('scalar-client'), {\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n  proxyUrl: 'https://proxy.scalar.com',\n})\n```\n\n----------------------------------------\n\nTITLE: Adding Global Security Requirement for OAuth\nDESCRIPTION: Extends the OpenApiDocumentTransformer to add a global security requirement for OAuth authentication.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\noptions.AddDocumentTransformer((document, _, _) =>\n{\n    var securityScheme = new OpenApiSecurityScheme\n    {\n        Type = SecuritySchemeType.OAuth2,\n        Flows = new OpenApiOAuthFlows\n        {\n            ClientCredentials = new OpenApiOAuthFlow\n            {\n                TokenUrl = new Uri(\"https://your-authorization-server.com/connect/token\")\n            }\n        }\n    };\n    document.Components ??= new OpenApiComponents();\n    document.Components.SecuritySchemes.Add(\"OAuth\", securityScheme);\n\n    // Adds a global security requirement\n    var referenceScheme = new OpenApiSecurityScheme\n    {\n        Reference = new OpenApiReference\n        {\n            Id = \"OAuth\",\n            Type = ReferenceType.SecurityScheme\n        }\n    };\n    \n    document.SecurityRequirements.Add(new OpenApiSecurityRequirement\n    {\n        [referenceScheme] = []\n    });\n\n    return Task.CompletedTask;\n});\n```\n\n----------------------------------------\n\nTITLE: Versioned Script Loading\nDESCRIPTION: Example of loading a specific version of Scalar API Reference from CDN.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference@1.28.5\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Swashbuckle Integration\nDESCRIPTION: Configuration setup for using Scalar with Swashbuckle OpenAPI generator in Program.cs.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/README.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger(options =>\n    {\n        options.RouteTemplate = \"/openapi/{documentName}.json\";\n    });\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Resolving OpenAPI Document URL using Scalar Import in TypeScript\nDESCRIPTION: This code demonstrates how to use the resolve function from @scalar/import to get the raw file URL of an OpenAPI document from a GitHub link. It shows the basic usage of the package for resolving URLs.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/import/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { resolve } from '@scalar/import'\n\n// Get the raw file URL from a GitHub link\nconst result = await resolve(\n  'https://github.com/outline/openapi/blob/main/spec3.yml',\n)\n\n// https://raw.githubusercontent.com/outline/openapi/refs/heads/main/spec3.yml\n```\n\n----------------------------------------\n\nTITLE: Making a curl request to the Scalar mock server\nDESCRIPTION: This curl command demonstrates how to make a request to the Scalar mock server to explore the API.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncurl http://localhost:5052/planets\n```\n\n----------------------------------------\n\nTITLE: Configuring API Reference with URL\nDESCRIPTION: Example of setting up an API route handler using a URL to an OpenAPI/Swagger file.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// app/reference/route.ts\nimport { ApiReference } from '@scalar/nextjs-api-reference'\n\nconst config = {\n  url: '/openapi.json',\n}\n\nexport const GET = ApiReference(config)\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar Without Path Stripping in ASP.NET Core\nDESCRIPTION: This snippet shows how to configure Scalar when your reverse proxy preserves the base path. The UsePathBase middleware is used to configure the base path in the ASP.NET Core application.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/subpath-deployment.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddOpenApi();\n\nvar app = builder.Build();\n\n// Configure the base path\napp.UsePathBase(\"/my-api\");\n\n// Must be called after UsePathBase\napp.UseRouting();\n\napp.MapOpenApi();\napp.MapScalarApiReference();\n```\n\n----------------------------------------\n\nTITLE: Implementing React Component in JSX\nDESCRIPTION: Example JSX code for a React functional component that renders a greeting message for Docusaurus.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nfunction HelloDocusaurus() {\n  return <h1>Hello, Docusaurus!</h1>\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple OpenAPI Documents with Subpath Deployment\nDESCRIPTION: This snippet demonstrates how to configure Scalar with multiple OpenAPI documents when deploying under a subpath. Scalar will automatically handle the base path for all document URLs.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/subpath-deployment.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nstring[] versions = [\"v1\", \"v2\"];\n\napp.UsePathBase(\"/my-api\");\napp.UseRouting();\n\napp.MapScalarApiReference(options =>  options.AddDocuments(\"v1\", \"v2\"));\n```\n\n----------------------------------------\n\nTITLE: Bundle OpenAPI Files\nDESCRIPTION: Command for bundling multiple OpenAPI files into a single file.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nscalar bundle openapi.json --output bundle.json\n```\n\n----------------------------------------\n\nTITLE: Using a Function to Provide Access Token for Authenticated Request in TypeScript\nDESCRIPTION: Shows how to use a function to provide the access token for an authenticated request, allowing for dynamic token generation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = await request({\n  accessToken: () => 'MY_SECRET_TOKEN',\n  baseUrl: 'https://galaxy.scalar.com',\n  url: '/me',\n  method: 'get',\n  schema: z.object({\n    id: z.number(),\n    name: z.string(),\n    email: z.string().z.email(),\n  }),\n})\n```\n\n----------------------------------------\n\nTITLE: Available Methods for Scalar API Client\nDESCRIPTION: TypeScript method signatures for the API Client, including the open method for displaying the modal with specific request parameters and updateConfig method for updating the client configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nopen({ path: string; method: RequestMethod })\n```\n\nLANGUAGE: typescript\nCODE:\n```\nupdateConfig(newConfig: ClientConfiguration, mergeConfigs?: boolean): void\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar API Reference with URL Reference in NestJS\nDESCRIPTION: Example showing how to set up the apiReference middleware by referencing an existing OpenAPI/Swagger file via URL, which is the recommended approach when already serving an OpenAPI specification.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { apiReference } from '@scalar/nestjs-api-reference'\n\napp.use(\n  '/reference',\n  apiReference({\n    url: '/openapi.json',\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Modifying OpenAPI Specification with Filter Function\nDESCRIPTION: Shows how to use the filter function to modify an OpenAPI specification by removing schemas with a specific property.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { filter } from '@scalar/openapi-parser'\n\nconst specification = `{\n  \"openapi\": \"3.1.0\",\n  \"info\": {\n    \"title\": \"Hello World\",\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {}\n}`\n\nconst { specification } = filter(\n  specification,\n  (schema) => !schema?.['x-internal'],\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar API Reference with AddDocument Method\nDESCRIPTION: Demonstrates various ways to add individual API documents to Scalar using the AddDocument method.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    // Default route pattern: /openapi/{documentName}.json. Only document name is required, title and routePattern are optional\n    options.AddDocument(\"v1\");\n    \n    // Skip title and only specify routePattern\n    options.AddDocument(\"v2\", routePattern: \"/api-docs/{documentName}/spec.json\");\n    \n    // All parameters specified\n    options.AddDocument(\"v3\", \"Version 3.0\", \"/swagger/v3/swagger.json\");\n\n    // Skip title but provide routePattern\n    options.AddDocument(\"external\", routePattern: \"https://api.example.com/v1/openapi.json\");\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Draggable Data Structure in TypeScript\nDESCRIPTION: Example of the data structure required for the draggable component, using TypeScript with Vue.js ref. Shows a hierarchical structure with items and their relationships.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/draggable/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sidebar = ref({\n  // Master list of all items\n  items: {\n    '1': {\n      id: '1',\n      name: 'Rangers',\n      children: ['2', '4', '5', '6', '7'],\n    },\n    '2': {\n      id: '2',\n      name: 'Stars',\n      children: ['3'],\n    },\n    '3': { id: '3', name: 'Bruins', children: [] },\n    '4': { id: '4', name: 'Canucks', children: [] },\n    '5': { id: '5', name: 'Panthers', children: [] },\n    '6': { id: '6', name: 'Avalanche', children: [] },\n    '7': { id: '7', name: 'Hurricanes', children: [] },\n    '8': { id: '8', name: 'Jets', children: [] },\n    '9': { id: '9', name: 'Oilers', children: [] },\n    '10': { id: '10', name: 'Predators', children: [] },\n    '11': { id: '11', name: 'Maple Leafs', children: [] },\n    '12': { id: '12', name: 'Kings', children: [] },\n  } satisfies Items,\n  // Root level children (the top level of the sidebar)\n  children: ['1', '8', '9', '10', '11', '12'],\n})\n```\n\n----------------------------------------\n\nTITLE: Custom OpenAPI Document Configuration\nDESCRIPTION: Configuration to add a custom OpenAPI document using an external URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  modules: ['@scalar/nuxt'],\n  scalar: {\n    url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Grouping Tags with x-tagGroups\nDESCRIPTION: Demonstrates how to organize API operations by grouping tags using the x-tagGroups extension. This helps create a more structured navigation in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\ntags:\n  - name: planets\nx-tagGroups:\n  - name: galaxy\n    tags:\n      - planets\npaths:\n  '/planets':\n    get:\n      summary: Get all planets\n      tags:\n        - planets\n```\n\n----------------------------------------\n\nTITLE: Creating Python Virtual Environment for Django Ninja\nDESCRIPTION: Commands to create and activate a Python virtual environment for the Django Ninja project. Includes commands for both Windows and Mac platforms.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv myenv\nmyenv\\Scripts\\activate (windows)\nsource myenv/bin/activate (mac)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom OpenAPI Document Route\nDESCRIPTION: C# code demonstrating how to specify a custom route pattern for OpenAPI documents, which can be a local path or external URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_8\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    options.WithOpenApiRoutePattern(\"/swagger/{documentName}.json\");\n    // or\n    options.OpenApiRoutePattern = \"/swagger/{documentName}.json\";\n    // Can also point to an external URL:\n    options.OpenApiRoutePattern = \"https://example.com/swagger/{documentName}.json\";\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Domain in Scalar Configuration in JSON\nDESCRIPTION: This JSON snippet demonstrates how to configure a custom domain for the Scalar documentation. It adds the 'customDomain' property with the desired domain.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"customDomain\": \"docs.example.com\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Scalar Play Button in HTML\nDESCRIPTION: This snippet demonstrates how to create a button that triggers the Scalar API Client. It uses the 'scalar-play-button' class and an optional 'scalar-operation-id' attribute to specify the API operation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<button\n  scalar-operation-id=\"getPetById\"\n  class=\"scalar-play-button\">\n  Try it Out\n</button>\n```\n\n----------------------------------------\n\nTITLE: Implementing API Reference Editor with Internal State Management in HTML and JavaScript\nDESCRIPTION: This snippet demonstrates how to set up the Scalar API reference editor with internal state management. It includes the necessary HTML structure and JavaScript code to mount the editor component.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-editor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <title>API Reference Editor</title>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n    <!-- TODO: Update import script -->\n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference-editor\"></script>\n  </head>\n  <body>\n    <div id=\"scalar-api-reference\" />\n    <script>\n      import { mountApiReferenceEditable } from '@scalar/api-reference-editor'\n\n      mountApiReferenceEditable('#scalar-api-reference')\n    </script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring Microsoft.AspNetCore.OpenApi Integration\nDESCRIPTION: Configuration setup for using Scalar with Microsoft.AspNetCore.OpenApi in Program.cs.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/README.md#2025-04-22_snippet_2\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddOpenApi();\n\nif (app.Environment.IsDevelopment())\n{\n    app.MapOpenApi();\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar via Dependency Injection\nDESCRIPTION: C# code showing how to configure Scalar options using dependency injection patterns, either through direct configuration or binding to application settings.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_16\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.Configure<ScalarOptions>(options => options.Title = \"My API\");\n// or\nbuilder.Services.AddOptions<ScalarOptions>().BindConfiguration(\"Scalar\");\n```\n\n----------------------------------------\n\nTITLE: Prefilling Bearer Token in Scalar API Reference\nDESCRIPTION: Configures the Scalar API Reference to preselect Bearer authentication and prefill a token value.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options => options.Authentication = new ScalarAuthenticationOptions\n{\n    PreferredSecurityScheme = JwtBearerDefaults.AuthenticationScheme,\n    Http = new HttpOptions\n    {\n        Bearer = new HttpBearerOptions\n        {\n            Token = \"my JWT token\"\n        }\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: ESM Module Import Usage\nDESCRIPTION: TypeScript example showing how to use Scalar API Reference in an ECMAScript module environment with direct import.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createApiReference } from '@scalar/api-reference'\n\ncreateApiReference('#app', {\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring API Key Authentication in Scalar\nDESCRIPTION: C# code demonstrating how to pre-fill API key authentication details for Scalar, with options to specify a preferred security scheme.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_11\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    // Fluent API\n    options\n        .WithPreferredScheme(\"ApiKey\") // Optional. Security scheme name from the OpenAPI document\n        .WithApiKeyAuthentication(apiKey =>\n        {\n            apiKey.Token = \"your-api-key\";\n        });\n\n    // Object initializer\n    options.Authentication = new ScalarAuthenticationOptions\n    {\n        PreferredSecurityScheme = \"ApiKey\", // Optional. Security scheme name from the OpenAPI document\n        ApiKey = new ApiKeyOptions\n        {\n            Token = \"your-api-key\"\n        }\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Cloning and Setting Up Scalar Project with pnpm\nDESCRIPTION: These commands clone the Scalar repository, install dependencies, build packages, and start the development server.\nSOURCE: https://github.com/scalar/scalar/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ git clone git@github.com:scalar/scalar.git\n$ pnpm install\n$ pnpm turbo build\n$ pnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Advanced: Handling URL and File References in OpenAPI\nDESCRIPTION: Shows how to use plugins to handle URL and file references when loading and dereferencing OpenAPI specifications.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { dereference, load } from '@scalar/openapi-parser'\nimport { fetchUrls } from '@scalar/openapi-parser/plugins/fetch-urls'\nimport { readFiles } from '@scalar/openapi-parser/plugins/read-files'\n\n// Load a file and all referenced files\nconst { filesystem } = await load('./openapi.yaml', {\n  plugins: [\n    readFiles(),\n    fetchUrls({\n      limit: 5,\n    }),\n  ],\n})\n\n// Instead of just passing a single specification, pass the whole \"filesystem\"\nconst result = await dereference(filesystem)\n```\n\n----------------------------------------\n\nTITLE: Triggering References Reload Event\nDESCRIPTION: JavaScript example showing how to dispatch the scalar:reload-references event to reload the API references when DOM elements change.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ndocument.dispatchEvent(new Event('scalar:reload-references'))\n```\n\n----------------------------------------\n\nTITLE: Validating OpenAPI Specification in TypeScript\nDESCRIPTION: Demonstrates how to validate an OpenAPI specification using the validate function from the Scalar OpenAPI Parser.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate } from '@scalar/openapi-parser'\n\nconst file = `{\n  \"openapi\": \"3.1.0\",\n  \"info\": {\n    \"title\": \"Hello World\",\n    \"version\": \"1.0.0\"\n  },\n  \"paths\": {}\n}`\n\nconst { valid, errors } = await validate(file)\n\nconsole.log(valid)\n\nif (!valid) {\n  console.log(errors)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing API Reference Editor with External State Management in HTML and JavaScript\nDESCRIPTION: This snippet shows how to implement the Scalar API reference editor with external state management. It includes HTML structure and JavaScript code for mounting the editor, handling updates, and managing external state.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-editor/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html>\n  <head>\n    <title>API Reference Editor</title>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n    <!-- TODO: Update import script -->\n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference-editor\"></script>\n  </head>\n  <body>\n    <div id=\"scalar-api-reference\" />\n    <script>\n      import { mountApiReferenceEditable } from '@scalar/api-reference-editor'\n\n      const externalState = {\n        value: ''\n      }\n\n      const { updateSpecValue} = mountApiReferenceEditable(\n        '#scalar-api-reference',\n        { content: '' },\n        (v: string) => {\n          console.log('The value is updated!')\n          updateSpecValue(v) // Updates the rendered spec\n          externalState.value = v\n        }\n      )\n    </script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.12 Changelog for Scalar API Reference\nDESCRIPTION: Documents patch changes for version 1.13.12, including features for showing webhooks and security schema details, along with dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.12\n\n### Patch Changes\n\n- 2c7e0b5c: feat: show webhooks\n- c3186f9e: feat: show security schema key and description\n- Updated dependencies [2c7e0b5c]\n  - @scalar/swagger-parser@0.5.15\n```\n\n----------------------------------------\n\nTITLE: Handling Server Change Event\nDESCRIPTION: Callback function that runs when server selection changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  onServerChange: (value: string) => {\n    console.log('Server updated:', value)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Routes for OpenAPI and Scalar in AdonisJS\nDESCRIPTION: TypeScript code for AdonisJS route configuration. It includes routes for serving the OpenAPI file and rendering the Scalar API reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/adonisjs.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n// start/routes.ts\nimport router from '@adonisjs/core/services/router'\nimport openapi from '#config/openapi'\nimport AutoSwagger from 'adonis-autoswagger'\n\n// Just an example route\nrouter.get('/', async () => {\n  return {\n    hello: 'world',\n  }\n})\n\n// Returns the OpenAPI file as YAML\nrouter.get('/openapi', async () => {\n  return AutoSwagger.default.docs(router.toJSON(), openapi)\n})\n\n// Renders the API reference with Scalar\nrouter.get('/docs', async () => {\n  return AutoSwagger.default.scalar('/openapi')\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Tag Slug Generation\nDESCRIPTION: Function to customize how tag URLs are generated in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// Default behavior - results in hash: #tag/tag-name\n{\n  generateTagSlug: (tag) => slug(tag.name)\n}\n\n// Custom example - results in hash: #tag/v1-tag-name\n{\n  generateTagSlug: (tag) => `v1-${tag.name.toLowerCase()}`\n}\n```\n\n----------------------------------------\n\nTITLE: Adding OAuth Security Scheme to OpenAPI Document\nDESCRIPTION: Implements an OpenApiDocumentTransformer to add OAuth Client Credentials flow to the OpenAPI document.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/authentication.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\noptions.AddDocumentTransformer((document, _, _) =>\n{\n    var securityScheme = new OpenApiSecurityScheme\n    {\n        Type = SecuritySchemeType.OAuth2,\n        Flows = new OpenApiOAuthFlows\n        {\n            ClientCredentials = new OpenApiOAuthFlow\n            {\n                TokenUrl = new Uri(\"https://your-authorization-server.com/connect/token\")\n            }\n        }\n    };\n    document.Components ??= new OpenApiComponents();\n    document.Components.SecuritySchemes.Add(\"OAuth\", securityScheme);\n    return Task.CompletedTask;\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Light and Dark Mode Colors in Scalar API Reference\nDESCRIPTION: Provides CSS variables to customize the color scheme for both light and dark modes in Scalar API Reference. Includes basic color and background variables.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/themes.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .light-mode {\n    --scalar-color-1: #121212;\n    --scalar-color-2: rgba(0, 0, 0, 0.6);\n    --scalar-color-3: rgba(0, 0, 0, 0.4);\n    --scalar-color-accent: #0a85d1;\n    --scalar-background-1: #fff;\n    --scalar-background-2: #f6f5f4;\n    --scalar-background-3: #f1ede9;\n    --scalar-background-accent: #5369d20f;\n    --scalar-border-color: rgba(0, 0, 0, 0.08);\n  }\n  .dark-mode {\n    --scalar-color-1: rgba(255, 255, 255, 0.81);\n    --scalar-color-2: rgba(255, 255, 255, 0.443);\n    --scalar-color-3: rgba(255, 255, 255, 0.282);\n    --scalar-color-accent: #8ab4f8;\n    --scalar-background-1: #202020;\n    --scalar-background-2: #272727;\n    --scalar-background-3: #333333;\n    --scalar-background-accent: #8ab4f81f;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Scalar API Reference\nDESCRIPTION: YAML configuration for Docker Compose to set up Scalar API Reference service with custom port mapping and environment variables.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/docker/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.8'\n\nservices:\n  web:\n    image: scalarapi/api-reference:latest\n    ports:\n      - '1234:80'\n    environment:\n      - OPENAPI_DOCUMENT_URL=https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json\n      - API_REFERENCE_CONFIG={\"theme\":\"purple\"}\n```\n\n----------------------------------------\n\nTITLE: Automatic Mounting Configuration\nDESCRIPTION: TypeScript example showing automatic mounting of Scalar API Reference to a DOM element.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nScalar.createApiReference('#app', {\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Tag Opening Behavior\nDESCRIPTION: Configuration to control whether all tags should be open by default.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  defaultOpenAllTags: true\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Theme for Scalar API Reference\nDESCRIPTION: Example showing how to configure the Scalar API reference plugin with a custom theme option, in this case selecting the 'purple' theme.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastify/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nawait fastify.register(import('@scalar/fastify-api-reference'), {\n  routePrefix: '/reference',\n  configuration: {\n    theme: 'purple',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar to Use CDN Assets\nDESCRIPTION: C# code demonstrating how to configure Scalar to load its UI assets from a CDN instead of using local assets.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_15\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>\n{\n    options.WithCdnUrl(\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\");\n    // or\n    options.CdnUrl = \"https://cdn.jsdelivr.net/npm/@scalar/api-reference\";\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Fonts\nDESCRIPTION: Configuration to disable default font loading from Scalar CDN.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  withDefaultFonts: false\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Operation Slug Generation\nDESCRIPTION: Function to customize how operation URLs are generated in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// Default behavior - results in hash: #tag/tag-name/post-path\n{\n  generateOperationSlug: (operation) => `${operation.method}${operation.path}`\n}\n\n// Custom example - results in hash: #tag/tag-name/v1-post-users\n{\n  generateOperationSlug: (operation) =>\n    `v1-${operation.method.toLowerCase()}-${operation.path.replace('/', '-')}`\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Scalar API References in C#\nDESCRIPTION: This code demonstrates how to add multiple OpenAPI documents and map them to separate Scalar API reference endpoints. It shows the configuration for both internal and public API documentation endpoints.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-scalar-api-references.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddOpenApi(\"internal\");\nbuilder.Services.AddOpenApi(\"public\");\n\n// Map Scalar API references to separate endpoints\napp.MapScalarApiReference(\"/api-reference-internal\", options => options.AddDocument(\"internal\"));\napp.MapScalarApiReference(\"/api-reference\", options => options.AddDocument(\"public\"));\n```\n\n----------------------------------------\n\nTITLE: Basic Nuxt Configuration with OpenAPI\nDESCRIPTION: Minimal configuration to enable Scalar with Nuxt server routes using OpenAPI in the nitro config.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  modules: ['@scalar/nuxt'],\n  nitro: {\n    experimental: {\n      openAPI: true,\n    },\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Loading OpenAPI Specification from URL\nDESCRIPTION: Demonstrates how to load an OpenAPI specification directly from a URL using the fetchUrls plugin.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { dereference, load } from '@scalar/openapi-parser'\nimport { fetchUrls } from '@scalar/openapi-parser/plugins/fetch-urls'\n\n// Load a file and all referenced files\nconst { filesystem } = await load(\n  'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml',\n  {\n    plugins: [fetchUrls()],\n  }\n)\n```\n\n----------------------------------------\n\nTITLE: Customizing Sidebar Styles in Scalar API Reference\nDESCRIPTION: Demonstrates how to customize the sidebar appearance for both light and dark modes in Scalar API Reference using CSS variables.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/themes.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  .light-mode .sidebar {\n    --scalar-sidebar-background-1: var(--scalar-background-1);\n    --scalar-sidebar-item-hover-color: currentColor;\n    --scalar-sidebar-item-hover-background: var(--scalar-background-2);\n    --scalar-sidebar-item-active-background: var(--scalar-background-2);\n    --scalar-sidebar-border-color: var(--scalar-border-color);\n    --scalar-sidebar-color-1: var(--scalar-color-1);\n    --scalar-sidebar-color-2: var(--scalar-color-2);\n    --scalar-sidebar-color-active: var(--scalar-color-2);\n    --scalar-sidebar-search-background: var(--scalar-background-2);\n    --scalar-sidebar-search-border-color: var(--scalar-border-color);\n    --scalar-sidebar-search-color: var(--scalar-color-3);\n  }\n  .dark-mode .sidebar {\n    --scalar-sidebar-background-1: var(--scalar-background-1);\n    --scalar-sidebar-item-hover-color: currentColor;\n    --scalar-sidebar-item-hover-background: var(--scalar-background-2);\n    --scalar-sidebar-item-active-background: var(--scalar-background-2);\n    --scalar-sidebar-border-color: var(--scalar-border-color);\n    --scalar-sidebar-color-1: var(--scalar-color-1);\n    --scalar-sidebar-color-2: var(--scalar-color-2);\n    --scalar-sidebar-color-active: var(--scalar-color-2);\n    --scalar-sidebar-search-background: var(--scalar-background-2);\n    --scalar-sidebar-search-border-color: var(--scalar-border-color);\n    --scalar-sidebar-search-color: var(--scalar-color-3);\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Reference React Component\nDESCRIPTION: NPM installation command for the Scalar API Reference React component package.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-react/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/api-reference-react\n```\n\n----------------------------------------\n\nTITLE: Configuring Client Button Visibility\nDESCRIPTION: Configuration to hide the client button from the reference sidebar and modal.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  hideClientButton: true\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Scalar API Reference configuration\nDESCRIPTION: Example of how to customize the Scalar API Reference by providing configuration options, including changing the layout style.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_8\n\nLANGUAGE: js\nCODE:\n```\nimport ScalarApiReference from '@scalar/fastify-api-reference'\n\nawait fastify.register(ScalarApiReference, {\n  routePrefix: '/reference',\n  configuration: {\n    layout: 'classic',\n    // Learn more about configuration:\n    // https://github.com/scalar/scalar/tree/main/documentation/configuration.md\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Scalar API Reference Configuration\nDESCRIPTION: Example of passing a JSON string as an environment variable to customize the API reference configuration, including theme and hiding the 'Try It' feature.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/docker/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n-e API_REFERENCE_CONFIG='{\"theme\":\"purple\",\"hideTryIt\":true}'\n```\n\n----------------------------------------\n\nTITLE: Handling References Loaded Event\nDESCRIPTION: Callback function that triggers when references are lazy loaded.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  onLoaded: () => {\n    console.log('References loaded')\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Vue Projects\nDESCRIPTION: Vite configuration setup for Vue projects with plugin integration, alias resolution, and custom build options using createViteBuildOptions helper.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/build-tooling/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  alias,\n  createViteBuildOptions,\n  findEntryPoints,\n} from '@scalar/build-tooling'\nimport vue from '@vitejs/plugin-vue'\nimport { defineConfig } from 'vitest/config'\n\nexport default defineConfig({\n  plugins: [vue()],\n  resolve: {\n    // Provides @ -> './src' and @test -> './test' aliases\n    alias: alias(),\n  },\n  server: {\n    port: 5000,\n  },\n  build: createViteBuildOptions({\n    entry: await findEntryPoints({ allowCss: true }),\n  }),\n})\n```\n\n----------------------------------------\n\nTITLE: Handling Spec Updates Event\nDESCRIPTION: Callback function that runs when spec/swagger content changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  onSpecUpdate: (value: string) => {\n    console.log('Content updated:', value)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New React Project with Vite using PNPM\nDESCRIPTION: This snippet demonstrates how to create a new React project using Vite and PNPM. It includes the command to initialize the project and the subsequent prompts for framework and variant selection.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/react.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm create vite my-awesome-app\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow\nDESCRIPTION: GitHub Actions workflow configuration for validating OpenAPI files in CI/CD pipeline.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_9\n\nLANGUAGE: yml\nCODE:\n```\nname: Validate OpenAPI File\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n\njobs:\n  validate:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n      - name: Use Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n      - name: Validate OpenAPI File\n        run: npx @scalar/cli validate ./my-openapi-file.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Client React Package\nDESCRIPTION: Command to install the Scalar API Client React package via npm. This is the first step required before using the API client in your React application.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client-react/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/api-client-react\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Next.js API Reference Package\nDESCRIPTION: Command to install the Scalar Next.js API Reference package using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/nextjs.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm add @scalar/nextjs-api-reference\n```\n\n----------------------------------------\n\nTITLE: Implementing OpenAPI with Fastify Swagger\nDESCRIPTION: Complete implementation of a Fastify server with the Swagger plugin configured to generate OpenAPI 3.0 documentation. Includes setup of a sample route with detailed schema definition and an endpoint to serve the generated OpenAPI JSON.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nimport FastifySwagger from '@fastify/swagger'\nimport Fastify from 'fastify'\n\n// Instantiate the framework\nconst fastify = Fastify({\n  logger: true,\n})\n\n// Set up @fastify/swagger\nawait fastify.register(FastifySwagger, {\n  openapi: {\n    info: {\n      title: 'My Fastify App',\n      version: '1.0.0',\n    },\n    components: {\n      securitySchemes: {\n        apiKey: {\n          type: 'apiKey',\n          name: 'apiKey',\n          in: 'header',\n        },\n      },\n    },\n  },\n})\n\nfastify.put(\n  '/example-route/:id',\n  {\n    schema: {\n      description: 'post some data',\n      tags: ['user', 'code'],\n      summary: 'qwerty',\n      security: [{ apiKey: [] }],\n      params: {\n        type: 'object',\n        properties: {\n          id: {\n            type: 'string',\n            description: 'user id',\n          },\n        },\n      },\n      body: {\n        type: 'object',\n        properties: {\n          hello: { type: 'string' },\n          obj: {\n            type: 'object',\n            properties: {\n              some: { type: 'string' },\n            },\n          },\n        },\n      },\n      response: {\n        201: {\n          description: 'Succesful response',\n          type: 'object',\n          properties: {\n            hello: { type: 'string' },\n          },\n        },\n        default: {\n          description: 'Default response',\n          type: 'object',\n          properties: {\n            foo: { type: 'string' },\n          },\n        },\n      },\n    },\n  },\n  (req, reply) => {\n    reply.code(201).send({ hello: `Hello ${req.body.hello}` })\n  },\n)\n\n// Serve an OpenAPI file\nfastify.get('/openapi.json', async (request, reply) => {\n  return fastify.swagger()\n})\n\n// Wait for Fastify\nawait fastify.ready()\n\n// Run the server\nfastify.listen({ port: 3000 }, function (err, address) {\n  if (err) {\n    fastify.log.error(err)\n    process.exit(1)\n  }\n\n  console.log(`Fastify is now listening on ${address}`)\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Logging for Scalar API Reference Plugin\nDESCRIPTION: Example demonstrating how to set a custom log level for the Scalar API reference plugin, making it compatible with Fastify's logger.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastify/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nfastify.register(import('@scalar/fastify-api-reference'), {\n  routePrefix: '/reference',\n  logLevel: 'silent',\n})\n```\n\n----------------------------------------\n\nTITLE: Parsing OpenAPI Object with Zod Schema\nDESCRIPTION: This snippet shows how to use the OpenApiObjectSchema from the unprocessed 3.1 schemas to parse and validate an OpenAPI object. It demonstrates how invalid attributes are omitted and valid ones are passed.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-types/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { OpenApiObjectSchema } from '@scalar/openapi-types/schemas/3.1/unprocessed'\n\nOpenApiObjectSchema.parse({\n  // This will be omitted:\n  invalidAttribute: 123,\n  // Those will pass:\n  openapi: '3.1.1',\n  info: {\n    title: 'Example API',\n    version: '1.0'\n  },\n  paths: {\n    '/example': {\n      get: {\n        description: 'My example operation',\n      }\n    }\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Using TypeScript Types for OpenAPI Document\nDESCRIPTION: Demonstrates how to use TypeScript types from @scalar/openapi-types package to define an OpenAPI document structure.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { OpenAPI } from '@scalar/openapi-types'\n\nconst file: OpenAPI.Document = {\n  openapi: '3.1.0',\n  info: {\n    title: 'Hello World',\n    version: '1.0.0',\n  },\n  paths: {},\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.9 Changelog for Scalar API Reference\nDESCRIPTION: Lists patch changes for version 1.13.9, including improvements to search functionality and keyboard navigation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.9\n\n### Patch Changes\n\n- cb45bb13: feat: scroll search selected item into view with keyboard nav\n- e87a2474: fix: enter key navigating search item\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Sorting\nDESCRIPTION: Configuration for sorting tags either alphabetically or using a custom sorting function.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  tagsSorter: 'alpha'\n}\n```\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  /** @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort */\n  tagsSorter: (a, b) => {\n    if (a.name === 'Super Important Tag') return -1\n    return 1\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OpenAPI for AdonisJS\nDESCRIPTION: TypeScript configuration file for OpenAPI in AdonisJS. It sets up paths, metadata, and options for the Adonis Autoswagger package.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/adonisjs.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// config/openapi.ts\nimport path from 'node:path'\nimport url from 'node:url'\n\nexport default {\n  path: path.dirname(url.fileURLToPath(import.meta.url)) + '/../',\n  title: 'My Awesome App',\n  version: '1.0.0',\n  snakeCase: true,\n  tagIndex: 2,\n  ignore: ['/openapi', '/docs'],\n  // If PUT/PATCH are provided for the same route, prefer PUT\n  preferredPutPatch: 'PUT',\n  common: {\n    // OpenAPI conform parameters that are commonly used\n    parameters: {},\n    // OpenAPI conform headers that are commonly used\n    headers: {},\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Running Scalar API Reference Docker Container\nDESCRIPTION: Command to run the Scalar API Reference Docker container with custom port mapping, OpenAPI document URL, and API reference configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/docker/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 1234:80 \\\n  -e OPENAPI_DOCUMENT_URL=https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json \\\n  -e API_REFERENCE_CONFIG='{\"theme\":\"purple\"}' \\\n  scalarapi/api-reference:latest\n```\n\n----------------------------------------\n\nTITLE: Creating a New Next.js Project with CLI\nDESCRIPTION: Command to create a new Next.js project using the create-next-app CLI tool. This sets up a basic Next.js application structure.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/nextjs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx create-next-app@latest my-awesome-app\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar API Reference in JavaScript\nDESCRIPTION: This JavaScript snippet initializes the Scalar API Reference with basic configuration options. It specifies the target element, the URL for the OpenAPI document, and the theme.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\nScalar.initialize({\n    selector: \"#app\",\n    url: \"/swagger/v1/swagger.json\", // Adjust this URL to match your OpenAPI document path\n    theme: \"moon\" // Other configuration\n});\n```\n\n----------------------------------------\n\nTITLE: Importing a specific OpenAPI version of Scalar Galaxy in TypeScript\nDESCRIPTION: This code demonstrates how to import a specific version (3.1) of the Scalar Galaxy OpenAPI specification in TypeScript.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport ScalarGalaxy from '@scalar/galaxy/3.1.json'\n```\n\n----------------------------------------\n\nTITLE: Using getHtmlDocument Function from Scalar Core in TypeScript\nDESCRIPTION: Example of how to import and use the getHtmlDocument function from the @scalar/core package. This function generates an HTML document based on a provided URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/core/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getHtmlDocument } from '@scalar/core/libs/html-rendering'\n\nconst html = getHtmlDocument({\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n})\n```\n\n----------------------------------------\n\nTITLE: Using useBreakpoints Hook in Vue.js with TypeScript\nDESCRIPTION: Demonstrates how to implement the useBreakpoints hook in a Vue.js component to conditionally render elements based on screen breakpoints. The hook provides reactive min-width media queries that mirror Tailwind CSS breakpoints but allow for DOM manipulation rather than just CSS hiding.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-hooks/src/useBreakpoints/README.md#2025-04-22_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { useBreakpoints } from '@scalar/use-hooks/useBreakpoints'\n\nconst { breakpoints } = useBreakpoints()\n</script>\n<template>\n  <!-- Render the component only on medium screens and larger -->\n  <div v-if=\"breakpoints.md\">...</div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Element-Based Mounting\nDESCRIPTION: TypeScript example showing how to mount Scalar API Reference using a DOM element reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst element = getElementById('app')\n\napp.mount(element)\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar Project in JSON\nDESCRIPTION: This JSON snippet provides a basic configuration for a Scalar project. It specifies the subdomain, guides structure, and an empty references array.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"$schema\": \"https://cdn.scalar.com/schema/scalar-config.json\",\n  \"subdomain\": \"my-awesome-documentation\",\n  \"guides\": [\n    {\n      \"name\": \"My awesome documentation\",\n      \"sidebar\": [\n        {\n          \"path\": \"docs/introduction.md\",\n          \"type\": \"page\"\n        }\n      ]\n    }\n  ],\n  \"references\": []\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple References Configuration\nDESCRIPTION: Configuration for multiple API references with different base paths and formats.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  modules: ['@scalar/nuxt'],\n  scalar: {\n    darkMode: true,\n    metaData: {\n      title: 'API Documentation by Scalar',\n    },\n    proxyUrl: 'https://proxy.scalar.com',\n    configurations: [\n      {\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml,\n        pathRouting: {\n          basePath: '/yaml',\n        },\n      },\n      {\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n        pathRouting: {\n          basePath: '/json',\n        },\n      },\n    ],\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Tailwind CSS Imports\nDESCRIPTION: CSS import configuration showing how to combine Scalar themes with Tailwind CSS components and utilities.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/README.md#2025-04-22_snippet_4\n\nLANGUAGE: css\nCODE:\n```\n@import '@scalar/themes/style.css';\n@tailwind components;\n@tailwind utilities;\n@tailwind variants;\n```\n\n----------------------------------------\n\nTITLE: Customizing Webhook Slug Generation\nDESCRIPTION: Function to customize how webhook URLs are generated in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/configuration.md#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\n// Default behavior - results in hash: #webhook/webhook-name\n{\n  generateWebhookSlug: (webhook) => slug(webhook.name)\n}\n\n// Custom example - results in hash: #webhook/v1-post-user-created\n{\n  generateWebhookSlug: (webhook) =>\n    `v1-${webhook.method?.toLowerCase()}-${webhook.name}`\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Font in Scalar API Reference\nDESCRIPTION: Shows how to override the default font used in Scalar API Reference by modifying CSS variables. This example sets the font to Comic Sans MS.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/themes.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<style>\n  :root {\n    --scalar-font: 'Comic Sans MS', 'Comic Sans', cursive;\n  }\n</style>\n```\n\n----------------------------------------\n\nTITLE: Importing Scalar Galaxy as an object in TypeScript\nDESCRIPTION: This snippet demonstrates how to import the Scalar Galaxy OpenAPI specification as an object in TypeScript.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport ScalarGalaxy from '@scalar/galaxy/latest.json'\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with Path Stripping by Reverse Proxy in ASP.NET Core\nDESCRIPTION: This snippet demonstrates how to set up Scalar when your reverse proxy (like nginx or Apache) strips the base path. No additional path configuration is needed in the ASP.NET Core application in this scenario.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/subpath-deployment.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddOpenApi();\n\nvar app = builder.Build();\n\napp.MapOpenApi();\napp.MapScalarApiReference(\"/scalar\"); // Recommended: Deploy under a subpath\n```\n\n----------------------------------------\n\nTITLE: Hiding Tags with x-scalar-ignore\nDESCRIPTION: Demonstrates how to hide an entire tag and all operations under it from the reference documentation using the x-scalar-ignore extension.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/openapi.md#2025-04-22_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: 3.1.0\ninfo:\n  title: Example\n  version: 1.0\ntags:\n  - name: planets\n    x-scalar-ignore: true\npaths:\n  '/planets':\n    get:\n      summary: Get all planets\n      tags:\n        - planets\n    post:\n      summary: Create a new planet\n      tags:\n        - planets\n```\n\n----------------------------------------\n\nTITLE: Configuring API Reference Theme\nDESCRIPTION: Example of setting a custom theme for the API reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst config = {\n  theme: 'purple',\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Django Project\nDESCRIPTION: Command to create a new Django project named 'apidemo' using the django-admin utility.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndjango-admin startproject apidemo\n```\n\n----------------------------------------\n\nTITLE: Direct OpenAPI Specification Integration\nDESCRIPTION: HTML example showing how to directly pass an OpenAPI specification to the API Reference component.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/README.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script\n  id=\"api-reference\"\n  type=\"application/json\">\n  { … }\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Adonis Autoswagger Package\nDESCRIPTION: npm command to add the Adonis Autoswagger package to the project for OpenAPI support.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/adonisjs.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm add adonis-autoswagger\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with ScalarDocument Objects\nDESCRIPTION: Shows how to configure Scalar using ScalarDocument objects for more detailed document configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nvar documents =\n[\n    new ScalarDocument(\"v1\", \"Production API\", \"api/v1/spec.json\"),\n    new ScalarDocument(\"v2-beta\", \"Beta API\", \"beta/openapi.json\"),\n    new ScalarDocument(\"v3-dev\", \"Development API\", \"dev/specs/{documentName}.json\")\n];\n\napp.MapScalarApiReference(options => options.AddDocuments(documents));\n```\n\n----------------------------------------\n\nTITLE: Implementing useColorMode Hook in Vue Component\nDESCRIPTION: Basic implementation example of the useColorMode hook in a Vue component. The hook automatically watches for color mode changes and applies appropriate CSS classes for theme switching.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-hooks/src/useColorMode/README.md#2025-04-22_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\nimport { useColorMode } from '@scalar/use-hooks/useColorMode'\n\n// Watches for changes in the color mode and applies the appropriate CSS classes\nuseColorMode()\n</script>\n<template>\n  <!-- Template goes here -->\n</template>\n```\n\n----------------------------------------\n\nTITLE: Example JSON response from the Scalar mock server\nDESCRIPTION: This JSON snippet shows an example response from the Scalar mock server when querying the /planets endpoint.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Mars\",\n      \"description\": \"The red planet\",\n      \"image\": \"https://cdn.scalar.com/photos/mars.jpg\",\n      \"creator\": {\n        \"id\": 1,\n        \"name\": \"Marc\",\n        \"email\": \"marc@scalar.com\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"limit\": 10,\n    \"offset\": 0,\n    \"total\": 100,\n    \"next\": \"/planets?limit=10&offset=10\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering README in Storybook\nDESCRIPTION: This code snippet imports necessary components from Storybook and the project's README file. It then uses these to create a Storybook page that displays the README content as Markdown.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/docs/Introduction.mdx#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Markdown, Meta } from '@storybook/blocks'\n\nimport ReadMe from '../../README.md?raw'\n\n<Meta title=\"Scalar Components\" />\n<Markdown>{ReadMe}</Markdown>\n```\n\n----------------------------------------\n\nTITLE: Importing Scalar Galaxy as a YAML string in TypeScript\nDESCRIPTION: This snippet illustrates how to import the Scalar Galaxy OpenAPI specification as a YAML string in TypeScript.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport ScalarGalaxy from '@scalar/galaxy/latest.yaml?raw'\n```\n\n----------------------------------------\n\nTITLE: Unmounting Implementation\nDESCRIPTION: TypeScript example demonstrating how to unmount and destroy a Scalar API Reference instance.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/html-js.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst app = Scalar.createApiReference('#app', {\n  url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n})\n\napp.destroy()\n```\n\n----------------------------------------\n\nTITLE: Running the Django Server\nDESCRIPTION: Commands to navigate to the project directory and start the Django development server to access the API reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncd apidemo\n./manage.py runserver\n```\n\n----------------------------------------\n\nTITLE: Serving an OpenAPI document using Scalar CLI\nDESCRIPTION: This command demonstrates how to serve an OpenAPI document using the Scalar CLI, with file watching enabled.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpx @scalar/cli serve ./src/documents/3.1.yaml --watch\n```\n\n----------------------------------------\n\nTITLE: Creating Scalar Configuration File in Bash\nDESCRIPTION: This command creates an empty Scalar configuration file named 'scalar.config.json' in the current directory.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntouch scalar.config.json\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Docusaurus Plugin with npm\nDESCRIPTION: Command to install the Scalar Docusaurus plugin via npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/docusaurus\n```\n\n----------------------------------------\n\nTITLE: Enabling Dynamic Base Server URL Detection in Scalar\nDESCRIPTION: This snippet demonstrates how to enable dynamic base server URL detection, which automatically uses the request's scheme, host, and path base to construct the base URL for server URLs in the OpenAPI document.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/subpath-deployment.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options =>  options.WithDynamicBaseServerUrl());\n```\n\n----------------------------------------\n\nTITLE: Implementing useBindCx Hook in Vue 3 Component\nDESCRIPTION: This snippet demonstrates how to use the useBindCx hook in a Vue 3 component. It shows the setup script, component props, options, and template usage. The example includes using cva for variant generation and binding the merged classes to a div element.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-hooks/src/useBindCx/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script setup>\nimport { useBindCx, cva } from '@scalar/components'\n\ndefineProps<{ active?: boolean }>()\n\n// Important: disable inheritance of attributes\ndefineOptions({ inheritAttrs: false })\n\nconst { cx } = useBindCx()\n\nconst variants = cva({\n  base: 'border rounded p-2 bg-b-1',\n  variants: { active: { true: 'bg-b-2' } },\n})\n</script>\n<template>\n  <div v-bind=\"cx(variants({ active }))\">MockComponent</div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Running Next.js Development Server\nDESCRIPTION: Commands to start the Next.js development server using various package managers. This allows developers to run the project locally for development and testing.\nSOURCE: https://github.com/scalar/scalar/blob/main/examples/nextjs-api-reference/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Mock Server via CLI\nDESCRIPTION: This command uses npx to run the Scalar CLI and start a mock server based on an OpenAPI specification file. The --watch flag enables automatic reloading on file changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/mock-server/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx @scalar/cli mock openapi.json --watch\n```\n\n----------------------------------------\n\nTITLE: Configuring Rollup Build Options\nDESCRIPTION: Basic Rollup configuration setup with TypeScript support and entry point specification. Demonstrates how to create a rollup.config.ts file with common build options.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/build-tooling/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { RollupOptions } from 'rollup'\n\nimport { createRollupConfig } from './src/rollup-options'\n\nconst options: RollupOptions = {\n  // Specify the entry point(s) for your build\n  input: ['./src/index.ts'],\n  // Alternative: Use findEntryPoints for multiple entry points with TypeScript and CSS support\n  // input: await findEntryPoints({ allowCss: true }),\n  ...createRollupConfig({\n    // Enable TypeScript support\n    typescript: true,\n\n    // Additional options can be added here to customize the build\n  }),\n}\n\n// Export the Rollup configuration\nexport default options\n```\n\n----------------------------------------\n\nTITLE: Running the Fastify development server\nDESCRIPTION: Command to start the Fastify server in development mode using npm run script.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Importing Scalar Components Styles\nDESCRIPTION: TypeScript import statement for including Scalar Components CSS styles in the main application file\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport '@scalar/components/style.css'\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar NestJS API Reference Plugin via npm\nDESCRIPTION: Command to install the Scalar NestJS API Reference package using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/nestjs-api-reference\n```\n\n----------------------------------------\n\nTITLE: Customizing Scalar API Reference Route\nDESCRIPTION: C# code snippet showing how to change the default endpoint path for the Scalar API Reference from '/scalar' to a custom route.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_7\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(\"/api-reference\");\n```\n\n----------------------------------------\n\nTITLE: Implementing Filled SVG Icon with Current Color\nDESCRIPTION: Example of a properly formatted filled SVG icon using currentColor, with correct viewBox implementation and fill-rule settings. The icon maintains a square aspect ratio and follows all recommended guidelines.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarIcon/README.md#2025-04-22_snippet_0\n\nLANGUAGE: svg\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n    <path fill-rule=\"evenodd\" d=\"M12.6 11.2h.1l3 3a1 1 0 1 1-1.4 1.5l-3-3a1 1 0 0 1-.1-.1 7 7 0 1 1 1.4-1.4zM7 12A5 5 0 1 0 7 2a5 5 0 0 0 0 10z\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.3 Changelog for Scalar API Reference\nDESCRIPTION: Documents patch changes for version 1.13.3, including a feature to show raw response schema and a dependency update.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.3\n\n### Patch Changes\n\n- 87032eed: feat: show raw response schema\n- Updated dependencies [6cc43ab7]\n  - @scalar/swagger-editor@0.9.5\n```\n\n----------------------------------------\n\nTITLE: Theme Configuration\nDESCRIPTION: Configuration example for setting the theme of the Scalar API reference.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nexport default defineNuxtConfig({\n  modules: ['@scalar/nuxt'],\n  scalar: {\n    theme: 'nuxt',\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: Running FastAPI Application with Uvicorn Server\nDESCRIPTION: Command to start the FastAPI application using the Uvicorn ASGI server with auto-reload enabled for development purposes.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastapi/playground/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nuvicorn main:app --reload\n```\n\n----------------------------------------\n\nTITLE: Mock API Server Commands\nDESCRIPTION: Commands for creating a mock API server based on OpenAPI specifications.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nscalar mock\nscalar mock openapi.json --watch\nscalar mock openapi.json --watch --port 8080\nscalar mock https://example.com/openapi.json --watch\n```\n\n----------------------------------------\n\nTITLE: Configuring Scribe for Scalar Integration\nDESCRIPTION: Required configuration changes to switch from the default Scribe setup to Scalar API reference, changing the type to 'external_laravel' and theme to 'scalar'.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n-    'type' => 'static',\n+    'type' => 'external_laravel',\n-    'theme' => 'default',\n+    'theme' => 'scalar',\n```\n\n----------------------------------------\n\nTITLE: Generating OpenAPI Documentation\nDESCRIPTION: Artisan command to generate the OpenAPI documentation file based on your Laravel application's API routes.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan scribe:generate\n```\n\n----------------------------------------\n\nTITLE: Overriding Default Icon Styles\nDESCRIPTION: Example of overriding default Scalar Icon styles using custom Tailwind classes\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<ScalarIcon\n  icon=\"Logo\"\n  class=\"size-24\" />\n```\n\n----------------------------------------\n\nTITLE: Starting Laravel Development Server\nDESCRIPTION: Command to start the Laravel development server using Artisan, making the application accessible at http://127.0.0.1:8000.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan serve\n```\n\n----------------------------------------\n\nTITLE: Tracking References in OpenAPI Specification\nDESCRIPTION: Demonstrates how to use the onDereference callback option when dereferencing an OpenAPI specification to track resolved references.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { dereference } from '@scalar/openapi-parser'\n\nconst { schema, errors } = await dereference(specification, {\n  onDereference: ({ schema, ref }) => {\n    //\n  },\n})\n```\n\n----------------------------------------\n\nTITLE: HTML Scoping Implementation\nDESCRIPTION: Shows how to scope the Scalar theme to an application by adding the scalar-app class to the root element.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<body class=\"scalar-app\">\n  <!-- Your application content -->\n</body>\n```\n\n----------------------------------------\n\nTITLE: Basic Scalar Icon Component Usage\nDESCRIPTION: Vue component example showing how to import and use the ScalarIcon component with basic props\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script\n  setup\n  lang=\"ts\">\n  import { ScalarIcon } from '@scalar/components'\n</script>\n<template>\n  <ScalarIcon\n    icon=\"Logo\"\n    size=\"lg\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Development Setup Commands\nDESCRIPTION: Commands for setting up the development environment and linking the package globally.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\npnpm @scalar/cli --version\npnpm cli:link\nscalar --version\n```\n\n----------------------------------------\n\nTITLE: Using Individual Plugin for Reduced Bundle Size\nDESCRIPTION: Shows how to use a specific plugin directly to minimize bundle size, using the Node.js Undici plugin as an example\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/snippetz/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { nodeUndici } from '@scalar/snippetz/plugins/node/undici'\n\nconst result = nodeUndici.generate({\n  url: 'https://example.com',\n})\n\nconsole.log(source)\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for executing unit tests, end-to-end tests, and generating test coverage reports in a NestJS application.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/playground/nestjs-api-reference-express/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Creating HTML File for Scalar API Reference\nDESCRIPTION: This HTML snippet creates the basic structure for hosting the Scalar API Reference. It includes the necessary script tags to load Scalar and its configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_19\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Scalar API Reference</title>\n</head>\n<body>\n    <div id=\"app\"></div>\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n    <script src=\"./scalar.config.js\"></script>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Format OpenAPI Files\nDESCRIPTION: Commands for formatting OpenAPI files with different input/output options using Prettier.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nscalar format\nscalar format openapi.json --output openapi.yaml\nscalar format https://example.com/openapi.json --output openapi.json\n```\n\n----------------------------------------\n\nTITLE: Styling Scalar Popover Components\nDESCRIPTION: Example showing how to apply different classes to reference and floating elements in a ScalarPopover\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<!-- Will apply the class `w-48` to the floating element (the popover) -->\n<ScalarPopover class=\"w-48\">\n  <!-- Will apply the class `w-full` to the reference element (the button) -->\n  <ScalarButton class=\"w-full\">Open</ScalarButton>\n  <template #popover> ... </template>\n</ScalarPopover>\n```\n\n----------------------------------------\n\nTITLE: Starting AdonisJS Development Server\nDESCRIPTION: Commands to navigate to the project directory and start the AdonisJS development server.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/adonisjs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-awesome-app\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Serve OpenAPI Documentation\nDESCRIPTION: Commands for serving API reference documentation locally with various options.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nscalar serve\nscalar serve openapi.json\nscalar serve openapi.json --port 1234\nscalar serve openapi.json --watch\nscalar serve https://example.com/openapi.json --watch\n```\n\n----------------------------------------\n\nTITLE: Importing the request function from Scalar Fetch\nDESCRIPTION: Example of how to import the request function from the @scalar/fetch package.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@scalar/fetch'\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Fetch via npm\nDESCRIPTION: Command to install the @scalar/fetch package using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/fetch\n```\n\n----------------------------------------\n\nTITLE: Running Electron App in Development Mode\nDESCRIPTION: Commands to navigate to the app directory and start the Electron app in development mode.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/RELEASE.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd projects/scalar-app\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: JavaScript Theme Implementation\nDESCRIPTION: Shows how to implement themes using JavaScript by generating and inserting CSS styles into the document head.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getThemeStyles } from '@scalar/themes'\n\nconst styles = getThemeStyles('alternate', { layer: 'scalar-theme' })\ndocument.head.insertAdjacentHTML('beforeend', `<style>${styles}</style>`)\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.7.0 Updates in Markdown\nDESCRIPTION: Details minor changes and patch changes for version 0.7.0, including new features, bug fixes, and refactoring.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.7.0\n\n### Minor Changes\n\n- 3b1fec80: feat: show response body preview for json and html, add html syntax highlighting, no preview for unknown content\n\n### Patch Changes\n\n- 6caceb45: - feat: send query parameters\n  - feat: add a readOnly prop to the <APIClient /> component\n  - fix: removed broken button loading state, replaced with boring loader animation\n  - fix: z-index issue with API client, search and the request history\n  - refactor: replace font sizes with variables, fix some minor font size issues\n  - remove default User-Agent header (browser doesn't like setting the User-Agent header)\n  - chore: moved FlowModal to its own package\n- addd9fa2: feat: use `default` prefix for all CSS variables\n- Updated dependencies [b184bdf2]\n- Updated dependencies [3b1fec80]\n- Updated dependencies [addd9fa2]\n  - @scalar/use-codemirror@0.7.0\n  - @scalar/default-theme@0.3.1\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Play Button Scripts in HTML\nDESCRIPTION: This snippet shows how to add the required scripts to your HTML page to enable the Scalar Play Button functionality. It includes the main script and a data URL for the YAML configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script\n  id=\"scalar-play-button-script\"\n  data-url=\"https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.yaml\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/@scalar/play-button\"></script>\n```\n\n----------------------------------------\n\nTITLE: Configuring FastEndpoints Integration\nDESCRIPTION: Configuration setup for using Scalar with FastEndpoints OpenAPI generator in Program.cs.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/README.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.SwaggerDocument();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwaggerGen(options =>\n    {\n        options.Path = \"/openapi/{documentName}.json\";\n    });\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Reference for Fastify\nDESCRIPTION: Command to install the Scalar API Reference package for Fastify, which provides an interactive UI for OpenAPI documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/fastify-api-reference\n```\n\n----------------------------------------\n\nTITLE: Setting up ScalarToasts component in Vue\nDESCRIPTION: Example of how to set up the ScalarToasts component in the main App.vue file. This component is responsible for rendering the toast notifications.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-toasts/README.md#2025-04-22_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n// App.vue\n<script setup>\nimport { ScalarToasts } from '@scalar/use-toasts'\n</script>\n<template>\n  <ScalarToasts />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Adding Scalar Namespace in C#\nDESCRIPTION: Adding the necessary using directive to access Scalar's functionality in your C# code.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing Scalar.AspNetCore;\n```\n\n----------------------------------------\n\nTITLE: Implementing Scalar Popover Component\nDESCRIPTION: Example of using the ScalarPopover component with reference and floating elements\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<ScalarPopover>\n  <!-- Reference element -->\n  <ScalarButton>Open</ScalarButton>\n  <template #popover>\n    <!-- Floating element -->\n  </template>\n</ScalarPopover>\n```\n\n----------------------------------------\n\nTITLE: Customizing Scalar Icon Size\nDESCRIPTION: Example of customizing a Scalar Icon component using the size prop\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ScalarIcon\n  icon=\"Logo\"\n  size=\"lg\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Mock Server via npm\nDESCRIPTION: This command installs the @scalar/mock-server package using npm for advanced use cases where direct integration into a Node.js application is required.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/mock-server/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/mock-server\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies Definition in Requirements File\nDESCRIPTION: Specifies exact versions of Python packages required for the project. The file lists django-ninja version 1.1.0 (a REST framework for Django) and typing_extensions version 4.11.0 (which provides backported and experimental type hints).\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/django-ninja/requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ndjango-ninja==1.1.0\ntyping_extensions==4.11.0\n```\n\n----------------------------------------\n\nTITLE: Implementing Line SVG Icon with Rounded Caps\nDESCRIPTION: Example of a correctly formatted line SVG icon with 24x24 viewBox, using currentColor for stroke and proper stroke-linecap settings.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarIcon/README.md#2025-04-22_snippet_1\n\nLANGUAGE: svg\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <path stroke-linecap=\"round\" stroke=\"currentColor\" d=\"M10.7 1.3l-9.4 9.4m0-9.4l9.4 9.4\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Markdown Alert Syntax in API Documentation\nDESCRIPTION: This snippet shows how to create a tip alert using Markdown syntax. It's an example of how to enhance API documentation with visual cues.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/markdown.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> [!tip]\\n> You can now use markdown alerts in your descriptions.\n```\n\n----------------------------------------\n\nTITLE: Configuring i18n Support in Docusaurus\nDESCRIPTION: Modifies the docusaurus.config.js file to add support for the French locale alongside the default English locale. Sets up the internationalization configuration with appropriate locale definitions.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/translate-your-site.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  i18n: {\n    defaultLocale: 'en',\n    locales: ['en', 'fr'],\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing useBindCx in Vue Component\nDESCRIPTION: A Vue component example demonstrating how to use the useBindCx hook with cva variants. The component shows proper setup with inheritance disabled and implements class merging for a dynamic UI element with active state variants.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/docs/useBindCx/useBindCx.mdx#2025-04-22_snippet_0\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { useBindCx, cva } from '@scalar/components'\n\ndefineProps<{ active?: boolean }>()\n\n// Important: disable inheritance of attributes\ndefineOptions({ inheritAttrs: false })\n\nconst { cx } = useBindCx()\n\nconst variants = cva({\n  base: 'border rounded p-2 bg-b-1',\n  variants: { active: { true: 'bg-b-2' } },\n})\n</script>\n<template>\n  <div v-bind=\"cx(variants({ active }))\">MockComponent</div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Installing @scalar/use-toasts package with npm\nDESCRIPTION: Command to install the @scalar/use-toasts package using npm. This is the first step to integrate the toast functionality into a project.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-toasts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/use-toasts\n```\n\n----------------------------------------\n\nTITLE: Using useToasts composable in a Vue component\nDESCRIPTION: Demonstration of how to use the useToasts composable in a child component. It shows how to import the composable, extract the toast function, and use it to display a success message with a custom timeout.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-toasts/README.md#2025-04-22_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n// ChildComponent.vue\n<script setup>\nimport { useToasts } from '@scalar/use-toasts'\n\nconst { toast } = useToasts()\n\nconst sendMessage = () => {\n  toast('This is a message from the toaster!', 'success', { timeout: 2000 })\n}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Reference React Package\nDESCRIPTION: Command to install the Scalar API Reference React package using npm for use with the Pages Router approach.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/nextjs.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm add @scalar/api-reference-react\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar FastAPI Plugin via pip\nDESCRIPTION: This command installs the Scalar FastAPI plugin using pip package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastapi/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install scalar-fastapi\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Tests\nDESCRIPTION: Commands for executing different types of tests in a NestJS application, including unit tests, end-to-end tests, and test coverage reports.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/playground/nestjs-api-reference-fastify/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n```\n\n----------------------------------------\n\nTITLE: Defining Code Blocks with Syntax Highlighting in Markdown\nDESCRIPTION: Example of how to create code blocks with syntax highlighting, titles, and language specification in Markdown.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_5\n\nLANGUAGE: md\nCODE:\n```\n```jsx title=\"src/components/HelloDocusaurus.js\"\nfunction HelloDocusaurus() {\n  return <h1>Hello, Docusaurus!</h1>\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Enabling Publish on Merge in Scalar Configuration in JSON\nDESCRIPTION: This JSON snippet demonstrates how to enable the 'Publish on Merge' feature in the Scalar configuration. It adds the 'publishOnMerge' property set to true.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"publishOnMerge\": true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom CDN for Scalar API Reference\nDESCRIPTION: Examples of configuring a custom CDN for the Scalar API Reference. Shows both a standard implementation and an implementation with a specified CDN URL to use a specific version of the API reference package.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/hono/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Scalar } from '@scalar/hono-api-reference'\n\napp.get('/scalar', Scalar({ url: '/doc', pageTitle: 'Awesome API' }))\n\napp.get('/scalar', Scalar({\n  url: '/doc',\n  cdn: 'https://cdn.jsdelivr.net/npm/@scalar/api-reference@latest',\n}))\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Reference for Django Ninja\nDESCRIPTION: Command to install the Scalar API Reference package for Django Ninja from GitHub repository using pip.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npip install git+https://github.com/scalar/scalar.git#subdirectory=packages/scalar_django_ninja\n```\n\n----------------------------------------\n\nTITLE: Implementing Draggable Component in Vue\nDESCRIPTION: Vue template showing how to implement the Draggable component with recursive rendering for nested items. Includes configuration props and styling classes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/draggable/README.md#2025-04-22_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <Draggable\n    :id=\"id\"\n    :ceiling=\"0.8\"\n    :floor=\"0.2\"\n    :height=\"30\"\n    :parentIds=\"[...parentIds, id]\">\n    <div\n      class=\"sidebar-item\"\n      :class=\"{ 'sidebar-folder': items[id].children.length }\">\n      {{ items[id].name }}\n      <SidebarItem\n        v-for=\"childId in items[id].children\"\n        :id=\"childId\"\n        :key=\"childId\"\n        :items=\"items\"\n        :parentIds=\"[...parentIds, id]\" />\n    </div>\n  </Draggable>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Running Go Proxy Server\nDESCRIPTION: Commands to start the Go Proxy Server using the default port (1337) or a custom port specified by the PORT environment variable.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/proxy-scalar-com/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo run main.go\n```\n\nLANGUAGE: bash\nCODE:\n```\nPORT=8080 go run main.go\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Components with PNPM\nDESCRIPTION: Command to install the Scalar Components package using PNPM package manager\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @scalar/components\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Client via NPM\nDESCRIPTION: Command to install the Scalar API Client package using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/api-client\n```\n\n----------------------------------------\n\nTITLE: Installing Laravel Installer with Composer\nDESCRIPTION: Command to globally install the Laravel installer using Composer, which allows creating new Laravel projects.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer global require \"laravel/installer=~1.1\"\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for OpenAPI Schemas\nDESCRIPTION: High-level documentation explaining the organization and principles for OpenAPI schema definitions. Emphasizes OAS compliance and minimal extensions.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/src/entities/spec/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Open API Spec Schemas and Validators\n\nAll schemas here should be predominantly OAS compliant shapes.\n\nSchemas should be extended as little as possible to support client usage.\n\nWhere applicable we will break objects out into separate storage maps and keep\na list of UIDs in the original object (servers in a request for example)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Theme in Scalar Configuration in JSON\nDESCRIPTION: This JSON snippet shows how to set a custom theme for the Scalar documentation. It adds the 'theme' property with a specific theme value.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"theme\": \"purple\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Local Development Server for Docusaurus Website\nDESCRIPTION: Command to start a local development server that opens a browser window. Changes to the website are reflected live without needing to restart the server.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Updating package.json for ECMAScript modules support\nDESCRIPTION: Modifications to the package.json file to enable ECMAScript modules and add a development script using nodemon for automatic server restarts.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n{\n  \"name\": \"my-fastify-app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n+ \"type\": \"module\",\n  \"scripts\": {\n+    \"dev\": \"npx nodemon index.js\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  …\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Icon Library via pnpm\nDESCRIPTION: This command installs the Scalar Icon Library using pnpm package manager. It adds the @scalar/icons package to your project dependencies.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/icons/src/library/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @scalar/icons\n```\n\n----------------------------------------\n\nTITLE: Implementing CodeMirror in a Vue component\nDESCRIPTION: Example of how to use the useCodeMirror hook in a Vue component. It demonstrates setting up the editor with initial content, language, and options, as well as handling content changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-codemirror/README.md#2025-04-22_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { useCodeMirror } from '@scalar/use-codemirror'\nimport { ref } from 'vue'\n\nconst editor = ref(null)\n\nconst { codeMirror, setCodeMirrorContent } = useCodeMirror({\n  codeMirrorRef: editor,\n  content: '{ \"foo\": \"bar\" }',\n  language: 'json',\n  lineNumbers: true,\n  onChange: (value) => {\n    console.log('Content changed:', value)\n  },\n})\n</script>\n\n<template>\n  <div ref=\"editor\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Fastify API Reference Package\nDESCRIPTION: Command to install the @scalar/fastify-api-reference package from npm using the terminal.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastify/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/fastify-api-reference\n```\n\n----------------------------------------\n\nTITLE: Installing Next.js OpenAPI Plugin\nDESCRIPTION: Command to install the @scalar/nextjs-openapi package using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/nextjs-openapi/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/nextjs-openapi\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar useTooltip Package via NPM\nDESCRIPTION: Command to install the @scalar/use-tooltip package using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-tooltip/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/use-tooltip\n```\n\n----------------------------------------\n\nTITLE: Laravel Project Setup Configuration Options\nDESCRIPTION: This displays the CLI setup options selected for the new Laravel project, including Breeze with Alpine, dark mode support, Pest testing framework, and Git initialization.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n ┌ Would you like to install a starter kit? ────────────────────┐\n │ Laravel Breeze                                               │\n └──────────────────────────────────────────────────────────────┘\n\n ┌ Which Breeze stack would you like to install? ───────────────┐\n │ Blade with Alpine                                            │\n └──────────────────────────────────────────────────────────────┘\n\n ┌ Would you like dark mode support? ───────────────────────────┐\n │ Yes                                                          │\n └──────────────────────────────────────────────────────────────┘\n\n ┌ Which testing framework do you prefer? ──────────────────────┐\n │ Pest                                                         │\n └──────────────────────────────────────────────────────────────┘\n\n ┌ Would you like to initialize a Git repository? ──────────────┐\n │ Yes                                                          │\n └──────────────────────────────────────────────────────────────┘\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Core Package with npm\nDESCRIPTION: Command to install the @scalar/core package using npm. This is a prerequisite step for using the package in your project.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/core/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/core\n```\n\n----------------------------------------\n\nTITLE: Basic CSS Theme Import\nDESCRIPTION: TypeScript code showing how to import basic theme styles and additional theme presets.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport '@scalar/themes/styles.css'\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport '@scalar/themes/presets/alternate.css'\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar.AspNetCore Package\nDESCRIPTION: Command to install the Scalar.AspNetCore NuGet package with version specification using wildcard for patch updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndotnet add package Scalar.AspNetCore --version 2.1.*\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Doc with Actix Feature\nDESCRIPTION: Command to install the scalar-doc crate with Actix feature enabled using cargo.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/rust.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncargo add scalar-doc -F actix\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Scalar App\nDESCRIPTION: Command to install project dependencies using pnpm package manager\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm install\n```\n\n----------------------------------------\n\nTITLE: Tailwind Configuration Setup\nDESCRIPTION: TypeScript configuration for integrating Scalar themes preset with Tailwind CSS, including type safety.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport scalarPreset from '@scalar/themes/tailwind'\nimport { type Config } from 'tailwindcss'\n\nexport default {\n  presets: [scalarPreset],\n  // Your tailwind config\n  theme: {\n    extend: {\n      // Extend the preset\n    },\n    // Override the preset\n  },\n} satisfies Config\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running the React Project\nDESCRIPTION: This snippet shows the commands to navigate into the newly created project directory, install dependencies, and start the development server.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/react.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-awesome-app\npnpm install\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Django Ninja Integration\nDESCRIPTION: Command to install the Scalar integration package for Django Ninja from GitHub repository.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/django-ninja/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install git+https://github.com/scalar/scalar.git#subdirectory=integrations/django-ninja\n```\n\n----------------------------------------\n\nTITLE: Quick Help Command\nDESCRIPTION: Basic command to get help information using npx without installation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx @scalar/cli help\n```\n\n----------------------------------------\n\nTITLE: Configuring NSwag Integration\nDESCRIPTION: Configuration setup for using Scalar with NSwag OpenAPI generator in Program.cs.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/README.md#2025-04-22_snippet_4\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddOpenApiDocument();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseOpenApi(options =>\n    {\n        options.Path = \"/openapi/{documentName}.json\";\n    });\n    app.MapScalarApiReference();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Import Package using npm\nDESCRIPTION: This snippet shows how to install the @scalar/import package using npm. It's a prerequisite for using the package in your project.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/import/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/import\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Mounting Scalar API Client\nDESCRIPTION: HTML template showing how to set up the DOM structure for mounting the full Scalar API Client application. Includes the necessary container element with appropriate classes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!-- index.html -->\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1.0\" />\n    <title>Scalar API Client App</title>\n  </head>\n  <body>\n    <div\n      id=\"scalar-client\"\n      class=\"scalar-app scalar-client\"></div>\n    <script\n      type=\"module\"\n      src=\"./main.js\"></script>\n  </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Installing Postman to OpenAPI Converter via npm\nDESCRIPTION: This command installs the @scalar/postman-to-openapi package using npm. It adds the converter tool to your project's dependencies.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/postman-to-openapi/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/postman-to-openapi\n```\n\n----------------------------------------\n\nTITLE: Starting CDN Server for Testing\nDESCRIPTION: Command to start the CDN API reference server in development mode for testing\nSOURCE: https://github.com/scalar/scalar/blob/main/playwright/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm --filter cdn-api-reference dev\n```\n\n----------------------------------------\n\nTITLE: Creating a React Page in Docusaurus\nDESCRIPTION: This code shows how to create a React page in Docusaurus. It imports the Layout component from the theme and defines a basic React component that renders a heading and a paragraph within the layout.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/create-a-page.md#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Layout from '@theme/Layout'\nimport React from 'react'\n\nexport default function MyReactPage() {\n  return (\n    <Layout>\n      <h1>My React page</h1>\n      <p>This is a React page</p>\n    </Layout>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Icons Package with PNPM\nDESCRIPTION: Command to install the @scalar/icons package using PNPM package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/icons/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @scalar/icons\n```\n\n----------------------------------------\n\nTITLE: Installing Django Ninja Package\nDESCRIPTION: Command to install the Django Ninja package using pip, which also installs Django as a dependency.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/django-ninja.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install django-ninja\n```\n\n----------------------------------------\n\nTITLE: Adding OpenAPI Reference to Scalar Configuration in JSON\nDESCRIPTION: This JSON snippet shows how to add an OpenAPI/Swagger file reference to the Scalar configuration. It extends the 'references' array with an API reference entry.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"references\": [\n    {\n      \"name\": \"API Reference\",\n      \"path\": \"docs/openapi.yaml\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Use Hooks via npm\nDESCRIPTION: This command installs the Scalar Use Hooks package using npm. It adds the @scalar/use-hooks package to your project dependencies.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-hooks/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm add @scalar/use-hooks\n```\n\n----------------------------------------\n\nTITLE: Implementing React Component in Pages Router\nDESCRIPTION: Example of implementing the API reference React component in a Pages Router setup.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n'use client'\n\nimport { ApiReferenceReact } from '@scalar/api-reference-react'\n\nimport '@scalar/api-reference-react/style.css'\n\nexport default function References() {\n  return (\n    <ApiReferenceReact\n      configuration={{\n        url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n      }}\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar.AspNetCore Package via .NET CLI\nDESCRIPTION: Command to add the Scalar.AspNetCore package to your .NET project using the dotnet CLI, with a recommendation to use a wildcard for the patch version to automatically receive updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/dotnet.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ndotnet add package Scalar.AspNetCore --version 2.1.*\n```\n\n----------------------------------------\n\nTITLE: Share OpenAPI Files\nDESCRIPTION: Commands for sharing OpenAPI files by uploading to Scalar Sandbox.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nscalar share\nscalar share openapi.json\n```\n\n----------------------------------------\n\nTITLE: API Documentation Subdomain Example\nDESCRIPTION: Example showing the format of the free API documentation subdomain provided by Scalar.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/getting-started.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n${whatever-you-like}.apidocumentation.com\n```\n\n----------------------------------------\n\nTITLE: Creating Lists in Markdown\nDESCRIPTION: Demonstrates how to create ordered and unordered lists in Markdown, including nested lists and lists with multiple paragraphs.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- Red\n- Green\n- Blue\n\n1.  Bird\n2.  McHale\n3.  Parish\n```\n\n----------------------------------------\n\nTITLE: Void Server Commands\nDESCRIPTION: Commands for starting a HTTP dummy server that responds with request data.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nscalar void\nscalar void --port 8080\n```\n\n----------------------------------------\n\nTITLE: Importing Scalar Namespace\nDESCRIPTION: Adding the using directive to include Scalar.AspNetCore namespace in the project.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/README.md#2025-04-22_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nusing Scalar.AspNetCore;\n```\n\n----------------------------------------\n\nTITLE: Initializing AdonisJS Project via CLI\nDESCRIPTION: Command to create a new AdonisJS project using npm. It prompts the user for project configuration options.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/adonisjs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm init adonisjs@latest my-awesome-app\n```\n\n----------------------------------------\n\nTITLE: Version Changelog Entry in Markdown\nDESCRIPTION: A changelog entry documenting version changes and updates including patch changes, dependency updates and feature additions. The entries follow a consistent format with version numbers, change types and descriptions.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- c05c90e: feat: add image support to tag, operation and webhook descriptions\n- 2700c5c: feat: separate google fonts from theme, add withDefaultFonts setting\n- Updated dependencies [2700c5c]\n  - @scalar/components@0.5.5\n  - @scalar/themes@0.7.5\n  - @scalar/api-client@1.2.8\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Next.js API Reference Package\nDESCRIPTION: Command to install the @scalar/nextjs-api-reference package via npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/nextjs-api-reference\n```\n\n----------------------------------------\n\nTITLE: Importing Scalar Galaxy as a JSON string in TypeScript\nDESCRIPTION: This code shows how to import the Scalar Galaxy OpenAPI specification as a JSON string in TypeScript.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport ScalarGalaxy from '@scalar/galaxy/latest.json?raw'\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar OpenAPI Types Package\nDESCRIPTION: This snippet shows how to install the @scalar/openapi-types package using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-types/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm add @scalar/openapi-types\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Blog Post in Docusaurus with Markdown\nDESCRIPTION: This example shows how to create a blog post file in Docusaurus with proper front matter. The front matter includes metadata such as slug, title, authors information (names, titles, URLs, and avatars), and tags. The post content follows the front matter and can be freely edited.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/create-a-blog-post.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: greetings\ntitle: Greetings!\nauthors:\n  - name: Joel Marcey\n    title: Co-creator of Docusaurus 1\n    url: https://github.com/JoelMarcey\n    image_url: https://github.com/JoelMarcey.png\n  - name: Sébastien Lorber\n    title: Docusaurus maintainer\n    url: https://sebastienlorber.com\n    image_url: https://github.com/slorber.png\ntags: [greetings]\n---\n\nCongratulations, you have made your first post!\n\nFeel free to play around and edit this post as much as you like.\n```\n\n----------------------------------------\n\nTITLE: Creating Admonitions in Markdown\nDESCRIPTION: Example of creating callouts and admonitions in Markdown using Docusaurus's special syntax for tips and warnings.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_7\n\nLANGUAGE: md\nCODE:\n```\n:::tip My tip\n\nUse this awesome feature option\n\n:::\n\n:::danger Take care\n\nThis action is dangerous\n\n:::\n```\n\n----------------------------------------\n\nTITLE: Initializing API Versioning Services in ASP.NET Core\nDESCRIPTION: Basic setup for API versioning services with format configuration and URL substitution.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\nservices.AddApiVersioning().AddApiExplorer(options =>\n{\n    options.GroupNameFormat = \"'v'VVV\";\n    options.SubstituteApiVersionInUrl = true;\n});\n```\n\n----------------------------------------\n\nTITLE: Starting the Docusaurus Development Server\nDESCRIPTION: Commands to navigate to the new project directory and start the local development server. The server builds the website locally and makes it available at http://localhost:3000/ with automatic reloading for changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/intro.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-website\nnpm run start\n```\n\n----------------------------------------\n\nTITLE: Installing Fastify Swagger for OpenAPI support\nDESCRIPTION: Command to install the official Swagger package for Fastify that enables OpenAPI 3.0 specification generation.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @fastify/swagger\n```\n\n----------------------------------------\n\nTITLE: Changing to Project Directory\nDESCRIPTION: Command to navigate into the newly created Laravel project directory.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd my-new-app\n```\n\n----------------------------------------\n\nTITLE: Presenting Version 0.6.0 Changes in Markdown\nDESCRIPTION: Outlines minor changes and patch changes for version 0.6.0, including dependency updates and formatting changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.6.0\n\n### Minor Changes\n\n- 87fda5af: chore: update dependencies\n\n### Patch Changes\n\n- ef080a26: chore: format package.json\n- Updated dependencies [ef080a26]\n- Updated dependencies [87fda5af]\n  - @scalar/use-keyboard-event@0.5.0\n  - @scalar/use-codemirror@0.6.0\n  - @scalar/themes@0.3.0\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar CLI Globally\nDESCRIPTION: Command for installing the Scalar CLI tool globally using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm -g install @scalar/cli\n```\n\n----------------------------------------\n\nTITLE: Retrieving Available Plugins\nDESCRIPTION: Shows how to get a list of all available plugins in the snippetz library\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/snippetz/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { snippetz } from '@scalar/snippetz'\n\nconst snippet = snippetz().plugins()\n```\n\n----------------------------------------\n\nTITLE: Scoping Scalar Components HTML Structure\nDESCRIPTION: Example showing how to scope Scalar components by adding the scalar-app class to the root element\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<body class=\"scalar-app\">\n  <!-- Use components in here -->\n</body>\n```\n\n----------------------------------------\n\nTITLE: Running Scalar Void and Proxy Servers for Testing\nDESCRIPTION: These commands start the Scalar void server and proxy server, which are required for running certain tests.\nSOURCE: https://github.com/scalar/scalar/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev:void-server\npnpm dev:proxy-server\n```\n\n----------------------------------------\n\nTITLE: Displaying Scalar ASCII Art Logo and Project Information\nDESCRIPTION: This code snippet presents an ASCII art representation of the Scalar logo, followed by package details including name, version, website, GitHub repository, and license information. It's likely used as a header in source files or documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/license-banner-template.txt#2025-04-22_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n/**\n *    _____ _________    __    ___    ____\n *   / ___// ____/   |  / /   /   |  / __ \\\n *   \\__ \\/ /   / /| | / /   / /| | / /_/ /\n *  ___/ / /___/ ___ |/ /___/ ___ |/ _, _/\n * /____/\\____/_/  |_/_____/_/  |_/_/ |_|\n *\n * {{ packageName }} {{ version }}\n *\n * Website: https://scalar.com\n * GitHub:  https://github.com/scalar/scalar\n * License: https://github.com/scalar/scalar/blob/main/LICENSE\n**/\n```\n\n----------------------------------------\n\nTITLE: Installing Fastify and initializing a Node.js project\nDESCRIPTION: Basic npm commands to set up a new Node.js project and install Fastify as a dependency.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/fastify.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm init\nnpm install fastify\n```\n\n----------------------------------------\n\nTITLE: PNPM Troubleshooting Configuration\nDESCRIPTION: Configuration to resolve PNPM-related export errors using shamefully-hoist setting.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nshamefully-hoist=true\n```\n\n----------------------------------------\n\nTITLE: Showing Patch Changes for Version 0.5.1 in Markdown\nDESCRIPTION: Records a patch change for version 0.5.1, removing nunjucks as a dependency.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.5.1\n\n### Patch Changes\n\n- e49cdc3a: chore: remove nunjucks as a dependency\n```\n\n----------------------------------------\n\nTITLE: Creating Code Blocks in Markdown\nDESCRIPTION: Shows how to create pre-formatted code blocks in Markdown by indenting every line of the block by at least 4 spaces or 1 tab.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst message = 'this is a code block'\n\nconsole.log(message)\n```\n\nLANGUAGE: applescript\nCODE:\n```\ntell application \"Foo\"\n    beep\nend tell\n```\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"footer\">&copy; 2004 Foo Corporation</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Laravel Application\nDESCRIPTION: Command to create a new Laravel application named 'my-new-app' using the Laravel installer.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nlaravel new my-new-app\n```\n\n----------------------------------------\n\nTITLE: Checking Plugin Availability\nDESCRIPTION: Demonstrates how to check if a specific plugin is loaded in the snippetz library\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/snippetz/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { snippetz } from '@scalar/snippetz'\n\nconst snippet = snippetz().hasPlugin('node', 'undici')\n```\n\n----------------------------------------\n\nTITLE: Example cURL Request to Go Proxy Server\nDESCRIPTION: A cURL command demonstrating how to make a GET request to the Go Proxy Server, which then forwards the request to a specified URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/proxy-scalar-com/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl --request GET \\\n     --url 'localhost:1337?scalar_url=https%3A%2F%2Fgalaxy.scalar.com%2Fplanets'\n```\n\n----------------------------------------\n\nTITLE: JavaScript Function Example\nDESCRIPTION: Demonstrates JavaScript syntax highlighting with a simple increment function and console output\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/code-highlight/playground/markdown-test.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar foo = function (bar) {\n  return bar++\n}\n\nconsole.log(foo(5))\n```\n\n----------------------------------------\n\nTITLE: Building Scalar App using toDesktop\nDESCRIPTION: Command to build the application using toDesktop. Requires team access credentials.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm todesktop:build\n```\n\n----------------------------------------\n\nTITLE: Example of Semantic PR Title Format\nDESCRIPTION: This code block illustrates the required format for semantic PR titles, showing the prefix and subject structure.\nSOURCE: https://github.com/scalar/scalar/blob/main/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\ndocs: Add information about semantic commits\n^     ^\n|     |__ Subject\n|________ Prefix\n```\n\n----------------------------------------\n\nTITLE: Detailing Version 0.5.0 Updates in Markdown\nDESCRIPTION: Presents minor changes and patch changes for version 0.5.0, including refactoring, new features, and package information updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.5.0\n\n### Minor Changes\n\n- 0902d82c: \\* refactor: add the CodeMirror component to @scalar/use-codemirror, use it everywhere\n  - feat: allow to pass forceDarkMode to the CodeMirror component\n\n### Patch Changes\n\n- 10498d9d: chore: add README\n- 494083a0: add more information to the package.json\n- Updated dependencies [0902d82c]\n- Updated dependencies [10498d9d]\n- Updated dependencies [494083a0]\n  - @scalar/use-codemirror@0.5.0\n  - @scalar/use-keyboard-event@0.4.1\n  - @scalar/themes@0.2.1\n```\n\n----------------------------------------\n\nTITLE: Starting the Docusaurus development server\nDESCRIPTION: These commands navigate to the project directory and start the Docusaurus development server.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/docusaurus.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-awesome-website\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Installing Snippetz via NPM\nDESCRIPTION: Command to install the @scalar/snippetz package using npm package manager\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/snippetz/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/snippetz\n```\n\n----------------------------------------\n\nTITLE: Running the Scalar mock server for development\nDESCRIPTION: This command starts the Scalar mock server for development purposes using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: JSON Code Example\nDESCRIPTION: Shows a code block with JSON-style object definition\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/code-highlight/playground/markdown-test.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n{ some code, part of Definition 2 }\n```\n\n----------------------------------------\n\nTITLE: Building App for toDesktop\nDESCRIPTION: Command to build the application for toDesktop platform deployment.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/RELEASE.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm todesktop:build\n```\n\n----------------------------------------\n\nTITLE: Configuring Docusaurus Sidebar Structure\nDESCRIPTION: Example of explicitly defining the sidebar structure in sidebars.js, including document organization and category creation.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/create-a-document.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  tutorialSidebar: [\n    'intro',\n    // highlight-next-line\n    'hello',\n    {\n      type: 'category',\n      label: 'Tutorial',\n      items: ['tutorial-basics/create-a-document'],\n    },\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Component for Pages Router\nDESCRIPTION: Command to install the React component package for Pages Router implementation.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/api-reference-react\n```\n\n----------------------------------------\n\nTITLE: Creating Initial Documentation Structure in Bash\nDESCRIPTION: This snippet demonstrates how to create a basic documentation structure using Bash commands. It creates a 'docs' folder and adds an introductory Markdown file.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/guides/docs/github-sync.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Create a docs/ folder\nmkdir docs\n\n# Create an example file\necho \"# Hello World\" > docs/introduction.md\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: Complete version history documenting changes to the @scalar/draggable package, including version bumps, feature additions, bug fixes, and maintenance updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/draggable/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/draggable\n\n## 0.1.11\n\n### Patch Changes\n\n- c10bbf5: chore: code style\n\n## 0.1.10\n\n### Patch Changes\n\n- fa6afe8: chore: code formatting\n\n## 0.1.9\n\n### Patch Changes\n\n- f500435: chore: stricter TypeScript configuration\n- 34e6f52: feat: upgrade to stricter tsconfig\n\n## 0.1.8\n\n### Patch Changes\n\n- 90529fc: chore: upgrade to react 19\n\n## 0.1.7\n\n### Patch Changes\n\n- a40999d: chore: added type safety rule noUncheckedIndexedAccess\n\n## 0.1.6\n\n### Patch Changes\n\n- 0c34a18: chore: updated vue package to 3.5\n\n## 0.1.5\n\n### Patch Changes\n\n- e9253af: fix(api-client): scope api client draggable styles\n\n## 0.1.4\n\n### Patch Changes\n\n- dfa7434: feat(api-client): added drag and drop to the api client\n\n## 0.1.3\n\n### Patch Changes\n\n- 94e68ab: chore: upgrade typescript to 5.5\n\n## 0.1.2\n\n### Patch Changes\n\n- a2cb3c3: Migrate away from unintended peer dependencies\n\n## 0.1.1\n\n### Patch Changes\n\n- e0fc110: chore: patch bump all package\n\n## 0.1.0\n\n### Minor Changes\n\n- 7f8ef74: chore: remove aliasing\n\n### Patch Changes\n\n- 6fbb57e: feat: release all the packages\n\n## 0.0.7\n\n### Patch Changes\n\n- 453b297: fix: drag and dropping of draggable\n\n## 0.0.6\n\n### Patch Changes\n\n- b5a3f7e: feat: added a few props to draggable and exported prop types\n\n## 0.0.5\n\n### Patch Changes\n\n- 45dc04b: fix: can't release packages\n\n## 0.0.4\n\n### Patch Changes\n\n- f0cc812: chore: update exports for draggable and add jsdoc types\n- 05e2e27: chore: add provenance statement\n- bf430f6: fix: export draggable types\n\n## 0.0.3\n\n### Patch Changes\n\n- 07211ad: chore: added new lint rule for type importing for better perf\n\n## 0.0.2\n\n### Patch Changes\n\n- fbaaf20: feat: added draggable package\n```\n\n----------------------------------------\n\nTITLE: Running Docker Compose for Scalar API Reference\nDESCRIPTION: Command to start the Scalar API Reference service using Docker Compose in the directory containing the docker-compose.yml file.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/docker/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker-compose up\n```\n\n----------------------------------------\n\nTITLE: Initial Build Setup with Git and PNPM\nDESCRIPTION: Commands to update the repository, install dependencies, and build the project using pnpm and turbo.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/RELEASE.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit pull\npnpm install\npnpm turbo build\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite/Vue Build Scripts in package.json\nDESCRIPTION: Script configuration for Vue projects using Vite build system with vue-tsc for type checking, along with standard formatting and linting tools.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/build-tooling/README.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"scripts\": {\n  \"build\": \"scalar-build-vite\",\n  \"types:check\": \"scalar-types-check-vue\",\n  \"types:build\": \"scalar-types-build-vue\",\n  \"format:check\": \"scalar-format-check\",\n  \"format\": \"scalar-format\",\n  \"lint:check\": \"scalar-lint-check\",\n  \"lint:fix\": \"scalar-lint-fix\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Links in Markdown\nDESCRIPTION: Demonstrates how to create inline links in Markdown using square brackets for link text and parentheses for the URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nThis is [an example](http://example.com/) inline link.\n\n[This link](http://example.net/) has no title attribute.\n```\n\n----------------------------------------\n\nTITLE: Embedding Images with Absolute Paths in Markdown\nDESCRIPTION: Example of embedding images in Markdown using absolute paths to reference files in the static directory.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_3\n\nLANGUAGE: md\nCODE:\n```\n![Docusaurus logo](/img/docusaurus.png)\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Void Server via NPM\nDESCRIPTION: Command to install the @scalar/void-server package using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/void-server/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm add @scalar/void-server\n```\n\n----------------------------------------\n\nTITLE: Scalar Project Changelog Entries\nDESCRIPTION: A log of version changes and updates to the Scalar project, including patch changes, feature additions, bug fixes and dependency updates across multiple packages.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- a13f853: feat: update api client ui\n- Updated dependencies [a13f853]\n  - @scalar/use-codemirror@0.10.4\n\n## 1.2.21\n\n### Patch Changes\n\n- f871c28: fix: api client address bar url\n- 3748dc5: feat: api client toggle sidebar hotkey\n\n## 1.2.20\n\n### Patch Changes \n\n- 0640c52: feat: api client address bar style update\n- 84399ab: feat: add api client response empty state\n- a80345a: fix: vertical alignment of client response empty state\n- Updated dependencies [6e67167]\n  - @scalar/components@0.7.6\n```\n\n----------------------------------------\n\nTITLE: Adding Locale Dropdown to Docusaurus Navigation\nDESCRIPTION: Updates the docusaurus.config.js file to add a language selector dropdown to the navigation bar, allowing users to switch between available languages on the site.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/translate-your-site.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  themeConfig: {\n    navbar: {\n      items: [\n        // highlight-start\n        {\n          type: 'localeDropdown',\n        },\n        // highlight-end\n      ],\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Reference for Hono\nDESCRIPTION: Command to install the Scalar API Reference middleware for Hono via npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/hono/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/hono-api-reference\n```\n\n----------------------------------------\n\nTITLE: Running Scalar CLI from Source Files\nDESCRIPTION: This command demonstrates how to run the Scalar CLI directly from source files using pnpm.\nSOURCE: https://github.com/scalar/scalar/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm @scalar/cli --version\n```\n\n----------------------------------------\n\nTITLE: Inline Code in Markdown\nDESCRIPTION: Demonstrates how to indicate a span of inline code in Markdown using backtick quotes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nUse the `printf()` function.\n```\n\n----------------------------------------\n\nTITLE: Creating Links with Relative File Paths in Markdown\nDESCRIPTION: Example of creating links in Markdown using relative file paths to other Markdown documents.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_2\n\nLANGUAGE: md\nCODE:\n```\nLet's see how to [Create a page](./create-a-page.md).\n```\n\n----------------------------------------\n\nTITLE: Building a Docusaurus Site for Production\nDESCRIPTION: This command builds your Docusaurus site for production, generating static HTML, JavaScript and CSS files in the build folder.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/deploy-your-site.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Presenting Version 0.3.0 Changes in Markdown\nDESCRIPTION: Shows minor changes for version 0.3.0, including a manual release of all packages and corresponding dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.3.0\n\n### Minor Changes\n\n- b0f5221: manually releasing all packages to make sure the lastest version is on npm\n\n### Patch Changes\n\n- Updated dependencies [b0f5221]\n  - @scalar/use-codemirror@0.3.0\n  - @scalar/use-keyboard-event@0.3.0\n```\n\n----------------------------------------\n\nTITLE: Creating Translation Directory Structure for Docs\nDESCRIPTION: Creates the required directory structure for translations and copies the original markdown file to be translated into French. Sets up the proper path hierarchy for the Docusaurus translation system.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/translate-your-site.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p i18n/fr/docusaurus-plugin-content-docs/current/\n\ncp docs/intro.md i18n/fr/docusaurus-plugin-content-docs/current/intro.md\n```\n\n----------------------------------------\n\nTITLE: Basic Code Indentation Example\nDESCRIPTION: Demonstrates basic indented code block formatting with comments\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/code-highlight/playground/markdown-test.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Draggable Package\nDESCRIPTION: Command to install the @scalar/draggable package using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/draggable/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/draggable\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.11 Changelog for Scalar API Reference\nDESCRIPTION: Lists patch changes for version 1.13.11, including fixes for search keyboard navigation and improvements in displaying additionalProperties.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.11\n\n### Patch Changes\n\n- 57f899f2: fix: search keyboard navigation doesn't work when the mouse hovers the results\n- cb4093f2: feat: show additionalProperties in example requests/responses and in Models\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.2.1 and 0.2.0 Updates in Markdown\nDESCRIPTION: Lists patch changes for version 0.2.1 and minor changes for version 0.2.0, including dependency updates and various fixes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.2.1\n\n### Patch Changes\n\n- Updated dependencies [41b06cb]\n  - @scalar/use-keyboard-event@0.2.1\n\n## 0.2.0\n\n### Minor Changes\n\n- a ton of fixes, new fastify plugin\n\n### Patch Changes\n\n- Updated dependencies\n  - @scalar/use-codemirror@0.2.0\n  - @scalar/use-keyboard-event@0.2.0\n```\n\n----------------------------------------\n\nTITLE: Adding Emphasis in Markdown\nDESCRIPTION: Shows how to add emphasis to text in Markdown using asterisks and underscores for italic and bold formatting.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n*single asterisks*\n\n_single underscores_\n\n**double asterisks**\n\n__double underscores__\n```\n\n----------------------------------------\n\nTITLE: Embedding Images with Relative Paths in Markdown\nDESCRIPTION: Example of embedding images in Markdown using relative paths to colocate images with their Markdown files.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_4\n\nLANGUAGE: md\nCODE:\n```\n![Docusaurus logo](./img/docusaurus.png)\n```\n\n----------------------------------------\n\nTITLE: Starting Docusaurus with a Specific Locale\nDESCRIPTION: Runs the Docusaurus development server with the specified French locale flag to test and preview the translated site in development mode.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/translate-your-site.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start -- --locale fr\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Docusaurus Document in Markdown\nDESCRIPTION: Example of creating a simple Docusaurus document with markdown formatting, demonstrating basic structure and syntax.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/create-a-document.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Hello\n\nThis is my **first Docusaurus document**!\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.0 Changelog for Scalar API Reference\nDESCRIPTION: Lists minor and patch changes for version 1.13.0, including a new feature for client ignore list and various fixes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.0\n\n### Minor Changes\n\n- 97cd84e9: feat: client ignore list\n\n### Patch Changes\n\n- 5dac9c51: fix: open section on search result click\n- 0e0f34b3: fix: cleanup safari bugs\n- 7582e82a: fix: classic layout stylings\n- Updated dependencies [0e0f34b3]\n  - @scalar/api-client@0.8.8\n```\n\n----------------------------------------\n\nTITLE: Adding LocalStorage Syncing to Client App\nDESCRIPTION: This feature adds localStorage syncing functionality to the client application.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n- 618285e: feat: add localStorage syncing to client app\n```\n\n----------------------------------------\n\nTITLE: Running Playwright E2E Tests\nDESCRIPTION: Commands for running end-to-end tests with optional filtering for specific test suites\nSOURCE: https://github.com/scalar/scalar/blob/main/playwright/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm test:e2e\npnpm test:e2e:ui\npnpm test:e2e cdn\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright Dependencies\nDESCRIPTION: Commands for installing Playwright and its required dependencies including browser installations\nSOURCE: https://github.com/scalar/scalar/blob/main/playwright/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm exec playwright install\npnpm playwright:install\nnpx playwright install --with-deps\n```\n\n----------------------------------------\n\nTITLE: Documenting Patch Changes for Versions 0.1.5 to 0.1.1 in Markdown\nDESCRIPTION: Details patch changes for versions 0.1.5 through 0.1.1, including style improvements, dependency changes, and initial release information.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.5\n\n### Patch Changes\n\n- style: improve default style\n\n## 0.1.4\n\n### Patch Changes\n\n- fix: externalize dependencies\n- Updated dependencies\n  - @scalar/use-codemirror@0.1.4\n  - @scalar/use-keyboard-event@0.1.4\n\n## 0.1.3\n\n### Patch Changes\n\n- fix: add CSS file to swagger editor\n- Updated dependencies\n  - @scalar/use-codemirror@0.1.3\n  - @scalar/use-keyboard-event@0.1.3\n\n## 0.1.2\n\n### Patch Changes\n\n- 7cd41bc: fix: point main entry to dist folder\n- Updated dependencies [7cd41bc]\n  - @scalar/use-codemirror@0.1.2\n  - @scalar/use-keyboard-event@0.1.2\n\n## 0.1.1\n\n### Patch Changes\n\n- f46e320: Initial release 👀\n- Updated dependencies [f46e320]\n  - @scalar/use-codemirror@0.1.1\n  - @scalar/use-keyboard-event@0.1.1\n```\n\n----------------------------------------\n\nTITLE: Creating Blockquotes in Markdown\nDESCRIPTION: Shows how to create blockquotes in Markdown using email-style '>' characters, including nested blockquotes and blockquotes containing other Markdown elements.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,\n> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.\n> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\n>\n> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse\n> id sem consectetuer libero luctus adipiscing.\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.5 Changelog for Scalar API Reference\nDESCRIPTION: Documents various patch changes for version 1.13.5, including search improvements, fixes for basePath handling, navigation enhancements, and updates to show body and formData parameters.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.5\n\n### Patch Changes\n\n- 09a27371: feat: add headings from the description to the search\n- 629ebd81: fix: basePath (Swagger 2.0) is ignored\n- 5ca138ee: - Removed activeBreadCrumb from api-client as its available in the slot\n  - Centralized navigation logic\n  - use proper anchor navigation instead of scrollIntoView, it will also be saved to history\n  - scrolling down will open the next section\n- 5ca138ee: fix: open section on search result click\n- b8ce7fd5: feat: show body and formData parameters (Swagger 2.0)\n- Updated dependencies [5ca138ee]\n- Updated dependencies [b8ce7fd5]\n  - @scalar/api-client@0.9.0\n  - @scalar/swagger-editor@0.9.6\n  - @scalar/use-toasts@0.5.12\n  - @scalar/use-modal@0.2.2\n  - @scalar/themes@0.5.3\n  - @scalar/use-clipboard@0.5.12\n  - @scalar/components@0.2.1\n```\n\n----------------------------------------\n\nTITLE: Creating Links with Absolute Paths in Markdown\nDESCRIPTION: Example of creating links in Markdown using absolute URL paths to other pages in the documentation.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_1\n\nLANGUAGE: md\nCODE:\n```\nLet's see how to [Create a page](/create-a-page).\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install all necessary dependencies for a NestJS project using npm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/playground/nestjs-api-reference-express/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry\nDESCRIPTION: Changelog entries documenting version changes, bug fixes, features and dependency updates\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- 4385ae2: fix: add missing dependencies\n- 632d6f7: fix: add cookie handler and schema\n- a5aedf5: feat: lint workspace sidenav icons\n- a5aedf5: feat: add server icon\n- d6a2a4d: feat: api client data table input enum select component\n- cd5d1a4: fix: made adding of scalar classes to headless more robust\n- Updated dependencies [d6a2a4d]\n- Updated dependencies [04ca40b]\n- Updated dependencies [632d6f7]\n- Updated dependencies [a5aedf5]\n- Updated dependencies [a5aedf5]\n- Updated dependencies [cd5d1a4]\n  - @scalar/oas-utils@0.2.9\n  - @scalar/object-utils@1.1.3\n  - @scalar/components@0.12.8\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.4 Changelog for Scalar API Reference\nDESCRIPTION: Lists patch changes for version 1.13.4, including an update to axios and related dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.4\n\n### Patch Changes\n\n- dae1010a: chore: update axios to 1.6.5\n- Updated dependencies [dae1010a]\n  - @scalar/api-client@0.8.10\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook and Scalar Icons Components\nDESCRIPTION: Imports required components from Storybook blocks and Scalar icons package for documentation and display purposes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/docs/icons/ScalarIcons.mdx#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Meta, Canvas, Controls, IconGallery, IconItem, Story } from '@storybook/blocks'\nimport * as Stories from './ScalarIcons.stories';\nimport * as icons from '@scalar/icons'\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.13 Changelog for Scalar API Reference\nDESCRIPTION: Lists patch changes for version 1.13.13, including fixes for URL formatting, handling of additionalProperties, and schema processing.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.13\n\n### Patch Changes\n\n- 7e0ca478: fix: Restoring missing forward slash between URL and API routes\n- 9ca25eda: fix: additionalProperties: false is ignored\n- e5354121: fix: better deal with incomplete schemas\n```\n\n----------------------------------------\n\nTITLE: Deploying Docusaurus Website Without SSH\nDESCRIPTION: Command to deploy the website without SSH, using GitHub username for authentication. This is useful for deploying to GitHub Pages by building the website and pushing to the 'gh-pages' branch.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ GIT_USER=<Your GitHub username> yarn deploy\n```\n\n----------------------------------------\n\nTITLE: Example JSON Response from Go Proxy Server\nDESCRIPTION: A sample JSON response returned by the Go Proxy Server, containing data about planets and pagination metadata.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/proxy-scalar-com/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Mars\",\n      \"description\": \"The red planet\",\n      \"image\": \"https://cdn.scalar.com/photos/mars.jpg\",\n      \"creator\": {\n        \"id\": 1,\n        \"name\": \"Marc\",\n        \"email\": \"marc@scalar.com\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"limit\": 10,\n    \"offset\": 0,\n    \"total\": 100,\n    \"next\": \"/planets?limit=10&offset=10\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Showing Patch Changes for Versions 0.1.15 to 0.1.11 in Markdown\nDESCRIPTION: Records patch changes for versions 0.1.15 through 0.1.11, including various fixes and additions.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.15\n\n### Patch Changes\n\n- fix: mismatched variables\n\n## 0.1.14\n\n### Patch Changes\n\n- update font weights\n\n## 0.1.13\n\n### Patch Changes\n\n- fix: use scalar fonts\n\n## 0.1.12\n\n### Patch Changes\n\n- add useClientStore export\n\n## 0.1.11\n\n### Patch Changes\n\n- add store export\n```\n\n----------------------------------------\n\nTITLE: Presenting Patch Changes for Versions 0.1.10 to 0.1.6 in Markdown\nDESCRIPTION: Lists patch changes for versions 0.1.10 through 0.1.6, covering various updates and fixes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.10\n\n### Patch Changes\n\n- add force show to client\n\n## 0.1.9\n\n### Patch Changes\n\n- update scalar variables\n\n## 0.1.8\n\n### Patch Changes\n\n- remove hardcoded colors\n\n## 0.1.7\n\n### Patch Changes\n\n- fix variables and missing styles\n\n## 0.1.6\n\n### Patch Changes\n\n- fix: issues with empty responses, minor styling issues\n```\n\n----------------------------------------\n\nTITLE: Inserting Line Breaks in Markdown\nDESCRIPTION: Demonstrates how to insert a <br /> break tag in Markdown by ending a line with two or more spaces and then typing return.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarMarkdown/test.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nWhen you _do_ want to insert a `<br />` break tag using Markdown, you\nend a line with two or more spaces, then type return.\n```\n\n----------------------------------------\n\nTITLE: Installing NestJS Dependencies with npm\nDESCRIPTION: Command to install all project dependencies required for the NestJS application. This should be run before attempting to start or test the application.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/playground/nestjs-api-reference-fastify/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install\n```\n\n----------------------------------------\n\nTITLE: Updating Patch Changes for Scalar API Reference\nDESCRIPTION: Lists patch changes including rendering images in descriptions, adding support for custom request examples, showing nullable properties, and using schema examples.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- 706b29f2: feat: render images in the description\n- d8fc0544: feat: add support for `x-custom-examples` (custom request examples)\n- 55e74b08: feat: show nullable properties\n- 8573da8d: feat: use schema examples\n```\n\n----------------------------------------\n\nTITLE: Simulating Update Process for Scalar App\nDESCRIPTION: Command to simulate an update process during development\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm dev:update\n```\n\n----------------------------------------\n\nTITLE: Listing Patch Changes for Versions 0.1.21 to 0.1.16 in Markdown\nDESCRIPTION: Details patch changes for versions 0.1.21 through 0.1.16, covering various fixes, improvements, and feature additions.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.1.21\n\n### Patch Changes\n\n- fix: Node polyfill issues (process undefined)\n\n## 0.1.20\n\n### Patch Changes\n\n- add offline search and ui improvements\n- add offline search, improve ui\n\n## 0.1.19\n\n### Patch Changes\n\n- feat: add a standalone version\n\n## 0.1.18\n\n### Patch Changes\n\n- fix sidebar height issue\n\n## 0.1.17\n\n### Patch Changes\n\n- fix incorrect font sizes\n\n## 0.1.16\n\n### Patch Changes\n\n- css variable fixes and hocuspocusurl prop\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: HTML table structure that displays contributor information including profile images, usernames and profile links in a responsive grid format. Each contributor entry includes a 100px width avatar image and their GitHub username as a clickable link.\nSOURCE: https://github.com/scalar/scalar/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n\t<tbody>\n\t\t<tr>\n            <td align=\"center\">\n                <a href=\"https://github.com/sanscontext\">\n                    <img src=\"https://avatars.githubusercontent.com/u/17016388?v=4\" width=\"100;\" alt=\"sanscontext\"/>\n                    <br />\n                    <sub><b>sanscontext</b></sub>\n                </a>\n            </td>\n            <!-- Additional contributor cells following same pattern -->\n\t\t</tr>\n\t<tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Structured changelog entries documenting version changes, including patch updates, feature additions, and dependency upgrades.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/ts-to-openapi/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/ts-to-openapi\n\n## 0.0.5\n\n### Patch Changes\n\n- 54fdfcb: chore: remove spec wording\n- fa6afe8: chore: code formatting\n\n## 0.0.4\n\n### Patch Changes\n\n- a40999d: chore: added type safety rule noUncheckedIndexedAccess\n\n## 0.0.3\n\n### Patch Changes\n\n- e911047: Add default exports\n\n## 0.0.2\n\n### Patch Changes\n\n- ed0bd1e: chore: upgrade typescript to 5.6.2\n\n## 0.0.1\n\n### Patch Changes\n\n- 89adf75: feat(ts-to-openapi): created initial library package with tests\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Application in Different Environments\nDESCRIPTION: Commands for running the NestJS application in development, watch mode (with auto-reload), and production environments. Each command triggers a different npm script configured in package.json.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/playground/nestjs-api-reference-fastify/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Version 0.6.0 Changelog Entry in Markdown\nDESCRIPTION: Details the changes in version 0.6.0, including a minor feature update to allow multi documents and dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-react/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.6.0\n\n### Minor Changes\n\n- 39c0f47: feat: update to allow multi documents\n\n### Patch Changes\n\n- Updated dependencies [cd75eeb]\n- Updated dependencies [39c0f47]\n- Updated dependencies [b4a8f65]\n  - @scalar/api-reference@1.28.3\n  - @scalar/types@0.1.1\n```\n\n----------------------------------------\n\nTITLE: Running Scalar App in Development Mode\nDESCRIPTION: Command to start the application in development mode using pnpm\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm dev\n```\n\n----------------------------------------\n\nTITLE: Listing Patch Changes for Versions 0.5.5 to 0.5.2 in Markdown\nDESCRIPTION: Documents patch changes for versions 0.5.5, 0.5.4, 0.5.3, and 0.5.2, primarily focusing on dependency updates and source file removals.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.5.5\n\n### Patch Changes\n\n- Updated dependencies [81336114]\n  - @scalar/use-codemirror@0.5.4\n\n## 0.5.4\n\n### Patch Changes\n\n- Updated dependencies [068669b6]\n  - @scalar/use-codemirror@0.5.3\n\n## 0.5.3\n\n### Patch Changes\n\n- Updated dependencies [ac492d94]\n  - @scalar/use-codemirror@0.5.2\n\n## 0.5.2\n\n### Patch Changes\n\n- d51aebe5: chore: remove source files from packages\n- Updated dependencies [d51aebe5]\n  - @scalar/use-keyboard-event@0.4.2\n  - @scalar/use-codemirror@0.5.1\n```\n\n----------------------------------------\n\nTITLE: Incorrect SVG Line Icon Implementation with Wrong Dimensions\nDESCRIPTION: Example of improper line icon implementation with incorrect viewBox dimensions and explicit stroke-width setting.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarIcon/README.md#2025-04-22_snippet_4\n\nLANGUAGE: svg\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 36\" fill=\"none\">\n\t<polyline stroke=\"currentColor\" stroke-width=\"2\" points=\"21.4,4.6 10.5,19.4 2.5,13\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Build Tooling Changelog in Markdown\nDESCRIPTION: A detailed changelog showing version history from 0.0.2 to 0.1.17, documenting patches, minor changes, and various improvements to the build tooling package.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/build-tooling/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/build-tooling\n\n## 0.1.17\n\n### Patch Changes\n\n- 5cf4908: Remove file extension\n\n## 0.1.16\n\n### Patch Changes\n\n- f48d65f: fix: update turbo cache key\n- 3283fc6: Add cssFilename fallback for Vite6->Vite5 alignment\n\n## 0.1.15\n\n### Patch Changes\n\n- c10bbf5: chore: code style\n\n## 0.1.14\n\n### Patch Changes\n\n- e350f23: chore: code style\n\n## 0.1.13\n\n### Patch Changes\n\n- fa6afe8: chore: code formatting\n- 1223c1f: chore: code style\n\n## 0.1.12\n\n### Patch Changes\n\n- a40999d: chore: added type safety rule noUncheckedIndexedAccess\n\n## 0.1.11\n\n### Patch Changes\n\n- e911047: Add default exports\n\n## 0.1.10\n\n### Patch Changes\n\n- 2a1b5f4: Prevent dist deletion in vite builds\n\n## 0.1.9\n\n### Patch Changes\n\n- 7cb664a: feat: rollup removes dist folder by default\n\n## 0.1.8\n\n### Patch Changes\n\n- 397faa4: Add property for workspace path to vite reload watcher\n\n## 0.1.7\n\n### Patch Changes\n\n- 94e68ab: chore: upgrade typescript to 5.5\n\n## 0.1.6\n\n### Patch Changes\n\n- e0fc110: chore: patch bump all package\n\n## 0.1.5\n\n### Patch Changes\n\n- 689677a: fix: auto importing css backup\n- 8494349: Migrate to highlightjs based syntax highlighting\n- b38c7ed: Update build configs to a standardized format\n- 6fbb57e: feat: release all the packages\n\n## 0.1.4\n\n### Patch Changes\n\n- 45dc04b: fix: can't release packages\n\n## 0.1.3\n\n### Patch Changes\n\n- 05e2e27: chore: add provenance statement\n\n## 0.1.2\n\n### Patch Changes\n\n- 22f2858: chore: ran syncpack to update packages\n\n## 0.1.1\n\n### Patch Changes\n\n- 2488ddd: Add trailing space for package file saving\n\n## 0.1.0\n\n### Minor Changes\n\n- 7fb8273: Migrate to @scalar/openapi-parser\n\n## 0.0.4\n\n### Patch Changes\n\n- cecf074: Migrate to oas utils for basic spec operations\n\n## 0.0.3\n\n### Patch Changes\n\n- 313997c: chore: align node versions to basis 18\n\n## 0.0.2\n\n### Patch Changes\n\n- c254604: Add OAS utils package\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.7 Changelog for Scalar API Reference\nDESCRIPTION: Documents dependency updates for version 1.13.7.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.7\n\n### Patch Changes\n\n- Updated dependencies [479a7e3e]\n  - @scalar/swagger-editor@0.9.7\n  - @scalar/use-codemirror@0.7.18\n  - @scalar/api-client@0.9.1\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Page in Docusaurus\nDESCRIPTION: This example demonstrates how to create a simple Markdown page in Docusaurus. It includes a heading and a paragraph of text using Markdown syntax.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/create-a-page.md#2025-04-22_snippet_1\n\nLANGUAGE: mdx\nCODE:\n```\n# My Markdown page\n\nThis is a Markdown page\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format for @scalar/api-client\nDESCRIPTION: The changelog entries follow a consistent format, listing version numbers as h2 headings (e.g., ## 2.3.24), with patch changes listed underneath along with dependency updates. Each change is prefixed with a dash and includes a commit reference or description.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/api-client\n\n## 2.3.24\n\n### Patch Changes\n\n- 3cb857d: fix: updates import collection modal transition style\n- 3cb857d: fix: updates web layout background style target\n- Updated dependencies [17e7d02]\n- Updated dependencies [2b61d8e]\n- Updated dependencies [49f1297]\n- Updated dependencies [ab4cf5a]\n  - @scalar/types@0.1.9\n  - @scalar/components@0.13.51\n  - @scalar/use-hooks@0.1.43\n  - @scalar/icons@0.3.0\n  - @scalar/oas-utils@0.2.134\n  - @scalar/openapi-parser@0.10.16\n  - @scalar/snippetz@0.2.19\n  - @scalar/themes@0.10.1\n  - @scalar/use-codemirror@0.11.96\n  - @scalar/import@0.3.17\n  - @scalar/postman-to-openapi@0.2.7\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Galaxy via npm\nDESCRIPTION: This command installs the Scalar Galaxy package using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/galaxy/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/galaxy\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Content\nDESCRIPTION: A changelog documenting version updates and patch changes for Scalar project packages. Contains version numbers, dependency updates, bug fixes and feature additions.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [ec52346]\n- Updated dependencies [ded1303]\n- Updated dependencies [6aae9fe]\n- Updated dependencies [bbbabe6]\n  - @scalar/api-client@2.0.1\n  - @scalar/api-reference@1.24.24\n```\n\n----------------------------------------\n\nTITLE: Version Change Log Entry in Markdown\nDESCRIPTION: Markdown formatted changelog entry documenting patch changes and dependency updates, including feature additions and version bumps for various Scalar packages\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- ef080a26: chore: format package.json\n- 9d925e1c: feat: add browser build to the package\n- 2cfc8786: feat: add a ton more clients to render example requests\n- Updated dependencies [ef080a26]\n- Updated dependencies [87fda5af]\n- Updated dependencies [45645710]\n  - @scalar/use-keyboard-event@0.5.0\n  - @scalar/swagger-editor@0.6.0\n  - @scalar/swagger-parser@0.5.0\n  - @scalar/use-codemirror@0.6.0\n  - @scalar/themes@0.3.0\n  - @scalar/use-clipboard@0.5.0\n  - @scalar/use-tooltip@0.5.0\n  - @scalar/api-client@0.6.0\n  - @scalar/use-toasts@0.5.0\n```\n\n----------------------------------------\n\nTITLE: Changelog Version Updates in Markdown\nDESCRIPTION: Documents package version changes and dependency updates across the Scalar project ecosystem, tracking changes to api-client, api-reference, oas-utils, themes and other packages.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [7c2e291]\n- Updated dependencies [46a55ae]\n- Updated dependencies [90e4baf]\n- Updated dependencies [5d996a8]\n- Updated dependencies [b26144c]\n  - @scalar/api-client@2.1.18\n  - @scalar/api-reference@1.25.32\n  - @scalar/oas-utils@0.2.53\n  - @scalar/themes@0.9.35\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: Documents the version history and dependency updates for @scalar/core, showing patch changes and dependencies updates across multiple versions.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/core/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/core\n\n## 0.2.9\n\n### Patch Changes\n\n- Updated dependencies [17e7d02]\n  - @scalar/types@0.1.9\n\n## 0.2.8\n\n### Patch Changes\n\n- Updated dependencies [feaa314]\n  - @scalar/types@0.1.8\n\n## 0.2.7\n\n### Patch Changes\n\n- Updated dependencies [9def02e]\n- Updated dependencies [3745d77]\n  - @scalar/types@0.1.7\n\n## 0.2.6\n\n### Patch Changes\n\n- Updated dependencies [3783345]\n  - @scalar/types@0.1.6\n\n## 0.2.5\n\n### Patch Changes\n\n- Updated dependencies [e09dab3]\n- Updated dependencies [04e27a1]\n  - @scalar/types@0.1.5\n\n## 0.2.4\n\n### Patch Changes\n\n- Updated dependencies [8efedf3]\n- Updated dependencies [82a4ba8]\n- Updated dependencies [57feba6]\n  - @scalar/types@0.1.4\n\n## 0.2.3\n\n### Patch Changes\n\n- Updated dependencies [543a16c]\n- Updated dependencies [57e96a0]\n  - @scalar/types@0.1.3\n\n## 0.2.2\n\n### Patch Changes\n\n- 7a8965c: chore: remove spec prefix\n- Updated dependencies [7a8965c]\n- Updated dependencies [49dffff]\n  - @scalar/types@0.1.2\n\n## 0.2.1\n\n### Patch Changes\n\n- Updated dependencies [39c0f47]\n  - @scalar/types@0.1.1\n\n## 0.2.0\n\n### Minor Changes\n\n- 01f2610: feat: use new JS API\n\n## 0.1.3\n\n### Patch Changes\n\n- Updated dependencies [5f9a8a2]\n  - @scalar/types@0.1.0\n\n## 0.1.2\n\n### Patch Changes\n\n- Updated dependencies [fc6a45e]\n  - @scalar/types@0.0.41\n\n## 0.1.1\n\n### Patch Changes\n\n- Updated dependencies [4d03e0f]\n  - @scalar/types@0.0.40\n\n## 0.1.0\n\n### Minor Changes\n\n- bab7990: init :)\n\n### Patch Changes\n\n- Updated dependencies [bab7990]\n- Updated dependencies [2c621d4]\n  - @scalar/types@0.0.39\n```\n\n----------------------------------------\n\nTITLE: Incorrect SVG Icon Implementation with Missing ViewBox\nDESCRIPTION: Example of improper SVG implementation missing viewBox attribute and using hard-coded fill color.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarIcon/README.md#2025-04-22_snippet_3\n\nLANGUAGE: svg\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000\">\n    <path fill-rule=\"evenodd\" d=\"M12.6 11.2h.1l3 3a1 1 0 1 1-1.4 1.5l-3-3a1 1 0 0 1-.1-.1 7 7 0 1 1 1.4-1.4zM7 12A5 5 0 1 0 7 2a5 5 0 0 0 0 10z\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Express API Reference Package\nDESCRIPTION: Command to install the @scalar/express-api-reference package using npm. This is the first step to integrate the middleware into an Express.js application.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/express/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/express-api-reference\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown\nDESCRIPTION: Release notes and version history for @scalar/components, organized by version numbers and change types. Documents dependencies, patches, features and fixes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/components\n\n## 0.13.51\n\n### Patch Changes\n\n- 2b61d8e: docs(icons): update docs and storybook\n- ab4cf5a: fix: adds text size variants to scalar tooltip\n- Updated dependencies [2b61d8e]\n- Updated dependencies [49f1297]\n  - @scalar/use-hooks@0.1.43\n  - @scalar/icons@0.3.0\n  - @scalar/themes@0.10.1\n  - @scalar/code-highlight@0.0.27\n\n## 0.13.50\n\n### Patch Changes\n\n- 363276e: feat(icons): add Phosphor icons to @scalar/icons\n- a9f232a: fix(components): break words when wrapping search results\n- Updated dependencies [363276e]\n  - @scalar/icons@0.2.0\n  - @scalar/use-hooks@0.1.42\n```\n\n----------------------------------------\n\nTITLE: Version Number Header in Markdown\nDESCRIPTION: A version number header used to denote a specific release version in the changelog.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.22.12\n```\n\n----------------------------------------\n\nTITLE: Package Installation Command\nDESCRIPTION: Command to install the @scalar/themes package using pnpm package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @scalar/themes\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Docusaurus Website\nDESCRIPTION: Command to install all required dependencies for the Scalar website using Yarn package manager.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry - Dependency Updates\nDESCRIPTION: Lists dependency updates for multiple Scalar packages including version bumps and feature additions\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-editor/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [cb3e89f]\n- Updated dependencies [594a96c]\n- Updated dependencies [0adbfd5]\n- Updated dependencies [9b4def7]\n- Updated dependencies [9b4def7]\n- Updated dependencies [44a7100]\n- Updated dependencies [1e3214c]\n- Updated dependencies [2a6117e]\n  - @scalar/api-client@2.1.52\n  - @scalar/api-reference@1.25.67\n  - @scalar/use-hooks@0.1.1\n  - @scalar/oas-utils@0.2.77\n  - @scalar/use-codemirror@0.11.39\n```\n\n----------------------------------------\n\nTITLE: Incorrect SVG Icon Implementation with Hard-coded Dimensions\nDESCRIPTION: Example of improper SVG implementation with hard-coded width/height attributes and non-square aspect ratio.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/src/components/ScalarIcon/README.md#2025-04-22_snippet_2\n\nLANGUAGE: svg\nCODE:\n```\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"20px\" viewBox=\"0 0 24 20\" fill=\"currentColor\">\n    <path d=\"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\" />\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar API Reference React Package\nDESCRIPTION: This command installs the Scalar API Reference package for React using PNPM.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/react.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @scalar/api-reference-react\n```\n\n----------------------------------------\n\nTITLE: NextJS OpenAPI Package Changelog Entry\nDESCRIPTION: Markdown changelog documenting version history, dependency updates, and changes for the @scalar/nextjs-openapi package\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/nextjs-openapi/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/nextjs-openapi\n\n## 0.1.11\n\n### Patch Changes\n\n- Updated dependencies [17e7d02]\n  - @scalar/types@0.1.9\n  - @scalar/nextjs-api-reference@0.7.10\n```\n\n----------------------------------------\n\nTITLE: Version 0.6.20 Changelog Entry in Markdown\nDESCRIPTION: Lists the changes in version 0.6.20, noting updates to the @scalar/api-reference dependency.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-react/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.6.20\n\n### Patch Changes\n\n- Updated dependencies [363276e]\n- Updated dependencies [28f9909]\n- Updated dependencies [abad2e9]\n  - @scalar/api-reference@1.28.23\n```\n\n----------------------------------------\n\nTITLE: Building Static Content for Docusaurus Website\nDESCRIPTION: Command to generate static website content into the 'build' directory that can be served using any static contents hosting service.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Managing Docker Snapshots\nDESCRIPTION: Commands for retrieving container ID and copying snapshots from Docker container to local filesystem\nSOURCE: https://github.com/scalar/scalar/blob/main/playwright/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps -alq\ndocker cp <CONTAINER_ID>:/app/playwright/tests/ ./\n```\n\n----------------------------------------\n\nTITLE: Installing @scalar/use-codemirror package\nDESCRIPTION: Command to install the @scalar/use-codemirror package using npm. This is a prerequisite for using the CodeMirror hook in a Vue project.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-codemirror/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @scalar/use-codemirror\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry - Version Updates\nDESCRIPTION: Documents dependency updates with associated commit references affecting multiple @scalar packages.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [e8a7f82]\n- Updated dependencies [c16413d]\n- Updated dependencies [b9a7a4e]\n  - @scalar/api-client@2.0.11\n  - @scalar/api-reference@1.24.34\n  - @scalar/oas-utils@0.2.11\n  - @scalar/themes@0.9.12\n```\n\n----------------------------------------\n\nTITLE: Listing Patch Changes for Versions 0.3.4 to 0.3.1 in Markdown\nDESCRIPTION: Details patch changes for versions 0.3.4, 0.3.3, 0.3.2, and 0.3.1, including dependency adjustments and CSS-related updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.3.4\n\n### Patch Changes\n\n- 027012c8: fix: make nunjucks an external dependency\n\n## 0.3.3\n\n### Patch Changes\n\n- 6420305b: fix: only require nunjucks where it's needed\n- Updated dependencies [6420305b]\n  - @scalar/use-codemirror@0.3.1\n\n## 0.3.2\n\n### Patch Changes\n\n- de4ff38: feat: add a new @scalar/themes package to import the variables and custom scrollbar CSS\n- Updated dependencies [de4ff38]\n  - @scalar/themes@0.1.1\n\n## 0.3.1\n\n### Patch Changes\n\n- 0f345e4: fix: import CSS file from component, makes sure the CSS is included in the build\n```\n\n----------------------------------------\n\nTITLE: Creating a Markdown Page with Front Matter in Scalar\nDESCRIPTION: This snippet shows the structure of a simple Markdown page with YAML front matter for metadata. It includes a title in the front matter and a main heading with a brief explanation in the body.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/src/pages/markdown-page.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Markdown page example\n---\n\n# Markdown page example\n\nYou don't need React to write simple standalone pages.\n```\n\n----------------------------------------\n\nTITLE: Using Truncate Comment in Docusaurus\nDESCRIPTION: HTML comment syntax used to truncate blog post content in list views on Docusaurus sites.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/blog/2019-05-29-long-blog-post.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!-- truncate -->\n```\n\n----------------------------------------\n\nTITLE: Defining Blog Post Metadata in Markdown\nDESCRIPTION: This code snippet defines the front matter metadata for a blog post using YAML syntax. It includes the slug, title, author details, and tags for the post.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/blog/2019-05-28-first-blog-post.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: first-blog-post\ntitle: First Blog Post\nauthors:\n  name: Gao Wei\n  title: Docusaurus Core Team\n  url: https://github.com/wgao19\n  image_url: https://github.com/wgao19.png\ntags: [hola, docusaurus]\n---\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry - Version 1.25.12\nDESCRIPTION: Major version changelog detailing multiple feature additions and bug fixes including request examples, auth sync, and nested schema rendering\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.25.12\n\n### Patch Changes\n\n- 099233d: fix: request example code works for some examples only\n- 9d88423: feat: added one way auth sync from references to client\n- e15b021: feat: render deeply nested schemas, but not circular references\n- Updated dependencies [b8fdc19]\n- Updated dependencies [18c58af]\n- Updated dependencies [dd06d00]\n- Updated dependencies [7e5dfbb]\n- Updated dependencies [641c1ec]\n- Updated dependencies [b8fdc19]\n- Updated dependencies [9d88423]\n- Updated dependencies [88a4ec3]\n- Updated dependencies [674922f]\n- Updated dependencies [86e1f46]\n- Updated dependencies [44f3300]\n- Updated dependencies [7df5770]\n- Updated dependencies [a08aa37]\n- Updated dependencies [e15b021]\n- Updated dependencies [9269f5a]\n- Updated dependencies [73f728e]\n- Updated dependencies [ee22a82]\n- Updated dependencies [b8fdc19]\n- Updated dependencies [a002783]\n- Updated dependencies [9cd23e3]\n- Updated dependencies [c030024]\n- Updated dependencies [6fd83dc]\n- Updated dependencies [121bc7e]\n  - @scalar/api-client@2.1.0\n  - @scalar/oas-utils@0.2.44\n  - @scalar/openapi-parser@0.8.3\n  - @scalar/components@0.12.45\n  - @scalar/themes@0.9.30\n  - @scalar/code-highlight@0.0.11\n  - @scalar/types@0.0.9\n```\n\n----------------------------------------\n\nTITLE: Running Smoke Tests\nDESCRIPTION: Command to execute automated smoke tests to verify app functionality.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/RELEASE.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm todesktop:test\n```\n\n----------------------------------------\n\nTITLE: Creating SQLite Database File\nDESCRIPTION: Command to create an empty SQLite database file for the Laravel project.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ntouch database/database.sqlite\n```\n\n----------------------------------------\n\nTITLE: Configuring Standard Build Scripts in package.json\nDESCRIPTION: Default script configuration for non-Vue projects using Rollup build system with type checking, formatting, and linting capabilities.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/build-tooling/README.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"scripts\": {\n  \"build\": \"scalar-build-rollup\",\n  \"types:check\": \"scalar-types-check\",\n  \"types:build\": \"scalar-types-build\",\n  \"format:check\": \"scalar-format-check\",\n  \"format\": \"scalar-format\",\n  \"lint:check\": \"scalar-lint-check\",\n  \"lint:fix\": \"scalar-lint-fix\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Version history entries detailing changes across multiple releases of the Scalar project, including dependency updates, bug fixes, and new features.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.2.11\n\n### Patch Changes\n\n- @scalar/api-reference@1.20.8\n- @scalar/mock-server@0.1.9\n\n## 0.2.10\n\n### Patch Changes\n\n- Updated dependencies [1e658b0]\n- Updated dependencies [06c57ca]\n  - @scalar/api-reference@1.20.7\n  - @scalar/mock-server@0.1.8\n\n## 0.2.9\n\n### Patch Changes\n\n- @scalar/api-reference@1.20.6\n- @scalar/mock-server@0.1.7\n```\n\n----------------------------------------\n\nTITLE: Defining Front Matter in Markdown Documents\nDESCRIPTION: Example of front matter metadata at the top of a Markdown document. Front matter contains document metadata like ID, title, description, and custom URL slug.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n---\nid: my-doc-id\ntitle: My document title\ndescription: My document description\nslug: /my-custom-url\n---\n\n## Markdown heading\n\nMarkdown text with [links](./hello.md)\n```\n\n----------------------------------------\n\nTITLE: Docker Setup for Linux Snapshots\nDESCRIPTION: Commands for building and running Docker container to generate Linux-compatible snapshots on Mac\nSOURCE: https://github.com/scalar/scalar/blob/main/playwright/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t playwright-linux -f playwright/Dockerfile .\ndocker run --network=\"host\" -e HOST='host.docker.internal' -it playwright-linux:latest bash\n```\n\n----------------------------------------\n\nTITLE: Defining Blog Post Frontmatter in Markdown\nDESCRIPTION: YAML frontmatter block defining metadata for a blog post including slug, title, authors, and tags.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/blog/2019-05-29-long-blog-post.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\nslug: long-blog-post\ntitle: Long Blog Post\nauthors: endi\ntags: [hello, docusaurus]\n---\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.14 Changelog for Scalar API Reference\nDESCRIPTION: Documents patch changes for version 1.13.14, including exporting sidebar elements, fixing hotkey activation, and updating dependencies.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.14\n\n### Patch Changes\n\n- 455deefe: feat: export SidebarElement and SidebarGroup\n- 75e1cdf8: fix: only activate hotkey if component is active\n- Updated dependencies [75e1cdf8]\n  - @scalar/use-keyboard-event@0.5.8\n  - @scalar/api-client@0.9.3\n```\n\n----------------------------------------\n\nTITLE: Customizing Theme for Scalar API Reference in NestJS\nDESCRIPTION: Configuration example showing how to change the theme of the API reference documentation. Various predefined themes are available including alternate, default, moon, purple, and solarized.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { apiReference } from '@scalar/nestjs-api-reference'\n\napp.use(\n  '/reference',\n  apiReference({\n    theme: 'purple',\n    url: '/openapi.json',\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Integrating React Components with MDX in Markdown\nDESCRIPTION: Example of using MDX to integrate interactive React components within Markdown documentation, creating clickable colored highlights.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/markdown-features.mdx#2025-04-22_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\nexport const Highlight = ({children, color}) => (\n  <span\n    style={{\n      backgroundColor: color,\n      borderRadius: '20px',\n      color: '#fff',\n      padding: '10px',\n      cursor: 'pointer',\n    }}\n    onClick={() => {\n      alert(`You clicked the color ${color} with label ${children}`)\n    }}>\n    {children}\n  </span>\n);\n\nThis is <Highlight color=\"#25c2a0\">Docusaurus green</Highlight> !\n\nThis is <Highlight color=\"#1877F2\">Facebook blue</Highlight> !\n```\n\n----------------------------------------\n\nTITLE: Displaying ASCII Art Logo and Package Info for Scalar\nDESCRIPTION: Multi-line ASCII art representation of the 'SCALAR' text logo followed by package metadata including version information and relevant project links.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/license-banner-template.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/**\n *    _____ _________    __    ___    ____\n *   / ___// ____/   |  / /   /   |  / __ \\\n *   \\__ \\/ /   / /| | / /   / /| | / /_/ /\n *  ___/ / /___/ ___ |/ /___/ ___ |/ _, _/\n * /____/\\____/_/  |_/_____/_/  |_/_/ |_|\n *\n * {{ packageName }} {{ version }}\n *\n * Website: https://scalar.com\n * GitHub:  https://github.com/scalar/scalar\n * License: https://github.com/scalar/scalar/blob/main/LICENSE\n**/\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Grid in HTML\nDESCRIPTION: HTML table structure that displays contributor information in a grid format with aligned cells. Each cell contains a GitHub avatar image, profile link, and username displayed below.\nSOURCE: https://github.com/scalar/scalar/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\">\n    <a href=\"https://github.com/FotieMConstant\">\n        <img src=\"https://avatars.githubusercontent.com/u/42372656?v=4\" width=\"100;\" alt=\"FotieMConstant\"/>\n        <br />\n        <sub><b>FotieMConstant</b></sub>\n    </a>\n</td>\n```\n\n----------------------------------------\n\nTITLE: Generating a New Docusaurus Site with Classic Template\nDESCRIPTION: Command to create a new Docusaurus site using the classic template. This command also installs all necessary dependencies required to run Docusaurus.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/intro.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm init docusaurus@latest my-website classic\n```\n\n----------------------------------------\n\nTITLE: Testing a Docusaurus Production Build Locally\nDESCRIPTION: This command serves your production build locally so you can test it before deployment. The build folder is served at http://localhost:3000/.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/deploy-your-site.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run serve\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.10 Changelog for Scalar API Reference\nDESCRIPTION: Documents patch changes for version 1.13.10, including style fixes, Node 18 support, and various dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.10\n\n### Patch Changes\n\n- c9abbbc0: fix: classic scrollbar\n- 81543f42: chore: add support for Node 18\n- cca668a2: fix: styles on classic layout client libraries\n- Updated dependencies [81543f42]\n  - @scalar/use-keyboard-event@0.5.7\n  - @scalar/swagger-editor@0.9.8\n  - @scalar/swagger-parser@0.5.14\n  - @scalar/use-codemirror@0.7.19\n  - @scalar/use-clipboard@0.5.13\n  - @scalar/use-tooltip@0.5.8\n  - @scalar/api-client@0.9.2\n  - @scalar/components@0.2.2\n  - @scalar/use-toasts@0.5.13\n  - @scalar/use-modal@0.2.3\n  - @scalar/themes@0.5.4\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.1 Changelog for Scalar API Reference\nDESCRIPTION: Documents a patch change for version 1.13.1, adding space themes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.1\n\n### Patch Changes\n\n- 20790661: feat: add space themes\n```\n\n----------------------------------------\n\nTITLE: toDesktop Authentication Commands\nDESCRIPTION: Commands to authenticate with toDesktop platform and verify login status.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/RELEASE.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm todesktop login\npnpm todesktop whoami\n```\n\n----------------------------------------\n\nTITLE: Adding a Version Dropdown to Docusaurus Navigation\nDESCRIPTION: Configuration code to add a version dropdown menu to the Docusaurus navbar. This allows users to navigate between different documentation versions seamlessly.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/manage-docs-versions.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport default {\n  themeConfig: {\n    navbar: {\n      items: [\n        // highlight-start\n        {\n          type: 'docsVersionDropdown',\n        },\n        // highlight-end\n      ],\n    },\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Auth to API Client\nDESCRIPTION: This patch change adds support for multiple authentication methods to the API client.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- bf2895e: feat(api-client): add multiple auth to api client\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.6 Changelog for Scalar API Reference\nDESCRIPTION: Lists patch changes for version 1.13.6, including fixes for toggle icon functionality and improvements in displaying attribute properties.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.6\n\n### Patch Changes\n\n- b53b28c1: fix: toggle icon does not toggle\n- 460e25c0: feat: show/hide readOnly and writeOnly attributes in requests/responses\n```\n\n----------------------------------------\n\nTITLE: Using Window Location Origin for Servers\nDESCRIPTION: This patch fixes an issue by using the window location origin when no servers are specified.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- 7761630: fix: use window location origin if no servers\n```\n\n----------------------------------------\n\nTITLE: Configuring Document Metadata in Markdown\nDESCRIPTION: Shows how to add front matter metadata to a Docusaurus document to customize sidebar label and position.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-basics/create-a-document.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n---\nsidebar_label: 'Hi!'\nsidebar_position: 3\n---\n\n# Hello\n\nThis is my **first Docusaurus document**!\n```\n\n----------------------------------------\n\nTITLE: Displaying Version 0.7.1 Changes in Markdown\nDESCRIPTION: Lists patch changes for version 0.7.1, including new features, refactoring, and dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.7.1\n\n### Patch Changes\n\n- 75a69ba7: feat: add `theme` prop and improve theme support\n- 75a69ba7: refactor: rename @scalar/default-theme to @scalar/themes, add more themes\n- Updated dependencies [75a69ba7]\n- Updated dependencies [75a69ba7]\n  - @scalar/themes@0.3.2\n```\n\n----------------------------------------\n\nTITLE: Generating Scalar Icons\nDESCRIPTION: Command to run the icon generation script that creates Vue components from Phosphor Icons SVGs.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/icons/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm generate:icons\n```\n\n----------------------------------------\n\nTITLE: Revamping Address Bar\nDESCRIPTION: This feature update revamps the address bar in the API client interface.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- 1dab515: feat: revamp address bar\n```\n\n----------------------------------------\n\nTITLE: Changelog Version Updates in Markdown\nDESCRIPTION: A series of patch changes and dependency updates showing version history for the scalar/scalar project. Documents bug fixes, feature additions, and dependency version bumps.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [4fb6af9]\n- Updated dependencies [dc7b97c]\n  - @scalar/api-reference@1.16.2\n\n## 0.1.49\n\n### Patch Changes\n\n- Updated dependencies [997568b]\n  - @scalar/api-reference@1.16.1\n\n## 0.1.48\n\n### Patch Changes\n\n- 92a8b9f: chore: update dependencies\n- Updated dependencies [e0faebb]\n- Updated dependencies [92a8b9f]\n- Updated dependencies [230f9fb]\n- Updated dependencies [77c62d3]\n  - @scalar/api-reference@1.16.0\n```\n\n----------------------------------------\n\nTITLE: Generating Scalar Config Paths with Python\nDESCRIPTION: This Python script updates the scalar.config.json file by automatically generating paths for Markdown files in the 'docs' directory. It adds these files to the 'Guides' section of the configuration.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/migrate/stoplight.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport json\nfrom pathlib import Path\n\ndef update_scalar_config():\n    with open('scalar.config.json', 'r') as f:\n        config = json.load(f)\n\n    docs_dir = Path('docs')\n    md_files = list(docs_dir.glob('*.md'))\n\n    sidebar_entries = []\n    for md_file in md_files:\n      sidebar_entries.append({ \"path\": f\"docs/{md_file.name}\", \"type\": \"page\" })\n\n    for guide in config['guides']:\n      if guide['name'] == 'Guides':\n        guide['sidebar'] = sidebar_entries\n        break\n    else:\n      config['guides'].append({ \"name\": \"Guides\", \"sidebar\": sidebar_entries })\n\n    with open('scalar.config.json', 'w') as f:\n      json.dump(config, f, indent=2)\n\nif __name__ == '__main__':\n  update_scalar_config()\n```\n\n----------------------------------------\n\nTITLE: Deploying Docusaurus Website Using SSH\nDESCRIPTION: Command to deploy the website using SSH authentication. This builds the website and deploys it to the hosting service.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ USE_SSH=true yarn deploy\n```\n\n----------------------------------------\n\nTITLE: Fixing Workspace Cookies and YAML/JSON Parsing\nDESCRIPTION: This patch addresses issues with adding workspace cookies to requests and removes unnecessary YAML or JSON parsing before spec parsing.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- 9815191: fix: actually add workspace cookies to request\n- 869d255: fix: superfluous yaml or json parse before spec parsing\n```\n\n----------------------------------------\n\nTITLE: Documenting Version History in Markdown\nDESCRIPTION: This snippet shows the changelog format used for the @scalar/fetch package. It includes version numbers, change types (Patch, Minor), and brief descriptions of changes made in each version.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/fetch/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/fetch\n\n## 0.1.3\n\n### Patch Changes\n\n- e350f23: chore: code style\n\n## 0.1.2\n\n### Patch Changes\n\n- fa6afe8: chore: code formatting\n- 1223c1f: chore: code style\n\n## 0.1.1\n\n### Patch Changes\n\n- a40999d: chore: added type safety rule noUncheckedIndexedAccess\n\n## 0.1.0\n\n### Minor Changes\n\n- 241860b: feat: new @scalar/fetch package\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Detailed changelog entries showing version updates and dependency changes for Scalar packages\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [b00e50e]\n- Updated dependencies [df7372f]\n- Updated dependencies [55a3265]\n- Updated dependencies [6f0632e]\n- Updated dependencies [3023afe]\n- Updated dependencies [711ad03]\n- Updated dependencies [14ed31f]\n  - @scalar/api-client@2.0.47\n  - @scalar/api-reference@1.24.72\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar OpenAPI Parser with npm\nDESCRIPTION: Command to install the Scalar OpenAPI Parser package using npm.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm add @scalar/openapi-parser\n```\n\n----------------------------------------\n\nTITLE: Building Docusaurus Site for a Specific Locale\nDESCRIPTION: Builds the production version of the site for the French locale only, generating optimized assets for deployment.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/translate-your-site.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build -- --locale fr\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format Markdown\nDESCRIPTION: Standard changelog entry format showing package version, change type, and dependency updates\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [bfad6dc]\n- Updated dependencies [c8fae11]\n- Updated dependencies [6894b7d]\n- Updated dependencies [c87353e]\n- Updated dependencies [6894b7d]\n  - @scalar/api-reference@1.25.65\n  - @scalar/api-client@2.1.50\n  - @scalar/oas-utils@0.2.76\n```\n\n----------------------------------------\n\nTITLE: YAML Support Fix Entry\nDESCRIPTION: Documents a fix for YAML compatibility issue along with dependency updates\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/play-button/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- 3cac6f7: fix: does not work with YAML\n- Updated dependencies [6709507]\n- Updated dependencies [8f06fcd]\n- Updated dependencies [8f06fcd]\n- Updated dependencies [cdfb8c5]\n  - @scalar/api-client@2.0.5\n  - @scalar/themes@0.9.10\n  - @scalar/api-reference@1.24.28\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry - Latest Patch\nDESCRIPTION: Latest patch changelog entry showing dependency updates and bug fixes related to proxy URL configuration\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- 9486091: fix: respect the proxy url config\n- Updated dependencies [9351a90]\n- Updated dependencies [9486091]\n  - @scalar/api-client@2.1.1\n```\n\n----------------------------------------\n\nTITLE: Building Docusaurus Site with All Locales\nDESCRIPTION: Builds the production version of the site including all configured locales at once, generating a complete multilingual site for deployment.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/translate-your-site.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Version Updates and Dependency Changes for Scalar Packages\nDESCRIPTION: Lists package version updates, dependency changes, and feature/bug fix details across multiple releases. Includes changes to UI components, API client, parsers and utilities.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- 35dffe4: chore: include @scalar dependencies in the bundle\n- 5c66be8: chore: replace imports pointing to src with relative paths\n- Updated dependencies [35dffe4]\n- Updated dependencies [5c66be8]\n  - @scalar/use-keyboard-event@0.5.6\n  - @scalar/swagger-editor@0.7.10\n  - @scalar/swagger-parser@0.5.12\n  - @scalar/use-codemirror@0.7.15\n  - @scalar/use-clipboard@0.5.9\n  - @scalar/use-tooltip@0.5.7\n  - @scalar/api-client@0.7.34\n  - @scalar/use-toasts@0.5.9\n  - @scalar/use-modal@0.1.9\n```\n\n----------------------------------------\n\nTITLE: Creating a Docs Version in Docusaurus with Bash\nDESCRIPTION: Command to create a version 1.0 of your documentation in Docusaurus. This copies the 'docs' folder into 'versioned_docs/version-1.0' and creates a versions.json file.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/docs/tutorial-extras/manage-docs-versions.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run docusaurus docs:version 1.0\n```\n\n----------------------------------------\n\nTITLE: Scalar App Changelog Entries\nDESCRIPTION: Markdown changelog entries documenting version changes and dependency updates for the scalar-app project\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# scalar-app\n\n## 0.1.182\n\n### Patch Changes\n\n- Updated dependencies [3cb857d]\n- Updated dependencies [2b61d8e]\n- Updated dependencies [ab4cf5a]\n- Updated dependencies [3cb857d]\n  - @scalar/api-client@2.3.24\n  - @scalar/components@0.13.51\n  - @scalar/themes@0.10.1\n  - @scalar/import@0.3.17\n```\n\n----------------------------------------\n\nTITLE: Changelog Document in Markdown Format\nDESCRIPTION: A structured changelog documenting version updates, bug fixes, feature additions and changes to the OpenAPI parser library.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-parser/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/openapi-parser\n\n## 0.10.16\n\n### Patch Changes\n\n- c5047ee: fix: hotfix to revert the external reference commit\n\n## 0.10.15\n\n### Patch Changes\n\n- 4abe4f8: feat: add resolveInternalRefs to bundle documents\n- 4abe4f8: feat: external $ref's (absolute and relative URLs)\n\n## 0.10.14\n\n### Patch Changes\n\n- cf5bf65: fix: migrate file type, basic auth, parameters and responses headers correctly\n\n## 0.10.13\n\n### Patch Changes\n\n- d5a687f: fix: byte format is ignored when upgrading from OpenAPI 3.0 to OpenAPI 3.1\n\n## 0.10.12\n\n### Patch Changes\n\n- cbc1d08: fix: swagger 2.0 basePath is ignored, if there's no host\n\n## 0.10.11\n\n### Patch Changes\n\n- 0f13162: chore: enable more Biome flags, apply linter fixes\n\n## 0.10.10\n\n### Patch Changes\n\n- 0d8a24f: chore: remove Swagger 2.0 upgrade warning\n\n## 0.10.9\n\n### Patch Changes\n\n- c10bbf5: chore: code style\n\n## 0.10.8\n\n### Patch Changes\n\n- e350f23: chore: code style\n\n## 0.10.7\n\n### Patch Changes\n\n- 1223c1f: chore: code style\n\n## 0.10.6\n\n### Patch Changes\n\n- 4de3124: feat: make 'null' the second type in an array when upgrading\n- 34e6f52: feat: upgrade to stricter tsconfig\n\n## 0.10.5\n\n### Patch Changes\n\n- a30e7cc: fix: package doesn't work with `moduleResolution: NodeNext`\n\n## 0.10.4\n\n### Patch Changes\n\n- 64df4fc: fix: example arrays are transformed to objects\n\n## 0.10.3\n\n### Patch Changes\n\n- 8dce84f: Call `onDereference` after dereference process\n\n## 0.10.2\n\n### Patch Changes\n\n- 3791738: fix(openapi-parser): correct schema upgrade for \"format: binary\"\n\n## 0.10.1\n\n### Patch Changes\n\n- c263aaf: feat: better deal with empty OpenAPI documents\n\n## 0.10.0\n\n### Minor Changes\n\n- fbef0c3: fix(openapi-parser): improve performance\n\n### Patch Changes\n\n- fbef0c3: fix: doesn't validate files with external references\n\n## 0.9.0\n\n### Minor Changes\n\n- 6fef2f3: feat(openapi-parser): support `onDereference` option on `dereference`\n\n## 0.8.10\n\n### Patch Changes\n\n- 98e9cb2: feat: new `sanitize` utility to make documents OpenAPI-compliant\n\n## 0.8.9\n\n### Patch Changes\n\n- 757fade: fix: when migrating example to example objects, the example should be inside the value attribute\n- a607115: feat: add openapi 3.0.4 and openapi 3.1.1\n\n## 0.8.8\n\n### Patch Changes\n\n- 7323370: Allow relative URLs in v3.1 documents\n\n## 0.8.7\n\n### Patch Changes\n\n- 6394a5d: chore: switch to @scalar/build-tooling\n\n## 0.8.6\n\n### Patch Changes\n\n- d064a78: chore: make examples an array if it's in a schema\n- 3db9355: feat: upgrade Swagger 2.0 securityDefinitions\n\n## 0.8.5\n\n### Patch Changes\n\n- 983a5e4: feat: self reference the document\n- aee166c: fix: server URLs with variables are considered not valid\n\n## 0.8.4\n\n### Patch Changes\n\n- 96c921c: feat: upgrade Swagger 2.0 formData parameters\n\n## 0.8.3\n\n### Patch Changes\n\n- 674922f: chore: update fetch global tests\n\n## 0.8.2\n\n### Patch Changes\n\n- 6bb85a5: feat: `openapi()` returns dynamic types based on the chained commands\n\n## 0.8.1\n\n### Patch Changes\n\n- 5bd8337: feat: upgrade from Swagger 2.0 (experimental)\n\n## 0.8.0\n\n### Minor Changes\n\n- b4f9f97: feat: new @scalar/openapi-types package\n\n### Patch Changes\n\n- b4f9f97: feat: add literal versions to OpenAPI.Document types\n- b4f9f97: feat: types: allow to type custom extensions\n- b4f9f97: feat: types: allow any attribute in schemas\n- b231e7d: fix: upgrade returns correct OpenAPI document version type\n- b4f9f97: feat: expose more types under the OpenAPI namespace\n\n## 0.7.2\n\n### Patch Changes\n\n- 89dd0ef: feat: validate and dereference, throwOnError option\n\n## 0.7.1\n\n### Patch Changes\n\n- 5e2c2d1: fix: read files export is wrong\n\n## 0.7.0\n\n### Minor Changes\n\n- ec01324: refactor!: use dedicated entrypoints for the plugins\n\n### Patch Changes\n\n- c6944f2: fix: ajv import broken in CJS environments\n\n## 0.6.0\n\n### Minor Changes\n\n- 61252ab: refactor!: most functions return an object now\n\n### Patch Changes\n\n- c9dd499: feat: intercept fetch requests\n- 61252ab: fix: max call stack exceeded error\n\n## 0.5.0\n\n### Minor Changes\n\n- 10bd75c: chore: switch to rollup to make the library tree shakeable\n\n## 0.4.1\n\n### Patch Changes\n\n- 1023e0a: chore: reduce bundle size\n\n## 0.4.0\n\n### Minor Changes\n\n- 0b7d7be: refactor!: resolve is renamed to dereference\n- 63f72b4: refactor!: new OpenAPI types, removed the ResolvedOpenAPI types\n- 0b7d7be: refactor!: when using the pipeline syntax all tasks are queued and only executed when you add .get(), .toJson() or toYaml()\n- 56e7033: feat: file references\n- 0b7d7be: chore!: remove `loadFiles` utility, use `load` instead\n\n### Patch Changes\n\n- 03569c8: fix: existsSync is not a function\n- 6436ae1: refactor: resolve should resolve (and not validate)\n\n## 0.3.2\n\n### Patch Changes\n\n- 02ea440: fix: make errors easier to consume\n\n## 0.3.1\n\n### Patch Changes\n\n- 2498fc2: fix: make new parser behave like previous one on missing info.version\n\n## 0.3.0\n\n### Minor Changes\n\n- c28d766: fix: circular references can not be resolved\n- c28d766: fix: references inside references are not resolved\n- c28d766: refactor: rewrote the whole parser (again)\n\n### Patch Changes\n\n- 0e98fdb: chore: add light-weight browser polyfill to join paths\n\n## 0.2.0\n\n### Minor Changes\n\n- bf4568e: refactor: rewrite the whole package :)\n\n## 0.1.0\n\n### Minor Changes\n\n- fb3b15f: init :)\n```\n\n----------------------------------------\n\nTITLE: Interactive Button Component with React in MDX\nDESCRIPTION: A simple React button component that shows an alert message when clicked, demonstrating interactive elements in MDX blog posts.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/playground/blog/2021-08-01-mdx-blog-post.mdx#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<button onClick={() => alert('button clicked!')}>Click me!</button>\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar Project with JSON\nDESCRIPTION: This JSON snippet defines the configuration for a Scalar project, including subdomain, guides, and API references. It specifies the structure and locations of documentation files within the project.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/migrate/stoplight.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"subdomain\": \"very-cool-api\",\n  \"guides\": [\n    {\n      \"name\": \"Guides\",\n      \"sidebar\": [\n        {\n          \"path\": \"docs/How-to-be-cool.md\",\n          \"type\": \"page\"\n        }\n      ]\n    }\n  ],\n  \"references\": [\n\t\t{\n      \"name\": \"API Reference\",\n      \"path\": \"galaxy.json\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar plugin in Docusaurus (JavaScript)\nDESCRIPTION: This snippet shows how to configure the Scalar plugin in the Docusaurus configuration file using JavaScript. It includes setting the label, route, and OpenAPI document URL.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/docusaurus.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// docusaurus.config.js\n\n// …\n\nconst config = {\n  // …\n  plugins: [\n    [\n      '@scalar/docusaurus',\n      {\n        label: 'Scalar',\n        route: '/scalar',\n        configuration: {\n          // Put the URL to your OpenAPI document here:\n          url: 'https://cdn.jsdelivr.net/npm/@scalar/galaxy/dist/latest.json',\n        },\n      },\n    ],\n  ],\n}\n```\n\n----------------------------------------\n\nTITLE: Installing the Scalar Docusaurus plugin\nDESCRIPTION: This command installs the Scalar Docusaurus plugin using pnpm.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/docusaurus.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @scalar/docusaurus\n```\n\n----------------------------------------\n\nTITLE: Configuring Django Ninja with Scalar Viewer\nDESCRIPTION: Example showing how to set up Django Ninja API with Scalar documentation viewer. Demonstrates API initialization, route configuration, and URL pattern setup.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/django-ninja/README.md#2025-04-22_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom ninja import NinjaAPI\nfrom scalar_django_ninja import ScalarViewer\n\napi = NinjaAPI(\n    version=\"1.0.0\",\n    title=\"API Reference\",\n    description=\"API Reference for the Scalar Django Ninja Plugin\",\n    docs=ScalarViewer(),\n    docs_url=\"/docs/\",\n)\n\n@api.get(\"/add\")\ndef add(request, a: int, b: int):\n    return {\"result\": a + b}\n\n\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"api/\", api.urls),\n]\n```\n\n----------------------------------------\n\nTITLE: Creating a new Docusaurus project using pnpm\nDESCRIPTION: This command creates a new Docusaurus project with the classic template using pnpm.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/docusaurus.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm create create-docusaurus@latest my-awesome-website classic\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Content\nDESCRIPTION: Changelog entries detailing version updates and changes to the @scalar/openapi-types package, including feature additions, patches, and improvements.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/openapi-types/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/openapi-types\n\n## 0.2.0\n\n### Minor Changes\n\n- e62e677: feat: OpenAPI-compliant Zod Schemas\n\n### Patch Changes\n\n- 82f16a5: feat: add more Zod schemas for OpenAPI extensions\n\n## 0.1.9\n\n### Patch Changes\n\n- c10bbf5: chore: code style\n\n## 0.1.8\n\n### Patch Changes\n\n- e350f23: chore: code style\n\n## 0.1.7\n\n### Patch Changes\n\n- f9bf5f1: feat(api-reference): implement rendering of `patternProperties`\n\n## 0.1.6\n\n### Patch Changes\n\n- 13333e6: feat: add http methods\n\n## 0.1.5\n\n### Patch Changes\n\n- a607115: feat: add openapi 3.0.4 and openapi 3.1.1\n\n## 0.1.4\n\n### Patch Changes\n\n- 2b540b9: Include `3.0.3` in allowed OpenApiV3 versions\n\n## 0.1.3\n\n### Patch Changes\n\n- 8759e7f: chore: use build tooling scripts\n\n## 0.1.2\n\n### Patch Changes\n\n- e911047: Add default exports\n\n## 0.1.1\n\n### Patch Changes\n\n- dc9aff2: feat: expose HeadersObject\n\n## 0.1.0\n\n### Minor Changes\n\n- b4f9f97: feat: new @scalar/openapi-types package\n\n## 0.0.1\n\n### Patch Changes\n\n- a8db3b0: feat(openapi-types): add openapi-types package with temporary old parser types\n```\n\n----------------------------------------\n\nTITLE: Starting Next.js Development Server\nDESCRIPTION: Commands to navigate into the newly created project directory and start the Next.js development server.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/nextjs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd my-awesome-app\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Server URL for Scalar\nDESCRIPTION: This snippet shows how to configure a base URL that will be prepended to all relative server URLs defined in your OpenAPI document. This is useful when your API is deployed behind a reverse proxy.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/subpath-deployment.md#2025-04-22_snippet_3\n\nLANGUAGE: csharp\nCODE:\n```\napp.MapScalarApiReference(options => options.WithBaseServerUrl(\"https://api.example.com/my-api\"));\n```\n\n----------------------------------------\n\nTITLE: Updating Version 1.13.2 Changelog for Scalar API Reference\nDESCRIPTION: Lists patch changes for version 1.13.2, including the release of themes and related dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.13.2\n\n### Patch Changes\n\n- 6d777194: feat: release themes\n- Updated dependencies [6d777194]\n  - @scalar/swagger-editor@0.9.4\n  - @scalar/api-client@0.8.9\n  - @scalar/components@0.2.1\n  - @scalar/themes@0.5.2\n```\n\n----------------------------------------\n\nTITLE: Installing Scalar Nuxt Module\nDESCRIPTION: Command to install the Scalar module in a Nuxt application using npx.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nuxt/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx nuxi module add @scalar/nuxt\n```\n\n----------------------------------------\n\nTITLE: Documenting Changelog in Markdown\nDESCRIPTION: Documents version changes and dependency updates in a standardized changelog format. Shows patch changes, dependency versions, and associated commit references.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-editor/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [ad7fd7e]\n- Updated dependencies [1bb94c7]\n- Updated dependencies [f1b5390]\n- Updated dependencies [ad7fd7e]\n  - @scalar/oas-utils@0.2.11\n  - @scalar/api-client@2.0.9\n  - @scalar/api-reference@1.24.32\n\n## 0.1.12\n\n### Patch Changes\n\n- Updated dependencies [ba3f5cb]\n- Updated dependencies [d58841b]\n- Updated dependencies [0b6e3aa]\n- Updated dependencies [d58841b]\n- Updated dependencies [7662097]\n- Updated dependencies [f8982ed]\n  - @scalar/api-client@2.0.8\n  - @scalar/oas-utils@0.2.10\n  - @scalar/api-reference@1.24.31\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for FastAPI Scalar Plugin Example\nDESCRIPTION: Command to install all required dependencies for the Scalar FastAPI example project from the requirements.txt file.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/fastapi/playground/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom CDN for Scalar API Reference in NestJS\nDESCRIPTION: Example showing how to specify a custom CDN for loading Scalar's API reference resources, including how to pin to a specific version. The default CDN is jsdelivr.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/README.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { apiReference } from '@scalar/nestjs-api-reference'\n\napp.use(\n  '/reference',\n  apiReference({\n    cdn: 'https://cdn.jsdelivr.net/npm/@scalar/api-reference@latest',\n    content: OpenApiSpecification,\n  }),\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Page Title for Scalar API Reference\nDESCRIPTION: Example of setting a custom page title for the Scalar API Reference. This configuration option allows you to specify a custom title that will be displayed in the browser tab.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/hono/README.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Scalar } from '@scalar/hono-api-reference'\n\n// Set a page title\napp.get('/scalar', Scalar({\n  url: '/doc',\n  pageTitle: 'Awesome API',\n}))\n```\n\n----------------------------------------\n\nTITLE: Running NestJS Applications in Different Modes\nDESCRIPTION: Commands for running a NestJS application in development mode, watch mode for automatic reloading, and production mode.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nestjs/playground/nestjs-api-reference-express/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prod\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog Entries in Markdown\nDESCRIPTION: This snippet shows the structure of a changelog entry in Markdown format. It includes the version number, change type, and lists the specific changes or dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/examples/ssg/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.0.14\n\n### Patch Changes\n\n- Updated dependencies [fa34e17]\n- Updated dependencies [9e6cc67]\n  - @scalar/api-reference@1.2.1\n```\n\n----------------------------------------\n\nTITLE: Configuring Scalar with Custom Theme for Hono\nDESCRIPTION: Example of configuring the Scalar middleware with a custom theme. This snippet shows how to specify the 'purple' theme when setting up the middleware.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/hono/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Scalar } from '@scalar/hono-api-reference'\n\n// Switch the theme (or pass other options)\napp.get('/scalar', Scalar({\n  url: '/doc',\n  theme: 'purple',\n}))\n```\n\n----------------------------------------\n\nTITLE: Version 0.6.21 Changelog Entry in Markdown\nDESCRIPTION: Documents the changes in version 0.6.21, including dependency updates for @scalar/types and @scalar/api-reference packages.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference-react/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.6.21\n\n### Patch Changes\n\n- Updated dependencies [17e7d02]\n- Updated dependencies [17131a7]\n- Updated dependencies [17e7d02]\n  - @scalar/types@0.1.9\n  - @scalar/api-reference@1.28.24\n```\n\n----------------------------------------\n\nTITLE: Executing Changeset Command for Version Updates\nDESCRIPTION: Command to create changeset files that document package changes and intended semver bump types. Used to generate automated changelogs for npm package releases.\nSOURCE: https://github.com/scalar/scalar/blob/main/RELEASE.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm changeset\n```\n\n----------------------------------------\n\nTITLE: Using Options Pattern for Scalar Configuration\nDESCRIPTION: Demonstrates how to configure Scalar using the Options Pattern with method chaining.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/aspnetcore/docs/multiple-openapi-documents.md#2025-04-22_snippet_5\n\nLANGUAGE: csharp\nCODE:\n```\nbuilder.Services.Configure<ScalarOptions>(options =>\n{\n    // Method chaining with AddDocument\n    options\n      .AddDocument(\"v1\", \"Production API\")\n      .AddDocument(\"v2-beta\", \"Beta API\", \"beta/openapi.json\");\n});\n```\n\n----------------------------------------\n\nTITLE: Version Change Documentation in Markdown\nDESCRIPTION: Changelog entries documenting version changes and dependency updates over multiple releases. Follows semantic versioning format with patch changes.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/hono/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [81490fb]\n- Updated dependencies [18bb6a4]\n  - @scalar/api-reference@1.2.2\n```\n\n----------------------------------------\n\nTITLE: Releasing Scalar App\nDESCRIPTION: Combined commands to build and release the application using toDesktop\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm todesktop:build && pnpm todesktop:release\n```\n\n----------------------------------------\n\nTITLE: Component Contribution Checklist\nDESCRIPTION: Markdown checklist for contributing new components to the Scalar library\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/components/README.md#2025-04-22_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n## Component Checklist\n\n- [ ] Exported from `@scalar/components`\n- [ ] Has JSDocs for all:\n  - [ ] Components (with examples)\n  - [ ] Props\n  - [ ] Slots\n  - [ ] Emits\n  - [ ] Functions\n  - [ ] Types\n- [ ] Allows overriding of Tailwind classes where applicable (see useBindCx)\n- [ ] Has stories showcasing any applicable variants\n- [ ] Has unit tests covering any applicable interactions\n```\n\n----------------------------------------\n\nTITLE: Configuring Specific CDN Version\nDESCRIPTION: Example of pinning to a specific CDN version of the API reference package.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// app/reference/route.ts\nimport { ApiReference } from '@scalar/nextjs-api-reference'\n\nconst config = {\n  url: '/openapi.json',\n  cdn: 'https://cdn.jsdelivr.net/npm/@scalar/api-reference@latest',\n}\n\nexport const GET = ApiReference(config)\n```\n\n----------------------------------------\n\nTITLE: Releasing App on toDesktop\nDESCRIPTION: Command to release and roll out the new version to users on toDesktop platform.\nSOURCE: https://github.com/scalar/scalar/blob/main/projects/scalar-app/RELEASE.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm todesktop:release\n```\n\n----------------------------------------\n\nTITLE: Installing Laravel Scribe Package\nDESCRIPTION: Composer command to install the Laravel Scribe package as a development dependency with all its dependencies.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require --dev --with-all-dependencies knuckleswtf/scribe\n```\n\n----------------------------------------\n\nTITLE: Publishing Laravel Scribe Configuration\nDESCRIPTION: Artisan command to publish Laravel Scribe's configuration files to the project folder.\nSOURCE: https://github.com/scalar/scalar/blob/main/documentation/integrations/laravel-scribe.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nphp artisan vendor:publish --tag=scribe-config\n```\n\n----------------------------------------\n\nTITLE: Pulling Scalar API Reference Docker Image\nDESCRIPTION: Command to pull the latest Scalar API Reference Docker image from Docker Hub.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/docker/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull scalarapi/api-reference:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring API Reference with Static Content\nDESCRIPTION: Example of configuring the API reference using a static OpenAPI specification.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/nextjs/README.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst config = {\n  content: '{ \"openapi\": \"3.1.1\", … }',\n}\n```\n\n----------------------------------------\n\nTITLE: Running the Docusaurus Example Playground\nDESCRIPTION: Command to run the example playground for testing the Scalar Docusaurus plugin integration.\nSOURCE: https://github.com/scalar/scalar/blob/main/integrations/docusaurus/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run playground\n```\n\n----------------------------------------\n\nTITLE: Rendering GitHub Contributors Table in HTML\nDESCRIPTION: This HTML snippet creates a table to display GitHub contributors. Each row contains up to 6 contributors, showing their avatar, username, and a link to their profile. The table is structured for easy readability and visual appeal.\nSOURCE: https://github.com/scalar/scalar/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<tr>\n    <td align=\"center\">\n        <a href=\"https://github.com/mouhannad-sh\">\n            <img src=\"https://avatars.githubusercontent.com/u/18495740?v=4\" width=\"100;\" alt=\"mouhannad-sh\"/>\n            <br />\n            <sub><b>mouhannad-sh</b></sub>\n        </a>\n    </td>\n    <td align=\"center\">\n        <a href=\"https://github.com/matthyk\">\n            <img src=\"https://avatars.githubusercontent.com/u/53833818?v=4\" width=\"100;\" alt=\"matthyk\"/>\n            <br />\n            <sub><b>matthyk</b></sub>\n        </a>\n    </td>\n    <!-- ... more contributors ... -->\n</tr>\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: Documents version history of @scalar/void-server package including major, minor and patch changes across multiple releases. Notable features include Hono logger integration, server-side events, and various format-specific response handlers.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/void-server/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/void-server\n\n## 2.1.0\n\n### Minor Changes\n\n- e489824: feat: use hono logger\n\n### Patch Changes\n\n- e489824: feat: add /stream for server side events\n\n## 2.0.17\n\n### Patch Changes\n\n- 238c8e8: fix: void server docker deployment\n\n## 2.0.16\n\n### Patch Changes\n\n- fc6a45e: refactor: use stricter TS config\n\n## 2.0.15\n\n### Patch Changes\n\n- fa6afe8: chore: code formatting\n- 1223c1f: chore: code style\n\n## 2.0.14\n\n### Patch Changes\n\n- ad75a55: fix: doesn't reply with xml header\n\n## 2.0.13\n\n### Patch Changes\n\n- a40999d: chore: added type safety rule noUncheckedIndexedAccess\n\n## 2.0.12\n\n### Patch Changes\n\n- e911047: Add default exports\n\n## 2.0.11\n\n### Patch Changes\n\n- 8380788: feat: query parameter arrays\n\n## 2.0.10\n\n### Patch Changes\n\n- a8fc60d: feat: respond with no content for /204\n\n## 2.0.9\n\n### Patch Changes\n\n- 1e77c9d: fix: file undefined (Node 18)\n\n## 2.0.8\n\n### Patch Changes\n\n- 1c5e924: chore: remove node:buffer import\n- f4e0edc: fix: wrong directory in package.json\n\n## 2.0.7\n\n### Patch Changes\n\n- a28ba3b: chore: remove undici dependency\n\n## 2.0.6\n\n### Patch Changes\n\n- 9b035b0: chore: remove stale packages\n\n## 2.0.5\n\n### Patch Changes\n\n- 796717d: fix: Node 18 does not have File\n\n## 2.0.4\n\n### Patch Changes\n\n- 122b1ea: feat: force json responses for all paths ending with .json\n- 122b1ea: feat: force xml responses for all paths ending with .xml\n\n## 2.0.3\n\n### Patch Changes\n\n- 1a5b8af: feat: form data and multipart form data\n- 0bc904e: feat: routes for all HTTP errors e.g. /503\n\n## 2.0.2\n\n### Patch Changes\n\n- 94e68ab: chore: upgrade typescript to 5.5\n\n## 2.0.1\n\n### Patch Changes\n\n- 4999486: feat: html and xml responses\n\n## 2.0.0\n\n### Major Changes\n\n- 1af9124: init\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format in Markdown\nDESCRIPTION: Standard changelog entry format showing version numbers, patch changes, and dependency updates using markdown formatting\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Patch Changes\n\n- Updated dependencies [1305f28]\n- Updated dependencies [4ba9fed]\n- Updated dependencies [742ef52]\n- Updated dependencies [46a3a94]\n- Updated dependencies [bf35da5]\n- Updated dependencies [ab5d017]\n- Updated dependencies [484bd33]\n- Updated dependencies [bf35da5]\n  - @scalar/api-reference@1.22.39\n  - @scalar/mock-server@0.1.65\n```\n\n----------------------------------------\n\nTITLE: HTML Table Layout for Project Contributors\nDESCRIPTION: A responsive HTML table structure displaying contributor information including GitHub avatars, usernames, and profile links. The table is organized in rows of 6 contributors each with centered alignment.\nSOURCE: https://github.com/scalar/scalar/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n\t<tbody>\n\t\t<tr>\n            <td align=\"center\">\n                <a href=\"https://github.com/hanspagel\">\n                    <img src=\"https://avatars.githubusercontent.com/u/1577992?v=4\" width=\"100;\" alt=\"hanspagel\"/>\n                    <br />\n                    <sub><b>hanspagel</b></sub>\n                </a>\n            </td>\n            <!-- Additional contributor cells follow same pattern -->\n\t\t</tr>\n\t</tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry\nDESCRIPTION: Changelog entry documenting version history and changes for the @scalar/themes package, including dependency updates, feature additions, and bug fixes.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/themes/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/themes\n\n## 0.10.1\n\n### Patch Changes\n\n- Updated dependencies [17e7d02]\n  - @scalar/types@0.1.9\n\n## 0.10.0\n\n### Minor Changes\n\n- feaa314: feat(themes): add laserwave theme\n\n### Patch Changes\n\n- Updated dependencies [feaa314]\n  - @scalar/types@0.1.8\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog\nDESCRIPTION: Complete changelog tracking version history from 0.3.0 to 0.7.9, including patch changes, minor changes, and associated commit references.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/use-toasts/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/use-toasts\n\n## 0.7.9\n\n### Patch Changes\n\n- fa6afe8: chore: code formatting\n\n## 0.7.8\n\n### Patch Changes\n\n- 66bc910: chore: update build process\n\n## 0.7.7\n\n### Patch Changes\n\n- 0c34a18: chore: updated vue package to 3.5\n\n## 0.7.6\n\n### Patch Changes\n\n- ad89ca3: fix: autprefixer warnings\n\n## 0.7.5\n\n### Patch Changes\n\n- db92a85: fix(use-toasts): set parent class for scalar toasts\n\n## 0.7.4\n\n### Patch Changes\n\n- 94e68ab: chore: upgrade typescript to 5.5\n\n## 0.7.3\n\n### Patch Changes\n\n- b981770: chore: introduce the new @scalar/api-reference-editor\n\n## 0.7.2\n\n### Patch Changes\n\n- a2cb3c3: Migrate away from unintended peer dependencies\n\n## 0.7.1\n\n### Patch Changes\n\n- e0fc110: chore: patch bump all package\n\n## 0.7.0\n\n### Minor Changes\n\n- 7f8ef74: chore: remove aliasing\n\n### Patch Changes\n\n- b38c7ed: Update build configs to a standardized format\n- 6fbb57e: feat: release all the packages\n\n## 0.6.7\n\n### Patch Changes\n\n- cc5402c: feat: support for descriptions\n\n## 0.6.6\n\n### Patch Changes\n\n- 670156e: chore: bump packages\n\n## 0.6.5\n\n### Patch Changes\n\n- 2e7b074: feat: clean up toast styles and colors\n\n## 0.6.4\n\n### Patch Changes\n\n- 45dc04b: fix: can't release packages\n\n## 0.6.3\n\n### Patch Changes\n\n- 05e2e27: chore: add provenance statement\n\n## 0.6.2\n\n### Patch Changes\n\n- b234d1d: feat: added two events to standalone references build with tests\n\n## 0.6.1\n\n### Patch Changes\n\n- a8c3045: build: re-introduce @scalar/use-toasts package\n\n## 0.5.15\n\n### Patch Changes\n\n- c6b95ca: chore: upgrade from Vite 4 to Vite 5\n\n## 0.5.14\n\n### Patch Changes\n\n- 92a8b9f: chore: update dependencies\n\n## 0.5.13\n\n### Patch Changes\n\n- 81543f42: chore: add support for Node 18\n\n## 0.5.12\n\n### Patch Changes\n\n- 5ca138ee: - Removed activeBreadCrumb from api-client as its available in the slot\n  - Centralized navigation logic\n  - use proper anchor navigation instead of scrollIntoView, it will also be saved to history\n  - scrolling down will open the next section\n\n## 0.5.11\n\n### Patch Changes\n\n- d1caa4ee: fix: self contain app and toast containers + size changing fix\n\n## 0.5.10\n\n### Patch Changes\n\n- f9bfa97: feat: add buttons to header for classic layout\n\n## 0.5.9\n\n### Patch Changes\n\n- 35dffe4: chore: include @scalar dependencies in the bundle\n\n## 0.5.8\n\n### Patch Changes\n\n- c3b215f: chore: no pinned peer dependency versions\n\n## 0.5.7\n\n### Patch Changes\n\n- 55246e5: chore: rewrite all package.jsons (including their prod, dev and peer dependency requirements)\n\n## 0.5.6\n\n### Patch Changes\n\n- 2eba4010: Refactor and simplify API references layout\n\n## 0.5.5\n\n### Patch Changes\n\n- af4ec8d3: update discord links\n\n## 0.5.4\n\n### Patch Changes\n\n- 1cbcabd7: lots of amazing fixes from when we missed last patch\n\n## 0.5.3\n\n### Patch Changes\n\n- cd5f2685: codemirror colors + font fixes throughout app\n\n## 0.5.2\n\n### Patch Changes\n\n- 048555c6: feat: add CHANGELOG.md to the package\n\n## 0.5.1\n\n### Patch Changes\n\n- addd9fa2: feat: use `default` prefix for all CSS variables\n\n## 0.5.0\n\n### Minor Changes\n\n- 87fda5af: chore: update dependencies\n\n### Patch Changes\n\n- ef080a26: chore: format package.json\n\n## 0.4.1\n\n### Patch Changes\n\n- 10498d9d: chore: add README\n- 494083a0: add more information to the package.json\n\n## 0.4.0\n\n### Minor Changes\n\n- 5057e213: make npm packages public :-)\n\n## 0.3.0\n\n### Minor Changes\n\n- b0f5221: manually releasing all packages to make sure the lastest version is on npm\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog for @scalar/icons in Markdown\nDESCRIPTION: This snippet shows the complete changelog for the @scalar/icons package, detailing version changes, new features, and updates to dependencies. It includes information about the addition of Phosphor icons and various documentation improvements.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/icons/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalar/icons\n\n## 0.3.0\n\n### Minor Changes\n\n- 49f1297: feat(icons): generate phosphor icons\n\n### Patch Changes\n\n- 2b61d8e: docs(icons): update docs and storybook\n- Updated dependencies [2b61d8e]\n  - @scalar/use-hooks@0.1.43\n\n## 0.2.0\n\n### Minor Changes\n\n- 363276e: feat(icons): add Phosphor icons to @scalar/icons\n\n### Patch Changes\n\n- Updated dependencies [363276e]\n  - @scalar/use-hooks@0.1.42\n\n## 0.1.3\n\n### Patch Changes\n\n- fa6afe8: chore: code formatting\n\n## 0.1.2\n\n### Patch Changes\n\n- 841283d: feat: add list of icons to the README\n- ecdb3bc: stye: updates library icons\n\n## 0.1.1\n\n### Patch Changes\n\n- 0c34a18: chore: updated vue package to 3.5\n\n## 0.1.0\n\n### Minor Changes\n\n- dc20180: feat: init\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.4.0 Changes in Markdown\nDESCRIPTION: Records minor changes for version 0.4.0, making npm packages public, along with corresponding dependency updates.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-client/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n## 0.4.0\n\n### Minor Changes\n\n- 5057e213: make npm packages public :-)\n\n### Patch Changes\n\n- Updated dependencies [5057e213]\n  - @scalar/themes@0.2.0\n  - @scalar/use-codemirror@0.4.0\n  - @scalar/use-keyboard-event@0.4.0\n```\n\n----------------------------------------\n\nTITLE: Adding Empty State and Drafts Collection\nDESCRIPTION: This feature addition introduces an empty state and drafts collection to the API client.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/oas-utils/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- 1a675be: feat: add empty state + drafts collection\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entries\nDESCRIPTION: Release notes detailing version changes from 0.1.0 through 0.1.1, including initial release, user permission updates, and Docker image creation.\nSOURCE: https://github.com/scalar/scalar/blob/main/packages/api-reference/docker/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @scalarapi/api-reference\n\n## 0.1.0\n\n### Minor Changes\n\n- 651e0cf: chore: trigger initial release\n\n## 0.1.1\n\n### Patch Changes\n\n- aae3f72: chore: execute command as a non-root user\n\n## 0.1.0\n\n### Minor Changes\n\n- 05a9c70: feat: new scalarapi/api-reference Docker image\n```"
  }
]
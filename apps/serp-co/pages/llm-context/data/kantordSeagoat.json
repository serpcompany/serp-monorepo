[
  {
    "owner": "kantord",
    "repo": "seagoat",
    "content": "TITLE: Installing SeaGOAT using pipx\nDESCRIPTION: This command installs SeaGOAT using pipx, a tool for installing and managing Python applications in isolated environments. Dependencies like Python 3.11 or newer and ripgrep must be pre-installed.  The output is the installed seagoat executable in your environment.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npipx install seagoat\n```\n\n----------------------------------------\n\nTITLE: Starting SeaGOAT Server\nDESCRIPTION: This command starts the SeaGOAT server, specifying the repository path to be indexed. It requires ripgrep and Python 3.11 or newer. The server indexes the files in the specified path, enabling semantic code search. The output indicates server start-up and indexing progress.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nseagoat-server start /path/to/your/repo\n```\n\n----------------------------------------\n\nTITLE: Stopping SeaGOAT server\nDESCRIPTION: This command stops the SeaGOAT server, taking the repository path as an argument. This ensures that the server is shut down gracefully, releasing resources.  It requires the repository path used during the server start. The output confirms the server is stopped.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nseagoat-server stop /path/to/your/repo\n```\n\n----------------------------------------\n\nTITLE: Retrieving active SeaGOAT servers information with CLI (bash)\nDESCRIPTION: Command to retrieve detailed JSON-formatted information about all active SeaGOAT-server instances running locally. Outputs include the SeaGOAT version, global cache and config file locations, and information on running servers such as host, port, server address, cache locations, and status flags. The output enables clients to discover available servers to connect with for querying.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nseagoat-server server-info\n```\n\n----------------------------------------\n\nTITLE: Querying code lines via SeaGOAT-server HTTP API with curl (bash)\nDESCRIPTION: Shows how to perform a POST HTTP request using curl to query code lines from a running SeaGOAT-server. The JSON payload specifies the search query text, a limit clue number estimating how many results to return, and the number of context lines to retrieve above and below each result. The snippet requires the server address discovered from the server-info command and sets the appropriate JSON content-type header.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST 'http://localhost:34743/lines/query' \\\n-H 'Content-Type: application/json' \\\n-d '{\n      \"queryText\": \"your_query_here\",\n      \"limitClue\": \"500\",\n      \"contextAbove\": 3,\n      \"contextBelow\": 3\n    }'\n```\n\n----------------------------------------\n\nTITLE: Example JSON response for querying code lines (json)\nDESCRIPTION: Example of the JSON response returned from a lines query API call. It contains versioning information and a 'results' array where each element represents a file with its relative and absolute paths, an overall relevance score, and an array of code blocks. Each code block includes its own score, lines with individual scores, line numbers, text, and categorized result types like 'result' or 'context'. This provides detailed context for matching code sections related to the query.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"results\": [\n    {\n      \"path\": \"tests/conftest.py\",\n      \"fullPath\": \"/home/user/repos/SeaGOAT/tests/conftest.py\",\n      \"score\": 0.6,\n      \"blocks\": [\n        {\n          \"score\": 0.21,\n          \"lines\": [\n            {\n              \"score\": 0.21,\n              \"line\": 100,\n              \"lineText\": \"def very_relevant_function():\",\n              \"resultTypes\": [\n                \"result\"\n              ]\n            }\n          ],\n          \"lineTypeCount\": {\n            \"result\": 1\n          }\n        },\n        {\n          \"score\": 0.6,\n          \"lines\": [\n            {\n              \"score\": 0.6,\n              \"line\": 489,\n              \"lineText\": \" contents=(\\\"hello()\\\\n\\\" * (i % 50)),\",\n              \"resultTypes\": [\n                \"result\"\n              ]\n            },\n            {\n              \"score\": 0.84,\n              \"line\": 490,\n              \"lineText\": \"     return foo * bar\",\n              \"resultTypes\": [\n                \"result\"\n              ]\n            }\n          ],\n          \"lineTypeCount\": {\n            \"result\": 1\n          }\n        }\n      ]\n    },\n    {\n      \"path\": \"tests/test_cli.py\",\n      \"fullPath\": \"/home/user/repos/SeaGOAT/tests/test_cli.py\",\n      \"score\": 0.87,\n      \"blocks\": [... etc ... ]\n    },\n    ... etc ...\n  ],\n  \"version\": \"0.26.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Querying with gt command\nDESCRIPTION: This command searches the repository using the 'gt' command (or 'seagoat'), utilizing the running SeaGOAT server. It takes a search query string as input. It returns search results based on semantic understanding of the codebase, powered by vector embeddings.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngt \"Where are the numbers rounded\"\n```\n\n----------------------------------------\n\nTITLE: Example JSON response for querying code files (json)\nDESCRIPTION: Sample JSON response listing files matching the query. Each result contains the relative 'path' and absolute 'fullPath' of files within the repository. The 'version' indicates the SeaGOAT software version. This output helps integrate file-level search results in applications.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"results\": [\n        {\n            \"fullPath\": \"tests/conftest.py\",\n            \"path\": \"tests/conftest.py\"\n        },\n        {\n            \"fullPath\": \"tests/test_cli.py\",\n            \"path\": \"tests/test_cli.py\"\n        },\n        {\n            \"fullPath\": \"tests/test_result.py\",\n            \"path\": \"tests/test_result.py\"\n        },\n        {\n            \"fullPath\": \"tests/test_file.py\",\n            \"path\": \"tests/test_file.py\"\n        },\n        {\n            \"fullPath\": \"tests/test_repository.py\",\n            \"path\": \"tests/test_repository.py\"\n        },\n        {\n            \"fullPath\": \"tests/test_source_ripgrep.py\",\n            \"path\": \"tests/test_source_ripgrep.py\"\n        },\n        {\n            \"fullPath\": \"docs/server.md\",\n            \"path\": \"docs/server.md\"\n        }\n    ],\n    \"version\": \"0.43.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Cloning SeaGOAT Repository using Git\nDESCRIPTION: Clones the SeaGOAT project repository from GitHub using Git and changes the current directory into the newly cloned project folder. This requires Git to be installed and configured.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ngit clone git@github.com:kantord/SeaGOAT.git\ncd SeaGOAT\n```\n\n----------------------------------------\n\nTITLE: Manually Running the Local SeaGOAT Client (gt) via Poetry\nDESCRIPTION: Executes the SeaGOAT command-line client (`gt`, also known as `seagoat`) using the locally developed version. `poetry run` ensures it uses the correct environment and local modifications for testing.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_10\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run gt\n```\n\n----------------------------------------\n\nTITLE: Combining Regex and Semantic Search with SeaGOAT\nDESCRIPTION: Illustrates using a regular expression (`db_.*`) combined with a natural language description ('that initializes database') within a SeaGOAT query. This allows for both pattern matching and semantic understanding in the search.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"function db_.* that initializes database\"\n```\n\n----------------------------------------\n\nTITLE: Manually Running All Pre-commit Checks (System-wide)\nDESCRIPTION: Manually triggers all configured pre-commit checks across all files in the repository. This assumes `pre-commit` is available in the system path or the active environment, potentially outside the Poetry-managed one. It's used to check the entire codebase.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_12\n\nLANGUAGE: Bash\nCODE:\n```\npre-commit run --all-files\n```\n\n----------------------------------------\n\nTITLE: Querying with regular expressions\nDESCRIPTION: This command allows searching using regular expressions with the 'gt' command (or 'seagoat').  It is used to find code based on pattern matching. It uses the same underlying seagoat server.  The output shows code snippets matching the regex pattern.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngt \"function calc_.* that deals with taxes\"\n```\n\n----------------------------------------\n\nTITLE: Install dependencies using poetry\nDESCRIPTION: This command installs the project dependencies using Poetry. This command is used to set up a local development environment after cloning the SeaGOAT repository. The dependencies are specified in the pyproject.toml file.  It installs all required Python packages, including those needed for testing and development.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npoetry install\n```\n\n----------------------------------------\n\nTITLE: Querying code files via SeaGOAT-server HTTP API with curl (bash)\nDESCRIPTION: Demonstrates how to perform a POST request to the SeaGOAT-server to search for entire code files matching a query. The payload defines the query string and a limit clue intended to guide the number of results (expressed in lines, though files are returned). This requires the server address from server-info and uses JSON payload and headers.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST 'http://localhost:34743/files/query' \\\n-H 'Content-Type: application/json' \\\n-d '{\n  \"queryText\": \"your_query_here\",\n  \"limitClue\": \"500\",\n}'\n```\n\n----------------------------------------\n\nTITLE: Updating mkdocs-material Dependency\nDESCRIPTION: This entry updates the mkdocs-material dependency to version 9.5.40. The commit hash is provided. This library is used for generating project documentation, and updating it ensures access to the latest themes, features, and improvements, with associated bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Updating pre-commit Dependency\nDESCRIPTION: This entry updates the pre-commit dependency to version 4. This dependency is used for managing and running pre-commit hooks. Updating it ensures compatibility with the latest tools and best practices, also incorporating bug fixes and improvements to the pre-commit framework.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Querying the Current Directory with SeaGOAT\nDESCRIPTION: Provides an example of using the `seagoat` command to query the codebase located in the current working directory. The `repo_path` argument is omitted, causing it to default to the current location.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\"\n```\n\n----------------------------------------\n\nTITLE: Updating python-semantic-release Action\nDESCRIPTION: This entry updates the python-semantic-release GitHub Action to version 9.10.1. The commit hash is provided. This ensures the project utilizes the latest semantic release features within the CI/CD pipeline.  This is essential for automated releases based on commit messages.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Adding Context Lines After SeaGOAT Results\nDESCRIPTION: Illustrates the use of the `--context-below` (or `-A`) option to include a specified number of lines of context *after* each search result block found by SeaGOAT. This example adds 5 lines of following context.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\" --context-below=5\n```\n\n----------------------------------------\n\nTITLE: Running tests in watch mode\nDESCRIPTION: This command runs tests in watch mode using Poetry and ptw. This provides continuous testing as files are modified. It automatically detects changes and reruns relevant tests.  It's the preferred method for development.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npoetry run ptw\n```\n\n----------------------------------------\n\nTITLE: Querying a Specific Repository Path with SeaGOAT\nDESCRIPTION: Shows how to specify a target repository path when using the `seagoat` command. The query 'myQuery' will be executed against the codebase located at '/path/to/my/repo'.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\" \"/path/to/my/repo\"\n```\n\n----------------------------------------\n\nTITLE: Updating jupyterlab-widgets Dependency\nDESCRIPTION: This entry updates the jupyterlab-widgets dependency to version 3.0.13. The commit hash is provided. This library is for JupyterLab widgets. The update ensures the project has the latest improvements and fixes for interactive widgets used within JupyterLab notebooks and environments.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_9\n\n\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.376. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_16\n\n\n\n----------------------------------------\n\nTITLE: Running Pytest in Watch Mode via Poetry\nDESCRIPTION: Starts pytest in watch mode (`ptw`, likely `pytest-watch`) using Poetry. This command continuously monitors project files and automatically re-runs all tests whenever a change is detected and saved.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run ptw\n```\n\n----------------------------------------\n\nTITLE: Updating syrupy Dependency\nDESCRIPTION: This entry updates the syrupy dependency to version 4.7.2. The commit hash is provided. syrupy is used for snapshot testing.  The update incorporates bug fixes and improvements for the snapshot testing capabilities.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_30\n\n\n\n----------------------------------------\n\nTITLE: Updating ksxgithub/github-actions-deploy-aur Action\nDESCRIPTION: This entry updates the ksxgithub/github-actions-deploy-aur action to version 3. The commit hash is provided. This action is used for deploying to the AUR. The update ensures compatibility with new features and potentially bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_31\n\n\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.375. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_42\n\n\n\n----------------------------------------\n\nTITLE: Testing all files\nDESCRIPTION: This command runs all tests in the project using pytest.  It provides a full test suite execution for checking the project's overall stability and functionality. The output includes the results of all tests.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npoetry run pytest .\n```\n\n----------------------------------------\n\nTITLE: Updating locust Dependency\nDESCRIPTION: This entry updates the locust dependency to version 2.31.2. The commit hash is provided. Locust is likely used for performance testing. Keeping this dependency current enables the project to leverage the latest performance testing features and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_47\n\n\n\n----------------------------------------\n\nTITLE: Adding Context Lines Before SeaGOAT Results\nDESCRIPTION: Shows how to use the `--context-above` (or `-B`) option to include a specified number of lines of context *before* each search result block found by SeaGOAT. This example adds 5 lines of preceding context.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\" --context-above=5\n```\n\n----------------------------------------\n\nTITLE: Updating mkdocs-material Dependency\nDESCRIPTION: This entry updates the mkdocs-material dependency to version 9.5.31. The commit hash is provided. This library is used for generating project documentation, and updating it ensures access to the latest themes, features, and improvements, with associated bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_48\n\n\n\n----------------------------------------\n\nTITLE: Updating setuptools Dependency\nDESCRIPTION: This entry updates the setuptools dependency to version 72.1.0. The commit hash is provided. setuptools is used for building and distributing Python packages.  The update guarantees the latest improvements and bug fixes for packaging.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_53\n\n\n\n----------------------------------------\n\nTITLE: Limiting SeaGOAT Result Lines\nDESCRIPTION: Demonstrates the use of the `--max-results` (or `-l`) option to limit the number of lines displayed in the SeaGOAT output. This example limits the output to a maximum of 5 lines, though full code blocks are prioritized.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\" --max-results=5\n```\n\n----------------------------------------\n\nTITLE: Updating pre-commit Dependency\nDESCRIPTION: This entry updates the pre-commit dependency to version 3.8.0. This dependency is used for managing and running pre-commit hooks. Updating it ensures compatibility with the latest tools and best practices, also incorporating bug fixes and improvements to the pre-commit framework.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_56\n\n\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version 0.5.5. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_59\n\n\n\n----------------------------------------\n\nTITLE: Running Project Tests with Pytest via Poetry\nDESCRIPTION: Executes the project's automated test suite using pytest. The command is prefixed with `poetry run` to ensure tests run within the Poetry-managed virtual environment with all dependencies available. Successful execution confirms the development environment setup.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run pytest\n```\n\n----------------------------------------\n\nTITLE: Updating actions/checkout Digest\nDESCRIPTION: This entry updates the actions/checkout action to digest eef6144. The commit hash is provided for tracking. This action is used to check out code from the repository. Updating to the latest digest ensures usage of recent code with possible bug fixes and feature improvements, enhancing the stability of the build process.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_6\n\n\n\n----------------------------------------\n\nTITLE: Updating codecov/codecov-action Digest\nDESCRIPTION: This entry updates the codecov/codecov-action action to digest b9fd7d1. The commit hash is provided. This action is responsible for submitting code coverage reports.  Keeping this updated ensures the accuracy and compatibility with the code coverage tool.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_8\n\n\n\n----------------------------------------\n\nTITLE: Running All Project Tests with Pytest via Poetry\nDESCRIPTION: Executes the complete project test suite using pytest within the Poetry environment. This command runs all tests found in the current directory (`.`).\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_7\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run pytest .\n```\n\n----------------------------------------\n\nTITLE: Updating mkdocs-material Dependency\nDESCRIPTION: This entry updates the mkdocs-material dependency to version 9.5.32. The commit hash is provided. This library is used for generating project documentation, and updating it ensures access to the latest themes, features, and improvements, with associated bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_12\n\n\n\n----------------------------------------\n\nTITLE: Updating mkdocs-material Dependency\nDESCRIPTION: This entry updates the mkdocs-material dependency to version 9.5.39. The commit hash is provided. This library is used for generating project documentation, and updating it ensures access to the latest themes, features, and improvements, with associated bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_14\n\n\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.377. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_17\n\n\n\n----------------------------------------\n\nTITLE: Updating pytest-asyncio Dependency\nDESCRIPTION: This entry updates the pytest-asyncio dependency to version ^0.24.0. The commit hash is provided.  This dependency is used for testing asynchronous code.  The update ensures use of the latest version compatible with other dependencies.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_21\n\n\n\n----------------------------------------\n\nTITLE: Manually Running the Local SeaGOAT Server via Poetry\nDESCRIPTION: Starts the SeaGOAT server application using the locally developed version. The `poetry run` prefix ensures the command executes within the project's virtual environment with all necessary dependencies and local code changes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_9\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run seagoat-server\n```\n\n----------------------------------------\n\nTITLE: Configuring SeaGOAT Server and Client Using YAML\nDESCRIPTION: This YAML snippet demonstrates an example configuration file for SeaGOAT, specifying server parameters such as the port number, maximum commits to read for frecency scoring, and patterns to ignore during processing. Additionally, it configures the client to connect to a remote SeaGOAT server by specifying the host URL. Dependencies include understanding of YAML syntax and SeaGOAT server environment. The input is a YAML file, and the output is SeaGOAT server and client behavior customized according to these settings.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/configuration.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n# .seagoat.yml\n\nserver:\n  port: 31134  # A port number to run the server on\n  # Increase number of commits used for computing frecency score\n  # Default is `1000`, set to `null` to read all history\n  readMaxCommits: 5000\n\n  # globs to ignore in addition to .gitignore\n  ignorePatterns:\n    - \"**/locales/*\" # Ignore all files inside 'locales' directories\n    - \"**/*.po\"     # Ignore all gettext translation files\n\nclient:\n  # Connect the CLI to a remove server\n  host: https://example.com/seagoat-instance/\n```\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version 0.6.2. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_26\n\n\n\n----------------------------------------\n\nTITLE: Updating pypa/gh-action-pypi-publish Digest\nDESCRIPTION: This entry updates the pypa/gh-action-pypi-publish digest to f760068. The commit hash is provided for tracking changes.  This action is for publishing the package to PyPI.  The update guarantees the latest features and bug fixes when publishing.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_36\n\n\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with Poetry\nDESCRIPTION: Uses Poetry to automatically create a virtual environment and install all project dependencies defined in the project's configuration file (likely `pyproject.toml`). Requires Poetry to be installed.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\npoetry install\n```\n\n----------------------------------------\n\nTITLE: Updating matplotlib Dependency\nDESCRIPTION: This entry updates the matplotlib dependency to version 3.9.2. The commit hash is provided. Matplotlib is a plotting library. The update provides access to the latest features and bug fixes for data visualization within the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_40\n\n\n\n----------------------------------------\n\nTITLE: Updating pyyaml Dependency\nDESCRIPTION: This entry updates the pyyaml dependency to version 6.0.2. The commit hash is provided. PyYAML is a library for parsing and emitting YAML. Keeping this dependency up to date ensures the project benefits from latest features and bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_44\n\n\n\n----------------------------------------\n\nTITLE: Manually Running All Pre-commit Checks via Poetry\nDESCRIPTION: Manually triggers all configured pre-commit checks across all files in the repository, executed within the Poetry environment. This is useful for checking the entire codebase or if pre-commit hooks are not installed.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run pre-commit run --all-files\n```\n\n----------------------------------------\n\nTITLE: Starting SeaGOAT-server with command-line interface (bash)\nDESCRIPTION: Illustrates how to start the SeaGOAT-server for a specified Git repository path using a shell command. Optionally, a custom port can be specified with '--port' to override the default or randomly assigned port. This snippet depends on having the 'seagoat-server' command installed and accessible from the shell environment. Inputs include the repository path and optional port; the server boots up to serve that repository for API requests.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nseagoat-server start <repo_path> [--port=<custom_port>]\n```\n\n----------------------------------------\n\nTITLE: Configuring ChromaDB Embedding Function in SeaGOAT (YAML)\nDESCRIPTION: This snippet shows how to configure the embedding function for ChromaDB within the SeaGOAT server configuration using YAML. It specifies the embedding function name and passes arguments to customize provider options, such as enabling the TensorRT execution provider for the ONNXMiniLM_L6_V2 model. Dependencies include familiarity with ChromaDB embedding configurations and available model options. The configuration adjusts how embeddings are generated for SeaGOAT features relying on ChromaDB.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/configuration.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nserver:\n  ...\n  chroma:\n    embedding_function:\n      name: \"ONNXMiniLM_L6_V2\"\n      arguments:\n        preferred_providers: [\"TensorrtExecutionProvider\"]\n```\n\n----------------------------------------\n\nTITLE: Manual testing of seagoat-server\nDESCRIPTION: This command manually tests the seagoat-server command by running it against a local repository.  It simulates the usage of the server start command.  It lets you test new changes or configurations in a development environment.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npoetry run seagoat-server start ~/path/an/example/repository\n```\n\n----------------------------------------\n\nTITLE: Configuring SeaGOAT with YAML\nDESCRIPTION: This code block demonstrates a `.seagoat.yml` configuration file used to customize SeaGOAT's behavior. This is done to personalize the server settings. Key parameters such as `port` can be defined for specific projects. It enables customization for different development workflows.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n# .seagoat.yml\n\nserver:\n  port: 31134  # Specify server port\n```\n\n----------------------------------------\n\nTITLE: Adding Context Lines Around SeaGOAT Results\nDESCRIPTION: Demonstrates using the `--context` (or `-C`) option as a shorthand to add the same number of context lines both *before* and *after* each search result block. This example adds 5 lines of context above and 5 lines below.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\" --context=5\n```\n\n----------------------------------------\n\nTITLE: Running Tests on Changed Files with Testmon via Poetry\nDESCRIPTION: Executes pytest using the `testmon` plugin within the Poetry environment. Testmon intelligently selects and runs only the tests affected by recent code changes, speeding up the testing cycle during development.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run pytest . --testmon\n```\n\n----------------------------------------\n\nTITLE: Basic SeaGOAT Command Syntax\nDESCRIPTION: Demonstrates the basic structure of the `seagoat` command, showing the required query argument, the optional repository path, and the placeholder for additional options. This command queries the SeaGOAT server for the specified query within the target repository.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nseagoat <query> [repo_path] [OPTIONS]\n```\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.374. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_49\n\n\n\n----------------------------------------\n\nTITLE: Updating Pytest Snapshots via Poetry\nDESCRIPTION: Runs pytest with the `--snapshot-update` flag within the Poetry environment. This command is used to update the stored snapshots for any snapshot tests that have changed, effectively accepting the new output as correct.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_8\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run pytest  --snapshot-update\n```\n\n----------------------------------------\n\nTITLE: Updating chromadb Dependency\nDESCRIPTION: This entry updates the chromadb dependency to version 0.5.12.  The commit hash is provided. ChromaDB is likely used for vector database operations.  Updating ensures that the project has the latest bug fixes and performance improvements for ChromaDB functionality.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_5\n\n\n\n----------------------------------------\n\nTITLE: Setting Up Pre-commit Hooks via Poetry\nDESCRIPTION: Installs pre-commit hooks for the repository using the pre-commit tool, executed within the Poetry environment. This command configures Git to automatically run configured checks (like linters and formatters) before each commit.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run pre-commit install\n```\n\n----------------------------------------\n\nTITLE: Testing changed files\nDESCRIPTION: This command runs pytest to test files changed since the last commit.  It leverages the pytest-testmon plugin to identify and execute only the relevant tests. This results in faster test runs during development cycles.  Output provides test results.\nSOURCE: https://github.com/kantord/seagoat/blob/main/README.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npoetry run pytest .  --testmon\n```\n\n----------------------------------------\n\nTITLE: Updating actions/setup-python Digest\nDESCRIPTION: This entry updates the actions/setup-python action to digest f677139. The commit hash is provided. This action sets up the Python environment. Keeping the action updated ensures access to the latest Python versions and dependency management features within the CI/CD workflow.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_7\n\n\n\n----------------------------------------\n\nTITLE: Starting IPython within the Poetry Environment\nDESCRIPTION: Launches an IPython interactive shell within the context of the Poetry-managed virtual environment. This provides an interactive Python prompt with access to all project dependencies and local code for debugging or experimentation.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/developer.md#_snippet_11\n\nLANGUAGE: Bash\nCODE:\n```\npoetry run ipython\n```\n\n----------------------------------------\n\nTITLE: Updating locust Dependency\nDESCRIPTION: This entry updates the locust dependency to version 2.30.0. The commit hash is provided. Locust is likely used for performance testing. Keeping this dependency current enables the project to leverage the latest performance testing features and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_45\n\n\n\n----------------------------------------\n\nTITLE: Disabling Output Color in SeaGOAT\nDESCRIPTION: Example of using the `--no-color` option with the `seagoat` command to disable syntax highlighting in the output. This is often automatically enabled when piping the output.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/usage.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nseagoat \"myQuery\" --no-color\n```\n\n----------------------------------------\n\nTITLE: Example JSON response showing running SeaGOAT servers (json)\nDESCRIPTION: An example JSON output illustrating the structure returned by the 'server-info' command. It includes global directory paths and nested objects mapping repositories to server metadata, showing their network binding, cache locations, run status, and accessible URL address. This response helps developers understand the server landscape on their machine.\nSOURCE: https://github.com/kantord/seagoat/blob/main/docs/server.md#_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"version\": \"0.5.3\",\n    \"globalCache\": \"/home/myuser/.cache/seagoat\",\n    \"globalConfigFile\": \"/home/myuser/.config/seagoat/config.yml\",\n    \"servers\": {\n        \"/path/to/repository/1\": {\n            \"cacheLocation\": {\n              \"chroma\": \"/home/myuser/.cache/seagoat/bfe8133b9e871ea1c8498a0\"\n            },\n            \"isRunning\": true,\n            \"host\": \"127.0.0.1\",\n            \"port\": \"8080\",\n            \"address\": \"http://127.0.0.1:8080\"\n        },\n        \"/path/to/repository/2\": {\n            \"cacheLocation\": {\n              \"chroma\": \"/home/myuser/.cache/seagoat/fbee39c83bd47a75e2f839\"\n            },\n            \"isRunning\": false,\n            \"host\": \"127.0.0.1\",\n            \"port\": \"8081\",\n            \"address\": \"http://127.0.0.1:8081\"\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating python-semantic-release Dependency\nDESCRIPTION: This entry updates the python-semantic-release dependency to version 9.10.1. The commit hash is provided. This library is used for automating versioning and release processes. Keeping this dependency up-to-date guarantees support for the latest features and fixes for the release management process.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Updating locust Dependency\nDESCRIPTION: This entry updates the locust dependency to version 2.31.1. The commit hash is provided. Locust is likely used for performance testing. Keeping this dependency current enables the project to leverage the latest performance testing features and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_46\n\n\n\n----------------------------------------\n\nTITLE: Updating chromadb Dependency\nDESCRIPTION: This entry updates the chromadb dependency to version 0.5.5.  The commit hash is provided. ChromaDB is likely used for vector database operations.  Updating ensures that the project has the latest bug fixes and performance improvements for ChromaDB functionality.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_60\n\n\n\n----------------------------------------\n\nTITLE: Updating pytest Dependency\nDESCRIPTION: This entry updates the pytest dependency to version 8.3.3. The commit hash is provided.  pytest is a testing framework.  The update brings the latest improvements and fixes for testing the project's code, ensuring reliability and quality.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_20\n\n\n\n----------------------------------------\n\nTITLE: Updating locust Dependency\nDESCRIPTION: This entry updates the locust dependency to version 2.31.8. The commit hash is provided. Locust is likely used for performance testing. Keeping this dependency current enables the project to leverage the latest performance testing features and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_11\n\n\n\n----------------------------------------\n\nTITLE: Updating syrupy Dependency\nDESCRIPTION: This entry updates the syrupy dependency to version 4.7.1. The commit hash is provided. syrupy is used for snapshot testing.  The update incorporates bug fixes and improvements for the snapshot testing capabilities.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_29\n\n\n\n----------------------------------------\n\nTITLE: Updating ipython Dependency\nDESCRIPTION: This entry updates the ipython dependency to version 8.28.0. The commit hash is provided for tracking changes. This update is crucial for security, bug fixes, or new features in ipython. It ensures the project benefits from the latest improvements and maintainability.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version ^0.6.0. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_24\n\n\n\n----------------------------------------\n\nTITLE: Updating pandas Dependency\nDESCRIPTION: This entry updates the pandas dependency to version 2.2.3. The commit hash is provided. pandas is a data manipulation library used in data science.  The update ensures use of the latest features and improvements for data analysis and manipulation within the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_15\n\n\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.383. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_18\n\n\n\n----------------------------------------\n\nTITLE: Updating orjson Dependency\nDESCRIPTION: This entry updates the orjson dependency to version 3.10.7. The commit hash is provided. orjson is a library for fast JSON serialization and deserialization. The update improves performance and compatibility.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_41\n\n\n\n----------------------------------------\n\nTITLE: Updating mkdocs-material Dependency\nDESCRIPTION: This entry updates the mkdocs-material dependency to version 9.5.33. The commit hash is provided. This library is used for generating project documentation, and updating it ensures access to the latest themes, features, and improvements, with associated bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_13\n\n\n\n----------------------------------------\n\nTITLE: Updating setuptools Dependency\nDESCRIPTION: This entry updates the setuptools dependency to version 72.2.0. The commit hash is provided. setuptools is used for building and distributing Python packages.  The update guarantees the latest improvements and bug fixes for packaging.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_39\n\n\n\n----------------------------------------\n\nTITLE: Updating python-semantic-release Dependency\nDESCRIPTION: This entry updates the python-semantic-release dependency to version 9.10.0. The commit hash is provided. This library is used for automating versioning and release processes. Keeping this dependency up-to-date guarantees support for the latest features and fixes for the release management process.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_22\n\n\n\n----------------------------------------\n\nTITLE: Updating python-semantic-release Action\nDESCRIPTION: This entry updates the python-semantic-release GitHub Action to version 9.8.7. The commit hash is provided. This ensures the project utilizes the latest semantic release features within the CI/CD pipeline.  This is essential for automated releases based on commit messages.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_37\n\n\n\n----------------------------------------\n\nTITLE: Updating locust Dependency\nDESCRIPTION: This entry updates the locust dependency to version 2.31.3. The commit hash is provided. Locust is likely used for performance testing. Keeping this dependency current enables the project to leverage the latest performance testing features and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_10\n\n\n\n----------------------------------------\n\nTITLE: Updating ksxgithub/github-actions-deploy-aur Action\nDESCRIPTION: This entry updates the ksxgithub/github-actions-deploy-aur action to version 3.0.1. The commit hash is provided. This action is used for deploying to the AUR. The update ensures compatibility with new features and potentially bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_32\n\n\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.384. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_19\n\n\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version 0.5.7. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_43\n\n\n\n----------------------------------------\n\nTITLE: Updating syrupy Dependency\nDESCRIPTION: This entry updates the syrupy dependency to version 4.6.3. The commit hash is provided. syrupy is used for snapshot testing.  The update incorporates bug fixes and improvements for the snapshot testing capabilities.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_28\n\n\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version 0.5.6. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_50\n\n\n\n----------------------------------------\n\nTITLE: Updating pypa/gh-action-pypi-publish Digest\nDESCRIPTION: This entry updates the pypa/gh-action-pypi-publish digest to 3697819. The commit hash is provided for tracking changes.  This action is for publishing the package to PyPI.  The update guarantees the latest features and bug fixes when publishing.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_34\n\n\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version 0.6.9. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_27\n\n\n\n----------------------------------------\n\nTITLE: Updating pytest Dependency\nDESCRIPTION: This entry updates the pytest dependency to version 8.3.2. The commit hash is provided.  pytest is a testing framework.  The update brings the latest improvements and fixes for testing the project's code, ensuring reliability and quality.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_58\n\n\n\n----------------------------------------\n\nTITLE: Updating pyright Dependency\nDESCRIPTION: This entry updates the pyright dependency to version 1.1.373. The commit hash is provided. pyright is a static type checker for Python. Keeping it up to date ensures the project benefits from the latest type checking features, bug fixes and improvements.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_57\n\n\n\n----------------------------------------\n\nTITLE: Updating ruff Dependency\nDESCRIPTION: This entry updates the ruff dependency to version 0.6.1. The commit hash is provided.  Ruff is a Python linter and formatter. The update incorporates bug fixes and enhancements to code style, helping maintain code quality and consistency across the project.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_25\n\n\n\n----------------------------------------\n\nTITLE: Updating snok/install-poetry Digest\nDESCRIPTION: This entry updates the snok/install-poetry action to digest 972a0e7. The commit hash is provided. This action sets up Poetry, a dependency management tool.  The update ensures the use of recent versions of Poetry and bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_52\n\n\n\n----------------------------------------\n\nTITLE: Updating mkdocs-material Dependency\nDESCRIPTION: This entry updates the mkdocs-material dependency to version 9.5.30. The commit hash is provided. This library is used for generating project documentation, and updating it ensures access to the latest themes, features, and improvements, with associated bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_55\n\n\n\n----------------------------------------\n\nTITLE: Updating snok/install-poetry Digest\nDESCRIPTION: This entry updates the snok/install-poetry action to digest 76e04a9. The commit hash is provided. This action sets up Poetry, a dependency management tool.  The update ensures the use of recent versions of Poetry and bug fixes.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_51\n\n\n\n----------------------------------------\n\nTITLE: Updating pypa/gh-action-pypi-publish Digest\nDESCRIPTION: This entry updates the pypa/gh-action-pypi-publish digest to 8a08d61. The commit hash is provided for tracking changes.  This action is for publishing the package to PyPI.  The update guarantees the latest features and bug fixes when publishing.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_35\n\n\n\n----------------------------------------\n\nTITLE: Updating setuptools Dependency\nDESCRIPTION: This entry updates the setuptools dependency to version 72. The commit hash is provided. setuptools is used for building and distributing Python packages.  The update guarantees the latest improvements and bug fixes for packaging.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_54\n\n\n\n----------------------------------------\n\nTITLE: Updating python-semantic-release Dependency\nDESCRIPTION: This entry updates the python-semantic-release dependency to version 9.8.7. The commit hash is provided. This library is used for automating versioning and release processes. Keeping this dependency up-to-date guarantees support for the latest features and fixes for the release management process.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_23\n\n\n\n----------------------------------------\n\nTITLE: Updating python-semantic-release Action\nDESCRIPTION: This entry updates the python-semantic-release GitHub Action to version 9.8.8. The commit hash is provided. This ensures the project utilizes the latest semantic release features within the CI/CD pipeline.  This is essential for automated releases based on commit messages.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_38\n\n\n\n----------------------------------------\n\nTITLE: Updating pypa/gh-action-pypi-publish Digest\nDESCRIPTION: This entry updates the pypa/gh-action-pypi-publish digest to 0ab0b79. The commit hash is provided for tracking changes.  This action is for publishing the package to PyPI.  The update guarantees the latest features and bug fixes when publishing.\nSOURCE: https://github.com/kantord/seagoat/blob/main/CHANGELOG.md#_snippet_33\n\n"
  }
]